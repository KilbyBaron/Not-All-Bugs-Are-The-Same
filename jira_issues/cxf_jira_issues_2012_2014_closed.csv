Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Outward issue link (Cloners),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Regression),Outward issue link (Regression),Outward issue link (Supercedes),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (CXF Fields),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Severity),Custom field (Severity),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Test and Documentation Plan),Custom field (Testcase included),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Won't pass verification of explicit WSS Policy AsymmetricBinding -> Layout -> Policy -> Lax,CXF-5609,12701059,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,modax,modax,12/Mar/14 18:43,11/Jul/14 12:50,14/Mar/19 02:30,13/Mar/14 16:49,2.6.13,2.7.10,,,,,,2.6.14,2.7.11,3.0,,WS-* Components,,,,0,,,,,,,,"Hello,

I can't seem to get CXF WS-* validator to accept a message for service which has <sp:Layout> <wsp:Policy> <sp:Lax /> policy explicitly defined in the WSDL. Maybe I'm missing something, but all I get is:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Body>
      <soap:Fault>
         <faultcode>soap:Server</faultcode>
         <faultstring>These policy alternatives can not be satisfied: 
{http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702}Layout</faultstring>
      </soap:Fault>
   </soap:Body>
</soap:Envelope>

I did some debugging on the issue and it appears that both org.apache.cxf.ws.security.policy.builders.LayoutBuilder and org.apache.cxf.ws.security.policy.model.AsymmetricBinding add org.apache.cxf.ws.security.policy.model.Layout assertions to the expected policy. However org.apache.cxf.ws.security.wss4j.policyvalidators.AbstractBindingPolicyValidator.checkProperties(SymmetricAsymmetricBindingBase, AssertionInfo, AssertionInfoMap, List<WSSecurityEngineResult>, List<WSSecurityEngineResult>, Message) successfully asserts only one of Layout instances while another one remains untouched and causes the failure to occur. If I comment out sp:Layout from WSDL, validation passes since LayoutBuilder never adds its Layout instance.

I guess that removing LayoutBuilder would fix the problem but I'm not sure if this is the right thing to do.

Relevant excerpt from WSDL:

<wsp:Policy wsu:Id=""SignAndEncrypt""
		xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
		xmlns:wsp=""http://www.w3.org/ns/ws-policy"" xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702""
		wsdl:required=""true"">
		<wsp:ExactlyOne>
			<wsp:All>
				<sp:AsymmetricBinding>
					<wsp:Policy>
						<sp:InitiatorToken>
							<wsp:Policy>
								<sp:X509Token
									sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never"">
									<wsp:Policy>
										<sp:WssX509V3Token10 />
									</wsp:Policy>
								</sp:X509Token>
							</wsp:Policy>
						</sp:InitiatorToken>
						<sp:RecipientToken>
							<wsp:Policy>
								<sp:X509Token
									sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never"">
									<wsp:Policy>
										<sp:WssX509V3Token10 />
									</wsp:Policy>
								</sp:X509Token>
							</wsp:Policy>
						</sp:RecipientToken>
						<sp:AlgorithmSuite>
							<wsp:Policy>
								<sp:Basic256Rsa15 />
								<sp:TripleDesRsa15 />
								<sp:Basic128Rsa15 />
							</wsp:Policy>
						</sp:AlgorithmSuite>
						<sp:IncludeTimestamp />
						<sp:EncryptSignature />
						<sp:OnlySignEntireHeadersAndBody />
					</wsp:Policy>
				</sp:AsymmetricBinding>
				<sp:Wss10>
					<wsp:Policy>
						<sp:MustSupportRefIssuerSerial />
						<sp:MustSupportRefEmbeddedToken />
					</wsp:Policy>
				</sp:Wss10>
				<sp:Layout>
					<wsp:Policy>
						<sp:Lax />
					</wsp:Policy>
				</sp:Layout>
				<sp:SignedParts>
					<sp:Body />
					<sp:Header Namespace=""http://schemas.xmlsoap.org/ws/2004/08/addressing"" />
					<sp:Header Namespace=""http://www.w3.org/2005/08/addressing"" />
				</sp:SignedParts>
				<sp:EncryptedParts>
					<sp:Body />
				</sp:EncryptedParts>
			</wsp:All>
		</wsp:ExactlyOne>
	</wsp:Policy>",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-03-13 09:52:30.168,,,no_permission,,Unknown,,,,,,,,,,,379405,,,Tue Mar 18 10:30:58 UTC 2014,,,,,,0|i1tdh3:,379696,,,,,,,,"13/Mar/14 09:52;coheigea;
The Layout policy should be a child element of the Binding policy. I've never seen it presented as a separate policy - it is a property of the security binding that is used.

Colm.","13/Mar/14 11:57;modax;Yes, that's exactly how it is in my case as well. Therefore I see no point of separate LayoutBuilder (registered at org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader.registerBuilders())? Maybe it's some leftover from the past?","13/Mar/14 12:03;coheigea;
There is probably no need for a separate LayoutBuilder - I will remove it. However, the problem fundamentally is that your security policy is incorrect, in that the Layout policy is in the wrong place.

Colm.","13/Mar/14 12:18;modax;Hmm, Now I took another look at the spec and it says:

""This assertion indicates a requirement for a particular security header layout as defined under the [Security Header Layout] property described in Section 6.7. The scope of this assertion is defined by its containing assertion.""

http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/ws-securitypolicy-1.2-spec-os.html#_Layout_Assertion

So maybe Layout is valid outside binding after all.","13/Mar/14 14:53;coheigea;
It may be valid, but that doesn't mean that it needs to be supported :-) Having said that it's straightforward enough to support, so will fix it.

Colm.",18/Mar/14 06:13;modax;Is there any chance you could backport the fix to 2.6.x as well?,"18/Mar/14 10:30;coheigea;
Yes, done.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The DefaultSecurityContext should use a supplied username to help find the User Principal,CXF-5603,12700715,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,11/Mar/14 15:11,11/Jul/14 12:50,14/Mar/19 02:30,11/Mar/14 16:40,2.7.10,,,,,,,2.7.11,3.0,,,,,,,0,,,,,,,,"
The JAASLoginInterceptor populates the DefaultSecurityContext using the authenticated JAAS Subject. It tries to find the user principal, as opposed to the roles, by finding the first non-Group principal. However, in the case of a JAAS implementation that doesn't store roles as Groups, it may end up storing a role as the user principal. This task is to first try to match the given username against the non-Group principals, and then to default to the old behaviour.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,379058,,,2014-03-11 15:11:00.0,,,,,,0|i1tbcn:,379350,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpServletRequestSnapshot is not created for requests with WSA ReplyTo prop set,CXF-5602,12700709,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,11/Mar/14 14:43,11/Jul/14 12:50,14/Mar/19 02:30,21/Mar/14 16:01,,,,,,,,2.6.14,2.7.11,3.0,,,,,,0,,,,,,,,"When using Apache CXF (through JBossWS integration) on top of JBoss AS 7 (whose web layer is based on JBoss Web, basically a fork of Tomcat), I'm still seeing the defect previously dealt with in https://issues.apache.org/jira/browse/CXF-2911 . This time, however, the MEP is not oneway, but a request-response one with WS-Addressing enabled and the ReplyTo header property specified to a non generic address.
The net effect is that a HTTP 202 response is immediately dispatched to the caller, letting Tomcat recycle the underlying httpservlet request.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,379052,,,Tue Mar 11 15:27:19 UTC 2014,,,,,,0|i1tbbb:,379344,,,,,,,,"11/Mar/14 15:27;asoldano;master commit: https://github.com/apache/cxf/commit/741754e0349e20cff3e87eff788f6d60727714aa
2.7.x commit: https://github.com/apache/cxf/commit/3e4d5134297cc341d93987240708a51e165e5ca1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Blueprint property placeholder does not work with http conduit configuration.,CXF-5601,12700637,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,carma.robot,carma.robot,11/Mar/14 05:33,11/Jul/14 12:50,14/Mar/19 02:30,21/Mar/14 21:29,2.7.7,,,,,,,2.6.14,2.7.11,3.0,,,,,,0,,,,,,,,"I cannot setup an HTTP conduit configuration that uses the Apache Aries Blueprint property-placeholder to inject trust store parameters. The conduit works when I explicitly configure the trust store properties. Unfortunately, when I use placeholders it fails.

Please see.

http://cxf.547215.n5.nabble.com/Blueprint-property-placeholder-does-not-work-with-HTTP-conduit-configuration-td5740946.html#a5741062

I will also attach my code.","Linux, Karaf 2.3.2",,,,,,,,,,,,,,,,,,,11/Mar/14 05:37;carma.robot;sts-test-system-2.zip;https://issues.apache.org/jira/secure/attachment/12633858/sts-test-system-2.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-03-21 20:41:25.029,,,no_permission,,Unknown,,,,,,,,,,,378354,,,Tue Mar 25 22:48:04 UTC 2014,,,,,,0|i1t70f:,378646,,,,,,,,"11/Mar/14 05:37;carma.robot;This test attempts to use the CXF STS. However, if I use the blueprint property placeholder configurer it fails to even get the WSDL for the STS with the error below. If I explicitly configure the trust store parameters for the HTTP conduit in my blueprint configuration then the conduit works and it gets the WSDL for the STS, successfully constructs the STS client and executes the request for security token against the STS.

It seems that blueprint property placeholders do not work with the trust store configuration of the CXF http conduit.

2014-03-10 22:23:32,903 | ERROR | l Console Thread | StsClientTests                   | e.sts.test.system.StsClientTests  152 | 208 - com.example.auth.sts-test-system-2 - 0.0.1.SNAPSHOT | getSamlTokenWithUsernameTokenTest FAILED.
org.apache.cxf.service.factory.ServiceConstructionException: Failed to create service.
        at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:100)[117:org.apache.cxf.cxf-rt-core:2.7.7]
        at org.apache.cxf.ws.security.trust.AbstractSTSClient.createClient(AbstractSTSClient.java:557)[156:org.apache.cxf.cxf-rt-ws-security:2.7.7]
        at org.apache.cxf.ws.security.trust.AbstractSTSClient.getClient(AbstractSTSClient.java:457)[156:org.apache.cxf.cxf-rt-ws-security:2.7.7]
        at com.example.sts.test.system.StsClientTests.getSamlTokenWithUsernameTokenTest(StsClientTests.java:132)[208:com.example.auth.sts-test-system-2:0.0.1.SNAPSHOT]
        at com.example.sts.test.system.StsClientTestsCommand.doExecute(StsClientTestsCommand.java:22)[208:com.example.auth.sts-test-system-2:0.0.1.SNAPSHOT]
        at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:38)[14:org.apache.karaf.shell.console:2.3.2]
        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:35)[14:org.apache.karaf.shell.console:2.3.2]
        at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)[14:org.apache.karaf.shell.console:2.3.2]
        at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:474)[14:org.apache.karaf.shell.console:2.3.2]
        at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:400)[14:org.apache.karaf.shell.console:2.3.2]
        at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)[14:org.apache.karaf.shell.console:2.3.2]
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)[14:org.apache.karaf.shell.console:2.3.2]
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)[14:org.apache.karaf.shell.console:2.3.2]
        at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)[14:org.apache.karaf.shell.console:2.3.2]
        at org.apache.karaf.shell.console.jline.Console.run(Console.java:173)[14:org.apache.karaf.shell.console:2.3.2]
        at java.lang.Thread.run(Thread.java:744)[:1.7.0_51]
Caused by: javax.wsdl.WSDLException: WSDLException: faultCode=PARSER_ERROR: Problem parsing 'https://localhost:10443/sts/transport/ut?wsdl'.: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
        at com.ibm.wsdl.xml.WSDLReaderImpl.getDocument(WSDLReaderImpl.java:2198)[113:org.apache.servicemix.bundles.wsdl4j:1.6.3.1]
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(WSDLReaderImpl.java:2390)[113:org.apache.servicemix.bundles.wsdl4j:1.6.3.1]
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(WSDLReaderImpl.java:2422)[113:org.apache.servicemix.bundles.wsdl4j:1.6.3.1]
        at org.apache.cxf.wsdl11.WSDLManagerImpl.loadDefinition(WSDLManagerImpl.java:263)[117:org.apache.cxf.cxf-rt-core:2.7.7]
        at org.apache.cxf.wsdl11.WSDLManagerImpl.getDefinition(WSDLManagerImpl.java:206)[117:org.apache.cxf.cxf-rt-core:2.7.7]
        at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:98)[117:org.apache.cxf.cxf-rt-core:2.7.7]
        ... 15 more
Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:192)[:1.7.0_51]
        at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1884)[:1.7.0_51]
        at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:276)[:1.7.0_51]
        at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:270)[:1.7.0_51]
        at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1341)[:1.7.0_51]
        at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:153)[:1.7.0_51]
        at sun.security.ssl.Handshaker.processLoop(Handshaker.java:868)[:1.7.0_51]
        at sun.security.ssl.Handshaker.process_record(Handshaker.java:804)[:1.7.0_51]
        at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1016)[:1.7.0_51]
        at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1312)[:1.7.0_51]
        at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1339)[:1.7.0_51]
        at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1323)[:1.7.0_51]
        at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563)[:1.7.0_51]
        at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)[:1.7.0_51]
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1300)[:1.7.0_51]
        at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:254)[:1.7.0_51]
        at org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)[150:org.apache.servicemix.bundles.xerces:2.11.0.1]
        at org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)[150:org.apache.servicemix.bundles.xerces:2.11.0.1]
        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)[150:org.apache.servicemix.bundles.xerces:2.11.0.1]
        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)[150:org.apache.servicemix.bundles.xerces:2.11.0.1]
        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)[150:org.apache.servicemix.bundles.xerces:2.11.0.1]
        at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)[150:org.apache.servicemix.bundles.xerces:2.11.0.1]
        at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)[150:org.apache.servicemix.bundles.xerces:2.11.0.1]
        at com.ibm.wsdl.xml.WSDLReaderImpl.getDocument(WSDLReaderImpl.java:2188)[113:org.apache.servicemix.bundles.wsdl4j:1.6.3.1]
        ... 20 more
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
        at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:385)[:1.7.0_51]
        at sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:292)[:1.7.0_51]
        at sun.security.validator.Validator.validate(Validator.java:260)[:1.7.0_51]
        at sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:326)[:1.7.0_51]
        at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:231)[:1.7.0_51]
        at sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:126)[:1.7.0_51]
        at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1323)[:1.7.0_51]
        ... 39 more
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
        at sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:196)[:1.7.0_51]
        at java.security.cert.CertPathBuilder.build(CertPathBuilder.java:268)[:1.7.0_51]
        at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:380)[:1.7.0_51]
        ... 45 more
","21/Mar/14 20:41;dkulp;This is due to a difference in behavior between the Spring parsing and Blueprint parsing that was never ported from Spring to Blueprint.   In spring, all calls to the ""mapElementToJaxbProperty"" involve writing the element to a string and using a factory to parse the string later after Spring has done the place holders.     The blueprint side needs to do the same thing.   I'm working on it.

(this may then eliminate the need for the strange holder things)","25/Mar/14 22:48;carma.robot;You're the man Dan.

Is there a tentative release date for 2.7.11?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL generation at WS-RM endpoint leads to NPE in the server's log,CXF-5600,12699779,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,10/Mar/14 13:44,11/Jul/14 12:50,14/Mar/19 02:30,11/Mar/14 14:59,2.7.10,2.7.7,2.7.8,2.7.9,3.0.0-milestone2,,,2.7.11,3.0,,,WS-* Components,,,,0,,,,,,,,"Retrieving the wsdl file from an WS-RM endpoint will lead to an NPE at the server side log, although the wsdl document itself will be returned to the calling client.

java.lang.NullPointerException
	at org.apache.cxf.ws.rm.RMManager.getReliableEndpoint(RMManager.java:381)
	at org.apache.cxf.ws.rm.RMManager.getDestination(RMManager.java:398)
	at org.apache.cxf.ws.rm.RMDeliveryInterceptor.handle(RMDeliveryInterceptor.java:48)
	at org.apache.cxf.ws.rm.AbstractRMInterceptor.handleMessage(AbstractRMInterceptor.java:83)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:307)
	at org.apache.cxf.phase.PhaseInterceptorChain.doInterceptStartingAt(PhaseInterceptorChain.java:456)
	at org.apache.cxf.frontend.WSDLGetInterceptor.handleMessage(WSDLGetInterceptor.java:93)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:307)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:241)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:259)
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1088)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1024)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:370)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:744)

More details in
http://cxf.547215.n5.nabble.com/WS-RM-and-WSDLGetInInterceptor-td5740962.html

This is a regression from CXF-5151 and affects CXF versions 2.7.7 to 2.7.10.
",,,,,,,,,,,,,,CXF-5151,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,378125,,,2014-03-10 13:44:01.0,,,,,,0|i1t5lr:,378417,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Header field name comparison not correct in CrossOriginResourceSharingFilter,CXF-5598,12699418,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,antonio_sargento,antonio_sargento,07/Mar/14 14:05,11/Jul/14 12:51,14/Mar/19 02:30,11/Mar/14 12:57,2.7.10,,,,,,,2.6.14,2.7.11,3.0,,JAX-RS,JAX-RS Security,,,0,cors,,,,,,,"The CrossOriginResourceSharingFilter is not handled correctly the header field name comparison (ex: method effectiveAllowHeaders).
On RFC 2616, ""Hypertext Transfer Protocol -- HTTP/1.1"", 4.2, ""Message Headers"":
{panel}
Each header field consists of a name followed by a colon ("":"") and the field value. Field names are case-insensitive.
{panel}.

Even http://www.w3.org/TR/cors points that on 3. ""Terminology"" (ASCII case-insensitive match).
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-03-11 12:58:32.126,,,no_permission,,Unknown,,,,,,,,,,,377765,,,Tue Mar 11 12:58:32 UTC 2014,,,,,,0|i1t3dr:,378057,,,,,,,,11/Mar/14 12:58;sergey_beryozkin;This only applies to the effectiveAllowHeaders.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema element generated from exception class doesn't honor @XmlElement annotation,CXF-5596,12699098,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,06/Mar/14 09:08,11/Jul/14 12:50,14/Mar/19 02:30,06/Mar/14 13:54,2.6.13,2.7.10,,,,,,2.6.14,2.7.11,3.0,,JAXB Databinding,,,,0,,,,,,,,"The schema element generated from exception class always has the nillable=""true"" attribute, and doesn't honor @XmlElement. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,377445,,,2014-03-06 09:08:37.0,,,,,,0|i1t1fj:,377739,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF does not pass parameter annotations to ParamConverterProvider,CXF-5593,12698845,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,05/Mar/14 11:19,11/Jul/14 12:50,14/Mar/19 02:30,05/Mar/14 14:12,,,,,,,,2.7.11,3.0,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,377192,,,2014-03-05 11:19:34.0,,,,,,0|i1szvz:,377487,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpServletRequestFilter in RequestDispatcherProvider do not returns correct RequestURI path,CXF-5592,12698840,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,michal.sabo,michal.sabo,05/Mar/14 10:47,11/Jul/14 12:50,14/Mar/19 02:30,10/Mar/14 14:00,2.7.8,,,,,,,2.7.11,3.0,,,JAX-RS,,,,0,,,,,,,,"I have set up RequestDispatcherProvider to redirect from OAuth 2.0 authorization service (implemented by AuthorizationCodeGrantService) to different JAX-RS service, both served by the same CXFServlet.
The problem is HttpServletRequestFilter in RequestDispatcherProvider do not returns correct RequestURI path - the context root path of the web application is missing. 

RequestURI is used then by HttpUtils to built JAX-RS service matching path and since the request URI is not correct, the service is not found.

Configuration of request dispatcher is the following:
{code:xml}
<bean id=""dispatchProvider"" class=""org.apache.cxf.jaxrs.provider.RequestDispatcherProvider"">
        <property name=""classResources"">
            <map>
                <entry key=""org.apache.cxf.rs.security.oauth2.common.OAuthAuthorizationData"" value=""/oauth2/implicitauthorize""/>
            </map>
        </property>
        <property name=""beanNames"">
            <map>
                <entry key=""org.apache.cxf.rs.security.oauth2.common.OAuthAuthorizationData"" value=""data""/>
            </map>
        </property>
        <property name=""logRedirects"" value=""true""/>
    </bean>
{code}

Comments:
""rest"" is the name of the application (context root where the application is deployed)
""/*"" is CXFServlet's URL pattern
""/oauth2"" is the jaxrs:server address
""/implicitauthorize"" is the path of the mentioned JAX-RS service where the redirect should go

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-03-05 12:10:32.965,,,no_permission,,Unknown,,,,,,,,,,,377187,,,Mon Mar 10 14:00:52 UTC 2014,,,,,,0|i1szuv:,377482,,,,,,,,"05/Mar/14 12:10;sergey_beryozkin;Yes, I see why this is a valid issue. Typically the redirect is done to the resources which are not served by the same servlet.
But in your case you redirect to the service sharing the same context + servlet path.

I think we need to add a boolean property to RequestDispatcherProvider telling it it should reuse the current context + servlet path","05/Mar/14 15:40;sergey_beryozkin;Got confused... it is to do with the wrong request URI, as you actually pointed out",05/Mar/14 15:45;michal.sabo;Now I am confused what do you actually mean by this comment.,"05/Mar/14 18:09;sergey_beryozkin;The fix supporting your scenario is on the trunk and 2.7.x:

http://git-wip-us.apache.org/repos/asf/cxf/commit/4faeb62f

Note this works if CXFServlet has a ""/*"" URL pattern.
You can use a ""servletPath"" property to support the redirection if you have the servlet listening on say ""/bar/*""
but I think this should be optimized with a boolean flag I mentioned earlier, for users not to worry about the deployment details.

I'll do few more enhancements as part of this JIRA later on

Thanks","06/Mar/14 12:40;michal.sabo;I see your tests for this use case, however I was not successful with the servletPath property (and as from the HttpServletRequestFilter implementation can be seen, the servletPath property is not even used for building up the request URI - I have to note, that request URI as the spec says, should return full path together with the context path).

Nevertheless, as you pointed out, the implementation should not depend on the deployment details, so the fix would be really welcome.","09/Mar/14 21:57;sergey_beryozkin;I think your specific issue has been resolved. If you check the trunk you will see the implementation does not even calculate the request URI now and lets the superclass do it.

Please get the snapshots and retry or if you prefer, create a Maven based project for me to test.
","10/Mar/14 13:59;sergey_beryozkin;Hi, 
The provider has also been fixed now to support 'servletPath' property and a new 'useCurrentServlet' property has been introduced (so if you have a redirect to the same servlet with a non-empty pattern then setting a 'useCurrentServlet' property will be preferred). As far as I understand, this last fix is not needed for your specific set up, given that you have a servlet listening on a wildcard pattern, the snapshots should already work for you.

I think we have this issue completely resolved; 
Cheers, Sergey","10/Mar/14 14:00;sergey_beryozkin;Please reopen and attach a test project if the snapshots do not work for you, 
thanks, Sergey",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Search Parser code can not handle multiple collections of non primitive types,CXF-5591,12698627,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,04/Mar/14 13:57,11/Jul/14 12:50,14/Mar/19 02:30,04/Mar/14 15:45,,,,,,,,2.7.11,3.0,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,376985,,,2014-03-04 13:57:22.0,,,,,,0|i1sylz:,377280,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
On socket timeout an IllegalStateException is thrown,CXF-5590,12698589,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,anthonyC,anthonyC,04/Mar/14 08:49,11/Jul/14 12:50,14/Mar/19 02:30,04/Mar/14 21:44,2.7.10,,,,,,,2.7.11,3.0,,,Transports,,,,0,,,,,,,,"When a socket timeout occurs during a Jaxrs async request (I do not have done the test on synchronous request) the following exception is thrown : 

javax.ws.rs.client.ClientException: javax.ws.rs.client.ClientException: java.lang.IllegalStateException: IllegalStateException invoking http://localhost:50324/geoloc?ip=10.1.1.2&lang=en: Already connected
	at org.apache.cxf.jaxrs.client.JaxrsClientCallback.handleException(JaxrsClientCallback.java:90) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient.handleAsyncResponse(WebClient.java:988) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient.access$100(WebClient.java:80) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient$ClientAsyncResponseInterceptor.handleMessage(WebClient.java:1265) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272) ~[cxf-api-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.ClientMessageObserver.onMessage(ClientMessageObserver.java:56) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:1138) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3.run(AutomaticWorkQueueImpl.java:428) ~[cxf-api-2.7.10.jar:2.7.10]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) ~[na:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) ~[na:1.7.0_25]
	at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1.run(AutomaticWorkQueueImpl.java:353) ~[cxf-api-2.7.10.jar:2.7.10]
	at java.lang.Thread.run(Thread.java:724) ~[na:1.7.0_25]
Caused by: javax.ws.rs.client.ClientException: java.lang.IllegalStateException: IllegalStateException invoking http://localhost:50324/geoloc?ip=10.1.1.2&lang=en: Already connected
	at org.apache.cxf.jaxrs.client.WebClient.handleAsyncResponse(WebClient.java:984) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	... 10 common frames omitted
Caused by: java.lang.IllegalStateException: IllegalStateException invoking http://localhost:50324/geoloc?ip=10.1.1.2&lang=en: Already connected
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) ~[na:1.7.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.7.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526) ~[na:1.7.0_25]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.mapException(HTTPConduit.java:1346) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1335) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56) ~[cxf-api-2.7.10.jar:2.7.10]
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:628) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.endpoint.AbstractConduitSelector.complete(AbstractConduitSelector.java:185) ~[cxf-api-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.AbstractClient.preProcessResult(AbstractClient.java:556) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient.handleAsyncResponse(WebClient.java:979) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	... 10 common frames omitted
Caused by: java.lang.IllegalStateException: Already connected
	at sun.net.www.protocol.http.HttpURLConnection.setRequestProperty(HttpURLConnection.java:2748) ~[na:1.7.0_25]
	at org.apache.cxf.transport.http.Headers.setProtocolHeadersInConnection(Headers.java:273) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.setProtocolHeaders(URLConnectionHTTPConduit.java:213) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleHeadersTrustCaching(HTTPConduit.java:1267) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1306) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	... 15 common frames omitted


-----------------------------------------------------------


This exception is due to the work done during the call of handleHeadersTrustCaching() in HTTPConduit. 
The following method are called :
1/ URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.setProtocolHeaders()
2/ Headers.setProtocolHeadersInConnection(HttpURLConnection connection)

This last method failed on the following line :
connection.setRequestProperty(HttpHeaderHelper.CONTENT_TYPE, ct);
because connection is in ""socket timeout state"".

What I have found is :
1/ The SocketTimeoutException is stored on connection field of : 
org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream
2/ This type of connection field is : HttpURLConnection
3/ the exception SocketTimeout is stored in rememberedException
4/ The only way (except unprotecting this private field) in order to access rememberedException is to call getInputStream which throw the rememberedException if present

What could be done is to call getInputStream() just before calling handleHeadersTrustCaching method, if an exception is thrown handleHeadersTrustCaching will not be called. It's not a beautifull fix, but it works for this case. 
Another solution could be the storage of the SocketTimeoutException during the processing of the request but it could have a bigger impact

You will find a patch for version 2.7.10 with the usage of getInputStream. The following exception is thrown with the patch :


---------------------------------------------------


                   javax.ws.rs.client.ClientException: javax.ws.rs.client.ClientException: java.net.SocketTimeoutException: Read timed out
	at org.apache.cxf.jaxrs.client.JaxrsClientCallback.handleException(JaxrsClientCallback.java:90) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient.handleAsyncResponse(WebClient.java:988) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient.access$100(WebClient.java:80) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient$ClientAsyncResponseInterceptor.handleMessage(WebClient.java:1265) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272) ~[cxf-api-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.ClientMessageObserver.onMessage(ClientMessageObserver.java:56) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:1138) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3.run(AutomaticWorkQueueImpl.java:428) ~[cxf-api-2.7.10.jar:2.7.10]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) ~[na:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) ~[na:1.7.0_25]
	at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1.run(AutomaticWorkQueueImpl.java:353) ~[cxf-api-2.7.10.jar:2.7.10]
	at java.lang.Thread.run(Thread.java:724) ~[na:1.7.0_25]
Caused by: javax.ws.rs.client.ClientException: java.net.SocketTimeoutException: Read timed out
	at org.apache.cxf.jaxrs.client.AbstractClient.checkClientException(AbstractClient.java:575) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.AbstractClient.preProcessResult(AbstractClient.java:557) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient.handleAsyncResponse(WebClient.java:979) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	... 10 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) ~[na:1.7.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.7.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526) ~[na:1.7.0_25]
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1674) ~[na:1.7.0_25]
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1672) ~[na:1.7.0_25]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.7.0_25]
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1670) ~[na:1.7.0_25]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1243) ~[na:1.7.0_25]
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:468) ~[na:1.7.0_25]
	at org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.getResponseCode(URLConnectionHTTPConduit.java:266) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1548) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:1129) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	... 5 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) ~[na:1.7.0_25]
	at java.net.SocketInputStream.read(SocketInputStream.java:150) ~[na:1.7.0_25]
	at java.net.SocketInputStream.read(SocketInputStream.java:121) ~[na:1.7.0_25]
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:235) ~[na:1.7.0_25]
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:275) ~[na:1.7.0_25]
	at java.io.BufferedInputStream.read(BufferedInputStream.java:334) ~[na:1.7.0_25]
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:633) ~[na:1.7.0_25]
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:579) ~[na:1.7.0_25]
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1322) ~[na:1.7.0_25]
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:468) ~[na:1.7.0_25]
	at org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.getResponseCode(URLConnectionHTTPConduit.java:266) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.getInputStream(URLConnectionHTTPConduit.java:237) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1309) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:50) ~[cxf-api-2.7.10.jar:2.7.10]
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:223) ~[cxf-api-2.7.10.jar:2.7.10]
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56) ~[cxf-api-2.7.10.jar:2.7.10]
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:628) ~[cxf-rt-transports-http-2.7.10_PATCH.jar:2.7.10.PATCH]
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62) ~[cxf-api-2.7.10.jar:2.7.10]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272) ~[cxf-api-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.AbstractClient.doRunInterceptorChain(AbstractClient.java:634) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient.doInvokeAsync(WebClient.java:942) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient.doInvokeAsyncCallback(WebClient.java:914) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient$AsyncInvokerImpl.method(WebClient.java:1438) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at org.apache.cxf.jaxrs.client.WebClient$AsyncInvokerImpl.get(WebClient.java:1307) ~[cxf-rt-frontend-jaxrs-2.7.10.jar:2.7.10]
	at com.capgemini.common.ws.client.subsystem.AsyncService.executeGet(AsyncService.java:74) ~[classes/:na]
	at com.capgemini.opentv.enabler.geoloc.rest.client.GeolocUtils.getGeolocAsync(GeolocUtils.java:91) ~[classes/:na]
	at com.capgemini.opentv.mediation.mup.application.module.impl.async.GeolocAsyncRequestLauncher.launchAsyncTask(GeolocAsyncRequestLauncher.java:58) ~[classes/:na]
	at com.capgemini.common.async.AbstractAsyncWorkflow.nextStep(AbstractAsyncWorkflow.java:140) ~[classes/:na]
	at com.capgemini.common.async.WorkflowExecutor.run(WorkflowExecutor.java:44) ~[classes/:na]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) ~[na:1.7.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) ~[na:1.7.0_25]
	... 1 common frames omitted",Windows 7 64 bits & RedHat 6.4,,,,,,,,,,,,,,,,,,,04/Mar/14 18:27;anthonyC;HTTPConduit.java.patch;https://issues.apache.org/jira/secure/attachment/12632555/HTTPConduit.java.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-03-04 21:44:07.555,,,no_permission,,Unknown,,,,,,,,,,,376947,,,Tue Mar 04 21:44:07 UTC 2014,,,,,,0|i1sydj:,377242,,,,,,,,"04/Mar/14 18:27;anthonyC;Patch for version 2.7.10.

Find a better way to know if exception was thrown. No more usage of getInputStream() that have side effect",04/Mar/14 21:44;sergey_beryozkin;Thanks for the patch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSONP interceptors are not effective if Jackson is used,CXF-5589,12698410,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,03/Mar/14 12:58,11/Jul/14 12:51,14/Mar/19 02:30,03/Mar/14 13:18,,,,,,,,2.7.11,3.0,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,376768,,,2014-03-03 12:58:34.0,,,,,,0|i1sx9r:,377063,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalArgumentException when invoking web service,CXF-5588,12698395,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,robert_l89,robert_l89,03/Mar/14 10:52,04/Mar/14 11:14,14/Mar/19 02:30,04/Mar/14 11:14,3.0.0-milestone2,,,,,,,,,,,JAX-WS Runtime,,,,0,,,,,,,,"Hello Guys,
i have a problem, invoking webservice with dynamic client from JaxWsDynamicClientFactory.
at first a little code-example:

Entity for web service shoud be an instance of class Person:

public class Person {
private String name;
//public setter and getter for name
}

Web service:

@WebService(serviceName = ""NewWebService"")
@Stateless()
public class NewWebService {

 @WebMethod(operationName = ""getPerson"")
    public Person getPerson(@WebParam(name = ""person"") Person person) {
        person.setName(""Testname"");
        return person;
    }
}

Ok now I'm trying to invoke the web service method getPerson:

JaxWsDynamicClientFactory dcf = JaxWsDynamicClientFactory.newInstance();
            ClassLoader classLoader = DynamicWebserviceClient.class.getClassLoader();
            Client client = dcf.createClient(wsdlFileName);

//get instance of generated input-class
Object person = Thread.currentThread().getContextClassLoader().loadClass(""de.bit.group.kapatool.ws.Person"").newInstance();
//initialize instance
 Method m = person.getClass().getMethod(""setName"", String.class);
            m.invoke(person, ""Robert"");

Up to this point everything works well. So now im trying to invoke the web service method. Usually, yout would think, that you have to give the person instance as parameter for the web service mehod like:
client.invoke(""getPerson"", person);

But when i do this, I get a IllegalArgumentException  because the invoke method is inspecting an instance from de.bit.group.kapatool.ws.GetPerson. So I'm creating an instance of this class like:
Object getPerson = Thread.currentThread().getContextClassLoader().loadClass(""de.bit.group.kapatool.ws.GetPerson"").newInstance();
and do:
Field field = getPerson.getClass().getDeclaredField(""person"");
//i know, that this isn't the smatest way but it's ok for this example
            field.setAccessible(true);
            field.set(getPerson, person);

Now i have an initialized instance of de.bit.group.kapatool.ws.GetPerson and can invoke the web service method with the client like:
client.invoke(""getPerson"", getPerson);

The web service is invoked but the input parameter is null. I think, it's because the method expects an input of type peron and not getPerson.

Am i'm doing something wrong?











","Netbeans 7.3, Glassfish 3.1.2",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,376753,,,2014-03-03 10:52:39.0,,,,,,0|i1sx6f:,377048,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SignatureConfirmation does not work with the Asymmetric Binding + EncryptBeforeSigning,CXF-5585,12697915,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,28/Feb/14 12:46,11/Jul/14 12:50,14/Mar/19 02:30,28/Feb/14 15:16,3.0.0-milestone2,,,,,,,3.0,,,,,,,,0,,,,,,,,"
SignatureConfirmation does not work on the client side with the Asymmetric Binding + EncryptBeforeSigning.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,376389,,,2014-02-28 12:46:14.0,,,,,,0|i1suxr:,376685,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stax properties controlling the payload size have no effect on JAX-RS path if set as contextual properties,CXF-5580,12697384,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,26/Feb/14 15:18,11/Jul/14 12:51,14/Mar/19 02:30,28/Feb/14 15:58,,,,,,,,2.7.11,3.0,,,Core,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,375858,,,2014-02-26 15:18:42.0,,,,,,0|i1sro7:,376154,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
oauth sample: requires commons-logging dependency,CXF-5578,12696972,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ashakirin,ashakirin,ashakirin,24/Feb/14 17:47,11/Jul/14 12:50,14/Mar/19 02:30,25/Feb/14 15:41,3.0.0-milestone1,,,,,,,3.0.0-milestone2,,,,Samples,,,,0,,,,,,,,"Spring core 3.2.6 declares commons-logging as compile dependency, although it is required at runtime. Start oauth samples without commons-logging causes stack trace:
Caused by: java.lang.ClassNotFoundException: 
org.apache.commons.logging.LogFactory
          at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
          at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
          at java.security.AccessController.doPrivileged(Native Method)
          at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
          at 
 org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoade
 r.java:404)
          at 
 org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoade
 r.java:366)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,375447,,,Tue Feb 25 15:38:56 UTC 2014,,,,,,0|i1sp53:,375743,,,,,,,,"25/Feb/14 15:38;ashakirin;Updated Spring schema to 3.1 and changed ""filter""=none to security=""none"" syntax",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WebApplicationException thrown when matrix parameters used with a path that ends with ""/""",CXF-5577,12696918,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,tkent,tkent,24/Feb/14 13:56,11/Jul/14 12:50,14/Mar/19 02:30,31/Mar/14 12:32,2.6.13,2.7.10,,,,,,3.0,,,,JAX-RS,,,,0,jax-rs,jsessionid,,,,,,"(This issue was originally posted as a question to users@cxf.apache.org here: http://cxf.547215.n5.nabble.com/JAX-RS-issue-in-2-6-13-w-JSESSIONID-as-a-path-parameter-td5740381.html)

Including a JSESSIONID path parameter will break REST paths which end with a forward slash. For example, the path:

<proto>://<host:port>/api/people/;jsessionid=xxx

Will result in a WebApplicationException being thrown. If the path does not end with a forward slash, everything works as expected.",,,,,,,,,,,,,,,,,,,,24/Feb/14 14:21;tkent;bug-cxf-routing-jsessionid.zip;https://issues.apache.org/jira/secure/attachment/12630669/bug-cxf-routing-jsessionid.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-02-24 14:24:22.884,,,no_permission,,Moderate,,,,,,,,,,,375393,,,Mon Mar 31 12:32:08 UTC 2014,,,,,,0|i1sot3:,375689,,,,,,,,24/Feb/14 14:21;tkent;Check the README to see how to run the project and see the issue.,24/Feb/14 14:24;sergey_beryozkin;Can you please add the info about the servlet container ?,"24/Feb/14 14:27;tkent;The demo case uploaded uses Jetty 6, but I first encountered the issue using Tomcat 7.0.42.","25/Feb/14 01:50;tkent;I had to upgrade to 2.7.10 due to an unrelated issue and was able to confirm the issue also occurs in 2.7.10
","25/Feb/14 13:00;sergey_beryozkin;It is a strange issue, took me a time to figure out what is going on.

Basically, what happens, when you have ""/people/;a=b"", is that a method with a ""/\{id}/"" also catches it.
So we start with ""/people/;a=b"" at the class level, the match produces a final ""/;a=b"" and as it happens, this matches two methods, one with ""/"", another one with ""/\{id}/"" cleanly, the latter is preferred because it has a template var which has the "";a=b"" value.

I think there's some weakness in the way the specification recommends building the template expressions, it should probably explicitly disallow "";"" characters (something I will raise separately) but for now if you do ""/\{id\:(\d)+}"" then it will work correctly.

So in the end it is not a CXF issue,; it is to do with the JAX-RS template handling being too open with respect to "";""

Thanks, Sergey
","27/Feb/14 13:31;sergey_beryozkin;FYI, I will be evaluating if it is possible to update the runtime to prevent the matrix parameters from being accidentally caught, using a specific regular expression restricting the value to valid numbers is good on its own, but there might some scope for improving the matching algorithm... ","05/Mar/14 05:21;tkent;Thanks a lot for looking into this, I appreciate it. We've adjusted all our code that could have made requests that ended with a forward slash followed by a path parameter, so it's no longer an issue for us. It was just surprising when we first encountered it.

In case it's a useful datapoint, resteasy 3.0.6.Final has the same behavior. I'm chalking this up as a minor JAX-RS issue at this point.","05/Mar/14 15:44;sergey_beryozkin;Hi, thanks for the update, 
The JIRA subject is nearly right :-), it is to do with adding the *matrix* parameters immediately after the ""/"", and in cases when you may have a  template var catching it. It is a rare case indeed...

And thanks for confirming the issue is observed with RestEasy - it confirms we have a corner case...

Cheers, Sergey",31/Mar/14 12:32;sergey_beryozkin;I'm fixing it on the trunk only for now to avoid any side-effects in 2.7.x,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Extra slash ('/') is prefixed to redirect URL in ""redirects-list""",CXF-5575,12696737,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,sergey_beryozkin,aurius,aurius,22/Feb/14 17:20,11/Jul/14 12:51,14/Mar/19 02:30,26/Feb/14 23:00,3.0.0-milestone2,,,,,,,3.0,,,,JAX-RS,,,,0,,,,,,,,"Using jetty 9.1.2 and latest CXF SNAPSHOT.

Exception is thrown if trying to load i.e. ""index.jsp"":

javax.servlet.ServletException: RequestDispatcher for path /index.jsp has failed
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.redirect(AbstractHTTPServlet.java:364) ~[cxf-rt-transports-http-3.0.0-SNAPSHOT.jar:3.0.0.SNAPSHOT]
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:274) ~[cxf-rt-transports-http-3.0.0-SNAPSHOT.jar:3.0.0.SNAPSHOT]
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:211) ~[cxf-rt-transports-http-3.0.0-SNAPSHOT.jar:3.0.0.SNAPSHOT]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) ~[javax.servlet-api-3.1.0.jar:3.1.0]
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:262) ~[cxf-rt-transports-http-3.0.0-SNAPSHOT.jar:3.0.0.SNAPSHOT]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:717) ~[jetty-servlet-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1644) ~[jetty-servlet-9.1.2.v20140210.jar:9.1.2.v20140210]
	at ch.qos.logback.classic.selector.servlet.LoggerContextFilter.doFilter(LoggerContextFilter.java:70) ~[logback-classic-1.1.1.jar:na]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1615) ~[jetty-servlet-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:550) [jetty-servlet-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:568) [jetty-security-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1112) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:479) [jetty-servlet-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1046) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.Server.handle(Server.java:459) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:281) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:232) [jetty-server-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.io.AbstractConnection$1.run(AbstractConnection.java:505) [jetty-io-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:607) [jetty-util-9.1.2.v20140210.jar:9.1.2.v20140210]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:536) [jetty-util-9.1.2.v20140210.jar:9.1.2.v20140210]
	at java.lang.Thread.run(Thread.java:744) [na:1.7.0_51]

I have done some debugging and looks like CXF is adding extra '/' to the beginning of redirect URL. That makes jetty jsp servlet return error that //index.jsp is not found.

Servlet configuration:

<servlet>
    <servlet-name>CXFServlet</servlet-name>
    <servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>
    <init-param>
        <param-name>javax.ws.rs.Application</param-name>
        <param-value>net.aurius.guestlist.GuestListApplicationConfig</param-value>
    </init-param>
    <init-param>
        <param-name>redirects-list</param-name>
        <param-value>/(\w)+.jsp</param-value>
    </init-param>
    <init-param>
        <param-name>redirect-servlet-name</param-name>
        <param-value>jsp</param-value>
    </init-param>
    <init-param>
        <param-name>redirect-attributes</param-name>
        <param-value>javax.servlet.include.request_uri</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
    <servlet-name>CXFServlet</servlet-name>
    <url-pattern>/*</url-pattern>
</servlet-mapping>",jetty 9.1.2,,,,,,,,,,,,,,,,,,,26/Feb/14 14:33;sergey_beryozkin;InsertTitleHere.png;https://issues.apache.org/jira/secure/attachment/12631235/InsertTitleHere.png,26/Feb/14 22:02;aurius;pom.xml;https://issues.apache.org/jira/secure/attachment/12631361/pom.xml,25/Feb/14 21:51;aurius;test-project.zip;https://issues.apache.org/jira/secure/attachment/12631058/test-project.zip,,,,,3.0,,,,,,,,,,,,,,,,,,,,2014-02-24 13:08:07.057,,,no_permission,,Unknown,,,,,,,,,,,375213,,,Thu Feb 27 13:21:40 UTC 2014,,,,,,0|i1snpb:,375510,,,,,,,,"24/Feb/14 13:08;sergey_beryozkin;Hi, where do you see the extra ""/"" being added ?

Is it in the private HttpServletRequestFilter#getRequestURI ? 

or in AbstsractHttpServlet.redirect(), when we have

sc.getRequestDispatcher(theServletPath + pathInfo); ?

And which value actually introduces this extra ""/"" ? I can't really debug for now as we have the tests and the demos where the redirection is used and so far I have not had to deal with the duplicate forward slash issue. 

Cheers, Sergey",24/Feb/14 13:59;sergey_beryozkin;I've just added the code replacing the possible slash duplicates in those code blocks. Give the snapshots a try please,"24/Feb/14 20:17;aurius;I have now spent more time and got better grip of the problem. The issue is in org.apache.cxf.transport.servlet.AbstractHTTPServlet$HttpServletRequestFilter.getServletPath() impelemtation. According to Servet API documentation ""This method will return an empty string ("""") if the servlet used to process this request was matched using the ""/*"" pattern."". But in this case it returns ""/"", and this causes the issue.","25/Feb/14 16:52;sergey_beryozkin;I've added a dedicated test, the configuration is nearly identical:
http://git-wip-us.apache.org/repos/asf/cxf/commit/a5cd5a25

All works. I wonder if is it to do with Jetty 9 being too sensitive, not really sure. 

Can you please create a simple Maven-based test project ?

thanks

","25/Feb/14 17:13;sergey_beryozkin;I've just rebuilt the studio to reference the latest Jetty 9, the test also passes.
Basically, I'm interested in tracing the issue but I need to have a test case, otherwise I'll need to close it as Can't Reproduce.

By the way, have you tried with the latest changes ?

Sergey","25/Feb/14 21:51;aurius;Here goes mini maven project to reproduce the issue. Just run ""mvn compile jetty:start"" and navigate to ""http://localhost:8080/index.jsp"". Theoretically when this will be fixed the url ""http://localhost:8080/host"" should also work.","26/Feb/14 14:33;sergey_beryozkin;This is what I see when I deploy it into Tomcat 6 with ""test-web-project"" context.

Jetty 9 is a bit sensitive, not sure why yet","26/Feb/14 15:12;sergey_beryozkin;jetty plugin seems to be broken. When I deploy to Tomcat and do

GET http://localhost:8080/test-web-project/services

the page is returned confirming the endpoint address is 

http://localhost:8080/test-web-project

When I deploy it with the Jetty plugin (and with configuration/webApp or configuration/webAppConfig set to ""/test-web-project"" ) the server does recognize

GET http://localhost:8080/test-web-project/services

but returns the page which says

the page is returned confirming the endpoint address is 

http://localhost:8080/

which is wrong.

Any idea how to configure the jetty plugin to support a custom context correctly ?

Sergey

","26/Feb/14 17:39;sergey_beryozkin;Never mind, this is not a blocker per se. We are talking about the edge case here where a default context is used; FYI, localhost:8080/host is not even found by Jetty.

If you remove ""redirect-attributes"" parameter (may only be needed to handle welcome pages), and replace it with the empty redirect-servlet-path parameter, then localhost:8080/index.jsp works.

I'll think a bit more if it even makes sense to update the code...

Sergey

","26/Feb/14 22:02;aurius;We are getting a little bit sidetracked here. So I would like to bring us back to solving the main issue:

The javadoc of on getServletPath() in javax.servlet.http.HttpServletRequestWrapper (actually on javax.servlet.http.HttpServletRequest since ""wraper"" extends it) states: ""a String containing the name or path of the servlet being called, as specified in the request URL, decoded, or an empty string if the servlet used to process the request is matched using the ""/*"" pattern.""

In the example I have sent you the servlet is mapped to the ""/*"" patternd=, but the org.apache.cxf.transport.servlet.AbstractHTTPServlet.HttpServletRequestFilter getServletPath() returns ""/"" instead of empty string.

So this problem is simply caused by not conforming to servelt API specification.

On the other hand I have attached the new pom.xml file witch maps the test-web-project to context ""/test-web-project"". And after running ""http://localhost:8080/test-web-project/services"" I have got this output:

Available RESTful services:
Endpoint address: http://localhost:8080/test-web-project/
WADL : http://localhost:8080/test-web-project/?_wadl

Therefore ""http://localhost:8080/test-web-project/index.jsp"" is still failing.

Also my original use-case is not about displaying welcome pages. I am developing a use case where I have a rest service /host/{id) and if you query it with the browser it will return html response, otherwise it will be JSON. I have encountered this problem while the CXF was trying to redirect to .jsp file to render html output. Then I just tried to render jsp directly and got the same problem. The simplification of this use-case is implemented in the test example.

There is also a chance that I am miss-configuring something since this is the first time I use CXF :)","26/Feb/14 22:30;sergey_beryozkin;We are not getting side-tracked but doing a proper investigation of why the extra ""/"" causes the advanced container which Jetty 9 is fail the redirect. 

Your original test case is somewhat unrealistic, the default context is used, this fact and the fact that Tomcat test and numerous Jetty tests in CXF just work led me to believe this is a very isolated/edge issue specific to Jetty. I have also offered you a reasonable workaround, to do with using a redirect-servlet-path parameter.

FYI, the servlet path of the original request has nothing to do with forming the redirect path. You may have a servlet listening on ""/bar/*"" but want a default or JSP servlet take care of the redirect. The documentation is for the end users of the Servlet API so I'm surprised the Jetty RequestDispatcher implementation is so sensitive. The other point is that replacing ""/"" with """" breaks CXF tests where a path info is null. 

So on one hand, giving the sensitivity of the fix and the fact a good enough workaround exists I'm not really willing to change anything in CXF. On the other hand, because you have just confirmed Jetty 9 chokes on this ""/"" even with the proper context, I'm thinking may be I just should do a minor fix and be done, in the end of the day using 'redirect-servlet-path' is not there to hide some internal redirect issues but actually facilitate the redirection to some other servlets listening on some custom patterns.

We may be able to use """" if it is set to ""/"" by default and not set via the redirect-servlet-path, and pathInfo is not null. 

Sergey

   ","26/Feb/14 22:58;sergey_beryozkin;Right, I'm seeing a different 404 response with your pom.xml, using redirect-servlet-path still works.
So, I'm going ahead with a minor fix, going to limit to 3.0.0-SNAPSHOT for now. OK ?

Thanks, Sergey",26/Feb/14 23:00;sergey_beryozkin;Resolving on the trunk only for now,"26/Feb/14 23:02;sergey_beryozkin; Aurius, please update the snapshots (you may need to rebuild locally), 'mvn install -Pfastinstall' and let me know if it all works for you

Thanks for your input
Sergey","27/Feb/14 07:21;aurius;Upgraded to the latest snapshot and recompiled.

After adding to web.xml:
        <init-param>
            <param-name>redirect-servlet-path</param-name>
            <param-value></param-value>
        </init-param>
then http://localhost:8080/test-web-project/index.jsp worked perfectly. But the http://localhost:8080/test-web-project/host failed.

Then I modified RequestDispatcherProvider in TestApplicationConfig.java, by setting 'requestDispatcherProvider.setServletPath("""");' and now everything works fine.

I am very thankful for the support.

I also see that you have provided a solution already yesterday by instructing to empty the ""redirect-servlet-path"", I am sorry to I misunderstand your post back then. And thank you again for support.","27/Feb/14 13:21;sergey_beryozkin;Hi, np, it is important that we deal correctly with the various subtle redirection issues.
By the way, I've just committed a similar update to RequestDispatcherProvider, and
now test-web-project/host returns a ""Yo"" greeting generated by the index.jsp. 
At the servlet level only a redirect path to index.jsp is set. 
So all works now with Jetty9.

As a side note, most of this redirection support will be utilized for supporting the future JAX-RS MVC feature.

Cheers, Sergey ",,,,,,,,,,,,,,,,,,,,
EHCacheManagerHolder returning wrong CacheConfiguration,CXF-5572,12696008,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,freddy.exposito,freddy.exposito,19/Feb/14 16:58,11/Jul/14 12:51,14/Mar/19 02:30,20/Feb/14 17:45,2.6.13,2.7.10,,,,,,2.6.14,2.7.11,3.0,,,,,,0,,,,,,,,"Hi All,
EHCacheManagerHolder.getCacheConfiguration() is returning wrong CacheManager. For example, in the key=""org.apache.cxf.ws.security.tokenstore.TokenStore-903593607"" it will try to look for existing 'org.apache.cxf.ws.security.tokenstore.TokenStor' due to the index used. 
This is making CXF to use the default ehcache configuration instead of the expected specific one for 'org.apache.cxf.ws.security.tokenstore.TokenStore' in the cxf-ehcache.xml config file.

Besides, as the hash code part of the key can have a dash at the beginning (Ex: ""org.apache.cxf.ws.security.tokenstore.TokenStore--903593607"") indexOf should be used instead of lastIndexOf .
I am attaching a patch.

Thank,
Freddy",,,,,,,,,,,,,,,,,,,,19/Feb/14 16:59;freddy.exposito;indexpatch.diff;https://issues.apache.org/jira/secure/attachment/12629807/indexpatch.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-02-20 17:45:46.943,,,no_permission,,Unknown,,,,,,,,,,,374485,,,Thu Feb 20 17:45:46 UTC 2014,,,,,,0|i1sj87:,374785,,,,,,,,"20/Feb/14 17:45;coheigea;
Thanks for the patch - I opted to fix it in a slightly different way.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Policy Alternative compatibility checking rely on not overriden equals() method,CXF-5571,12695996,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ashakirin,ashakirin,ashakirin,19/Feb/14 16:03,11/Jul/14 12:51,14/Mar/19 02:30,24/Feb/14 17:43,2.7.10,3.0.0-milestone1,,,,,,2.7.11,3.0.0-milestone2,,,,,,,0,,,,,,,,"Use case: SOAP service uses policy containing more than one alternative.
To build outgoing interceptor chain, single alternative in effective policy is selected using AlternativeSelector. One of the selection steps is check BaseAlternativeSelector.isCompatibleWithRequest() 

Problem:
Method BaseAlternativeSelector.isCompatible doesn't work as designed, 
because Neethi PolicyContainingPrimitiveAssertion and PrimitiveAssertion do not override equals() method. As a result alternative is never removed from the list r2 if assertions are different objects:
    protected boolean isCompatible(List<Assertion> alternative, List<Assertion> r) {
        List<Assertion> r2 = new ArrayList<Assertion>(r);
        for (Assertion a : alternative) {
            r2.remove(a);
        }
        return r2.isEmpty();
    }

Proposal: clean solution will be to fix that in Neethi and provide equals method. Quick fix will be check of assertion QName.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,374474,,,2014-02-19 16:03:33.0,,,,,,0|i1sj5r:,374774,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Asynchronous broken http-hc,CXF-5564,12695516,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ylecaillez,ylecaillez,17/Feb/14 13:53,11/Jul/14 12:50,14/Mar/19 02:30,18/Mar/14 19:00,2.7.8,,,,,,,2.7.11,3.0,,,Transports,,,,0,asynchronous,,,,,,,"Response callback for asynchronous invocation is not called.
Once response is received AsyncWrappedOutputStream.setHttpResponse() is called but isAsync is false. As a consequence, handleResponseOnWorkqueue() is not called
isAsync is set to true during the close process through  a call to AsyncWrappedOutputStream.handleResponseAsync() but its too late.

It might be a race condition.

As a fix, i added isAsync as a constructor argument to AsyncWrappedOutputStream().

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,374024,,,2014-02-17 13:53:56.0,,,,,,0|i1sgdz:,374324,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting the attribute 'namespace' of the {http://cxf.apache.org/policy}policies configuration element causes a NotWritablePropertyException to be thrown,CXF-5563,12695025,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,dvoets,dvoets,13/Feb/14 15:55,24/Jan/18 15:43,14/Mar/19 02:30,24/Jan/18 15:43,2.7.8,,,,,,,,,,,Configuration,,,,0,,,,,,,,"According to https://cxf.apache.org/docs/wspconfiguration.html you can specify the ws-policy namespace to be used when configuring the Policies feature using the namespace attribute.

However when I do this:
{code}
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:cxf=""http://cxf.apache.org/core"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:sec=""http://cxf.apache.org/configuration/security"" xmlns:http=""http://cxf.apache.org/transports/http/configuration""
	xmlns:httpj=""http://cxf.apache.org/transports/http-jetty/configuration""
	xmlns:jaxws=""http://cxf.apache.org/jaxws"" xmlns:p=""http://cxf.apache.org/policy""
	xsi:schemaLocation=""
            http://cxf.apache.org/core
            http://cxf.apache.org/schemas/core.xsd 
            http://cxf.apache.org/configuration/security  		      
            http://cxf.apache.org/configuration/schemas/security.xsd
            http://cxf.apache.org/jaxws
            http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/transports/http/configuration
            http://cxf.apache.org/transports/http/schemas/http-conf.xsd
            http://cxf.apache.org/transports/http-jetty/configuration
            http://cxf.apache.org/transports/http-jetty/schemas/http-jetty.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://cxf.apache.org/policy 
            http://cxf.apache.org/schemas/policy.xsd"">



	<bean id=""abstractLoggingInterceptor"" abstract=""true"">
		<property name=""prettyLogging"" value=""true"" />
	</bean>
	<bean id=""loggingInInterceptor"" class=""org.apache.cxf.interceptor.LoggingInInterceptor""
		parent=""abstractLoggingInterceptor"" />
	<bean id=""loggingOutInterceptor"" class=""org.apache.cxf.interceptor.LoggingOutInterceptor""
		parent=""abstractLoggingInterceptor"" />

	<cxf:bus>
		<cxf:inInterceptors>
			<ref bean=""loggingInInterceptor"" />
		</cxf:inInterceptors>
		<cxf:outInterceptors>
			<ref bean=""loggingOutInterceptor"" />
		</cxf:outInterceptors>
		<cxf:outFaultInterceptors>
			<ref bean=""loggingOutInterceptor"" />
		</cxf:outFaultInterceptors>
		<cxf:inFaultInterceptors>
			<ref bean=""loggingInInterceptor"" />
		</cxf:inFaultInterceptors>
		<cxf:features>
			<p:policies ignoreUnknownAssertions=""true"" namespace=""http://schemas.xmlsoap.org/ws/2004/09/policy"" />
		</cxf:features>
	</cxf:bus>



	

</beans>
{code}

the following exception is thrown:
{code}
Exception in thread ""main"" java.lang.RuntimeException: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cxf' defined in class path resource [META-INF/cxf/cxf.xml]: Cannot create inner bean 'p:policies#43191701' of type [org.apache.cxf.ws.policy.WSPolicyFeature] while setting bean property 'features' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'p:policies#43191701': Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'namespace' of bean class [org.apache.cxf.ws.policy.WSPolicyFeature]: Bean property 'namespace' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:151)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:124)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:94)

Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cxf' defined in class path resource [META-INF/cxf/cxf.xml]: Cannot create inner bean 'p:policies#43191701' of type [org.apache.cxf.ws.policy.WSPolicyFeature] while setting bean property 'features' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'p:policies#43191701': Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'namespace' of bean class [org.apache.cxf.ws.policy.WSPolicyFeature]: Bean property 'namespace' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:281)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:353)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1327)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1085)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:455)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.cxf.bus.spring.BusApplicationContext$1.run(BusApplicationContext.java:107)
	at org.apache.cxf.bus.spring.BusApplicationContext$1.run(BusApplicationContext.java:105)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:105)
	at org.apache.cxf.bus.spring.SpringBusFactory.createApplicationContext(SpringBusFactory.java:157)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:148)
	... 3 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'p:policies#43191701': Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'namespace' of bean class [org.apache.cxf.ws.policy.WSPolicyFeature]: Bean property 'namespace' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1363)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1085)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:455)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	... 23 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'namespace' of bean class [org.apache.cxf.ws.policy.WSPolicyFeature]: Bean property 'namespace' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1052)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:921)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	... 27 more
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2018-01-24 15:43:48.834,,,no_permission,,Unknown,,,,,,,,,,,373533,,,Wed Jan 24 15:43:48 UTC 2018,,,,,,0|i1sdd3:,373833,,,,,,,,"24/Jan/18 15:43;coheigea;The documentation was out of date. It is no longer necessary to specify a ""namespace"", as the policy feature works with all WS-Policy namespaces.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
value of @QueryParam/@PathParam Annotation inside @BeanParam Classes will be ignored,CXF-5562,12694975,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,eddi888,eddi888,13/Feb/14 13:01,11/Jul/14 12:51,14/Mar/19 02:30,13/Feb/14 23:07,2.7.10,,,,,,,2.7.11,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,"Value of @QueryParam/@PathParam Annotation inside @BeanParam Classes will be ignored by the JAXRS-Client.

TestCase:
{code:title=cxf-2.7.x-fixes/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerBookTest.java}
//...
    @Test
    public void testProxyBeanParam() throws Exception {
        BookStore store = JAXRSClientFactory.create(""http://localhost:"" + PORT, BookStore.class);
        BookStore.BookBean bean = new BookStore.BookBean();
        bean.setId(100L);
        bean.setId2(23L);
                
        Book book = store.getBeanParamBook(bean);
        assertEquals(123L, book.getId());
        
    }
//...
{code}

Modified BookStore.BookBean inside Test Example
{code:title=cxf-2.7.x-fixes/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookStore.java}
//...
    public static class BookBean {
        private long id;
        private long id2;
        private long id3;

        public long getId() {
            return id;
        }

        //@PathParam(""id"")
        @PathParam(""ID"")
        public void setId(long id) {
            this.id = id;
        }
        
        public long getId2() {
            return id2;
        }

        //@QueryParam(""id2"")
        @QueryParam(""id_2"")
        public void setId2(long id2) {
            this.id2 = id2;
        }
        
        @Context
        public void setUriInfo(UriInfo ui) {
            String id3Value = ui.getQueryParameters().getFirst(""id3"");
            if (id3Value != null) {
                this.id3 = Long.valueOf(id3Value);
            }
        }

        public long getId3() {
            return id3;
        }

        
    }
//...
{code}",Oracle JDK 1.7.51,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-02-13 13:15:55.924,,,no_permission,,Unknown,,,,,,,,,,,373483,,,Fri Feb 14 05:50:27 UTC 2014,,,,,,0|i1sd27:,373783,,,,,,,,"13/Feb/14 13:15;sergey_beryozkin;I think this issue is invalid - the server works in a case-sensitive mode, so you'd need to have a setID method for the runtime to init the bean properly, and I'm not sure why you expect a setter marked with ""id_2"" invoked, it won;t work :-)

Sergey","13/Feb/14 13:30;eddi888;The CXF-RS Client works fine with the CXF-RS Server.
But if I use the client to connecting aouther rest resources, its not possible if the rest resources estimate ugly query parameters like http://127.0.0.1/api/addresses.php?filter[name]=A%

","13/Feb/14 13:52;sergey_beryozkin;Then simply use WebClient or new Client API and set the query options as needed;

Cheers, Sergey","13/Feb/14 14:25;eddi888;It is easily to working with annotations from the Java API for restful services.

I can use the @QueryParam with individual value inside the BookStore.java, but cant use one level deeper inside BeanParams. The BeanParams is a summary of many QueryParams/HeaderParams/PathParams. Looks readable and clearer.

I think the problem stay inside org.apache.cxf.jaxrs.client.ClientProxyImpl.java

","13/Feb/14 14:37;sergey_beryozkin;Not really. ClientProxyImpl treats BeanParam exactly as the server JAX-RS runtime does, i.e, in case-sensitive manner. It expects that HTTP parameter names exactly match the property names when checking for the available parameter values.

OK. Let me clarify something.

Sergey 

","13/Feb/14 17:27;sergey_beryozkin;You are right. CXF needs to be fixed

Thanks for spotting it","14/Feb/14 05:50;eddi888;Nice, thank you.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AccessTokenValidatorService is not secure,CXF-5561,12694971,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,13/Feb/14 12:31,11/Jul/14 12:50,14/Mar/19 02:30,13/Feb/14 13:26,,,,,,,,2.7.11,3.0.0-milestone2,,,JAX-RS,JAX-RS Security,,,0,,,,,,,,"AccessTokenValidatorService is a simple JAX-RS service which accepts validation requests remotely and delegates the actual validation to the super-class it extends, after validating the token it returns an internal token representation to the remote OAuthRequestFilter which does some more validation.

The fundamental problem with AccessTokenValidatorService is that it expects the 3rd party client authorization credentials passed in as Authorization header so if the bad client which stole the access token and somehow invokes directly on AccessTokenValidatorService then it will get the internal token state back.

I'm not marking it as Critical because this service can easily be replaced.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,373479,,,2014-02-13 12:31:41.0,,,,,,0|i1sd1b:,373779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Async jaxrs call : Inifinite loop when connexion socket timeout /connexion refused occurs and no action can stop this loop,CXF-5559,12694954,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,anthonyC,anthonyC,13/Feb/14 10:37,11/Jul/14 12:51,14/Mar/19 02:30,14/Feb/14 16:33,2.7.8,,,,,,,2.7.11,3.0.0-milestone2,,,Transports,,,,0,,,,,,,,"When an async request failed due to connexion timeout, callback is infinitly called. 

Exception thrown on connection error :
javax.ws.rs.client.ClientException: javax.ws.rs.client.ClientException: java.net.ConnectException: Connection refused

Analysis : In class HTTPConduit
1/ handleResponseOnWorkqueue:Runnable call handleResponseInternal();
2/ An exception is thrown because connexion timeout occurs
3/ Call back is called (method InvocationCallback:failed(ClientException error))
4/ No executor in method handleResponseOnWorkqueue is set so it execute a new runnable. =>I think it miss something to check if an exception was thrown

I tried to : 
- cancel FutureTask in callback and in a different thread
- Interrupt the current thread in the callback
- Throw Runtime exception in order to break execution
But it creates a new task before ending the execution.

The only way I found to stop the loop was to patch : handleResponseOnWorkqueue and test if an exception was set before trying to execute something


Stack trace of the loop :

javax.ws.rs.client.ClientException: javax.ws.rs.client.ClientException: java.net.ConnectException: Connection refused
        at org.apache.cxf.jaxrs.client.JaxrsClientCallback.handleException(JaxrsClientCallback.java:90) [cxf-rt-frontend-jaxrs-2.7.8.jar:2.7.8]
        at org.apache.cxf.jaxrs.client.WebClient.handleAsyncResponse(WebClient.java:980) [cxf-rt-frontend-jaxrs-2.7.8.jar:2.7.8]
        at org.apache.cxf.jaxrs.client.WebClient.access$100(WebClient.java:77) [cxf-rt-frontend-jaxrs-2.7.8.jar:2.7.8]
        at org.apache.cxf.jaxrs.client.WebClient$ClientAsyncResponseInterceptor.handleMessage(WebClient.java:1241) [cxf-rt-frontend-jaxrs-2.7.8.jar:2.7.8]
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272) [cxf-api-2.7.8.jar:2.7.8]
        at org.apache.cxf.jaxrs.client.ClientMessageObserver.onMessage(ClientMessageObserver.java:56) [cxf-rt-frontend-jaxrs-2.7.8.jar:2.7.8]
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:1138) [cxf-rt-transports-http-2.7.8.jar:2.7.8]
        at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3.run(AutomaticWorkQueueImpl.java:428) [cxf-api-2.7.8.jar:2.7.8]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) [na:1.7.0_09-icedtea]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) [na:1.7.0_09-icedtea]
        at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1.run(AutomaticWorkQueueImpl.java:353) [cxf-api-2.7.8.jar:2.7.8]
        at java.lang.Thread.run(Thread.java:722) [na:1.7.0_09-icedtea]
Caused by: javax.ws.rs.client.ClientException: java.net.ConnectException: Connection refused
        at org.apache.cxf.jaxrs.client.AbstractClient.checkClientException(AbstractClient.java:575) ~[cxf-rt-frontend-jaxrs-2.7.8.jar:2.7.8]
        at org.apache.cxf.jaxrs.client.AbstractClient.preProcessResult(AbstractClient.java:557) ~[cxf-rt-frontend-jaxrs-2.7.8.jar:2.7.8]
        at org.apache.cxf.jaxrs.client.WebClient.handleAsyncResponse(WebClient.java:971) [cxf-rt-frontend-jaxrs-2.7.8.jar:2.7.8]
        ... 10 common frames omitted
Caused by: java.net.ConnectException: Connection refused
        at sun.reflect.GeneratedConstructorAccessor27.newInstance(Unknown Source) ~[na:na]
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.7.0_09-icedtea]
        at java.lang.reflect.Constructor.newInstance(Constructor.java:525) ~[na:1.7.0_09-icedtea]
        at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1664) ~[na:na]
        at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1662) ~[na:na]
        at java.security.AccessController.doPrivileged(Native Method) ~[na:1.7.0_09-icedtea]
        at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1660) ~[na:na]
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1243) ~[na:na]
        at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:468) ~[na:1.7.0_09-icedtea]
        at org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.getResponseCode(URLConnectionHTTPConduit.java:266) ~[cxf-rt-transports-http-2.7.8.jar:2.7.8]
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1530) ~[cxf-rt-transports-http-2.7.8.jar:2.7.8]
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:1129) [cxf-rt-transports-http-2.7.8.jar:2.7.8]
        ... 5 common frames omitted
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method) ~[na:1.7.0_09-icedtea]
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339) ~[na:1.7.0_09-icedtea]
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200) ~[na:1.7.0_09-icedtea]
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182) ~[na:1.7.0_09-icedtea]
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391) ~[na:1.7.0_09-icedtea]
        at java.net.Socket.connect(Socket.java:579) ~[na:1.7.0_09-icedtea]
        at sun.net.NetworkClient.doConnect(NetworkClient.java:175) ~[na:na]
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:378) ~[na:na]
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:473) ~[na:na]
        at sun.net.www.http.HttpClient.<init>(HttpClient.java:203) ~[na:na]
        at sun.net.www.http.HttpClient.New(HttpClient.java:290) ~[na:na]
        at sun.net.www.http.HttpClient.New(HttpClient.java:306) ~[na:na]
        at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:995) ~[na:na]
        at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:931) ~[na:na]
        at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:849) ~[na:na]
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1299) ~[na:na]",Windows & Linux Red Hat 6.4,,,,,,,,,,,,,,,,,,,13/Feb/14 10:41;anthonyC;patch_cxf2.7.10.txt;https://issues.apache.org/jira/secure/attachment/12628718/patch_cxf2.7.10.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-02-13 10:54:10.624,,,no_permission,,Unknown,,,,,,,,,,,373462,,,Fri Feb 14 16:33:39 UTC 2014,,,,,,0|i1scxj:,373762,,,,,,,,13/Feb/14 10:41;anthonyC;Patch done on version 2.7.10,"13/Feb/14 10:54;sergey_beryozkin;Hi, many thanks for the patch, looks right to me, Dan does it look OK to you ?

Thanks, Sergey","14/Feb/14 16:33;sergey_beryozkin;Patch has been applied, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JsonpInInterceptor ignores custom callback parameters,CXF-5558,12694791,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,12/Feb/14 17:33,11/Jul/14 12:50,14/Mar/19 02:30,12/Feb/14 17:42,,,,,,,,2.7.11,3.0.0-milestone2,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,373299,,,2014-02-12 17:33:02.0,,,,,,0|i1sbxz:,373600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAX-RS 2.0 is not backward compatible with JAX-RS 1.1 on the exception path,CXF-5556,12694374,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,10/Feb/14 22:33,11/Jul/14 12:51,14/Mar/19 02:30,11/Feb/14 12:45,,,,,,,,2.7.11,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,"If we have a jsr 311 dependency only then whenever CXF throws new exception classes such as InternalServerErrorException, etc or when JVM enters the non-exceptional code and eagerly resolves static references to new exception classes then we have a problem ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,372883,,,2014-02-10 22:33:34.0,,,,,,0|i1s9dz:,373186,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuth1 params not read from POST on Content-Type: application/x-www-form-urlencoded; charset=UTF-8,CXF-5554,12694287,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,wyzzard,wyzzard,10/Feb/14 16:07,11/Jul/14 12:50,14/Mar/19 02:30,11/Feb/14 16:58,2.7.6,,,,,,,2.7.11,3.0.0-milestone2,,,JAX-RS Security,,,,0,,,,,,,,"I've tracked the problem down to method: OAuthUtils.addParametersIfNeeded()

{code:java}
if (params.isEmpty() 
            && MediaType.APPLICATION_FORM_URLENCODED.equals(oAuthMessage.getBodyType())) {
{code}        

oAuthMessage.getBodyType() returns full header value including additional parameters, so ""Content-Type: application/x-www-form-urlencoded; charset=UTF-8"" does not match MediaType.APPLICATION_FORM_URLENCODED

This form of Content-type header is valid as stated in:
https://tools.ietf.org/html/rfc2616#section-3.7


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-02-11 16:58:42.537,,,no_permission,,Unknown,,,,,,,,,,,372796,,,Sun Feb 16 23:16:41 UTC 2014,,,,,,0|i1s8uv:,373100,,,,,,,,11/Feb/14 16:58;sergey_beryozkin;Can you please check the snapshots ?,16/Feb/14 23:16;wyzzard;Thank you! The corrected checks work as expected.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAX-WS frontend DispatchImpl ignores setting of MessageContext.WSDL_OPERATION,CXF-5550,12693911,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,andreasmattes,andreasmattes,07/Feb/14 15:45,11/Jul/14 12:50,14/Mar/19 02:30,13/Feb/14 09:47,2.7.8,,,,,,,2.6.14,2.7.11,3.0.0-milestone2,,JAX-WS Runtime,,,,0,,,,,,,,"We have a service with a non-standard WSDL definition, where pairs of operations have the same request payload, one operation is request-response for synchronous processing, one operation is one-way for collection of request and later asynchronous processing. The request payloads are provided as String or InputStream, and therefore the JAX-WS Dispatch shall be used for service invocation. Setting the MessageContext.WSDL_OPERATION property, the service invocation works properly unless WS-Addressing is activated.

With WS-Addressing, however, the WSDL_OPERATION property is ignored for internal message exchange setup, and the request is always treated as the one-way request, so that no response is returned. Further analysis of the CXF DispatchImpl shows, that in this case the WSDL_OPERATION property is overridden by the result of the lookup of a temporary request root element name -> operation name table. In this case the 2nd operation definition with the same payload root element wins, which in our case is the one-way version.

This problem could be overcome by a simple processing change in DispatchImpl: When the WSDL_OPERATION is explicitly set, and WS-Addressing is activated, the check of the payload should be performed
the other way round, i.e. the temporary map is created as operation name
-> request payload root element name and verifies that the root element
name corresponds to the operation name, even if the root element is not
unique. If this check fails, behaviour falls back to the current one.",Untyped JAX-WS clients using Dispatch.,,,,,,,,,,,,,,,,,,,07/Feb/14 15:50;andreasmattes;apache-cxf-2.7.8-src-patched-files.tar.gz;https://issues.apache.org/jira/secure/attachment/12627641/apache-cxf-2.7.8-src-patched-files.tar.gz,07/Feb/14 15:50;andreasmattes;cxf-dispatch-fix.patch;https://issues.apache.org/jira/secure/attachment/12627642/cxf-dispatch-fix.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2014-02-13 09:47:51.22,,,no_permission,,Unknown,,,,,,,,,,,372420,,,Thu Feb 13 09:47:51 UTC 2014,,,,,,0|i1s6k7:,372724,,,,,,,,"07/Feb/14 15:50;andreasmattes;The attached files ""apache-cxf-2.7.8-src-patched-files.tar.gz"" and ""cxf-dispatch-fix.patch"" contain a fix for the present issue and a corresponding unit test. The tar ball has the complete added and modified files in their directory structure, the patch file contains the same as unified diff.","13/Feb/14 09:47;ffang;patch applied on behalf of Andreas Mattes with thanks
added Apache license headers for xml|wsdl files
http://svn.apache.org/r1567873 for trunk
http://svn.apache.org/r1567833 for 2.7.x branch
http://svn.apache.org/r1567872 for 2.6.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPConduit loses response headers if 202 with no body is returned,CXF-5547,12693561,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,06/Feb/14 13:47,11/Jul/14 12:51,14/Mar/19 02:30,06/Feb/14 14:28,,,,,,,,2.7.10,3.0.0-milestone2,,,Transports,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,372146,,,2014-02-06 13:47:04.0,,,,,,0|i1s4vz:,372451,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE may be thrown and logged during WS-RM's retransmission,CXF-5546,12693531,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,06/Feb/14 10:55,11/Jul/14 12:50,14/Mar/19 02:30,14/Mar/14 15:05,2.7.9,,,,,,,2.7.11,3.0,,,WS-* Components,,,,0,,,,,,,,"While a message is being retransmitted from a client (RM-Source) from its retransmission queue, the corresponding message might be acknowledged and its resource released at the client. And in this case, an NPE will be thrown during the resending of the message.

Feb 5, 2014 5:48:32 PM org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$3 resend
WARNING: WS-RM retransmission failed.
java.lang.NullPointerException
	at java.io.ByteArrayInputStream.<init>(ByteArrayInputStream.java:89)
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl.resend(RetransmissionQueueImpl.java:461)
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl.clientResend(RetransmissionQueueImpl.java:371)
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl.access$400(RetransmissionQueueImpl.java:80)
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$3.resend(RetransmissionQueueImpl.java:768)
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate.run(RetransmissionQueueImpl.java:577)
	at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate.initiate(RetransmissionQueueImpl.java:565)
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate$1ResendTask.run(RetransmissionQueueImpl.java:724)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)

Note that this issue is about handling this case gracefully to avoid throwing an NPE. The issue itself does not break the delivery guarantee semantics as the resend is failing because the message has been acknowledged.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,372116,,,2014-02-06 10:55:12.0,,,,,,0|i1s4pb:,372421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS providers shared between endpoints or clients with different buses lose injected TL proxies,CXF-5542,12693331,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,05/Feb/14 12:29,11/Jul/14 12:50,14/Mar/19 02:30,05/Feb/14 18:19,,,,,,,,2.7.11,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,"JAX-RS providers with @Context-annotated fields, being singletons, have thread-local proxies injected. If the same instance is shared between the components with different buses then the component-specific provider handlers may have the proxy references different to the one actually injected into the provider",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,371916,,,2014-02-05 12:29:04.0,,,,,,0|i1s3gn:,372220,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-A with JMS for OneWay: empty response is sent to client queue,CXF-5539,12693128,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ashakirin,ashakirin,04/Feb/14 16:05,16/Feb/15 16:09,14/Mar/19 02:30,05/May/14 19:59,,,,,,,,2.6.15,2.7.12,,,,,,,0,,,,,,,,"I am struggling with one effect appearing in case of using WS-A, OneWay message pattern and JMS transport.

The problem is that service tries to send empty response to the client JMS queue.
Empty message is sent by OneWayProcessorInterceptor. Without WS-A it is not a problem, because JMSDestination.sendExchange() checks if exchange is oneway and if yes, returns immediately.
But if WS-A is active, MAPAggregator creates decoupled destination with JMSConduit as a sender. JMSConduit.sendExchange() doesn't has any checks for oneway and it tries to send empty response to ReplyTo address. If ReplyTo is anonymous or none, empty response is sent using http conduit to http://www.w3.org/2005/08/addressing/none address.
The question does the rebaseResponse and decoupled destination make sense for oneway at all? Client doesn't expect any response for JMS in this case (for HTTP 202). ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,371714,,,2014-02-04 16:05:47.0,,,,,,0|i1s287:,372014,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support an X.509 Token as a EndorsingEncryptedSupportingTokens,CXF-5537,12693076,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,04/Feb/14 10:46,11/Jul/14 12:50,14/Mar/19 02:30,04/Feb/14 13:55,,,,,,,,3.0.0-milestone2,,,,WS-* Components,,,,0,,,,,,,,"
Currently we don't support X.509 Tokens as EndorsingEncryptedSupportingTokens (or as SignedEndorsingEncryptedSupportingTokens).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,371662,,,2014-02-04 10:46:49.0,,,,,,0|i1s1wn:,371962,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ProviderFactory returns incorrect ExceptionMapper when no exact match is registered,CXF-5534,12692372,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,hweisheimer,hweisheimer,30/Jan/14 20:09,11/Jul/14 12:50,14/Mar/19 02:30,31/Jan/14 14:55,2.7.8,,,,,,,2.7.9,,,,JAX-RS,,,,0,,,,,,,,"The JAX-RS 1.1 spec says:

When choosing an exception mapping provider to map an exception, an implementation MUST use the provider whose generic type is the nearest superclass of the exception.

In 2.7.0, this was working per the spec.  In 2.7.8 (likely starting with 2.7.6, but not tested), the FIRST ExceptionMapper provider is returned when there is no exact match.  This usually results in a ClassCastException.

In the attached test, a NullPointerException should map to the registered ExceptionMapper<RuntimeException> provider, but it does not.",,,,,,,,,,,,,,,,,,,,30/Jan/14 20:10;hweisheimer;ProviderFactoryExceptionMapperTest.java;https://issues.apache.org/jira/secure/attachment/12626168/ProviderFactoryExceptionMapperTest.java,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-01-30 21:29:58.688,,,no_permission,,Unknown,,,,,,,,,,,370967,,,Fri Jan 31 14:55:41 UTC 2014,,,,,,0|i1rxnr:,371272,,,,,,,,"30/Jan/14 21:29;sergey_beryozkin;Thanks for the tests, they are passing on 2.7.10-SNAPSHOT:
http://svn.apache.org/r1562972

Can you try 2.7.9, being released now, 
https://repository.apache.org/content/repositories/orgapachecxf-1003/

Cheers. Sergey 
",30/Jan/14 22:23;hweisheimer;The tests pass in 2.7.9 as well,"31/Jan/14 14:45;sjonsson;Sergey, when will 2.7.9 be released?  I don't see it on http://cxf.apache.org/download.html yet.","31/Jan/14 14:55;sergey_beryozkin;Likely in the next day or two. Very shortly

Thanks","31/Jan/14 14:55;sergey_beryozkin;Hans, thanks for the tests",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jax-ws-catalog.xml / @SchemaValidation /  xsd-includes ,CXF-5532,12692282,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sjaakd,sjaakd,30/Jan/14 14:20,11/Jul/14 12:50,14/Mar/19 02:30,04/Feb/14 20:39,2.7.7,,,,,,,2.7.10,,,,JAX-WS Runtime,,,,0,,,,,,,,"When using catalog resolving (jax-ws-catalog.xml) in combination with @SchemaValidation and a set of xsd files (that include each other) the wrong file is coupled with the wrong stream in org.apache.cxf.wsdl.EndpointReferenceUtils. It concerns method SchemaLSResourceResolver#resolveResource.

Observation:
1) The resolver is constructed with a correct set of entries (Schemas).
2) The resolver then tries to match on (ending of) systemId:targetNameSpace (that fails)
3) The resolver then tries to match on (ending of) targetNamespace only. All entries on the same namespace match, so the first one (arbitrary) is resolved. 

I've prepared a patch on this class that fixes the issue. Test projects are available.
{code:java}
@Line210 I've included the following code:
            // Sjaak PATCH
            // there can be multiple includes on the same namespace. This scenario is not envisioned yet.
            // hence the filename part is included as well. 
            if (systemId != null) {
                String systemIdFileName = systemId.substring(systemId.lastIndexOf('/') + 1);
                for (Map.Entry<String, byte[]> ent : schemas.entrySet()) {
                    System.out.println(""matching: "" + ent.getKey() + "" endswith: "" + systemIdFileName + "":"" + namespaceURI);
                    if (ent.getKey().endsWith(systemIdFileName + "":"" + namespaceURI)) {
                        schemas.remove(ent.getKey());
                        impl = new LSInputImpl();
                        impl.setSystemId(newId);
                        impl.setBaseURI(newId);
                        impl.setCharacterStream(
                                new InputStreamReader(
                                        new ByteArrayInputStream(ent.getValue())));
                        done.add(newId + "":"" + namespaceURI);
                        System.out.println(""match!, adding to done: "" + ent.getKey() + ""returning: "" + impl.getSystemId());
                        return impl;
                    }
                }
            }
            // sjaak END PATCH.
{code}

The patch introduces a step 2a to the steps above:

2a) The resolver then tries to match on (ending of) systemIdFileName:targetNameSpace (that fails)

Best regards,
Sjaak 


",JBOSS EAP 6.1.1,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,370877,,,2014-01-30 14:20:41.0,,,,,,0|i1rx3r:,371182,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STS can only create SAML Tokens with a NotOnOrAfter Condition specified in minutes,CXF-5531,12692256,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,30/Jan/14 11:21,11/Jul/14 12:50,14/Mar/19 02:30,30/Jan/14 11:47,2.7.8,,,,,,,3.0.0-milestone2,,,,STS,,,,0,,,,,,,,"
You can set the lifetime for a generated SAML Token in the STS via the DefaultConditionsProvider ""conditions"" property. However, even though this value is specified in seconds, the actual value used is the ceiling minute value.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,370851,,,2014-01-30 11:21:56.0,,,,,,0|i1rwxz:,371156,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong error code for non existing client's,CXF-5530,12692013,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,kendzi,kendzi,29/Jan/14 11:26,11/Jul/14 12:50,14/Mar/19 02:30,30/Jan/14 11:02,2.7.8,3.0.0-milestone1,3.0.0-milestone2,,,,,3.0.0-milestone2,,,,JAX-RS Security,,,,0,,,,,,,,"Currently when I use non existing client_id on call I get response:

Response Code: 400
{code}
{
  ""error"": ""invalid_request"",
  ""error_description"": ""Client ID is invalid"",
  ""error_uri"": null
}
{code}

But by RFC it should be returned error=*invalid_client*
http://tools.ietf.org/html/rfc6749#section-5.2

Error is generated in that method:
org.apache.cxf.rs.security.oauth2.services.AccessTokenService.getClient(String)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-01-29 21:42:38.704,,,no_permission,,Unknown,,,,,,,,,,,370603,,,Wed Jan 29 21:42:38 UTC 2014,,,,,,0|i1rvh3:,370913,,,,,,,,"29/Jan/14 21:42;sergey_beryozkin;I've done a partial fix to it (will be shortly in 2.7.9), if the provider throws OAuthServiceException with OAuthError initialized then it won't be ignored, so you can ensure 'invalid_client' is reported. A bit more work is needed to handle it at the runtime level...

Sergey",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deploy error when publishing CXF WebService to Glassfish4,CXF-5529,12691581,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,bedert,bedert,28/Jan/14 08:04,11/Jul/14 12:50,14/Mar/19 02:30,28/Jan/14 10:43,3.0.0-milestone1,,,,,,,2.7.9,3.0.0-milestone2,,,,,,,0,,,,,,,,"When publishing a CXF WebService to Glassfish4, I get the following error message:

deploy is failing=Error occurred during deployment: Exception while deploying the app [...] : The lifecycle method [close] must not throw a checked exception. Related annotation information: annotation [@javax.annotation.PreDestroy()] on annotated element [public void org.apache.cxf.rs.security.saml.sso.AbstractSSOSpHandler.close() 
throws java.io.IOException] of type [METHOD]. Please see server.log for more details.

Versions:
- apache-cxf-3.0.0-milestone1 
- Glassfish 4.0
 
(I had the same issue with the amq-5.8.0 libs in the CXF-3.0.0 Distribution, which i resolved by just updating to amq-5.9.0 libs)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,370326,,,2014-01-28 08:04:08.0,,,,,,0|i1rtq7:,370627,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF Blueprint resource classes should have a more simple definition,CXF-5528,12691449,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,charly,charly,27/Jan/14 19:41,11/Jul/14 12:51,14/Mar/19 02:30,29/Jan/14 21:38,2.7.8,,,,,,,2.7.9,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,"When defining serviceBeans in the blueprint xml file, we first have to define the bean then reference that bean from the serviceBean definition.  It would be nice to have a short cut that allowed us to just define the class name in the rsServer xml.  Something like 

    <jaxrs:server id=""karafStringService"" address=""/karaf"">
        <jaxrs:resourceClasses>
            <class name=""com.example.test.cxf.StringRestServiceImpl""/>
        </jaxrs:resourceClasses>
    </jaxrs:server>

I will be submitting a patch shortly with an associated test.  I look forward to feedback.  
",,,,,,,,,,,,,,,,,,,,27/Jan/14 20:12;charly;SimpleJAXRSTest.zip;https://issues.apache.org/jira/secure/attachment/12625417/SimpleJAXRSTest.zip,27/Jan/14 19:45;charly;cxf-5528-patch.diff;https://issues.apache.org/jira/secure/attachment/12625412/cxf-5528-patch.diff,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2014-01-27 21:20:33.562,,,no_permission,,Unknown,,,,,,,,,,,370194,,,Wed Jan 29 21:38:24 UTC 2014,,,,,,0|i1rsy7:,370496,,,,,,,,27/Jan/14 19:45;charly;This is the patch as I see it for implementing the suggestion.  I will add the test I used to deploy and verify in Karaf here shortly,"27/Jan/14 20:12;charly;Here is a simple test that can be used.  Just 'mvn clean install' on the directory and deploy to karaf.  Once started you should be able to hit the endpoint using:  

http://localhost:8181/cxf/test/string

which is defined by the resource class.  ","27/Jan/14 21:20;sergey_beryozkin;Hi, thanks for a patch. Right now I'm not sure we really need to have a dedicated extension specifically for managing resource class names.
Note, you can do

{code:xml}
<jaxrs:serviceBeans>
<bean class=""com.example.test.cxf.StringRestServiceImpl""/>
</jaxrs:serviceBeans>
{code}

That should work for you, right ?
Also, a patch for getting classes auto-discovered under Blueprint is also available, I haven't had a chance yet to work with it...

Cheers, Sergey","27/Jan/14 21:27;charly;Hi Sergey,

Thanks, that will probably work, I will verify.  I had fun digging in the code anyway ;)

Cheers
Heath","27/Jan/14 21:29;sergey_beryozkin;Hi Heath, 

>  I had fun digging in the code anyway

Nice line :-)

Cheers, Sergey
","28/Jan/14 00:58;charly;Hi Sergey,

I am looking to change this up a bit.  I am looking to have jaxrs resources as interfaces and not have to provide instantiable classes with default implementations.  A better separation of implementation and definition.  

Thoughts?
Heath","28/Jan/14 11:31;sergey_beryozkin;Hi Heath

I wonder if we are talking about the auto-discovery here. So you list an interface and the runtime finds a resource implementing it, presumably with an interface package being the parent package ? 
I'm thinking, do we have to go one extra length in simplifying the configuration, now that we have a patch which will let users add a basePackages property to jaxrs:endpoint, list one or more packages there, and get all resources in those selected packages picked up ?

Cheers, Sergey     ","28/Jan/14 15:27;charly;Hi Sergey,

Yeah, I think the point is to allow the interface to define the endpoint and be deployed that way, then allow the runtime to find the implementing resource... just like you stated.  Can you point me at the ticket for the auto-discovery?

Cheers
Heath","28/Jan/14 17:57;sergey_beryozkin;Hi Heath

Sure, see https://issues.apache.org/jira/browse/CXF-5477.
Right now the patch depends on the Extcos library. The patch will need to be enhanced a tiny bit to get Blueprint and plain non-Spring server beans actually optionally depend on it, but it's more or less minor issue

Cheers, Sergey",29/Jan/14 21:38;sergey_beryozkin;Thanks for a patch,,,,,,,,,,,,,,,,,,,,,,,,,,
SAAJ API's can corrupt messages,CXF-5527,12691433,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,27/Jan/14 18:27,11/Jul/14 12:51,14/Mar/19 02:30,27/Jan/14 20:06,2.7.8,,,,,,,2.7.9,,,,Soap Binding,,,,0,,,,,,,,"
If an interceptor uses some of the SAAJ specific APIs instead of the DOM API's, in some cases, the internal model can change and then the XMLStreamReader that is holding onto the old structure can return invalid data.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,370178,,,2014-01-27 18:27:39.0,,,,,,0|i1rsun:,370480,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unresolvable transitive dependencies from Karaf,CXF-5526,12691375,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,27/Jan/14 13:45,11/Jul/14 12:51,14/Mar/19 02:30,27/Jan/14 16:41,,,,,,,,2.7.9,3.0.0-milestone2,,,Build system,,,,0,,,,,,,,"When building the osgi/itests and services/xkms/xkms-itests modules I'm getting maven dependency resolution failures.
Karaf artifacts pull in the following dependencies which are not available in Maven central and Apache repos afaics:

org.apache.xerces:xercesImpl:jar:2.11.0
org.eclipse:osgi:jar:3.8.0.v20120529-1548

Please note that the latter is available as org.eclipse:org.eclipse.osgi:jar:3.8.0.v20120529-1548 , which suggests an error in the Karaf poms.

I'm going to exclude the wrong dependencies as that does not seem to hurt afaics.",,,,,,,,,,,,,,KARAF-2738,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,370120,,,2014-01-27 13:45:56.0,,,,,,0|i1rshr:,370422,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXBContextInitializer addType stopped handling recursive types (StackOverflow) ,CXF-5524,12691056,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,deni_s,deni_s,24/Jan/14 15:43,11/Jul/14 12:50,14/Mar/19 02:30,29/Jan/14 17:13,2.7.2,2.7.8,3.0.0-milestone1,,,,,2.7.9,3.0.0-milestone2,,,JAXB Databinding,,,,0,,,,,,,,"As I cannot reopen issue CXF-4711, created this one. If it is possible -delete this one and reopen CXF-4711.
Reproduced this bug in latest version of CXF 2.7.8 and 3.0.0-milestone1(as well as in fix version for CXF-4711 - 2.7.2). Same situation described there appears in following case:
{code:title=CxfRecursiveTypeTest.java|borderStyle=solid}

public class CxfRecursiveTypeTest {

    @Test
    public void testRecursiveType() throws Exception {
        Set<Class<?>> classes = new HashSet<Class<?>>();
        Collection<Object> typeReferences = new ArrayList<Object>();
        JAXBContextInitializer jaxbContextInitializer = new JAXBContextInitializer(null, classes, typeReferences);
        Method addClassMethod = JAXBContextInitializer.class.getDeclaredMethod(""addClass"", Class.class);
        addClassMethod.setAccessible(true);
        addClassMethod.invoke(jaxbContextInitializer, Validation.class);
        System.out.println(classes);
    }

    public static class ObjectGraphProcessorItem<T extends ObjectGraphProcessorItem<T>> {

        protected T parentItem;
        protected List<T> childItems = new ArrayList<T>();

        public ObjectGraphProcessorItem(Object object) {
            super();
        }

        public List<T> getChildItems() {
            return childItems;
        }

        public void setChildItems(List<T> childItems) {
            this.childItems = childItems;
        }

        public T getParentItem() {
            return parentItem;
        }

        public void setParentItem(T parentItem) {
            this.parentItem = parentItem;
        }
    }

    public static class Validation extends ObjectGraphProcessorItem<Validation> implements Serializable {

        public Validation() {
            super(null);
        }

        public Validation(Object object) {
            super(object);
        }
    }
}
{code}

{code:title=Stacktrace|borderStyle=solid}
Caused by: java.lang.StackOverflowError
	at java.security.AccessController.doPrivileged(Native Method) [rt.jar:1.7.0_45]
	at org.apache.cxf.common.util.ReflectionUtil.getDeclaredConstructor(ReflectionUtil.java:83) [cxf-api-2.7.8.jar:2.7.8]
	at org.apache.cxf.common.jaxb.JAXBUtils.getValidClass(JAXBUtils.java:516) [cxf-api-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addClass(JAXBContextInitializer.java:280) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:223) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:226) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
{code}",,,,,,,,,,,,,,,,,,,,27/Jan/14 14:12;deni_s;JAXBContextInitializer.java;https://issues.apache.org/jira/secure/attachment/12625359/JAXBContextInitializer.java,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-01-29 17:13:39.581,,,no_permission,,Unknown,,,,,,,,,,,369799,,,Wed Jan 29 17:13:39 UTC 2014,,,,,,0|i1rqin:,370101,,,,,,,,27/Jan/14 14:12;deni_s;Attached JAXBContextInitializer.java with proposed fix.,"29/Jan/14 17:13;dkulp;
Tough time trying to apply the patch due to it not being based on the latest code and some formatting changes, but I think I got it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow override of DestinationRegistryImpl#getTrimmedPath method,CXF-5523,12691006,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,asoldano,asoldano,asoldano,24/Jan/14 10:33,11/Jul/14 12:51,14/Mar/19 02:30,24/Jan/14 10:37,,,,,,,,2.7.9,3.0.0-milestone2,,,Core,,,,0,,,,,,,,"I'd like to use a custom DestinationRegistry implementation doing the same as DestinationRegistryImpl but applying different ""rules"" when trimming the path which is used to add/get entries in the registry's maps. That currently implies overriding most of the DestinationRegistry because the getTrimmedPath is declared static (apparently for no reason).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,369749,,,2014-01-24 10:33:15.0,,,,,,0|i1rq7b:,370050,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting SecurityConstants.STS_TOKEN_ON_BEHALF_OF as string improper handling,CXF-5520,12690885,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,rsearls,rsearls,23/Jan/14 21:24,11/Jul/14 12:51,14/Mar/19 02:30,24/Jan/14 11:59,2.7.8,3.0.0-milestone1,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,JAX-RS Security,,,,0,,,,,,,,"Using: cxf-tr-ws-security-2.7.8

The code in org.apache.cxf.ws.security.trust.AbstractSTSClient
that handles OnBehalfOf as a string requires a fully compliant XML
stmt like this,
    ""<wst:OnBehalfOf xmlns:wst=\""http://docs.oasis-open.org/ws-sx/ws-trust/200512\"">eve</wst:OnBehalfOf>""

807   if (isString) {
808     final Document doc =
809         StaxUtils.read(new StringReader((String) delegationObject));


The documentation does not make it clear that this is the requirement.
In addition based upon existing uses of SecurityConstants it is expected
that a simple name should be acceptable in the case, for example

    SecurityConstants.STS_TOKEN_ON_BEHALF_OF, ""bob""

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,369625,,,2014-01-23 21:24:27.0,,,,,,0|i1rphb:,369930,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting SecurityConstants.STS_TOKEN_ACT_AS as string improper handling,CXF-5518,12690882,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,rsearls,rsearls,23/Jan/14 21:14,11/Jul/14 12:51,14/Mar/19 02:30,24/Jan/14 11:59,2.7.8,3.0.0-milestone1,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,JAX-RS Security,,,,0,,,,,,,,"Using: cxf-tr-ws-security-2.7.8

The code in org.apache.cxf.ws.security.trust.AbstractSTSClient
that handles Act_As as a string requires a fully compliant XML
stmt like this,
    ""<wst:ActAs xmlns:wst=\""http://docs.oasis-open.org/ws-sx/ws-trust/200512\"">eve</wst:ActAs>""

807   if (isString) {
808     final Document doc =
809         StaxUtils.read(new StringReader((String) delegationObject));


The documentation does not make it clear that this is the requirement.
In addition based upon existing uses of SecurityConstants it is expected
that a simple name should be acceptable in the case, for example

    SecurityConstants.STS_TOKEN_ACT_AS, ""bob""
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-01-24 11:50:50.39,,,no_permission,,Unknown,,,,,,,,,,,369622,,,Fri Jan 24 11:50:50 UTC 2014,,,,,,0|i1rpgn:,369927,,,,,,,,"24/Jan/14 11:50;coheigea;
I will improve the documentation, but keep the functionality of requiring an XML String as is for backwards compatibility reasons.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect check for VOID type,CXF-5517,12690862,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,yavalek,yavalek,23/Jan/14 19:35,11/Jul/14 12:50,14/Mar/19 02:30,03/Feb/14 14:23,,,,,,,,2.6.13,2.7.10,3.0.0-milestone2,,,,,,0,void,,,,,,,"There are multiple occurrences in CXF code base for both server and client side which incorrectly deals with VOID return type. For example: 

method.getReturnType() == Void.class 

This fails in case of primitive VOID: 

method.getReturnType() => void.class 

The correct way of checking for VOID is: 

method.getReturnType().equals(Void.TYPE)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-01-31 15:15:06.44,,,no_permission,,Unknown,,,,,,,,,,,369601,,,Mon Feb 03 14:23:22 UTC 2014,,,,,,0|i1rpbz:,369906,,,,,,,,"31/Jan/14 15:15;ay;Maybe we need to fix this.
but Void.TYPE is the same thing as void.class, no?
I just don't know when to use Void.class in comparison.","03/Feb/14 14:23;ay;I kept the Void.class comparison although it's probably unusual to get the return type of Void.class. 

The patch will perform comparison consistently against Void.TYPE (which is equivalent to void.class) and Void.class.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decoupled endpoints are not compatible with @UseAsyncMethod annotation,CXF-5516,12690824,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ashakirin,ashakirin,ashakirin,23/Jan/14 17:48,11/Jul/14 12:50,14/Mar/19 02:30,24/Jan/14 14:41,,,,,,,,2.7.9,3.0.0-milestone2,,,,,,,0,,,,,,,,"In case of use decoupled endpoints in combination with @UseAsyncMethod annotation, code in AbstractJAXWSMethodInvoker tries to suspend transport continuation.
It causes ""java.lang.IllegalStateException: IDLE,initial"" exception and doesn't make sense, because partial response is already sent to the client and new processing thread is started. Full response will be sent in separate transport connection.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,369562,,,2014-01-23 17:48:48.0,,,,,,0|i1rp3b:,369867,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in Using CXF with maven snapshot repository,CXF-5514,12690419,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,cdangerv,cdangerv,22/Jan/14 22:36,10/Apr/17 19:07,14/Mar/19 02:30,23/Jan/14 09:56,2.7.8,,,,,,,,,,,Documentation,,,,0,,,,,,,,"Typo in page Index > Tools > Using CXF with maven, section ""Maven snapshot repository"": closing tag is </reSpositories> instead of </repositories>",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,369371,,,2014-01-22 22:36:59.0,,,,,,0|i1rnwf:,369674,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@UseAsyncMethod annotation doesn't work for classes implementing Provider<T>,CXF-5512,12690318,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ashakirin,ashakirin,ashakirin,22/Jan/14 17:12,11/Jul/14 12:50,14/Mar/19 02:30,23/Jan/14 14:54,3.0.0-milestone1,,,,,,,2.7.9,3.0.0-milestone2,,,,,,,0,,,,,,,,"In case if handler implements Provider<T> interface, the @UseAsyncMethod annotation doesn't work. 
The reason is the following: : JAXWSProviderMethodDispatcher returns invoke() method directly from javax.xml.ws.Provider interface and of course this method doesn't contain any annotation.
Therefore JAXWSMethodInvoker.adjustMethodAndParams() doesn't recognizes @UseAsyncMethod annotation there. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,369271,,,2014-01-22 17:12:52.0,,,,,,0|i1rnan:,369576,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Request.evaluatePreconditions(Date, EntityTag) loses a non-null ResponseBuilder ",CXF-5508,12690078,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jengehau,jengehau,21/Jan/14 18:18,11/Jul/14 12:50,14/Mar/19 02:30,24/Jan/14 18:21,2.7.6,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,JAX-RS,,,,0,,,,,,,,"The problem I reported in https://issues.apache.org/jira/browse/CXF-4231 is back since 2.7.6; we noticed when upgrading to 2.7.8. See also https://fisheye6.atlassian.com/browse/cxf/branches/2.7.x-fixes/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/RequestImpl.java?r2=1503661&r=1494596

The concrete change/problematic part: if (rb != null) { => if (rb == null) {

Any chance for a fix in the next release?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-01-22 11:50:55.635,,,no_permission,,Unknown,,,,,,,,,,,369035,,,Mon Jan 27 13:30:42 UTC 2014,,,,,,0|i1rlun:,369340,,,,,,,,"22/Jan/14 11:50;sergey_beryozkin;I'm pretty sure the last change came after I did some TCK work,

So we have
{code:java}
public ResponseBuilder evaluatePreconditions(Date lastModified, EntityTag eTag) {
        final ResponseBuilder rb = evaluatePreconditions(eTag);
        if (rb == null) {
            // the ETag conditions match; so now conditions for last modified must match
            return evaluatePreconditions(lastModified);
        } else {
            // the ETag conditions do not match, so last modified should be ignored
            // see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html (section 14.26 for
            // ""If-None-Match"", behaviour not specified for ""If-Match"", section 14.24)
            return null;
        }
    }
{code}

and the relevant text:

""If none of the entity tags match, then the server MAY perform the requested method as if the If-None-Match header field did not exist, but MUST also ignore any If-Modified-Since header field(s) in the request. That is, *if no entity tags match, then the server MUST NOT return a 304 (Not Modified) response*.""

The code above will ignore If-Modified-Since if none of the entity tags match, i.e, if they match, then ResponseBuilder is null, and the dates are checked, but if they do not match then null is returned.
Where is the problem ?

Sergey","23/Jan/14 16:57;jengehau;Hello Sergey, sorry for responding so slowly. I have to check our code at work once more, at the moment it appears that our initial interpretation is wrong. http://docs.oracle.com/javaee/6/api/javax/ws/rs/core/Request.html#evaluatePreconditions%28javax.ws.rs.core.EntityTag%29 says that it returns non-null if the preconditions are not met. In our case we send a If-None-Match with the previously obtained ETag value and an If-Modified-Since with the previously obtained modification date. Reading your response and the JavaDoc I'd say the current behaviour is correct. But please let me check this with the our implementation - I'll update the issue once more tomorrow. 

Thank you for looking into this!","24/Jan/14 06:25;jengehau;Hi Sergey,

okay I still think there's an issue here: We're using http://docs.oracle.com/javaee/6/api/javax/ws/rs/core/Request.html#evaluatePreconditions%28java.util.Date,%20javax.ws.rs.core.EntityTag%29 and pass in a weak ETag value (with {{If-None-Match}} header) and the last modified timestamp (with {{If-Modified-Since}} header) - the values are obtained from a previous request. Neither ETag value nor timestamp have changed. In my opinion the preconditions are *not* met; ETag values match, but we say ""send request if ETag does not match or resource has been modified"", in this case a non-{{null}} value should be returned by {{evaluatePreconditions(Date, EntityTag)}} - currently {{null}} is returned, making us send a completely fresh response instead of status code 304.
What do you think?

Kind regards,
Jan","24/Jan/14 17:18;sergey_beryozkin;Hi Jan,

I've looked at http://tools.ietf.org/search/draft-ietf-httpbis-p4-conditional-25#section-3.1.
So,
"" When a client desires to update one or more
   stored responses that have entity-tags, the client SHOULD generate an
   If-None-Match header field containing a list of those entity-tags
   when making a GET request; this allows recipient servers to send a
   304 (Not Modified) response to indicate when one of those stored
   responses *matches* the selected representation.""

In other words, the server sends a new representation if we have no matches.
I think it is correct, right ?

In your case you do have tags matching. And ResponseImpl.evaluateIfNonMatch() returns null to indicate a match which is wrong, if we have a match in If-None-Match case then it means we do need a non-null ResponseBuilder to suggest that no resources have been modified. So I think you are right, the only thing is that the fix needs to be done inside ResponseImpl.evaluateIfNonMatch(), it should return the opposite value of the matching result...  

Thanks, Sergey","24/Jan/14 17:39;sergey_beryozkin;I'm getting confused now. 
RequestImpl.evaluateIfNonMatch does return a non-null Response builder if the tags match. This is exactly correct as per the analysis above. So the JAX-RS code should get a non-null RB and return it.
Therefore the problem in your case appears to be to do with the fact that the entity tags *do not match* which can explain why a null response builder is returned but you said above the ETags do match.

What exactly happens in your case ?  

Thanks, Sergey","24/Jan/14 17:52;sergey_beryozkin;The problem is still within the CXF code though, it is retuning 'null' in the else branch which is problem, we should return the response builder value",24/Jan/14 18:08;sergey_beryozkin;Dates should be checked if ResponseBuilder is null - this is actually correct. The problem is that if ResponseBuilder is not null we still lose it and return null.,"27/Jan/14 06:07;jengehau;Good morning Sergey,

I've tested 2.7.9-SNAPSHOT but unfortunately another scenario we test is not working any more now: Instead of a matching ETag value we send a non-matching one (e.g. ""W/does-not-match"", {{If-None-Match}}) and a matching last modified time stamp (same as from the original response, {{If-Modified-Since}}). In 2.7.5, and to my expectation, this must return status code 200 (OK), a new response - because the ETags differ.

So to summarize: We have the service generate the same ETag and last modification time stamp returning all the time, and we have the following tests:

# send _same ETag value_ for {{If-None-Match}}, _same last modification date_ for {{If-Modified-Since}} - we expect 304 (not modified)
# send _different ETag value_ for {{If-None-Match}}, _same last modification date_ for {{If-Modified-Since}} - we expect 200 (ok, new response)

I think these are valid expectations, do you agree?

Thanks,
Jan","27/Jan/14 10:23;sergey_beryozkin;Hi

So 1. is working, right ? If-None-Match value matches the tag, so we get a non-null ResponseBuilder and 304, ignoring the dates.
2: the tags do not match, we get a null ResponseBuilder and proceed to a Date check, you have the same If-Modified-Since value and the provided Date, so the secondary check returns 304.

So it is about the data comparisons, and in case of If-Modified-Since if the values match it's a non-null RB. 

That appears to be correct to me, where do you see the contradiction ?

Cheers, Sergey
","27/Jan/14 12:33;jengehau;Hi Sergey,
right 1. is working, 2. is not. I think we put the test in, because there is something in the spec about it, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html section 14.26:

{quote}
If none of the entity tags match, then the server MAY perform the requested method as if the If-None-Match header field did not exist, but MUST also ignore any If-Modified-Since header field(s) in the request. *That is, if no entity tags match, then the server MUST NOT return a 304 (Not Modified) response.*
{quote}

Kind regards,
Jan","27/Jan/14 12:45;sergey_beryozkin;Hi Jan,
I think in this case you have to use a single parameter method,

http://docs.oracle.com/javaee/6/api/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag)

otherwise, if we did it as per your suggestion then in the method accepting two parameters, Date *will never be used*. In fact, I'm not seeing anything like ""MUST NOT"" in the latest HTTP spec effort:
http://tools.ietf.org/search/draft-ietf-httpbis-p4-conditional-25#section-6

I think all is good now. If you do not want to use a secondary Date check then simply do Request.evaluatePreconditions(EntityTag)

Thanks, Sergey

","27/Jan/14 13:02;jengehau;Hi Sergey,
alright, we'll think about that. The draft of the spec of course is not ""in the wild yet"", though ;-) - by the way, is there any planned date for the release of 2.7.9?
Thanks, and all the best,
Jan","27/Jan/14 13:30;sergey_beryozkin;Sure, the latest draft is still a draft, but I reckon a lot of HTTP 1.1 related text improvements based on the years of practice have made into it. That said, in this case, it is more of a Java issue, because using a 2-parameter method means the application code actually expects a secondary check if the primary one returns null :-)

2.7.9 should be out hopefully in the next couple of weeks

Thanks, Sergey
",,,,,,,,,,,,,,,,,,,,,,,
Missing alternativeSelector handling in ws-policy feature's blueprint configuration,CXF-5507,12690074,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,21/Jan/14 18:07,11/Jul/14 12:50,14/Mar/19 02:30,22/Jan/14 17:01,2.7.8,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,WS-* Components,,,,0,,,,,,,,"alternativeSelector is not handled in ws-policy feature's blueprint configuration.

Note it is handled in spring configuration and also for ws-policy's engine configuration in blueprint.



",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,369031,,,2014-01-21 18:07:04.0,,,,,,0|i1rltr:,369336,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make ws-addressing schema available during blueprint schema resolution,CXF-5506,12690032,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,21/Jan/14 15:01,11/Jul/14 12:51,14/Mar/19 02:30,21/Jan/14 17:29,2.7.8,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Core,,,,0,,,,,,,,"ws-addressing schemas are included in cxf-api (or in cxf-core in 3.x) but not made available locally during blueprint's schema parsing.

i think we should expose this schema from cxf-api so that a schema referencing ws-addressing can be processed without internet connection.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,368989,,,2014-01-21 15:01:52.0,,,,,,0|i1rlk7:,369293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SpringBus should shutdown the bus when the application context is closed,CXF-5505,12690004,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,21/Jan/14 11:45,11/Jul/14 12:51,14/Mar/19 02:30,28/Jan/14 19:22,2.6.11,2.7.8,3.0.0-milestone1,,,,,2.6.12,2.7.9,3.0.0-milestone2,,,,,,0,,,,,,,,"I was tracing a CXFBus leak issue recently. 

Here are the some details about the application bundle:  

There is a Spring application context holds a camel context which has a camel-cxf endpoint to receive the invocation from outside. When the application bundle is uninstalled from Karaf, the SpringBus doesn’t shutdown itself and CXFBusFactory doesn’t clean itself up. 

If the application bundle is changed to use Blueprint to load the same Camel context, we don’t find any Bus leak by dump the memory of the JVM. 

I dig the SpringBus code and found it registers an ApplicationListener which handles application context refresh and close event, but it doesn't shutdown the bus when it go the context close event.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,368961,,,2014-01-21 11:45:49.0,,,,,,0|i1rldz:,369265,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractLoggingInterceptor.getMessageLogger throws NPE when MultipleEndpointObserver is used,CXF-5504,12689844,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,vadimb,vadimb,20/Jan/14 17:40,10/Apr/17 19:04,14/Mar/19 02:30,05/Apr/17 19:05,2.5,,,,,,,3.0,,,,Core,,,,0,,,,,,,,"The method {{AbstractLoggingInterceptor#getMessageLogger(Message)}} that was introduced by CXF-3888 assumes that {{message.getExchange().getEndpoint()}} is not null.

This assumption does not work if one uses {{org.apache.cxf.transport.MultipleEndpointObserver}} as the message observer, leading to NPE:

{noformat}
java.lang.NullPointerException: null
	at org.apache.cxf.interceptor.AbstractLoggingInterceptor.getMessageLogger(AbstractLoggingInterceptor.java:78) ~[cxf-2.5.9.jar:2.5.9]
	at org.apache.cxf.interceptor.LoggingInInterceptor.handleMessage(LoggingInInterceptor.java:73) ~[cxf-2.5.9.jar:2.5.9]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263) ~[cxf-2.5.9.jar:2.5.9]
	at org.apache.cxf.transport.MultipleEndpointObserver.onMessage(MultipleEndpointObserver.java:98) [cxf-2.5.9.jar:2.5.9]
...
{noformat}

Would it be possible to check first if endpoint is present?
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-04-05 19:05:02.966,,,no_permission,,Unknown,,,,,,,,,,,368811,,,Wed Apr 05 19:05:02 UTC 2017,,,,,,0|i1rkgn:,369115,,,,,,,,"20/Jan/14 22:31;vadimb;Like this:
{code}
    Logger getMessageLogger(Message message) {
        // {{{
        if (message.getExchange().getEndpoint() == null)
            return getLogger();
        // }}}
        EndpointInfo endpoint = message.getExchange().getEndpoint().getEndpointInfo();
        if (endpoint.getService() == null) {
            return getLogger();
        }
        Logger logger = endpoint.getProperty(""MessageLogger"", Logger.class);
        ...
{code}","21/Jan/14 10:19;vadimb;Relevant places in AbstractLoggingInterceptor and MultipleEndpointObserver have not changed in subsequent releases, so I presume the problem is still there in 2.7 and 3.0.","07/Apr/14 13:24;vadimb;a way to reproduce it is to add LoggingInInterceptor to systests/uncategorized/src/test/java/org/apache/cxf/systest/versioning/ClientServerVersioningTest.java:
{noformat}
@@ -21,11 +21,13 @@ package org.apache.cxf.systest.versioning;
 
 import java.lang.reflect.UndeclaredThrowableException;
 
 import javax.xml.namespace.QName;
 
-
+import org.apache.cxf.Bus;
+import org.apache.cxf.BusFactory;
+import org.apache.cxf.interceptor.LoggingInInterceptor;
 import org.apache.cxf.testutil.common.AbstractClientServerTestBase;
 import org.apache.hello_world_mixedstyle.Greeter;
 import org.apache.hello_world_mixedstyle.SOAPService;
 import org.apache.hello_world_mixedstyle.types.GreetMe1;
 import org.apache.hello_world_mixedstyle.types.GreetMeResponse;
@@ -37,10 +39,12 @@ public class ClientServerVersioningTest extends AbstractClientServerTestBase {
     private final QName portName = new QName(""http://apache.org/hello_world_mixedstyle"", ""SoapPort"");
 
     @BeforeClass
     public static void startServers() throws Exception {
         assertTrue(""server did not launch correctly"", launchServer(Server.class));
+        Bus bus = BusFactory.getDefaultBus();
+        bus.getInInterceptors().add(new LoggingInInterceptor());
     }
     
     @Test
     public void testVersionBasedRouting() throws Exception {
 
{noformat}",05/Apr/17 19:05;dkulp;This seems to be fixed now.  No longer NPE's,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SAML 2.0 SenderVouches / IssuedToken policy bug,CXF-5503,12689822,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,20/Jan/14 14:56,11/Jul/14 12:51,14/Mar/19 02:30,20/Jan/14 15:30,2.7.8,,,,,,,2.7.9,,,,WS-* Components,,,,0,,,,,,,,"
When an STS issues a SenderVouches SAML 2.0 Assertion, a CXF client does not correctly sign the Assertion via a SecuritTokenReference transform in the service request.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-01-20 22:23:08.154,,,no_permission,,Unknown,,,,,,,,,,,368789,,,Mon Jan 20 22:23:08 UTC 2014,,,,,,0|i1rkbr:,369093,,,,,,,,"20/Jan/14 22:23;japearson;I just tested this locally with my 3rd party STS, and it worked like a treat, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NettyHttpServletPipelineFactory doesn't shutdown the executor for running application,CXF-5501,12689761,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,20/Jan/14 04:32,11/Jul/14 12:50,14/Mar/19 02:30,20/Jan/14 07:50,3.0.0-milestone1,,,,,,,3.0.0-milestone2,,,,,,,,0,,,,,,,,We need to shutdown the application executor when the NettyHttpServletPipelineFactory is shut down.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,368728,,,Mon Jan 20 07:50:47 UTC 2014,,,,,,0|i1rjy7:,369032,,,,,,,,20/Jan/14 07:50;njiang;Applied the patch into trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FINE logging could result in OOM,CXF-5500,12689512,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,17/Jan/14 15:51,11/Jul/14 12:50,14/Mar/19 02:30,17/Jan/14 17:13,2.6.11,2.7.8,3.0.0-milestone1,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Transports,,,,0,,,,,,,,"If using large messages (like large MTOM) and FINE logging and cached output (redirects or other), the HTTP conduit will try to load the entire message into memory to log it.   This should be limitted to prevent OOM scenarios.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,368479,,,2014-01-17 15:51:16.0,,,,,,0|i1riev:,368783,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
http async feature does not work with http async client 4.0,CXF-5499,12689508,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,17/Jan/14 15:43,11/Jul/14 12:51,14/Mar/19 02:30,15/Apr/14 08:49,3.0.0-milestone2,,,,,,,3.0,,,,,,,,0,,,,,,,,Update to http async client version 4.0.1.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,368475,,,2014-01-17 15:43:57.0,,,,,,0|i1ridz:,368779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
W3CDOMStreamReader does not check the DOM-Level in all Cases,CXF-5498,12689481,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mail@johannesrost.de,mail@johannesrost.de,17/Jan/14 11:30,11/Jul/14 12:46,14/Mar/19 02:30,17/Jan/14 17:14,2.6.11,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Core,,,,0,,,,,,,,"In some Methods of org.apache.cxf.staxutils.W3CDOMStreamReader the DOM Level of the underlying DOM-implementation is checked (e.g. 'getLocation()'), but this is not true for all methods.

The method 'getSystemId' calls 'org.w3c.dom.Document.getDocumentURI()' without handling exceptions/errors from implementations which are not DOM Level 3. When running under Weblogic this results in the following error, which occours when validating the schema for a not schema valid XML structure:
{code}
java.lang.AssertionError: UNIMPLEMENTED
	at weblogic.xml.domimpl.DocumentImpl.getDocumentURI(DocumentImpl.java:466)
	at org.apache.cxf.staxutils.W3CDOMStreamReader.getSystemId(W3CDOMStreamReader.java:90)
	at org.apache.cxf.staxutils.AbstractDOMStreamReader$1.getSystemId(AbstractDOMStreamReader.java:343)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector$1.getSystemId(StAXConnector.java:100)
	at com.sun.org.apache.xerces.internal.util.SAXLocatorWrapper.getLiteralSystemId(SAXLocatorWrapper.java:63)
	at com.sun.org.apache.xerces.internal.xni.parser.XMLParseException.<init>(XMLParseException.java:71)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:365)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:417)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3182)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1806)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHandlerImpl.startElement(ValidatorHandlerImpl.java:550)
	at com.sun.xml.bind.v2.runtime.unmarshaller.ValidatingUnmarshaller.startElement(ValidatingUnmarshaller.java:89)
	at com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor.startElement(InterningXmlVisitor.java:71)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleStartElement(StAXStreamConnector.java:275)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:209)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:358)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:337)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.doUnmarshal(JAXBEncoderDecoder.java:769)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.access$100(JAXBEncoderDecoder.java:94)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder$1.run(JAXBEncoderDecoder.java:797)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:795)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:629)
	at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:157)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:194)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:237)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:214)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:194)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:130)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:226)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:146)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:201)
	at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:227)
{code}",Weblogic on Windows,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,368448,,,2014-01-17 11:30:00.0,,,,,,0|i1ri7z:,368752,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STSClient is not sending a KeySize for SecureConversation in every circumstance,CXF-5497,12689478,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,17/Jan/14 10:49,11/Jul/14 12:50,14/Mar/19 02:30,17/Jan/14 10:53,2.6.11,2.7.8,,,,,,2.6.12,2.7.9,,,WS-* Components,,,,0,,,,,,,,"
CXF is not sending a KeySize for SecureConveration in certain circumstances. For example, it sends a KeySize for 128, but not for 256.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,368445,,,2014-01-17 10:49:17.0,,,,,,0|i1ri7b:,368749,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WADL to Java code generator can get element names with '-' added to Java method names,CXF-5494,12689208,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,16/Jan/14 11:47,11/Jul/14 12:51,14/Mar/19 02:30,16/Jan/14 12:11,,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,368175,,,2014-01-16 11:47:47.0,,,,,,0|i1rgjj:,368480,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAPFaultException has empty message in case of response containing CDATA in fault:faultstring (SOAP 1.1),CXF-5493,12688545,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dont_know,dont_know,13/Jan/14 14:21,11/Jul/14 12:50,14/Mar/19 02:30,17/Jan/14 17:14,2.7.7,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,,,,,0,,,,,,,,"If the called web service (SOAP 1.1) returns a fault with a faultstring containing a <!\[CDATA\[...\]\]> element

{code:xml}
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soapenv:Header/>
  <soap:Body xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
    <soap:Fault>
      <faultcode>soap:Server</faultcode>
      <faultstring><![CDATA[some text containing a xml tag <xml-tag>]]></faultstring>
    </soap:Fault>
  </soap:Body>
</soap:Envelope>
{code}

then the message in the resulting SOAPFaultException is empty. If the faultstring contains only ""simple characters"" everything is fine.

I think this issue was introduced with the fixing of bug [https://issues.apache.org/jira/browse/CXF-4181].",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-01-17 16:33:26.845,,,no_permission,,Unknown,,,,,,,,,,,367564,,,Fri Jan 17 16:33:26 UTC 2014,,,,,,0|i1rcuf:,367872,,,,,,,,"17/Jan/14 16:33;dkulp;
FYI:  this only happens if something causes the whole SOAP message to be loaded into a DOM/SAAJ such as security interceptors, JAX-WS handlers, etc...   It's a bug in DOMUilts called from the W3CDOMStreamReader.   Fixing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf 2.7.7 without the internet will throw Socket exception and wouldn't launch,CXF-5491,12688393,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,hejy__,hejy__,11/Jan/14 14:22,11/Jul/14 12:51,14/Mar/19 02:30,17/Jan/14 19:02,,,,,,,,2.7.9,,,,,,,,0,cxf,socketException,,,,,,"Hello,there

If my computer connect with the internet, the cxf app will launch normally, But, If cut off the internet connection, the cxf app will launch failed and throw the socket exception, as the following, I don't know whether it is a bug or I miss any configuration. But, if I change the version of cxf to 2.4, It will be all fine. and before this, I try the version 2.7.8 and 3.0, but It doesn't work.Can anyone fix this problem or tell me how to configure?

THX

2014-1-11 21:46:00 org.apache.catalina.core.AprLifecycleListener init
信息: The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: D:\ProgramFiles\Java\JDK1.6\bin;D:\ProgramFiles\apache-tomcat-7.0.20\bin
2014-1-11 21:46:00 org.apache.coyote.AbstractProtocol init
信息: Initializing ProtocolHandler [""http-bio-8080""]
2014-1-11 21:46:00 org.apache.coyote.AbstractProtocol init
信息: Initializing ProtocolHandler [""ajp-bio-8009""]
2014-1-11 21:46:00 org.apache.catalina.startup.Catalina load
信息: Initialization processed in 464 ms
2014-1-11 21:46:00 org.apache.catalina.core.StandardService startInternal
信息: Starting service Catalina
2014-1-11 21:46:00 org.apache.catalina.core.StandardEngine startInternal
信息: Starting Servlet Engine: Apache Tomcat/7.0.20
2014-1-11 21:46:00 org.apache.catalina.startup.HostConfig deployDirectory
信息: Deploying web application directory aaa
2014-1-11 21:46:01 org.apache.catalina.loader.WebappClassLoader validateJarFile
信息: validateJarFile(D:\ProgramFiles\apache-tomcat-7.0.20\webapps\aaa\WEB-INF\lib\geronimo-servlet_3.0_spec-1.0.jar) - jar not loaded. See Servlet Spec 2.3, section 9.7.2. Offending class: javax/servlet/Servlet.class
2014-1-11 21:46:01 org.apache.catalina.core.ApplicationContext log
信息: Initializing Spring root WebApplicationContext
2014-1-11 21:46:01 org.springframework.web.context.ContextLoader initWebApplicationContext
信息: Root WebApplicationContext: initialization started
2014-1-11 21:46:01 org.springframework.context.support.AbstractApplicationContext prepareRefresh
信息: Refreshing Root WebApplicationContext: startup date [Sat Jan 11 21:46:01 CST 2014]; root of context hierarchy
2014-1-11 21:46:01 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
信息: Loading XML bean definitions from file [D:\ProgramFiles\apache-tomcat-7.0.20\webapps\aaa\WEB-INF\classes\spring-datasource.xml]
2014-1-11 21:46:02 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
信息: Loading XML bean definitions from class path resource [cxf-service.xml]
2014-1-11 21:46:02 org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons
信息: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@12d49e7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,helloService,inMessageInterceptor,outMessageInterceptor,restService]; root of factory hierarchy
2014-1-11 21:46:03 org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromClass
信息: Creating Service {http://htht.com}helloService from class com.htht.ws.ds.HelloService
2014-1-11 21:46:04 org.apache.cxf.endpoint.ServerImpl initDestination
信息: Setting the server's publish address to be /helloService1
2014-1-11 21:46:05 org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromWSDL
信息: Creating Service {http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}Discovery from WSDL: classpath:/org/apache/cxf/ws/discovery/wsdl/wsdd-discovery-1.1-wsdl-os.wsdl
2014-1-11 21:46:05 org.apache.cxf.endpoint.ServerImpl initDestination
信息: Setting the server's publish address to be soap.udp://239.255.255.250:3702
java.net.SocketException: error setting options
	at java.net.PlainDatagramSocketImpl.join(Native Method)

	at java.net.PlainDatagramSocketImpl.join(PlainDatagramSocketImpl.java:172)
	at java.net.MulticastSocket.joinGroup(MulticastSocket.java:276)
	at org.apache.cxf.transport.udp.UDPDestination.activate(UDPDestination.java:168)
	at org.apache.cxf.transport.AbstractObservable.setMessageObserver(AbstractObservable.java:49)
	at org.apache.cxf.binding.AbstractBaseBindingFactory.addListener(AbstractBaseBindingFactory.java:95)
	at org.apache.cxf.binding.soap.SoapBindingFactory.addListener(SoapBindingFactory.java:895)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:131)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:362)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.startup(WSDiscoveryServiceImpl.java:238)
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.serverStarted(WSDiscoveryServiceImpl.java:148)
	at org.apache.cxf.ws.discovery.listeners.WSDiscoveryServerListener.startServer(WSDiscoveryServerListener.java:73)
	at org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl.startServer(ServerLifeCycleManagerImpl.java:61)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:146)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:362)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:539)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1487)

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:518)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:455)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:282)

	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:204)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4723)
	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5226)

	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5221)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
2014-1-11 21:46:05 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry destroySingletons
信息: Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@12d49e7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,helloService,inMessageInterceptor,outMessageInterceptor,restService]; root of factory hierarchy
2014-1-11 21:46:05 org.springframework.web.context.ContextLoader initWebApplicationContext
严重: Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'helloService': Invocation of init method failed; nested exception is javax.xml.ws.WebServiceException: javax.xml.ws.WebServiceException: java.lang.RuntimeException: java.net.SocketException: error setting options
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:518)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:455)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:282)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:204)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4723)
	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5226)
	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5221)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
Caused by: javax.xml.ws.WebServiceException: javax.xml.ws.WebServiceException: java.lang.RuntimeException: java.net.SocketException: error setting options
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:371)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:539)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1419)
	... 20 more
Caused by: javax.xml.ws.WebServiceException: java.lang.RuntimeException: java.net.SocketException: error setting options
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:371)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.startup(WSDiscoveryServiceImpl.java:238)
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.serverStarted(WSDiscoveryServiceImpl.java:148)
	at org.apache.cxf.ws.discovery.listeners.WSDiscoveryServerListener.startServer(WSDiscoveryServerListener.java:73)
	at org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl.startServer(ServerLifeCycleManagerImpl.java:61)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:146)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:362)
	... 29 more
Caused by: java.lang.RuntimeException: java.net.SocketException: error setting options
	at org.apache.cxf.transport.udp.UDPDestination.activate(UDPDestination.java:185)
	at org.apache.cxf.transport.AbstractObservable.setMessageObserver(AbstractObservable.java:49)
	at org.apache.cxf.binding.AbstractBaseBindingFactory.addListener(AbstractBaseBindingFactory.java:95)
	at org.apache.cxf.binding.soap.SoapBindingFactory.addListener(SoapBindingFactory.java:895)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:131)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:362)
	... 36 more
Caused by: java.net.SocketException: error setting options
	at java.net.PlainDatagramSocketImpl.join(Native Method)
	at java.net.PlainDatagramSocketImpl.join(PlainDatagramSocketImpl.java:172)
	at java.net.MulticastSocket.joinGroup(MulticastSocket.java:276)
	at org.apache.cxf.transport.udp.UDPDestination.activate(UDPDestination.java:168)
	... 41 more
2014-1-11 21:46:05 org.apache.catalina.core.StandardContext listenerStart
严重: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'helloService': Invocation of init method failed; nested exception is javax.xml.ws.WebServiceException: javax.xml.ws.WebServiceException: java.lang.RuntimeException: java.net.SocketException: error setting options
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:518)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:455)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:282)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:204)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4723)
	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5226)
	at org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5221)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
Caused by: javax.xml.ws.WebServiceException: javax.xml.ws.WebServiceException: java.lang.RuntimeException: java.net.SocketException: error setting options
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:371)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:539)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1419)
	... 20 more
Caused by: javax.xml.ws.WebServiceException: java.lang.RuntimeException: java.net.SocketException: error setting options
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:371)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.startup(WSDiscoveryServiceImpl.java:238)
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.serverStarted(WSDiscoveryServiceImpl.java:148)
	at org.apache.cxf.ws.discovery.listeners.WSDiscoveryServerListener.startServer(WSDiscoveryServerListener.java:73)
	at org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl.startServer(ServerLifeCycleManagerImpl.java:61)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:146)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:362)
	... 29 more
Caused by: java.lang.RuntimeException: java.net.SocketException: error setting options
	at org.apache.cxf.transport.udp.UDPDestination.activate(UDPDestination.java:185)
	at org.apache.cxf.transport.AbstractObservable.setMessageObserver(AbstractObservable.java:49)
	at org.apache.cxf.binding.AbstractBaseBindingFactory.addListener(AbstractBaseBindingFactory.java:95)
	at org.apache.cxf.binding.soap.SoapBindingFactory.addListener(SoapBindingFactory.java:895)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:131)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:362)
	... 36 more
Caused by: java.net.SocketException: error setting options
	at java.net.PlainDatagramSocketImpl.join(Native Method)
	at java.net.PlainDatagramSocketImpl.join(PlainDatagramSocketImpl.java:172)
	at java.net.MulticastSocket.joinGroup(MulticastSocket.java:276)
	at org.apache.cxf.transport.udp.UDPDestination.activate(UDPDestination.java:168)
	... 41 more
2014-1-11 21:46:05 org.apache.catalina.core.StandardContext startInternal
严重: Error listenerStart
2014-1-11 21:46:05 org.apache.catalina.core.StandardContext startInternal
严重: Context [/aaa] startup failed due to previous errors
2014-1-11 21:46:05 org.apache.catalina.core.ApplicationContext log
信息: Closing Spring root WebApplicationContext
2014-1-11 21:46:05 org.apache.catalina.startup.HostConfig deployDirectory
信息: Deploying web application directory docs
2014-1-11 21:46:05 org.apache.catalina.startup.HostConfig deployDirectory
信息: Deploying web application directory examples
2014-1-11 21:46:05 org.apache.catalina.core.ApplicationContext log
信息: ContextListener: contextInitialized()
2014-1-11 21:46:05 org.apache.catalina.core.ApplicationContext log
信息: SessionListener: contextInitialized()
2014-1-11 21:46:05 org.apache.catalina.core.ApplicationContext log
信息: ContextListener: attributeAdded('org.apache.jasper.compiler.TldLocationsCache', 'org.apache.jasper.compiler.TldLocationsCache@1c64df3')
2014-1-11 21:46:05 org.apache.catalina.startup.HostConfig deployDirectory
信息: Deploying web application directory host-manager
2014-1-11 21:46:05 org.apache.catalina.startup.HostConfig deployDirectory
信息: Deploying web application directory manager
2014-1-11 21:46:05 org.apache.catalina.startup.HostConfig deployDirectory
信息: Deploying web application directory ROOT
2014-1-11 21:46:06 org.apache.coyote.AbstractProtocol start
信息: Starting ProtocolHandler [""http-bio-8080""]
2014-1-11 21:46:06 org.apache.coyote.AbstractProtocol start
信息: Starting ProtocolHandler [""ajp-bio-8009""]
2014-1-11 21:46:06 org.apache.catalina.startup.Catalina start
信息: Server startup in 5205 ms
",cxf2.7.7,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-01-17 19:02:25.875,,,no_permission,,Unknown,,,,,,,,,,,367412,,,Fri Jan 24 10:51:12 UTC 2014,,,,,,0|i1rbwv:,367721,,,,,,,,"17/Jan/14 19:02;dkulp;
This is now fixed by allowing the WS-Discovery service to not block the starting of other services if it fails to start.  (will log a warning)

You can likely work around this by removing the ws-discovery stuff from your war.  (assuming you don't need it)","19/Jan/14 11:56;hejy__;Thanks, Daniel, It works when I remove the jar named ""cxf-services-ws-discovery-service-2.7.7.jar"" and ""cxf-services-ws-discovery-service-2.7.7.jar"". But I want to know when I should use those jars? How it will affect others when I remove those jars?","24/Jan/14 10:51;hejy__;Hello,Daniel

Is cxf webservice singleton? If I want to define the webservice as prototype, how could I do ? 
I integrate cxf with spring, and I define the @Component and @Scope(BeanDefinition.SCOPE_PROTOTYPE), but it doesn't work.Could you help me out?

Thanks,
James",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Apache CXF kit bin directory is not set with access right,CXF-5485,12687832,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,08/Jan/14 09:39,11/Jul/14 12:50,14/Mar/19 02:30,08/Jan/14 11:14,,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Build system,,,,0,,,,,,,,"When I extracted Apache CXF 2.7.9-SNAPSHOT kit which I build from 2.7.x-fixes/ branch, I found the bin directory  is not set with access right, I had to use chmod 755 to reset the bin directory access right.

BTW, I'm using maven 3.0.5, the assemble maven plugin is 2.4 to build the kit.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,366836,,,Wed Jan 08 11:14:36 UTC 2014,,,,,,0|i1r8dr:,367147,,,,,,,,"08/Jan/14 11:14;njiang;Applied the patch into trunk, 2.7.x-fixes and 2.6.x-fixes branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAASAuthenticationFilter cannot separate 3rdParty java.security.Principals based on user/role,CXF-5484,12687667,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,adamspe,adamspe,07/Jan/14 15:45,11/Jul/14 12:50,14/Mar/19 02:30,08/Jan/14 09:16,2.7.8,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,JAX-RS,,,,0,,,,,,,,"This is an obscure issue but org.apache.cxf.jaxrs.security.JAASAuthenticationFilter internally uses an instance of org.apache.cxf.interceptor.security.JAASLoginInterceptor to handle authentication for it.  It simply over-rides the ""getCallbackHandler"" method to provide credentials gathered via HTTP to the interceptor.  There are a few setters that allow conditioning of the underlying interceptor but there are no setters for roleClassifier/roleClassifierType.
e.g.
public void setRoleClassifier(String rc) { interceptor.setRoleClassifier(rc); }
public void setRoleClassifierType(String rct) { interceptor.setRoleClassifierType(rct);}

In my specific use I'm embedded CXF JAX-RS services in Jetty within Apache Karaf and I need to gain access to the appropriate java.security.Principal representing the user that authenticated for a given resource.

The LoginModule that represents the realm is an instance of org.apache.karaf.jaas.modules.ldap.LDAPLoginModule.  This LoginModule produces a Subject populated with two types of Principals
org.apache.karaf.jaas.modules.RolePrincipal abd
org.apache.karaf.jaas.modules.UserPrincipal


The former represents the roles (groups) a user is in and the latter obviously represents the actual user principal.  In this situation however the existing JAASAuthenticationFilter has no means of separating out the two since it cannot be conditioned to determine which is which and as a result when consulting the results of javax.ws.rs.core.SecurityContext.getUserPrincipal(); it's undetermined which Principal will be returned and it's almost always the wrong one (a RolePrincipal rather than the UserPrincipal).

The only way I could deal with this and get access to the correct Principal was to sub-class JAASAuthenticationFilter, duplicate some of its code, and condition the interceptor how I needed (I hard coded but setters obviously would have been more appropriate).

E.g.
public class JAASAuthenticationFilter extends
        org.apache.cxf.jaxrs.security.JAASAuthenticationFilter {

    private JAASLoginInterceptor interceptor = new JAASLoginInterceptor() {
        protected CallbackHandler getCallbackHandler(String name,String password) {
            return JAASAuthenticationFilter.this.getCallbackHandler(name,password);
        }
    };

    public void setContextName(String name) {
        interceptor.setContextName(name);
    }

    public void setLoginConfig(Configuration config) {
        interceptor.setLoginConfig(config);
    }

    @Override
    public Response handleRequest(Message m, ClassResourceInfo cri) {
        try {
        	interceptor.setRoleClassifierType(""classname"");
        	interceptor.setRoleClassifier(""RolePrincipal"");
            interceptor.handleMessage(m);
            return null;
        } catch (AuthenticationException ex) {
            return handleAuthenticationException(ex, m);
        } catch (SecurityException ex) {
            return handleAuthenticationException(ex, m);
        }
    }

}

And then at config time.
    <!-- bean id=""authenticationFilter"" class=""org.apache.cxf.jaxrs.security.JAASAuthenticationFilter""-->
    <bean id=""authenticationFilter"" class=""cxf.workaround.JAASAuthenticationFilter"">
        <property name=""contextName"" value=""...""/>
        <property name=""realmName"" value=""...""/>
    </bean>

If the two setters existed on org.apache.cxf.jaxrs.security.JAASAuthenticationFilter then I could have simply added:
<property name=""roleClassifierType"" value=""classname"" />
<property name=""roleClassifier"" value=""RolePrincipal"" />

And things would have worked properly.

Interestingly JAASAuthentication filter DOES implement a deprecated method that I could use to deal with this, setRoleClassifier, which calls through to the same deprecated method on the interceptor.  I'll probably switch to doing this but it seems that setRolePrefix has been replaced by the setRoleClassifier/Type methods so it also seems JAASAuthenticationFilter should mimic these methods.

I take it back setRolePrefix is not an acceptable workaround because it doesn't compare to the classname of the Principal it compares it against the actual name meaning that Roles/Groups must be named by some convention that allows them to be separated from users which is why the method has been deprecated...

",Embedded in Karaf,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-01-08 03:51:49.08,,,no_permission,,Moderate,,,,,,,,,,,366667,,,Wed Jan 08 09:16:29 UTC 2014,,,,,,0|i1r7bz:,366978,,,,,,,,"08/Jan/14 03:51;ffang;Yeah, introduce roleClassifier/roleClassifierType configuration like we do for JAASLoginInterceptor should be the way to go","08/Jan/14 09:16;ffang;commit fix
http://svn.apache.org/r1556465 for trunk
http://svn.apache.org/r1556468 for 2.7.x branch
http://svn.apache.org/r1556471 for 2.6.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Element Id not unique in AbstractBindingBuilder,CXF-5480,12686782,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,freddy.exposito,freddy.exposito,30/Dec/13 18:50,11/Jul/14 12:51,14/Mar/19 02:30,03/Jan/14 11:51,2.6.11,2.7.7,,,,,,2.6.12,2.7.9,,,JAX-WS Runtime,,,,0,,,,,,,,"Hi All,
We are facing duplicate issues running CXF in a heavy multi-thread application. It's very hard to replicate it but It's happening creating the id in the method AbstractBindingBuilder.addWsuIdToElement(). Right now hashCode is being used (id=""Id-"" + elem.hashCode()) for it. 

Although we did the test for CXF 2.6.2, we believe the issue remains as CXF is still using hasCode() there to generate the IDS.

Are we missing something or a fix is required here to ensure a unique ID?

This is the fix that we added in our environment:
//id = ""Id-"" + elem.hashCode();
id = ""Id-"" + UUID.randomUUID().toString().replace(""-"", """").toUpperCase();

Below, is the trace that  we got adding some ""prints"" (patch for the prints is attached). 

---------------------
StoreTask@6628dafb Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-945293019 for Element soap:Body
StoreTask@1a7d1d34 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-1860657187 for Element soap:Body
StoreTask@6628dafb Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-455749827 for Element To
StoreTask@1a7d1d34 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-1860657187 for Element To
StoreTask@6628dafb Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-408474295 for Element ReplyTo
StoreTask@1a7d1d34 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-1869740253 for Element ReplyTo
StoreTask@58c8f5b1 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-455749827 for Element soap:Body
StoreTask@717a6500 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-945293019 for Element soap:Body
StoreTask@58c8f5b1 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-620811627 for Element To
StoreTask@717a6500 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-1505457863 for Element To
StoreTask@58c8f5b1 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-577974487 for Element ReplyTo
StoreTask@717a6500 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-948667628 for Element ReplyTo
StoreTask@58c8f5b1 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-1338228468 for Element MessageID
StoreTask@717a6500 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-1009626645 for Element MessageID
StoreTask@58c8f5b1 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-1526727568 for Element Action
StoreTask@717a6500 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-1575621020 for Element Action
StoreTask@1a7d1d34 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-605298438 for Element MessageID
StoreTask@6628dafb Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-596225620 for Element MessageID
StoreTask@1a7d1d34 Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-841631983 for Element Action
StoreTask@6628dafb Mon Dec 23 08:31:35 CST 2013-ICCLOG - In AbstractBindingBuilder, created id =Id-1981439139 for Element Action
StoreTask@717a6500 Mon Dec 23 08:31:35 CST 2013-ICCLOG - Executing doSignatureDK ***
id=Id-945293019
id=Id-1505457863
id=Id-948667628
id=Id-1009626645
id=Id-1575621020
id=TS-10599689

StoreTask@1a7d1d34 Mon Dec 23 08:31:35 CST 2013-ICCLOG - Executing doSignatureDK ***
id=Id-1860657187
id=Id-1860657187
id=Id-1869740253
id=Id-605298438
id=Id-841631983
id=TS-10599690

Thanks,
Freddy",,,,,,,,,,,,,,,,,,,,30/Dec/13 18:52;freddy.exposito;LOGGING-for-DUPLICATE.patch;https://issues.apache.org/jira/secure/attachment/12620863/LOGGING-for-DUPLICATE.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-01-03 11:24:29.519,,,no_permission,,Unknown,,,,,,,,,,,365775,,,Fri Jan 03 11:24:29 UTC 2014,,,,,,0|i1r1tj:,366082,,,,,,,,"03/Jan/14 11:24;coheigea;
I've updated the code to use the ID Allocator in WSSConfig instead, so this should fix the problem.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE while trying to create a dispatch for SOAP service without port address specified in WSDL,CXF-5476,12686529,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,tivv,tivv,27/Dec/13 15:20,11/Jul/14 12:50,14/Mar/19 02:30,17/Jan/14 20:26,2.7.3,,,,,,,2.6.12,2.7.9,,,JAX-WS Runtime,,,,0,,,,,,,,"I am trying to create a dispatch from WSDL-based service, specifying port name, jaxbContext and Mode = Payload.
I am getting NullPointerException:
{code}
Caused by: java.lang.NullPointerException
	at org.apache.cxf.jaxws.ServiceImpl.getJaxwsEndpoint(ServiceImpl.java:254)
	at org.apache.cxf.jaxws.ServiceImpl.createDispatch(ServiceImpl.java:625)
	at org.apache.cxf.jaxws.ServiceImpl.createDispatch(ServiceImpl.java:694)
	at org.apache.cxf.jaxws.ServiceImpl.createDispatch(ServiceImpl.java:686)
	at javax.xml.ws.Service.createDispatch(Service.java:488)
{code}
because of this line 
{code}
        if (portInfo != null && !portInfo.getAddress().equals(ei.getAddress())) {
{code}
postInfo is not null, but it's address is null in my case. I am going to set javax.xml.ws.service.endpoint.address request property to use the dispatch created.

P.S. I've checked on trunk, it has same code",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,365520,,,Fri Dec 27 15:29:51 UTC 2013,,,,,,0|i1r033:,365821,,,,,,,,"27/Dec/13 15:29;tivv;For me the workaround is to override the port before creating dispatch:
{code}
            service.addPort(portQName,  SOAPBinding.SOAP11HTTP_BINDING, requestParams.get(BindingProvider.ENDPOINT_ADDRESS_PROPERTY).toString());
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The message has expired,CXF-5474,12686126,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,maheshnarke,maheshnarke,23/Dec/13 08:43,11/Jul/14 12:51,14/Mar/19 02:30,30/Apr/14 13:36,2.7.9,,,,,,,NeedMoreInfo,,,,JAX-WS Runtime,WS-* Components,,,0,cxf,soap,soapui,,,,,"I tried to implement for simple authentication i.e with password simple text type, it is working but when i tried to implement for password digest type ,then giving me exception:

unwinding now: org.apache.cxf.binding.soap.SoapFault: The message has expired org.apache.ws.security.WSSecurityException: The message has expired

I am giving new nonce value for each request and time within five min diff

WSS4JInInterceptor Bean class defination:

<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns:jaxws=""http://cxf.apache.org/jaxws""
    xsi:schemaLocation=""
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"">

    <import resource=""classpath:META-INF/cxf/cxf.xml"" /> 
    <import resource=""classpath:META-INF/cxf/cxf-extension-soap.xml"" />
    <import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" /> 

    <jaxws:endpoint id=""orderProcess"" implementor=""demo.order.OrderProcessImpl"" address=""/OrderProcess"" >

      <jaxws:inInterceptors>
         <bean
            class=""org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"">
            <constructor-arg>
                <map>
                  <entry key=""action"" value=""UsernameToken""/>
                  <entry key=""passwordType"" value=""PasswordDigest""/>
                  <entry key=""passwordCallbackRef"" value-ref=""myPasswordCallback""/>
               </map> 
            </constructor-arg>
         </bean>
      </jaxws:inInterceptors>
      </jaxws:endpoint>
      <bean id=""myPasswordCallback"" class=""service.ServerPasswordCallback"" />  
</beans>




Client xml request Code:

  <soapenv:Envelope 
xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" 
xmlns:ord=""http://order.demo/"" 
xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" 
xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">
 <soapenv:Header>
<wsse:Security>
           <wsse:UsernameToken>
                                <wsse:Username>joe</wsse:Username>
                                <wsse:Password Type=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest"">PE7F51/oyWFVMsiZURuUwjoZVPY=</wsse:Password>
                         <!--<wsu:Created>2013-12-17T13:12:00.429Z</wsu:Created>-->
                           <wsse:Nonce EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"">efPSkfHXTM6NFDDD1CJHsw==</wsse:Nonce>
                              <wsu:Created>2013-12-23T12:17:15Z</wsu:Created>
               </wsse:UsernameToken>


</wsse:Security>
</soapenv:Header>
   <soapenv:Body>
      <ord:processOrder>
         <!--Optional:-->
         <arg0>
            <!--Optional:-->
            <customerID>234</customerID>
            <!--Optional:-->
            <itemID>0908923</itemID>
            <price>23423</price>
            <qty>1000</qty>
         </arg0>
      </ord:processOrder>
   </soapenv:Body>
</soapenv:Envelope>
When i tried to call the service i am getting exception as

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Body>
      <soap:Fault>
         <faultcode xmlns:ns1=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">ns1:MessageExpired</faultcode>
         <faultstring>The message has expired</faultstring>
      </soap:Fault>
   </soap:Body>
</soap:Envelope>

Can any one tell me where i am making mistake?

","Environment :
Apache CXF 2.7.8
Jboss EAP 6
SoapUI for testing client Side",36000,36000,,0%,36000,36000,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-01-17 19:53:16.961,,,no_permission,,Advanced,,,,,,,,,,,365087,,,Wed Apr 30 13:13:47 UTC 2014,,,,,,0|i1qxgf:,365394,,,,,,,,23/Dec/13 08:44;maheshnarke;I am giving new nonce value for each request and time within five min diff,"17/Jan/14 19:53;dkulp;
We likely need a test case for this as we certainly have tests that show this is working fine.   Is it possible that the time on the server or client is not correct?

","30/Apr/14 12:22;allancth;I recently encountered this issue and spent a day digging into apache wss4j 1.6.14 and found out that in UsernameToken, the SimpleDateFormat that is parsing the ""created"" date is set to ""UTC"" time zone. However, this has been fixed in 2.0-beta.

As a workaround, all my SOAP requests are created with ""UTC"" time zone.","30/Apr/14 13:10;coheigea;
According to the spec: ""All references MUST be in UTC time.""

Colm.","30/Apr/14 13:13;allancth;Noted. In 2.0-beta, the section of the codes that parse createdDate has now changed:

http://grepcode.com/file/repo1.maven.org/maven2/org.apache.wss4j/wss4j-ws-security-dom/2.0-beta/org/apache/wss4j/dom/message/token/UsernameToken.java#226

I'm not sure if this will still be in UTC time.

Edit: I was looking a different library. Please ignore this comment",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS schema validation: interpret schema loading problems as exceptions instead warnings,CXF-5473,12685842,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ashakirin,ashakirin,ashakirin,20/Dec/13 15:58,11/Jul/14 12:50,14/Mar/19 02:30,20/Dec/13 16:59,,,,,,,,2.7.9,3.0.0-milestone2,,,,,,,0,,,,,,,,"I have observed that schema validation code is tolerant to some errors like schema location is incorrect or schema file is invalid: code doesn't throw any exception (SchemaHandler.createSchema()).
In some cases code produces warnings, in some cases just returns null.

It makes a bit difficult to analyze such problems, because in these cases messages are just not validated.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,364938,,,2013-12-20 15:58:18.0,,,,,,0|i1qwhr:,365238,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Usage of HttpAsyncClient with async calls is unstable,CXF-5470,12685593,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,anthonyC,anthonyC,19/Dec/13 13:49,11/Jul/14 12:50,14/Mar/19 02:30,17/Jan/14 19:04,2.7.8,,,,,,,3.0.0-milestone1,,,,,,,,0,,,,,,,,"We are facing some problem using of httpasyncclient with async soap calls. Sometimes result are not returned. It occurs when configuration (org.apache.cxf.transport.http.async.usePolicy) is set with ASYNC_ONLY. This behaviour is not observed with the set to NEVER.

I remark that the dependency version of httpasyncclient is 4.0-beta3. Ga version of httpasyncclient is not compatible with (there are some errors when it is used). It should be a good idea to update the version of httpasyncclient.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-12-19 15:49:40.469,,,no_permission,,Unknown,,,,,,,,,,,364668,,,Fri Jan 17 19:04:44 UTC 2014,,,,,,0|i1qutz:,364968,,,,,,,,"19/Dec/13 15:14;anthonyC;What was fixed in release 4.0 beta 4 and 4.0 GA seems to be critical (specialy infinite loop & deadlock). Redisign was made in beat4

Release 4.0
-------------------

This is the first stable (GA) release of Apache HttpAsyncClient 4.0. HttpAsyncClient is a library 
for asynchronous client-side HTTP communication built on top of HttpCore NIO transport. 
It is a complementary library to Apache HttpClient intended and optimized for special cases 
whereby ability to scale to many thousands of concurrent connections is more important than 
performance in terms of raw data throughput. 

HttpAsyncClient 4.0 is designed to have similar APIs as Apache HttpClient 4.3 and a comparable
feature set. In addition HttpAsyncClient provides full support for zero-copy file upload and 
download operations. It presently does not support transparent content decompression and automatic 
I/O error recovery. These features may be added in future releases.


Changelog:
-------------------

* [ HTTPASYNC-56] Fixed thread deadlock in DefaultClientExchangeHandlerImpl.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPASYNC-57] HTTPS request execution via a HTTP proxy can cause an infinite loop.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPASYNC-52] Proxy configuration set at the request level does not apply.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPASYNC-51] Request producers do not get correctly reset if the server responds early 
  (out of sequence), which can cause entity enclosing requests to be malformed in case of 
  re-execution.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPASYNC-45] CachingHttpAsyncClient to override Future returned by the backend.
  Contributed by James Leigh <james at 3roundstones dot com>


Release 4.0 Beta 4
-------------------

The 4.0 BETA4 release delivers significant performance improvements in request execution,
especially for short HTTP messages, and also re-aligns programming interfaces used by the library 
with HttpCore 4.3 and HttpClient 4.3 APIs. Configuration and preference APIs of HttpAsyncClient
are now consistent with those used by HttpClient 4.3.

Users of previous releases of HttpAsyncClient are advised to upgrade.

Changelog:

* [HTTPCLIENT-1353] 303 Redirects Should be Cacheable
  Contributed by James Leigh <james at 3roundstones dot com>

* Redesign of configuration and preference APIs. 
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* Redesign of connection management APIs.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPASYNC-34] HttpAsyncClient fails to re-start request execution if the opposite end 
  prematurely terminates persistent connection. 
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPASYNC-28] PoolEntry's expiry information is never updated.
  Contributed by Daniel Kulp <dkulp at apache.org>
","19/Dec/13 15:49;dkulp;
This is hopefully fixed on trunk/3.0.0-milestone1 as we updated to the latest code there.   Due to API incompatibilities and such, we cannot really update 2.7.x to the latest code without breaking everyone that may have configurations and such in place.   

","19/Dec/13 20:28;anthonyC;I think using async client with http async client is currently unsafe . With 5 threads, freeze occurs before sending less than 1000 requests to the same host. I advise to not use async with current version of http async client . It could be better to break some code (could be perhaps a 2.8.x version ?). If you mean that it break only the use of async, you should consider that only few people are using async (client or server). Only few people are writing post, blog on async subject and they are few really doing async. It could be better to have something working at 100% :) Do you have any idea when 3.0.0 will be released ?","17/Jan/14 19:04;dkulp;
I *believe* this was fixed for 3.0.0-milestone1 by including the latest HTTP async stuff.   However, there are some OSGi related issues with that update that we hope to resolve shortly for milestone2 and/or 3.0.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JsonpInInterceptor casts to HttpServletRequest,CXF-5469,12685393,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,pwilson,pwilson,18/Dec/13 14:44,11/Jul/14 12:51,14/Mar/19 02:30,19/Dec/13 17:24,3.0.0-milestone1,,,,,,,2.7.9,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,"Request is cast to HttpServletRequest rather than reading the Message QUERY_STRING. This binds the interceptor to the http transport.

Suggestion from Sergey B:

JAXRSUtils.getStructuredParams(message.get(Message.QUERY_STRING)).getFirst( .. )",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,364470,,,2013-12-18 14:44:34.0,,,,,,0|i1qtm7:,364770,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
policy.xsd used in rt-ws-policy's blueprint configuration is inconsistent,CXF-5465,12685156,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,17/Dec/13 11:52,11/Jul/14 12:50,14/Mar/19 02:30,20/Jan/14 16:30,2.7.8,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,WS-* Components,,,,0,,,,,,,,"According to the CXF documentation, 
http://cxf.apache.org/docs/schemas-and-namespaces.html

the schema for CXF's policy configuration has namespace ""http://cxf.apache.org/policy"" for both spring and blueprint, but the schema location is given as ""http://cxf.apache.org/schemas/policy.xsd"" and ""http://cxf.apache.org/schemas/blueprint/policy.xsd"", respectively.

Although the lookup of these two schemas will unlikely occur at the same time (because one for only spring context and the other one for only blueprint context), assigning a namespace to two different locations with different contents could lead to an unexpected behavior. For example, schema at ""http://cxf.apache.org/schemas/blueprint/policy.xsd"" has the target namespace set to  http://cxf.apache.org/blueprint/policy.

As it seems these two schemas can be unified into one schema without any dependency to spring or blueprint, we should use one unified schema for both contexts.


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,364233,,,2013-12-17 11:52:25.0,,,,,,0|i1qs5r:,364533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STSClient.validate operation does not parse TokenType or Lifetime elements in RSTR,CXF-5462,12685015,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,dhogan,dhogan,16/Dec/13 18:40,24/Mar/17 12:51,14/Mar/19 02:30,24/Mar/17 12:51,2.7.2,,,,,,,,,,,STS,,,,0,,,,,,,,"I am using the org.apache.cxf.ws.security.trust.STSClient class to consume the STS. The SecurityToken instances returned as part of the Validate operation invoked with a TokenType other than Status (i.e. token transformation) have null tokenType and created/expires values. 

Looking around line 1066 of the 2.7.2 STSClient or around line 120 of the trunk STSClient, it looks like it would be pretty straightforward to parse out the TokenType and Lifetime elements in the RSTR so that the tokenType and created/expiers fields in the returned SecurityToken instances could be set.

If folks decide that this is worth doing, I would be happy to submit a patch.  ",MacOSX 10.8.3. Tomcat 6.0.36.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-12-17 09:56:24.161,,,no_permission,,Unknown,,,,,,,,,,,364092,,,Fri Mar 24 12:51:42 UTC 2017,,,,,,0|i1qraf:,364392,,,,,,,,"17/Dec/13 09:56;coheigea;Hi Dirk,

Yes, please submit a patch.

Colm.","18/Dec/13 22:29;dhogan;Hi Colm-
I'm sorry to say that I've been (unexpectedly) pulled-off this work. I hope to return to it in a month or two - at which point I would be happy to submit a patch.

Thanks

Dirk",24/Mar/17 12:51;coheigea;This was fixed a long time ago.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with creating server for service with imported porttype ,CXF-5460,12684934,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,tivv,tivv,16/Dec/13 12:01,31/Mar/17 19:38,14/Mar/19 02:30,27/Mar/17 16:44,2.7.3,,,,,,,3.1.5,,,,JAX-WS Runtime,,,,0,,,,,,,,"Hello.

I have a problem with imported porttype. When I try to build a server I get ""org.apache.cxf.service.factory.ServiceConstructionException: Could not find definition for service <myService>""

I've tried to debug it and it looks like a bug in WSDLServiceFactory.java:
{code}
            if (wsdlService == null) {
                if ((!PartialWSDLProcessor.isServiceExisted(definition, serviceName))
                    && (!PartialWSDLProcessor.isBindingExisted(definition, serviceName))
                    && (PartialWSDLProcessor.isPortTypeExisted(definition, serviceName))) {
                    try {
                        Map<QName, PortType> portTypes = CastUtils.cast(definition.getPortTypes());
{code}

definition.getPortTypes should be replaced with definition.getAllPortTypes (much like in isPortTypeExisted), otherwise porttype can't be found and NPE is thrown later.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-03-27 16:44:59.412,,,no_permission,,Unknown,,,,,,,,,,,364012,,,Mon Mar 27 16:44:59 UTC 2017,,,,,,0|i1qqsn:,364312,,,,,,,,"27/Mar/17 16:44;dkulp;This was resolved via a pull request awhile ago:

https://github.com/apache/cxf/pull/78

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some imported xsd schemas are not resolved in spring when referenced from another schema,CXF-5459,12684923,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,16/Dec/13 11:10,11/Jul/14 12:50,14/Mar/19 02:30,20/Jan/14 16:12,2.7.8,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Configuration,,,,0,,,,,,,,"Imported xsd schemas from a locally copied xsd schema should be referenced using their ""original"" absolute schema location URLs and these ""original"" location URLs should be mapped to the locally available resource location in spring and blueprint.

Currently, some imported schemas are directly referenced using their local relative resource location and this is interfering with the schema loading in spring.

http://cxf.547215.n5.nabble.com/issue-with-schema-loading-in-spring-td5737686.html


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,364001,,,2013-12-16 11:10:00.0,,,,,,0|i1qqq7:,364301,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sts.token.validator.*TokenValidator instances don't set MessageContext on RequestData,CXF-5458,12684514,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,dhogan,dhogan,13/Dec/13 18:10,11/Jul/14 12:51,14/Mar/19 02:30,16/Dec/13 11:20,2.7.2,,,,,,,2.7.9,3.0.0-milestone2,,,STS,,,,0,,,,,,,,"See http://cxf.547215.n5.nabble.com/UsernameTokenValidator-td5707938.html#a5737827 for a more detailed description.

Patch with fix will be attached. Build and unit-tests in sts-core worked with change.",Mac OSX 10.8.5. Tomcat 6.0.36.,,,,,,,,,,,,,,,,,,,13/Dec/13 18:11;dhogan;patch.txt;https://issues.apache.org/jira/secure/attachment/12618643/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-12-16 11:20:53.15,,,no_permission,,Novice,,,,,,,,,,,363586,,,Mon Dec 16 11:20:53 UTC 2013,,,,,,0|i1qo7r:,363892,,,,,,,,"16/Dec/13 11:20;coheigea;
Thanks for the patch.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Generated ""Impls"" should be based off the service/port, not portType",CXF-5456,12684104,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,11/Dec/13 20:39,11/Jul/14 12:50,14/Mar/19 02:30,12/Dec/13 18:47,3.0.0-milestone1,,,,,,,3.0.0-milestone2,,,,,,,,0,,,,,,,,"
The generated impls have the service name and port name burned into the @WebService annotation.  Thus, they should be named according to the port name, not the portType.  This would avoid the semi-unpredictable:

FooPortTypeImpl.java
FooPortTypeImpl1.java
....

and have things like:
FooSOAP11PortImpl.java
FooSOAP12PortImpl.java
....

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,363176,,,2013-12-11 20:39:16.0,,,,,,0|i1qlpb:,363482,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generated servers only use first port impl,CXF-5455,12684083,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,11/Dec/13 18:12,11/Jul/14 12:50,14/Mar/19 02:30,12/Dec/13 18:38,2.6.11,2.7.8,3.0.0-milestone1,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Tooling,,,,0,,,,,,,,"
When running wsdl2java with -all or -server with a wsdl that has a single service, but multiple ports, it will generate an ""Impl"" for each port which has the proper annotations.  However, the generated servers all use the ""first"" Impl and thus only the first port will get started.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,363155,,,2013-12-11 18:12:06.0,,,,,,0|i1qlkn:,363461,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Latest Jetty doesn't like the -D jvmargs added to generated build.xml,CXF-5454,12684082,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,11/Dec/13 18:09,11/Jul/14 12:51,14/Mar/19 02:30,12/Dec/13 18:39,2.7.8,3.0.0-milestone1,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Tooling,,,,0,,,,,,,,"
The generated build.xml uses:
        <attribute name=""jvmarg1"" default=""-D""/>
which results in an empty system property key which Jetty does not like.  Causes a crash at startup.


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,363154,,,2013-12-11 18:09:34.0,,,,,,0|i1qlkf:,363460,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FIQL parser should support Beans with interfaces,CXF-5453,12684061,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,11/Dec/13 16:18,11/Jul/14 12:50,14/Mar/19 02:30,11/Dec/13 16:23,,,,,,,,2.7.9,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,It is not unusual to have root beans with interface properties,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,363133,,,2013-12-11 16:18:21.0,,,,,,0|i1qlfr:,363439,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS Client: post method call doesn't send data.,CXF-5452,12684013,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,maltegessner,maltegessner,11/Dec/13 11:05,11/Jul/14 12:50,14/Mar/19 02:30,11/Dec/13 12:09,3.0.0-milestone1,,,,,,,2.7.9,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,"When i use the org.apache.cxf.jaxrs.client.WebClient.SyncInvokerImpl.post(entity, genericType) method, the post entity data is not submitted to the server.

I miss the entity in the delegated method() call.
        @Override
        public <T> T post(Entity<?> entity, GenericType<T> genericType) {
            return method(HttpMethod.POST, genericType);
        }",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,363085,,,2013-12-11 11:05:31.0,,,,,,0|i1ql53:,363391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"With SAAJ In/Out forwarding, headers can cause an infinite loop and OOM",CXF-5450,12683677,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,09/Dec/13 20:52,11/Jul/14 12:51,14/Mar/19 02:30,12/Dec/13 18:39,2.6.11,2.7.8,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Soap Binding,,,,0,,,,,,,,"In some cases when combining SAAJ usage along with Provider/Dispatch based services to forward messages, if the message contains a SOAP header, outputting the message can result in a look within SoapOutInterceptor that would result in an OutOfMemory situation.   This is observed more easily with CXF_MESSAGE mode routing in Camel, but it's a bug in CXF.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,362749,,,2013-12-09 20:52:47.0,,,,,,0|i1qj1b:,363043,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FIQL parser having a problem with a JPA entity that contains a list of other entities.,CXF-5449,12683673,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,yaytay,yaytay,09/Dec/13 20:35,11/Jul/14 12:51,14/Mar/19 02:30,19/Dec/13 17:25,2.7.7,,,,,,,2.7.9,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,"I have a JPA entity model that has the following chain of relationships:

Order_JpaImpl {
    @OneToMany(mappedBy = ""order"", fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
    List< OrderLine_JpaImpl> orderLines = new LinkedList<>();
}

OrderLine_JpaImpl {
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = ""prdId"", nullable = false)
    @ForeignKey
    @Index
    private Product_JpaImpl orderLineItem;
}

Product_JpaImpl {
    @ManyToOne( cascade = {}, targetEntity = Show_JpaImpl.class, fetch = FetchType.EAGER )
    @JoinColumn( name=""shwId"", nullable = false )
    @ForeignKey
    @Index
    private Show_JpaImpl show;
}

Show_JpaImpl {
    @Column( length = 32, unique = true, nullable = false )
    private String shortName;
}

I want to use FIQL to get all the orders that include orderlines that have products from a given show.
So I have a simple search expression: show==AMND
And a mapping:
    private static Map<String,String> createBeanNameMap() {
        Map<String,String> map = new HashMap<>();
        map.put(""customerdisplay"",""customerDisplay"");
        map.put(""ordertime"",""orderTime"");
        map.put(""fulfilmentstatus"",""fulfilmentStatus"");
        map.put(""show"",""orderLines.orderLineItem.show.shortName"");
        return map;
    }
That is used by:
        SearchCondition<ImplType> searchCondition = searchContext.getCondition(targetClass, getBeanNameMap());


Raises this exception:
Caused by: java.lang.IllegalArgumentException: argument type mismatch; setter parameter type: java.util.List, set value type: uk.co.spudsoft.spiderweborders.model.jpaimpl.OrderLine_JpaImpl
    at org.apache.cxf.jaxrs.ext.search.Beanspector.setValue(Beanspector.java:152) ~[cxf-rt-rs-extension-search-2.7.8.jar:2.7.8]
    at org.apache.cxf.jaxrs.ext.search.Beanspector.setValue(Beanspector.java:131) ~[cxf-rt-rs-extension-search-2.7.8.jar:2.7.8]
    at org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison.createTemplate(FiqlParser.java:600) ~[cxf-rt-rs-extension-search-2.7.8.jar:2.7.8]


OrderLines is a list of OrderLine objects, but the template is being created with just one and the setter doesn't know how to handle lists.
I tried adding a setter that takes a single OrderLine, but something got upset when it saw that the getter and setter were of different types.


I /think/ the failure occurs when you have:
1. A parent entity containing a list of children.
2. The children entities contain a single grandchild.
3. The search is for a property of the grandchild.
And it fails when it tries to set the grandchild in the child.

I've actually got another layer in the hierarchy (great-grandchild), but given where the exception comes from I suspect that isn't needed to cause the failure.
",Only tested on Windows 8.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,362745,,,2013-12-09 20:35:32.0,,,,,,0|i1qj0f:,363039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException: Already connected when sending empty POST request,CXF-5447,12683610,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,blacar,blacar,09/Dec/13 15:04,11/Jul/14 12:50,14/Mar/19 02:30,09/Dec/13 17:50,2.7.7,2.7.8,,,,,,2.7.9,3.0.0-milestone2,,,JAX-RS,,,,0,cxf,JAXRS,newbie,proxy,,,,"I've faced an unexpected behavior testing my app trying to deal with a POST request for a REST service where my message is empty string. In this case, when using a JAXRSClientFactory proxy i get java.lang.IllegalStateException: Already connected when i sent an empty byteArray ... the proxy method never gets called. This does not happens when i sent any content ... the proxy method gets called. I think it could be a bug.

I have test case.

Here is the full trace:

java.lang.IllegalStateException: IllegalStateException invoking http://localhost:6066/services/test: Already connected
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.mapException(HTTPConduit.java:1339)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1328)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:628)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)
	at org.apache.cxf.jaxrs.client.AbstractClient.doRunInterceptorChain(AbstractClient.java:634)
	at org.apache.cxf.jaxrs.client.ClientProxyImpl.doChainedInvocation(ClientProxyImpl.java:630)
	at org.apache.cxf.jaxrs.client.ClientProxyImpl.invoke(ClientProxyImpl.java:215)
	at com.sun.proxy.$Proxy17.capture(Unknown Source)
	at com.blacar.apps.spike.cxf.cxfbugemptystring.ServiceTest.test(ServiceTest.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:35)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:115)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
Caused by: java.lang.IllegalStateException: Already connected
	at java.net.HttpURLConnection.setFixedLengthStreamingMode(HttpURLConnection.java:143)
	at org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.setFixedLengthStreamingMode(URLConnectionHTTPConduit.java:278)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.thresholdNotReached(HTTPConduit.java:1091)
	at org.apache.cxf.io.AbstractThresholdOutputStream.close(AbstractThresholdOutputStream.java:99)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1302)
	... 43 more","Java SE 1.7 
RS services exposed through embedded Jetty using cxf-rt-transports-http-jetty and cxf-rt-frontend-jaxrs",,,,,,,,,,,,,,,,,,,09/Dec/13 15:05;blacar;CxfBugEmptyPost.zip;https://issues.apache.org/jira/secure/attachment/12617841/CxfBugEmptyPost.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-12-09 17:50:21.856,,,no_permission,,Unknown,,,,,,,,,,,362682,,,Mon Dec 09 17:50:21 UTC 2013,,,,,,0|i1qimf:,362976,,,,,,,,09/Dec/13 15:05;blacar;Test case exposing the problem,"09/Dec/13 17:50;sergey_beryozkin;Fixed, thanks, for now either set ""org.apache.cxf.empty.request"" in a custom CXF out interceptor or use Async Conduit:
https://cwiki.apache.org/confluence/display/CXF20DOC/JAX-RS+Client+API#JAX-RSClientAPI-SupportforarbitraryHTTPmethodsforsyncinvocations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
systests/jaxrs tests sometimes hang in CI,CXF-5446,12683580,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,kearls,kearls,09/Dec/13 11:35,31/Mar/17 19:37,14/Mar/19 02:30,22/Mar/17 19:41,,,,,,,,Invalid,,,,,,,,1,test,,,,,,,"I've seen at least the following 2 tests hang

JAXRS20ClientServerBookTest
JAXRSAsyncClientTest

I will attach a patch which adds timeouts
",,,,,,,,,,,,,,,,,,,,09/Dec/13 11:37;kearls;CXF-5446.patch;https://issues.apache.org/jira/secure/attachment/12617814/CXF-5446.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-12-09 12:17:43.02,,,no_permission,,Unknown,,,,,,,,,,,362653,,,Wed Mar 22 19:41:07 UTC 2017,,,,,,0|i1qifz:,362947,,,,,,,,09/Dec/13 11:37;kearls;Added 1 minute timeouts to all tests,"09/Dec/13 12:17;sergey_beryozkin;Thanks for a patch, I did not even know such a Test property exists. 
I'm not sure though we should apply it, I've just updated these two tests, removed the hardcoded client timeouts from some of the tests (I use them to debug the server code while the test is in progress). The hangs might be pointing to a real issue, hopefully a test one, say the the test server hangs itself and the client waits indefinitely...
Can you please update the code with the latest commit, and check the tests again, I expect that you will start getting some failures instead...

Thanks, Sergey","10/Dec/13 08:17;kearls;Hi Sergey.  Yes, I realize the hangs might be pointing to a real issue.  However, I wanted to add the timeouts so at least the rest of the build can finish.  Also, the timeouts will indicate which test case is the problem, which would make it easier to resolve this.

I'm a bit tied up with other things this week, but will try to look at this again as soon as I have a chance.
","10/Dec/13 10:17;ay;Hi,
I observed this hanging problem on one of our local linux based jenkins installations.
The problem only occurs and almost always occurs on one installation but never occurs on the other installation.
I am suspecting some async-io or thread interoperability issues between the linux libs version and jdk versions.
But I haven't figured it out nor collected enough information. I will compare the version info of some libs on two installations.

I came to observe this issue when we went for 2.7.6 and before that, I didn't see this problem.
regards, aki","13/Dec/13 10:58;ay;I was using cxf-2.7.8 as the reference build and testing it on several linux boxes that I find.
And I am observing this issue on some of the linux boxes with different linux versions.
The problem occurs sometimes more often (very frequently on Linux version 2.6.34.10-0.6-xen) than on others and on one box (Linux version 2.6.32-220.2.1.el6.x86_64), the problem does not seem to be occurring.

But when the problem occurs on one of the boxes with one particular version of jdk, using a different jdk does not seem to be changing the situation. 

As i mentioned earlier, I am not observing this issue on win and osx boxes. I am not sure if this is an isolated case on some specific linux versions. If the problem is occurring on a wide spectrum of linux versions or even on other systems, we will need to determine the root cause.

@Kevin, 
what is your setup?

thanks
regards, aki


","13/Dec/13 17:27;kearls;Hi Aki.  I've seen this a few places, most recently on our Ubuntu boxes on EC2 (2.6.32-308-ec2) and on a RHEL 6.3 box.
","13/Dec/13 17:48;sergey_beryozkin;We've chatted with Aki on IRC and the proposal is to try and narrow it down somehow:

1. Remove JAXRS20ClientServerBookTest first, try to reproduce; then JAXRSAsyncClientTest and try to reproduce 
2. Remove all individual tests in JAXRS20ClientServerBookTest & JAXRSAsyncClientTest which deal with Future
3. Remove all systests/jaxrs JAXRS tests but these two ones: may help to confirm they are affected by the missing tests
And may be try and get a thread dump ?

Thanks for investigating it, I've never seen it, can't be of help for now","19/Dec/13 14:44;ay;Hi Sergey,
I extracted these two test classes and executed them separately at several linux environments. I observed the problem frequently on ubuntu 12.04.3 Linux 3.2.0-57 with all JDK tried (openjdk 6, 7and oracle 6, 7) and also on ubuntu 12.10 Linux 3.5.0-44.

I think the problem could be something that happens after each test. After I added 1-sec delay between each test (i.e., simply added addDelay with @Before annotation to sleep 1 sec before running each test), I stopped seeing the problem.

I am not sure if we should look further into it or just add this 1-sec delay for now. What do you think?

regards, aki
","19/Dec/13 15:55;sergey_beryozkin;Hi Aki, many thanks for investigating it.
I just wonder if the work Dan did with AsyncConduit in 3.0.0-milestone1 and the trunk can make an actual difference ?
Can you give me a favor and just run these  two tests on the actual trunk ? if it works then may be we can add the delays in 2.7.x only 

Thanks, Sergey","19/Dec/13 16:34;ay;hi sergey,
i wondered about that.
i'll run a check.
regards, aki","19/Dec/13 17:32;ay;hi sergey,
trunk of today r1551904 has the same issue.
I executed the whole systests/jaxrs tests twice and both times, one of the tests got stuck.
Then I added the above 1-sec delay and re-executed the whole tests again twice and both times, none of the tests got stuck.
regards, aki","19/Dec/13 22:27;sergey_beryozkin;Hi Aki, thanks again,
I'm just slightly concerned that may be we are seeing a real bug affecting the runs.
There are probably hundreds of WebClient calls in other tests there and only these two hang. So it does not seem to be a test issue.

I'm starting thinking of the following:
- http-hc conduit is affecting it - and it can be causing the problems for two reasons, it has a bug of its own or may be because the tests or WebClient fail to release the resources properly
- or there is some bug in the way new Client API is implemented.

So the next step is to check if it is http-hc which causes it, I've temporarily removed its dependency, can you please, when you get a chance, update the source and run without http-hc ?
I will then continue narrowing down depending on what you see.

In meantime I've added an optional timeout as per your recommendation (except that is optional for now :-)), so it will let users who run builds and see the hangs get the tests running. I guess that in itself should resolve the actual issue, but may be we can trace somehow the actual cause of the problem :-)  
 
Thanks, Sergey","20/Dec/13 12:03;ay;Hi Sergey,
yes. Now without http-hc, I see no test errors from systests/jaxrs (executed three times to confirm).

by the way, yesterday I also tried cxf trunk with asynchttpclient 4.0.1-SNAPSHOT but got the same problem.
asynchttpclient 4.0.1-SNAPSHOT itself passed all the unit tests, though.

maybe we can trace all the calls that go into http-hc for the failed test and recreate the same setup in http-hc test itself?

regards, aki
","20/Dec/13 12:37;sergey_beryozkin;Hi Aki, 
We are definitely making some progress here :-), great.
Lets try to narrow down it further, I'm still not 100% sure it is the http-hc which is at fault, it may be to do with the test code not calling WebClient close which would cleanup what conduit state which might be there, or it may be the actual async processing model in the http-hc which is brittle,

So what I've done: I've re-enabled the dependency but disabled all the tests which stress the http-hc asynchronous part.

If we see the tests not hanging after that then we have a high probability it is the http-hc async mode and we can try to narrow down further. If they do hang again then it might be a conduit cleanup issue.

Give it a try please with the latest trunk :-)
Thanks, Sergey","20/Dec/13 21:10;anthonyC;I think we are facing the same issue: CXF-5470

It occurs on windows / linux with cxf unit test and other test. If async policy is set to Never the issue is not observed anymore.

Anthony","23/Dec/13 12:58;ay;we ran several tests and here the irc transcription recaps the tests.
http://irclogs.dankulp.com/logs/irclogger_log/cxf?date=2013-12-20,Fri&sel=144#l140

We observed this problem very frequently on one of our jenkins (SUSE Linux 2.6.34.10-0.6-xen) but not on another jenkins (RHE Linux 2.6.32-220.2.1.el6.x86_64) nor on a couple of OSX or Win7-x64 boxes we tried. 

Initially, I thought this was some jenkins related issue. However, I could reproduce this problem on another Linux desktop (SUSE Linux version 2.6.34.8-0.2-desktop). As Sergey was not getting this problem on his Ubuntu (Linux version 3.2.0-56-generic),  I upgraded this desktop to a more recent Ubuntu 12.04.3 LTS (Linux 3.2.0-57-generic-pae) to see if the problem disappears. However, the problem persisted and even after upgrading to Ubuntu 12.10 (Linux version 3.5.0-44-generic) but the problem remained with all JDKs tried (6 and 7 Open- and Oracle JDKs).

So, if you want to reproduce this problem, I think you can grab the current ubuntu distro (12.04.03 or 12.10) and can reproduce this problem.

Aki
","22/Mar/17 19:41;dkulp;Marking fixed as the tests seem to be behaving OK recently.
",,,,,,,,,,,,,,,,,,,
IgnoreNamespacesWriter does not handle qualified attributes,CXF-5445,12683573,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,09/Dec/13 10:48,11/Jul/14 12:50,14/Mar/19 02:30,09/Dec/13 11:16,,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Core,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,362646,,,Mon Dec 09 10:48:39 UTC 2013,,,,,,0|i1qief:,362940,,,,,,,,"09/Dec/13 10:48;sergey_beryozkin;r1549537
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFAuthenticator causes classloader leaks,CXF-5442,12683202,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mate,mate,06/Dec/13 21:19,11/Jul/14 12:51,14/Mar/19 02:30,17/Jan/14 21:57,2.6.10,,,,,,,2.6.12,2.7.9,,,Transports,,,,0,,,,,,,,"org.apache.cxf.transport.http.CXFAuthenticator will cause classloader leaks.

When CXFAuthenticator.addAuthenticator() is called, org.apache.cxf.transport.http.ReferencingAuthenticator is instantiated in a custom ""dummy"" URLClassLoader, and then wraps any pre-existing default Authenticator + weak references the CXFAuthenticator.

In theory, this means that the classloader loading the CXFAuthenticator can be garbage collected, and then ReferencingAuthenticator.auth is cleared since CXFAuthenticator.instance is not strongly reachable from GC root.

I won't say my conclusions are final, but this is how I think it happens: When the dummy URLClassLoader is instantiated, it inherits the ProtectionDomain that references the current classloader, which is the one that loaded CXFAuthenticator and thus there is a path to GC root (see screenshot) and the web app classloader is never garbage collected.",,,,,,,,,,,,,,,,,,,,06/Dec/13 21:20;mate;cxf.jpg;https://issues.apache.org/jira/secure/attachment/12617476/cxf.jpg,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-01-17 21:57:23.33,,,no_permission,,Unknown,,,,,,,,,,,362454,,,Sun Jan 19 19:48:18 UTC 2014,,,,,,0|i1qh7z:,362748,,,,,,,,06/Dec/13 22:36;mate;A test case to demonstrate the issue is now available here: https://github.com/mjiderhamn/classloader-leak-prevention/blob/master/src/test/java/se/jiderhamn/classloader/leak/prevention/CXFAuthenticatorTest.java,07/Dec/13 07:25;mate;Version 1.9.0 of https://github.com/mjiderhamn/classloader-leak-prevention should now provide a workaround for this issue.,17/Jan/14 21:57;dkulp;Little more reflection magic and I think this is now resolved.  Confirmation would be great.,"19/Jan/14 19:48;mate;Running my leak detecting test case against the 2.6.x SVN sources, it seems that setting loader.acc to null does the trick.
I have yet to test this in a deployed environment (possibly AccessController.doPrivileged() also makes a difference then) but likely the problem has been fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE is thrown at http conduit's authorization setting in Blueprint,CXF-5440,12683100,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,06/Dec/13 10:46,11/Jul/14 12:51,14/Mar/19 02:30,06/Dec/13 16:28,2.6.10,2.6.11,2.7.7,2.7.8,,,,2.6.12,2.7.9,3.0.0-milestone2,,,,,,0,,,,,,,,"A blueprint based configuration that sets the authorization element for the http conduit, a NPE will be thrown. This issue exists only from 2.7.7 including the current 2.7.8 for blueprint based configuration. 
This issue seems to be an regression error from CXF-5148.

Caused by: org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to initialize bean #recipe-130
	at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:714)
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:824)
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:106)
	at org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:933)
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:907)
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:888)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.injectBeanInstance(BlueprintContainerImpl.java:927)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.cxf.bus.blueprint.ConfigurerImpl.configureBean(ConfigurerImpl.java:128)
	at org.apache.cxf.bus.blueprint.ConfigurerImpl.configureWithWildCard(ConfigurerImpl.java:188)
	at org.apache.cxf.bus.blueprint.ConfigurerImpl.configureBean(ConfigurerImpl.java:111)
	at org.apache.cxf.bus.blueprint.ConfigurerImpl.configureBean(ConfigurerImpl.java:100)
	at org.apache.cxf.transport.http.HTTPTransportFactory.configure(HTTPTransportFactory.java:189)
	at org.apache.cxf.transport.http.HTTPTransportFactory.getConduit(HTTPTransportFactory.java:270)
	at org.apache.cxf.binding.soap.SoapTransportFactory.getConduit(SoapTransportFactory.java:238)
	at org.apache.cxf.endpoint.AbstractConduitSelector.getSelectedConduit(AbstractConduitSelector.java:110)
	at org.apache.cxf.endpoint.UpfrontConduitSelector.prepare(UpfrontConduitSelector.java:63)
	at org.apache.cxf.endpoint.ClientImpl.prepareConduitSelector(ClientImpl.java:886)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:560)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:474)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:377)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:330)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:96)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
	... 26 more
Caused by: java.lang.RuntimeException: Could not process configuration.
	at org.apache.cxf.transport.http.blueprint.AuthorizationPolicyHolder.init(AuthorizationPolicyHolder.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:297)
	at org.apache.aries.blueprint.container.BeanRecipe.invoke(BeanRecipe.java:958)
	at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:712)
	... 53 more
Caused by: java.lang.NullPointerException
	at org.apache.cxf.transport.http.blueprint.AuthorizationPolicyHolder.init(AuthorizationPolicyHolder.java:54)
	... 60 more
",,,,,,,,,,,,,,CXF-5148,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,362352,,,2013-12-06 10:46:26.0,,,,,,0|i1qglb:,362646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JAXBDataBinding can not handle the exception with generic objects like ObjectWithGenerics<Boolean, Integer>",CXF-5437,12683081,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,06/Dec/13 09:32,11/Jul/14 12:50,14/Mar/19 02:30,09/Dec/13 06:12,2.6.11,2.7.8,3.0.0-milestone1,,,,,2.6.12,2.7.9,3.0.0-milestone2,,JAXB Databinding,,,,0,,,,,,,,"When the Exeception has some generics object like :
{code}
@javax.xml.ws.WebFault
public class GenericsException extends Exception {
    private static final long serialVersionUID = 1L;
    private ObjectWithGenerics<Boolean, Integer> obj;

    public ObjectWithGenerics<Boolean, Integer> getObj() {
        return obj;
    }
    public void setObj(ObjectWithGenerics<Boolean, Integer> obj) {
        this.obj = obj;
    }
}
{code}
Both the wsdl generated from the exception class is wrong and soap fault message is not expected. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,362333,,,2013-12-06 09:32:02.0,,,,,,0|i1qgh3:,362627,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Poorly crafted response caused NullPointerException when processing incoming message,CXF-5436,12683028,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,klape,klape,06/Dec/13 00:19,27/Feb/17 15:08,14/Mar/19 02:30,19/Jan/17 07:28,,,,,,,,3.0.13,3.1.10,3.2.0,,JAX-WS Runtime,,,,0,,,,,,,,"A CXF SOAP client is processing a response, and it gets a NPE:

{noformat}
2013-11-26 10:03:39,462 243006 WARNING [org.apache.cxf.phase.PhaseInterceptorChain] (pool-38-thread-1:) Interceptor for {http://REDACTED has thrown exception, unwinding now
java.lang.NullPointerException
        at org.apache.cxf.staxutils.StaxUtils.toNextElement(StaxUtils.java:333)
        at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:80)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2408)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2278)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2121)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:695)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
        at $Proxy1346.tenprintSearchResponse(Unknown Source)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at my.application.ClassName.run(MessageRouterTask.java:44)
        at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
        at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
        at java.util.concurrent.FutureTask.run(Unknown Source)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)
{noformat}

The issue has been traced back to the {{StaxInInterceptor}} around this code:

{code:java}
        if (contentType == null) {
            //if contentType is null, this is likely a an empty post/put/delete/similar, lets see if it's
            //detectable at all
            Map<String, List<String>> m = CastUtils.cast((Map<?, ?>)message.get(Message.PROTOCOL_HEADERS));
            if (m != null) {
                List<String> contentLen = HttpHeaderHelper
                    .getHeader(m, HttpHeaderHelper.CONTENT_LENGTH);
                List<String> contentTE = HttpHeaderHelper
                    .getHeader(m, HttpHeaderHelper.CONTENT_TRANSFER_ENCODING);
                if ((StringUtils.isEmpty(contentLen) || ""0"".equals(contentLen.get(0)))
                    && StringUtils.isEmpty(contentTE)) {
                    return;
                }
            }
        }
{code}

The endpoint is responding with an empty {{Content-Type}} header and is using chunked encoding, so it's setting the {{Transfer-Encoding}} header and omitting the {{Content-Length}} header.  These combined attributes cause the {{StaxInInterceptor}} to return before the {{XMLStreamReader}} is created and put in the {{Message}}, causing the NPE down the chain.  While I certainly feel that the endpoint shouldn't respond in such a way, the NPE in CXF is probably not the best way to handle this odd response from the endpoint.",,,,,,,,,,,,,,CXF-758,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-01-17 12:56:13.447,,,no_permission,,Unknown,,,,,,,,,,,362280,,,Thu Jan 19 09:23:55 UTC 2017,,,,,,0|i1qg5b:,362574,,,,,,,,06/Dec/13 00:22;klape;Attached the Jira associated with the commit that added the logic in the jira description.,"17/Jan/17 12:56;ajeans;I got the same bug recently in 3.1.5, with the same combination of missing Content-Type header in a chunked response.

Symptom is different though, the NullPointerException occurs here (see redacted excerpt below):
{code}
2017-01-13 11:39:58.308 WARN  [xxxxxxx.yy] [http-bio-8080-exec-2] [o.apache.cxf.phase.PhaseInterceptorChain.doLog] - Interceptor for {XXXXXXX has thrown exception, unwinding now
java.lang.NullPointerException: null
    at org.apache.cxf.binding.soap.interceptor.StartBodyInterceptor.handleMessage(StartBodyInterceptor.java:59) ~[cxf-rt-bindings-soap-3.1.5.jar:3.1.5]
    at org.apache.cxf.binding.soap.interceptor.StartBodyInterceptor.handleMessage(StartBodyInterceptor.java:37) ~[cxf-rt-bindings-soap-3.1.5.jar:3.1.5]
    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308) [cxf-core-3.1.5.jar:3.1.5]
    at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:798) [cxf-core-3.1.5.jar:3.1.5]
    at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1670) [cxf-rt-transports-http-3.1.5.jar:3.1.5]
    at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1551) [cxf-rt-transports-http-3.1.5.jar:3.1.5]
    at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1348) [cxf-rt-transports-http-3.1.5.jar:3.1.5]
    [...]
{code}

My understanding is that the code in StaxInInterceptor  should also test for presence of ""Transfer-Encoding:chunked"" when deciding whether to exit early or not.
Is my understanding correct?","18/Jan/17 10:48;githubbot;GitHub user ajeans opened a pull request:

    https://github.com/apache/cxf/pull/224

    CXF-5436: Properly handle SOAP responses whose Content-Type is missin…

    …g, even if
    
    the response is chunked.
    This code already tests for 'Content-Length:0' to fast track empty responses, but
    chunked responses don't set this header, so test also for 'Transfer-Encoding:chunked'.
    
    Signed-off-by: Arnaud Jeansen <arnaud.jeansen@ncr.com>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ajeans/cxf master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/cxf/pull/224.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #224
    
----
commit afd0d92017dea93138a0bb5d19ba25dde9f947bc
Author: Arnaud Jeansen <arnaud.jeansen@ncr.com>
Date:   2017-01-17T16:06:39Z

    CXF-5436: Properly handle SOAP responses whose Content-Type is missing, even if
    the response is chunked.
    This code already tests for 'Content-Length:0' to fast track empty responses, but
    chunked responses don't set this header, so test also for 'Transfer-Encoding:chunked'.
    
    Signed-off-by: Arnaud Jeansen <arnaud.jeansen@ncr.com>

----
","19/Jan/17 00:06;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/cxf/pull/224
",19/Jan/17 07:27;ffang;patch applied on behalf of Arnaud Jeansen with thanks!,"19/Jan/17 09:23;ajeans;Awesome, thanks a lot for the quick review.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM's retransmission should call conduit.close(message) after successful retransmission,CXF-5435,12682890,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,05/Dec/13 12:30,11/Jul/14 12:50,14/Mar/19 02:30,11/Dec/13 13:42,2.7.8,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,WS-* Components,,,,0,,,,,,,,"The message retransmission code in WS-RM is currently directly closing the output stream associated associated with the retried message after its successful retransmission.

As the normal transmission case uses condui't prepare(Message) to start transmission and ends with close(Message), which closes the output stream associated with the retried message. 

To provide a consistent behavior, the WS-RM's retransmission should also use conduit's close(Message) method to close the output stream. 

Note that this is not an issue for the normal HTTPConduit as its close(Message) method does not contain any special logic but simply closes the output stream associated with the message.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,362147,,,2013-12-05 12:30:16.0,,,,,,0|i1qfbz:,362442,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException calling Oneway method using JMS and WSA,CXF-5434,12682880,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,wouter.dhaeze,wouter.dhaeze,05/Dec/13 11:20,16/Feb/15 16:09,14/Mar/19 02:30,05/May/14 19:59,2.7.5,2.7.7,,,,,,2.6.15,2.7.12,,,JAX-WS Runtime,,,,0,,,,,,,,"When a client is calling a oneway method, the endpoint method is never called due to an IllegalStateException, when the endpoint has WS-Addressing policy enabled and the endpoint is called through JMS (activeMQ)
{code}
java.lang.IllegalStateException: IllegalStateException invoking http://www.w3.org/2005/08/addressing/none: Already connected
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.mapException(HTTPConduit.java:1338)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1327)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:622)
	at org.apache.cxf.interceptor.OneWayProcessorInterceptor.handleMessage(OneWayProcessorInterceptor.java:126)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.jms.JMSDestination.onMessage(JMSDestination.java:235)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:536)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:496)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1059)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1051)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:948)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalStateException: Already connected
	at java.net.HttpURLConnection.setFixedLengthStreamingMode(Unknown Source)
	at org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.setFixedLengthStreamingMode(URLConnectionHTTPConduit.java:272)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.thresholdNotReached(HTTPConduit.java:1085)
	at org.apache.cxf.io.AbstractThresholdOutputStream.close(AbstractThresholdOutputStream.java:99)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1301)
	... 15 more
{code}",,,,,,,,,,CXF-5539,,,,,,,,,,06/Dec/13 08:55;wouter.dhaeze;CXFTestServer.zip;https://issues.apache.org/jira/secure/attachment/12617359/CXFTestServer.zip,06/Dec/13 08:55;wouter.dhaeze;incoming_soap_message_01.txt;https://issues.apache.org/jira/secure/attachment/12617361/incoming_soap_message_01.txt,06/Dec/13 08:55;wouter.dhaeze;server_logs_01.log;https://issues.apache.org/jira/secure/attachment/12617360/server_logs_01.log,,,,,3.0,,,,,,,,,,,,,,,,,,,,2013-12-05 19:29:51.164,,,no_permission,,Unknown,,,,,,,,,,,362137,,,Mon Apr 28 07:56:42 UTC 2014,,,,,,0|i1qf9r:,362432,,,,,,,,"05/Dec/13 19:29;dkulp;Can we possibly get a testcase?  I checked one of our system tests and it's working fine.   

The curious thing about your stack trace is the HTTP conduit on the response.   A bit strange if this is JMS.   Can you also log the incoming message and describe the reply-to headers?   ","06/Dec/13 09:07;wouter.dhaeze;Dear mr. Kulp, thanks for the quick response.

I've attached three files:
1. I attached my eclipse project which you can use to reproduce the problem. 
It defines a oneway endpoint which listens to a queue (activeMQ 5.7.0). 
I'm compiling and running using java7 (u45) and deploying on tomcat 7.0.35. 
I'm using a reference to the default cxf distribution 2.7.8.
It also contains a unit test which creates a cxf client that will publish a message to the queue.
2. A log trace of my server in which the CXF stack is printed as well as the error message
3. I filtered the incoming soap message. It contains a header field with ReplyTo ""none"" which is normal I guess since we call a oneway method. 

Please be aware that the method is annotated with ""javax.jws.Oneway"" and not ""import org.apache.cxf.jaxrs.ext.Oneway"". But I'm quite sure this is correct since the latter annotation is for REST services.

If you remove the wsa:addressing feature from the client, the server consumes the message perfectly. The biggest difference however is the cxf stack. In the failing test there are a lot more filters that are applied.","06/Feb/14 11:55;ashakirin;Hi Dan,

I am afraid the issue is fixed only for RPC style in RPCOutInterceptor:
{code}
                if (operation.getOutput() == null) {
                    return;
 	 	 }
{code}
It is still reproducible for the document binding style.

Are rebasing of the response and creation of decoupled destination make sense for oneWay at all?  
MAPAggregator:
{code}
                if (isOneway
                    || !ContextUtils.isGenericAddress(maps.getReplyTo())) {
                    InternalContextUtils.rebaseResponse(maps.getReplyTo(),
                                                maps,
                                                message);
                }
{code}

Do we really need any rebasement for oneWay on the service side for JMS if we do not send any response?","24/Mar/14 15:20;wouter.dhaeze;Dear Daniel, dear Andrei,


Is there any progress on this issue? Could you give me a date when the problem would be fixed?


Best regards

Wouter","28/Apr/14 07:56;apoltavtsev;Hello All,

I have verified this issue (with document binding style) in cxf-2.7.11 . I see that oneway request is successfully delivered to service side using JMS transport and incoming message is delivered in message handler correctly (there is no ""IllegalStateException"" anymore). So, original problem is solved, but I see that service intiates sending of response to ""none"" destination and this response is processed by set of outgoing interceptors (we can also see outgoing message in logs), but sending of response is not performed due to update for org.apache.cxf.ws.addressing.impl.InternalContextUtils:

сxf 2.7.8:

        public Conduit getBackChannel(Message inMessage,
                                      Message partialResponse,
                                      EndpointReferenceType address)
            throws IOException {
            Bus bus = inMessage.getExchange().get(Bus.class);
            ....

cxf 2.7.11:

        public Conduit getBackChannel(Message inMessage,
                                      Message partialResponse,
                                      EndpointReferenceType address)
            throws IOException {
            if (ContextUtils.isNoneAddress(reference)) {
                return null;
            }
            Bus bus = inMessage.getExchange().get(Bus.class);
            ...
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS method invocation failes in case @Mutipart(required=false) is used on primitives,CXF-5433,12682287,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,yavalek,yavalek,03/Dec/13 01:33,11/Jul/14 12:50,14/Mar/19 02:30,03/Dec/13 17:38,2.7.6,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,JAX-RS,,,,0,,,,,,,,"Here is a sample resource:

{code}
@Path(""res"")
interface SomeResource {
    @PUT
    @Consumes(MediaType.MULTIPART_FORM_DATA)
    void uploadFile(@Multipart(""bin"") byte[] fileBytes, 
                             @Multipart(value = ""timestamp"", type = ""text/plain"") long timestamp);
}
{code}

An attempt to upload a file without specifying 'timestamp' part ends up with an exception:

{code}
java.lang.IllegalArgumentException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)
        at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:194)
        at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:100)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:57)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:93)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:355)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:319)
        at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1040)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:976)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
        at org.eclipse.jetty.server.Server.handle(Server.java:363)
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:483)
        at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:931)
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:992)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
        at java.lang.Thread.run(Thread.java:722)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,361544,,,2013-12-03 01:33:06.0,,,,,,0|i1qbnb:,361842,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sevice list page default stylesheet is not effective,CXF-5428,12681710,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,sergey_beryozkin,ptma,ptma,28/Nov/13 06:44,11/Jul/14 12:51,14/Mar/19 02:30,30/Dec/13 17:17,2.7.8,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,Transports,,,,0,patch,,,,,,,"Fix:
Move line 86 
PrintWriter writer = response.getWriter();
to line 126

Modify line 172
URL url = this.getClass().getResource(""servicelist.css"");
with 
URL url = this.getClass().getResource(""../servicelist.css"");",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-12-30 17:17:31.549,,,no_permission,,Unknown,,,,,,,,,,,360974,,,Tue Apr 22 09:15:35 UTC 2014,,,,,,0|i1q84v:,361273,,,,,,,,30/Dec/13 17:17;sergey_beryozkin;I've moved this resource to the package where it is actually used,"13/Mar/14 10:58;pdecat;On JBoss EAP 5 with CXF 2.6.13, the services list page generates an exception when serving the servicelist.css file:
{noformat}
java.lang.IllegalStateException: ""getWriter()"" has already been called for this response
        at org.apache.catalina.connector.Response.getOutputStream(Response.java:590)
        at org.apache.catalina.connector.ResponseFacade.getOutputStream(ResponseFacade.java:183)
        at org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet.renderStyleSheet(ServiceListGeneratorServlet.java:174)
        at org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet.service(ServiceListGeneratorServlet.java:89)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:164)
        at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:131)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:266)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:191)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:242)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:183)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:95)
        at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)
        at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)
        at org.apache.catalina.authenticator.SingleSignOn.invoke(SingleSignOn.java:383)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)
        at org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:436)
        at org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:385)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:451)
        at java.lang.Thread.run(Thread.java:662)
{noformat}

This is due to {{response.getOutputStream()}} being called after {{response.getWriter()}}:
{noformat:title=http://svn.apache.org/repos/asf/cxf/branches/2.6.x-fixes/rt/transports/http/src/main/java/org/apache/cxf/transport/servlet/servicelist/ServiceListGeneratorServlet.java}
69     public void service(HttpServletRequest request,
…
86         PrintWriter writer = response.getWriter();
87         AbstractDestination[] destinations = destinationRegistry.getSortedDestinations();
88         if (request.getParameter(""stylesheet"") != null) {
89             renderStyleSheet(request, response);
90             return;
91         }
…
169     private void renderStyleSheet(HttpServletRequest request, HttpServletResponse response)
170         throws IOException {
171         response.setContentType(""text/css; charset=UTF-8"");
172         URL url = this.getClass().getResource(""servicelist.css"");
173         if (url != null) {
174             IOUtils.copy(url.openStream(), response.getOutputStream());
175         }
176     }
{noformat}

Hence the initial suggestion from the original reporter to move the {{response.getWriter();}} call.

Should I open a new issue?

Regards,
Patrick.","14/Mar/14 10:43;sergey_beryozkin;I've moved response.getWriter() call to the point where it is actually needed.
Thanks, Sergey",19/Apr/14 06:38;solomax;which version contains this additional fix?,"22/Apr/14 09:04;sergey_beryozkin;This is actually fixed as part of https://issues.apache.org/jira/browse/CXF-5620,
CXF 2.7.11 (released) & 3.0.0 (released in 2 weeks)

Cheers, Sergey",22/Apr/14 09:15;solomax;Thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set-jaxb-validation-event-handler=false not working when fault message is changed.,CXF-5427,12681708,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pranabj,pranabj,28/Nov/13 06:38,29/May/17 11:52,14/Mar/19 02:30,05/Dec/13 20:00,2.6.2,,,,,,,2.7.9,3.0.0-milestone2,,,JAXB Databinding,,,,0,patch,,,,,,,"Hello,
We have a requirement to consumed web services for non-breaking changes in the producer web services so that we need not generate/ recompile CXF generated clients code every time for some non breaking changes in the Web service producer/server.

The changes that can happen in the producer web services or server are as follows:

1.Changes to the Data Structures such as addition of a new element at the end for both inbound and outbound messages.

This has an impact on the CXF client as if the data structure changes, in the client code, we will get marshal and unmarshall error. To resolve the issue, we did a small fix to add
@EndpointProperties({@EndpointProperty(key = ""set-jaxb-validation-event-handler"", value=""false"")}) 
in the Service interfaces code generated by CXF . This fix seems to fix the problem when the message are in request and response format.

But, the above fix is not taking care of the scenerio when the CXF client is receiving a fault error message and there is a change in the structure of fault error message say, a new field is added to the message which is not available in the cxf generated code.

The XML structure of response in error scenario:
<?xml version=""1.0""?>
<s:Envelope xmlns:s=""http://schemas.xmlsoap.org/soap/envelope/"">
  <s:Body>
    <s:Fault>
      <faultcode>s:eInvalidArguments</faultcode>
      <faultstring xml:lang=""en-US"">eInvalidArguments</faultstring>
      <detail>
        <Error xmlns=""<abc>"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"">
          <CorrelationId xmlns=""<abc>"">1234</CorrelationId>
          <DateTime xmlns=""<abc>"">XXXX-XX-XXTXX:XX:XX.XXXXXXXX</DateTime>
          <Description xmlns=""<abc>"">eInvalidArguments</Description>
          <InternalDescription xmlns=""<abc>"">Access denied to this user</InternalDescription>
          <Type>eInvalidArguments</Type>
          <UserToken xmlns:a=""<abc>"">
            <a:Status>Ok</a:Status>
            <a:Token>xyz</a:Token>
          </UserToken>
          <InternalErrorCode>1</InternalErrorCode>
        </Error>
      </detail>
    </s:Fault>
  </s:Body>
</s:Envelope>

Here, internalErrorCode is a newly added element in the webservice which is breaking our client code by throwing ""unwinding now org.apache.cxf.interceptor.Fault: Unmarshalling Error: unexpected element"" because the in the generated client code InternalErrorCode field doesnt exists. 

We are not getting the marshal and unmarshall exception in case of proper request and response message even though there is change in the inbound or outbound message.

Can we fix the issue quickly or CXF provide any quick fix for the fault error scenerio when there is a change in the error structure. Pleas suggest.











","CXF 2.6.2, JAXB2.2.4",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-12-05 20:00:24.911,,,no_permission,,Guru,,,,,,,,,,,360972,,,Mon May 29 11:52:12 UTC 2017,,,,,,0|i1q84f:,361271,,,,,,,,"02/Dec/13 03:55;pranabj;Hello Gurus,

Any update on this.

Thanks,
Pranab","05/Dec/13 20:00;dkulp;
I believe this is now fixed.   If you could test the next set of snapshots to double check, that would be great.   

The side effect is that if validate is turned on, faults are now properly validated.   Previously, they were never validated.  ","29/May/17 11:52;venkat_scope@yahoo.com;Hi,
I notice this issue in 3.1.11 version.
can some one tell me how to resolve this Issue ?

thanks 

regards,
Venkat
venkat_scope@yahoo.com",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS 2.0 Response.readEntity fails to read primitive values,CXF-5426,12681577,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,27/Nov/13 13:45,11/Jul/14 12:50,14/Mar/19 02:30,27/Nov/13 14:09,3.0.0-milestone1,,,,,,,2.7.9,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,360841,,,2013-11-27 13:45:57.0,,,,,,0|i1q7bj:,361140,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Async HTTP Conduit may not initialize HTTP client when many threads use it,CXF-5425,12681576,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sergey_beryozkin,sergey_beryozkin,27/Nov/13 13:43,11/Jul/14 12:51,14/Mar/19 02:30,05/Dec/13 20:19,,,,,,,,3.0.0-milestone2,,,,Transports,,,,0,,,,,,,,"The following is reported after running JAXRSMultithreadedClientTest:

Caused by: java.io.IOException: HttpAsyncClient is null
	at org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduit.getHttpAsyncClient(AsyncHTTPConduit.java:119)

AsyncHTTPConduitFactory might have a thread safety issue",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,360840,,,2013-11-27 13:43:51.0,,,,,,0|i1q7bb:,361139,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS Security Code can not validate signed SAML2 bearer assertions without KeyInfo,CXF-5424,12681538,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,sergey_beryozkin,sergey_beryozkin,27/Nov/13 11:11,05/Sep/16 10:48,14/Mar/19 02:30,23/Dec/13 17:49,,,,,,,,3.0.0-milestone2,,,,JAX-RS Security,,,,1,,,,,,,,Signed SAML2 Bearer assertions may not always have XML Signature KeyInfo elements available. The JAX-RS security code fails to validate such assertions but it should be able to *optionally* validate them without KeyInfo ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,360803,,,Mon Dec 23 17:49:54 UTC 2013,,,,,,0|i1q733:,361102,,,,,,,,"23/Dec/13 17:03;sergey_beryozkin;The XML Signature specification mentions that KeyInfo is an optional element and the application is expected to load it out of band if it is missing. IMHO it is safe to provide a basic out-of-band mechanism, for example, use a default crypto alias to load a certificate which can be used to validate a signature, a minor positive is that the processing should be faster too.  

In case of non-SAML2 payloads, for example, when we have the XML signature added only, we can try using the authenticated user name as the alias or the default crypto alias to load a certificate.

In case of RACS we can only try a default crypto alias; we can also extend that if needed to use the subject names as aliases however I'm not sure it is practical yet, in this case it is really an IDP certificate that we need. I guess this implies RACS will need its own signature crypto - which seems reasonable. ","23/Dec/13 17:41;sergey_beryozkin;RACS needs to have its 'keyInfoMustBeAvailable' property set to false. The KeyInfo will still be preferred if it is available but if it is not and the property allows for it, then the default alias will be used to load the certificate","23/Dec/13 17:49;sergey_beryozkin;Fixing for the 3.0.0 Milestone2 only, changes to 2.7.x are too sensitive",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Callbackhandlers and other resources aren't found if configured in blueprint config due to classloading issues,CXF-5423,12681270,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,giger,giger,26/Nov/13 14:58,11/Jul/14 12:50,14/Mar/19 02:30,17/Dec/13 17:37,2.7.7,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,JAX-RS Security,,,,0,,,,,,,,"Hi,

While playing around with JAX-RS security in OSGi (following the guide at http://cxf.apache.org/docs/jax-rs-saml.html) I found that if I configure the ws-security.* props directly in blueprint none of the configured resources are found. A little debugging showed that the wrong classloader is used to load the Callbackhandlers and property files. Note this works fine for the jaxrs service but not for the jaxrs client.

Blueprint config:

<jaxrs:client id=""bookStoreServiceClient""
                  address=""http://localhost:8040/services/bookStoreService""
serviceClass=""com.mycompany.demoRestServiceCommon.service.BookStore""
                  inheritHeaders=""true"">
        <jaxrs:outInterceptors>
            <ref component-id=""samlHeaderOutInterceptor""/>
        </jaxrs:outInterceptors>
        <jaxrs:properties>
            <entry key=""ws-security.callback-handler""
value=""com.mycompany.demoRestServiceConsumer.PasswordCallbackHandler""/>
            <entry key=""ws-security.saml-callback-handler""
value=""com.mycompany.demoRestServiceConsumer.SamlCallbackHandler""/>
            <entry key=""ws-security.signature.username"" value=""client""/>
            <entry key=""ws-security.signature.properties"" value=""clientKeystore.properties""/>
        </jaxrs:properties>
    </jaxrs:client>

    <bean id=""samlHeaderOutInterceptor"" class=""com.mycompany.demoRestServiceConsumer.SamlOutInterceptor""/>

I've overridden the SAMLHeaderOutInterceptor to show the problem and what needs to be done somewhere  to fix it:

public class SamlOutInterceptor extends SamlHeaderOutInterceptor {

    @Override
    public void handleMessage(Message message) throws Fault {
        ClassLoader classLoader = message.getExchange().getBus().getExtension(ClassLoader.class);
        ClassLoader tccl = Thread.currentThread().getContextClassLoader();
        try {
            if (classLoader != null) {
                Thread.currentThread().setContextClassLoader(classLoader);
            }I've implemented a hack
            super.handleMessage(message);
        } finally {
            //restore original classloader
            if (classLoader != null) {
                Thread.currentThread().setContextClassLoader(tccl);
            }
        }
    }
}
",OSGi (Karaf),,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-12-05 20:21:20.152,,,no_permission,,Unknown,,,,,,,,,,,360535,,,Tue Dec 17 17:36:50 UTC 2013,,,,,,0|i1q5fr:,360834,,,,,,,,"05/Dec/13 20:21;dkulp;Marc,

Can you grab the stack trace at that point?   That exact code SHOULD already be on the stack, but I'd like to get the exact stack trace to trace it up and double check. ","05/Dec/13 20:25;dkulp;Nevermind.... I don't see it setting the context classloader ANYWHERE in the jaxrs client code.   Yea, it's a problem.","17/Dec/13 17:36;sergey_beryozkin;Yet again I'm copying the tested and trusted code from the JAXWS frontend :-), thanks to Dan for the hint",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Servlet dependency in OAuth2 pom.xml should be with scope ""provided""",CXF-5421,12681157,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,totof3110,totof3110,25/Nov/13 23:00,26/Nov/13 17:17,14/Mar/19 02:30,26/Nov/13 13:03,,,,,,,,2.7.9,3.0.0-milestone2,,,JAX-RS,JAX-RS Security,,,0,,,,,,,,"From cxf-rt-rs-security-oauth2's pom.xml:

       <dependency>
            <groupId>${cxf.servlet-api.group}</groupId>
            <artifactId>${cxf.servlet-api.artifact}</artifactId>
            <version>${cxf.servlet-api.version}</version>
        </dependency>

This should have a <scope>provided</scope> otherwise the servlet JAR will be pulled in as a transitive dependency. It may conflict with the container's own servlet and throw exceptions like:

Caused by: java.lang.ClassCastException: org.springframework.web.SpringServletContainerInitializer cannot be cast to javax.servlet.ServletContainerInitializer
	at org.apache.catalina.startup.ContextConfig.getServletContainerInitializer(ContextConfig.java:1670)
	at org.apache.catalina.startup.ContextConfig.getServletContainerInitializers(ContextConfig.java:1652)
	at org.apache.catalina.startup.ContextConfig.processServletContainerInitializers(ContextConfig.java:1562)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1270)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:878)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:376)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5322)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 6 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,360422,,,Tue Nov 26 17:17:57 UTC 2013,,,,,,0|i1q4qn:,360721,,,,,,,,"25/Nov/13 23:01;totof3110;Workaround is to manually exclude the dependency:

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-security-oauth2</artifactId>
			<version>${org.apache.cxf-version}</version>
			<exclusions>
				<exclusion>
					<artifactId>geronimo-servlet_3.0_spec</artifactId>
					<groupId>org.apache.geronimo.specs</groupId>
				</exclusion>
			</exclusions>
		</dependency>
","26/Nov/13 17:17;totof3110;Saw the change in http://svn.apache.org/repos/asf/cxf/trunk/rt/rs/security/oauth-parent/oauth2/pom.xml.

Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue with EhCacheTokenStore using default LRU.,CXF-5420,12681133,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,freddy.exposito,freddy.exposito,25/Nov/13 21:25,11/Jul/14 12:50,14/Mar/19 02:30,26/Nov/13 17:17,2.6.10,2.7.7,,,,,,2.6.12,2.7.9,,,,,,,0,,,,,,,,"HI All,

The Ehcache TokenStore implementation (org.apache.cxf.ws.security.tokenstore. EHCacheTokenStore) is evicting wrong elements from the token store. It’s happening very randomly in a heavy multi-thread application but at some point is trying to get a DerivedKeyToken (added before sending request to the server) that was evicted before the response was returned.
I actually  see the issue in the Ehcache Element implementation (http://jira.terracotta.org/jira/browse/EHC-1065) because the constructor of class Element  that the CXF EHCacheTokenStore implementation is using is not setting ‘lastAccessTime’ in the constructor. As lastAccessTime is being zero by default, all the DerivedKeyToken elements in the token store have lastAccessTime=0 and there is a possibility that a wrong element is evicted because the default ehcache LRU policy uses the ‘lastAccessTime’ to perform eviction.

I reported the issue to EHcache already although I haven’t received answer from them. In the meantime, would you consider to update EHCacheTokenStore to use a more suitable Element constructor that allows setting ‘lastAccessTime’ properly?

Thanks,
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-26 11:03:35.366,,,no_permission,,Novice,,,,,,,,,,,360398,,,Tue Nov 26 15:14:42 UTC 2013,,,,,,0|i1q4lb:,360697,,,,,,,,"26/Nov/13 11:03;coheigea;Hi,

I'm kind of reluctant to use the constructor that specifies the ""lastAccessTime"". What do you think about calling ""updateUpdateStatistics"" on the newly created Element instead?

http://ehcache.org/apidocs/net/sf/ehcache/Element.html#updateUpdateStatistics%28%29

Colm.","26/Nov/13 15:14;freddy.exposito;Hi,

Calling 'updateUpdateStatistics' won't work because it's actually setting 'lastUpdateTime' (not 'lastAccessTime'). What do you think about calling 'resetAccessStatistics' on the newly created Element? I think that will do.

http://ehcache.org/apidocs/net/sf/ehcache/Element.html#resetAccessStatistics()

Thanks,
Freddy",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebClient QName representation can get a query added to it,CXF-5418,12680829,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,22/Nov/13 22:34,11/Jul/14 12:50,14/Mar/19 02:30,25/Nov/13 10:08,,,,,,,,3.0.0-milestone2,,,,JAX-RS,,,,0,,,,,,,,"WebClient gets its QName syntesized as {RequestURI}WebClient, where Request URI is supposed to represent a base endpoint address, which uniquely identifies a given service target.
When WebClient is initialized from URI already containing a query, this query makes its way into QName which is really wrong. The query will be displayed as part of the operation if needed (ex in JMX, etc)

 ",,,,,,,,,,,,,,CXF-5415,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,360094,,,2013-11-22 22:34:18.0,,,,,,0|i1q2q7:,360393,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.management.RuntimeOperationsException when register performance mbean using cxf webclient with service name contains ?,CXF-5415,12680672,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,ttoommbb,ttoommbb,22/Nov/13 03:02,26/Nov/13 17:40,14/Mar/19 02:30,25/Nov/13 10:16,2.7.7,,,,,,,2.7.8,3.0.0-milestone2,,,JAX-RS,,,,0,escape,,,,,,,"In [CXF-4873] you guys fixed escape {color:red}?{color} problem in OPERATION part.
But in service name, it can still contains a {color:red}?{color} character.
For example, when I try to connect Salesforce with Auth2 bearer authorization,
I got the callback service address QName similar like this:
{code}{https://na7.salesforce.com/id/00DA0000000ajozMAA/005A0000000qeS5IAI?oauth_token=00DA0000000ajoz%21AQ4AQI9IkV9EjnMLiXWUMvYMjQPGexBrTGJSduVIpYx09NI3Rv0rVX5QMQiD_mS7OK6TbMVSzL.451_bRpcwHbhQ9se_fttQ}tRESTClient
{code}
Then below error may appear:
{code}
2013-11-22 09:57:14,864 | WARN  | 1074256089-10261 | ctMessageResponseTimeInterceptor | ctMessageResponseTimeInterceptor  147 | 124 - org.apache.cxf.c
xf-rt-management - 2.7.7 | Create Counter''s ObjectName failed. {0}
javax.management.RuntimeOperationsException
Create Counter''s ObjectName failed. {0}
Caused by: java.lang.IllegalArgumentException: Repository: cannot add mbean for pattern name org.apache.cxf:bus.id=esb_demo.OAuth2SalesforceUserInfo_ContextMap-cxf786212177,type=Performance.Counter.Client,service=""https://na7.salesforce.com/id/00DA0000000ajozMAA/005A0000000qeS5IAI?oauth_token=00DA0000000ajoz%21AQ4AQI9IkV9EjnMLiXWUMvYMjQPGexBrTGJSduVIpYx09NI3Rv0rVX5QMQiD_mS7OK6TbMVSzL.451_bRpcwHbhQ9se_fttQ}tRESTClient"",port=""tRESTClient""
{code}
So the escape  {color:red}?{color} should also be fixed on ServiceName when create the Counter''s ObjectName .","WIN7
Salesforce service with Auth2 Bearer authorization",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-22 22:43:41.122,,,no_permission,,Unknown,,,,,,,,,,,359937,,,Fri Nov 22 22:43:41 UTC 2013,,,,,,0|i1q1rb:,360236,,,,,,,,22/Nov/13 03:05;ttoommbb;Same problem but in another case.,"22/Nov/13 22:43;sergey_beryozkin;I was reluctant at first to fix it because it is really a WebClient creation bug/limitation (see CXF-5418) or possibly of the custom code that a query may leak into its QName, however just for the sake of avoiding such exceptions it makes sense to escape '?'.
Please consider using an absolute path only to uniquely identify a given WebClient. Query is an optional part of the request itself and it will be shown as part of the (JMX) operation property. The same WebClient may have more queries added to it, so it is better to keep them out of the service target identification.
WebClient itself won't get queries added to its QName starting from 3.0.0-milestone2. If you use UriInfo then consider using UriInfo.getAbsolutePath to get the queries stripped off.

Thanks ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XMLStreamException when using Continuations in versions > 2.7.0,CXF-5414,12680602,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,markvandenbergh,markvandenbergh,21/Nov/13 21:21,11/Jul/14 12:50,14/Mar/19 02:30,27/Nov/13 17:38,2.7.1,2.7.2,2.7.3,2.7.4,2.7.5,2.7.6,2.7.7,2.7.9,,,,JAX-WS Runtime,,,,0,continuation,future,threading,,,,,"When using Continuation in a Jax web service a stacktrace is printed after every call, the web service does work as expected. If a new web service call is executed while waiting for the stacktrace (in Apache Tomcat the stacktrace appears after about 10 seconds) the web service is very slow. Some calls take up to 8 seconds to complete.

This only occurs with CXF versions above 2.7.0. Tested versions: 2.7.1, 2.7.2, 2.7.3 and 2.7.7.

Example project attached.

{code:title=Continuation web service code|borderStyle=solid}
    public String test() {
        final Continuation continuation = getContinuation();

        if (continuation == null) {
            throw new RuntimeException(""Failed to get continuation"");
        }

        synchronized (continuation) {
            if(continuation.isNew()) {
                FutureTask futureResponse = new FutureTask<>(new Callable<String>() {
                    @Override
                    public String call() throws Exception {
                        Thread.sleep(1000);
                        String response = ""Test response"";
                        // the blocking call has finished, we resume the transport thread
                        continuation.resume();

                        return response;
                    }
                });
                taskExecutor.execute(futureResponse);
                continuation.setObject(futureResponse);

                // suspend the transport thread so it can handle other requests
                continuation.suspend(CONTINUATION_TIMEOUT);
                return null;
            } else {
                FutureTask futureTask = (FutureTask) continuation.getObject();
                if(futureTask.isDone()) {
                    try {
                        return (String) futureTask.get();
                    } catch (InterruptedException | ExecutionException e) {
                        e.printStackTrace();
                    }
                } else {
                    continuation.suspend(CONTINUATION_TIMEOUT);
                }
            }
        }
        // unreachable
        return null;
    }

    private Continuation getContinuation() {
        ContinuationProvider provider = (ContinuationProvider) context.getMessageContext().get(ContinuationProvider.class.getName());
        return provider.getContinuation();
    }
{code}

{code:title=Stacktraces|borderStyle=solid}
Nov 21, 2013 10:15:53 PM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Interceptor for {http://continuation.example.com/}ContinuationWebServiceService#{http://continuation.example.com/}test has thrown exception, unwinding now
java.lang.RuntimeException: Can't find input stream in message
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:145)
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:248)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:222)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:153)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:167)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:286)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:206)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:647)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:749)
	at org.apache.catalina.core.ApplicationDispatcher.doDispatch(ApplicationDispatcher.java:660)
	at org.apache.catalina.core.ApplicationDispatcher.dispatch(ApplicationDispatcher.java:626)
	at org.apache.catalina.core.AsyncContextImpl$1.run(AsyncContextImpl.java:225)
	at org.apache.catalina.core.AsyncContextImpl.doInternalDispatch(AsyncContextImpl.java:367)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:299)
	at org.apache.coyote.http11.AbstractHttp11Processor.asyncDispatch(AbstractHttp11Processor.java:1587)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)

Nov 21, 2013 10:15:53 PM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Interceptor for {http://continuation.example.com/}ContinuationWebServiceService#{http://continuation.example.com/}test has thrown exception, unwinding now
org.apache.cxf.binding.soap.SoapFault: Error writing to XMLStreamWriter.
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor.handleMessage(SoapOutInterceptor.java:300)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor.handleMessage(SoapOutInterceptor.java:282)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:113)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:333)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:248)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:222)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:153)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:167)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:286)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:206)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:647)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:749)
	at org.apache.catalina.core.ApplicationDispatcher.doDispatch(ApplicationDispatcher.java:660)
	at org.apache.catalina.core.ApplicationDispatcher.dispatch(ApplicationDispatcher.java:626)
	at org.apache.catalina.core.AsyncContextImpl$1.run(AsyncContextImpl.java:225)
	at org.apache.catalina.core.AsyncContextImpl.doInternalDispatch(AsyncContextImpl.java:367)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:299)
	at org.apache.coyote.http11.AbstractHttp11Processor.asyncDispatch(AbstractHttp11Processor.java:1587)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
Caused by: javax.xml.stream.XMLStreamException: No open start element, when trying to write end element
	at com.ctc.wstx.sw.BaseStreamWriter.throwOutputError(BaseStreamWriter.java:1522)
	at com.ctc.wstx.sw.BaseStreamWriter.reportNwfStructure(BaseStreamWriter.java:1551)
	at com.ctc.wstx.sw.BaseNsStreamWriter.doWriteEndTag(BaseNsStreamWriter.java:648)
	at com.ctc.wstx.sw.BaseNsStreamWriter.writeEndElement(BaseNsStreamWriter.java:280)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor.handleMessage(SoapOutInterceptor.java:291)
	... 35 more
{code}","Ubuntu 12.04, Ubuntu 13.04, Java 7, Apache Tomcat 7.0.42",,,,,,,,,,,,,,,,,,,21/Nov/13 21:26;markvandenbergh;ContinuationTest.zip;https://issues.apache.org/jira/secure/attachment/12615195/ContinuationTest.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-11-21 21:54:39.734,,,no_permission,,Unknown,,,,,,,,,,,359867,,,Thu Nov 21 21:54:39 UTC 2013,,,,,,0|i1q1br:,360166,,,,,,,,"21/Nov/13 21:26;markvandenbergh;Minimal project which displays the issue. Compile and build the war using maven. Run the war file in Apache Tomcat and call the web service several times.

Update pom.xml CXF version to 2.7.0 to see that version does not contain the mentioned issue.","21/Nov/13 21:54;dkulp;Just a note for my records:

I can reproduce the stack trace with Tomcat 7.0.47
I cannot reproduce this with Jetty 8.1.14
I can reproduce the stack trace with Jetty 9.1.0

It's likely using the Jetty continuations with Jetty 8, but the Servlet 3 based continuations on Jetty 9 and Tomcat so it's likely in the Servlet3 based stuff.  Gut feeling is we're getting an extra call into the servlet.

Wasn't able to reproduce the 8 second calls, but that could be another symptom. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Big CXF Bundles have truncated Export-Package instruction,CXF-5412,12680507,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,21/Nov/13 12:40,11/Jul/14 12:50,14/Mar/19 02:30,17/Dec/13 15:43,2.7.7,,,,,,,2.6.12,2.7.9,,,OSGi,,,,0,,,,,,,,"I should've investigated it for 2.7.8 but the issue got out of our attention, creating a dedicated JIRA to keep it tracked. Not a critical-level issue as CXF individual modules are proper bundles",,,,,,,,,,,,,,CXF-5429,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-21 13:10:32.409,,,no_permission,,Unknown,,,,,,,,,,,359772,,,Tue Dec 17 15:43:22 UTC 2013,,,,,,0|i1q0r3:,360071,,,,,,,,"21/Nov/13 13:10;dkulp;Not sure if there is anything that can be done.   The Manifest spec specifically has a max-length per entry ( I think 32K, might be 64K) that we've exceeded.   The only option is to find imports that aren't needed at all and remove them.

With 3.0, the big jar is no longer an OSGi bundle at all and thus this is ""solved"" for 3.0 by requiring use of the little bundles. ","17/Dec/13 15:43;sergey_beryozkin;Downgrading the plugin version to 2.3.7 fixed it; the default 2.4.0 plugin does not expand packages ending with '*'.
The actual problem does seem to be related to the size of the big bundle manifests given that 2.4.0 plugin does expand packages correctly for individual CXF module bundles",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS Policy: random OperationBindingInfo used with policy for @WebServiceProvider,CXF-5411,12680471,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,zxzxzczz,zxzxzczz,21/Nov/13 09:43,10/Apr/17 19:07,14/Mar/19 02:30,06/May/14 18:06,2.6.2,,,,,,,,,,,JAX-WS Runtime,,,,0,CatchAll,ExtraOperationBindingInfo,,,,,,"We are seeing some policy attachment issues when policies are attached to both service and operation level.
 <wsdl:binding name=""UrnMustUnderstandBinding2"" type=""tns:MustUnderstand"">
        <wsp:PolicyReference URI=""#UserNameToken1"" />
        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
        <wsdl:operation name=""invoke"">
            <soap:operation soapAction="""" style=""document""/>
            <wsdl:input name=""getVerRequest"">
                <soap:body use=""literal""/>
                 <wsp:PolicyReference URI=""#UserNameToken2"" />
            </wsdl:input>    
            <wsdl:output name=""getVerResponse"">
               <soap:body use=""literal""/>
            </wsdl:output>
        </wsdl:operation>        
    </wsdl:binding>
While we expect operation level policy UserNameToken2  should be applied to server inbound, we are surprised to find out this is not always the case. When running the same test case again and again, we found  UserNameToken2 is applied  in one run, and UserNameToken1 is applied in another run. Which policy is applied is totally random.

Further debug, we found out that there are two BindingOperationInfo instances in server inbound. 
[8/27/13 12:43:37:629 CDT] 00000034 id= SystemOut O PolicyInInterceptor():BindingOperationInfo:[BindingOperationInfo: {http://mustunderstand.cxf.fats}invoke]:0 
[8/27/13 12:43:37:629 CDT] 00000034 id= SystemOut O PolicyInInterceptor():debugBoi:[BindingInfo http://schemas.xmlsoap.org/wsdl/soap/]:OperationInfo:[OperationInfo: {http://mustunderstand.cxf.fats}invoke]:input:org.apache.cxf.service.model.BindingMessageInfo@8c2760ba:outMessage:org.apache.cxf.service.model.BindingMessageInfo@33f92db2 

[8/27/13 12:43:37:630 CDT] 00000034 id= SystemOut O PolicyInInterceptor():BindingOperationInfo:[BindingOperationInfo: {http://cxf.apache.org/jaxws/provider}invoke]:1 
[8/27/13 12:43:37:630 CDT] 00000034 id= SystemOut O PolicyInInterceptor():debugBoi:[BindingInfo http://schemas.xmlsoap.org/wsdl/soap/]:OperationInfo:[OperationInfo: {http://cxf.apache.org/jaxws/provider}invoke]:input:org.apache.cxf.service.model.BindingMessageInfo@b72a33df:outMessage:org.apache.cxf.service.model.BindingMessageInfo@34105618 
One instance is created from WSDL with namespace {http://mustunderstand.cxf.fats}invoke], and another is hardcoded namespace http://cxf.apache.org/jaxws/provider.

Depending on the order of instances, if instance from WSDL is first, operation policy is applied as expected. If instance with default JAXWS namespace is first, operation policy is NOT applied.

We can understand the CXF tries to handle all messages as possible as it can, however, in our case, we hope the messages without UserNameToken2 or UserNameToken1  should be ignored, because to our production system, current mechanism causes confusing results, the messages without  UserNameToken2 or UserNameToken1 can be some threat messages to attack our system. We do believe the other users have the same issue, especially in banking.

We do hope the CXF can fix this, or at least provide the user a switch to shutdown the ""catchall"" BindOperationInfo 
",all OS,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-21 13:13:22.71,,,no_permission,,Unknown,,,,,,,,,,,359736,,,Tue May 06 18:06:16 UTC 2014,,,,,,0|i1q0j3:,360035,,,,,,,,21/Nov/13 13:13;dkulp;There have been a lot of fixed in this area.   Can you try with a more recent version of CXF?,"21/Nov/13 13:15;dkulp;One more comment:  with that setup, the message SHOULD have to satisfy BOTH Username1 and Username2 policies.   Per spec, the two policies should be merged together.

","22/Nov/13 03:00;zxzxzczz;Hi Daniel，
We are glad to hear that CXF has provided such a fix, but we can replace our CXF 2.6.2 as it has been used in the production system. Could you help to if any patch can fix this? We can take in the patch on this release.

Thanks!","06/May/14 18:06;dkulp;
Marking resolved as we believe it is resolved in more recent versions of CXF and request to verify unanswered.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Auto-registration of HTTP destinations in Blueprint should be optional  ,CXF-5410,12680381,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/Nov/13 21:38,22/Aug/14 13:11,14/Mar/19 02:30,24/Apr/14 12:50,,,,,,,,3.0,,,,OSGi,Transports,,,0,,,,,,,,"CXF HTTP Transport offers an auto-registration support of HTTP destinations with a default CXF Servlet in OSGI Blueprint. This is generally useful when the users register JAXWS or JAXRS endpoints from Blueprint CXF extensions.

However it also catches the endpoint registrations done via the alternative mechanisms. For example, CXFBlueprintServlet can be used to register CXF Blueprint endpoints. Suppose  CXFBlueprintServlet offers a ""/a"" servlet path, as the result the CXF endpoint will be accessible via ""/a"" and in addition, the default CXFServlet ""/cxf"" or other configured path. 

This opens the extra path into the endpoint which will be unexpected for CXFBlueprintServlet users 


 ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,359646,,,Thu Apr 24 12:50:18 UTC 2014,,,,,,0|i1pzzb:,359945,,,,,,,,"23/Apr/14 15:52;sergey_beryozkin;The problem can be generalized as follows: default HTTP OSGI transport interferes if the bundle contains a web.xml with CXFServlets. The typical goal of using web.xml is to introduce multiple or alternative paths into the web application. In addition, the servlet approach  provides for the richer ServletContext supporting redirects, etc.
When using web.xml, the default servlet introduces (at least) 2 side-effects:
-  /cxf prefixed path into the deployed endpoint is added unexpectedly (as documented in this JIRA)
- deploying multiple servlets (in a single war or even in different wars) with the same base endpoint address fails while works fine in non-OSGI cases. 

Right now I can only think of two options:
1. Introduce an OSGi property that will instruct the default servlet listening on ""/cxf"" (or the global registry) to ignore new registrations
2. Reintroduce HTTP OSGI transports so that the developers could exclude the dependency when using web.xml

1. is probably simpler...if 2 was considered then we'd rather do it before 3.0.0 is out
","24/Apr/14 12:50;sergey_beryozkin;Actually, we have the activator now in place, so for now we can simply support a property disabling the transport: ""org.apache.cxf.osgi.http.transport.disable""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLManagerImpl.removeDefinition doesn't take effect,CXF-5407,12680236,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,zhubinbj,zhubinbj,20/Nov/13 09:52,01/Aug/17 16:42,14/Mar/19 02:30,11/Apr/17 16:24,2.6.2,,,,,,,3.1.12,3.2.0,,,JAX-WS Runtime,,,,1,,,,,,,,"I was trying to invoke WSDLManagerImpl.removeDefinition to remove the WSDL cache in web service client side to avoid the invalid WSDL defination when the WSDL file for web service is server side changed. see more details in https://issues.apache.org/jira/browse/CXF-5216
I was using following code to to remove the cach:

            WSDLManager wsdlManager = bus.getExtension(WSDLManager.class);
            synchronized (wsdlManager) {
                Map<Object, Definition> map = wsdlManager.getDefinitions();

                if (!map.isEmpty() && url != null && map.containsKey(url.toString())) {
                    wsdlManager.removeDefinition(wsdlManager.getDefinition(url.toString()));
                }
            }
But it is found the WSDLcache is not removed as expected later.

I tried to add more system out info in WSDLManagerImpl.removeDefinition and debug it and find the it didn't removed the WSDL definition definitionsMap.
This should not be ""synchronized"" issue since the object id for the defination is the same when I debug it. It should the the same object and it's unreasonalbe that the defination object is still in the definitionsMap after invoking definitionsMap.remove(o). Any ideas?

The added system out:

    public void removeDefinition(Definition wsdl) {
        synchronized (definitionsMap) {
            List<Object> keys = new ArrayList<Object>();
            for (Map.Entry<Object, Definition> e : definitionsMap.entrySet()) {
                if (e.getValue() == wsdl) {
                    keys.add(e.getKey());
                }
            }
            for (Object o : keys) {
                // Print contents of definitionsMap before remove the defination.
            	System.out.println(""--WSDLManagerImpl--map before----------->:""+definitionsMap);
		// Print removed the defination.               
 		System.out.println(""--WSDLManagerImpl--removed map----------->:""+definitionsMap.remove(o));
                // Print the contents of definitionsMap before remove the defination.  
		System.out.println(""--WSDLManagerImpl--map after----------->:""+definitionsMap);
                schemaCacheMap.remove(o);
            }
        }
    }

Output:

//There is 1 defination for http://localhost:8010/MTOMTest/MTOMService?wsdl before removing
--WSDLManagerImpl--map before----------->:{http://localhost:8010/MTOMTest/MTOMService?wsdl=Definition: name={http://MTOMService/}MTOMService targetNamespace=http://MTOMService/
Types:
SchemaExtensibilityElement ({http://www.w3.org/2001/XMLSchema}schema):
required=null
element=[xs:schema: null]
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
PortType: name={http://MTOMService/}MTOMInter
Operation: name=getAttachment
style=REQUEST_RESPONSE,1
Input: name=getAttachment
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Output: name=getAttachmentResponse
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
Binding: name={http://MTOMService/}MTOMServiceSoapBinding
PortType: name={http://MTOMService/}MTOMInter
Operation: name=getAttachment
style=REQUEST_RESPONSE,1
Input: name=getAttachment
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Output: name=getAttachmentResponse
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
BindingOperation: name=getAttachment
BindingInput: name=getAttachment
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
BindingOutput: name=getAttachmentResponse
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
SOAPOperation ({http://schemas.xmlsoap.org/wsdl/soap/}operation):
required=null
soapActionURI=
style=document
SOAPBinding ({http://schemas.xmlsoap.org/wsdl/soap/}binding):
required=null
transportURI=http://schemas.xmlsoap.org/soap/http
style=document
Service: name={http://MTOMService/}MTOMService
Port: name=MTOMServicePort
Binding: name={http://MTOMService/}MTOMServiceSoapBinding
PortType: name={http://MTOMService/}MTOMInter
Operation: name=getAttachment
style=REQUEST_RESPONSE,1
Input: name=getAttachment
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Output: name=getAttachmentResponse
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
BindingOperation: name=getAttachment
BindingInput: name=getAttachment
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
BindingOutput: name=getAttachmentResponse
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
SOAPOperation ({http://schemas.xmlsoap.org/wsdl/soap/}operation):
required=null
soapActionURI=
style=document
SOAPBinding ({http://schemas.xmlsoap.org/wsdl/soap/}binding):
required=null
transportURI=http://schemas.xmlsoap.org/soap/http
style=document
SOAPAddress ({http://schemas.xmlsoap.org/wsdl/soap/}address):
required=null
locationURI=http://localhost:8010/MTOMTest/MTOMService
UnknownExtensibilityElement ({http://www.w3.org/ns/ws-policy}Policy):
required=null
element=[wsp:Policy: null]}



//Print the removed defination
--WSDLManagerImpl--removed map----------->:Definition: name={http://MTOMService/}MTOMService targetNamespace=http://MTOMService/
Types:
SchemaExtensibilityElement ({http://www.w3.org/2001/XMLSchema}schema):
required=null
element=[xs:schema: null]
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
PortType: name={http://MTOMService/}MTOMInter
Operation: name=getAttachment
style=REQUEST_RESPONSE,1
Input: name=getAttachment
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Output: name=getAttachmentResponse
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
Binding: name={http://MTOMService/}MTOMServiceSoapBinding
PortType: name={http://MTOMService/}MTOMInter
Operation: name=getAttachment
style=REQUEST_RESPONSE,1
Input: name=getAttachment
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Output: name=getAttachmentResponse
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
BindingOperation: name=getAttachment
BindingInput: name=getAttachment
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
BindingOutput: name=getAttachmentResponse
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
SOAPOperation ({http://schemas.xmlsoap.org/wsdl/soap/}operation):
required=null
soapActionURI=
style=document
SOAPBinding ({http://schemas.xmlsoap.org/wsdl/soap/}binding):
required=null
transportURI=http://schemas.xmlsoap.org/soap/http
style=document
Service: name={http://MTOMService/}MTOMService
Port: name=MTOMServicePort
Binding: name={http://MTOMService/}MTOMServiceSoapBinding
PortType: name={http://MTOMService/}MTOMInter
Operation: name=getAttachment
style=REQUEST_RESPONSE,1
Input: name=getAttachment
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Output: name=getAttachmentResponse
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
BindingOperation: name=getAttachment
BindingInput: name=getAttachment
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
BindingOutput: name=getAttachmentResponse
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
SOAPOperation ({http://schemas.xmlsoap.org/wsdl/soap/}operation):
required=null
soapActionURI=
style=document
SOAPBinding ({http://schemas.xmlsoap.org/wsdl/soap/}binding):
required=null
transportURI=http://schemas.xmlsoap.org/soap/http
style=document
SOAPAddress ({http://schemas.xmlsoap.org/wsdl/soap/}address):
required=null
locationURI=http://localhost:8010/MTOMTest/MTOMService
UnknownExtensibilityElement ({http://www.w3.org/ns/ws-policy}Policy):
required=null
element=[wsp:Policy: null]




//The WSDL defination for http://localhost:8010/MTOMTest/MTOMService?wsdl still exists after removing.
--WSDLManagerImpl--map after----------->:{http://localhost:8010/MTOMTest/MTOMService?wsdl=Definition: name={http://MTOMService/}MTOMService targetNamespace=http://MTOMService/
Types:
SchemaExtensibilityElement ({http://www.w3.org/2001/XMLSchema}schema):
required=null
element=[xs:schema: null]
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
PortType: name={http://MTOMService/}MTOMInter
Operation: name=getAttachment
style=REQUEST_RESPONSE,1
Input: name=getAttachment
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Output: name=getAttachmentResponse
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
Binding: name={http://MTOMService/}MTOMServiceSoapBinding
PortType: name={http://MTOMService/}MTOMInter
Operation: name=getAttachment
style=REQUEST_RESPONSE,1
Input: name=getAttachment
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Output: name=getAttachmentResponse
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
BindingOperation: name=getAttachment
BindingInput: name=getAttachment
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
BindingOutput: name=getAttachmentResponse
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
SOAPOperation ({http://schemas.xmlsoap.org/wsdl/soap/}operation):
required=null
soapActionURI=
style=document
SOAPBinding ({http://schemas.xmlsoap.org/wsdl/soap/}binding):
required=null
transportURI=http://schemas.xmlsoap.org/soap/http
style=document
Service: name={http://MTOMService/}MTOMService
Port: name=MTOMServicePort
Binding: name={http://MTOMService/}MTOMServiceSoapBinding
PortType: name={http://MTOMService/}MTOMInter
Operation: name=getAttachment
style=REQUEST_RESPONSE,1
Input: name=getAttachment
Message: name={http://MTOMService/}getAttachment
Part: name=parameters
elementName={http://MTOMService/}getAttachment
Output: name=getAttachmentResponse
Message: name={http://MTOMService/}getAttachmentResponse
Part: name=parameters
elementName={http://MTOMService/}getAttachmentResponse
BindingOperation: name=getAttachment
BindingInput: name=getAttachment
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
BindingOutput: name=getAttachmentResponse
SOAPBody ({http://schemas.xmlsoap.org/wsdl/soap/}body):
required=null
use=literal
SOAPOperation ({http://schemas.xmlsoap.org/wsdl/soap/}operation):
required=null
soapActionURI=
style=document
SOAPBinding ({http://schemas.xmlsoap.org/wsdl/soap/}binding):
required=null
transportURI=http://schemas.xmlsoap.org/soap/http
style=document
SOAPAddress ({http://schemas.xmlsoap.org/wsdl/soap/}address):
required=null
locationURI=http://localhost:8010/MTOMTest/MTOMService
UnknownExtensibilityElement ({http://www.w3.org/ns/ws-policy}Policy):
required=null
element=[wsp:Policy: null]}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2015-11-06 12:31:54.448,,,no_permission,,Unknown,,,,,,,,,,,359499,,,Fri Nov 06 12:31:54 UTC 2015,,,,,,0|i1pz2v:,359798,,,,,,,,"06/Nov/15 12:31;brecht.yperman@invenso.com;I'm experiencing the same issue, when trying to dynamically redeploy an existing Endpoint.

It seems to boil down to CacheMap.remove() not actually removing unless the keys are identical.

{code}
@Test
	public void TestCacheMap() {
		Map<Object, Object> definitions = new CacheMap<Object, Object>();
		
		Object putValue = new Object();
		
		String putKey = ""test"";
		definitions.put(putKey, putValue);
		
		String removeKey = new String(""test"");
		Object removeValue = definitions.remove(removeKey);
		
		assertEquals(putKey, removeKey);
		assertEquals(putValue, removeValue);
		assertTrue(definitions.isEmpty());
	}
{code}

(this test fails with CXF 3.1.4)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in AtomPojoProvider when an Atom entry is returned with a media-type of application/atom+xml (no type parameter),CXF-5406,12680134,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dale.peakall,dale.peakall,20/Nov/13 08:38,26/Nov/13 17:40,14/Mar/19 02:30,20/Nov/13 12:24,2.7.7,,,,,,,2.7.9,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"According to RFC5023 (section 12) a server SHOULD return a type parameter on the media-type when returning an Atom Entry (e.g. application/atom+xml;type=entry).  However, it is not mandatory that the server do this and RFC5023 states:
{quote}
If not specified, the type is assumed to be unspecified, requiring
   Atom processors to examine the root element to determine the type of
   Atom document.
{quote}
However, AtomPojoProvider simply assumes that when no type parameter is present that the content is a feed and throws a ClassCastException when it ends up trying to cast the Entry returned by Abdera into a Feed.

Also AtomPojoProvider's check on the type parameter value is case-senstitive where RFC5023 states that:
{quote}
Neither the parameter name nor its value are case sensitive.
{quote}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,359491,,,Wed Nov 20 08:39:29 UTC 2013,,,,,,0|i1pz13:,359790,,,,,,,,"20/Nov/13 08:39;dale.peakall;Sample code:
{code}
import org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.lang.annotation.Annotation;
import java.nio.charset.Charset;

import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.MultivaluedHashMap;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Example that demonstrates problem with AtomPojoProvider when there is no ""type"" parameter specified.
 */
public final class NoAtomTypeApp {
    /** A sample entry with content. */
    private static final String SAMPLE_ENTRY_WITH_CONTENT =
        ""<?xml version='1.0' encoding='UTF-8'?>\n"" +
            ""<entry xmlns=\""http://www.w3.org/2005/Atom\"">\n"" +
            ""  <id>84297856</id>\n"" +
            ""  <content type=\""application/xml\"">\n"" +
            ""    <jaxbDataType xmlns=\""\"">\n"" +
            ""    </jaxbDataType>\n"" +
            ""  </content>\n"" +
            ""</entry>"";

    /**
     * A sample JAXB data-type to read data into.
     */
    @XmlRootElement
    public static class JaxbDataType {
        // no data
    }

    /**
     * This class cannot be instantiated.
     */
    private NoAtomTypeApp() {
        // do nothing
    }

    /**
     * Main entry point.
     * @param args the command-line arguments: none expected.
     */
    public static void main(String[] args) throws IOException {
        AtomPojoProvider atomPojoProvider = new AtomPojoProvider();

        try {
            atomPojoProvider.readFrom((Class)JaxbDataType.class,
                JaxbDataType.class,
                new Annotation[0],
                MediaType.valueOf(""application/atom+xml""),
                new MultivaluedHashMap<String, String>(),
                new ByteArrayInputStream(SAMPLE_ENTRY_WITH_CONTENT.getBytes(Charset.forName(""UTF-8""))));
        } catch (ClassCastException e) {
            System.out.println(""Urgh - this isn't good!"");
        }

        try {
            atomPojoProvider.readFrom((Class)JaxbDataType.class,
                JaxbDataType.class,
                new Annotation[0],
                MediaType.valueOf(""application/atom+xml;type=ENTRY""),
                new MultivaluedHashMap<String, String>(),
                new ByteArrayInputStream(SAMPLE_ENTRY_WITH_CONTENT.getBytes(Charset.forName(""UTF-8""))));
        } catch (ClassCastException e) {
            System.out.println(""Urgh - this also isn't good!"");
        }
    }
}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM with anonymous endpoint throwing security policy validation exception for SequenceAck,CXF-5405,12680133,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,20/Nov/13 08:35,11/Jul/14 12:50,14/Mar/19 02:30,20/Jan/14 15:33,2.7.7,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,WS-* Components,,,,0,,,,,,,,"When WS-RM with an anonoymous endpoint is used in conjuction with a policy based WS-Security configuration, the sequence acknoledgement response to the client is rejected by the policy validator.

{http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702}X509Token: The received token does not match the token inclusion requirement
org.apache.cxf.ws.policy.PolicyException: These policy alternatives can not be satisfied: 
{http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702}X509Token: The received token does not match the token inclusion requirement
	at org.apache.cxf.ws.policy.AssertionInfoMap.checkEffectivePolicy(AssertionInfoMap.java:179)
	at org.apache.cxf.ws.policy.PolicyVerificationInInterceptor.handle(PolicyVerificationInInterceptor.java:101)
	at org.apache.cxf.ws.policy.AbstractPolicyInterceptor.handleMessage(AbstractPolicyInterceptor.java:44)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:835)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1606)

The cause of this issue is in the RM processing to reset the requestor role, whose value will subsequently be used by the policy validator to choose the correct configuration value. The requestor role for the SequenceAck messages should not be reset.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,359490,,,2013-11-20 08:35:26.0,,,,,,0|i1pz0v:,359789,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in AtomPojoProvider when no content (or content is empty),CXF-5404,12680130,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,dale.peakall,dale.peakall,20/Nov/13 08:23,26/Nov/13 17:40,14/Mar/19 02:30,20/Nov/13 12:23,2.7.7,,,,,,,2.7.9,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"When using the AtomPojoProvider with JAX-RS - the library bombs with an NPE (embedded in a ClientErrorException) if using JAXB annotated content objects - but no content is provided in the entry.  It also NPE's if the content element is present but contains no XML (although this is a slightly dubious Atom document at this point).

Returning ""null"" would be a much better result in this case.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-20 12:23:33.465,,,no_permission,,Novice,,,,,,,,,,,359487,,,Wed Nov 20 12:23:33 UTC 2013,,,,,,0|i1pz07:,359786,,,,,,,,"20/Nov/13 08:24;dale.peakall;Sample code:

{code}
import org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.lang.annotation.Annotation;
import java.nio.charset.Charset;

import javax.ws.rs.ClientErrorException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.MultivaluedHashMap;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Example that demonstrates problem with AtomPojoProvider when using JAXB and response is missing content.
 */
public final class NoContentApp {
    /** A sample entry with content. */
    private static final String SAMPLE_ENTRY_WITH_CONTENT =
        ""<?xml version='1.0' encoding='UTF-8'?>\n"" +
            ""<entry xmlns=\""http://www.w3.org/2005/Atom\"">\n"" +
            ""  <id>84297856</id>\n"" +
            ""  <content type=\""application/xml\"">\n"" +
            ""    <jaxbDataType xmlns=\""\"">\n"" +
            ""    </jaxbDataType>\n"" +
            ""  </content>\n"" +
            ""</entry>"";


    /** A sample entry without content. */
    private static final String SAMPLE_ENTRY_WITHOUT_CONTENT =
        ""<?xml version='1.0' encoding='UTF-8'?>\n"" +
        ""<entry xmlns=\""http://www.w3.org/2005/Atom\"">\n"" +
        ""  <id>84297856</id>\n"" +
        ""</entry>"";

    /**
     * A sample JAXB data-type to read data into.
     */
    @XmlRootElement
    public static class JaxbDataType {
        // no data
    }

    /**
     * This class cannot be instantiated.
     */
    private NoContentApp() {
        // do nothing
    }

    /**
     * Main entry point.
     * @param args the command-line arguments: none expected.
     */
    public static void main(String[] args) throws IOException {
        AtomPojoProvider atomPojoProvider = new AtomPojoProvider();

        atomPojoProvider.readFrom((Class)JaxbDataType.class,
            JaxbDataType.class,
            new Annotation[0],
            MediaType.valueOf(""application/atom+xml;type=entry""),
            new MultivaluedHashMap<String, String>(),
            new ByteArrayInputStream(SAMPLE_ENTRY_WITH_CONTENT.getBytes(Charset.forName(""UTF-8""))));

        try {
            atomPojoProvider.readFrom((Class)JaxbDataType.class,
                JaxbDataType.class,
                new Annotation[0],
                MediaType.valueOf(""application/atom+xml;type=entry""),
                new MultivaluedHashMap<String, String>(),
                new ByteArrayInputStream(SAMPLE_ENTRY_WITHOUT_CONTENT.getBytes(Charset.forName(""UTF-8""))));
        } catch (ClientErrorException e) {
            if (e.getCause() instanceof NullPointerException) {
                System.out.println(""This isn't very helpful!"");
            }
        }
    }
}
{code}",20/Nov/13 12:23;sergey_beryozkin;thanks for providing a test,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractGrant.toMap hardcode the grandType to Client_Credentials,CXF-5396,12679920,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,jasonw_nz,jasonw_nz,19/Nov/13 10:57,26/Nov/13 17:40,14/Mar/19 02:30,19/Nov/13 11:16,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS Security,,,,0,,,,,,,,"AbstractGrant.toMap method has this line:
        map.putSingle(OAuthConstants.GRANT_TYPE, OAuthConstants.CLIENT_CREDENTIALS_GRANT);

When the subclass, ResourceOwnerGrant overides this toMap, it calls the super.toMap(), which will cause this wrong value being added.

So, I think we should fix this by calling map.putSingle(OAuthConstants.GRANT_TYPE, getType()).
This way it will work for all 4 subclasses and will automatically work for future new class. Another way is to fix the ResourceOwnerGrant by not calling super.toMap. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-19 11:16:48.051,,,no_permission,,Unknown,,,,,,,,,,,359277,,,Tue Nov 19 11:16:48 UTC 2013,,,,,,0|i1pxpj:,359576,,,,,,,,"19/Nov/13 11:16;sergey_beryozkin;Ouch, I refactored few things on the client side to support the client audience parameter and missed it, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ImplicitGrantService always redirect to broken redirect url,CXF-5395,12679775,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,jasonw_nz,jasonw_nz,18/Nov/13 17:31,11/Jul/14 12:51,14/Mar/19 02:30,02/Dec/13 14:09,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS Security,,,,0,,,,,,,,"org.apache.cxf.rs.security.oauth2.services.ImplicitGrantService will build a redirectURL based on the input given to createGrant method, and redirect to such url.

I have discovered 2 issues with the building of the URL.

1. ""state"" is added as a fragment, not a query parameter, whereas token got added as a query parameter. According to the spec, only the access token should be appended as the fragment. 

See http://tools.ietf.org/html/rfc6749#section-4.2.2
Example valid URL: http://example.com/cb#access_token=2YotnFZFEjr1zCsicMWpAA
               &state=xyz&token_type=example&expires_in=3600
Actual output:
http://example.com/cb#state=xyz&access_token=2YotnFZFEjr1zCsicMWpAA
               &token_type=example&expires_in=3600

2.if there are more than one OauthPermissions in the token, the OAuthUtils.convertPermissionsToScope method will simply join the them with space. For example if perms are ""read"" and ""write"", the built url will be

http://example.com/cb#state=xyz&access_token=2YotnFZFEjr1zCsicMWpAA
               &token_type=example&expires_in=3600&scope=read write

Spaces are not escaped.

With those two bugs, especially the 1st one, there is no way to get oauth2 implicit flow to work with the current version of CXF.
",irrelevant ,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,359133,,,2013-11-18 17:31:38.0,,,,,,0|i1pwtr:,359432,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ImplicitGrantService always redirect to broken redirect url,CXF-5394,12679774,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,jasonw_nz,jasonw_nz,18/Nov/13 17:31,26/Nov/13 17:40,14/Mar/19 02:30,18/Nov/13 21:42,2.7.7,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,JAX-RS Security,,,,0,,,,,,,,"org.apache.cxf.rs.security.oauth2.services.ImplicitGrantService will build a redirectURL based on the input given to createGrant method, and redirect to such url.

I have discovered 2 issues with the building of the URL.

1. ""state"" is added as a fragment, not a query parameter, whereas token got added as a query parameter. According to the spec, only the access token should be appended as the fragment. 

See http://tools.ietf.org/html/rfc6749#section-4.2.2
Example valid URL: http://example.com/cb#access_token=2YotnFZFEjr1zCsicMWpAA
               &state=xyz&token_type=example&expires_in=3600
Actual output:
http://example.com/cb#state=xyz&access_token=2YotnFZFEjr1zCsicMWpAA
               &token_type=example&expires_in=3600

2.if there are more than one OauthPermissions in the token, the OAuthUtils.convertPermissionsToScope method will simply join the them with space. For example if perms are ""read"" and ""write"", the built url will be

http://example.com/cb#state=xyz&access_token=2YotnFZFEjr1zCsicMWpAA
               &token_type=example&expires_in=3600&scope=read write

Spaces are not escaped.

With those two bugs, especially the 1st one, there is no way to get oauth2 implicit flow to work with the current version of CXF.
",irrelevant ,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-18 21:42:47.731,,,no_permission,,Novice,,,,,,,,,,,359132,,,Tue Nov 19 10:31:36 UTC 2013,,,,,,0|i1pwtj:,359431,,,,,,,,"18/Nov/13 21:42;sergey_beryozkin;Section 4.2.2 clearly states that the parameters listed in that section can be added to the fragment component, I'm not sure where do you see that only the access token can be added to the fragment. The example in that section simply shows the access_token being listed the first.
The encoding issue is a genuine bug though, I've got it fixed, the easy workaround is to offer a composite value like ""read_write""
thanks ",18/Nov/13 21:54;sergey_beryozkin;That said I reordered parameters a bit so that the access_token comes immediately after '#' as some clients may expect it be the case,"18/Nov/13 22:36;jasonw_nz;Sergey, thanks for the super fast response. 

I think the spec says the access_token must be a segment, not query. As when you call that url, segment will not be passed back to the server. We do not need token to be passed back thats why. So it was a genuine bug which just got fixed now. 

Another thing is that the scope value, according to the spec, is a space separated string, I can see you used ""+"" instead. 

Minor question, why not use UriBuilder instead of handcrafting the url?

Many thanks,","19/Nov/13 10:31;sergey_beryozkin;> I think the spec says the access_token must be a segment, not query. As when you call that url, segment will not be passed back to the server. We do not need token to be passed back thats why. So it was a genuine bug which just got fixed now. 

All we see in the spec example is '&' separators but we do not see a query component '?' marker, the whole '&' separated sequence follows a '#' fragment marker. Calling on such URI would most likely miss the fragment values, I've seen it elsewhere, the fragment is dropped along the way somehow but this URI is not designed to be called upon, I believe it's for the in-browser client to be able to get to the fragment easily.

> Another thing is that the scope value, according to the spec, is a space separated string, I can see you used ""+"" instead. 

This is how a space gets encoded per the rules of the application/x-www-form-urlencoded type (as OAuth2 spec requires), URL-decoding the value will give you a space separated sequence

> why not use UriBuilder instead of handcrafting the url
I did not see a major need for it, may be at some later stage if needed
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Custom Marshalling Validation Event Handler,CXF-5392,12679683,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ewertz,ewertz,18/Nov/13 06:40,26/Nov/13 17:40,14/Mar/19 02:30,19/Nov/13 17:52,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,JAXB Databinding,,,,0,features,,,,,,,"The current JAXB implementation allows a custom unmarshalling validation event handler configured by the property: 

jaxb-validation-event-handler

There should also be a custom marshalling validation event handler property like: 
 
jaxb-writer-validation-event-handler

Almost the entire structure for such a property already seems to exist, with the only lacking implementation in the DataWriterImpl. The only thing I'd like to know before implementing and submitting some code is what the property should be called exactly.",,,,,,,,,,,,,,,,,,,,19/Nov/13 10:07;ewertz;apacheCXF-trunk-CustomMarshallingEventValidator.patch;https://issues.apache.org/jira/secure/attachment/12614586/apacheCXF-trunk-CustomMarshallingEventValidator.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-11-19 17:42:27.19,,,no_permission,,Unknown,,,,,,,,,,,359043,,,Tue Nov 19 17:42:27 UTC 2013,,,,,,0|i1pw6n:,359333,,,,,,,,"19/Nov/13 10:07;ewertz;Mostly unit and system tests. All the structure for reading and passing the property around the system already existed, so is just needed to be added to the DataWriterImpl.

","19/Nov/13 17:42;dkulp;This patch is good for 2.7.x.  Current behavior would be retained, new property for new behavior.

For 3.0, I'm going to change this slightly.   The current ""jaxb-validation-event-handler"" will apply to both reader/writer.   I've then added a reader properly (like your writer property) that can be used to configure them separately.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Response code is not logged for SOAP responses,CXF-5391,12679656,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,mandyp,mandyp,17/Nov/13 22:46,26/Nov/13 17:40,14/Mar/19 02:30,19/Nov/13 16:05,2.7.7,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,JAX-WS Runtime,,,,0,,,,,,,,"If you enable logging through the LoggingIn/OutInterceptors and then send a SOAP request through, the response code is not logged.

---------------------------
ID: 2
Encoding: UTF-8
Content-Type: text/xml

The response code is logged fine for rest requests:

---------------------------
ID: 19
Response-Code: 200
Content-Type: application/xml
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-18 11:49:04.931,,,no_permission,,Unknown,,,,,,,,,,,359016,,,Thu Nov 21 11:02:19 UTC 2013,,,,,,0|i1pw0n:,359306,,,,,,,,"18/Nov/13 11:49;ay;there seems to be an inconsistency between jaxrs and jaws in how the http code is logged at the server/provider side.
in any case, we should make this consistent.","19/Nov/13 13:22;ay;Hi Mandy,
I just fixed this issue in trunk and the current 2.7.x and 2.6.x snapshots.
the response code should be included now.
regards, aki","19/Nov/13 22:48;mandyp;Hi Aki 

Many thanks for fixing this so quickly. I can confirm your fix has fixed the issue with HTTP transport but there is still an issue with Local Transport. Can you reopen the issue please?

Best wishes
Mandy","20/Nov/13 12:55;ay;Hi Mandy,
thanks for testing the patch.

Regarding your mentioning of Local Transport, there is no equivalent of the HTTP status code in Local transport. So, I am not sure what you mean by your comment. If you have questions, could you post a mail message to the users@cxf mailing list with some more details?

Regards, aki","20/Nov/13 13:05;sergey_beryozkin;Hi Aki, my understanding is that Local Transport is used to test WS & RS endpoints, so the higher-level info like headers, etc may be handy to display, example, Content-Type is HTTP header. 

Note, in the JAX-RS case, the response code is set before the transport is even invoked, in JAXRSOutInterceptor, before LoggingOutInterceptor is invoked so we see the response code on the JAX-RS out path. Not sure though if it is possible to set up the response code earlier on the WS out path: perhaps a simple 'fix' is to register LoggingOutInterceptor after WS out interceptor sets the response code, if such WS code exists

Cheers, Sergey","20/Nov/13 13:54;ay;Hi Sergey,
if we want to get some status for LocalTRP that is analogue to the http status code, we could set it in the LocalTRP's serialization step and that can be pulled when the LogOutInterceptor gets executed.
that's how the sttus code inclusion for HTTP was added to the LogOutInterceptor.

But is there some meaningful status code for LocalTRP? 
assuming for the error case, someone is already setting the appropriate code, we could add the same logic that is in the httpdestination like?
everything ok and has body -> 200
ok but empty -> 202?
regards, aki","20/Nov/13 14:05;sergey_beryozkin;Hi Aki,

I guess so, if no Message.RESPONSE_CODE is set then default to something like that. 
By the way, in the defaulting logic,  if the message has no response body it has to be 202 only if it is a one way request, 204 otherwise
Thanks, Sergey","20/Nov/13 18:32;ay;Hi Sergey,
okay.
But this 204 is jaxrs specific and i suppose you are already setting it within the jaxrs part, right?
HTTPDest has the logic of using the status code if it is already set in the message or if not, choose between 200 and 202 based on several factors such as whether the call was oneway, empty-partial-resp, partial reap, etc to get the right status code for jaxws stuff with or without ws-* extensions. So I suppose, we can use the same logic of setting either 200 or 202 for LocalDest only when the code is not set.

In anyway, I'll create a new ticket to track this topic and link it from here.
CXF-5409
regards, aki
","20/Nov/13 20:55;sergey_beryozkin;Hi Aki

204 is really not JAX-RS specific. If you have a request-response and the response has no body it is 204. 
Consider a JAX-WS Provider<Source> REST service returning null to a GET request, it is def 204 :-), not 202

Cheers, Sergey","20/Nov/13 20:58;sergey_beryozkin;Pressed something and saw it reassigned to me, was not my intention :-)","21/Nov/13 10:29;ay;Hi Sergey,
Okay, maybe, this is something of REST vs SOAP?

But in any case, the status code 204 is returned only if it is set in the message at the moment, no?
Do you think we need to add this 204 logic (using some rules to decide between 202 and 204) in the default logic so that you don't have to explicitly do the setting?

regards, aki","21/Nov/13 11:02;sergey_beryozkin;Hi Aki, 
you are right, 204 would be returned on a non-SOAP path when the response body is empty. I guess it might also happen on a SOAP Get Binding path too but I'm not sure if any of CXF users depends on SOAP GET Binding at all. We can probably add some property later on to help the HTTP transport to decide that may be 204 is needed in a given case. 

Thanks, Sergey",,,,,,,,,,,,,,,,,,,,,,,,
AbstractSamlBase64InHandler goes into infinite loop when processing bad header value.,CXF-5390,12679491,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,geecxf,geecxf,15/Nov/13 21:17,26/Nov/13 17:40,14/Mar/19 02:30,18/Nov/13 14:18,2.7.3,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,,,,,0,,,,,,,,"Let's say I protect my JAX-RS service using SamlHeaderInHandler. The service expects me to include a valid deflate encoded (compressed) then base 64 encoded token in the Authorization of my RESTful call like this:

SAML <TOKEN GOES HERE>

However if instead of inserting a token, I insert the following string ""invalid_grant"" in the Authrorization header like so:

SAML invalid_grant

The following will happen:
1. SamlHeaderInHandler splits the header into it's two parts and sends what it thinks is the assertion (the ""invalid_grant"" string) AbstractSamlBase64InHandler.handleToken
2. AbstractSamlBase64InHandler.handleToken first base 64 decodes the string. This completes with no error.
3. AbstractSamlBase64InHandler.handleToken then tries to inflate the assertion.

It is during this last step that CXF goes into an infinite loop. Here is the code involved:

        while (!inflater.finished()) {
            inputLen = inflater.inflate(input);
            if (!inflater.finished()) {
                inflatedToken = new byte[input.length + inflatedLen];
                System.arraycopy(input, 0, inflatedToken, inflatedLen, inputLen);
                inflatedLen += inputLen;
            }
        }

When the input is the following byte array:

[94, -27, -122, 110, 16, 59, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

(which is the result from base 64 decoding the string ""invalid_grant"")

The loop never breaks because the test inflater.finished() is never true even if inputLen is 0. Thus the service hangs indefinitely.

I am classifying this as Critical because, essentially, by crafting a certain type of request, I can execute a denial of service attack against the service.

","Linux or Mac, Karaf 2.3.1 container, CXF 2.7.3",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-18 14:18:25.267,,,no_permission,,Unknown,,,,,,,,,,,358851,,,Mon Nov 18 14:18:25 UTC 2013,,,,,,0|i1puzz:,359141,,,,,,,,18/Nov/13 14:18;sergey_beryozkin;Thanks for reporting it and actually identifying the source of the problem.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multipart params of type InputStream don't show in generated WADL,CXF-5386,12679357,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,labbenes,labbenes,15/Nov/13 09:25,26/Nov/13 17:40,14/Mar/19 02:30,19/Nov/13 16:32,2.6.8,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,Core,,,,0,,,,,,,,"Need WADLGenerator to support InputStream so that any InputStream parameter will have an xsd:anyType attribute.
Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,358719,,,2013-11-15 09:25:01.0,,,,,,0|i1pu6n:,359009,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF 2.7.7 on Websphere 8.5.0 is not able to generate WADL.,CXF-5385,12679274,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,vbalana,vbalana,14/Nov/13 19:28,26/Nov/13 17:40,14/Mar/19 02:30,15/Nov/13 12:39,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS,,,,0,patch,,,,,,,"Following exception occurs while trying to get the WADL out of HelloWorld app deployed on Wehbsphere 8.5.0.

When I tried with CXF 2.7.3, it worked Fine! 2.7.4, 2.7.5, 2.7.6 and 2.7.7 all spits the following exception.

com.ibm.ws.webcontainer.servlet.ServletWrapper service Uncaught service() exception thrown by servlet appServlet: java.lang.NoSuchMethodError: javax/ws/rs/core/Response.getHeaders()Ljavax/ws/rs/core/MultivaluedMap;
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.setMessageContentType(JAXRSUtils.java:1587)
	at org.apache.cxf.jaxrs.JAXRSInvoker.checkExchangeForResponse(JAXRSInvoker.java:281)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:82)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:57)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:93)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:248)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:222)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:153)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:167)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:286)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:211)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:575)","Websphere 8.5.0, IDE: RAD 8.5.5",345600,345600,,0%,345600,345600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-15 08:45:17.228,,,no_permission,,Moderate,,,,,,,,,,,358636,,,Fri Nov 15 20:25:59 UTC 2013,,,,,,0|i1pto7:,358926,,,,,,,,"15/Nov/13 08:45;gzres;I wonder why 2.7.3 works and 2.7.4 not - these both version use {{javax.ws.rs-api-2.0-m10.jar}} as JAX-RS API.

However I've tested your scenario and encountered two problems:

JAX-RS conflict:
{noformat}
java.lang.NoSuchMethodError: javax/ws/rs/NotFoundException.validate(Ljavax/ws/rs/core/Response;Ljavax/ws/rs/core/Response$Status;)Ljavax/ws/rs/core/Response;
{noformat}

Commons XmlSchema conflict:
{noformat}
java.lang.NoSuchMethodError: org/apache/ws/commons/schema/XmlSchemaCollection.read(Lorg/w3c/dom/Document;Ljava/lang/String;)Lorg/apache/ws/commons/schema/XmlSchema;
{noformat}

That's because the above classes are provided by WebSphere 8.5 (regardless of setting the _parent-last_ class loader):
* {{WAS_HOME/plugins/javax.j2ee.jaxrs.jar}}
* {{WAS_HOME/plugins/org.apache.axis2.jar}}

respectively.

What has worked for me is this:

# console → Environment → Shared Libraries - I've created the shared library called ""JAX-RS"" with two JARS:
#* {{M2_REPO}}/javax/ws/rs/javax.ws.rs-api/2.0-m10/javax.ws.rs-api-2.0-m10.jar
#* {{M2_REPO}}/org/apache/ws/xmlschema/xmlschema-core/2.0.3/xmlschema-core-2.0.3.jar
# Check the ""Use an isolated class loader for this shared library"" option
# console → Applications → WebSphere enterprise applications → _your application_ → Shared library references - I've checked the WAR module, clicked _Reference Shared Libraries_ and added the ""JAX-RS"" library to the WAR module.
# restart WebSphere (you can't do much in WAS without restarting...)

And everything works!

regards
Grzegorz Grzybek",15/Nov/13 08:58;gzres;Actually this seems to be the best solution because JAX-RS 2.0 is part of JavaEE 7 and WebSphere 8 is JavaEE 6 compliant and uses 1.1 version of this API (in {{WAS_HOME/plugins/javax.j2ee.jaxrs.jar}}).,"15/Nov/13 12:32;sergey_beryozkin;Thanks for the analysis. This is still a valid bug though as CXF trunk/2.7.x is expected to support JAX-RS 1.1 only applications, will fix it shorlty","15/Nov/13 12:51;gzres;So I think {{cxf-rt-frontend-jaxrs}} should depend not on {{javax.ws.rs:javax.ws.rs-api}} at all only on {{javax.ws.rs:jsr311-api:1.1.1}}. Also the OSGi import should look different (currently it is {{javax.ws.rs*;version=""[1.0,3)""}}).","15/Nov/13 12:58;sergey_beryozkin;No, that won't work, CXF 2.7.x and trunk offer JAX-RS 2.0 implementation. It just needs to be careful in its internal work to ensure JAX-RS 1.1 applications are supported","15/Nov/13 15:52;gzres;OK, I understand. So there's no choice with WebSphere - we have to use shared libraries (Commons XmlSchema doesn't work without it anyway).",15/Nov/13 16:39;vbalana;Thank you so much Grzegorz and Sergey for looking so quickly into this bug! So you guys feel that this can't be fixed in coming versions and we will have to go through the Shared Library route always?,"15/Nov/13 18:34;gzres;Vishal - I think you have no choice. CXF uses ws-commons XmlSchema 2.0.3 and WebSphere provides it's own version so, even without considering JAX-RS Api you have to use WAS' shared library.

I remember making more drastic changes to WebSphere profiles - there is so much ""garbage"" there that using anything around JavaEE (JAX-WS, JAXP, JAX-RS, even JSPs) must be preceded with ""clean up"" (setting strange environment entries such as DisableIBMJAXWSEngine in MANIFEST.MF, putting some JARS to ""endorsed"" or ""ext"" dirs, even removing some JARs).

regards
Grzegorz Grzybek
","15/Nov/13 18:39;gzres;By the way, Sergey - why the dependecy on {{javax.ws.rs:javax.ws.rs-api:2.0-m10}} instead of final {{2.0}}?","15/Nov/13 20:25;vbalana;Alright Grzegorz, I tried Shared Library and it worked fine with CXF 2.7.7.
I would like to share though that I didn't place XmlSchema 2.0.3 in shared library reference. I only had to put javax.ws.rs-api:2.0-m10 to generate WADL.

Thanks again for all your time Grzegorz!",,,,,,,,,,,,,,,,,,,,,,,,,,
AccessTokenGrant should extend Serializable,CXF-5384,12679029,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,hoegertn,hoegertn,13/Nov/13 14:38,26/Nov/13 17:40,14/Mar/19 02:30,13/Nov/13 14:58,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"After adding most of the Serializables (https://issues.apache.org/jira/browse/CXF-5331) I found another one. 
ServerAuthorizationCodeGrant is serializable but that does not work because its superclass is not serializable and does not have a no-arg constructor. I looked at the type-hierarchy and propose to move the marker to AccessTokenGrant.",,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-13 14:58:01.313,,,no_permission,,Unknown,,,,,,,,,,,358394,,,Wed Nov 13 15:15:47 UTC 2013,,,,,,0|i1ps6f:,358684,,,,,,,,13/Nov/13 14:58;sergey_beryozkin;We are getting closer :-),13/Nov/13 15:15;hoegertn;I will review all the other classes to close this for good.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Trailing semi-colon in Content-Type line of header for MTOM attachments.,CXF-5383,12678869,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mrobertsnaic,mrobertsnaic,12/Nov/13 19:37,26/Nov/13 17:40,14/Mar/19 02:30,19/Nov/13 17:54,2.7.7,,,,,,,2.6.11,2.7.8,,,,,,,0,,,,,,,,"In some situations when building the XML for MTOM attachments there will be a trailing semi-colon at the end of the Content-Type line in the header. This is causing some other software suites issues when trying to parse the data. 

For instance: 
Content-Type: application/xop+xml; charset=UTF-8; type=""text/xml""; 

There shouldn't be a semi-colon after the ""type"" value as it's the last of the Content-Type key/value pairs. 

On line 129 of AttachmentSerializer you can see how the header gets built up and always adds a semi-colon.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,358235,,,2013-11-12 19:37:12.0,,,,,,0|i1pr73:,358525,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SAAJStreamWriter transforms DigestValue of custom signature,CXF-5381,12678241,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ashakirin,ashakirin,08/Nov/13 15:23,26/Nov/13 17:40,14/Mar/19 02:30,12/Nov/13 21:36,2.7.7,,,,,,,2.6.11,2.7.8,,,Core,,,,0,,,,,,,,"I observe strange effect by processing custom signature in service inbound chain. End exception is: ""Caused by: org.apache.xml.security.exceptions.Base64DecodingException: Error while decoding"".

After a bit analyze I found that DigestValue of Signature is concatinated with DigestValue of another signature and therefore cannot be proceed by xml security (santuario).

Additional debugging shows that signature is broken by StaxUtils.copy(node, new SAAJStreamWriter(part)); in SAAJInInterceptor. 
Value in node is still correct, but value in SOAPMessage is broken.

I attach a small project to illustrate the issue. Run mvn clean test for the project and compare DigestValue of Signature SIG-7D02FBC5A7AED81312138383830534822 in original request.xml and in output.",,,,,,,,,,,,,,,,,,,,11/Nov/13 13:45;ashakirin;request-transformed.xml;https://issues.apache.org/jira/secure/attachment/12613155/request-transformed.xml,11/Nov/13 13:45;ashakirin;request.xml;https://issues.apache.org/jira/secure/attachment/12613154/request.xml,08/Nov/13 15:24;ashakirin;saaj_test.zip;https://issues.apache.org/jira/secure/attachment/12612834/saaj_test.zip,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,357616,,,Mon Nov 11 13:42:58 UTC 2013,,,,,,0|i1pndz:,357906,,,,,,,,"09/Nov/13 18:08;ashakirin;Short note: the code works fine in CXF 2.5.2.
In 2.5.2 SAAJInInterceptor uses StaxUtils.copy(node, new W3CDOMStreamWriter(part)); to copy message content.
It seems that problem is caused by the SAAJStreamWriter.","11/Nov/13 13:42;ashakirin;One additional finding: SAAJInInterceptor not only concatenates digest value in signatures, but it also composes two security header to single one with actor id from the first one, that causes problem to interpret SAML assertion header.

Original and proceeded requests are attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS JAXB provider does not support XmlType and xsi:type combination well,CXF-5380,12678219,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,08/Nov/13 12:53,10/Apr/17 19:06,14/Mar/19 02:30,08/Nov/13 12:57,3.0.0-milestone1,,,,,,,,,,,JAX-RS,,,,0,,,,,,,,"When we have only an XmlType-annotated bean without XmlRootElement substituted by XmlRootElement-beans, JAXB can add xsi:type type info. This combination is not supported well.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,357594,,,2013-11-08 12:53:47.0,,,,,,0|i1pn93:,357884,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF failover feature doesn't work in osgi,CXF-5378,12677987,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,rminko,rminko,07/Nov/13 12:51,26/Nov/13 17:40,14/Mar/19 02:30,12/Nov/13 21:51,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,Core,,,,0,,,,,,,,"Failover feature doesn't work in osgi, if jax-rs service was started on Karaf jetty server and was stopped as osgi bundle. The bug is reproducible for CXF failover feature using pure Karaf 2.3.3 osgi container. After NotFoundException consumer doesn't use alternative address.","Karaf 2.3.3 two instances, jax-rs services started on Karaf jetty servers",,,,,,,,,,,,,,,,,,,07/Nov/13 12:53;rminko;README.txt;https://issues.apache.org/jira/secure/attachment/12612594/README.txt,07/Nov/13 12:53;rminko;example_cxf_no_locator.zip;https://issues.apache.org/jira/secure/attachment/12612593/example_cxf_no_locator.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-11-07 13:23:02.769,,,no_permission,,Unknown,,,,,,,,,,,357362,,,Thu Nov 07 13:23:02 UTC 2013,,,,,,0|i1pltj:,357652,,,,,,,,07/Nov/13 12:53;rminko;Example sources and readme file to reproduce issue were attached,"07/Nov/13 13:23;sergey_beryozkin;Hi Roman, interesting case.

CXF Failover feature works if the whole container or the connection goes down, i.e, if the client even fails to connect.
LoadBalancing feature will always iterate over alternative addresses, but of course the user may only want to use the alternatives *only if* the preferred target fails.

I think we may have to consider updating a failover feature to react to non-found errors too, this is transport-specific so some thinking needs to be done

Thanks, Sergey   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LoggingInInterceptor is not logging the URL for SOAP or REST non-HTTP requests ,CXF-5377,12677665,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,mandyp,mandyp,05/Nov/13 22:37,26/Nov/13 17:40,14/Mar/19 02:30,19/Nov/13 21:12,2.7.7,,,,,,,2.7.8,,,,Integration,,,,0,,,,,,,,"When you use local transport, the LoggingInInterceptor does not log the URL. Please see the output below. 

21:13:05.837 [test-rs] [main] INFO  o.a.c.t.local.LocalTransportFactory - Creating destination for address local://abcd
21:13:05.838 [test-rs] [main] INFO  org.apache.cxf.endpoint.ServerImpl - Setting the server's publish address to be local://abcd
21:13:05.849 [test-rs] [main] INFO  o.a.c.i.LoggingInInterceptor - Inbound Message
----------------------------
ID: 2
Http-Method: GET
Content-Type: application/json
Headers: {Content-Type=[application/json], Accept=[application/json]}
--------------------------------------

The URL is logged for HTTP transport.",All,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-08 17:28:59.635,,,no_permission,,Unknown,,,,,,,,,,,357040,,,Tue Nov 19 22:19:51 UTC 2013,,,,,,0|i1pjtz:,357330,,,,,,,,"08/Nov/13 17:28;sergey_beryozkin;Hi Mandy

I've updated the in interceptor to log a REQUEST_URI property if no REQUEST_URL property is available, this works for JAX-RS, can you please give me a favor and try it for your JAX-RS and JAX-WS  tests. JAX-WS clients may not be setting REQUEST_URI, but may be it is fine for WS because for WS a call via a local transport means it is probably a ""/"" path and thus it can be assumed to be ""/"" by default ?

Cheers, Sergey","11/Nov/13 22:02;mandyp;Hi Sergey sorry for the delay.

I upgraded to 2.7.8-SNAPSHOT (note that I had to exclude swagger as I was getting dependency convergence issues which I resolved by excluding swagger).

Unfortunately I still see the same behaviour:

2013-11-11 21:56:37,336 [test] [main] INFO  o.a.c.i.LoggingInInterceptor - Inbound Message
----------------------------
ID: 9
Http-Method: GET
Content-Type: application/xml
Headers: {Content-Type=[application/xml], Accept=[application/xml]}

I had the logging enabled using:

<jaxrs:features>
     <cxf:logging/>
</jaxrs:features>

Thanks for taking the time to look into this, much appreciated.","11/Nov/13 22:15;mandyp;Just to say looking at the source code for the 2.7.8-SNAPSHOT version of LoggingInInterceptor i don't see your fix yet I can see it on the trunk. Not sure if I am reading this correctly but this link http://repository.apache.org/snapshots/org/apache/cxf/apache-cxf/2.7.8-SNAPSHOT/ shows the last build was on Friday morning, could it be the change hasn't made its way into the repository?","11/Nov/13 22:23;sergey_beryozkin;Hi Mandy

Looks like so, the fix is on the branch:

http://svn.apache.org/repos/asf/cxf/branches/2.7.x-fixes/api/src/main/java/org/apache/cxf/interceptor/LoggingInInterceptor.java

FYI, Freeman fixed 2.7.x to have an optional dependency on Swagger and this dependency have been completely moved out of the rt/frontend/jaxrs to another module (rt/rs/description) on the trunk. 

You may want to manually rebuild 2.7.x ('mvn intstall -Pfastinstall' will do it for you)
Thanks, Sergey 
","17/Nov/13 22:38;mandyp;Hi Sergey,

Sorry it has taken me a while to respond, I had a few problems with building the branch and with my Maven dependencies (a bit of a learning curve for me!). I have built against the new version and have rerun my tests. I have to say I see some quite strange behaviour when running my integration tests which use local transport.. As you can see from the logs below, the first test logs the request using the LoggingOutInterceptor (ID:1) and uses the ENDPOINT ADDRESS rather than logging the URL of the Rest request. Before the response is logged, the second test is run and here the LoggingInInterceptor logs the URL of the request (ID:2). I would have expected the LoggingInInterceptor to log both and the LoggingOutInterceptor to log responses?

I am not overly worried about this as all works fine when running real requests through my deployed service, perhaps the behaviour is just due to how I am running my tests? 


2013-11-17 22:17:17,355 [main] INFO  org.apache.cxf.interceptor.LoggingOutInterceptor [null] [] [Outbound Message
---------------------------
ID: 1
Address: local://flsc
Http-Method: GET
Content-Type: application/xml
Headers: {Content-Type=[application/xml], Accept=[application/xml], client_applicationName=[testing]}
--------------------------------------]
2013-11-17 22:17:17,388 [main] INFO  org.apache.cxf.interceptor.LoggingInInterceptor [null] [] [Inbound Message
----------------------------
ID: 2
Address: /v1/locations/xxx
Http-Method: GET
Content-Type: application/xml
Headers: {Content-Type=[application/xml], Accept=[application/xml], client_applicationName=[testing]}
--------------------------------------]
","19/Nov/13 13:44;sergey_beryozkin;Hi Mandy, no problems, thanks for the feedback.
I've just committed more updates the trunk/2.7.x, you should see the consistent reporting of the request URI on the client and server sides for Local (and other non HTTP) transports, example, you should see
{noformat}
Address: local://flsc/v1/locations/xxx
{noformat}

on the client & server sides which is consistent with HTTP transports where an absolute URI is reported.

Note LoggingOutInterceptor reports the request URI on the client side and LoggingInInterceptor reports it on the server side;

Thanks, Sergey

","19/Nov/13 21:12;sergey_beryozkin;Hi Mandy, I'd like to resolve this one as Dan is doing a release, please do not hesitate to re-open if you find something unexpected with the Local transport logging after your tests, many thanks ","19/Nov/13 22:19;mandyp;Just tested it and all works perfectly! 

Many thanks for such a swift resolution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
@UseAsyncMethod doesn't work with jdk dynamic proxy,CXF-5376,12677519,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,LiorA,LiorA,05/Nov/13 07:46,10/Apr/17 19:04,14/Mar/19 02:30,05/Apr/17 15:40,2.6.10,,,,,,,3.1.4,,,,Core,,,,0,,,,,,,,"when using a dynamic proxy as the implementor bean in  cxf ws, the <Operation>Async method is never invoked. 
i believe that the problem is originated from the way Proxy.newProxyInstance() works. 
it seems that the Proxy object methods do not carry any of the original annotations from the interface. 
this in turn causes AbstractJAXWSMethodInvoker:adjustMethodAndParams not to find the m.getAnnotation(UseAsyncMethod.class) and the outcome should is the synchronous invocation of the web service method.
a possible solution might be that the target class should first be inspected here for isProxyClass .

","Windows, jdk 7.20",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-04-05 15:40:36.486,,,no_permission,,Unknown,,,,,,,,,,,356894,,,Wed Apr 05 15:40:36 UTC 2017,,,,,,0|i1pixz:,357184,,,,,,,,05/Apr/17 15:40;dkulp;I believe this was fixed as part of CXF-6637,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rejected Execution from ThreadPool,CXF-5374,12677135,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,jonnals,jonnals,01/Nov/13 19:26,26/Nov/13 17:40,14/Mar/19 02:30,04/Nov/13 16:57,2.7.7,,,,,,,2.7.8,,,,JAX-RS,,,,0,,,,,,,,When RejectedExecutionException is thrown then it the exception mapper for converting into 503 error. This is because handleFault is much below in the stack calls.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-03 17:35:57.282,,,no_permission,,Unknown,,,,,,,,,,,356511,,,Mon Nov 04 16:57:18 UTC 2013,,,,,,0|i1pgkn:,356799,,,,,,,,"03/Nov/13 17:35;sergey_beryozkin;Can you clarify please, does this exception originate from CXF ? If yes then can you please post a stack trace ?","04/Nov/13 14:45;jonnals;I configured a Provider and this is my class:

@Component(""serverBusy"")
public class ServerBusy implements ExceptionMapper<TaskRejectedException> {

    @Override
    public Response toResponse(final TaskRejectedException exception){
       return Response.status(Response.Status.SERVICE_UNAVAILABLE).build();
    }

}


Spring Config:

    <task:executor id=""workerPool"" pool-size=""10"" queue-capacity=""50""/>

     <jaxrs:server id=""restContainer""  address=""/"" >
        <jaxrs:executor>
            <ref bean=""workerPool""/>
        </jaxrs:executor>
        <jaxrs:providers>
            <ref bean=""serverBusy""/>
        </jaxrs:providers>
        <jaxrs:serviceBeans>
            <ref bean=""tokenService"" />
        </jaxrs:serviceBeans>
    </jaxrs:server>


web.xml


   <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/*Context.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>


Sinnpet from  Spring ThreadPoolTaskExecutor:

	public void execute(Runnable task) {
		Executor executor = getThreadPoolExecutor();
		try {
			executor.execute(task);
		}
		catch (RejectedExecutionException ex) {
			throw new TaskRejectedException(""Executor ["" + executor + ""] did not accept task: "" + task, ex);
		}
	}

CXF 2.7.7 code :  org.apache.cxf.interceptor.ServiceInvokerInterceptor

Line 106:  executor.execute(o); receives TaskRejectedException from Spring. On the response I'm expecting the response to be 503. but I see stack trace.



",04/Nov/13 16:57;sergey_beryozkin;I expect this issue has been resolved for 2.7.8. Please try CXF 2.7.8-SNAPSHOT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue resolving AsynchResponse,CXF-5373,12677132,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jonnals,jonnals,01/Nov/13 19:22,26/Nov/13 17:40,14/Mar/19 02:30,18/Nov/13 22:33,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"Spring config

 <task:executor id=""servicePool"" pool-size=""1"" queue-capacity=""${aw.concurrentUsers.download:5000}""/>

JAX-RS server config

   <jaxrs:server id=""restContainer""  address=""/"" >
         <jaxrs:executor>
             <ref bean=""servicePool""/>
         </jaxrs:executor>
        <jaxrs:serviceBeans>
            <ref bean=""tokenService"" />
        </jaxrs:serviceBeans>
    </jaxrs:server>

Java End-Point

    @POST
    @Path(""/createToken/{fileName}"")
    @Produces(MediaType.APPLICATION_FORM_URLENCODED)
    //http://localhost:8000/contentGateway/integrationServices/tokenService/createToken/{fileName}
    public void createToken(@PathParam(""fileName"")final String fileName, final AsyncResponse asyncResponse){
       validateInput(fileName);
       final String randomUUID = UUID.randomUUID().toString();
       this.tokenRepository.storeToken(randomUUID.toString(),fileName);
        asyncResponse.resume(randomUUID); 
       
    }

JAXRSUtils.java : 766- 767

         if (parameterClass == AsyncResponse.class) {
                return new AsyncResponseImpl(message);
            }

AsyncResponseImpl 53 - 59

    public AsyncResponseImpl(Message inMessage) {
        inMessage.put(AsyncResponse.class, this);
        inMessage.getExchange().put(ContinuationCallback.class, this);
        this.inMessage = inMessage;
        
        initContinuation();
    }

Line: 55

inMessage.getExchange().put(ContinuationCallback.class, this);

JAXRSInvoker.java : Line 86

 AsyncResponse asyncResp = exchange.get(AsyncResponse.class);

Will always yield null, Since when setting the key will be for ContinuationCallback and when retrieving it will be for AsyncResponse


",,,,,,,,,,,,,,,,,,,,05/Nov/13 15:02;jonnals;sampleCXF.zip;https://issues.apache.org/jira/secure/attachment/12612190/sampleCXF.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-11-03 17:33:33.962,,,no_permission,,Unknown,,,,,,,,,,,356508,,,Mon Nov 18 22:33:22 UTC 2013,,,,,,0|i1pgjz:,356796,,,,,,,,"03/Nov/13 17:33;sergey_beryozkin;Have you set ""<async-supported>true</async-supported>"" in web.xml ? 

","04/Nov/13 14:15;jonnals;Yes. Here is the config from web.xml

    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>","04/Nov/13 15:47;sergey_beryozkin;Hmm... Actually, what exactly the issue is ?

""AsyncResponse asyncResp = exchange.get(AsyncResponse.class);"" will be null on the initial call, the exchange is initialized after the initial call returns, and then on the suspended thread returning ""exchange.get(AsyncResponse.class)"" is expected to return a saved AsyncResponse. 
Are you saying it is 'null' after your createToken() method returns and when the execution is resumed later ?

If yes: please attach a test project, we have the tests running against Jetty, I also tried Tomcat

",05/Nov/13 15:02;jonnals;http://localhost:8080//sampleCXF/tokens/xyz?bytes=12345,"05/Nov/13 15:04;jonnals;Attached sample project. It has Spring config and a POST REST API to be invoked asynchronously.  Please let me know, if I'm missing something in my config.","05/Nov/13 15:09;sergey_beryozkin;Thanks. Interesting, so you are using a custom executor too. I wonder if it interferes somehow with the async code. I'll investigate, cheers

Sergey","13/Nov/13 14:24;sergey_beryozkin;The fix is on the trunk, committing to CXF 2.7.x a bit later,
http://svn.apache.org/r1541532

Dan, does it look OK to you ? 

Thanks, Sergey","18/Nov/13 14:23;sergey_beryozkin;All the fixes are on the trunk, we need to decide if it can go to 2.7.x as the changes may be a bit sensitive.
Sridhar, I guess you can avoid introducing another thread-pool into the flow when dealing with the AsyncResponses and manage the container level pools instead, this still has to work though, the question is whether we can merge it back to 2.7.x or not

Sergey",18/Nov/13 22:33;sergey_beryozkin;The initial workaround fix has been merged to 2.7.x,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServerEngineFactoryHolder should release JAXB classes when it is destroyed,CXF-5372,12677093,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,01/Nov/13 15:50,26/Nov/13 17:40,14/Mar/19 02:30,08/Nov/13 08:55,2.6.10,2.7.7,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,Transports,,,,0,,,,,,,,Netty-Http-Server and Jetty-Http-Server have ServerEngineFactoryHolder which holds a set of class. we should release the set when the ServerEngineFactoryHolder is destroyed.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,356469,,,Fri Nov 08 08:55:20 UTC 2013,,,,,,0|i1pgbb:,356757,,,,,,,,"08/Nov/13 08:55;njiang;Applied the patch into trunk, 2.7.x-fixes and 2.6.x-fixes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRSInInterceptor expects JAXRSInvoker to block if Response is already available,CXF-5371,12677072,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,01/Nov/13 14:05,26/Nov/13 17:40,14/Mar/19 02:30,01/Nov/13 14:19,,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,This affects CXF interceptors in between which assume that a service object is yet to be invoked. Typical issue: authorization interceptors will fail in case of WADL queries,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,356448,,,2013-11-01 14:05:52.0,,,,,,0|i1pg6n:,356736,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor STS logging to split mapping from log writing,CXF-5370,12676852,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,31/Oct/13 12:56,26/Nov/13 17:40,14/Mar/19 02:30,04/Nov/13 21:54,2.7.7,3.0.0-milestone1,,,,,,2.7.8,3.0.0-milestone1,,,STS,,,,0,,,,,,,,"Currently the sts LoggingListener handles both the mapping from STS events to the more generic map structure and writing the map to the logger.

As these functions are quite spearate it makes sense to split these two.

Additionally I would like to store Exceptions and Dates as objects in the map and leave the formatting to the log writer part. This allows to adapt the MapEvent nicely to e.g. EventAdmin.

I also plan to remove the log layout code as this is log system specific and so should rather be defined by the user.

As a last change I would like to log exceptions not as string but directly as exception to the log. So it can be processed freely by appenders.
",,,,,,,,,,,,,,,,,,CXF-5313,,31/Oct/13 14:01;chris@die-schneider.net;cxf-services-sts-core-CXF-5370.patch;https://issues.apache.org/jira/secure/attachment/12611388/cxf-services-sts-core-CXF-5370.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-11-02 11:15:39.99,,,no_permission,,Unknown,,,,,,,,,,,356228,,,Sat Nov 02 11:15:39 UTC 2013,,,,,,0|i1petr:,356516,,,,,,,,"02/Nov/13 11:15;owulff;The separation makes perfect sense.
I'd like to keep the layout code as defaults to log the header with the keys. A user can still configure a custom one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XKMS Crypto provider throws exceptions due not found certificate instead returning empty array,CXF-5369,12676660,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ashakirin,ashakirin,ashakirin,30/Oct/13 16:02,26/Nov/13 17:40,14/Mar/19 02:30,10/Nov/13 19:56,2.7.7,3.0.0-milestone1,,,,,,3.0.0-milestone1,,,,XKMS,,,,0,,,,,,,,"Currently XKMS crypto provider isn't completely compatible with WSS4J Crypto contract, because it throws XKMSNotFoundException in case if certificate is not found. Correctly will be to return empty list and log a warning, because not found certificate is not always error situation.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,356092,,,2013-10-30 16:02:04.0,,,,,,0|i1pdzz:,356380,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"filename with "";"" in file upload throws StringIndexOutOfBoundsException",CXF-5368,12676641,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,denisk,denisk,30/Oct/13 14:04,26/Nov/13 17:40,14/Mar/19 02:30,11/Nov/13 18:03,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,,,,,0,,,,,,,,"Stacktrace 
{code}
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
        at java.lang.String.substring(String.java:1937)
        at org.apache.cxf.attachment.AttachmentUtil.createAttachment(AttachmentUtil.java:311)
        at org.apache.cxf.attachment.AttachmentDeserializer.createAttachment(AttachmentDeserializer.java:289)
        at org.apache.cxf.attachment.AttachmentDeserializer.readNext(AttachmentDeserializer.java:192)
        at org.apache.cxf.attachment.LazyAttachmentCollection.loadAll(LazyAttachmentCollection.java:55)
        at org.apache.cxf.attachment.LazyAttachmentCollection.size(LazyAttachmentCollection.java:120)
        at org.apache.cxf.jaxrs.ext.MessageContextImpl.createAttachments(MessageContextImpl.java:281)
        at org.apache.cxf.jaxrs.ext.MessageContextImpl.get(MessageContextImpl.java:77)
        at org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext.get(ThreadLocalMessageContext.java:38)
        at org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils.getMultipartBody(AttachmentUtils.java:115)
        at org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils.getAttachments(AttachmentUtils.java:120)
        at org.apache.cxf.jaxrs.provider.MultipartProvider.readFrom(MultipartProvider.java:147)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBodyReader(JAXRSUtils.java:1288)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1239)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:790)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:749)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:236)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:101)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
        at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:223)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:203)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137)
        at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:159)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:286)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:206)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:641)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:262)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:304)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
        at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:681)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:405)
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:964)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:515)
        at org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor.run(AprEndpoint.java:1782)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
{code}

Will add logging later",,,,,,,,,,,,,,,,,,,,30/Oct/13 14:20;denisk;cxf-exception-clientside.log;https://issues.apache.org/jira/secure/attachment/12611071/cxf-exception-clientside.log,30/Oct/13 14:14;denisk;cxf-exception-serverside.log;https://issues.apache.org/jira/secure/attachment/12611070/cxf-exception-serverside.log,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-10-30 14:19:04.14,,,no_permission,,Unknown,,,,,,,,,,,356073,,,Wed Oct 30 14:20:21 UTC 2013,,,,,,0|i1pdvr:,356361,,,,,,,,30/Oct/13 14:14;denisk;Server side logging for this exception.,"30/Oct/13 14:19;sergey_beryozkin;Hi, can a filename contain ';' characters ?",30/Oct/13 14:20;denisk;clientside logfile,"30/Oct/13 14:20;denisk;yes, absolutely",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2.7.7 schema validation incorrectly detects schema include recursion,CXF-5367,12676496,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jpangburn,jpangburn,29/Oct/13 21:40,26/Nov/13 17:40,14/Mar/19 02:30,30/Oct/13 17:54,2.7.7,,,,,,,2.7.8,,,,JAX-WS Runtime,,,,0,schema,validation,,,,,,"With 2.7.7 it does validate schemas when configured correctly but fails with schemas that have circular references to each other (not illegal according to W3C spec or their schema validator tool online).  The schemas it's having trouble with are from the HL7 standards body, which are used by hundreds of companies.  I tested the schema that it complains about using the W3C online validator like this:
{quote}
http://www.w3.org/2001/03/webdata/xsv?docAddrs=http%3A%2F%2Fdl.dropboxusercontent.com%2Fu%2F13558558%2Fschematest%2Fschema%2FHL7V3%2FNE2008%2Fcoreschemas%2Fvoc.xsd&warnings=on&independent=on&style=xsl#
{quote}

It comes back and says (among many things):
{quote}
The schema(s) used for schema-validation had no errors
{quote}

I will attach two samples, one for 2.7.6 and one for 2.7.7.  With 2.7.6, it validates correctly.  With 2.7.7 it complains about a recursive reference.  The problem it seems is that voc.xsd includes datatypes.xsd includes datatypes-base.xsd includes voc.xsd.  The schema validator gets around to the recursive point and says:
{quote}
Attempt to load a schema document from http://dl.dropboxusercontent.com/u/13558558/schematest/schema/HL7V3/NE2008/coreschemas/voc.xsd (source: include) for no namespace, skipped, already loaded
{quote}

So the W3C validator sees the loop and knows its already been included so it ignores the recursion beyond the first loop.",,,,,,,,,,,,,,,,,,,,29/Oct/13 21:43;jpangburn;jaxws_dispatch_provider_schematest_XDSb_276.zip;https://issues.apache.org/jira/secure/attachment/12610929/jaxws_dispatch_provider_schematest_XDSb_276.zip,29/Oct/13 21:43;jpangburn;jaxws_dispatch_provider_schematest_XDSb_277.zip;https://issues.apache.org/jira/secure/attachment/12610930/jaxws_dispatch_provider_schematest_XDSb_277.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-10-30 17:54:15.942,,,no_permission,,Unknown,,,,,,,,,,,355928,,,Wed Oct 30 19:43:17 UTC 2013,,,,,,0|i1pczj:,356216,,,,,,,,"29/Oct/13 21:43;jpangburn;To test these, expand the samples into the corresponding 2.7.6 or 2.7.7 installation's samples directory.  Run by start the server in one terminal:
{quote}
mvn -P server
{quote}

And after it starts, then the client in another:
{quote}
mvn -P client
{quote}

In 2.7.6, you'll see the response from the server printed out on the client indicating success.  In 2.7.7, you'll see a long output from the schema validation system about why it failed.  If you look for the first ""SEVERE"" log output, you'll see it talking about recursion.","30/Oct/13 17:54;dkulp;
MSV does NOT like two schemas with the same targetNamespace with different systemIds.   This happens when you have a schema that then ""includes"" a schema of the same namespace.  That's what your WSDL is doing. 

I've been able to work around some of those issues.  Hopefully this will work going forward. ",30/Oct/13 19:43;jpangburn;I have tested the 2.7.8-SNAPSHOT against this test case and it works great!  Thanks Dan!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Authorization header is not set correctly in CXF HTTP digest authentication ,CXF-5366,12676335,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,chakine,chakine,29/Oct/13 14:12,26/Nov/13 17:40,14/Mar/19 02:30,19/Nov/13 17:03,2.7.4,2.7.5,2.7.6,2.7.7,,,,2.6.11,2.7.8,,,Core,,,,0,,,,,,,,"When performing the digest HTTP authentication the generated Authorization header is missing the ""algorithm"" element. Also if the algorithm is ""MD5-sess"" it should appear in the Authorization header as is and not as ""MD5"". To get around the issue it is possible to use a customized DigestAuthSupplier for the affected CXF versions. The result of WS invocation without ""algorithm"" in the Authorization header is 400-Bad request.
The issue relates to versions of CXF 2.7.4 and later, earlier versions work fine.

Sample request:

POST /XXXXXXX HTTP/1.1
Content-Type: text/xml; charset=UTF-8
Accept: */*
SOAPAction: ""http://schemas.microsoft.com/dynamics/XXXXXXX""
User-Agent: Apache CXF 2.7.4
Cache-Control: no-cache
Pragma: no-cache
Host: XXXXX
Connection: keep-alive
Content-Length: 542

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body>XXXXX</soap:Body></soap:Envelope>
POST /XXXXX HTTP/1.1
Content-Type: text/xml; charset=UTF-8
Accept: */*
Authorization: Digest response=""541f8d073f2be81deae8e2f1065725b2"", cnonce=""46f26ffb6cf32b66873bf6e5e955bae8"", username=""XXXXX"", nc=""00000001"", nonce=""+Upgraded+v126a0f6047dd70851ab2155a14d09d56aacd7cd4a87d1ce01d77d4709393a1585490f57bdd6026b2c339c1f27bc03f4e47400ad20e8208244"", realm=""Digest"", qop=""auth"", uri=""/XXXXXXX""
SOAPAction: ""http://schemas.microsoft.com/dynamics/XXXXXXX""
User-Agent: Apache CXF 2.7.4
Cache-Control: no-cache
Pragma: no-cache
Host: localhost:8887
Connection: keep-alive
Content-Length: 542

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body>XXXXXX</soap:Body></soap:Envelope>

Sample response:

HTTP/1.1 401 Unauthorized
Content-Length: 0
Server: Microsoft-HTTPAPI/2.0
WWW-Authenticate: Digest qop=""auth"",algorithm=MD5-sess,nonce=""+Upgraded+v126a0f6047dd70851ab2155a14d09d56af26b5ad2f0d3ce0169267269a2cfa168709705665fd13f9adf81235595c672ec1623b17e470ccaef"",charset=utf-8,realm=""Digest""
Date: Mon, 28 Oct 2013 15:17:31 GMT

HTTP/1.1 400 Bad Request
Content-Length: 0
Server: Microsoft-HTTPAPI/2.0
Date: Mon, 28 Oct 2013 15:17:31 GMT

","Windows 7 64 bit, Java 1.6.0_29, CXF 2.7.4, calling MS Dynamics WS.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-10-29 20:14:17.556,,,no_permission,,,,,,,,,,,,,355832,,,Wed Oct 30 09:37:51 UTC 2013,,,,,,0|i1pce7:,356120,,,,,,,,"29/Oct/13 20:14;dkulp;Do you have a patch for this?   Or at least a copy of your customized DigestAuthSupplier?  That would be  big help.

","30/Oct/13 09:37;chakine;Sure, here is the code of my customized DigestAuthSupplier, the changes vis-a-vis the original DigestAuthSupplier are hardly noticeable, please watch for //ES: comments. This auth supplier is set on the HTTPConduit as follows: conduit.setAuthSupplier(new CustomAuthSupplier());

public class CustomAuthSupplier implements HttpAuthSupplier {
	 private static final char[] HEXADECIMAL = {
	        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
	    };

	    final MessageDigest md5Helper;
	    Map<URI, DigestInfo> authInfo = new ConcurrentHashMap<URI, DigestInfo>(); 

	    public CustomAuthSupplier() {
	        MessageDigest md = null;
	        try {
	            md = MessageDigest.getInstance(""MD5"");
	        } catch (NoSuchAlgorithmException e) {
	            //ignore - set to null
	        }
	        md5Helper = md;
	    }

	    /**
	     * {@inheritDoc}
	     * With digest, the nonce could expire and thus a rechallenge will be issued.
	     * Thus, we need requests cached to be able to handle that
	     */
	    public boolean requiresRequestCaching() {
	        return true;
	    }

	    public String getAuthorization(AuthorizationPolicy authPolicy,
	                                   URI currentURI,
	                                   Message message,
	                                   String fullHeader) {
	        if (authPolicy == null || (authPolicy.getUserName() == null && authPolicy.getPassword() == null)) {
	            return null;
	        }
	        
	        if (fullHeader == null) {
	            DigestInfo di = authInfo.get(currentURI);
	            if (di != null) {
	                /* Preemptive authentication is only possible if we have a cached
	                 * challenge
	                 */
	                return di.generateAuth(currentURI.getPath(), 
	                                       authPolicy.getUserName(),
	                                       authPolicy.getPassword());            
	            } else {
	                return null;
	            }
	        }
	        HttpAuthHeader authHeader = new HttpAuthHeader(fullHeader);
	        if (authHeader.authTypeIsDigest()) {
	            Map<String, String> map = authHeader.getParams();
	            if (""auth"".equals(map.get(""qop""))
	                \|| !map.containsKey(""qop"")) {
	                DigestInfo di = new DigestInfo();
	                di.qop = map.get(""qop"");
	                di.realm = map.get(""realm"");
	                di.nonce = map.get(""nonce"");
	                di.opaque = map.get(""opaque"");
	                if (map.containsKey(""algorithm"")) {
	                    di.algorithm = map.get(""algorithm"");
	                }
	                if (map.containsKey(""charset"")) {
	                    di.charset = map.get(""charset"");
	                }
	                di.method = (String)message.get(Message.HTTP_REQUEST_METHOD);
	                if (di.method == null) {
	                    di.method = ""POST"";
	                }
	                authInfo.put(currentURI, di);
	                
	                return di.generateAuth(currentURI.getPath(), 
	                                       authPolicy.getUserName(),
	                                       authPolicy.getPassword());
	            }
	            
	        }
	        return null;
	    }

	    public String createCnonce() throws UnsupportedEncodingException {
	        String cnonce = Long.toString(System.currentTimeMillis());
	        byte[] bytes = cnonce.getBytes(""US-ASCII"");
	        synchronized (md5Helper) {
	            bytes = md5Helper.digest(bytes);
	        }
	        return encode(bytes);
	    }

	    class DigestInfo {
	        String qop;
	        String realm;
	        String nonce;
	        String opaque;
	        int nc;
	        String algorithm = ""MD5"";
	        String charset = ""ISO-8859-1"";
	        String method = ""POST"";
	        
	        synchronized String generateAuth(String uri, String username, String password) {
	            try {
	                nc++;
	                String ncstring = String.format(""%08d"", nc);
	                String cnonce = createCnonce();
	                
	                String digAlg = algorithm;
	                if (digAlg.equalsIgnoreCase(""MD5-sess"")) {
	                    digAlg = ""MD5"";
	                }
	                MessageDigest digester = MessageDigest.getInstance(digAlg);
	                String a1 = username + "":"" + realm + "":"" + password;
	                if (""MD5-sess"".equalsIgnoreCase(algorithm)) {
			// ES:removed
			//  algorithm = ""MD5"";
			
	                    String tmp2 = encode(digester.digest(a1.getBytes(charset)));
	                    a1 = tmp2 + ':' + nonce + ':' + cnonce;
	                }
	                String hasha1 = encode(digester.digest(a1.getBytes(charset)));
	                String a2 = method + "":"" + uri;
	                String hasha2 = encode(digester.digest(a2.getBytes(""US-ASCII"")));
	                String serverDigestValue = null;
	                if (qop == null) {
	                    serverDigestValue = hasha1 + "":"" + nonce + "":"" + hasha2;
	                } else {
	                    serverDigestValue = hasha1 + "":"" + nonce + "":"" + ncstring + "":"" + cnonce + "":"" 
	                        + qop + "":"" + hasha2;
	                }
	                String response = encode(digester.digest(serverDigestValue.getBytes(""US-ASCII"")));
	                Map<String, String> outParams = new HashMap<String, String>();
	                outParams.put(""username"", username);
	                outParams.put(""realm"", realm);
	                outParams.put(""nonce"", nonce);
	                outParams.put(""nc"", ncstring);
	                outParams.put(""uri"", uri);
	                outParams.put(""response"", response);
			//ES: added
		        outParams.put(""algorithm"", algorithm);
	                outParams.put(""cnonce"", cnonce);
	                if (qop != null) {
	                    outParams.put(""qop"", ""auth"");
	                }
	               
	                outParams.put(""opaque"", opaque);
	               
	              
	               
	               
	              
	               
	                return new HttpAuthHeader(HttpAuthHeader.AUTH_TYPE_DIGEST, outParams).getFullHeader();
	            } catch (Exception ex) {
	                throw new RuntimeException(ex);
	            }
	        }

	        
	    }

	    /**
	     * Encodes the 128 bit (16 bytes) MD5 digest into a 32 characters long 
	     * <CODE>String</CODE> according to RFC 2617.
	     * 
	     * @param binaryData array containing the digest
	     * @return encoded MD5, or <CODE>null</CODE> if encoding failed
	     */
	    private static String encode(byte[] binaryData) {
	        int n = binaryData.length; 
	        char[] buffer = new char[n * 2];
	        for (int i = 0; i < n; i++) {
	            int low = binaryData[i] & 0x0f;
	            int high = (binaryData[i] & 0xf0) >> 4;
	            buffer[i * 2] = HEXADECIMAL[high];
	            buffer[(i * 2) + 1] = HEXADECIMAL[low];
	        }

	        return new String(buffer);
	    }
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2.7.7 schema validation seems broken,CXF-5365,12676239,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jpangburn,jpangburn,28/Oct/13 23:11,26/Nov/13 17:39,14/Mar/19 02:30,29/Oct/13 20:08,2.7.7,,,,,,,2.7.8,,,,JAX-WS Runtime,,,,0,schema,validation,,,,,,"Turning on schema validation in 2.7.7 seems to have a number of problems.  In the case of my own embedded CXF, it does validate but fails with schemas that have circular references to each other (not illegal according to W3C spec or their schema validator tool online).

So I wrote a test sample but found that in the test sample that it doesn't validate the schema at all- just lets the bad elements go through with no error.  The 2.7.6 version of the sample properly throws an error- and all I did to create the 2.7.6 version was to copy the sample folder under 2.7.6 and search/replace 2.7.7 in the pom.xml with 2.7.6.

For this issue, I think we should try to solve why 2.7.6 properly throws an exception on a request with a bad schema and why 2.7.7 does not.  I'll check separately if the resolution to this fixes my initial problem and if it doesn't then I'll create a separate issue for that along with a test case.

I will attach the test sample after creating the issue.",,,,,,,,,,,,,,,,,,,,28/Oct/13 23:37;jpangburn;jaxws_dispatch_provider_schematest_276.zip;https://issues.apache.org/jira/secure/attachment/12610722/jaxws_dispatch_provider_schematest_276.zip,28/Oct/13 23:37;jpangburn;jaxws_dispatch_provider_schematest_277.zip;https://issues.apache.org/jira/secure/attachment/12610721/jaxws_dispatch_provider_schematest_277.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-10-29 20:05:41.367,,,no_permission,,Unknown,,,,,,,,,,,355736,,,Tue Oct 29 21:17:10 UTC 2013,,,,,,0|i1pbsv:,356024,,,,,,,,"28/Oct/13 23:37;jpangburn;To run these, expand in the 2.7.6 or 2.7.7 samples folder accordingly.  Then in one terminal run:
mvn -P server
This starts up two different services (same types, different URL only).  One is configured in Java to have schema validation on, the other is configured in spring to have schema validation on.

Correspondingly, there are two client profiles.  They are run like this:
mvn -P client
mvn -P clientspring
The ""clientspring"" profile targets the Spring configured service.  Both of these profiles send two messages- one which doesn't violate schema and one which does.

In 2.7.6, both profiles correctly send the first message and then the second message generates a schema error.  In 2.7.7, both messages in both profiles are accepted and the response is sent normally with no errors.  So schema validation is either off entirely, or it's not engaging because the schema files referred to by the WSDLs import each other.","29/Oct/13 20:05;dkulp;
With the requirement of using Woodstox 4.2.x for general parsing, we recently flipped some of the validation for provider/dispatch things from a VERY expensive validation routine to the routines built into Woodstox which are based on MSV.   Previously, with validation on, the message had to parsed to a DOM, traversed fully to find any ""xop"" elements, if xop found, COPY the entire dom (full traversal), do yet another traversal to remove the XOP's, then traverse the whole thing yet again to actually validate.   With Woodstox+MSV, we can do the whole thing in a single traversal which obviously saves time/memory.

However, you found a few bugs:
1) The above requires  cxf-wstx-msv-validation.jar, which the demo doesn't have.  In theory, that SHOULD drop back to the old algorithm.  A bug only drops back if the incoming DOM has a XOP element.   Sigh...  :-(

2) If you add the cxf-wstx-msv-validation jar, then the above should work.  However, MSV doesn't like the WSDL's/schemas as you are ""including"" schemas that have a targetNamespace.   If you change the types section in the wsdl to:
{code:xml}
  <wsdl:types>
    <xsd:schema elementFormDefault=""qualified"" targetNamespace=""http://www.w3schools.com/c"">
                        <xsd:import namespace=""http://www.w3schools.com/a"" schemaLocation=""a.xsd""/>
                        <xsd:import namespace=""http://www.w3schools.com/b"" schemaLocation=""b.xsd""/>
    </xsd:schema>
  </wsdl:types>
{code}
to import the full schemas, then it should work.
","29/Oct/13 20:08;dkulp;
Bugs in CXF are now fixed and cached a few things (when using wstx) to speed things up a bit.   However, bugs in MSV related to that schema are not fixed, but the fallback to the older method is there.","29/Oct/13 21:17;jpangburn;OK, verified with addition of that dependency that the problem goes away and 2.7.7 is validating correctly.  However, it seems this sample is not triggering the original problem that caused me to notice this.  I'll create a separate issue for that problem since you found and fixed related bugs in this one already.

thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Attachments iterator may incorrectly handle its remove operation,CXF-5361,12675773,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,25/Oct/13 08:44,26/Nov/13 17:40,14/Mar/19 02:30,28/Oct/13 10:28,2.6.9,2.7.7,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,Core,,,,0,,,,,,,,"When you try to iterate on the message attachments and use the iterator's remove method, you may get the IndexOutOfBounds exception or get an unexpected result.

This issue is caused by the underlining attachment collection implementation LazyAttachmentCollection's iterator.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,355271,,,2013-10-25 08:44:43.0,,,,,,0|i1p8xr:,355559,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
xkms.endpoint property change will not take effect automatically,CXF-5359,12675453,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,xldai,xldai,24/Oct/13 09:59,26/Nov/13 17:40,14/Mar/19 02:30,24/Oct/13 10:37,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,XKMS,,,,1,,,,,,,,"After made change for the ""xkms.endpoint"" property in the org.apache.cxf.xkms.client.cfg, it will not take effect automatically. (refresh xkms-client bundle manually will help)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-10-24 10:16:46.327,,,no_permission,,Unknown,,,,,,,,,,,355030,,,Thu Oct 24 10:16:46 UTC 2013,,,,,,0|i1p7g7:,355318,,,,,,,,24/Oct/13 10:16;chris@die-schneider.net;Thanks for reporting this Xilai. I found that we are missing the update-strategy and that we also have to switch to the newer blueprint cm 1.1.0 namespace. I will fix this on trunk and on 2.7.x.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure loading blueprint context in Karaf 3 SNAPSHOT,CXF-5358,12675270,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,23/Oct/13 15:24,26/Nov/13 17:40,14/Mar/19 02:30,29/Oct/13 08:33,2.7.7,,,,,,,2.7.8,,,,Core,,,,0,,,,,,,,"Steps to reproduce:

1) install and start karaf 3.0.0-SNAPSHOT
2) Checkout and compile https://github.com/cschneider/Karaf-Tutorial/tree/master/cxf/personservice
3) Install service
feature:repo-add cxf 2.7.7
feature:install cxf-jaxws cxf-jaxrs
install -s mvn:net.lr.tutorial.karaf.cxf.personservice/personservice-model/1.0-SNAPSHOT
install -s mvn:net.lr.tutorial.karaf.cxf.personservice/personservice-server/1.0-SNAPSHOT

The bundle should go to status Failure. bundle:diag shows the exception below:

karaf@root()> diag
personservice-server (129)
--------------------------
Status: Failure
Blueprint
10/23/13 5:20 PM
Exception: 
Error setting property: PropertyDescriptor <name: serviceBeans, getter: null, setter: [class org.apache.cxf.jaxrs.JAXRSServerFactoryBean.setServiceBeans(interface java.util.List)]
org.osgi.service.blueprint.container.ComponentDefinitionException: Error setting property: PropertyDescriptor <name: serviceBeans, getter: null, setter: [class org.apache.cxf.jaxrs.JAXRSServerFactoryBean.setServiceBeans(interface java.util.List)]
	at org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:941)
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:907)
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:888)
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:820)
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)
	at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)
	at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:245)
	at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:183)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:677)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:374)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:261)
	at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:264)
	at org.apache.aries.blueprint.container.BlueprintExtender.modifiedBundle(BlueprintExtender.java:227)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:500)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:433)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:725)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:463)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:422)
	at org.apache.felix.framework.util.SecureAction.invokeBundleEventHook(SecureAction.java:1103)
	at org.apache.felix.framework.util.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:695)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:483)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4403)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:2092)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:955)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:942)
	at org.apache.karaf.bundle.command.Start.executeOnBundle(Start.java:27)
	at org.apache.karaf.bundle.command.BundlesCommandWithConfirmation.doExecute(BundlesCommandWithConfirmation.java:53)
	at org.apache.karaf.bundle.command.BundlesCommand.doExecute(BundlesCommand.java:50)
	at org.apache.karaf.bundle.command.BundlesCommandWithConfirmation.doExecute(BundlesCommandWithConfirmation.java:41)
	at org.apache.karaf.shell.console.AbstractAction.execute(AbstractAction.java:33)
	at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:39)
	at org.apache.karaf.shell.commands.basic.AbstractCommand.execute(AbstractCommand.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)
	at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)
	at org.apache.karaf.shell.console.commands.$BlueprintCommand12280638.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)
	at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)
	at org.apache.karaf.shell.console.commands.$BlueprintCommand12280638.execute(Unknown Source)
	at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)
	at org.apache.karaf.shell.console.impl.jline.ConsoleImpl$DelegateSession.execute(ConsoleImpl.java:474)
	at org.apache.karaf.shell.console.impl.jline.ConsoleImpl.run(ConsoleImpl.java:182)
	at java.lang.Thread.run(Thread.java:722)
	at org.apache.karaf.shell.console.impl.jline.ConsoleFactoryService$3.doRun(ConsoleFactoryService.java:109)
	at org.apache.karaf.shell.console.impl.jline.ConsoleFactoryService$3$1.run(ConsoleFactoryService.java:100)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:356)
	at org.apache.karaf.shell.console.impl.jline.ConsoleFactoryService$3.run(ConsoleFactoryService.java:98)
Caused by: org.apache.cxf.bus.extension.ExtensionException: Could not create object of extension class org.apache.cxf.bus.managers.WorkQueueManagerImpl.
	at org.apache.cxf.bus.extension.Extension.load(Extension.java:231)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.loadAndRegister(ExtensionManagerImpl.java:211)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.getBeansOfType(ExtensionManagerImpl.java:320)
	at org.apache.cxf.bus.osgi.OSGiBeanLocator.getBeansOfType(OSGiBeanLocator.java:45)
	at org.apache.cxf.bus.CXFBusImpl.getExtension(CXFBusImpl.java:108)
	at org.apache.cxf.bus.osgi.OSGIBusListener.initComplete(OSGIBusListener.java:95)
	at org.apache.cxf.bus.managers.CXFBusLifeCycleManager.initComplete(CXFBusLifeCycleManager.java:87)
	at org.apache.cxf.bus.CXFBusImpl.initialize(CXFBusImpl.java:208)
	at org.apache.cxf.bus.CXFBusFactory.createBus(CXFBusFactory.java:43)
	at org.apache.cxf.bus.CXFBusFactory.createBus(CXFBusFactory.java:36)
	at org.apache.cxf.bus.CXFBusFactory.createBus(CXFBusFactory.java:32)
	at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:106)
	at org.apache.cxf.BusFactory.createThreadBus(BusFactory.java:243)
	at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:227)
	at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:214)
	at org.apache.cxf.jaxrs.JAXRSServiceFactoryBean.getBus(JAXRSServiceFactoryBean.java:66)
	at org.apache.cxf.jaxrs.JAXRSServiceFactoryBean.setResourceClassesFromBeans(JAXRSServiceFactoryBean.java:231)
	at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.setServiceBeans(JAXRSServerFactoryBean.java:319)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.aries.blueprint.utils.ReflectionUtils$MethodPropertyDescriptor.internalSet(ReflectionUtils.java:628)
	at org.apache.aries.blueprint.utils.ReflectionUtils$PropertyDescriptor.set(ReflectionUtils.java:378)
	at org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:939)
	... 63 more
Caused by: java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy0.registerMBean(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)
	at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)
	at com.sun.proxy.$Proxy0.registerMBean(Unknown Source)
	at org.apache.cxf.management.jmx.InstrumentationManagerImpl.registerMBeanWithServer(InstrumentationManagerImpl.java:331)
	at org.apache.cxf.management.jmx.InstrumentationManagerImpl.register(InstrumentationManagerImpl.java:229)
	at org.apache.cxf.management.jmx.InstrumentationManagerImpl.register(InstrumentationManagerImpl.java:246)
	at org.apache.cxf.management.jmx.InstrumentationManagerImpl.register(InstrumentationManagerImpl.java:239)
	at org.apache.cxf.bus.managers.WorkQueueManagerImpl.setBus(WorkQueueManagerImpl.java:74)
	at org.apache.cxf.bus.managers.WorkQueueManagerImpl.<init>(WorkQueueManagerImpl.java:59)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at org.apache.cxf.bus.extension.Extension.load(Extension.java:208)
	... 87 more
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.karaf.management.boot.KarafMBeanServerBuilder$MBeanInvocationHandler.invoke(KarafMBeanServerBuilder.java:63)
	... 105 more
Caused by: javax.management.NotCompliantMBeanException: MBean class org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper does not implement DynamicMBean, and neither follows the Standard MBean conventions (javax.management.NotCompliantMBeanException: Class org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper is not a JMX compliant Standard MBean) nor the MXBean conventions (javax.management.NotCompliantMBeanException: org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper: Class org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper is not a JMX compliant MXBean)
	at com.sun.jmx.mbeanserver.Introspector.checkCompliance(Introspector.java:173)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:317)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:513)
	... 109 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,354890,,,Tue Oct 29 08:33:44 UTC 2013,,,,,,0|i1p6lb:,355179,,,,,,,,29/Oct/13 08:33;chris@die-schneider.net;The problem is in the new karaf role based security for MBeans. So this has to be fixed in karaf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CORBA binding corrupts byte arrays,CXF-5357,12675260,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,ChrisBB,ChrisBB,23/Oct/13 14:41,26/Nov/13 17:40,14/Mar/19 02:30,24/Oct/13 18:44,2.7.7,,,,,,,2.6.11,2.7.8,,,CORBA Binding,,,,0,,,,,,,,"When requesting a list of byte arrays from a service using CORBA binding, some arrays contain extra data when received by a client.
(for repro & more description, please see README.txt in attached project)","W7/62, Java 7",,,,,,,,,,,,,,,,,,,23/Oct/13 14:44;ChrisBB;RzBugRepro.zip;https://issues.apache.org/jira/secure/attachment/12609863/RzBugRepro.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-10-24 07:23:13.386,,,no_permission,,Unknown,,,,,,,,,,,354880,,,Thu Oct 24 18:44:39 UTC 2013,,,,,,0|i1p6j3:,355169,,,,,,,,23/Oct/13 14:44;ChrisBB;Maven project that reproduces the bug,"24/Oct/13 07:23;gzres;Hello - here's a pull request: https://github.com/apache/cxf/pull/8.

The simple diff is all Chris needs:
{noformat}
--- a/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/runtime/CorbaStreamWriter.java
+++ b/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/runtime/CorbaStreamWriter.java
@@ -277,7 +277,7 @@ public class CorbaStreamWriter implements XMLStreamWriter {
                                 int start,
                                 int len)
         throws XMLStreamException {
-        currentTypeListener.processCharacters(new String(text));
+        currentTypeListener.processCharacters(new String(text, start, len));
     }

     public java.lang.String getPrefix(java.lang.String uri)
{noformat}

regards
Grzegorz Grzybek","24/Oct/13 18:44;dkulp;Pull request pulled.  Please verify and close the pull request if all is OK.

Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
faultTo address is ignored when fault is thrown,CXF-5354,12675175,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jpangburn,jpangburn,23/Oct/13 02:21,26/Nov/13 17:40,14/Mar/19 02:30,24/Oct/13 18:15,2.7.7,,,,,,,2.6.11,2.7.8,,,WS-* Components,,,,0,,,,,,,,"I have a Provider based service and find that with WS-Addressing enabled, it doesn't handle FaultTo addresses properly.  The case I found that caused this is when I turned on Schema Validation and sent a request that doesn't match the schema, then it throws a fault but instead sends the reply to the replyTo address.  I then tried using a bogus mustUnderstand header to cause a fault to see if it was just related to the schema validation, but it has the same problem.

Here's a sample request message to cause this (using mustUnderstand header so you don't have to setup schema validation to test):
{code:xml}
<?xml version=""1.0""?>
<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"">
  <soap:Header>
    <Action xmlns=""http://www.w3.org/2005/08/addressing"">anything</Action>
    <MessageID xmlns=""http://www.w3.org/2005/08/addressing"">urn:uuid:2eae8433-d42a-4749-b053-f5b5805fe8e9</MessageID>
    <To xmlns=""http://www.w3.org/2005/08/addressing"">http://localhost:9003/xdsregistryb</To>
    <ReplyTo xmlns=""http://www.w3.org/2005/08/addressing"">
      <Address>http://localhost:9003/replyBack</Address>
    </ReplyTo>
    <FaultTo xmlns=""http://www.w3.org/2005/08/addressing"">
      <Address>http://localhost:9003/faultBack</Address>
    </FaultTo>
    <bogus soap:mustUnderstand=""true"">this junk will fault</bogus>
  </soap:Header>
  <soap:Body>
    <junk/>
  </soap:Body>
</soap:Envelope>
{code}

Note the ReplyTo is http://localhost:9003/replyBack and the FaultTo is http://localhost:9003/faultBack.  When I send to my Provider service, the log file shows the response going to the replyBack url, but the To address in WS-Addressing header shows the faultBack url- so it's halfway right!  This is the case with both schema validation faults and the above example of bogus mustUnderstand header.

Here's the Wireshark network trace (so there is no possibility of bad logging being the issue):
{quote}
POST /replyBack HTTP/1.1
Content-Type: application/soap+xml; charset=UTF-8
Accept: */*
User-Agent: Apache CXF 2.7.7
Cache-Control: no-cache
Pragma: no-cache
Host: localhost:9003
Connection: keep-alive
Content-Length: 706

<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Header><Action xmlns=""http://www.w3.org/2005/08/addressing""/><MessageID xmlns=""http://www.w3.org/2005/08/addressing"">urn:uuid:6a5190fc-256f-428c-9e5e-8b79520bbf0c</MessageID><To xmlns=""http://www.w3.org/2005/08/addressing"">http://localhost:9003/faultBack</To><RelatesTo xmlns=""http://www.w3.org/2005/08/addressing"">urn:uuid:2eae8433-d42a-4749-b053-f5b5805fe8e9</RelatesTo></soap:Header><soap:Body><soap:Fault><soap:Code><soap:Value>soap:MustUnderstand</soap:Value></soap:Code><soap:Reason><soap:Text xml:lang=""en"">MustUnderstand headers: [bogus] are not understood.</soap:Text></soap:Reason></soap:Fault></soap:Body></soap:Envelope>
{quote}

Sorry, wiki markup is making bogus in red, not intentional.  See how the address listed at the top doesn't match the WS-Addressing To address?  With anonymous replyTo address then you get the fault back on the same synchronous request channel, and it still shows the /faultBack url in the To address.",,,,,,,,,,,,,,,,,,,,23/Oct/13 23:57;jpangburn;jaxws_dispatch_provider_test_faultto.zip;https://issues.apache.org/jira/secure/attachment/12609959/jaxws_dispatch_provider_test_faultto.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-10-23 20:43:24.814,,,no_permission,,Unknown,,,,,,,,,,,354795,,,Thu Oct 24 22:55:45 UTC 2013,,,,,,0|i1p607:,355084,,,,,,,,"23/Oct/13 02:22;jpangburn;Issue 4382 indicates this should work, but at least in these cases listed it does not.","23/Oct/13 20:43;dkulp;I think I need a full testcase for this.  If I use curl to post your message one of the Addressing endpoints, I get:

Caused by: java.net.ConnectException: ConnectException invoking http://localhost:9003/faultBack: Connection refused

printed to the console which makes sense considering I don't have anything running there.  :-)    A few other tests does seem to show that the faults are going to the faultTo.

","23/Oct/13 23:57;jpangburn;See attachment for a modification of the 2.7.6 jaxws_dispatch_provider sample (first noticed the problem on my 2.7.7 installation, so used an older 2.7.6 installation to make sure it wasn't a problem specific to 2.7.7) to illustrate the problem.  To run it, open a terminal and execute:
mvn -P server
Then open another terminal and execute:
mvn -P client

The client requests a replyTo at one URL and a faultTo at another.  There's nothing actually listening on these URLs but they are on the same port (9000) that the server is listening on, so in the server output you see:
org.apache.cxf.transport.http.HTTPException: HTTP response '404: Not Found' when communicating with http://localhost:9000/replyBack

This is where it's trying to send the fault- to the replyTo address instead of the faultTo address.",24/Oct/13 18:15;dkulp;This should now be fixed.   Can you give it a try when you get a chance?,"24/Oct/13 22:55;jpangburn;I ran the test module and it was successful.  I also ran it in my own system where I initially found the problem and verified that faults (from a couple different causes) are sent back to the faultTo address, and successful replies are sent to the replyTo (whether using anonymous or a callback URL).  Looks all good to me, thanks for the super quick fix Dan!!!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception mappers implementing ExceptionMapper through an abstract class are not mapped to the declared exception ,CXF-5348,12674811,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,fabien.thouny,fabien.thouny,21/Oct/13 15:41,04/Sep/17 11:13,14/Mar/19 02:30,31/Jan/14 18:34,2.7.7,,,,,,,2.7.10,3.0.0-milestone2,,,JAX-RS,,,,0,,,,,,,,"If we consider the following exception mapper, all Throwables will be mapped instead of only the SomeClientExceptions :

{code}
@Provider
public class SomeClientExceptionMapper extends AbstractBadRequestExceptionMapper<SomeClientException> {}

abstract class AbstractBadRequestExceptionMapper<T extends Throwable> implements ExceptionMapper<T> {

    @Override
    public Response toResponse(T exception) {
        return Response.status(Status.BAD_REQUEST).entity(exception.getMessage()).build();
    }
}
{code}

Please find attached, a sample project with some ITs showing the problem.

",,,,,,,,,,,,,,,,,,,,21/Oct/13 15:41;fabien.thouny;hierarchical-exception-mapper.zip;https://issues.apache.org/jira/secure/attachment/12609444/hierarchical-exception-mapper.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2015-08-06 09:07:28.596,,,no_permission,,Unknown,,,,,,,,,,,354433,,,Thu Aug 06 10:17:42 UTC 2015,,,,,,0|i1p3rz:,354723,,,,,,,,"06/Aug/15 09:07;timg35;I'm using 3.1.2 (for which this bug is mostly fixed), but it seems that a custom WebApplicationException mapper which extends an abstract superclass will not be preferred over the default one. If my custom mapper implements ExceptionMapper<WebApplicationException>, then all is fine.","06/Aug/15 10:17;sergey_beryozkin;I've added another test:

http://git-wip-us.apache.org/repos/asf/cxf/commit/dbd709e6

Test custom mapper extends AbstractBadRequestExceptionMapper typed in the description above. What is different in your case ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Request routing is broken when the URL contains both jsessionid and an extension,CXF-5347,12674803,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,agoulamhoussen,agoulamhoussen,21/Oct/13 15:05,26/Nov/13 17:40,14/Mar/19 02:30,29/Oct/13 15:27,2.7.7,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"When the application receive a request with an url containing an extension and the jsessionid, like http://mycompany.com/app/service.xml;jsessionid , CXF is not able to match the path to a registered service :
{code}
WARNING: No operation matching request path ""/cxf-sample/hello/jsonBean.json;jsessionid=mysession"" is found, Relative Path: /jsonBean.json;jsessionid=mysession, HTTP Method: POST, ContentType: application/json, Accept: application/json,. 
Oct 21, 2013 4:57:54 PM org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper toResponse
WARNING: javax.ws.rs.ClientErrorException
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.findTargetMethod(JAXRSUtils.java:503)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:227)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:103)
[...]
{code}

The reason is that the class org.apache.cxf.jaxrs.impl.RequestPreprocessor doesn't strip the jsessionid before trying to match extension/language mappings",,,,,,,,,,,,,,,,,,,,21/Oct/13 15:13;agoulamhoussen;CXF-5347.tar.gz;https://issues.apache.org/jira/secure/attachment/12609440/CXF-5347.tar.gz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-10-29 13:34:13.744,,,no_permission,,Unknown,,,,,,,,,,,354425,,,Wed Oct 30 14:48:26 UTC 2013,,,,,,0|i1p3q7:,354715,,,,,,,,21/Oct/13 15:13;agoulamhoussen;Here is a sample project reproducing this behavior.,"29/Oct/13 13:34;sergey_beryozkin;Reproduced: this applies to the case where we expect CXF to remove an extension like "".xml"" which fails in this case due to the presence of *matrix* parameters.",30/Oct/13 14:48;fabien.thouny;The fix works for me. Thanks !,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Shared filters registered through DynamicFeature are not considered,CXF-5346,12674796,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,fabien.thouny,fabien.thouny,21/Oct/13 14:28,26/Nov/13 17:40,14/Mar/19 02:30,23/Oct/13 15:09,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"When a shared filter is registered through a DynamicFeature implementation, it's not considered when reaching the matching resource :
{code}
@Provider
public class DynamicFilterBinder implements DynamicFeature {

    private static final SharedDynamicFilter SHARED_DYNAMIC_FILTER = new SharedDynamicFilter();

    @Override
    public void configure(ResourceInfo resourceInfo, Configurable configurable) {
        configurable.register(SHARED_DYNAMIC_FILTER);
    }
} 
{code}

However, when we use a instance per resource, it's considered as expected :
{code}
 @Provider
public class DynamicFilterBinder implements DynamicFeature {

    @Override
    public void configure(ResourceInfo resourceInfo, Configurable configurable) {
        configurable.register(new NotSharedDynamicFilter());
    }
}
{code}

Please find attached, a sample project with some ITs showing the problem.

 ",,,,,,,,,,,,,,,,,,,,21/Oct/13 23:16;fabien.thouny;cxf-shared-dynamic-filter-3.0.0-SNAPSHOT.zip;https://issues.apache.org/jira/secure/attachment/12609553/cxf-shared-dynamic-filter-3.0.0-SNAPSHOT.zip,21/Oct/13 14:29;fabien.thouny;cxf-shared-dynamic-filter.zip;https://issues.apache.org/jira/secure/attachment/12609436/cxf-shared-dynamic-filter.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-10-21 17:54:09.294,,,no_permission,,Unknown,,,,,,,,,,,354418,,,Thu Oct 24 15:15:52 UTC 2013,,,,,,0|i1p3on:,354708,,,,,,,,"21/Oct/13 17:54;sergey_beryozkin;Hi, works for me on the trunk, will try on CXF 2.7.x tomorrow, the way dynamic features are managed have changed on the trunk, so may be it is a 2.7.7 specific issue ","21/Oct/13 23:16;fabien.thouny;Hi Sergey, my sample project does not work either with the latest 3.0.0-SNAPSHOT. Maybe I do something wrong ?

I attach the upgraded sample.

Thanks for your help,

Fabien","24/Oct/13 15:15;fabien.thouny;It works perfectly with the latest 2.7.8-SNAPSHOT, thanks !",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClientRequestFilterInterceptor uses a wrong phase,CXF-5343,12674505,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,18/Oct/13 13:07,26/Nov/13 17:40,14/Mar/19 02:30,18/Oct/13 16:22,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,This interceptor which runs JAX-RS 2.0 ClientRequestFilters runs after HttpConduit has been initialized which causes method and target URI changes in ClientRequestFilter being ignored,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,354127,,,2013-10-18 13:07:51.0,,,,,,0|i1p1xj:,354419,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in org.apache.cxf.jaxws.support.JaxWsEndpointImpl.checkRespectBindingFeature,CXF-5341,12674308,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,17/Oct/13 13:16,26/Nov/13 17:40,14/Mar/19 02:30,30/Oct/13 15:50,2.6.8,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,JAX-WS Runtime,,,,0,,,,,,,,"I'm getting a NPE when using a contract-first WS endpoint whose wsdl contains:

<wsp:PolicyReference URI=""#ForceMTOM"" wsdl:required=""true"" />

Caused by: java.lang.NullPointerException
	at org.apache.cxf.jaxws.support.JaxWsEndpointImpl.checkRespectBindingFeature(JaxWsEndpointImpl.java:267)
	at org.apache.cxf.jaxws.support.JaxWsEndpointImpl.extractWsdlExtensibilities(JaxWsEndpointImpl.java:227)
	at org.apache.cxf.jaxws.support.JaxWsEndpointImpl.<init>(JaxWsEndpointImpl.java:205)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.createEndpoint(JaxWsServiceFactoryBean.java:237)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.createEndpoints(ReflectionServiceFactoryBean.java:351)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:283)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:204)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:102)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:159)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:211)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:456)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:334)
	... 13 more

This looks related to the changes in CXF-4876.",,,,,,,,,,,,,,,,,,,,28/Oct/13 13:49;rsearls;cxf-5341.patch;https://issues.apache.org/jira/secure/attachment/12610558/cxf-5341.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-10-25 13:48:05.966,,,no_permission,,Unknown,,,,,,,,,,,353930,,,Mon Oct 28 13:49:53 UTC 2013,,,,,,0|i1p0pr:,354222,,,,,,,,"25/Oct/13 13:48;rsearls;There are 2 issues with the code supporting RespectBinding in 2.6.x-fixes, 
2.7.x-fixes, and the current trunk. 
.

issue 1. In org.apache.cxf.jaxws.support.JaxWsEndpointImpl variable, this.wsFeatures,
         can be NULL.  Currently a value of NULL is not checked before executing the 
         ""for"" stmt at line 266 and a NPE will results.

260     private void checkRespectBindingFeature(List<ExtensibilityElement> bindingExtensors) {
261         if (bindingExtensors != null) {
262             Iterator<ExtensibilityElement> extensionElements = bindingExtensors.iterator();
263             while (extensionElements.hasNext()) {
264                 ExtensibilityElement ext = extensionElements.next();
265                 if (ext instanceof UnknownExtensibilityElement && Boolean.TRUE.equals(ext.getRequired())) {
266  **NPE**             for (WebServiceFeature feature : this.wsFeatures) {
267                         if (feature instanceof RespectBindingFeature && feature.isEnabled()) {
268
269                             org.apache.cxf.common.i18n.Message message =
270                                 new org.apache.cxf.common.i18n.Message(""UNKONWN_REQUIRED_WSDL_BINDING"", LOG);
271                             LOG.severe(message.toString());
272                             throw new WebServiceException(message.toString());
273                         }
274                     }
275                 }
276             }
277         }
278
279     }

Solution:  The solution to the NPE is to add a check for a NULL value at line 265 as follows.

    if (ext instanceof UnknownExtensibilityElement && Boolean.TRUE.equals(ext.getRequired())
                    && this.wsFeatures != null) {
       ......

    A NULL value for this.wsFeatures occurs when the service endpoint implementation class 
    does not contain a @MTOM, @ADDRESS, or @RespectBinding annotation.

    This particular NPE occurs when the scenario above occurs AND there is an {any} type
    stmt (see schema def) in the wsdl's ""binding"" ""operation"" that contains a 
    ""wsdl:enable='true'"" attribute.  (see line 124 below)

    [ from the wsdl schema, 
            <wsdl:operation	name = xs:NCName >
                Content: wsdl:documentation?, {any}*, wsdl:input?, wsdl:output?, wsdl:fault*
            </wsdl:operation>
    ]

120    <wsdl:binding name=""HelloWorldServiceSoapBinding"" type=""tns:HelloWorldService"">
121        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http"" />
122        <wsdl:operation name=""sayHelloToName"">            
123            <!-- Gives nullpointer exception EAP 6.1.1 -->
124  >>>>     <wsp:PolicyReference URI=""#ForceMTOM"" wsdl:required=""true"" />
125            <soap:operation soapAction="""" style=""document"" />
126            <wsdl:input name=""sayHelloToName"">
127                <soap:body use=""literal"" />
128            </wsdl:input>
129            <wsdl:output name=""sayHelloToNameResponse"">
130                <soap:body use=""literal"" />
131            </wsdl:output>
132        </wsdl:operation>
133    </wsdl:binding>



issue 2. Currently 2.6.x-fixes, 2.7.x-fixes and the trunk is not checking for annotation @RespectBinding.
        Class org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.loadWSFeatureAnnotation
        checks for annotations @MTOM, @ADDRESS and sets up for wsFeatures to contain values.
        This seems the logical place to add the follow code to check for @RespectBinding.

        RespectBinding respectBinding = implInfo.getImplementorClass()
            .getAnnotation(RespectBinding.class);
        if (respectBinding == null && serviceClass != null) {
            respectBinding = serviceClass.getAnnotation(RespectBinding.class);
        }
        if (respectBinding != null) {
            features.add(new RespectBindingFeature(respectBinding.enabled()));
        }


-------

There are 5 input scenarios for the case of RespectBinding and an 
UnknownExtensibilityElement.

1.) There is no @RespectBinding annotation defined in the service endpoint 
     implementation class and there is an UnknownExtensibilityElement with a enabled=""true""
     attribute set in the operation element of a binding.

     result: RespectBinding is not active because there is no def for it.
            The UnknownExtensibilityElement request for RespectBinding is ignored.
            
2.) There is a @RespectBinding annotation (using the default value of true or explicitly
     set to true) defined in the service endpoint implementation class and there is an 
     UnknownExtensibilityElement with a enabled=""true"" attribute set in the operation 
     element of a binding.

     result: A fatal exception is thrown at deployment time.  Error msg starts.
        ""Unknown wsdl binding extension with required=true attribute found while 
            RespectBindingFeature enabled"", .....

3.) There is a @RespectBinding annotation (set to false) defined in the service endpoint 
     implementation class and there is an UnknownExtensibilityElement with a enabled=""true""
     attribute set in the operation element of a binding.

     result: RespectBinding is not active because it is set to false.
            The UnknownExtensibilityElement request for RespectBinding is ignored.
            
4.) There is a @RespectBinding annotation (set to false) defined in the service endpoint 
     implementation class and there is an UnknownExtensibilityElement with a enabled=""false""
     or the attribute is not defined in the operation element of a binding.

     result: RespectBinding is not active because it is set to false.  The 
            UnknownExtensibilityElement's RespectBinding request is ignored  
            because the value is false or not present.   

5.) There is a @RespectBinding annotation (set to true) defined in the service endpoint 
     implementation class and there is an UnknownExtensibilityElement with a enabled=""false""
     or the attribute is not defined in the operation element of a binding.

     result: The UnknownExtensibilityElement's RespectBinding request is ignored
             because the value is false or not present. RespectBinding is active 
             because it is set to true.
",28/Oct/13 13:49;rsearls;code changes as described in Fri Oct 25 comment issue 1 and issue 2.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IDLToWSDL crashes with certain idl constructs,CXF-5340,12674300,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,jaybee,jaybee,17/Oct/13 11:57,26/Nov/13 17:40,14/Mar/19 02:30,24/Oct/13 18:43,2.7.7,,,,,,,2.6.11,2.7.8,,,CORBA Binding,,,,1,,,,,,,,"First Problem: 
using a 	const string NOT_CONN_LOCAL = ""local"";
in the IDL leads to an exception:
{code}
line 4:39: unexpected token: local
 ( module repro ( const string NOT_CONN_LOCAL ) ( exception msgError unsigned long m_number string m_message ) ( enum Reply positive negative dont_use_3 dont_us
e_4 dont_use_5 errTimeout errError cancelled ) ( interface Service { ( getFirst Reply ( in Reply rep ) ( out Reply reply ) ( raises msgError ) ) } ) )
Error : org.apache.cxf.tools.common.ToolException

org.apache.cxf.tools.common.ToolException: org.apache.cxf.tools.common.ToolException
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:89)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:80)
        at org.apache.cxf.tools.corba.IDLToWSDL.execute(IDLToWSDL.java:75)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
        at org.apache.cxf.tools.corba.IDLToWSDL.run(IDLToWSDL.java:164)
        at org.apache.cxf.maven_plugin.corba.maven.plugins.IDLToWSDLPlugin.execute(IDLToWSDLPlugin.java:77)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.cxf.tools.common.ToolException
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:221)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:87)
        ... 28 more
{code}
The error only occurs if the content of the string is 'local' !

Second Problem:
Please change repro.idl in the pom to repro1.idl.

Using unsigned long leads to the following exception:
{code}
 ( module repro ( const string NOT_CONN_LOCAL NOTlocal ) ( exception msgError unsigned long m_number string m_message ) ( enum Reply positive negative dont_use_
3 dont_use_4 dont_use_5 errTimeout errError cancelled ) ( interface Service { ( getFirst Reply ( in Reply rep ) ( out Reply reply ) ( raises msgError ) ) } ) )
Error : org.apache.cxf.tools.common.ToolException: [ScopedNameVisitor:  Corba type {http://cxf.apache.org/bindings/corba/idl/repro1}repro.msgError.m_number not
found in typeMap]

org.apache.cxf.tools.common.ToolException: org.apache.cxf.tools.common.ToolException: [ScopedNameVisitor:  Corba type {http://cxf.apache.org/bindings/corba/idl/
repro1}repro.msgError.m_number not found in typeMap]
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:89)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:80)
        at org.apache.cxf.tools.corba.IDLToWSDL.execute(IDLToWSDL.java:75)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
        at org.apache.cxf.tools.corba.IDLToWSDL.run(IDLToWSDL.java:164)
        at org.apache.cxf.maven_plugin.corba.maven.plugins.IDLToWSDLPlugin.execute(IDLToWSDLPlugin.java:77)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.cxf.tools.common.ToolException: [ScopedNameVisitor:  Corba type {http://cxf.apache.org/bindings/corba/idl/repro1}repro.msgError.m_number n
ot found in typeMap]
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:221)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:87)
        ... 28 more
{code}

Changing the IDL is no option because it is an external service.

Thx 

Jürgen",JAVA7 / Windows 7,,,,,,,,,,,,,,,,,,,17/Oct/13 11:58;jaybee;CorbaBugIdlRepro.zip;https://issues.apache.org/jira/secure/attachment/12608916/CorbaBugIdlRepro.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-10-24 10:20:37.92,,,no_permission,,Unknown,,,,,,,,,,,353922,,,Thu Oct 24 18:43:36 UTC 2013,,,,,,0|i1p0nz:,354214,,,,,,,,"24/Oct/13 10:20;gzres;Hello - here's a pull request: https://github.com/apache/cxf/pull/9.

The problem was that {{""literal""}} was first recognized as {{STRING_LITERAL}} but then replaced by {{LITERAL_local}}.

As for {{exception}} IDL construct, the types of members were not recognized properly - it was sufficient to do what {{org.apache.cxf.tools.corba.processors.idl.StructVisitor.visitStructMembers()}} does:
{code:java}
AST memberNode = TypesUtils.getCorbaTypeNameNode(memberTypeNode);
{code}

regards
Grzegorz Grzybek","24/Oct/13 18:43;dkulp;
Pull request pulled.  Please verify and close the pull request if all is OK.

Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPConduit blocks DELETE with body,CXF-5337,12674129,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,16/Oct/13 14:49,26/Nov/13 17:40,14/Mar/19 02:30,18/Oct/13 18:27,,,,,,,,2.7.8,3.0.0-milestone1,,,Transports,,,,0,,,,,,,,"HTTPConduit blocks DELETE with body as it assumes it is a well-known verb which can have no message body, this needs to be relaxed to support legacy HTTP servers expecting DELETE with the message body
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,353752,,,2013-10-16 14:49:33.0,,,,,,0|i1oznb:,354044,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WADLGenerator does not support XmlType, does not link JSON and misses package info for collections",CXF-5336,12673909,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,15/Oct/13 14:57,26/Nov/13 17:40,14/Mar/19 02:30,18/Oct/13 11:53,,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,353532,,,2013-10-15 14:57:35.0,,,,,,0|i1oyaf:,353824,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect handle of ws-policy 1.1 (Incorrect inclusion value: null),CXF-5335,12673702,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,Guhbers,Guhbers,14/Oct/13 14:55,26/Nov/13 17:40,14/Mar/19 02:30,15/Oct/13 10:36,2.7.6,,,,,,,2.6.11,2.7.8,,,WS-* Components,,,,0,,,,,,,,"I created of JAX-WS client for working with ""third-party"" web service.
Web service provides the WSDL with ws-policy settings:
{code:xml}
<sp:AsymmetricBinding
	xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
	<wsp:Policy>
		<sp:InitiatorToken>
			<wsp:Policy>
				<sp:X509Token
					sp:IncludeToken=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient"">
					<wsp:Policy>
						<sp:WssX509V3Token10 />
					</wsp:Policy>
				</sp:X509Token>
			</wsp:Policy>
		</sp:InitiatorToken>
		<sp:RecipientToken>
			<wsp:Policy>
				<sp:X509Token
					sp:IncludeToken=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToInitiator"">
					<wsp:Policy>
						<sp:WssX509V3Token10 />
					</wsp:Policy>
				</sp:X509Token>
			</wsp:Policy>
		</sp:RecipientToken>
		<sp:AlgorithmSuite>
{code}
During of the client execution I got next exception:
{code:java}
org.apache.cxf.binding.soap.SoapFault: Incorrect inclusion value: null
Caused by: java.lang.RuntimeException: Incorrect inclusion value: null
	at org.apache.cxf.ws.security.policy.model.Token.setInclusion(Token.java:70)
	at org.apache.cxf.ws.security.policy.builders.X509TokenBuilder.build(X509TokenBuilder.java:69)
	at org.apache.cxf.ws.security.policy.builders.X509TokenBuilder.build(X509TokenBuilder.java:40)
	at org.apache.neethi.AssertionBuilderFactoryImpl.invokeBuilder(AssertionBuilderFactoryImpl.java:138)
	at org.apache.neethi.AssertionBuilderFactoryImpl.build(AssertionBuilderFactoryImpl.java:117)
	at org.apache.neethi.PolicyBuilder.processOperationElement(PolicyBuilder.java:224)
	at org.apache.neethi.PolicyBuilder.getPolicyOperator(PolicyBuilder.java:174)
	at org.apache.neethi.PolicyBuilder.getPolicy(PolicyBuilder.java:124)
. . .
{code}
After examining the documentation for WS-Policy specification v.1.1, I found a difference in the list of X.509 token inclusions. Specification Errata contains token inclusion as in WSDL: <...>/AlwaysToInitiator. ""Base"" specification is not contains of that inclusion.

CXF implementation of ws-policy 1.1 is not contains the constant for ""Errata"" version of the specification (i.e. not contains constant for http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToInitiator) and as result the code throw RuntimeException.

In runtime after executing the method from class org.apache.cxf.ws.security.policy.SP11Constants:
{code:java}
public IncludeTokenType getInclusionFromAttributeValue(String value) {
   
        if (INCLUDE_ALWAYS.equals(value)) {
            return IncludeTokenType.INCLUDE_TOKEN_ALWAYS;
        } else if (INCLUDE_ALWAYS_TO_RECIPIENT.equals(value)) {
            return IncludeTokenType.INCLUDE_TOKEN_ALWAYS_TO_RECIPIENT;
        } else if (INCLUDE_NEVER.equals(value)) {
            return IncludeTokenType.INCLUDE_TOKEN_NEVER;
        } else if (INCLUDE_ONCE.equals(value)) {
            return IncludeTokenType.INCLUDE_TOKEN_ONCE;
        }
        return StringUtils.isEmpty(value) ? IncludeTokenType.INCLUDE_TOKEN_ALWAYS : null;
    }
{code}
return result is NULL and next code from class org.apache.cxf.ws.security.policy.model.Token:
{code:java}
public void setInclusion(IncludeTokenType inclusion) {
        if (IncludeTokenType.INCLUDE_TOKEN_ALWAYS == inclusion
            || IncludeTokenType.INCLUDE_TOKEN_ALWAYS_TO_RECIPIENT == inclusion
            || IncludeTokenType.INCLUDE_TOKEN_ALWAYS_TO_INITIATOR == inclusion
            || IncludeTokenType.INCLUDE_TOKEN_NEVER == inclusion 
            || IncludeTokenType.INCLUDE_TOKEN_ONCE == inclusion) {
            this.inclusion = inclusion;
        } else {
            // TODO replace this with a proper (WSSPolicyException) exception
            throw new RuntimeException(""Incorrect inclusion value: "" + inclusion);
        }
    }
{code}
throws of RuntimeException...

Please help me solve this problem!",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,353325,,,2013-10-14 14:55:49.0,,,,,,0|i1ox0n:,353618,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL Resolution Problem with SOAP 1.2,CXF-5334,12673686,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,dkulp,kabronkline,kabronkline,14/Oct/13 13:46,26/Nov/13 17:40,14/Mar/19 02:30,15/Oct/13 17:09,2.7.7,,,,,,,2.7.8,,,,JAX-WS Runtime,,,,0,,,,,,,,"Using Apache CXF 2.7.7 if I publish a simple ""HelloWorld"" JAX-WS service and attempt to resolve the WSDL URL in a web browser using: ""localhost:8080/service/HelloWorld?wsdl"" the WSDL loads in the browser and everything looks great.

If I add the below annotation which changes the SOAP Binding to 1.2 the WSDL resolution still works but the WSDL doesn't load in the browser, instead a download dialog is shown and the file name extension of the WSDL (i.e. "".wsdl"") is missing in the download dialog (which is probably why the WSDL isn't loading in the browser).

    @javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING

The same behavior appears with the SOAP12HTTP_MTOM_BINDING
    
    @javax.xml.ws.BindingType (value=javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_MTOM_BINDING)

Functionally everything works fine even with the BindingType annotation defined so this is just a minor annoyance but I'm wondering how I can get the correct WSDL resolution behavior when the SOAP 1.2 binding is in use. Note that this behavior happens regardless of whether or not I specify the WSDL location.","Windows, Linux",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-10-14 14:39:43.396,,,no_permission,,Unknown,,,,,,,,,,,353309,,,Mon Oct 14 15:49:51 UTC 2013,,,,,,0|i1owx3:,353602,,,,,,,,"14/Oct/13 14:39;dkulp;
Can you wireshark it or so a ""wget --server-response"" with it?  My gut feeling is the Content-Type may be different which may be confusing your particular browser.   (text/xml ->  application/xml)    ","14/Oct/13 15:14;kabronkline;When attempting to access via: HelloWorld?wsdl I get the following response headers:

Content-Language:en-US
Content-Type:application/soap+xml; charset=UTF-8
Date:Mon, 14 Oct 2013 15:08:07 GMT
Server:WebSphere Application Server/8.0
Transfer-Encoding:chunked
X-Powered-By:Servlet/3.0

When I remove the BindingType annotation (which also requires me to remove wsdlLocation from my javax.jws.WebService annotation since my WSDL specifies SOAP 1.2), I get the following response headers:

Content-Language:en-US
Content-Type:text/xml; charset=UTF-8
Date:Mon, 14 Oct 2013 15:11:19 GMT
Server:WebSphere Application Server/8.0
Transfer-Encoding:chunked
X-Powered-By:Servlet/3.0

Note that I have tried this using Spring tcServer and get the same results.",14/Oct/13 15:16;dkulp;Thanks.   That's what I thought.  Just need to make sure we force it to text/xml when output.,"14/Oct/13 15:49;kabronkline;Strange that it's using ""application/soap+xml"" for SOAP 1.2 but the fix sounds simple enough.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Permission and Property are missing Serializable interface,CXF-5331,12673379,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,hoegertn,hoegertn,11/Oct/13 06:29,26/Nov/13 17:40,14/Mar/19 02:30,17/Oct/13 16:16,2.7.7,,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS Security,,,,0,oauth2,,,,,,,After adding Serializable to some OAuth classes only org.apache.cxf.rs.security.oauth2.common.Permission and org.apache.cxf.rs.security.oauth2.common.Property are left. The problem is that these classes are members of ServerAccessToken and so on.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-10-17 16:16:24.51,,,no_permission,,Novice,,,,,,,,,,,353002,,,Thu Oct 17 19:53:32 UTC 2013,,,,,,0|i1ouzj:,353289,,,,,,,,"17/Oct/13 16:16;sergey_beryozkin;Hi  Thorsten, sorry about that, bad miss :-), though I have to admit I did not have a chance to validate myself, thanks","17/Oct/13 19:53;hoegertn;No problem, i checked the sources of all classes and members before implementing, so nothing happened.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS ProviderFactory ignores MBR/MBW typed on Object for primitive arrays ,CXF-5328,12673210,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,10/Oct/13 12:16,26/Nov/13 17:40,14/Mar/19 02:30,22/Oct/13 20:38,,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,352833,,,2013-10-10 12:16:35.0,,,,,,0|i1otyf:,353120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hardcoded reference to com.ibm.wsdl.util.xml.DOMUtils,CXF-5326,12673023,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rjean@salesforce.com,rjean@salesforce.com,09/Oct/13 14:10,26/Nov/13 17:40,14/Mar/19 02:30,09/Oct/13 14:56,2.7,,,,,,,2.6.11,2.7.8,,,JAX-WS Runtime,,,,0,,,,,,,,"The source file org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl.java uses DOMUtils from wsdl4j.jar. wsdl4j.jar is one implementation of the JWSDL specification and can be replaced by another implementation. This direct reference makes it impossible to switch implementation.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-10-09 14:36:19.796,,,no_permission,,Unknown,,,,,,,,,,,352646,,,Wed Oct 09 15:18:07 UTC 2013,,,,,,0|i1ost3:,352933,,,,,,,,"09/Oct/13 14:36;dkulp;Good catch.  There's two other files with references to that instead of CXF's DOMUtils as well.
","09/Oct/13 14:38;dkulp;BTW:  what other version of the spec is there?    I'd love to be able to test with other implementations, but I've never seen another.

","09/Oct/13 15:18;rjean@salesforce.com;To my knowledge there is no other open source implementation. We internally built a partial implementation for licensing reasons. 

Thanks for the quick fix BTW!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST Overriding request URI doesn't change serviceBeans,CXF-5316,12671660,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,headiron@gmail.com,headiron@gmail.com,01/Oct/13 20:44,26/Nov/13 17:40,14/Mar/19 02:30,18/Oct/13 16:21,2.7.6,,,,,,,2.7.7,,,,JAX-RS,,,,0,,,,,,,,"Hi All.

I am writing RESTful API code using CXF.
For the versioning, we plan to implement based on Content-Type header.

For this, I'm trying to two ways but both of them aren't work.

1. Use different Consumes annotation at same class.
    I try to set different Content-Type at same class, but it always work with one method.
    @POST
    @Path(""/"")
    @Produces(""application/json"")
    @Consumes(""application/json; application,v=2"")
    public Response createProjectV2(Person person) {
    ....
    }
...
    @POST
    @Path(""/"")
    @Produces(""application/json"")
    @Consumes(""application/json"")
    public Response createProject(Person person) {
    ....
    }
always ""createProject"" which has ""application/json"" on Consumes annotation.

2.  Update Request URI at interceptor to use different serviceBean for differnt version.

public class CommonInInterceptorImpl  implements RequestHandler{
	public Response handleRequest(Message message , ClassResourceInfo resourceClass) {
...
				String requestUri = (String)message.get(Message.REQUEST_URI);
				String basePath = (String)message.get(Message.BASE_PATH);
				
				String targetPath = basePath+""ver-""+version+""/""+requestUri.substring(basePath.length());
				message.put(Message.CONTENT_TYPE, ""application/json;application,v=2"");
				message.put(Message.REQUEST_URI, targetPath);
...
}
....
Service Bean 1 
@Path(PersonService.PERSON_SERVICE_URL)
public class PersonService extends RESTApiHandler{
...
}

Service Bean 2  ( in different package ) 
@Path(""/ver-2/""+com.tfsm.palette.api.rest.PersonService.PERSON_SERVICE_URL)
public class PersonService {
...
}
I update REQUEST_URI at interceptor to redirect request to other serviceBean, but request is processed orginal desired serviceBean.
( I expect redirect request to 2nd service Bean , but it always processed at 1st service Bean. )

I don't know whether 1st approach is correct in JAX RS spec, but I expect 2nd have to be work because it is mentioned at your documentation.
http://cxf.apache.org/docs/jax-rs-filters.html#JAX-RSFilters-OverridingrequestURI%2Cqueryandheaders

Could you let me know how we could redirect request to different serviceBean ? ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-10-02 10:08:31.588,,,no_permission,,Unknown,,,,,,,,,,,351370,,,Fri Oct 18 16:21:11 UTC 2013,,,,,,0|i1okzj:,351662,,,,,,,,"02/Oct/13 10:08;sergey_beryozkin;Issue1: in createProject2, you have
 
{code:java}
@Consumes(""application/json; application,v=2"")
{code}

What exactly do you mean here, it does not look like a correct syntax to me, specifically ""application,v=2"", can a parameter name have a comma ?

Issue 2:

Sorry about the confusion there, by the time CXF RequestHandlers are run, a service bean has already been selected, so changing the request URI may have a limirted effect only. This issue can be cleanly sorted out by using either JAX-RS 2.0 PreMatch ContainerRequestFilter or simply having 2 jaxrs endpoints.

I'd like to see what can be done about issue 1



","02/Oct/13 10:31;sergey_beryozkin;Right re issue1, media type parameters are not taken into consideration when sorting the media types.
So if you'd like to use a media type based version control then do something like ""application/json"", ""application/json+v2"", etc
","03/Oct/13 18:29;headiron@gmail.com;Hi Sergey.

Thanks for answer.

I am trying to solve the issue using ContainerRequestFilter.

I implement my own ContainerRequestFilter and register it on top of jaxrs:providers list like below.

    	<jaxrs:providers>
	
  			<bean class=""org.codehaus.jackson.jaxrs.JacksonJsonProvider"" />
                        <!-- Below is my own ContainerRequestFilter -->
			<bean class=""com.tfsm.api.filter.TFSMContainerRequestFilter""/>	
  			
                        <!-- Below is my RequestHandler -->
  			<ref bean=""commonInInterceptor""/>  			

When I check the sequence , I found that ContainerRequestFilter is executed after other RequestHandler(s) and just before ServiceBean.

Could you let me know how I specify to execute ContainerRequestFilter before others ? 
If you have any sample to redirect url, could you share it ? 

I try to find a sample , but it is difficult to find it.

Thanks
Ducheol","03/Oct/13 20:06;sergey_beryozkin;It needs to have 
https://jax-rs-spec.java.net/nonav/2.0/apidocs/javax/ws/rs/container/PreMatching.html 

As a side note, I don't recommend mixing JAX-RS 2.0 filters and legacy CXF Requesthandlers,

Please ask any follow-up questions on the cxf users list, thanks","07/Oct/13 15:59;headiron@gmail.com;Hi Sergey.

Thanks for quick updating.

As you suggest, I am trying to use Issu1 instead of mixing JAX-RS 2.0 filter  & legacy CXF RequestHandlers.

To the versioning, I just update ContentType at CXF RequestHandlers and set different Consume annotations in Servicebean like below.

//RequestHandler
public class CommonInInterceptorImpl  implements RequestHandler{
	public Response handleRequest(Message message , ClassResourceInfo resourceClass) {
...
		if ( version != null){
			message.put(Message.CONTENT_TYPE, ""application/json+v2"");
		}
        }
}

//ServiceBean
@Path(PersonService.PERSON_SERVICE_URL)
public class PersonService extends RESTApiHandler{

	public final static String PERSON_SERVICE_URL = ""persons"";

    @GET
    @Path(""/{Id}"")
    @Produces(""application/json;application,v=1"")
    @Consumes(""application/json+v1"")
    public Response getPersonById(@Context Request request, @PathParam(""Id"") String id){
...
    }
    
    @GET
    @Path(""/{Id}"")
    @Produces(""application/json;application,v=2"")
    @Consumes(""application/json+v2"")
    public Response getPersonByIdForV2(@Context Request request, @PathParam(""Id"") String id){
...
    }    

}

Although I wrote methods with different Consumes annotation ( application/json and application/json+v2 ) , request always processed by getPersonById method.
Could you let me know what do I need to execute different method by different mediaType ? 

Thanks
Ducheol
","07/Oct/13 16:33;sergey_beryozkin;Please use PreMatching ContainerRequestFilter too.

CXF RequesHandlers are run after the matching is done; there was some code there to support another method match if Accept values were changed, but in CXF 2.7.6 ad later that code is not there due to ContainerRequestFilter being introduced and Content-Type based re-matching was never supported AFAIK. So, use ContainerRequestFilter :-)","10/Oct/13 19:06;headiron@gmail.com;Hi Sergey.

I test it using PreMatching ContainerRequestFilter, but it doesn't work.

I write Container fileter like below.

@Provider
@PreMatching
public class TFSMContainerRequestFilter implements ContainerRequestFilter {
	public void filter(ContainerRequestContext requestContext)
			throws IOException {
                   ...
                   // Check Content-Type and save the version info to version variable. 
                   if ( version  != null ){
        		MultivaluedMap<String,String> headers = requestContext.getHeaders();
                        List<String> contentType = new ArrayList<String>();
			contentType.add(""application/json+v2"");
                        headers.put(HttpHeaders.CONTENT_TYPE, contentType);
                   }
                   ....
        }

But there request is coming to ""application/json""  instead of ""application/json+v2"".

When I review ContainerRequestContextImpl.getHeaders(), I realize that header can't be updated by above way.

public class ContainerRequestContextImpl extends AbstractRequestContextImpl 
    implements ContainerRequestContext {
    ...
    @SuppressWarnings(""unchecked"")
    public MultivaluedMap<String, String> getHeaders() {
        h = null;
        return new MetadataMap<String, String>(
            (Map<String, List<String>>)m.get(Message.PROTOCOL_HEADERS), false, false, true);
    }
}

Could you let me know how I can update headers ( especially Content-Type ) at ContainerRequestFilter ? ","14/Oct/13 12:40;sergey_beryozkin;Hi, can you give it one more try please. As far as I recall now, ""application/json"" and ""application/json+something"" are considered compatible, in fact I believe the typical pattern is to set a format (json, xml, etc) as a second value after ""+"", example, application/atom+xml, application/bar+json, etc, so try ""application/json"" and ""application/v1+json"".","14/Oct/13 12:43;sergey_beryozkin;Also, FYI, setting Content-Type as a List also works for me","15/Oct/13 10:30;sergey_beryozkin;Hi Again; actually you may be right, there was an issue resolved in CXF 2.7.7 to do with PreMatching container filters not able to set Content-Type or Accept. So first, try CXF 2.7.7, and if the method resolution is still not affected, then try changing the media types as suggested in my last comment, should work in the end","15/Oct/13 18:13;headiron@gmail.com;Hi Sergey.

Thanks for quick response.
I confirm that PreMatching container filters update headers at 2.7.7 & 2.7.6.
Problem is two things.

1. Request isn't forwarded for different method.
    I test it using 'Content-Type' header instead of using PreMatching container filters and found that request isn't forwarded to right methods.
    Below is my service bean which has multiple method for Get Request with different Consumes annotation.

    @GET
    @Path(""/{Id}"")
    @Produces(""application/v1+json"")
    @Consumes(""application/v1+json"")    
    public Response getPersonById(@Context Request request, @PathParam(""Id"") String id){
    	PersonVO personVO = personManager.getPerson(id);
    	if ( personVO == null)
    		throw new ElementNotFoundException(""There isn't a Person that has ""+id+"" Id.Please check and try again."");
    	Person person = convertToApiObj(personVO);
    	ETagHelper eTagHandler = new ETagHelper(person);
    	return helper.generateEntityReadData(request, person, eTagHandler);
    	
    }

    @GET
    @Path(""/{Id}"")
    @Produces(""application/v2+json"")
    @Consumes(""application/v2+json"")    
    public Response getPersonById2(@Context Request request, @PathParam(""Id"") String id){
    	PersonVO personVO = personManager.getPerson(id);
    	if ( personVO == null)
    		throw new ElementNotFoundException(""There isn't a Person that has ""+id+"" Id.Please check and try again."");
    	Person person = convertToApiObj(personVO);
    	ETagHelper eTagHandler = new ETagHelper(person);
    	return helper.generateEntityReadData(request, person, eTagHandler);
    	
    }
    
    When I execute it , getPersonById method is always invoked.
    I think there is a bug on choosing method section.

2. There isn't body writer for above header.
For the above Produces annotaction, I got a below errors at console.

Oct 15, 2013 2:05:02 PM org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor writeResponseErrorMessage
WARNING: No message body writer has been found for response class Person.

It seems that CXF can't process above Content-Type ( application/v2+json ) 

Thanks
Ducheol","15/Oct/13 18:19;headiron@gmail.com;FYI, We are using Jackson for JSON marshal/unmarshal.

    	<jaxrs:providers>
	
  			<bean class=""org.codehaus.jackson.jaxrs.JacksonJsonProvider"" />
...
  			<ref bean=""preProcessInterceptor""/>  			
  			<ref bean=""inInterceptorSecurity""/>
        	<ref bean=""inInterceptorLogging""/>
","18/Oct/13 11:51;sergey_beryozkin;Default CXF JSONProvider listens on application/json only by default, I've relaxed it to also support application/*+json composite media types by default too, but it is possible to configure it with a list of types, example, 

{code:xml}
<util:list id=""jsonTypes"">
    <value>application/json</value>
    <value>application/*+json</value>
 </util:list>
<bean id=""jsonProvider"" class=""org.apache.cxf.jaxrs.provider.json.JSONProvider"">
      <property name=""produceMediaTypes"" ref=""jsonTypes""/>
      <property name=""consumeMediaTypes"" ref=""jsonTypes""/>
  </bean>
{code} 

I'm not sure how to get JacksonJsonProvider configured, please check their archives, if you find out how - let us know please, I'll update the docs. If that is not possible then create a simple custom provider implementing MessageBodyWriter (and MessageBodyReader if needed) which will delegate directly  to an instance of JacksonJsonProvider, but your custom provider will have Produces and Consumes annotations with application/json  & application/*+json:

{code:java}
@Produces({""application/json"", ""application/*+json"" })
@Consumes({""application/json"", ""application/*+json"" })
{code} 

Re the other problem: I'll reopen the issue and investigate","18/Oct/13 16:21;sergey_beryozkin;Confirmed it works in CXF 2.7.7:
http://svn.apache.org/r1533535",,,,,,,,,,,,,,,,,,,,,,
Add DecoupledFaultHandler for request-response message when decoupled fault is supported,CXF-5307,12671237,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,29/Sep/13 05:05,26/Nov/13 17:40,14/Mar/19 02:30,29/Sep/13 05:16,2.6.9,2.7.7,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,Core,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,350943,,,2013-09-29 05:05:09.0,,,,,,0|i1oicf:,351234,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Soap body in header,CXF-5306,12670904,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,matej,matej,27/Sep/13 11:34,26/Nov/13 17:40,14/Mar/19 02:30,08/Oct/13 21:22,2.7.6,,,,,,,2.6.11,2.7.8,,,,,,,0,,,,,,,,"I am using apache-cxf-2.7.6. I generated soap client from wsdl. In Java code I set values for the request object and send request. Soap xml request is not valid. In the header is request body and soap:body is empty. This is generated xml which is not valid:
{code:xml}
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Header>
      <ns7:MetaHeader xmlns:ns12=""http://www.csob.cz/common/v1"" xmlns:ns11=""http://www.csob.cz/infrastructure/MessageDelivery/SendSMS/res/v1"" xmlns:ns10=""http://www.csob.cz/infrastructure/MessageDelivery/SendSMS/req/v1"" xmlns:ns9=""http://www.csob.cz/infrastructure/SMS/v1"" xmlns:ns8=""http://www.csob.cz/infrastructure/SMS/core"" xmlns:ns7=""http://ed6.kbc.com/metaheader.1"" xmlns:ns6=""http://www.csob.cz/common/core"" xmlns:ns5=""http://services.csob.cz/base_v1"" xmlns:ns4=""http://www.csob.cz/infrastructure/MessageDelivery/SendEmail/res/v1"" xmlns:ns3=""http://www.csob.cz/infrastructure/Email/v1"" xmlns:ns2=""http://www.csob.cz/infrastructure/MessageDelivery/SendEmail/req/v1"" xmlns=""http://www.csob.cz/infrastructure/Email/core"">
         <ns2:EmailToFields>
            <EmailToField>test@test.sk</EmailToField>
         </ns2:EmailToFields>
         <EmailSubject>test</EmailSubject>
         <EmailFromField>test@test.sk</EmailFromField>
         <ns2:EmailBody>Hello World!</ns2:EmailBody>
         <DeliveryPriority>1</DeliveryPriority>
      </ns7:MetaHeader>
   </soap:Header>
   <soap:Body/>
</soap:Envelope>
{code}

Here is the code how I am sending request:
{code:java}
      MessageDelivery messageDelivery = new MessageDelivery();
			SendEmailPortType client = messageDelivery.getSendEmailPortTypeBindingPort(); 

			org.apache.cxf.endpoint.Client clientEnd = ClientProxy.getClient(client);
			clientEnd.getOutInterceptors().add(new MyLogInterceptor());
			
			SendEmailReq sendEmailReq = new SendEmailReq();
			sendEmailReq.setEmailSubject(""test"");
			sendEmailReq.setEmailBody(body);
			sendEmailReq.setEmailFromField(""test@test.sk"");
			sendEmailReq.setEmailToFields(new SendEmailReq.EmailToFields());
			sendEmailReq.getEmailToFields().getEmailToField().add(""test@test.sk"");
			sendEmailReq.setDeliveryPriority(new Integer(1));
      
			client.sendEmailV1(sendEmailReq);
{code}
",,,,,,,,,,,,,,,,,,,,27/Sep/13 13:13;matej;MessageDelivery.wsdl;https://issues.apache.org/jira/secure/attachment/12605439/MessageDelivery.wsdl,07/Oct/13 14:14;matej;MessageDelivery.zip;https://issues.apache.org/jira/secure/attachment/12607157/MessageDelivery.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-09-27 17:27:10.443,,,no_permission,,Unknown,,,,,,,,,,,350733,,,Tue Oct 08 20:30:25 UTC 2013,,,,,,0|i1oh1z:,351024,,,,,,,,"27/Sep/13 11:37;matej;I imported same wsdl to the new project in SOAPUI. It creates correct empty request. So I am wonder why cxf putting body to the soap header.
I tried also older versions of cfx with the same result.",27/Sep/13 13:13;matej;Here is the wsdl file.,"27/Sep/13 17:27;dkulp;
We'd probalby need to see the full test case with all the schemas and such.

In anycase, can you try generating the client with the ""-exsh true"" flag added to the wsdl2java?   That should change the method signature a bit to reflect the required SOAP header. The soap binding in the wsdl describes a header (MetaHeader element) so it looks like it's using the parameter for that and then there isn't anything left for the body.  It SHOULDN'T be doing that which is why I'd like a full test case, but adding the additional flags to wsdl2java may provide a workaround for you.","07/Oct/13 08:22;matej;I tried that. I get this message:

WSDLToJava Error: Parameter: part1 already exists for method sendEmailV1 but of type cz.csob.infrastructure.messagedelivery.sendemail.req.v1.SendEmailReq instead of com.kbc.ed6.metaheader.MetaHeader.  Use a JAXWS/JAXB binding customization to rename the parameter.","07/Oct/13 14:14;matej;Here is wsdl with all xsd schemas. I tried also wsimport with autoNameResolution with the same result. 
wsimport -keep -verbose -B-XautoNameResolution -extension MessageDelivery.wsdl","08/Oct/13 19:46;dkulp;
You can use CXF's wsdl2java tool:

wsdl2java  -exsh true -autoNameResolution  MessageDelivery.wsdl

and that generates fine.

","08/Oct/13 20:30;dkulp;Slightly amused by this bug.  :-)

CXF and the JAX-WS reference implementation are BOTH outputting the data in the soap header.   However, it definitely is a bug (in both implementations).   I'm testing a fix now.

If you can change the WSDL, you can get it to work for both implementations.    If you change:
{code:xml}
<message name=""Meta"">
		<part name=""part1"" element=""meta:MetaHeader""/>
	</message>
{code}

to something like:

{code:xml}
<message name=""Meta"">
		<part name=""meta"" element=""meta:MetaHeader""/>
	</message>
{code}

and then also update the ""part"" attribute on the soap:header lines to match the name, then it should work fine.  That also has NO effect of the on-the-wire format and is thus completely compatible.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STSClient does not send Renewing element in renewal RequestSecurityToken message,CXF-5305,12670857,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,ethan.wallwork,ethan.wallwork,27/Sep/13 00:10,26/Nov/13 17:39,14/Mar/19 02:30,27/Sep/13 15:10,2.7.7,,,,,,,2.7.8,,,,STS,,,,0,,,,,,,,"STSClient does not add a Renewing element to the RequestSecurityToken message when performing a renew, regardless of the value of sendRenewing (or allowRenewing or allowRenewingAfterExpiry).

This does not prevent prevent a renewal from being renewed because that is allowed by default, but it does prevent a renewal from being renewed after expiry (OK=true attribute) when that option is enabled.

The client is also unable to prevent a renewal from being renewable (using the Allow=false attribute) however I'm not sure the client would ever attempt that anyway since the same restriction would be on the originally issued token so you would never get that far.

See AbstractSTSClient#renew(SecurityToken) line 955 which I believe needs code similar to AbstractSTSClient#issue(String,String,String,String) lines 745-755.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,350686,,,2013-09-27 00:10:09.0,,,,,,0|i1ogrj:,350977,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FiqlParser fails to parse an expression with child properties when SearchBean is used,CXF-5299,12670252,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,nikolayb,nikolayb,24/Sep/13 11:07,26/Nov/13 17:40,14/Mar/19 02:30,24/Sep/13 14:23,2.7.6,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"I created a test below for that.

public class FiqlParserTest {
    private FiqlParser<SearchBean> parser = new FiqlParser<SearchBean>(SearchBean.class);

       @Test
       public void childPropertiesWithSearchBean() throws SearchParseException {
           parser.parse(""header.name==king"");
       }
}

I fixed it my project using copy of class FiqlParser with changes below. 

I replaced code in method ""private Object parseType(...)""
from
        int index = setter.indexOf(""."");
to
        int index = -1;
        if(!this.conditionClass.equals(SearchBean.class))
            index = setter.indexOf(""."");

It's work for me.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-24 14:23:34.379,,,no_permission,,Unknown,,,,,,,,,,,350081,,,Tue Sep 24 14:23:34 UTC 2013,,,,,,0|i1od27:,350375,,,,,,,,24/Sep/13 14:23;sergey_beryozkin;thanks for a patch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuth2ClientUtils can not get access token if custom params contain semicolon or no token_type param is available,CXF-5296,12670140,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,23/Sep/13 21:15,26/Nov/13 17:40,14/Mar/19 02:30,23/Sep/13 21:32,,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,JAX-RS Security,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,349970,,,2013-09-23 21:15:28.0,,,,,,0|i1oce7:,350267,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XMLFaultOutInterceptor only marshals first detail element,CXF-5294,12670015,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jensgr@gmx.net,jensgr@gmx.net,23/Sep/13 09:58,26/Nov/13 17:40,14/Mar/19 02:30,26/Sep/13 21:11,2.7.6,,,,,,,2.6.11,2.7.8,,,Core,,,,0,,,,,,,,The XMLFaultOutInterceptor only writes out the first element of the fault detail. If a fault contains more complex fault detail the remaining information is lost.,,,,,,,,,,,,,,,,,,,,26/Sep/13 07:32;jensgr@gmx.net;xml-fault-detail-2.4.6.diff;https://issues.apache.org/jira/secure/attachment/12605202/xml-fault-detail-2.4.6.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,349845,,,Thu Sep 26 07:32:14 UTC 2013,,,,,,0|i1obmn:,350143,,,,,,,,26/Sep/13 07:32;jensgr@gmx.net;Possible fix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WADLGenerator misses Description annotations if they are bound to interfaces,CXF-5289,12669273,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,18/Sep/13 15:41,26/Nov/13 17:40,14/Mar/19 02:30,24/Sep/13 11:11,,,,,,,,2.6.11,2.7.8,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,349205,,,2013-09-18 15:41:58.0,,,,,,0|i1o7of:,349503,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE at org.apache.cxf.maven_plugin.ClassLoaderSwitcher.restoreClassLoader,CXF-5287,12669198,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,nickolay_martinov,nickolay_martinov,18/Sep/13 07:53,26/Nov/13 17:40,14/Mar/19 02:30,26/Sep/13 21:10,2.7.6,,,,,,,2.6.11,2.7.8,,,Tooling,,,,0,patch,,,,,,,"Maven plugin throws exception when running build.

{noformat}
Failed to execute goal org.apache.cxf:cxf-java2ws-plugin:2.7.6:java2ws (Generate UtafService.wsdl) on project temip-ca-alarms-from-temip-utaf-bc: Execution Generate UtafService.wsdl of goal org.apache.cxf:cxf-java2ws-plugin:2.7.6:java2ws failed. NullPointerException -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.cxf:cxf-java2ws-plugin:2.7.6:java2ws (Generate UtafService.wsdl) on project temip-ca-alarms-from-temip-utaf-bc: Execution Generate UtafService.wsdl of goal org.apache.cxf:cxf-java2ws-plugin:2.7.6:java2ws failed.
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:225)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.maven.plugin.PluginExecutionException: Execution Generate UtafService.wsdl of goal org.apache.cxf:cxf-java2ws-plugin:2.7.6:java2ws failed.
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:110)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	... 19 more
Caused by: java.lang.NullPointerException
	at org.apache.cxf.maven_plugin.ClassLoaderSwitcher.restoreClassLoader(ClassLoaderSwitcher.java:120)
	at org.apache.cxf.maven_plugin.Java2WSMojo.execute(Java2WSMojo.java:233)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	... 20 more
{noformat}

According to source it fails when it tries to restore system properties. This can only happen when switchClassLoader() was never called.",,,,,,,,,,,,,,,,,,,,18/Sep/13 10:17;nickolay_martinov;CXF-5287-fix.patch;https://issues.apache.org/jira/secure/attachment/12603804/CXF-5287-fix.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,349130,,,Wed Sep 18 10:17:45 UTC 2013,,,,,,0|i1o77r:,349428,,,,,,,,"18/Sep/13 10:16;nickolay_martinov;Ok, the issue is that there is exception in try block of execute() and during the cleanup in finally we throw another exception. In fact, switch is inside try but release that does cleanup in finally is not prepared for partially constructed state.",18/Sep/13 10:17;nickolay_martinov;Attached patch to be prepared for partially constructed state as switch is inside try.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lengthy done-file names raise mojo exception,CXF-5286,12669193,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,eweinell,eweinell,18/Sep/13 06:48,02/Sep/17 07:18,14/Mar/19 02:30,26/Sep/13 21:08,2.7.6,2.7.7,,,,,,2.7.8,,,,,,,,0,,,,,,,,"Done-file names can become quite long, even going beyond the allowed 256 chars on common file systems. Up until (at least) cxf-2.2, the resulting IOException has been logged as warning with no further consequences. In the most current releases, a MojoExecutionException is raised besides that. 

C.f. {{org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.generate(GenericWsdlOption, Bus, Set<URI>)}}

Is this intended behavior? 
* If so, I suggest an improved way to shorten these filenames, as the current algorithm just strips the project directory if part of the file path. I would prefer stripping common prefixes of these paths instead. I can provide a 2-line patch if desired. 
* If the behavior is not intended, I would argue raising this exception - which in addition differs from its super-class implementation, should be reverted. 

Best regards,
 Erhard Weinell ",,,,,,,,,,,,CXF-5403,CXF-5397,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-26 21:08:37.346,,,no_permission,,Unknown,,,,,,,,,,,349125,,,Thu Sep 26 21:08:37 UTC 2013,,,,,,0|i1o76n:,349423,,,,,,,,"26/Sep/13 21:08;dkulp;
Changed to using an SHA1 of the wsdl URL as the filename.  That should solve a bunch of potential issues.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.UnsupportedOperationException in org.apache.cxf.jaxrs.model.wadl.WadlGenerator,CXF-5285,12669073,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,skbacher,skbacher,17/Sep/13 18:47,27/Sep/13 18:18,14/Mar/19 02:30,17/Sep/13 20:12,2.7.6,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"Cause:
======
WadlGenerator.getLocationsMap() (line: 1405) returns an immutable map:
 return Collections.emptyMap();

.putAll(..) is then called on this map in WadlGenerator.StringSchemaWriter.StringSchemaWriter(...) (line: 1394):
locs.putAll(getLocationsMap(source, ""include"", links, ui));


Proposed Solution:
==================
In WadlGenerator.getLocationsMap() (line: 1405):
return new HashMap<String, String>() ;


Stacktrace:
===========

2013-09-17 17:50:15,578 WARN  [http-bio-exec-5] [110.121] [org.apache.cxf.jaxrs.utils.ResourceUtils] No resource wadl/partners.wadl is available
2013-09-17 17:50:15,729 ERROR [http-bio-exec-5] [110.121] [com..core.infra.svc.api.ws.ExceptionMapper] Error in REST web service
javax.ws.rs.WebApplicationException: java.lang.UnsupportedOperationException
	at com..core.infra.svc.api.ws.ExceptionMapper.toResponse(ExceptionMapper.java:54)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.convertFaultToResponse(JAXRSUtils.java:1581)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.convertExceptionToResponseIfPossible(JAXRSInInterceptor.java:245)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:105)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:223)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:203)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:159)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:286)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:211)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at com..core.infra.web.common.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:136)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at com..core.infra.base.accesslog.AccessLogFilter.doFilter(AccessLogFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.valves.CometConnectionManagerValve.invoke(CometConnectionManagerValve.java:186)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)
	at org.apache.catalina.authenticator.SingleSignOn.invoke(SingleSignOn.java:314)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1023)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.UnsupportedOperationException
	at java.util.AbstractMap.put(AbstractMap.java:186)
	at java.util.AbstractMap.putAll(AbstractMap.java:256)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter.<init>(WadlGenerator.java:1394)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.createSchemaWriter(WadlGenerator.java:1349)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.handleRequest(WadlGenerator.java:224)
	at org.apache.cxf.jaxrs.impl.RequestPreprocessor.handleMetadataRequest(RequestPreprocessor.java:216)
	at org.apache.cxf.jaxrs.impl.RequestPreprocessor.checkMetadataRequest(RequestPreprocessor.java:200)
	at org.apache.cxf.jaxrs.impl.RequestPreprocessor.preprocess(RequestPreprocessor.java:84)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:117)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:101)
	... 57 more



",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-17 20:12:57.472,,,no_permission,,Novice,,,,,,,,,,,349005,,,Wed Sep 18 05:35:24 UTC 2013,,,,,,0|i1o6fz:,349303,,,,,,,,"17/Sep/13 20:12;sergey_beryozkin;Fixed, thanks",18/Sep/13 05:35;skbacher;Thank you!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF clients do not work in Eclipse RCP: Exception says BindingProvider interface not visible,CXF-5284,12668980,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,17/Sep/13 10:42,27/Sep/13 18:18,14/Mar/19 02:30,18/Sep/13 11:45,2.7.7,,,,,,,2.7.7,3.0.0-milestone1,,,Core,,,,0,,,,,,,,"When using CXF in Eclipse RCP there is there is a problem with CXF clients.

When CXF creates the proxy using the ProxyHelper class it fails with the message that BindingProvider interface is not visible.

In fact the BindingProvider interface is visible but the class created in ProxyHelper is not the same as the class BindingProvider.class given to the ProxyHelper.

I was not able to reproduce the error outside of Eclipse RCP. I also tested with an extended DOSGi distro on pure Equinox without karaf. There like in Karaf the error did not happen.

We made sure that the package javax.xml.ws is only exported once and that it is the version from servicemix bundles.

When the error happens it seems that the incorrect BindingProvider.class is loaded by classloader null (the bootstrap classloader). So it seems on RCP the BindingProvider interface is also coming from the bootstrap classloader under these circumstances ... no idea why.

In any case until recently we were able to work around the issue by importing the package javax.xml.ws in the bundle containing the service interface. This made sure that the classloader of this bundle was able to see the class and could be used on its own. 
Without the import the package was not visible to the bundle classloader of the user bundle and a proxy class loader was used and the problem occured.

So I see two things we can do:
1. Undo the change to move BindingProvider.class to the front of the interfaces in the call to ProxyHelper. This does not fully solve the problem but will enable the workaround again.
2. Find the root problem which might be in equinox or even in the rcp code.

In general it would also be great if we could avoid to create a proxy with interfaces that are invisible to the bundle but I am not sure if this can be done at all.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,348912,,,2013-09-17 10:42:21.0,,,,,,0|i1o5vj:,349210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sts: NoClassDefFoundError in LoggerListener,CXF-5283,12668965,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,17/Sep/13 08:58,27/Sep/13 18:18,14/Mar/19 02:30,17/Sep/13 13:06,2.7.7,,,,,,,2.7.7,3.0.0-milestone1,,,STS,,,,0,,,,,,,,"LoggerListener has an optional dependency to the servlet spec 3.0.
This spec defines javax.servlet.http in version 2.6.
So the import in sts-core uses version [2.6,3).

Karaf 2.3.x only offers the servlet spec 2.5 jar which exports the package as 2.5.

So the optional import is not found and so we get the error.

Inside LoggerListener we only check for NPE and for Exception. As this is an Error it completely breaks the execution.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,348897,,,Tue Sep 17 13:06:08 UTC 2013,,,,,,0|i1o5s7:,349195,,,,,,,,17/Sep/13 13:06;chris@die-schneider.net;Fix is committed but on the wrong issue number CXF-5284,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java may fail to extract the wsma:Action attribute value,CXF-5280,12668368,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,12/Sep/13 21:35,27/Sep/13 18:18,14/Mar/19 02:30,13/Sep/13 09:54,2.6.9,2.7.6,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,Tooling,,,,1,,,,,,,,"This problem occurs if the wswa:Action attribute is used in your wsdl and the value of the attribute starts with one of the namespace prefixes used in the document. For example, the following wsdl document sets wswa:Action with value ""http://cxf.apache..."" and this ""http"" happens to be declared as a namespace prefix.


<wsdl:definitions xmlns=""http://schemas.xmlsoap.org/wsdl/""
    ...
    xmlns:wswa=""http://www.w3.org/2006/05/addressing/wsdl""
    xmlns:http=""http://schemas.xmlsoap.org/wsdl/http/""
    ...>
    <wsdl:portType ...>
        <wsdl:operation ...>
            <wsdl:input name=""greetMeRequest"" message=""tns:greetMeRequest"" 
                        wswa:Action=""http://cxf.apache.org/w2j/hello_world_soap_http/greetMe""/>

This results in the incorrectly extracted action value, which corresponds to the part following the colon ""//cxf.apache.org/w2j/hello_world_soap_http/greetMe"".

reported in users@cxf
http://cxf.547215.n5.nabble.com/wsdl2java-issue-td5733906.html",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,348302,,,2013-09-12 21:35:43.0,,,,,,0|i1o23r:,348598,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STSClient may not be caching tokens long enough when renewal after expiry is allowed,CXF-5279,12668339,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,ethan.wallwork,ethan.wallwork,12/Sep/13 19:38,16/Feb/15 16:09,14/Mar/19 02:30,27/Jan/15 15:55,2.7.6,,,,,,,3.0.4,,,,STS,,,,0,,,,,,,,"It seems that the STSClient caches tokens only for the duration where they were valid which prevents renewals after expiry.  

In cases where renewal after expiry is allowed it is possible to renew a token after this time.  The EHCacheTokenStore calculates the TTL based on the Lifetime reported in the STS response, which in turn is calculated from the conditions on the SAML assertion.  The token will expire from the cache when the time is up, and this the STSClient can't use it to issue a renew request even if the STS allows renewals after expiry.

Testing this was a bit tricky because it is based on caching and timeouts but I'm reasonably sure this is what's going on.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-13 15:23:10.028,,,no_permission,,Unknown,,,,,,,,,,,348273,,,Tue Jan 27 15:55:13 UTC 2015,,,,,,0|i1o1xj:,348569,,,,,,,,"13/Sep/13 15:23;coheigea;
I'm disinclined to fix this issue for the moment. The working assumption is that the EHCacheTokenStore only stores valid tokens. If this behaviour were to change it might have an impact on existing code. If you need to support this behaviour I suggest plugging in your own TokenStore implementation instead.

Colm.","27/Jan/15 15:55;coheigea;
Fixed in 3.0.x. The token cache time is now independent on when the token actually expires.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STS Renew returns incorrect lifetime,CXF-5278,12668337,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,ethan.wallwork,ethan.wallwork,12/Sep/13 19:33,27/Sep/13 18:18,14/Mar/19 02:30,13/Sep/13 12:44,2.7.6,,,,,,,2.6.10,2.7.7,,,STS,,,,0,,,,,,,,"SAMLTokenRenewer#renewToken sets the lifetime attribute of the TokenRenwerResponse to the difference between the NotBefore and NotOnOrAfter attributes of the SAML assertion conditions.  Later the TokenRenewOperation#createREsponse method creates a Lifetime using the current timestamp as the Created value and the current timestamp plus the previously calculated difference as the Expires.

In cases where the NotBefore of the SAML assertion conditions is not the current time this results in an incorrect lifetime in the response from the renew operation.  For example, if the NotBefore is a few minutes in the past to work around systems with clock differences then the lifetime in the response will claim the token expires a few minutes before it actually does.  

This seems to cause issues with caching of tokens on the client side (STSClient) as the token will be cached for a period shorter than it should be.
",,,,,,,,,,,,,,CXF-3932,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,348271,,,2013-09-12 19:33:20.0,,,,,,0|i1o1x3:,348567,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransformOutInterceptor needs to ignore messages with transform.skip property set,CXF-5276,12668289,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,12/Sep/13 15:43,27/Sep/13 18:18,14/Mar/19 02:30,12/Sep/13 16:16,,,,,,,,2.7.7,3.0.0-milestone1,,,Core,,,,0,,,,,,,,"As discussed with Aki, it makes sense to update TransformOutInterceptor to ignore the message if a transform.skip property is set. Example, it can interfere with WSDL payloads.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,348223,,,2013-09-12 15:43:43.0,,,,,,0|i1o1mn:,348519,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when using Kerberos Delegation,CXF-5275,12668218,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,mmusaji,mmusaji,12/Sep/13 08:56,27/Sep/13 18:18,14/Mar/19 02:30,12/Sep/13 14:25,2.6.6,,,,,,,2.6.10,,,,Core,,,,0,,,,,,,,"We are on Jboss 6.1.0 the version of CXF is 2.6.6 and has a bug when delegation is used:

AbstractSpnegoAuthSupplier (v 2.6.6) has this method call:

   [...]
      return getToken(delegatedCred == null ? authPolicy : null, context);
   [...]

here if we have delegatedCred with a value the statment passes null to the method:

   private byte[] getToken(AuthorizationPolicy authPolicy,
                            final GSSContext context) throws GSSException,
        LoginException {
        
        String contextName = authPolicy.getAuthorization();
        if (contextName == null) {
            contextName = """";
        }
        
      [...]
    }

if authPolicy is null (our case) the method throws a NullPointerException.

So I got the fixed AbstractSpnegoAuthSupplier and SpnegoAuthSupplier from cxf 2.7.1 copied/renamed in my project and programmatically set on HTTPConduit:

  [...]
   HTTPConduit http = (HTTPConduit) client.getConduit();
   http.setAuthorization(authorization);
   http.setAuthSupplier(new CustomSpnegoAuthSupplier());
  [...]

And now it works fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-12 09:09:59.207,,,no_permission,,Unknown,,,,,,,,,,,348152,,,Thu Sep 12 14:28:21 UTC 2013,,,,,,0|i1o16v:,348448,,,,,,,,"12/Sep/13 09:09;asoldano;AFAICS this is an issue introduced in [1] and fixed by Colm as part of [2]. The latter commit was not merged to 2.6.x, hence the issue on 2.6.x.

[1] http://svn.apache.org/viewvc?view=revision&revision=1364437
[2] http://svn.apache.org/viewvc?view=revision&revision=1402099","12/Sep/13 09:20;mmusaji;Looks like the fix by Colm was slightly different that the one propose.

http://svn.apache.org/viewvc/cxf/trunk/rt/transports/http/src/main/java/org/apache/cxf/transport/http/auth/AbstractSpnegoAuthSupplier.java?r1=1370142&r2=1402099&pathrev=1402099&diff_format=h","12/Sep/13 14:24;coheigea;
I've merged a fix by just backporting the fix that was made for 2.7.x. Could you confirm that this works for you?

Colm.",12/Sep/13 14:28;mmusaji;This was found in via JBossWS CXF so once we've pulled it in to JBoss and tested I'll let you know if there's any issues. Thanks for the quick response Colm.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE will cause the camel-cxf endpoint start error in blueprint,CXF-5272,12668193,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,12/Sep/13 02:35,27/Sep/13 18:18,14/Mar/19 02:30,12/Sep/13 03:37,,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,Transports,,,,0,,,,,,,,"When I ran some test on the CXF 2.7.7-SNAPSHOT with Camel 2.12.1-SNAPSHOT, I got a test error like this
CxfEndpointBeansTest.testCxfBusConfiguration:97->Assert.assertTrue:41->Assert.fail:88 Should get the fault here
The stack trace of CXF is
{code}
Caused by: java.lang.RuntimeException: Could not process configuration.
	at org.apache.cxf.transport.http.blueprint.HTTPClientPolicyHolder.init(HTTPClientPolicyHolder.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:297)
	at org.apache.aries.blueprint.container.BeanRecipe.invoke(BeanRecipe.java:958)
	at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:712)
	... 60 more
Caused by: java.lang.NullPointerException
	at org.apache.cxf.transports.http.configuration.HTTPClientPolicy.getProxyServerPort(HTTPClientPolicy.java:787)
	at org.apache.cxf.transport.http.blueprint.HTTPClientPolicyHolder.init(HTTPClientPolicyHolder.java:73)
	... 67 more
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,348127,,,Thu Sep 12 03:37:43 UTC 2013,,,,,,0|i1o11b:,348423,,,,,,,,12/Sep/13 02:48;njiang;This issue is introduced by the patch of CXF-5148.,"12/Sep/13 03:37;njiang;Applied patch into trunk, 2.7.x-fixes, and 2.6.x-fixes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Event.CLIENT_CREATED fired too soon,CXF-5271,12668089,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,11/Sep/13 17:46,27/Sep/13 18:18,14/Mar/19 02:30,11/Sep/13 18:56,2.7.6,,,,,,,2.7.7,,,,Core,,,,0,,,,,,,,"
The Event.CLIENT_CREATED event is fired immediately after the call to new ClientImpl.  However, at this stage, the features have not been applied, or the @Interceptor annotations and stuff have not been applied, etc... Basically, the client is not ready.   The even should be moved to after those to match the SERVER_CREATED where it's fired immediately after the applyFeatures() call.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,348023,,,2013-09-11 17:46:45.0,,,,,,0|i1o0e7:,348319,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"XKMS Crypto Client does not check local keystore for ""locate"" if the alias is actually a Subject DN",CXF-5270,12668012,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,11/Sep/13 09:50,27/Sep/13 18:18,14/Mar/19 02:30,11/Sep/13 10:54,,,,,,,,2.7.7,,,,Services,,,,0,,,,,,,,"
The XKMS Crypto provider tries to get a Certificate for the value configured for ""ws-security.encryption.username"". WSS4J treats this as an ""alias"", and the XKMS Crypto Provider first tries to get the Certificate from a local keystore using this, before going off to the XKMS Server. However, if the encryption username is in the form of a Subject DN it will fail to retrieve the certificate locally, and always call out to the XKMS Server.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,347947,,,2013-09-11 09:50:14.0,,,,,,0|i1nzxb:,348243,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Automatic WS-Policy computation should be possible on Dispatch clients without setting operation manually,CXF-5268,12667971,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jpangburn,jpangburn,11/Sep/13 03:27,27/Sep/13 18:18,14/Mar/19 02:30,13/Sep/13 16:42,2.7.6,,,,,,,2.7.7,3.0.0-milestone1,,,WS-* Components,,,,0,Dispatch,patch,WS-Policy,,,,,"If a WSDL contains a WS-Policy with separate policies on the Operation message elements, CXF should compute the correct policy for Dispatch clients by looking at the message content.  It already does this to determine the operation so it can compute the correct WS-Addressing values, if the Dispatch developer does the following:
{code}
disp.getRequestContext().put(""find.dispatch.operation"", Boolean.TRUE);
{code}

So we're already doing that work.  It's a one line fix to update the operation at that time, so that the WS-Policy computation engine can read the correct operation and use that to get the right set of policies from the WSDL to mix together.  I will supply that patch :-) after submitting this issue for it.",Linux,,,,,,,,,,,,,,,,,,,11/Sep/13 03:30;jpangburn;DispatchImpl.java.patch;https://issues.apache.org/jira/secure/attachment/12602509/DispatchImpl.java.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-09-11 15:12:22.846,,,no_permission,,Unknown,,,,,,,,,,,347906,,,Fri Sep 13 16:42:56 UTC 2013,,,,,,0|i1nzof:,348203,,,,,,,,11/Sep/13 03:30;jpangburn;This patch goes on the 2.7.6 release version of DispatchImpl.java.  The full path is apache-cxf-2.7.6-src/rt/frontend/jaxws/src/main/java/org/apache/cxf/DispatchImpl.java,"11/Sep/13 15:12;dkulp;
Arg.... looking at this code, the whole stuff around the ""dispatchToOperation"" setting on the BOP is not thread safe at all.  Worse, if a second request is sent on the dispatch that doesn't match an operation in the wsdl, it would still use the last matched operation.   Digging through this now.  :-(

","11/Sep/13 15:37;dkulp;
This also allows removal of some hacks found in the ws-addressing and soap binding.  Thanks!","11/Sep/13 16:48;jpangburn;Awesome!  From the first time I looked at this code for WS-Addressing use, I wondered about this whole dispatchToOperation thing.  Why not just set the operation itself?  I assumed there was a complicated reason and left it alone.  Great to see you felt like it could just be ripped out altogether!  Good riddance hacks.","13/Sep/13 10:44;asoldano;I'm sorry Dan, but the commit at https://fisheye6.atlassian.com/changelog/cxf?cs=1521906 is causing a regression here when using a Dispatch instance created from an EPR and with addressing enabled (payload mode).
When calling dispatch.invoke(Source) a source with different contents [1] is returned depending on addressing being on or off, while the response message on the wire is the same.
When calling dispatch.invoke(Object) (hence using JAXB) a jaxb exception [2] is thrown during unmarshalling when addressing is enabled. Again, same response messages on the wire with addressing on and off.

[1] looks like the tags of the response wrapper are stripped off
[2] http://jbossws.jboss.org:8180/hudson/job/CXF-CORE-AS-8.0.0-SUN-JDK-6/246/testReport/org.jboss.test.ws.jaxws.jbws2937/JBWS2937TestCase/testCreateDispatchUsingEPRAndJAXBContext/",13/Sep/13 16:42;dkulp;New fix committed.  Verified by Alessio.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Netty Http transport can handler ?wsdl request rightly,CXF-5265,12667768,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,10/Sep/13 09:15,26/Nov/13 17:40,14/Mar/19 02:30,12/Sep/13 02:30,,,,,,,,3.0.0-milestone1,,,,Transports,,,,0,,,,,,,,Current netty server transport cannot handler ?wsdl request rightly.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,347704,,,Thu Sep 12 02:30:25 UTC 2013,,,,,,0|i1nyfz:,348003,,,,,,,,12/Sep/13 02:30;njiang;Applied the patch into trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SiteExporter doesn't replace ""+"" with ""-"" when exporting links to attachemtns",CXF-5264,12667756,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,lukaszlenart,lukaszlenart,10/Sep/13 07:41,10/Apr/17 19:06,14/Mar/19 02:30,10/Sep/13 14:38,,,,,,,,,,,,,,,,0,Confluence,Docs,Site,,,,,"When Confluence page contains link to an image with spaces in the name, all these white spaces will be replaced with ""-"" during exporting. But when a html page is exported with links to the image, the href attribute already contains ""+"" instead of "" "", se SiteExporter must replace these was well.

Patch attached",,,,,,,,,,,,,,,,,,,,10/Sep/13 07:42;lukaszlenart;CXF-5264.patch;https://issues.apache.org/jira/secure/attachment/12602303/CXF-5264.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-09-10 14:38:39.516,,,no_permission,,Unknown,,,,,,,,,,,347692,,,Tue Sep 10 14:38:39 UTC 2013,,,,,,0|i1nydb:,347991,,,,,,,,10/Sep/13 14:38;dkulp;Patch applied (without the import order changes) and new snapshot deployed.  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReaderInterceptor and WriterInterceptor contexts should select new MBR or MBW when possible,CXF-5262,12667599,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,09/Sep/13 15:25,27/Sep/13 18:18,14/Mar/19 02:30,09/Sep/13 15:50,,,,,,,,2.7.7,3.0.0-milestone1,,,,,,,0,,,,,,,,"Writer or Reader interceptors wrap MessageBodyReader or MessageBodyWriter. Interceptors can change the properties such as content type or entity class that these wrapped providers support, if it happens and new properties are not supported by the wrapped providers then contexts should try and select new providers",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,347536,,,2013-09-09 15:25:12.0,,,,,,0|i1nxen:,347835,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XKMS-client should not contain CryptoProviderFactory interface,CXF-5260,12667534,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,09/Sep/13 09:05,27/Sep/13 18:18,14/Mar/19 02:30,09/Sep/13 13:57,,,,,,,,2.7.7,3.0.0-milestone1,,,XKMS,,,,0,,,,,,,,"Currently the xkms-client exports the CryptoproviderFactory. As a pure client module it should not do that. We should move the package to common or have a separate CryptoProviderFactory API module.

I opt to the first solution as it is simpler.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,347471,,,2013-09-09 09:05:56.0,,,,,,0|i1nx07:,347770,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XKMS client does not start in Eclipse RCP,CXF-5259,12667527,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,09/Sep/13 08:03,27/Sep/13 18:18,14/Mar/19 02:30,10/Sep/13 14:08,,,,,,,,2.7.7,3.0.0-milestone1,,,XKMS,,,,0,,,,,,,,"When starting xkms-client in Eclipse RCP there is an exception that the javax.xml.BindingProvider interface is not visible.

The error is a bit misleading. The BundleDelegatingClassloader sees the interface but loads it from a different classloader than the interface supplied to ProxyHelper by the JAXWS frontend.

The interface supplied by JAXWS comes from:
org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader@11b289f[org.apache.servicemix.specs.jaxws-api-2.2:2.2.0(id=72)]
This looks correct.

The interface from the BundleDelegatingClassloader has the Classloader null. The javadoc explains that this means it comes from the bootstrap classloader.

The error may be related to my recent change to ProxyHelper. A workaround is to add the javax.xml package to the imports of xkms-client. 

Strangely the error only happens in Eclipse RCP buit not in karaf and not in pure equinox based on an extended DOSGi distro.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,347464,,,2013-09-09 08:03:47.0,,,,,,0|i1nwyn:,347763,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Return type list of a typed type, e.g. List<Type<Typee>>, leads to ClassCastException",CXF-5258,12667520,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,kai.stapel,kai.stapel,09/Sep/13 06:54,26/Nov/13 17:40,14/Mar/19 02:30,19/Nov/13 20:09,2.7.6,,,,,,,2.6.11,2.7.8,,,JAXB Databinding,,,,1,,,,,,,,"If you use a list of a typed type as the return type (yes, a lot of types ;) ) in a CXF service you will get a
{code}
java.lang.ClassCastException: java.util.ArrayList cannot be cast to some.class.Name
{code}

exception.

I attached a small example showing the problem for CXF 2.7.6.

I'm not quite sure if this really is a CXF JAXBDatabinding problem or if it is caused by something else.
",,,,,,,,,,,,,,,,,,,,09/Sep/13 06:57;kai.stapel;cfx-list-typed-type.zip;https://issues.apache.org/jira/secure/attachment/12602097/cfx-list-typed-type.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-09-23 10:18:52.683,,,no_permission,,Unknown,,,,,,,,,,,347457,,,Mon Sep 23 10:18:52 UTC 2013,,,,,,0|i1nwx3:,347756,,,,,,,,09/Sep/13 06:57;kai.stapel;Attached sample maven (Eclipse) project which will show the problem when running the server (e.g. in a Tomcat) and then executing the client {{FooClient}}.,"23/Sep/13 10:18;nine;Same problem here in 2.5.2, 2.5.6, 2.5.11 versions.

Possible workaround for this problem is excluding asm.jar from project dependencies :/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-rt-transports-jms jms expiration is not set in JMSUtils.setJMSMessageHeaderProperties(),CXF-5257,12667446,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,medecigo3,medecigo3,07/Sep/13 11:37,27/Sep/13 18:18,14/Mar/19 02:30,09/Sep/13 17:24,2.3.9,2.7.6,,,,,,2.6.10,2.7.7,,,Transports,,,,0,easyfix,,,,,,,"When configuring a JaxWsProxyFactoryBean client with a JMSConduit either programmatically, or via spring configuration, the JMSTimeToLive header property is not set. 


Java code: 

JMSConfiguration jmsConfig =  new JMSConfiguration();			
JNDIConfiguration jndiConfig = new JNDIConfiguration();
JndiTemplate jndiTemplate = new JndiTemplate();
Properties env = new Properties();
JMSConfigFeature jmsFeature = new JMSConfigFeature();
List <Feature> featureList= new ArrayList <Feature>();

env.put(Context.PROVIDER_URL, JMS_BROKER_URL);
env.put(Context.INITIAL_CONTEXT_FACTORY, INITIAL_CONTEXT_FACTORY);
jndiTemplate.setEnvironment(env);
jndiConfig.setJndiConnectionFactoryName(CONNECTION_FACTORY_NAME);			
jndiConfig.setEnvironment(env);		
jmsConfig.setJndiTemplate(jndiTemplate);
jmsConfig.setJndiConfig(jndiConfig);
jmsConfig.setTimeToLive(TIME_TO_LIVE);
jmsConfig.setTargetDestination(JMS_DESTINATION);
jmsConfig.setReplyDestination(JMS_REPLY_DESTINATION);			
jmsFeature.setJmsConfig(jmsConfig);

featureList.add(jmsFeature);			
proxyFactoryProto.setFeatures(featureList);		

proxyFactoryProto.create();

or via spring:


<bean id=""proxyFactoryProto"" class=""org.apache.cxf.jaxws.JaxWsProxyFactoryBean"">
	<property name=""serviceClass"" value=""com.myservice.HelloWorld""/>
	<property name=""transportId"" value=""#{T(org.apache.cxf.transport.jms.spec.JMSSpecConstants).SOAP_JMS_SPECIFICATION_TRANSPORTID}""></property>
	
			
	<property name=""features"">
		<list>
			<ref bean=""jmsConfigFeature""/>
		</list>		
	</property>
</bean>
		


<bean id=""jmsConfigFeature"" class=""org.apache.cxf.transport.jms.JMSConfigFeature"">
	<property name=""jmsConfig"" ref=""jmsConfig""/>		
	
</bean>

<bean id=""jmsConfig"" class=""org.apache.cxf.transport.jms.JMSConfiguration"">
	<property name=""connectionFactory"" ref=""connectionFactory""/>    	
	<property name=""timeToLive"" value=""5000""/>
	<property name=""targetDestination"" value=""service.hello""/>
	<property name=""replyDestination"" value=""service.hello.reply""/>    	
</bean>


To fix it simply uncomment the following code at org.apache.cxf.transport.jms.JMSUtils.setJMSMessageHeaderProperties()

//if (messageProperties.isSetTimeToLive()) {
//	jmsMessage.setJMSExpiration(expiration);
// }

and fix with:

if (messageProperties.isSetTimeToLive()) {      
  	    jmsMessage.setJMSExpiration(messageProperties.getJMSExpiration());
}
","CXf client frontends cxf-rt-frontend-jaxws, cxf-rt-transports-jms version 2.7.5",14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,347383,,,2013-09-07 11:37:33.0,,,,,,0|i1nwgn:,347682,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullpointerException SOAPHandler<SOAPMessageContext>.getHeader(),CXF-5256,12667434,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,sandor,sandor,07/Sep/13 03:16,14/Sep/13 20:47,14/Mar/19 02:30,14/Sep/13 20:29,2.7.6,,,,,,,Invalid,,,,JAX-RS,,,,0,,,,,,,,"NPE exception thrown, when service called.","Windows 7
Eclipse Juno
Tomcat 6.0.32/Tomcat 7.0.21
",,,,,,,,,,,,,,,,,,,07/Sep/13 03:30;sandor;WebServiceGeneratedByEclipse.zip;https://issues.apache.org/jira/secure/attachment/12601965/WebServiceGeneratedByEclipse.zip,07/Sep/13 03:30;sandor;stackTrace.txt;https://issues.apache.org/jira/secure/attachment/12601964/stackTrace.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-09-09 17:13:25.122,,,no_permission,,Unknown,,,,,,,,,,,347371,,,Sat Sep 14 20:29:26 UTC 2013,,,,,,0|i1nwdz:,347670,,,,,,,,07/Sep/13 03:26;sandor;source,"09/Sep/13 17:13;dkulp;
This is a GET request to the Service, not an actual call to the service which would be a SOAP request which is posted.   An NPE isn't ideal, but in either case a FAULT should be generated as its not a valid request.
","14/Sep/13 20:29;sandor;When service called through the client, the expected exception thrown or no error. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unmarshall exception if a sequence<string> is used in a struct.,CXF-5254,12667286,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,milraun,milraun,06/Sep/13 09:55,26/Nov/13 17:40,14/Mar/19 02:30,10/Oct/13 15:23,2.7.5,2.7.6,,,,,,2.7.8,,,,CORBA Binding,,,,0,,,,,,,,"A server function returns a struct. This struct contains another struct which contains a sequence<string>. Calling this method with a CXF/Corba-Client leads to an unmarshall exception:
{code}
Warnung: Interceptor for {http://cxf.apache.org/bindings/corba/idl/repro}repro.ServiceCORBAService#{http://cxf.apache.org/bindings/corba/idl/repro}getFirst has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Unmarshalling Error: unerwartetes Element (URI:"""", lokal:""item""). Erwartete Elemente sind <{http://cxf.apache.org/bindings/corba/idl/repro}id>,<{http://cxf.apache.org/bindings/corba/idl/repro}s1> 
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:808)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:629)
	at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:157)
	at org.apache.cxf.interceptor.BareInInterceptor.handleMessage(BareInInterceptor.java:138)
...
{code}

(sorry for german).

Using a pure CORBA-client works.

I will attach a repro project to this issue if I have figured out how it works :-)
",JAVA7 / Windows 7,,,,,,,,,,,,,,,,,,,02/Oct/13 12:07;gzres;CXF-5254.diff;https://issues.apache.org/jira/secure/attachment/12606281/CXF-5254.diff,06/Sep/13 09:58;milraun;CorbaBugRepro.zip;https://issues.apache.org/jira/secure/attachment/12601803/CorbaBugRepro.zip,01/Oct/13 20:38;dkulp;patch.txt;https://issues.apache.org/jira/secure/attachment/12606187/patch.txt,,,,,3.0,,,,,,,,,,,,,,,,,,,,2013-09-30 09:08:44.534,,,no_permission,,Unknown,,,,,,,,,,,347223,,,Mon Oct 14 15:08:18 UTC 2013,,,,,,0|i1nvhb:,347522,,,,,,,,"06/Sep/13 09:58;milraun;Repro for this issue.

This repro needs a local namesservice on port 9999.

ReproServiceMainSpring: main program starts the service using Spring.

ReproServiceImpl: the service implementation

ReproClient: a client using CXF
ReproCorbaClient: a client using pure corba","30/Sep/13 09:08;gzres;All the problems are explained with this diff (against {{3.0.0-SNAPSHOT}}):
{noformat}
diff --git a/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/types/CorbaStructEventProducer.java b/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/types/CorbaStructEventProducer.java
index f4b1304..e07975e 100644
--- a/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/types/CorbaStructEventProducer.java
+++ b/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/types/CorbaStructEventProducer.java
@@ -52,8 +52,7 @@ public class CorbaStructEventProducer extends AbstractStartEndEventProducer {
                 && (CorbaHandlerUtils.isPrimitiveIDLTypeSequence(obj))
                 && (!((CorbaSequenceHandler)obj).getElements().isEmpty())
                 && (!CorbaHandlerUtils.isOctets(obj.getType()))) {
-                currentEventProducer =
-                    new CorbaPrimitiveSequenceEventProducer(obj, serviceInfo, orb);
+                currentEventProducer = new CorbaSequenceEventProducer(obj, serviceInfo, orb);
             } else if (obj.getSimpleName().equals(obj.getIdlType().getLocalPart() + ""_f"")) {
                 //some ""special cases"" we need to make sure are mapped correctly
{noformat}

the problem is that when the {{obj}} becomes {{CorbaSequenceHandler}}, the _special case_ creates {{CorbaPrimitiveSequenceEventProducer}} which skips the ""s1"" event for the sequence contained in ""deep"" struct. In consequence JAXB complains about illegal ""item"" element when it expected one of ""deep/id"" and ""deep/s1"" - handler for s1 doesn't produce necessary wrapper element for the sequence.

I've extended the {{repro.idl}}:
{code}
...
	struct Deep2 { 
		Strings s2;
	};
	struct Deeper {
		long id;
		Deep deep; 
		Deep2 deep2; 
	};
{code}
to check what is the _special case_ when struct contains the sequence *only*. In that case ""s2"" element also should cause the event to be produced.

So I think it's enough to create {{CorbaSequenceEventProducer}} instead of {{CorbaPrimitiveSequenceEventProducer}}. Unless someone (""Balaji Ravi""?) explains what was that ""Special case for primitive sequence inside struct"" for (revision 541389 in SVN).

regards
Grzegorz Grzybek",30/Sep/13 20:11;dkulp;That change causes the CORBADocLitClientTypeTest>AbstractTypeTestClient2.testCompoundArray test to fail so something is likely important in there.  Would need to dig in more to figure out what.,"01/Oct/13 08:06;gzres;In {{cxf/testutils/src/main/resources/wsdl/type_test/type_test.xsd}} (not-generated resourece) there is:
{code:xml}
    <complexType name=""CompoundArray"">
        <sequence>
            <element maxOccurs=""unbounded"" minOccurs=""0"" name=""array1""
		     type=""string""/>
            <element maxOccurs=""unbounded"" minOccurs=""0"" name=""array2""
		     type=""string""/>
        </sequence>
    </complexType> 
{code}
which translates to the following JAXB class:
{code:java}
public class CompoundArray {

    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2013-10-01T06:40:47+02:00"", comments = ""JAXB RI v2.2.6"")
    protected List<String> array1;
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2013-10-01T06:40:47+02:00"", comments = ""JAXB RI v2.2.6"")
    protected List<String> array2;
...
{code}

However from Juergen's IDL:
{code}
	typedef sequence<string> Strings; 
	typedef sequence<long> Longs;

	struct Deep { 
		long id;
		Strings s1;
	};
{code}
generated WSDL has:
{code:xml}
      <xs:complexType name=""repro.Strings"">
        <xs:sequence>
          <xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""item"" type=""xs:string""/>
        </xs:sequence>
      </xs:complexType> 
...
      <xs:complexType name=""repro.Deep"">
        <xs:sequence>
          <xs:element name=""id"" type=""xs:int""/>
          <xs:element name=""s1"" type=""repro.Strings""/>
        </xs:sequence>
      </xs:complexType> 
{code}
and *not*:
{code:xml}
      <xs:complexType name=""repro.Deep"">
        <xs:sequence>
          <xs:element name=""id"" type=""xs:int""/>
          <xs:element name=""item"" type=""xs:string"" minOccurs=""0"" maxOccurs=""unbounded""/>
        </xs:sequence>
      </xs:complexType> 
{code}
and the resulting JAXB class is:
{code:java}
public class ReproDeep {

    protected int id;
    @XmlElement(required = true)
    protected ReproStrings s1;
{code}
that's why JAXB expects {{s1}} element and that's why I thought {{CorbaSequenceEventProducer}} would be better than {{CorbaPrimitiveSequenceEventProducer}}.

at runtime however (in {{if ((obj instanceof CorbaSequenceHandler) ...}} condition) I can't however distinguish between these two cases.

I don't think cxf-corbatools-maven-plugin should _unwrap_:
{code:xml}
<xs:element name=""s1"" type=""repro.Strings""/>
{code}
into
{code:xml}
<xs:element name=""item"" type=""xs:string"" minOccurs=""0"" maxOccurs=""unbounded""/>
{code}

When I've changed the generated {{org.apache.type_test.types1.CompoundArray}} (in {{cxf-testutils}}) from:
{code:java}
public class CompoundArray {

    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2013-10-01T06:40:47+02:00"", comments = ""JAXB RI v2.2.6"")
    protected List<String> array1;
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2013-10-01T06:40:47+02:00"", comments = ""JAXB RI v2.2.6"")
    protected List<String> array2;
{code}
to:
{code:java}
public class CompoundArray {

    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2013-10-01T06:40:47+02:00"", comments = ""JAXB RI v2.2.6"")
    @XmlElementWrapper(name = ""array1"")
    protected List<String> array1;
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2013-10-01T06:40:47+02:00"", comments = ""JAXB RI v2.2.6"")
    @XmlElementWrapper(name = ""array2"")
    protected List<String> array2;
{code}
(to simulate explicit complex types for CORBA sequences with {{@XmlElementWrapper}}), both CXF tests and Juergen's case worked fine.

Maybe just change {{CompoundArray}} complex type in {{/cxf-testutils/src/main/resources/wsdl/type_test/type_test.xsd}}, so it refers to explicitely defined complexTypes for both sequences? It doesn't seem to be generated after all...

regards
Grzegorz Grzybek","01/Oct/13 08:25;gzres;One more thing. [CORBA to WSDL/SOAP Interworking (C2WSDL) spec|http://www.omg.org/spec/C2WSDL/] says in chapter ""4.1.7.5 Sequences"":

bq. XML Schema for WS-I conformant RPC/Literal Soap Binding – an IDL sequence is mapped onto a sequence complex type (the SOAP encoding soapenc:Array type MUST NOT be used with WS-I conformant soap bindings).

So I think that the sequences - even the ones contained in structs should have separate complex type and the struct's member of type sequence should be separate element (in Juergen's case: ""s1"") with the type of IDL sequence mapped to XSD complexType.","01/Oct/13 20:38;dkulp;We really need to support both cases.   In a ""wsdl first"" scenario, the current code is likely needed as the normal setup is for arrays to be in the unwrapped form.   For idl first, the wrappers are likely needed.

I've attached a patch that expands the corba typemapping a bit to record on the sequence element whether it should be wrapped or not.   Can you give that a try and use that as a basis?   The CXF tests pass, but I haven't checked to see if the testcase for this is completely solved with this yet.
","02/Oct/13 12:05;gzres;Hello

Tomorrow I'll post the patch (or pull request for Git). But now (oh these timezones...) some observations:
* IDL/Corba Arrays are the same as Sequences (correct me). In WSDL/XSD and while creating corba binding, arrays are sequences that have maxOccurs==minOccurs and both are greater than one
* so the ""wrapping"" should be handled for both arrays and sequences
* sequences and arrays may be named or anonymous. So we have problems designing class hierarchy - anon/named and sequence/struct - this is ugly in {{/rt/bindings/corba/src/main/resources/schemas/wsdl/corba-binding.xsd}}
* I have prepared interesting type for tests (it covers all 8 combinations):
{code:xml}
<complexType name=""MixedArray"">
    <sequence>
        <!-- unwrapped sequence -->
        <element maxOccurs=""unbounded"" minOccurs=""0"" name=""array1""
                type=""string""/>
        <!-- wrapped sequence -->
        <element maxOccurs=""1"" minOccurs=""1"" name=""array2""
                type=""x1:UnboundedArray""/>
        <!-- unwrapped array -->
        <element maxOccurs=""3"" minOccurs=""3"" name=""array3""
                type=""string""/>
        <!-- wrapped array -->
        <element maxOccurs=""1"" minOccurs=""1"" name=""array4""
                type=""x1:FixedArray""/>
        <!-- anonymous unwrapped sequence -->
        <element maxOccurs=""unbounded"" minOccurs=""0"" name=""array5"">
            <simpleType>
                <xsd:restriction base=""string"" />
            </simpleType>
        </element>
        <!-- anonymous wrapped sequence -->
        <element maxOccurs=""1"" minOccurs=""1"" name=""array6"">
            <complexType>
                <sequence>
                    <element maxOccurs=""unbounded"" minOccurs=""0"" name=""item""
                        type=""string""/>
                </sequence>
            </complexType>
        </element>
        <!-- anonymous unwrapped array -->
        <element maxOccurs=""3"" minOccurs=""3"" name=""array7"">
            <simpleType>
                <xsd:restriction base=""string"" />
            </simpleType>
        </element>
        <!-- anonymous wrapped array -->
        <element maxOccurs=""1"" minOccurs=""1"" name=""array8"">
            <complexType>
                <sequence>
                    <element maxOccurs=""3"" minOccurs=""3"" name=""item""
                        type=""int""/>
                </sequence>
            </complexType>
        </element>
    </sequence>
</complexType>
{code}
* the _special_ case in {{/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/types/CorbaStructEventProducer.java}} should not be controlled by the _primitiveness_ of sequence elements, but rather by your ""wrapped"" flag - correct me if I'm wrong
* there were some problems with {{CorbaStructListener}} so the patch contains some changes
* there were problems with finding corba types for anonymous XSD types, so the patch contains changes in {{WSDLToCorbaHelper}}

regards
Grzegorz Grzybek",02/Oct/13 12:07;gzres;The patch included,"03/Oct/13 19:10;dkulp;
I think the patch is missing a CorbaPrimitiveArrayEventProducer class.","04/Oct/13 07:54;gzres;There's one more problem with:
{code:xml}
            <!-- anonymous unwrapped, non-primitive sequence -->
            <element maxOccurs=""unbounded"" minOccurs=""0"" name=""array9"">
                <complexType>
                    <sequence>
                        <element name=""item"" type=""string"" />
                    </sequence>
                </complexType>
            </element>
            <!-- anonymous unwrapped, non-primitive array -->
            <element maxOccurs=""3"" minOccurs=""3"" name=""array10"">
                <complexType>
                    <sequence>
                        <element name=""item"" type=""string"" />
                    </sequence>
                </complexType>
            </element>
{code}

I'm working on {{org.apache.cxf.tools.corba.processors.wsdl.WSDLToCorbaHelper.processLocalElement()}} to handle every possible combination.

In the above case WSDL2IDL generates wrong corba binding:
{code:xml}
...
<corba:struct xmlns:x1=""http://apache.org/type_test/types1"" name=""array10Array"" qualified=""true"" repositoryID=""IDL:array10:1.0"" type=""x1:array10"">
  <corba:member idltype=""corba:string"" name=""item"" qualified=""true""/>
</corba:struct>

<corba:array xmlns:ns1=""http://apache.org/type_test/doc/corba/typemap/"" xmlns:x1=""http://apache.org/type_test/types1"" bound=""3"" elemname=""x1:array10"" elemtype=""ns1:array10"" name=""array10Array"" repositoryID=""IDL:array10Array:1.0"" type=""x1:array10"" wrapped=""false""/>

<corba:struct xmlns:x1=""http://apache.org/type_test/types1"" name=""MixedArray"" repositoryID=""IDL:MixedArray:1.0"" type=""x1:MixedArray"">
  ...
  <corba:member xmlns:ns1=""http://apache.org/type_test/doc/corba/typemap/"" idltype=""ns1:array10Array"" name=""array10"" qualified=""true""/>
</corba:struct>

...
    <corba:struct xmlns:x1=""http://apache.org/type_test/types1"" name=""array9Array"" qualified=""true"" repositoryID=""IDL:array9:1.0"" type=""x1:array9""> 
...
    <corba:struct xmlns:x1=""http://apache.org/type_test/types1"" name=""array9Array"" qualified=""true"" repositoryID=""IDL:array9:1.0"" type=""x1:array9""> 
...
    <corba:struct xmlns:x1=""http://apache.org/type_test/types1"" name=""array9Array"" qualified=""true"" repositoryID=""IDL:array9:1.0"" type=""x1:array9""> 
...
{code}

the member ""array10"" has type ""array10Array"" which should map to sequence, but is (multiple times) being overriden by struct...

I'm afraid that it will get worse with multiply nested complexType definitions... (sequence of complex types containing sequences, etc.)","04/Oct/13 08:38;gzres;By the way, {{CorbaPrimitiveArrayEventProducer}} is simple:
{code:java}
package org.apache.cxf.binding.corba.types;

import org.apache.cxf.service.model.ServiceInfo;
import org.omg.CORBA.ORB;

public class CorbaPrimitiveArrayEventProducer extends AbstractNoStartEndEventProducer {
    
    // No start and end elements for the array
    public CorbaPrimitiveArrayEventProducer(CorbaObjectHandler h,
                                               ServiceInfo service,
                                               ORB orbRef) {
        CorbaArrayHandler handler = (CorbaArrayHandler)h;
        iterator = handler.getElements().iterator();
        orb = orbRef;
        serviceInfo = service;
    }
}
{code}

it works for {{MixedArray}} with members array1-array8, but for array9 and array10 I've encountered more problems with corba binding generation... So please give me some time (I have other work to do ;))","10/Oct/13 13:02;gzres;Hello - here's a pull request: https://github.com/apache/cxf/pull/7.

All test cases pass, as well as Juergen's example.

The changes were quite complex wrt correct Corba-xml mapping.

Please see if this is right way to do this.

The least clean change is related to handling Corba structs derived from such XSD complex types:
{code:xml}
<xs:complexType>
   <xs:sequence>
      <!-- some non-sequence, non-array elements -->
      <xs:element name=""x"" type=""x"" minOccurs=""0"" maxOccurs=""not 1"" />
   </xs:sequence>
</xs:complexType>
{code}
because runtime representation is usually this:
{code:xml}
<root>
   <!-- some elements -->
   <x>a</x>
   <x>a</x>
   ...
</root>
{code}
but may also be this:
{code:xml}
<root>
   <!-- some elements -->
   <!-- no ""x"" element at all! -->
</root>
{code}
while writing to Corba stream there must be a sign that we're sending 0-size collection. The relevant changes (not so clean) are in {{org.apache.cxf.binding.corba.types.CorbaStructListener.processEndElement(QName)}}.

regards
Grzegorz Grzybek","10/Oct/13 15:23;dkulp;
Pull request pulled in and committed.  Major thanks for the patch and nice job on all the test cases.

Once you verify that the pull request is properly applied, please close the pull request on github (we don't have access to do that).

Thanks!",11/Oct/13 04:36;gzres;Pull Request closed. Thanks!,"13/Oct/13 09:59;jaybee;Hello,

could somebody please push a SNAPSHOT-Version to the Snapshot-Repository. We stumbled over some other bugs and I would like to test whether they are gone before I try to create repros.

Thx Jürgen","14/Oct/13 15:08;dkulp;SNAPSHOT's should be deployed every night to the apache snapshot repo.
",,,,,,,,,,,,,,,,,,,,
Too long the cer file name generated by XKMS service,CXF-5250,12666676,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,xldai,xldai,03/Sep/13 10:28,27/Sep/13 18:18,14/Mar/19 02:30,05/Sep/13 14:02,2.7.7,,,,,,,2.7.7,,,,Services,,,,0,,,,,,,,"When configue XKMS service using file as backend:

xkms.certificate.repo=file
xkms.file.storageDir=${karaf.home}/xkms/certificates

Start XKMS service in the container and send a register SOAP request to it:

{code}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soapenv:Body>
        <RegisterRequest xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""
            xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#"" Id=""123""
            Service=""http://cxf.apache.org/services/XKMS/"" xmlns=""http://www.w3.org/2002/03/xkms#"">
            <PrototypeKeyBinding Id=""456"">
                <ds:KeyInfo>
                    <ds:X509Data>
                        <ds:X509Certificate>
MIID5jCCA0+gAwIBAgIJAPahVdM2UPibMA0GCSqGSIb3DQEBBQUAMIGpMQswCQYD
VQQGEwJVUzERMA8GA1UECBMITWFyeWxhbmQxEjAQBgNVBAcTCUJhbHRpbW9yZTEp
MCcGA1UEChMgU2FtcGxlIFNUUyAtLSBOT1QgRk9SIFBST0RVQ1RJT04xFjAUBgNV
BAsTDUlUIERlcGFydG1lbnQxFDASBgNVBAMTC3d3dy5zdHMuY29tMRowGAYJKoZI
hvcNAQkBFgtzdHNAc3RzLmNvbTAeFw0xMTAyMDkxODM4MTNaFw0yMTAyMDYxODM4
MTNaMIGpMQswCQYDVQQGEwJVUzERMA8GA1UECBMITWFyeWxhbmQxEjAQBgNVBAcT
CUJhbHRpbW9yZTEpMCcGA1UEChMgU2FtcGxlIFNUUyAtLSBOT1QgRk9SIFBST0RV
Q1RJT04xFjAUBgNVBAsTDUlUIERlcGFydG1lbnQxFDASBgNVBAMTC3d3dy5zdHMu
Y29tMRowGAYJKoZIhvcNAQkBFgtzdHNAc3RzLmNvbTCBnzANBgkqhkiG9w0BAQEF
AAOBjQAwgYkCgYEAo+f8gs4WcteLdSPWPm8+ciyEz7zVmA7kcCGFQQvlO0smxRVi
WJ1x+yniT5Uu86UrAQjxRJyANBomQrirfE7KPrnCm6iVOsGDEntuIZAf7DFPnrv5
p++jAZQuR3vm4ZHXFOFTXmI+/FD5AqLfNi17xiTxZCDYyDdD39CNFTrB2PkCAwEA
AaOCARIwggEOMB0GA1UdDgQWBBRa0A38holQIbJMFW7m5ZSw+iVDHDCB3gYDVR0j
BIHWMIHTgBRa0A38holQIbJMFW7m5ZSw+iVDHKGBr6SBrDCBqTELMAkGA1UEBhMC
VVMxETAPBgNVBAgTCE1hcnlsYW5kMRIwEAYDVQQHEwlCYWx0aW1vcmUxKTAnBgNV
BAoTIFNhbXBsZSBTVFMgLS0gTk9UIEZPUiBQUk9EVUNUSU9OMRYwFAYDVQQLEw1J
VCBEZXBhcnRtZW50MRQwEgYDVQQDEwt3d3cuc3RzLmNvbTEaMBgGCSqGSIb3DQEJ
ARYLc3RzQHN0cy5jb22CCQD2oVXTNlD4mzAMBgNVHRMEBTADAQH/MA0GCSqGSIb3
DQEBBQUAA4GBACp9yK1I9r++pyFT0yrcaV1m1Sub6urJH+GxQLBaTnTsaPLuzq2g
IsJHpwk5XggB+IDe69iKKeb74Vt8aOe5usIWVASgi9ckqCwdfTqYu6KG9BlezqHZ
dExnIG2v/cD/3NkKr7O/a7DjlbE6FZ4G1nrOfVJkjmeAa6txtYm1Dm/f
                        </ds:X509Certificate>
                    </ds:X509Data>
                </ds:KeyInfo>
                <KeyUsage>http://www.w3.org/2002/03/xkms#Signature</KeyUsage>
                <KeyUsage>http://www.w3.org/2002/03/xkms#Encryption</KeyUsage>
                <KeyUsage>http://www.w3.org/2002/03/xkms#Exchange</KeyUsage>
                <UseKeyWith Application=""urn:ietf:rfc:2459""
                            Identifier=""CN=www.sts.com, OU=IT Department, L=Baltimore, ST=Maryland, C=US"" />
            </PrototypeKeyBinding>
        </RegisterRequest> 
   </soapenv:Body>
</soapenv:Envelope>
{code}

then, a long-name cer file (about 231 characters) will be generated (on Win7) which really can't operate it later.

CN-www.sts.com_OU-IT Department_L-Baltimore_ST-Maryland_C-US-17771579970218424475-1.2.840.113549.1.9.1-#160b737473407374732e636f6d_CN-www.sts.com_OU-IT Department_O-Sample STS -- NOT FOR PRODUCTION_L-Baltimore_ST-Maryland_C-US.cer",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-05 14:01:54.553,,,no_permission,,Unknown,,,,,,,,,,,346614,,,Thu Sep 05 14:01:54 UTC 2013,,,,,,0|i1nrqf:,346915,,,,,,,,"05/Sep/13 14:01;coheigea;
I've merged a fix for this issue. It was writing out certificates with a filename of ""identifier-serial-issuer.cer"", where the identifier in this case is the Subject DN. As the certificate is uniquely identified by issuer name + serial number, I've changed it to instead use ""issuer-serial.cer"". The fact that the ""identifier"" (subject DN) was used in the filename had no bearing on locate/validate so I don't see any problem with this.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS 2.0 ContainerRequestContext#getMethod() doesn't return request HTTP-method,CXF-5249,12666581,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,mukhadin,mukhadin,02/Sep/13 13:24,27/Sep/13 18:18,14/Mar/19 02:30,02/Sep/13 14:21,2.7.6,,,,,,,2.7.7,,,,JAX-RS,,,,0,,,,,,,,"Implementation of JAX-RS 2.0 ContainerRequestContext#getMethod() doesn't return HTTP method, null value is returned instead.

During instantiating of ContainerRequestContext we initializing context property map by message property ""jaxrs.filter.properties"", which is not filled at that time.

During #getMethod() invocation we are trying to get property from that empty map.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-02 14:21:09.714,,,no_permission,,Unknown,,,,,,,,,,,346519,,,Mon Sep 02 14:21:09 UTC 2013,,,,,,0|i1nr5j:,346820,,,,,,,,"02/Sep/13 14:21;sergey_beryozkin;Thanks for reporting it, appears to be another backmerge issue, it already works as expected on the trunk

http://svn.apache.org/r1519447 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signed SAML assertion validation error w/ SupportingTokens only policy,CXF-5248,12666324,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,asoldano,asoldano,30/Aug/13 13:57,27/Sep/13 18:18,14/Mar/19 02:30,03/Sep/13 11:33,,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,WS-* Components,,,,0,,,,,,,,"I have an endpoint whose WSDL has the following policy:
{noformat}
<wsp:Policy wsu:Id=""MyPolicy"">
  <wsp:ExactlyOne>
    <wsp:All>
    <sp:SupportingTokens>
      <wsp:Policy>
        <sp:SamlToken  sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient"">
          <wsp:Policy>
            <sp:WssSamlV20Token11/>
          </wsp:Policy>
        </sp:SamlToken>
      </wsp:Policy>
    </sp:SupportingTokens>
    </wsp:All>
  </wsp:ExactlyOne>
</wsp:Policy>
{noformat}

I've configured the client so that the provided SAML2 assertion is self signed.

The SamlTokenInterceptor deals with the request on server side; a RequestData instance is built up in 'processToken(Element tokenElement, final SoapMessage message)', but no signature crypto is configured in it. As a consequence the validation later fails in SignatureTrustValidator#validate(..) because no crypto can be retrieved.

I assume the security configuration from the incoming message should be propagated to the RequestData instance constructed in the interceptor.
I'm attaching a patch (against 2.7 branch) that solves my specific failure, but I'm not sure if other props should be propagated too.",,,,,,,,,,,,,,,,,,,,30/Aug/13 13:58;asoldano;CXF-5248.txt;https://issues.apache.org/jira/secure/attachment/12600785/CXF-5248.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,346263,,,2013-08-30 13:57:51.0,,,,,,0|i1npkv:,346564,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS proxies do not work with BeanParams,CXF-5247,12666311,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,30/Aug/13 12:13,01/Dec/14 10:07,14/Mar/19 02:30,02/Sep/13 11:53,,,,,,,,2.7.7,3.0.0-milestone1,,,JAX-RS,,,,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-11-30 15:33:57.36,,,no_permission,,Unknown,,,,,,,,,,,346250,,,Mon Dec 01 10:07:52 UTC 2014,,,,,,0|i1nphz:,346551,,,,,,,,"30/Nov/14 15:33;splatch;Is there any systest confirming this feature is working? I just found with 3.0.1 that parameter with @BeanParams does not cause request with specified values while resteasy was fine with it..
I have found in another issue comments that it does work only when setters are annotated - I think it makes sense to put this into the docs.","01/Dec/14 10:07;sergey_beryozkin;Hi  Łukasz,
https://jax-rs-spec.java.net/nonav/2.0-rev-a/apidocs/javax/ws/rs/BeanParam.html
offers an example...
As far as I know JAX-RS 2.0 Client API does not support BeanParam beans; in CXF it only works with a proxy client API

Cheers, Sergey ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Conflicting schema namespaces for services with same set of schema classes,CXF-5246,12666280,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,kai.stapel,kai.stapel,30/Aug/13 09:26,27/Sep/13 18:18,14/Mar/19 02:30,06/Sep/13 07:04,2.7.6,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAXB Databinding,,,,0,,,,,,,,"In case of services, which have the exact same set of schema classes, it may occur that the generated schema namespace of the server service is different from the generated schema namespace of the client service, depending on the order of their initialization. This can result in non-functioning services (see attached sample project). 

Errors like this occur:
{code}
javax.xml.bind.UnmarshalException: unknown type name: {http://bar.service/}barName. Did you mean {http://foo.service/}barName?
{code}

The cause is the caching of schemas in {{JAXBDatabinding}}, which will reuse a schema if the set of {{contextClasses}} are equal (see method {{JAXBDatabinding.createJAXBContextAndSchemas()}} and class {{JAXBContextCache}}). The problem is that it will use the package of the current service as the target namespace for the schema. So it may happen that the target namespaces differ between client and server side, depending on the order of initialization of the services which have an equal set of schema classes.

Our current workaround for this problem is to specify equal target namespaces (e.g. by setting {{@WebService(targetNamespace = ""http://reused.target.namespace"")}}) for the affected services so the order of their initialization does not matter anymore.

Another workaround could be to give each service an individual DataBinding without overlapping schema types. But that would require extra coding effort on server and client side.

Maybe you could change the key of the {{JAXBCONTEXT_CACHE}} map in the {{JAXBContextCache}} class to also contain the target namespace (or the schema class) so different services would get different schemas.",CXF Services with JAXB Databinding,,,,,,,,,,,,,,,,,,,30/Aug/13 09:29;kai.stapel;cfx-wrong-namespace.zip;https://issues.apache.org/jira/secure/attachment/12600753/cfx-wrong-namespace.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,346219,,,Fri Aug 30 09:29:17 UTC 2013,,,,,,0|i1npb3:,346520,,,,,,,,"30/Aug/13 09:29;kai.stapel;Attached sample maven (Eclipse) project which will show the problem when running the server (e.g. in a Tomcat) and then executing the client {{FooBarClient}}.

The problem is also visible when viewing the WSDLs (see {{targetNamespace}} of the {{schema}} element):
{{http://localhost:8080/cfx-wrong-namespace/services/BarService?wsdl}}
{{http://localhost:8080/cfx-wrong-namespace/services/FooService?wsdl}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS SpringResourceFactory does not work correctly with lifecycle methods,CXF-5245,12666159,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,29/Aug/13 16:47,27/Sep/13 18:18,14/Mar/19 02:30,29/Aug/13 17:10,,,,,,,,2.7.7,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,346098,,,2013-08-29 16:47:59.0,,,,,,0|i1nokn:,346399,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
It is not possible to update Content-Type inside JAX-RS 2.0 ContainerRequestFilter ,CXF-5244,12666158,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dmitry.treskunov,dmitry.treskunov,29/Aug/13 16:40,09/Oct/13 17:11,14/Mar/19 02:30,30/Aug/13 12:36,2.7.6,,,,,,,2.7.7,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"As I understand, it wasn't possible to update headers inside JAX-RS 2.0 ContainerRequestFilter. 
Is was fixed in this issue https://issues.apache.org/jira/browse/CXF-4986.

But now update of Content-Type header inside of @PreMatching filter doesn't affect further processing - 
suitable MessageBodyReader is selected using initial Content-Type but not new one.  
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-30 12:36:49.0,,,no_permission,,Unknown,,,,,,,,,,,346097,,,Wed Oct 09 17:11:34 UTC 2013,,,,,,0|i1nokf:,346398,,,,,,,,"30/Aug/13 12:36;sergey_beryozkin;Also fixed an issue with customizing accept types in pre-matching filters
","09/Oct/13 01:34;jklap;Previously you could add an interceptor before the JAXRSInInterceptor to check for and set either the Content-Type or Accept header via something like message.put(Message.ACCEPT_CONTENT_TYPE, ...)

This change, as it now checks Message.PROTOCOL_HEADERS first and always sets any value it finds in the message would override the above.

Is this expected behavior? Was setting the headers via message.put(Message.ACCEPT_CONTENT_TYPE, ...) the correct approach? Should JAXRSInInterceptor check for an existing header in the message before overriding?","09/Oct/13 10:16;sergey_beryozkin;Hi, the problem is that PreMatching ContainerRequestFilter operates on modifiable Map of headers, so if a given filter happens to set ""Content-Type"" on such a map, then the only way to ensure this value is picked up is to check the map first.

As it happens CXF Message has Message.PROTOCOL_HEADERS and also a pair of Message.CONTENT_TYPE & Message.ACCEPT_CONTENT_TYPE properties, the latter is just there to make it simpler to access the most important headers. 

If you re-set only Message.CONTENT_TYPE but not sync it with Message.PROTOCOL_HEADERS then it is not obvious what to do now that ContainerRequestFilters have to be supported, what if the earlier interceptor does only update Message.PROTOCOL_HEADERS but not Message.CONTENT_TYPE ? 

What I mean is that JAXRSInInterceptor can try and sync Message.CONTENT_TYPE/ACCEPT_CONTENT_TYPE &  Message.PROTOCOL_HEADERS itself to make sure ClientRequestFilter sees the correct values, but it can not guarantee it will do the sync direction correctly.

If you do the header updates before JAXRSInInterceptor is used, and not using JAX-RS 2.0 filters, then please also update Message.PROTOCOL_HEADERS, a bit more work, yes, but it will be the correct way to do it.

Do you agree ?

thanks



","09/Oct/13 16:59;jklap;Sounds correct-- and I'm fine with your suggestion-- ie updating the PROTOCOL_HEADERS (and it isn't actually much more work at all). I am *not* updating CONTENT_TYPE and ACCEPT_CONTENT_TYPE-- looks like that isn't needed. Can you confirm?

As a side note, this interceptor was originally a Request Filter but we moved it to an interceptor-- can't remember why but we had a good reason ;)","09/Oct/13 17:11;sergey_beryozkin;I guess it is not strictly required because JAXRSInInterceptor is checking the map and if it finds Content-Type or Accept then it also resets dedicated message properties.

You probably moved because setting Content-Type in the handler was not having any effect on selecting the resource classes, or may be methods,

try @PreMatching ContainerRequestFilter, it should work too and it will be portable ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS 2.0 ContainerRequestContext#getEntityStream() doesn't return request payload,CXF-5243,12666156,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dmitry.treskunov,dmitry.treskunov,29/Aug/13 16:34,27/Sep/13 18:18,14/Mar/19 02:30,30/Aug/13 12:35,2.7.6,,,,,,,2.7.7,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"Implementation of JAX-RS 2.0 ContainerRequestContext#getEntityStream() doesn't return request body.

Probably, the reason is that this implementation tries to extract body using call m.get(InputStream.class), but should use call m.getContent(InputStream.class).

I saw, that it was fixed in trunk several month ago, but it is not in any release now.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-29 16:46:10.055,,,no_permission,,Unknown,,,,,,,,,,,346095,,,Fri Aug 30 12:35:43 UTC 2013,,,,,,0|i1nojz:,346396,,,,,,,,"29/Aug/13 16:46;sergey_beryozkin;Right, see it fixed on the trunk, not sure why it did not make it to CXF 2.7.x, will be there in time for CXF 2.7.7, due soon",30/Aug/13 12:35;sergey_beryozkin;Also fixed same issue with response and client request/response contexts,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Topic based replies can lose messages,CXF-5242,12666155,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,29/Aug/13 16:27,27/Sep/13 18:18,14/Mar/19 02:30,29/Aug/13 19:10,2.6.9,2.7.6,,,,,,2.6.10,2.7.7,,,Transports,,,,0,,,,,,,,"
If you use a Topic for a JMS reply queue (not sure why you would, likely a bad practice) for a request/reply interaction, there is a very small period of time between when the message is sent and the listener starts listening.   If the server responds in that time period, the response is lost as there is no listener on the topic.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,346094,,,2013-08-29 16:27:01.0,,,,,,0|i1nojr:,346395,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No way to disable chunking with hc based transport,CXF-5241,12665965,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,28/Aug/13 17:28,27/Sep/13 18:18,14/Mar/19 02:30,30/Aug/13 17:04,2.7.6,,,,,,,2.7.7,,,,Transports,,,,0,,,,,,,,"
Disabling chunking for the HC based HTTP transport has no affect.  The request is still sent chunked.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,345904,,,2013-08-28 17:28:08.0,,,,,,0|i1nndj:,346205,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jsonp interceptors do not work with GZIPOutInterceptor,CXF-5240,12665964,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,vadimb,vadimb,28/Aug/13 17:20,27/Sep/13 18:18,14/Mar/19 02:30,29/Aug/13 10:10,2.5.9,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-RS,Transports,,,1,,,,,,,,"Jsonp support via Jsonp(In,PreStream,PostStream)Interceptor (as described in http://cxf.apache.org/docs/jax-rs-data-bindings.html#JAX-RSDataBindings-JSONWithPadding%28JSONP%29) conflicts with GZIPOutInterceptor.

With a very simple test application request ""http://localhost:7543/12?_jsonp=abc"" without Gzip results in the following response 
bq. abc(24);
With Gzip:
bq. abc();24

Apparent reason is that the method org.apache.cxf.jaxrs.provider.jsonp.AbstractJsonpOutInterceptor.writeValue(Message, String) writes directly to the response output stream. When the method is changed to write to {{message.getContent(OutputStream.class)}}, responses with and without Gzip interceptor become the same ""abc(24);"", as expected.

------------------------

Service code:
{code}
package test.cxf.jsonp;
import javax.ws.rs.*;
@Path(""/"") @Produces(""application/json"")
public class Service {
    @GET @Path(""{id}"") public int find(@PathParam(""id"") int id) {
        return id * 2;
    }
}
{code}

Configuration (with Gzip)
{code}
<jaxrs:server id=""jsonp"" address=""http://localhost:7543/"">
    <jaxrs:serviceBeans>
      <ref bean=""serviceBean"" />
    </jaxrs:serviceBeans>       
    <jaxrs:inInterceptors>
       <bean class=""org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor""/>
       <bean class=""org.apache.cxf.transport.common.gzip.GZIPInInterceptor""/>
    </jaxrs:inInterceptors>
    <jaxrs:outInterceptors>
       <bean class=""org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor""/>
       <bean class=""org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor""/>
       <bean class=""org.apache.cxf.transport.common.gzip.GZIPOutInterceptor""/>
    </jaxrs:outInterceptors> 
</jaxrs:server>
<bean id=""serviceBean"" class=""test.cxf.jsonp.Service"" />
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-29 10:10:27.257,,,no_permission,,Unknown,,,,,,,,,,,345903,,,Thu Aug 29 10:10:27 UTC 2013,,,,,,0|i1nndb:,346204,,,,,,,,"29/Aug/13 10:10;sergey_beryozkin;Thanks for finding out how to fix it. I updated the code for the message OS checked first; 

Note that CXF 2.5.x line is not supported any longer, please migrate to CXF 2.6.10 or CXF 2.7.7 - to be released shortly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema validatation doesn't work in mtom enabled provider service ,CXF-5237,12665900,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,28/Aug/13 11:38,27/Sep/13 18:18,14/Mar/19 02:30,30/Aug/13 10:14,2.5.10,2.6.9,2.7.6,,,,,2.5.11,2.6.10,2.7.7,3.0.0-milestone1,Core,,,,0,,,,,,,,"19:02:50,096 WARNING [org.apache.cxf.phase.PhaseInterceptorChain] (http-/127.0.0.1:8080-1) Interceptor for {http://provider.gss.redhat.com/}HelloWS#{http://provider.gss.redhat.com/}hello has thrown exception, unwinding now: org.apache.cxf.interceptor.Fault: Could not parse the XML stream caused by: org.xml.sax.SAXParseException: cvc-type.3.1.2: Element 'file' is a simple type, so it must have no element information item [children]..
     at org.apache.cxf.databinding.source.XMLStreamDataReader.read(XMLStreamDataReader.java:160)
     at org.apache.cxf.databinding.source.XMLStreamDataReader.read(XMLStreamDataReader.java:75)
     at org.apache.cxf.databinding.source.XMLStreamDataReader.read(XMLStreamDataReader.java:60)
     at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:203)
     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
     at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
     at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:237)
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,345839,,,2013-08-28 11:38:03.0,,,,,,0|i1nmz3:,346140,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Simple Frontend Client Proxy does not work with Blueprint,CXF-5234,12665526,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,zbeothy,zbeothy,26/Aug/13 15:21,27/Sep/13 18:18,14/Mar/19 02:30,26/Aug/13 16:56,2.7.6,,,,,,,2.6.10,2.7.7,,,Simple Frontend,,,,0,,,,,,,,"If I define a Simple Frontend client in my Blueprint configuration  

{code:xml} 
<blueprint xmlns=""http://www.osgi.org/xmlns/blueprint/v1.0.0""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:cxf=""http://cxf.apache.org/blueprint/core""
    xmlns:sf=""http://cxf.apache.org/blueprint/simple""
    xsi:schemaLocation=""
  http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
  http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
  http://cxf.apache.org/blueprint/simple http://cxf.apache.org/schemas/blueprint/simple.xsd
  "">

  <bean id=""customerApplication""
      class=""com.example.ba.application.customer.consumer.CustomerApplication""
      init-method=""startUp"" destroy-method=""shutdown"">
    <property name=""customerService"" ref=""customServiceClient"" />
  </bean>

  <sf:client id=""customServiceClient""
      serviceClass=""com.example.customerservice.CustomerService""
      address=""http://localhost:8181/cxf/CustomerService"">
    <sf:dataBinding>
      <bean class=""org.apache.cxf.aegis.databinding.AegisDatabinding""/>
    </sf:dataBinding>
  </sf:client>

</blueprint>
{code}
 
and deploy the bundle to Karaf I get an
{noformat}  
org.osgi.service.blueprint.container.ComponentDefinitionException: Unresolved ref/idref to component: customServiceClient 
{noformat} 
from aries, see the attachment for the complete exception. When using a corresponding Spring configuration the client works fine. Looking into org/apache/cxf/frontend/blueprint/SimpleBPNamespaceHandler.java in the simple frontend module I think some parts of the implementation are simply missing, but this of course only a wild guess.
",Running within Karaf 2.3.2,,,,,,,,,,,,,,,,,,,26/Aug/13 15:27;zbeothy;ComponentDefinitionException.txt;https://issues.apache.org/jira/secure/attachment/12599957/ComponentDefinitionException.txt,26/Aug/13 15:23;zbeothy;simple_frontend_blueprint.zip;https://issues.apache.org/jira/secure/attachment/12599956/simple_frontend_blueprint.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-08-26 16:16:04.608,,,no_permission,,Unknown,,,,,,,,,,,345466,,,Fri Sep 06 06:50:27 UTC 2013,,,,,,0|i1nko7:,345767,,,,,,,,26/Aug/13 15:23;zbeothy;Sample project including provider and non working client. Both may be deployed into same karaf.,26/Aug/13 16:16;dkulp;A //TODO right where the parser should be created is certainly a bit embarrassing.  :-(,26/Aug/13 16:24;chris@die-schneider.net;[~dkulp] I will take care of the implementation if it is ok for you.,26/Aug/13 16:50;dkulp;Ooops... didn't see your comment and already committed to trunk and 2.7.x,26/Aug/13 16:53;chris@die-schneider.net;No prob :-),06/Sep/13 06:50;zbeothy;Tested it with 2.7.7-SNAPSHOT and it works. Thx for the quick fix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Transport with Topic for Requests is not working if Response is required,CXF-5233,12665497,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jan4talend,jan4talend,26/Aug/13 11:52,27/Sep/13 18:18,14/Mar/19 02:30,26/Aug/13 15:58,2.7.7,3.0.0-milestone1,,,,,,2.6.10,2.7.7,,,Transports,,,,0,test,,,,,,,"Currently JMS Transport does not work for JMS Topics if a response message is required. See mailing list discussion [1].

[1] http://cxf.547215.n5.nabble.com/JMS-Topic-Support-with-Response-is-not-working-td5732525.html#a5732554",,,,,,,,,,,,,,,,,,,,26/Aug/13 11:55;jan4talend;JMSTopicTransport.patch;https://issues.apache.org/jira/secure/attachment/12599935/JMSTopicTransport.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,345437,,,Tue Aug 27 07:49:10 UTC 2013,,,,,,0|i1nkhr:,345738,,,,,,,,"26/Aug/13 11:55;jan4talend;As discussed on the mailing list , this patch provides a JUnit test for JMS Topic support. As you can see within the test, if the request is sent to a queue, the response works fine (even for topics). But if the request destination is a topic the response is missing.",26/Aug/13 11:56;jan4talend;It looks like that the replyDestination is always null if the message was sent to a topic. Does queues and topics use different JMSConfig initialisation?,"27/Aug/13 07:49;jan4talend;Thank you!
I can confirm that this fix solved my problem. I can now use Topics in a request and still get a response.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF unable to resolve wsdl when XLST Transformation applied,CXF-5232,12665319,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,hbetts3,hbetts3,23/Aug/13 20:58,27/Sep/13 18:18,14/Mar/19 02:30,26/Aug/13 15:58,2.7.6,,,,,,,2.7.7,,,,,,,,0,,,,,,,,"Deployed web service employing the xslt feature described at http://cxf.apache.org/docs/xslt-feature.html. Service operates normally. However, when attempting to resolve the wsdl at https://service.url.tld/services/ServicePort?wsdl, the browser returns the following response:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>XSL transformation error: javax.xml.transform.TransformerException: com.sun.org.apache.xml.internal.utils.WrappedRuntimeException: Premature end of file..</faultstring></soap:Fault></soap:Body></soap:Envelope>

Logs shows the following:
2013-08-23/16:51:18 [WARN ] org.apache.cxf.phase.PhaseInterceptorChain - Interceptor for {http://greenskycredit.com/wsdl/Five9API}Five9API has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: XSL transformation error: javax.xml.transform.TransformerException: com.sun.org.apache.xml.internal.utils.WrappedRuntimeException: Premature end of file..
        at org.apache.cxf.feature.transform.XSLTUtils.transform(XSLTUtils.java:61)
        at org.apache.cxf.feature.transform.XSLTInInterceptor.transformIS(XSLTInInterceptor.java:102)
        at org.apache.cxf.feature.transform.XSLTInInterceptor.handleMessage(XSLTInInterceptor.java:68)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
        at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:223)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:203)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137)
        at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:159)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:286)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:211)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:262)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:225)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581)
        at org.apache.catalina.valves.CometConnectionManagerValve.invoke(CometConnectionManagerValve.java:186)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:999)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:565)
        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:309)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
        at java.lang.Thread.run(Thread.java:662)
Caused by: javax.xml.transform.TransformerException: javax.xml.transform.TransformerException: com.sun.org.apache.xml.internal.utils.WrappedRuntimeException: Premature end of file.
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:735)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:336)
        at org.apache.cxf.feature.transform.XSLTUtils.transform(XSLTUtils.java:55)
        ... 30 more
Caused by: javax.xml.transform.TransformerException: com.sun.org.apache.xml.internal.utils.WrappedRuntimeException: Premature end of file.
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.getDOM(TransformerImpl.java:564)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:725)
        ... 32 more
Caused by: com.sun.org.apache.xml.internal.utils.WrappedRuntimeException: Premature end of file.
        at com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager.getDTM(XSLTCDTMManager.java:460)
        at com.sun.org.apache.xalan.internal.xsltc.dom.XSLTCDTMManager.getDTM(XSLTCDTMManager.java:248)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.getDOM(TransformerImpl.java:542)","Centos 6 and Windows 7, Tomcat 7, Oracle/Sun Java 1.6.0_45",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-26 07:16:19.357,,,no_permission,,Unknown,,,,,,,,,,,345259,,,Mon Aug 26 07:16:19 UTC 2013,,,,,,0|i1njef:,345560,,,,,,,,"26/Aug/13 07:16;ffang;Just realized that Dan have already fixed this issue the day before yesterday.
[1]http://svn.apache.org/viewvc?view=revision&revision=r1517060",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NoSuchElementException in ClientFaultConverter when stack trace message contains line breaks,CXF-5231,12665267,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,jbe,jbe,23/Aug/13 17:22,02/Jun/14 23:37,14/Mar/19 02:30,30/Aug/13 07:49,2.7.3,2.7.6,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,,,,,0,,,,,,,,"On server side, I have enabled those two flags in order to be able to retrieve the full exception in client :
{code}
Message.FAULT_STACKTRACE_ENABLED -> true
Message.EXCEPTION_MESSAGE_CAUSE_ENABLED -> true
{code}

The problem is that one of the exception message contains a line break ""\n"" character. Thus when the exception is thrown, here is what I have on client side with version 2.7.6 :

{code}
java.util.NoSuchElementException
	at java.util.StringTokenizer.nextToken(StringTokenizer.java:349)
	at org.apache.cxf.interceptor.ClientFaultConverter.parseStackTrackLine(ClientFaultConverter.java:288)
	at org.apache.cxf.interceptor.ClientFaultConverter.getCause(ClientFaultConverter.java:279)
	at org.apache.cxf.interceptor.ClientFaultConverter.setStackTrace(ClientFaultConverter.java:247)
	at org.apache.cxf.interceptor.ClientFaultConverter.handleMessage(ClientFaultConverter.java:80)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:113)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:69)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:34)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:811)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1590)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1486)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1305)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:623)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:541)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:474)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:377)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:330)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:96)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)
	at com.sun.proxy.$Proxy71.execute(Unknown Source)
	at com.mycompany.client.WebServiceClient.main(WebServiceClient.java:111)

Exception in thread ""main"" javax.xml.ws.soap.SOAPFaultException: Fault string, and possibly fault code, not set
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:156)
	at com.sun.proxy.$Proxy71.execute(Unknown Source)
	at com.mycompany.client.WebServiceClient.main(WebServiceClient.java:111)
Caused by: java.util.NoSuchElementException
	at java.util.StringTokenizer.nextToken(StringTokenizer.java:349)
	at org.apache.cxf.interceptor.ClientFaultConverter.parseStackTrackLine(ClientFaultConverter.java:288)
	at org.apache.cxf.interceptor.ClientFaultConverter.getCause(ClientFaultConverter.java:279)
	at org.apache.cxf.interceptor.ClientFaultConverter.setStackTrace(ClientFaultConverter.java:247)
	at org.apache.cxf.interceptor.ClientFaultConverter.handleMessage(ClientFaultConverter.java:80)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:113)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:69)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:34)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:811)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1590)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1486)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1305)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:623)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:541)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:474)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:377)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:330)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:96)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)
	... 2 more
{code}

After debugging, I can see that in the getCause method of ClientFaultConverter, you are using a StringTokenizer to iterate through different lines.
{quote}
StringTokenizer st = new StringTokenizer(ss, ""\n"");
{quote}

When it comes to the exception message, we have this kind of string :

{quote}
Caused by: beginning of the message
end of the message
first line of stack trace
{quote}

Thus this piece of code:
{code}
private Throwable getCause(StringTokenizer st, String firstLine) {
        // The actual exception class of the cause might be unavailable at the
        // client -> use a standard throwable to represent the cause.
        Throwable res = new Throwable(firstLine.substring(firstLine.indexOf("":"") + 2));
        List<StackTraceElement> stackTraceList = new ArrayList<StackTraceElement>();
        while (st.hasMoreTokens()) {
            String oneLine = st.nextToken();
            if (oneLine.startsWith(""Caused by:"")) {
                Throwable nestedCause = getCause(st, oneLine);
                res.initCause(nestedCause);
                break;
            }
            stackTraceList.add(parseStackTrackLine(oneLine));
        }
        StackTraceElement[] stackTraceElement = new StackTraceElement[stackTraceList.size()];
        res.setStackTrace(stackTraceList.toArray(stackTraceElement));
        return res;
    }
{code}

will result in calling ""parseStackTrackLine"" on element ""end of the message"" which causes the exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-30 07:49:56.065,,,no_permission,,Unknown,,,,,,,,,,,345207,,,Mon Jun 02 23:36:50 UTC 2014,,,,,,0|i1nj2v:,345508,,,,,,,,"30/Aug/13 07:49;ffang;commit fix
http://svn.apache.org/r1517432 for trunk
http://svn.apache.org/r1517463 for 2.7.x branch
http://svn.apache.org/r1517467 for 2.6.x branch","02/Jun/14 21:39;cerebralvortex;We are still seeing this issue with 3.0.0-milestone1, let us know what you need to help reproduce it.","02/Jun/14 22:01;sbenbouzid;Hi [~cerebralvortex], ain't that the same cause as following issue : https://issues.apache.org/jira/browse/CXF-5719 ??","02/Jun/14 23:36;cerebralvortex;[~sbenbouzid] Yes, it does appear to be that same issue.  I didn't see the other open issue. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message element is not generated for Exception class,CXF-5230,12665196,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,23/Aug/13 07:52,01/Aug/14 14:56,14/Mar/19 02:30,11/Sep/13 08:22,2.6.9,2.7.6,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAXB Databinding,,,,0,,,,,,,,message element isn't generated for the exception class which extends Exception.class,,,,,,,,,,,,,,,,CXF-5744,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,345137,,,2013-08-23 07:52:21.0,,,,,,0|i1ninb:,345438,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rest client reports interface not visible for service interface,CXF-5228,12665055,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,22/Aug/13 15:18,14/Mar/14 11:26,14/Mar/19 02:30,26/Aug/13 16:33,2.7.6,,,,,,,2.7.7,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"When using a rest client in blueprint in OSGi I get the following stacktrace:
Caused by: java.lang.IllegalArgumentException: interface net.lr.tutorial.karaf.cxf.personservice.person.PersonService is not visible from class loader

See this for the full trace:
https://gist.github.com/cschneider/6156833

I debugged into it and found that the true execption is hidden.
It happens in org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean.createWithValues(Object...)

There is first tries to create the proxy using the classloader of the service interface. 

This fails as in the user classloader there is only the service interface but the proxy is also create for the cxf Client interface. So it fails when resolving cxf Client.

This exception is swallowed and the context classloader is used to create the proxy. This classloader is not set so it reports the user service interface is not visible. This is not the root of the problem though.

I fixed this by using a ProxyClassloader that contains the user classloader and the classloader of the JAXRSClientFactoryBean. So it then finds user classes as well as cxf classes.


",OSGi,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-22 19:14:14.206,,,no_permission,,Unknown,,,,,,,,,,,344996,,,Fri Mar 14 11:26:41 UTC 2014,,,,,,0|i1nhs7:,345297,,,,,,,,"22/Aug/13 19:14;sergey_beryozkin;Hi Christian, thanks for reporting it, do you propose do use ProxyClassLoader in exception handler, instead of using current thread loader ? 

I don't recall exactly why I did try to use a context loader in the exception handler, it probably was useful in some cases (for CGLIB proxies may be, do not remember now)... May be we can have the exception handler use ProxyClassLoader with the user classloader and the classloader of the JAXRSClientFactoryBean and finally the context loader in case it can be different from the other two ","23/Aug/13 06:23;chris@die-schneider.net;Hi Sergey,

I talked to Dan yesterday how to best handle it. Our aproach is to use the provided classloader first. If it can see all interfaces it will be used. If not a proxy classloader of the supplied classloader + all classloaders of the interfaces will be used.

As this is a generic solution I will add it to the ProxyHelper. So we should then be able to remove the context classloader. This will then also allow to provide a better error message when it does not work in the end. I will commit a fix on trunk today that you can review.
","23/Aug/13 14:49;sergey_beryozkin;H Christian, the fix looks neat,
thanks, Sergey","26/Aug/13 10:05;sergey_beryozkin;Hi Christian, the only thing that I'd like to discuss is how to deal with moving ProxyClassLoader to a new location when merging back to 2.7.x. I remember talking to at least 2 users about the use of ProxyClassLoader (in OSGI) so one option, for 2.7.x, is duplicate ProxyClassLoader, with only 3.0.0-SNAPSHOT keeping a single ProxyClassLoader in common util ","26/Aug/13 10:12;chris@die-schneider.net;Hi Sergey, for the backport I have created a ProxyClassLoader in the old location that extends the new one. This should make the switch transaparent for users.
","26/Aug/13 10:27;sergey_beryozkin;This is clever, cool :-)",21/Jan/14 19:58;scott.oster;Are there any known workarounds for earlier versions of CXF?  I'm having this problem on 2.6 and can't move forward yet.,"22/Jan/14 10:28;sergey_beryozkin;org.apache.cxf.jaxrs.client.ProxyClassLoader is shipped with 2.6.1 - try using it, I think JAXRSClientFactory may have a method accepting it, and definitely JAXRSClientFactoryBean","23/Jan/14 19:56;scott.oster;Awesome, thanks much Sergey.  I can confirm this workaround works for me with 2.6.6.
Might want to mark this issue as related to https://issues.apache.org/jira/browse/CXF-4290

I based my solution around this:
http://stackoverflow.com/questions/10458378/how-can-i-make-a-java-lang-reflect-proxy-from-two-separate-classloaders
  ProxyClassLoader classLoader = new ProxyClassLoader();
    classLoader.addLoader(resourceApiClass.getClassLoader());
    classLoader.addLoader(JAXRSClientFactoryBean.class.getClassLoader());

    JAXRSClientFactoryBean bean = new JAXRSClientFactoryBean();
    bean.setAddress(baseUrl);
    bean.setServiceClass(resourceApiClass);
    bean.setClassLoader(classLoader);
    return bean.create(resourceApiClass);",14/Mar/14 11:26;fmontmasson;Same issue still in 2.6.11...,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuth public clients don't appear to work in RedirectionGrantServices,CXF-5226,12665050,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,diarmuid.power,diarmuid.power,22/Aug/13 14:39,27/Sep/13 18:18,14/Mar/19 02:30,26/Aug/13 12:07,2.7.6,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-RS Security,,,,0,,,,,,,,"I believe there is an issue when using a redirect grant service using a public client.

My concern is the negation in front of the _canSupportPublicClient_ which passes this value to the _OAuthUtils.isGrantSupportedForClient_ as if it had not been negated.

{code}
if (!OAuthUtils.isGrantSupportedForClient(client, !canSupportPublicClient(client), supportedGrantType)) {
    return createErrorResponse(params, redirectUri, OAuthConstants.UNAUTHORIZED_CLIENT);
{code}
org.apache.cxf.rs.security.oauth2.services.startAuthorization()

This method then checks for a logical condition like, is public client and provider cannot support public clients. Instead, the logic of the condition reads, if public client and provider can support public client, then throw exception.

{code}
public static boolean isGrantSupportedForClient(Client client, boolean canSupportPublicClients, String grantType) {
	if (!client.isConfidential() && !canSupportPublicClients) {
            return false;
{code}
org.apache.cxf.rs.security.oauth2.utils.OAuthUtils.isGrantSupportedForClient()

So believe this to be a bug and I wanted to submit this for your consideration.

Another note is that AccessTokenService approaches this differently and doesn't seem to start with a negation:

{code}
 if (!OAuthUtils.isGrantSupportedForClient(client, isCanSupportPublicClients(), params.getFirst(OAuthConstants.GRANT_TYPE))) {
    return createErrorResponse(params, OAuthConstants.UNAUTHORIZED_CLIENT);
{code}
org.apache.cxf.rs.security.oauth2.services.AccessTokenService.handleTokenRequest()

P.S. First time logging an issue so apologies if I filled out any fields incorrectly.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-22 18:53:18.201,,,no_permission,,Unknown,,,,,,,,,,,344991,,,Wed Aug 28 17:05:24 UTC 2013,,,,,,0|i1nhr3:,345292,,,,,,,,"22/Aug/13 18:53;sergey_beryozkin;Hi, thanks for reporting the issue and investigating the cause of the problem. I only prototyped the initial code for supporting the public clients, with the idea to work on a demo at some later stage and tighten things up, so I guess the related code is brittle. I'll investigate further, thanks","26/Aug/13 12:07;sergey_beryozkin;Fixed, thanks","26/Aug/13 12:11;sergey_beryozkin;The temp workaround is to override this method and negate the super response, just to play along with the buggy RedirectionBasedGrantService code :-)","27/Aug/13 10:30;diarmuid.power;Good suggestion, I am already doing that. ;)

Thanks for the quick resolution on this, it is appreciated!","28/Aug/13 10:56;sergey_beryozkin;I've learned that public clients can also have redirect uris (such as native applications on iOS smartphones, etc), but at the moment the code assumes the public clients can have no redirect uris, I'm going to relax it a bit, if a public client has registered a redirect uri then it will be supported  ",28/Aug/13 17:05;sergey_beryozkin;See also https://issues.apache.org/jira/browse/CXF-5239,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
client.getConduit() does not set enough properties on message passed to ConduitSelector,CXF-5225,12664867,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,21/Aug/13 16:30,27/Sep/13 18:18,14/Mar/19 02:30,21/Aug/13 16:55,2.6.9,2.7.6,,,,,,2.6.10,2.7.7,,,Core,,,,0,,,,,,,,"
The ClientImpl.getConduit() call passes null as the Endpoint object to setExchangeProperties(..) which  then doesn't record an endpoint or any of the other bits of info into the message/exchange.  Thus,  a ConduitSelector may not be able to use that information to select the appropriate conduit without a bunch of hacks.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,344810,,,2013-08-21 16:30:24.0,,,,,,0|i1ngmn:,345110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ws_security sign_enc problem with cxf v. 2.7.4, correct whith cxf v. 2.3.3",CXF-5224,12664828,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,luca76,luca76,21/Aug/13 12:52,27/Sep/13 18:18,14/Mar/19 02:30,26/Aug/13 20:14,2.7.4,,,,,,,2.7.7,,,,WS-* Components,,,,0,patch,,,,,,,"The sign_enc sample have problem with soap version.
The libraries for the version 2.7.4 support only version soap12, but the
sample about sign_enc is create whit soap11",apache tomcat,,,,,,,,,,,,,,,,,,,22/Aug/13 08:51;luca76;Immagine.jpg;https://issues.apache.org/jira/secure/attachment/12599389/Immagine.jpg,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-08-21 16:09:07.401,,,no_permission,,Advanced,,,,,,,,,,,344771,,,Mon Aug 26 20:14:55 UTC 2013,,,,,,0|i1ngdz:,345071,,,,,,,,21/Aug/13 13:02;luca76;the sample sign_enc is correct whit cxf 2.3.3,"21/Aug/13 16:09;coheigea;
I don't understand what the problem is - could you please clarify?

Colm.","22/Aug/13 07:19;luca76;I have download the cxf version 2.3.3 and cxf version 2.7.4

I have unzip the file and i have test the sample:

apache-cxf-2.3.3\samples\ws_security\sign_enc --> this sample is correct

But i want a version more recently and i have test:

apache-cxf-2.7.4\samples\ws_security\sign_enc 

whit this library i have the exception:

Caused by: org.apache.ws.security.WSSecurityException: General security error (WSEncryptBody/WSSignEnvelope: Element to encrypt/sign not found: http://schemas.xmlsoap.org/soap/envelope/, Body)
at org.apache.ws.security.message.WSSecSignatureBase.addReferencesToSign(WSSecSignatureBase.java:160)
... 25 more 


Whit research i have find that the problem depend by a version of Soap used.

I have made this change:

this code(soap11):

private static final String WSU_NS = ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"";
outProps.put(""encryptionParts"", ""{Element}{"" + WSU_NS + ""}Timestamp;""
+ ""{Content}{http://schemas.xmlsoap.org/soap/envelope/}Body"");
outProps.put(""signatureParts"", ""{Element}{"" + WSU_NS + ""}Timestamp;""
+ ""{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body"");

whith(soap12):

private static final String WSU_NS = ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"";
outProps.put(""encryptionParts"", ""{Element}{"" + WSU_NS + ""}Timestamp;""
+ ""{Content}{http://www.w3.org/2003/05/soap-envelope}Body"");
outProps.put(""signatureParts"", ""{Element}{"" + WSU_NS + ""}Timestamp;""
+ ""{Element}{http://www.w3.org/2003/05/soap-envelope}Body"");

But i have this warning:

WARNING: Interceptor for {http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}Discovery#{http://cxf.apache.org/jaxws/provider}invoke has thrown exception, unwinding now
org.apache.cxf.binding.soap.SoapFault: MustUnderstand headers: [{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd}Security] are not understood.
at org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$MustUnderstandEndingInterceptor.handleMessage(MustUnderstandInterceptor.java:281)
at org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$MustUnderstandEndingInterceptor.handleMessage(MustUnderstandInterceptor.java:259)
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
at org.apache.cxf.transport.udp.UDPDestination$MCastListener$2.run(UDPDestination.java:106)
at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3.run(AutomaticWorkQueueImpl.java:428)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1.run(AutomaticWorkQueueImpl.java:353)
at java.lang.Thread.run(Unknown Source)

Thank you 












","22/Aug/13 08:12;coheigea;
I still don't understand the problem. The ""sign_enc"" sample works perfectly fine in the latest CXF 2.7.6 release. Are you altering it to work with SOAP 1.2 instead?

Colm.","22/Aug/13 08:51;luca76;I don't understand, I don't know where my error, becouse, with v.2.3.3 the server started corretly, but whit cxf 2.7.6 i have the exception:

ago 22, 2013 10:47:27 AM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Interceptor for {http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}DiscoveryProxy#{http://cxf.apache.org/jaxws/dispatch}InvokeOneWay has thrown exception, unwinding now
org.apache.cxf.binding.soap.SoapFault: Security processing failed.
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal.handleMessage(WSS4JOutInterceptor.java:275)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal.handleMessage(WSS4JOutInterceptor.java:136)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:541)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:474)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:377)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:330)
	at org.apache.cxf.endpoint.ClientImpl.invokeWrapped(ClientImpl.java:365)
	at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:385)
	at org.apache.cxf.jaxws.DispatchImpl.invokeOneWay(DispatchImpl.java:432)
	at org.apache.cxf.ws.discovery.WSDiscoveryClient.register(WSDiscoveryClient.java:287)
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.serverStarted(WSDiscoveryServiceImpl.java:186)
	at org.apache.cxf.ws.discovery.listeners.WSDiscoveryServerListener.startServer(WSDiscoveryServerListener.java:73)
	at org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl.startServer(ServerLifeCycleManagerImpl.java:61)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:146)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:360)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:152)
	at javax.xml.ws.Endpoint.publish(Unknown Source)
	at demo.wssec.server.Server.<init>(Server.java:47)
	at demo.wssec.server.Server.main(Server.java:109)
Caused by: org.apache.ws.security.WSSecurityException: Error during Signature: 
	at org.apache.ws.security.action.SignatureAction.execute(SignatureAction.java:109)
	at org.apache.ws.security.handler.WSHandler.doSenderAction(WSHandler.java:232)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor.access$200(WSS4JOutInterceptor.java:52)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal.handleMessage(WSS4JOutInterceptor.java:260)
	... 20 more
Caused by: org.apache.ws.security.WSSecurityException: Signature creation failed (Cannot setup signature data structure)
	at org.apache.ws.security.message.WSSecSignatureBase.addReferencesToSign(WSSecSignatureBase.java:191)
	at org.apache.ws.security.message.WSSecSignature.addReferencesToSign(WSSecSignature.java:410)
	at org.apache.ws.security.action.SignatureAction.execute(SignatureAction.java:97)
	... 23 more
Caused by: org.apache.ws.security.WSSecurityException: General security error (WSEncryptBody/WSSignEnvelope: Element to encrypt/sign not found: http://schemas.xmlsoap.org/soap/envelope/, Body)
	at org.apache.ws.security.message.WSSecSignatureBase.addReferencesToSign(WSSecSignatureBase.java:160)
	... 25 more

Exception in thread ""main"" javax.xml.ws.WebServiceException: javax.xml.ws.soap.SOAPFaultException: Security processing failed.
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:369)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:152)
	at javax.xml.ws.Endpoint.publish(Unknown Source)
	at demo.wssec.server.Server.<init>(Server.java:47)
	at demo.wssec.server.Server.main(Server.java:109)
Caused by: javax.xml.ws.soap.SOAPFaultException: Security processing failed.
	at org.apache.cxf.jaxws.DispatchImpl.mapException(DispatchImpl.java:287)
	at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:392)
	at org.apache.cxf.jaxws.DispatchImpl.invokeOneWay(DispatchImpl.java:432)
	at org.apache.cxf.ws.discovery.WSDiscoveryClient.register(WSDiscoveryClient.java:287)
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.serverStarted(WSDiscoveryServiceImpl.java:186)
	at org.apache.cxf.ws.discovery.listeners.WSDiscoveryServerListener.startServer(WSDiscoveryServerListener.java:73)
	at org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl.startServer(ServerLifeCycleManagerImpl.java:61)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:146)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:360)
	... 5 more
Caused by: org.apache.cxf.binding.soap.SoapFault: Security processing failed.
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal.handleMessage(WSS4JOutInterceptor.java:275)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal.handleMessage(WSS4JOutInterceptor.java:136)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:541)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:474)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:377)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:330)
	at org.apache.cxf.endpoint.ClientImpl.invokeWrapped(ClientImpl.java:365)
	at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:385)
	... 12 more
Caused by: org.apache.ws.security.WSSecurityException: Error during Signature: 
	at org.apache.ws.security.action.SignatureAction.execute(SignatureAction.java:109)
	at org.apache.ws.security.handler.WSHandler.doSenderAction(WSHandler.java:232)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor.access$200(WSS4JOutInterceptor.java:52)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal.handleMessage(WSS4JOutInterceptor.java:260)
	... 20 more
Caused by: org.apache.ws.security.WSSecurityException: Signature creation failed (Cannot setup signature data structure)
	at org.apache.ws.security.message.WSSecSignatureBase.addReferencesToSign(WSSecSignatureBase.java:191)
	at org.apache.ws.security.message.WSSecSignature.addReferencesToSign(WSSecSignature.java:410)
	at org.apache.ws.security.action.SignatureAction.execute(SignatureAction.java:97)
	... 23 more
Caused by: org.apache.ws.security.WSSecurityException: General security error (WSEncryptBody/WSSignEnvelope: Element to encrypt/sign not found: http://schemas.xmlsoap.org/soap/envelope/, Body)
	at org.apache.ws.security.message.WSSecSignatureBase.addReferencesToSign(WSSecSignatureBase.java:160)
	... 25 more


I post a image whit my project whit eclipse e tomcat v7.

Can you explain me how you have created your project...

thank you","22/Aug/13 08:54;coheigea;
Right, but the problem is with your project, and not the CXF sample? Please resolve this JIRA + post the issues you are facing with your project to the CXF user mailing list.

Colm.",22/Aug/13 09:01;luca76;ok! thank you.,"26/Aug/13 20:14;dkulp;
I've fixed the sample to not configure the WSS4J stuff at the Bus level (which then would apply to WS-Discovery as well) and instead configure the client or endpoint directly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
@XmlJavaTypeAdapter ignored for exception members,CXF-5219,12664777,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,klape,klape,21/Aug/13 06:16,27/Sep/13 18:18,14/Mar/19 02:30,23/Aug/13 09:26,2.5.11,2.6.9,2.7.6,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAXB Databinding,,,,0,,,,,,,,"Given the interface:

{code:java}
@javax.jws.WebService
public interface WsIntfc {
    public void test() throws MyException;
}
{code}

And exception class:

{code:java}
public class MyException extends Exception {
  private MyClass1 adapted = null;
  
  @XmlJavaTypeAdapter(Cl1ToCl2Adapter.class)
  public MyClass1 getAdapted() {
      return this.adapted;
  }
  
  public void setAdapted(MyClass1 adapted) {
      this.adapted = adapted;
  }
}
{code}

Along with:

{code:java}
public class Cl1ToCl2Adapter extends XmlAdapter<MyClass2, MyClass1> {
  @Override
  public MyClass1 unmarshal(MyClass2 v) throws Exception {
      MyClass1 mc1 = new MyClass1();
      mc1.setName(v.getFile());
      return mc1;
  }

  @Override
  public MyClass2 marshal(MyClass1 v) throws Exception {
      MyClass2 mc2 = new MyClass2();
      mc2.setFile(v.getName());
      return mc2;
  }
}
{code}

{code:java}
public class MyClass1 {
  private String name = null;
  
  public String getName() {
    return this.name;
  }
  
  public void setName(String name) {
    this.name = name;
  }
  
}
{code}

{code:java}
public class MyClass2 {
  private String file = null;
  
  public String getFile() {
    return this.file;
  }
  
  public void setFile(String file) {
    this.file = file;
  }
}
{code}

I get the following schema output:

{code:xml}
<xs:complexType name=""myClass1"">
  <xs:sequence>
    <xs:element minOccurs=""0"" name=""name"" type=""xs:string""/>
  </xs:sequence>
</xs:complexType>
<xs:complexType name=""MyException"">
  <xs:sequence/>
</xs:complexType>
{code}

I should expect {{myClass2}} defined in the schema and referenced by {{MyException}}.
",,,,,,,,,,,,CXF-5223,,,,,,,,21/Aug/13 06:20;klape;cxf5219.diff;https://issues.apache.org/jira/secure/attachment/12599122/cxf5219.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-08-23 09:26:22.234,,,no_permission,,Unknown,,,,,,,,,,,344720,,,Fri Aug 23 09:26:22 UTC 2013,,,,,,0|i1ng2n:,345020,,,,,,,,21/Aug/13 06:20;klape;Proposed patch attached.  Does not include test case.,"23/Aug/13 09:26;ema;Patch applied.Thanks, Kyle.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM's destination's fault handling should distinguish protocol related faults from other faults,CXF-5218,12664608,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,20/Aug/13 13:07,27/Sep/13 18:18,14/Mar/19 02:30,20/Aug/13 16:02,2.6.9,2.7.6,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,WS-* Components,,,,0,,,,,,,,"CXF-4694 fixed the issue of the server not returning WS-RM related faults (i.e., of SequenceFaults) to the client.

The fixed code switched the exchange's message exchange pattern to not-oneway so that the generated fault can be returned to the client.
However, the code does not distinguish arbitrary runtime faults from these WS-RM related faults.




",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,344551,,,2013-08-20 13:07:13.0,,,,,,0|i1nf13:,344851,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
namespace should be null when we can not find related schema,CXF-5217,12664310,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,irisding,irisding,19/Aug/13 07:45,27/Sep/13 18:18,14/Mar/19 02:30,26/Aug/13 15:56,2.6.2,2.7.6,,,,,,2.6.9,2.7.6,,,JAXB Databinding,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Aug/13 01:02;irisding;cxf-5217.patch;https://issues.apache.org/jira/secure/attachment/12599074/cxf-5217.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,344311,,,Fri Aug 23 09:34:44 UTC 2013,,,,,,0|i1ndkf:,344611,,,,,,,,"19/Aug/13 08:53;irisding;in org.apache.cxf.jaxb.JAXBEncoderDecoder.marshallException(Marshaller, Exception, MessagePartInfo, Object):
           if (sch != null) {
                if (!sch.isElementFormQualified()) {
                    namespace = null;
                }
            } else {
                LOG.warning(""Schema associated with "" + namespace + "" is null"");
            }
When we have not found related schema, we just issue a warning. But instead we need to set the namespace = null.

The proposed solution is:

            if (sch != null) {
                if (!sch.isElementFormQualified()) {
                    namespace = null;
                }
            } else {
                LOG.warning(""Schema associated with "" + namespace + "" is null"");
                namespace = null;
            }


",19/Aug/13 23:31;irisding;Can anybody take a look at above issue and fix? Many Thanks!,"23/Aug/13 09:34;irisding;If we can not find schema, we need to set namespace as null. Can anybody take a look at this patch? Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
-Psetup.eclipse fails on Windows,CXF-5215,12664287,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,hoegertn,hoegertn,19/Aug/13 04:12,26/Nov/13 17:40,14/Mar/19 02:30,27/Sep/13 18:10,2.7.7,,,,,,,2.7.8,,,,Build system,,,,0,,,,,,,,Building the repository with -Psetup.eclipse failes in systest-databinding,,,,,,,,,,,,,,,,,,,,19/Aug/13 04:12;hoegertn;maven_log.txt;https://issues.apache.org/jira/secure/attachment/12598705/maven_log.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-08-19 06:40:13.744,,,no_permission,,Unknown,,,,,,,,,,,344288,,,Fri Sep 27 08:26:57 UTC 2013,,,,,,0|i1ndfb:,344588,,,,,,,,"19/Aug/13 06:40;sergey_beryozkin;Sorry, I've removed a comment re building buildutils, just checked the attached log","19/Aug/13 13:52;dkulp;Can you also provide the full path names to your .m2/repository directory and to your CXF checkout location as well as the path to your JDK?    I'm wondering if there are special characters or something in one of those paths that is causing the eclipse plugin to choke.

","19/Aug/13 15:27;hoegertn;JAVA_HOME: C:\Program Files\Java\jdk1.7.0_25
M2_Repo: C:\Users\Thorsten Hoeger\.m2\repository
Repo: C:\projects\git\cxf","26/Aug/13 08:51;hoegertn;Hi, is there anything new on this issue?","27/Sep/13 08:26;gzres;The problem is in {{org.apache.cxf.maven_plugin.AbstractCodegenMoho.checkResources()}} method, in this fragment:
{code:java}
  genroot = getGeneratedTestRoot();
  if (genroot != null) {
      List<Resource> resources = project.getBuild().getTestResources();
      for (Resource r : resources) {
          File d = new File(root, r.getDirectory());
          if (d.equals(genroot)) {
              testRoot = r;
          } 
      }
      Resource r2 = scanForResources(genroot, testRoot);
      if (r2 != testRoot) {
          r2.setDirectory(getGeneratedTestRoot().getAbsolutePath());
          r2.setTargetPath(project.getBuild().getTestOutputDirectory());
          project.addTestResource(r2);
      }
  }
{code}

{{r2.setTargetPath(project.getBuild().getTestOutputDirectory());}} is wrong, because JavaDoc for {{org.apache.maven.model.Resource.setTargetPath(String)}} says:
{noformat}
... The path is relative to the target/classes directory ...
{noformat}
(for test resources, the path is related to ""target/test-classes"" directory).

Setting the target path to {{project.getBuild().getTestOutputDirectory()}} (in my case: ""C:\Dev\Git\projects-github-grgrzybek\cxf\systests\databinding\target\test-classes"") leads (much) later to the following (in maven-eclipse-plugin):
{code:java}
if ( !StringUtils.isEmpty( resource.getTargetPath() ) )
{
   outputFile = new File( ""C:\Dev\Git\projects-github-grgrzybek\cxf\systests\databinding\target\test-classes"", ""C:\Dev\Git\projects-github-grgrzybek\cxf\systests\databinding\target\test-classes"" )
   ...
{code}

and the resulting {{outputFile}} is a concatenation of two absolute paths.

Here's the patch:
{noformat}
$ git diff --cached
diff --git a/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/AbstractCodegenMoho.java b/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/AbstractCodegenMoho.java
index 981185f..71afd8d 100644
--- a/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/AbstractCodegenMoho.java
+++ b/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/AbstractCodegenMoho.java
@@ -356,7 +356,6 @@ public abstract class AbstractCodegenMoho extends AbstractMojo {
             Resource r2 = scanForResources(genroot, sourceRoot);
             if (r2 != sourceRoot) {
                 r2.setDirectory(getGeneratedSourceRoot().getAbsolutePath());
-                r2.setTargetPath(project.getBuild().getOutputDirectory());
                 project.addResource(r2);
             }
         }
@@ -372,7 +371,6 @@ public abstract class AbstractCodegenMoho extends AbstractMojo {
             Resource r2 = scanForResources(genroot, testRoot);
             if (r2 != testRoot) {
                 r2.setDirectory(getGeneratedTestRoot().getAbsolutePath());
-                r2.setTargetPath(project.getBuild().getTestOutputDirectory());
                 project.addTestResource(r2);
             }
         }
{noformat}

adding resource as testResource already declares it to be outputted in TestOutputDirectory.

regards
Grzegorz Grzybek",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using BeanParam in a subresource results in exception,CXF-5214,12664212,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dashorst,dashorst,17/Aug/13 19:30,27/Sep/13 18:18,14/Mar/19 02:30,20/Aug/13 13:16,2.7.6,,,,,,,2.7.7,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"I'm unable to use a @BeanParam in subresource without specifying the bean parameter in the first method call as a method parameter in the resource call chain. In pseudo code:

class Bean {
    @QueryParam(""name"")
    private String name;
    ... getters/setters
}
@Path(""/"")
@Produces(MediaType.PLAIN_TEXT)
class Root {
    @Context private ResourceContext resources;

    @GET public String get() { return ""/hello""; }

    @Path(""hello"")
    public HelloResource hello() {
        return resources.getResource(HelloResource.class);
    }
}

class HelloResource {
    @BeanParam
    private Bean params;

    @GET
    public String get() {
        return ""Hello, "" + params.getName() + ""!"";
    }
}

This fails with an exception in JAXRSUtils.java line 1000 or so. Changing Root#hello's signature to:

@Path(""hello"")
public HelloResource hello(@SuppressWarnings(""unused"") @BeanParam Bean param) {
}

makes the exception go away and has the Bean injected into HelloResource.

In my opinion this should not be necessary, and indeed, Jersey and RestEasy both work support this construct without having to resort to introducing unused parameters.

I've attached a quickstart that shows the problem.",,,,,,,,,,,,,,,,,,,,17/Aug/13 19:31;dashorst;cxf-5214.zip;https://issues.apache.org/jira/secure/attachment/12598616/cxf-5214.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,344213,,,Sun Aug 18 08:23:41 UTC 2013,,,,,,0|i1ncyn:,344513,,,,,,,,18/Aug/13 08:23;dashorst;I'm not sure what's wrong with JIRA: the code looks all messed up...,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Question on ConcurrentModificationException in WSS4J when running CXF WS-Security stress test,CXF-5213,12664094,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,sawadood,sawadood,16/Aug/13 15:54,10/Apr/17 19:06,14/Mar/19 02:30,24/Sep/13 15:24,2.6.2,,,,,,,,,,,WS-* Components,,,,0,,,,,,,,"When running CXF WS-Security stressful test, we saw ConcurrentModificationException while loading crypto,  This exception could be fixed by synchronizing the map, however, I can not understand why ConcurrentModificationException  occurs, as I would expect the handler is thread safe. Does anyone ever see this kind of problem? or can explain why concurrent exception may happen? Is there a fix in CXF layer, or have to be addressed in WSS4J?

Throwable class: java.util.ConcurrentModificationException
Error Message: null
.  StackTrace::Element: java.util.HashMap$AbstractMapIterator.checkConcurrentMod(HashMap.java:191)
.  StackTrace::Element: java.util.HashMap$AbstractMapIterator.makeNext(HashMap.java:196)
.  StackTrace::Element: java.util.HashMap$KeyIterator.next(HashMap.java:269)
.  StackTrace::Element: java.util.HashMap.analyzeMap(HashMap.java:798)
.  StackTrace::Element: java.util.HashMap.rehash(HashMap.java:784)
.  StackTrace::Element: java.util.HashMap.rehash(HashMap.java:817)
.  StackTrace::Element: java.util.HashMap.putImpl(HashMap.java:700)
.  StackTrace::Element: java.util.HashMap.put(HashMap.java:678)
.  StackTrace::Element: org.apache.ws.security.handler.WSHandler.loadCrypto(WSHandler.java:806)
.  StackTrace::Element: org.apache.ws.security.handler.WSHandler.loadDecryptionCrypto(WSHandler.java:753)
.  StackTrace::Element: org.apache.ws.security.handler.WSHandler.decodeDecryptionParameter(WSHandler.java:1139)
.  StackTrace::Element: org.apache.ws.security.handler.WSHandler.doReceiverAction(WSHandler.java:284)
.  StackTrace::Element: org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor.handleMessage(WSS4JInInterceptor.java:265)
.  StackTrace::Element: org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor.handleMessage(WSS4JInInterceptor.java:90)
.  StackTrace::Element: org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
.  StackTrace::Element: org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:801)
.  StackTrace::Element: org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1695)
.  StackTrace::Element: com.ibm.ws.jaxws.support.LibertyHTTPConduit$LibertyWrappedOutputStream.handleResponseInternal(LibertyHTTPConduit.java:70)
.  StackTrace::Element: org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1531)
.  StackTrace::Element: org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1439)
.  StackTrace::Element: org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
.  StackTrace::Element: org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:660)
.  StackTrace::Element: org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
.  StackTrace::Element: org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
.  StackTrace::Element: org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:531)
.  StackTrace::Element: org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:464)
.  StackTrace::Element: org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:367)
.  StackTrace::Element: org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:320)
.  StackTrace::Element: org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:89)
.  StackTrace::Element: org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)

    protected Crypto loadCrypto(
        String cryptoPropertyFile,
        String cryptoPropertyRefId,
        RequestData requestData
    ) throws WSSecurityException {
        Object mc = requestData.getMsgContext();
        Crypto crypto = null;
        
        //
        // Try the Property Ref Id first
        //
        String refId = getString(cryptoPropertyRefId, mc);
        if (refId != null) {
            crypto = cryptos.get(refId);
            if (crypto == null) {
                Object obj = getProperty(mc, refId);
                if (obj instanceof Properties) {
                    crypto = CryptoFactory.getInstance((Properties)obj);
                    cryptos.put(refId, crypto);
                } else if (obj instanceof Crypto) {
                    crypto = (Crypto)obj;
                    cryptos.put(refId, crypto);
                }
            }
        }

",all supported platforms,604800,604800,,0%,604800,604800,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-19 09:13:46.716,,,no_permission,,Advanced,,,,,,,,,,,344095,,,Tue Sep 24 15:24:39 UTC 2013,,,,,,0|i1nc8v:,344397,,,,,,,,"19/Aug/13 09:13;coheigea;
This has already been fixed, as far as I can recall. 2.6.2 is an old version of CXF - could you try again with a more recent version?

Colm.","19/Aug/13 17:51;chance liang;Colm,

Thanks for your reply!

Do you happen to remember the jira number, or the impacted files? So I can build a quick patch to test it.

Thanks

Chance ","20/Aug/13 09:01;coheigea;
A temporary fix was put in place here:

http://svn.apache.org/viewvc/cxf/branches/2.6.x-fixes/rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AbstractWSS4JInterceptor.java?r1=1393364&r2=1393363&pathrev=1393364

This was then removed when we picked up WSS4J 1.6.8 which fixed the problem:

http://svn.apache.org/viewvc/cxf/branches/2.6.x-fixes/rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AbstractWSS4JInterceptor.java?r1=1428803&r2=1428802&pathrev=1428803

Colm.","20/Aug/13 13:12;chance liang;Hi Colm,

Thanks for your reply!

Chance","18/Sep/13 11:17;coheigea;
Can this issue be resolved?

Colm.","24/Sep/13 15:24;sawadood;Thanks, Looks like this issue is fixed in wss4j 1.6.8",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Jetty to the latest 8.x release for the next CXF 2.7.x,CXF-5206,12663691,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,garydgregory,garydgregory,14/Aug/13 17:07,27/Sep/13 18:18,14/Mar/19 02:30,14/Aug/13 18:04,2.7.6,,,,,,,2.7.7,,,,,,,,0,,,,,,,,Please update Jetty to the latest 8.x release (8.1.12.v20130726) for the next CXF 2.7.x: 2.7.7.,"Apache Maven 3.0.5 (r01de14724cdef164cd33c7c8c2fe155faf9602da; 2013-02-19 08:51:28-0500)
Maven home: C:\Java\apache-maven-3.0.5\bin\..
Java version: 1.7.0_25, vendor: Oracle Corporation
Java home: C:\Program Files\Java\jdk1.7.0_25\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows 7"", version: ""6.1"", arch: ""amd64"", family: ""windows""",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,343692,,,2013-08-14 17:07:02.0,,,,,,0|i1n9rr:,343996,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client SSL Cache Timeout default is specified in milliseconds rather than seconds,CXF-5205,12663671,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,coheigea,coheigea,14/Aug/13 15:11,27/Sep/13 18:18,14/Mar/19 02:30,14/Aug/13 15:41,2.6.9,2.7.6,,,,,,2.6.10,2.7.7,,,,,,,0,,,,,,,,"
The Client SSL Cache Timeout default is specified in milliseconds rather than seconds. This means that rather than 24 hours it is currently 1000 days. This should be set to 24 hours instead + documented that it is in seconds, rather than milliseconds.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,343672,,,2013-08-14 15:11:36.0,,,,,,0|i1n9nb:,343976,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS runtime checks TypeVariable bounds too early,CXF-5204,12663649,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,14/Aug/13 13:15,27/Sep/13 18:18,14/Mar/19 02:30,14/Aug/13 14:41,,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,TypeVariable handler checks the bounds too early which loses the correct type information in some cases.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,343650,,,2013-08-14 13:15:12.0,,,,,,0|i1n9if:,343954,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing some default value in the blueprint xml of XKMS osgi bundle,CXF-5202,12663598,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,xldai,xldai,14/Aug/13 08:57,27/Sep/13 18:18,14/Mar/19 02:30,14/Aug/13 09:33,,,,,,,,2.7.7,,,,Services,,,,0,,,,,,,,"{code}
16:55:22,075 | ERROR | Refresh Packages | container.BlueprintContainerImpl  393 | 7 - org.apache.aries.blueprint.core - 1.1.0 | Unable to start blueprint container for bundle cxf-services-xkms-osgi
org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to convert value RefRecipe[name='#recipe-96', idRef='trustedAuthorityValidator'] to type class java.lang.Object
	at org.apache.aries.blueprint.di.CollectionRecipe.internalCreate(CollectionRecipe.java:92)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:106)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:933)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:907)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:888)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:820)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)[7:org.apache.aries.blueprint.core:1.1.0]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_05]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_05]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:245)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:183)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:668)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:370)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:261)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:259)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BlueprintExtender.modifiedBundle(BlueprintExtender.java:222)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:500)[11:org.apache.aries.util:1.1.0]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:433)[11:org.apache.aries.util:1.1.0]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:725)[11:org.apache.aries.util:1.1.0]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:463)[11:org.apache.aries.util:1.1.0]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:422)[11:org.apache.aries.util:1.1.0]
	at org.eclipse.osgi.framework.internal.core.Framework$10.call(Framework.java:1606)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.notifyHookPrivileged(ServiceRegistry.java:1239)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.notifyHooksPrivileged(ServiceRegistry.java:1222)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.Framework.notifyEventHooksPrivileged(Framework.java:1603)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEventPrivileged(Framework.java:1558)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEvent(Framework.java:1505)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEvent(Framework.java:1500)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:391)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:300)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.resumeBundles(PackageAdminImpl.java:312)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.processDelta(PackageAdminImpl.java:556)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.doResolveBundles(PackageAdminImpl.java:251)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.framework.internal.core.PackageAdminImpl$1.run(PackageAdminImpl.java:174)[osgi-3.8.0.v20120529-1548.jar:]
	at java.lang.Thread.run(Thread.java:722)[:1.7.0_05]
Caused by: org.osgi.service.blueprint.container.ComponentDefinitionException: Error when instantiating bean certificateRepo of class class org.apache.cxf.xkms.x509.repo.CertificateRepoFactory
	at org.apache.aries.blueprint.container.BeanRecipe.getInstance(BeanRecipe.java:315)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:806)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)[7:org.apache.aries.blueprint.core:1.1.0]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_05]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_05]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.di.RefRecipe.internalCreate(RefRecipe.java:62)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:106)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.getInstance(BeanRecipe.java:268)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:806)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)[7:org.apache.aries.blueprint.core:1.1.0]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_05]
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_05]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.di.RefRecipe.internalCreate(RefRecipe.java:62)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:106)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.di.CollectionRecipe.internalCreate(CollectionRecipe.java:90)[7:org.apache.aries.blueprint.core:1.1.0]
	... 36 more
Caused by: java.lang.RuntimeException: Invalid repo type ${xkms.certificate.repo}. Valid types are file, ldap
	at org.apache.cxf.xkms.x509.repo.CertificateRepoFactory.createRepository(CertificateRepoFactory.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.7.0_05]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)[:1.7.0_05]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.7.0_05]
	at java.lang.reflect.Method.invoke(Method.java:601)[:1.7.0_05]
	at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:297)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.invoke(BeanRecipe.java:958)[7:org.apache.aries.blueprint.core:1.1.0]
	at org.apache.aries.blueprint.container.BeanRecipe.getInstance(BeanRecipe.java:313)[7:org.apache.aries.blueprint.core:1.1.0]
	... 54 more
{code}",,,,,,,,,,,,,,,,,,,,14/Aug/13 09:08;xldai;blueprint.xml;https://issues.apache.org/jira/secure/attachment/12597928/blueprint.xml,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,343599,,,Wed Aug 14 09:10:03 UTC 2013,,,,,,0|i1n973:,343903,,,,,,,,14/Aug/13 09:10;xldai;An updated working blueprint.xml attached.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using an EncryptBeforeSigning policy with no EncryptedParts/Elements results in no Signature in the request,CXF-5199,12663417,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,coheigea,coheigea,13/Aug/13 13:18,27/Sep/13 18:18,14/Mar/19 02:30,13/Aug/13 14:44,2.6.9,2.7.6,,,,,,2.6.10,2.7.7,,,WS-* Components,,,,0,,,,,,,,"
If an EncryptBeforeSigning policy is used with just a (e.g.) SignedParts policy, instead of also an EncryptedParts policy, then no Signature is created in the message.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,343418,,,2013-08-13 13:18:02.0,,,,,,0|i1n82v:,343722,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FiqlParser fails to parse an expression with camel case when SearchBean is used,CXF-5198,12663403,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,alider,alider,13/Aug/13 12:23,27/Sep/13 18:18,14/Mar/19 02:30,21/Aug/13 13:32,,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,,,,,1,,,,,,,,"{code:java}
public class FiqlParserTest {

    private FiqlParser<SearchBean> parser = new FiqlParser<SearchBean>(SearchBean.class);

    @Test
    public void lowerCase() throws SearchParseException {
        parser.parse(""thename==king"");
    }

    @Test
    public void camelCase() throws SearchParseException {
        parser.parse(""theName==king"");
    }
}
{code}

The problem was introduced in revision: 1468852 and exists in all versions created later on.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-13 12:31:18.512,,,no_permission,,Unknown,,,,,,,,,,,343404,,,Tue Aug 13 12:33:03 UTC 2013,,,,,,0|i1n7zr:,343708,,,,,,,,"13/Aug/13 12:31;sergey_beryozkin;I think it was fixed, can you please try CXF 2.7.6 or CXF 2.6.9 ?","13/Aug/13 12:33;sergey_beryozkin;Oh, you say it is a regression ? Hmm, I'll have a look",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No Java extensionType found to represent {http://www.w3.org/2006/05/addressing/wsdl}UsingAddressing,CXF-5197,12663216,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,12/Aug/13 13:57,27/Sep/13 18:18,14/Mar/19 02:30,12/Aug/13 15:55,2.7.7,,,,,,,2.7.7,,,,WS-* Components,,,,0,,,,,,,,"Using latest 2.7.7-SNAPSHOT version, I noticed a regression in JBossWS-CXF integration testsuite since commit 1510980.
I've a java first endpoint as follows:
{code}
@WebService
(
   portName = ""AddressingServicePort"",
   serviceName = ""AddressingService"",
   targetNamespace = ""http://www.jboss.org/jbossws/ws-extensions/wsaddressing"",
   endpointInterface = ""org.jboss.test.ws.jaxws.samples.wsa.ServiceIface""
)
@Addressing(enabled=true, required=true)
public class ServiceImpl implements ServiceIface
{
   ...
}
{code}

during deployment I get the following error in the logs:
{noformat}
11:36:51,504 ERROR [stderr] (MSC service thread 1-7) javax.wsdl.WSDLException: WSDLException: faultCode=CONFIGURATION_ERROR: No Java extensionType found to represent a '{http://www.w3.org/2006/05/addressing/wsdl}UsingAddressing' element in the context of a 'javax.wsdl.Binding'.
11:36:51,504 ERROR [stderr] (MSC service thread 1-7) 	at javax.wsdl.extensions.ExtensionRegistry.createExtension(ExtensionRegistry.java:350)
11:36:51,504 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.jaxws.support.JaxWsEndpointImpl.buildWsdlExtensibilities(JaxWsEndpointImpl.java:337)
11:36:51,505 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.jaxws.support.JaxWsEndpointImpl.<init>(JaxWsEndpointImpl.java:203)
11:36:51,505 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.createEndpoint(JaxWsServiceFactoryBean.java:239)
11:36:51,505 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:173)
11:36:51,505 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:159)
11:36:51,505 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:211)
11:36:51,505 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:454)
11:36:51,506 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:334)
11:36:51,506 ERROR [stderr] (MSC service thread 1-7) 	at org.jboss.wsf.stack.cxf.deployment.EndpointImpl.doPublish(EndpointImpl.java:66)
11:36:51,506 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
11:36:51,506 ERROR [stderr] (MSC service thread 1-7) 	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:537)
11:36:51,506 ERROR [stderr] (MSC service thread 1-7) 	at org.jboss.wsf.stack.cxf.configuration.NonSpringBusHolder.configure(NonSpringBusHolder.java:117)
11:36:51,506 ERROR [stderr] (MSC service thread 1-7) 	at org.jboss.wsf.stack.cxf.deployment.aspect.BusDeploymentAspect.startDeploymentBus(BusDeploymentAspect.java:129)
11:36:51,507 ERROR [stderr] (MSC service thread 1-7) 	at org.jboss.wsf.stack.cxf.deployment.aspect.BusDeploymentAspect.start(BusDeploymentAspect.java:67)
11:36:51,507 ERROR [stderr] (MSC service thread 1-7) 	at org.jboss.as.webservices.deployers.AspectDeploymentProcessor.deploy(AspectDeploymentProcessor.java:75)
11:36:51,507 ERROR [stderr] (MSC service thread 1-7) 	at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:159)
11:36:51,507 ERROR [stderr] (MSC service thread 1-7) 	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1944)
11:36:51,507 ERROR [stderr] (MSC service thread 1-7) 	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1877)
11:36:51,508 ERROR [stderr] (MSC service thread 1-7) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
11:36:51,508 ERROR [stderr] (MSC service thread 1-7) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
11:36:51,508 ERROR [stderr] (MSC service thread 1-7) 	at java.lang.Thread.run(Thread.java:722)
{noformat}

and the generated wsdl for the endpoint has no UsingAddressing / ws-addressing policy.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,343217,,,Mon Aug 12 14:03:13 UTC 2013,,,,,,0|i1n6u7:,343521,,,,,,,,"12/Aug/13 14:03;asoldano;A bit of debugging revealed that the extensionTypeReg map in javax.wsdl.extensions.ExtensionRegistry contains a org.apache.cxf.ws.addressing.wsdl.UsingAddressing reference, but that's for '{##default}UsingAddressing' element, hence the lookup in org.apache.cxf.jaxws.support.JaxWsEndpointImpl:buildWsdlExtensibilities is failing.

I propose fixing this as follows
{noformat}
Index: api/src/main/java/org/apache/cxf/ws/addressing/wsdl/UsingAddressing.java
===================================================================
--- api/src/main/java/org/apache/cxf/ws/addressing/wsdl/UsingAddressing.java	(revision 1510980)
+++ api/src/main/java/org/apache/cxf/ws/addressing/wsdl/UsingAddressing.java	(working copy)
@@ -33,7 +33,7 @@
 
 @XmlAccessorType(XmlAccessType.FIELD)
 @XmlType(name = """")
-@XmlRootElement(name = ""UsingAddressing"")
+@XmlRootElement(name = ""UsingAddressing"", namespace = ""http://www.w3.org/2006/05/addressing/wsdl"")
 public class UsingAddressing extends TExtensibilityElementImpl {
 
     @XmlAnyAttribute
{noformat}

but I'd appreciate others / Dan's opinion on this as I'm not sure why this is needed now only, and wonder if this is going to cause any issue given all the supported ws-addressing versions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover feature doesn't work when client uses async invocation ,CXF-5196,12663165,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,12/Aug/13 08:26,27/Sep/13 18:18,14/Mar/19 02:30,19/Aug/13 03:27,2.6.9,2.7.6,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-WS Runtime,,,,0,,,,,,,,"Failover feature doesn't work when client uses async invocation, CAMEL-6602 test case shows how to reproduce it. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,343166,,,Mon Aug 19 03:27:17 UTC 2013,,,,,,0|i1n6iv:,343470,,,,,,,,"19/Aug/13 03:27;njiang;Applied the patch into trunk, 2.7.x-fixes and 2.6.x-fixes branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong schema may be returned from LSResourceResolver.resolveResource() with null system ID,CXF-5195,12662929,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,halovanic,halovanic,09/Aug/13 19:22,27/Sep/13 18:18,14/Mar/19 02:30,14/Aug/13 18:06,2.7.6,,,,,,,2.6.10,2.7.7,,,,,,,0,,,,,,,,"This is related to CXF-2609's fix for EndpointReferenceUtils:
{noformat}
if (ent.getKey().endsWith(namespaceURI)) {
{noformat}
I believe this should be:
{noformat}
if (ent.getKey().endsWith("":"" + namespaceURI)) {
{noformat}
Otherwise this can return the wrong schema entry in the case of 2 schema where one's namespace is a prefix + the other namespace.",,,,,,,,,,,,,,,,,,,,09/Aug/13 20:02;halovanic;CXF-5195.patch;https://issues.apache.org/jira/secure/attachment/12597160/CXF-5195.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,342931,,,Fri Aug 09 20:02:57 UTC 2013,,,,,,0|i1n52n:,343235,,,,,,,,09/Aug/13 20:02;halovanic;Patch against trunk file location.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StaxUtils readQName does not accept leading and trailing whitespaces,CXF-5191,12662673,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,08/Aug/13 18:22,27/Sep/13 18:18,14/Mar/19 02:30,09/Aug/13 13:01,2.6.9,2.7.6,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,Core,,,,0,,,,,,,,"According to XML Schema Datatype spec, QName allows leading and trailing whitespaces (as it has the whitespace facet with fixed value ""collapse"" that means the leading and trailing whitespaces are removed).

As StaxUtils.readQName(XMLStream reader) is not following this rule, you may get the exception such as:

java.lang.RuntimeException: Invalid QName in mapping:  soap:Server 
	at org.apache.cxf.staxutils.StaxUtils.readQName(StaxUtils.java:1533)
	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.unmarshalFault(Soap11FaultInInterceptor.java:64)
	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:51)
	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:40)
...
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,342676,,,2013-08-08 18:22:47.0,,,,,,0|i1n3hz:,342980,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Robus one-way not always working,CXF-5190,12662640,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,08/Aug/13 15:47,27/Sep/13 18:18,14/Mar/19 02:30,13/Aug/13 20:05,2.7.6,,,,,,,2.7.7,,,,WS-* Components,,,,0,,,,,,,,"
If an interceptor lives at the END of the UNMARSHALL phase or before the OneWayIn interceptor in the PRE_LOGICAL phase and throws an exception, the ROBUST flags are not put into effect, but the ""oneway"" state is set and the exception/fault is lost.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,342643,,,2013-08-08 15:47:52.0,,,,,,0|i1n3an:,342947,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java transient modifier is ignored by JAXB databinding,CXF-5189,12662612,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,emassip,emassip,08/Aug/13 13:38,27/Sep/13 18:18,14/Mar/19 02:30,13/Sep/13 18:20,2.7.6,,,,,,,2.7.7,,,,JAXB Databinding,,,,0,,,,,,,,"Method org.apache.cxf.jaxb.JAXBContextInitializer#isFieldAccepted ignores transient field modifier and returns true.

I hit this issue because of EclipseLink's [static weaving|http://wiki.eclipse.org/EclipseLink/UserGuide/JPA/Advanced_JPA_Development/Performance/Weaving/Static_Weaving#Table_19-16] which generates such field on model, causing CXF to throw later a ServiceConstructionException.

As stated in JAXB 2.1 spec § 8.9 ""Property And Field"":

{quote}
The following must be mapped (subject to the mapping constraints listed below):

(&hellip;)
* non static, non transient field of all the ancestors up to the stopClass (but
excluding the stopClass itself); if annotated with @XmlAttribute,
then static final field must be mapped (informally this maps to a fixed
attribute but this is formally specified in the mapping tables below)
{quote}

I haven't dug further but MoXy (see http://www.hostettler.net/blog/2012/05/24/moxy) seems to handle them (would make sense) and I guess that JAXB RI is as well.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-06 07:24:07.429,,,no_permission,,Novice,,,,,,,,,,,342615,,,Mon Sep 16 14:40:19 UTC 2013,,,,,,0|i1n34f:,342919,,,,,,,,"02/Sep/13 12:07;emassip;Bump?

This a relatively important bug with a very easy fix !","03/Sep/13 12:48;emassip;Thank you!

Also, if you want to fix a similar issue before somebody report it, you might want to handle the specific static final case that is part of the spec too : {quote}if annotated with @XmlAttribute,
then static final field must be mapped{quote}",06/Sep/13 07:09;emassip;Are you sure you don't want to fix the static final case along with this issue?,"06/Sep/13 07:24;ffang;Ah, sorry I miss your previous comment, will take a close look later on.

Freeman","13/Sep/13 08:02;emassip;Bump!

Fix releases are imminent, please don't forget this issue which is already part of them!

","15/Sep/13 17:16;emassip;Nice, thank you very much!","16/Sep/13 14:40;emassip;Just to be a bit more boring, is that OK you're checking for a XmlAttribute annotation for static fields but the spec is talking about static *final* fields?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Leaks in ServiceImpl when stopping/restarting bundles,CXF-5188,12662586,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,amichai,amichai,amichai,08/Aug/13 10:34,27/Sep/13 18:18,14/Mar/19 02:30,14/Aug/13 14:27,2.7.2,,,,,,,2.7.7,,,,,,,,0,,,,,,,,"I've been looking at VisualVM heap dumps after restarting some custom bundles in Karaf and noticed the stopped services (exported via DOSGi) linger in memory and are never garbage collected (screenshot attached, StoreServiceImpl being the lingering custom service). Browsing through the instance hierarchy from the snapshot I found something suspicious - org.apache.cxf.endpoint.ServiceImpl registers the ManagedEndpoint with the ServerLifeCycleManager, but doesn't seem to unregister it when the instance is destroyed. Could this be the memory leak preventing the old bundles from being collected?
","Karaf 2.3.2, DOSGi 1.6.0-SNAPSHOT",,,,,,,,,,,,,,,,,,,08/Aug/13 10:36;amichai;ServiceImpl_leak_snapshot.png;https://issues.apache.org/jira/secure/attachment/12596818/ServiceImpl_leak_snapshot.png,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,342589,,,Wed Aug 14 10:06:39 UTC 2013,,,,,,0|i1n2z3:,342893,,,,,,,,"08/Aug/13 21:09;amichai;In addition, ServiceImpl adds a listener to the bindingFactory, but never removes it. That might explain exceptions that appear when restarting bundles. I'm not familiar with these mechanisms, so if someone in the know could have a look at ServiceImpl and make sure all the resources/listeners are properly managed, that would be great!

java.lang.RuntimeException: Soap 1.1 endpoint already registered on address http://192.168.1.100:9000/com/example/MyService
        at org.apache.cxf.binding.soap.SoapBindingFactory.addListener(SoapBindingFactory.java:921)
        at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:131)[142:org.apache.cxf.cxf-api:2.7.2]
        at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:204)[150:org.apache.cxf.cxf-rt-frontend-simple:2.7.2]
        at org.apache.cxf.dosgi.dsw.handlers.AbstractPojoConfigurationTypeHandler.createServerFromFactory(AbstractPojoConfigurationTypeHandler.java:191)[161:cxf-dosgi-ri-dsw-cxf:1.6.0.SNAPSHOT]
        at org.apache.cxf.dosgi.dsw.handlers.PojoConfigurationTypeHandler.createServer(PojoConfigurationTypeHandler.java:119)[161:cxf-dosgi-ri-dsw-cxf:1.6.0.SNAPSHOT]
        at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminCore.exportInterfaces(RemoteServiceAdminCore.java:184)[161:cxf-dosgi-ri-dsw-cxf:1.6.0.SNAPSHOT]
        at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminCore.exportService(RemoteServiceAdminCore.java:140)[161:cxf-dosgi-ri-dsw-cxf:1.6.0.SNAPSHOT]
        at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminInstance$1.run(RemoteServiceAdminInstance.java:59)[161:cxf-dosgi-ri-dsw-cxf:1.6.0.SNAPSHOT]
        at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminInstance$1.run(RemoteServiceAdminInstance.java:57)[161:cxf-dosgi-ri-dsw-cxf:1.6.0.SNAPSHOT]
        at java.security.AccessController.doPrivileged(Native Method)[:1.7.0_25]
        at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminInstance.exportService(RemoteServiceAdminInstance.java:57)[161:cxf-dosgi-ri-dsw-cxf:1.6.0.SNAPSHOT]
        at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminInstance.exportService(RemoteServiceAdminInstance.java:41)[161:cxf-dosgi-ri-dsw-cxf:1.6.0.SNAPSHOT]
        at org.apache.cxf.dosgi.topologymanager.exporter.TopologyManagerExport.exportServiceUsingRemoteServiceAdmin(TopologyManagerExport.java:185)[160:cxf-dosgi-ri-topology-manager:1.6.0.SNAPSHOT]
        at org.apache.cxf.dosgi.topologymanager.exporter.TopologyManagerExport.doExportService(TopologyManagerExport.java:168)[160:cxf-dosgi-ri-topology-manager:1.6.0.SNAPSHOT]
        at org.apache.cxf.dosgi.topologymanager.exporter.TopologyManagerExport$3.run(TopologyManagerExport.java:143)[160:cxf-dosgi-ri-topology-manager:1.6.0.SNAPSHOT]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_25]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_25]
        at java.lang.Thread.run(Thread.java:724)[:1.7.0_25]
","14/Aug/13 10:06;amichai;The main leak turns out to be higher up the stack in ServerFactoryBean - when a server is initialized successfully but then throws an exception when started (such as the one above), the exception is propagated and the server is not properly disposed of. I fixed it to first destroy the server before propagating the exception.

After this fix the main leak (which was easily recreated on almost every restart) is closed, but there's still another leak somewhere that's harder to recreate, I've seen it a couple of times and haven't tracked it down yet - I'll open a separate issue when I have more details.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP 1.2 fault reason xml:lang attribute not properly parsed on client side,CXF-5186,12662426,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,asoldano,asoldano,asoldano,07/Aug/13 16:36,27/Sep/13 18:18,14/Mar/19 02:30,08/Aug/13 13:40,2.5.10,2.6.7,2.7.4,,,,,2.6.10,2.7.7,3.0.0-milestone1,,Soap Binding,,,,0,,,,,,,,"CXF-4790 fixed the subcode in the SOAP 1.2 faults. The patch for that included also a partial fix for having xml:lang attribute properly written on the message going on the wire (server response). The problem is that the xml:lang attribute is still not properly parsed on client side, so it's not possible to get the actual fault reason message locale using the saaj api on client side.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,342430,,,2013-08-07 16:36:14.0,,,,,,0|i1n1zz:,342735,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak if no addresses are specified for SequentialStrategy,CXF-5185,12662322,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,manderson23@gmail.com,manderson23@gmail.com,07/Aug/13 09:27,27/Sep/13 18:18,14/Mar/19 02:30,15/Aug/13 11:15,2.6.2,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,,,,,0,,,,,,,,"If an empty list of alternateAddresses is specified in SequentialStrategy this causes a NullPointerException in FailoverTargetSelector.

As the exception is thrown the key is never removed from the inProgress map resulting in a memory leak.

The stack trace for the exception is below:

java.lang.NullPointerException
     [java] 	at org.apache.cxf.clustering.FailoverTargetSelector$InvocationContext.retrieveOriginalEndpoint(FailoverTargetSelector.java:397)
     [java] 	at org.apache.cxf.clustering.FailoverTargetSelector.complete(FailoverTargetSelector.java:162)
     [java] 	at org.apache.cxf.endpoint.ClientImpl.processResult(ClientImpl.java:592)
     [java] 	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:540)
     [java] 	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:464)
     [java] 	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:367)
     [java] 	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:320)
     [java] 	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:89)
     [java] 	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-14 19:51:18.712,,,no_permission,,Unknown,,,,,,,,,,,342326,,,Thu Aug 15 11:15:07 UTC 2013,,,,,,0|i1n1cv:,342631,,,,,,,,"14/Aug/13 19:51;sergey_beryozkin;I can't reproduce it with a simple failover test, where a sequential strategy has no addresses, in my case the endpoint in InvocationContext.retrieveOriginalEndpoint(FailoverTargetSelector.java:397) is not null. Perhaps you can create a test case ?
In meantime I've added NPE guard,",15/Aug/13 11:15;sergey_beryozkin;I'm marking it as Fixed for now - please reopen if the NPE guard proves to be not sufficient in your case,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.ws.rs.NotFoundException while using LoadDistributorFeature after failover of 1st node or with single node configured,CXF-5184,12662244,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,panjacek,panjacek,06/Aug/13 23:18,27/Sep/13 18:18,14/Mar/19 02:30,19/Aug/13 10:53,2.7.6,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"I've configured JAX-RS proxy to work with LoadDistributorFeature. 
If failover occurs on the first node OR when there's only a single 'healthy' (no failover) node configured then I'm getting javax.ws.rs.NotFoundException as a result of a second call to the proxy. 
All works fine with FailoverFeature or without any clustering features enabled.

{code:tile=proxy inteface}
@Path(""/library"")
public interface Library {
	@GET
	@Path(""/books"")
	Books getAllBooks();
	
}
{code}

{code:title=client}
		LoadDistributorFeature feature = new LoadDistributorFeature();
		SequentialStrategy strategy = new SequentialStrategy();
		strategy.setAlternateAddresses(asList(""http://localhost:8080""));
		feature.setStrategy(strategy);
		

		JAXRSClientFactoryBean bean = new JAXRSClientFactoryBean();
		List<Feature> features = new ArrayList<Feature>();
		features.add(feature);
		bean.setFeatures(features);
		bean.setAddress(""http://dummy:8080"");
		bean.setResourceClass(Library.class);
		Library library = bean.create(Library.class);
		
		library.getAllAuthors();
		

		library.getAllAuthors; //I'm getting the exception here

{code}",jdk7,,,,,,,,,,,,,,,,,,,18/Aug/13 18:34;panjacek;CXF-5184.patch;https://issues.apache.org/jira/secure/attachment/12598680/CXF-5184.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-08-13 08:32:40.067,,,no_permission,,Unknown,,,,,,,,,,,342248,,,Mon Aug 19 10:47:31 UTC 2013,,,,,,0|i1n0vr:,342553,,,,,,,,12/Aug/13 22:02;panjacek;updating the bug info after further investigation,13/Aug/13 08:32;sergey_beryozkin;Thanks. Looks like LoadDistributorFeature does not move to the alternate address in case of failures...,18/Aug/13 18:34;panjacek;I have fixed the issue. Attaching a patch.,"18/Aug/13 19:09;sergey_beryozkin;Hi, many thanks for your patch - much appreciated.

One thing I'd like to note, a mock based test is good, but we probably need to have a system test updated instead, I'm not really sure we can have JAX-RS test dependency in the clustering feature module, LoadDistributorTest is available in systests/jaxrs, I copied it from systests/jaxws.   

Can you please consider updating LoadDistributorTest or add LoadDistributorTestSameAddress which will test your scenario ? I can deal with it later on myself. Right now I'm dealing with many different issues so it might take me a bit of time :-), but we will get it fixed.

By the way, I'd like to clarify. You have two ""library.getAllAuthors();"" calls, what happens during the first call, does it succeed, i.e, does it reach its target ? 
Next, given that we only have a single (same) address set in SequentialStrategy, what do you expect to happen during a second ""library.getAllAuthors();"" call ?

Thanks








","18/Aug/13 20:04;panjacek;OK, I'll have a look at the system test and try to reproduce the problem there.

In my example actually the first call to ""library.getAllAuthors();"" is also not successful when primary address set in 'bean.setAddress(""http://localhost:8080"");' is same as the alternate address. 
If I set 'bean.setAddress(""http://dummy:8080"");' and alternate address to ""http://localhost:8080"" then the first call is successfull (calls ""http://localhost:8080/library/books"") and the second fails because it calls ""http://localhost:8080"".
In the example I'm showing the case when there wasn't any failover and the node ""http://localhost:8080"" is healthy, so I'm expecting both calls to send request to ""http://localhost:8080/library/books"" and return the same response, which is not the case with the current implementation.


","19/Aug/13 07:33;sergey_beryozkin;Hi, thanks for the clarifications.

To contribute a bit, I've added a test in LoadDistributorTest:

{code:java}
@Test    
    public void testFailover() throws Exception {
        LoadDistributorFeature feature = new LoadDistributorFeature();
        List<String> alternateAddresses = new ArrayList<String>();
        alternateAddresses.add(Server.ADDRESS2);
        SequentialStrategy strategy = new SequentialStrategy();
        strategy.setAlternateAddresses(alternateAddresses);
        feature.setStrategy(strategy);
        
        BookStore bookStore = getBookStore(Server.ADDRESS1, feature);
        
        // 1st call
        Book book = bookStore.getBook(""123"");
        assertEquals(""unexpected id"", 123L, book.getId());
        
        // 2nd call
        book = bookStore.getBook(""123"");
        assertEquals(""unexpected id"", 123L, book.getId());
    }
{code}

It fails during the 2nd call, exactly as you described in this JIRA. 
So I can continue working with your fix to get the above test passing.

Please double check the above test passes for you with your local fix

thanks
","19/Aug/13 10:35;sergey_beryozkin;Unfortunately the proposed fix gets WS test spinning. I've poked around a bit and found that FailoverTargetSelector already deals with similar cases, I have a fix getting in now","19/Aug/13 10:47;sergey_beryozkin;http://svn.apache.org/r1515348,

thanks for your help, the fix is different but your effort is appreciated :-)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Blueprint start delays with policy fragments,CXF-5181,12661976,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,05/Aug/13 21:27,27/Sep/13 18:18,14/Mar/19 02:30,05/Aug/13 21:47,2.7.6,,,,,,,2.6.10,2.7.7,,,WS-* Components,,,,0,,,,,,,,"
blueprint.xml file that use the policy feature on a jaxws:client/service or bus can result in long startup delays.   The imports in the policy schemas that we pass to blueprint are heading off to the internet to be downloaded rather than local.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,341980,,,2013-08-05 21:27:11.0,,,,,,0|i1mz87:,342285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP rpc/lit in/out headers aren't working for output from server,CXF-5178,12661914,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,05/Aug/13 16:13,27/Sep/13 18:18,14/Mar/19 02:30,05/Aug/13 20:11,2.7.5,,,,,,,2.7.7,,,,,,,,0,,,,,,,,"
The JAXWS unit test:  HeaderClientServerTest.testRPCInOutHeader actually shows this problem despite the test passing.   If you look at the logs, the header comes IN as a header from the client, but the response is putting the ""header"" into the body instead of the header.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,341918,,,Mon Aug 05 16:57:27 UTC 2013,,,,,,0|i1myun:,342224,,,,,,,,"05/Aug/13 16:57;dkulp;Actually, this is a bad WSDL for that particular test.  Fixing the WSDL.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis inheritance: inherited xml attributes appear twice,CXF-5176,12661612,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,vincentr42,vincentr42,04/Aug/13 19:26,27/Sep/13 18:18,14/Mar/19 02:30,14/Aug/13 19:48,2.7.5,,,,,,,2.6.10,2.7.7,,,Aegis Databinding,,,,0,,,,,,,,"Hi,

This JIRA issue follows [my post|http://cxf.547215.n5.nabble.com/Aegis-and-inheritance-issue-migrating-from-2-3-9-to-2-7-5-tt5731622.html] in user mailing list (as asked by Dan Kulp).

The behavior of Aegis databinding between CXF 2.3.9 and 2.7.5 has somewhat changed regarding inheritance.

Being
- two classes, {{BaseType}} and {{ExtendedType}} (that extends {{BaseType}}), both declaring XML elements and attributes, both having a distinct namespace ({{base-type-ns}}, {{extended-type-ns}}) ).
- A simple web service operation returning an instance of {{ExtendedType}}

|| In CXF 2.3.9 || In CXF 2.7.5 ||
|In the generated XML Schema (from the WSDL), only one type ({{ExtendedType}}) is present, having attributes and elements of {{BaseType}} appearing therefore in {{extended-type-ns}} namespace| In the generated XML Schema (from the WSDL), the two types appear. One being an extension of the other. Therefore, elements from {{BaseType}} are in the {{base-type-ns}} namespace |
| | In generated XML Schema, {{BaseType}} attributes are present twice: in the {{BaseType}} type definition but also in the {{ExtendedType}} definition. That generates invalid xml message, the same (unqualified) attribute being written twice...|


First ""behavior change"" (element from super type that have a different namespace now) has also been reported by others (cf [this|http://cxf.547215.n5.nabble.com/Aegis-and-inheritance-issue-migrating-from-2-3-9-to-2-7-5-td5731622.html]), but doesn't look like very problematic.
I mean, the new behavior is somewhat logical and it is what anyone would expect.

But, the wrong handling of base type attributes is more than annoying, as non invalid xml is generated...

In order to help regarding the resolution of this issue, I have written:
- A small standalone maven project illustrating the test case described above and emphasizing the difference between 2.3.9 and 2.7.5 version,
- a patch (for {{2.7.x-fixes}} branch) to ""enrich"" the existing aegis databing inheritance testcase so that the attributes appearing twice are detected,
- a patch (for {{2.7.x-fixes}} branch) with a proposed quick fix for this issue. (To be stricly reviewed)
 
(I just need to find a way to attach them to this issue :-))

Kind regards,
Vincent


",,,,,,,,,,,,,,,,,,,,04/Aug/13 19:34;vincentr42;cxf-aegis-inheritance-bug.zip;https://issues.apache.org/jira/secure/attachment/12595824/cxf-aegis-inheritance-bug.zip,04/Aug/13 19:34;vincentr42;enrich-aegis-inheritance-test-case.patch;https://issues.apache.org/jira/secure/attachment/12595825/enrich-aegis-inheritance-test-case.patch,04/Aug/13 19:34;vincentr42;fix-aegis-inheritance-issue.patch;https://issues.apache.org/jira/secure/attachment/12595826/fix-aegis-inheritance-issue.patch,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,341801,,,Sun Aug 04 19:34:19 UTC 2013,,,,,,0|i1my4n:,342107,,,,,,,,"04/Aug/13 19:34;vincentr42;Here we go for attached files:
- [^cxf-aegis-inheritance-bug.zip]: the standalone small maven project illustrating differences between 2.3.9 / 2.7.5 versions regarding inheritance. Please adapt the {{cxf.version}} property in project pom.
- [^enrich-aegis-inheritance-test-case.patch]:
the enrichment of the existing inheritance test case. Patch to be applied on {{cxf\branches\2.7.x-fixes\rt\databinding\aegis}} directory 
- [^fix-aegis-inheritance-issue.patch]: A fix proposal. It simply applies the same logic for attributes as the one used for elements (skip inherited properties, when writing object/schema of the extended object). Probably a bit naive but it seems to work :-). Patch to be applied on {{cxf\branches\2.7.x-fixes\rt\databinding\aegis}} directory

Kind regards,
Vincent",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
?_wadl generates a ClassCastException,CXF-5175,12661502,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jeff9finger,jeff9finger,02/Aug/13 22:56,27/Sep/13 18:18,14/Mar/19 02:30,14/Aug/13 14:43,2.7.5,2.7.6,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"When using the WadlGenerator via ""?_wadl"", a ClassCastException is caused. Here is the stack trace:
org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver 115 - Error occurred during error handling, give up!
org.apache.cxf.interceptor.Fault: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:76) ~[cxf-api-2.7.6.jar:2.7.6]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:331) [cxf-api-2.7.6.jar:2.7.6]
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121) [cxf-api-2.7.6.jar:2.7.6]
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239) [cxf-rt-transports-http-2.7.6.jar:2.7.6]
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:223) [cxf-rt-transports-http-2.7.6.jar:2.7.6]
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:203) [cxf-rt-transports-http-2.7.6.jar:2.7.6]
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137) [cxf-rt-transports-http-2.7.6.jar:2.7.6]
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:159) [cxf-rt-transports-http-2.7.6.jar:2.7.6]
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:286) [cxf-rt-transports-http-2.7.6.jar:2.7.6]
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:211) [cxf-rt-transports-http-2.7.6.jar:2.7.6]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:621) [servlet-api.jar:na]
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:262) [cxf-rt-transports-http-2.7.6.jar:2.7.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305) [catalina.jar:7.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.23]
	at com.transverse.bleep.api.TractApiServletFilter.doFilter(TractApiServletFilter.java:93) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.23]
	at com.transverse.bleep.servlet.filter.MDCUserFilter.doFilter(MDCUserFilter.java:79) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.23]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:167) [spring-security-web-3.1.0.RELEASE.jar:3.1.0.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346) [spring-web-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259) [spring-web-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.23]
	at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:147) [spring-orm-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76) [spring-web-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224) [catalina.jar:7.0.23]
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:169) [catalina.jar:7.0.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java) [catalina.jar:7.0.23]
	at org.apache.catalina.core.StandardHostValve.__invoke(StandardHostValve.java:168) [catalina.jar:7.0.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java) [catalina.jar:7.0.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98) [catalina.jar:7.0.23]
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:928) [catalina.jar:7.0.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) [catalina.jar:7.0.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407) [catalina.jar:7.0.23]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987) [tomcat-coyote.jar:7.0.23]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:539) [tomcat-coyote.jar:7.0.23]
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:298) [tomcat-coyote.jar:7.0.23]
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895) [na:1.6.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918) [na:1.6.0_51]
	at java.lang.Thread.run(Thread.java:680) [na:1.6.0_51]
Caused by: java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class
	at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:226) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:231) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:204) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.utils.ResourceUtils.checkJaxbType(ResourceUtils.java:600) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.utils.ResourceUtils.getAllTypesForResource(ResourceUtils.java:543) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.utils.ResourceUtils.getAllRequestResponseTypes(ResourceUtils.java:515) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.handleRequest(WadlGenerator.java:218) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.impl.RequestPreprocessor.handleMetadataRequest(RequestPreprocessor.java:216) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.impl.RequestPreprocessor.checkMetadataRequest(RequestPreprocessor.java:200) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.impl.RequestPreprocessor.preprocess(RequestPreprocessor.java:84) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:117) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:101) ~[cxf-rt-frontend-jaxrs-2.7.6.jar:2.7.6]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271) [cxf-api-2.7.6.jar:2.7.6]


This is caused by a construct in our code like the following:
@XmlElement(name=""orderItems"",required=true)
protected OrderItemsDTO<? extends OrderItemDTO<? extends OrderItem>> orderItems;

The problem seems to be that the class needs to recurse again in InjectionUtils#getActualType(). When I set a breakpoint and made the call manually, the problem did not occur.
","Tomcat 7.0.23, Spring 3.1.1 Java 1.6, OSX 10.8.4 (Darwin Kernel Version 12.4.0, root:xnu-2050.24.15~1/RELEASE_X86_64 x86_64)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-14 14:43:05.225,,,no_permission,,Moderate,,,,,,,,,,,341691,,,Wed Aug 14 14:43:05 UTC 2013,,,,,,0|i1mxg7:,341997,,,,,,,,14/Aug/13 14:43;sergey_beryozkin;Fixed as part of https://issues.apache.org/jira/browse/CXF-5204,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HEAD operation implementation is not compliant with specification,CXF-5167,12660632,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,antonio_sargento,antonio_sargento,30/Jul/13 10:25,27/Sep/13 18:18,14/Mar/19 02:30,05/Aug/13 16:21,2.7.5,,,,,,,2.7.7,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"The implementation of HEAD operation is not compliant with the HTTP 1.1 specification.

{quote}
9.4 HEAD

The HEAD method is identical to GET except that the server MUST NOT return a message-body in the response. The metainformation contained in the HTTP headers in response to a HEAD request SHOULD be identical to the information sent in response to a GET request. This method can be used for obtaining metainformation about the entity implied by the request without transferring the entity-body itself. This method is often used for testing hypertext links for validity, accessibility, and recent modification.

The response to a HEAD request MAY be cacheable in the sense that the information contained in the response MAY be used to update a previously cached entity from that resource. If the new field values indicate that the cached entity differs from the current entity (as would be indicated by a change in Content-Length, Content-MD5, ETag or Last-Modified), then the cache MUST treat the cache entry as stale.
{quote}
Now, since the HEAD response doesn't have an body entity, the Content-lenght is equal to zero and the mime-type is set to text/plain.

I think that the problem is due the following code in class org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor (lines 228 - 236) 

{code}
// Write the entity
entity = InjectionUtils.getEntity(response.getEntity());
setResponseStatus(message, getActualStatus(response.getStatus(), entity));
if (entity == null) {
   responseHeaders.putSingle(HttpHeaders.CONTENT_LENGTH, ""0"");
   responseHeaders.remove(HttpHeaders.CONTENT_TYPE);
   message.remove(Message.CONTENT_TYPE);
   return;
}
{code}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-07-30 10:33:33.719,,,no_permission,,Unknown,,,,,,,,,,,340822,,,Tue Jul 30 10:38:06 UTC 2013,,,,,,0|i1ms5r:,341140,,,,,,,,"30/Jul/13 10:33;sergey_beryozkin;Are you saying that you see Content-Type set ""text/plain"" in response to HEAD ? ","30/Jul/13 10:37;sergey_beryozkin;Oh, you mean you need Content-Length and Content-Type preserved in response to HEAD...Let me double check on that",30/Jul/13 10:38;antonio_sargento;The problem is that the original Content-type is removed and set the default one.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression: Incompatibility with WAS JAXB 2.2,CXF-5166,12660392,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,davidkarlsen@gmail.com,davidkarlsen@gmail.com,29/Jul/13 14:37,27/Sep/13 18:18,14/Mar/19 02:30,05/Aug/13 20:18,2.7.6,,,,,,,2.7.7,,,,Core,,,,0,JAXB,WebSphere,,,,,,"After upgrading to latest 2.7.6 I get:
{noformat}
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'authorizationClient': FactoryBean threw exception on object creation; nested exception is java.lang.reflect.Undecl
aredThrowableException
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:149) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:102) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1454) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:249) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:910) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:853) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:768) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:795) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:723) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        ... 127 common frames omitted
Caused by: java.lang.reflect.UndeclaredThrowableException: null
        at $Proxy65.getBeanInfo(Unknown Source) ~[na:na]
        at org.apache.cxf.common.jaxb.JAXBUtils.getBeanInfo(JAXBUtils.java:1155) ~[cxf-api-2.7.6.jar:2.7.6]
        at org.apache.cxf.jaxb.JAXBSchemaInitializer.getBeanInfo(JAXBSchemaInitializer.java:140) ~[cxf-rt-databinding-jaxb-2.7.6.jar:2.7.6]
        at org.apache.cxf.jaxb.JAXBDataBinding.checkForJAXBAnnotations(JAXBDataBinding.java:439) ~[cxf-rt-databinding-jaxb-2.7.6.jar:2.7.6]
        at org.apache.cxf.jaxb.JAXBDataBinding.justCheckForJAXBAnnotations(JAXBDataBinding.java:427) ~[cxf-rt-databinding-jaxb-2.7.6.jar:2.7.6]
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:352) ~[cxf-rt-databinding-jaxb-2.7.6.jar:2.7.6]
        at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:86) ~[cxf-rt-core-2.7.6.jar:2.7.6]
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:446) ~[cxf-rt-core-2.7.6.jar:2.7.6]
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:548) ~[cxf-rt-core-2.7.6.jar:2.7.6]
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:265) ~[cxf-rt-core-2.7.6.jar:2.7.6]
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:205) ~[cxf-rt-frontend-jaxws-2.7.6.jar:2.7.6]
        at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:102) ~[cxf-rt-frontend-simple-2.7.6.jar:2.7.6]
        at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:90) ~[cxf-rt-frontend-simple-2.7.6.jar:2.7.6]
        at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:156) ~[cxf-rt-frontend-simple-2.7.6.jar:2.7.6]
        at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:156) ~[cxf-rt-frontend-jaxws-2.7.6.jar:2.7.6]
        at org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean.create(JaxWsProxyFactoryBeanDefinitionParser.java:79) ~[cxf-rt-frontend-jaxws-2.7.6.jar:2.7.6]
        at org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean.getObject(JaxWsProxyFactoryBeanDefinitionParser.java:83) ~[cxf-rt-frontend-jaxws-2.7.6.jar:2.7.6]
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:142) ~[spring-beans-3.2.3.RELEASE.jar:3.2.3.RELEASE]
        ... 136 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.ibm.xml.xlxp2.jaxb.JAXBContextImpl.getBeanInfo(java.lang.Class)
        at java.lang.Class.throwNoSuchMethodException(Class.java:282) ~[na:1.6.0]
        at java.lang.Class.getMethod(Class.java:853) ~[na:1.6.0]
        at org.apache.cxf.common.util.ReflectionInvokationHandler.invoke(ReflectionInvokationHandler.java:52) ~[cxf-api-2.7.6.jar:2.7.6]
        ... 154 common frames omitted
[29.07.13 15:44:28:187 CEST] 0000000a FfdcProvider  W com.ibm.ws.ffdc.impl.FfdcProvider logIncident FFDC1003I: FFDC Incident emitted on /usr/IBM/WebSphere/AppServer/profiles/AppSrv01/logs/ffdc/cpl_dev_SPAN_b968414
_13.07.29_15.44.27.8555959407531874289149.txt com.ibm.ws.webcontainer.webapp.WebApp.notifyServletContextCreated 1341

{noformat}

If I downgrade to 2.7.5 it's OK again.

I think this happened in this commit:
commit ace8a305f45c6e830ec2e83fc2d3c8e3cd163257
Author: Daniel Kulp <dkulp@apache.org>
Date:   Sat Jul 13 21:30:02 2013 +0000

    Initial support for using eclipselink Moxy instead of the JAXB ri.  Many tests will still fail with it, but most of the simpler things are now working.
    
WAS version:
bash-3.2$ /usr/IBM/WebSphere/AppServer/bin/versionInfo.sh 
WVER0010I: Copyright (c) IBM Corporation 2002, 2005, 2008; All rights reserved.
WVER0012I: VersionInfo reporter version 1.15.1.47, dated 10/18/11

--------------------------------------------------------------------------------
IBM WebSphere Product Installation Status Report
--------------------------------------------------------------------------------

Report at date and time 29. juli 2013 16:35:47 CEST

Installation
--------------------------------------------------------------------------------
Product Directory        /usr/IBM/WebSphere/AppServer
Version Directory        /usr/IBM/WebSphere/AppServer/properties/version
DTD Directory            /usr/IBM/WebSphere/AppServer/properties/version/dtd
Log Directory            /var/ibm/InstallationManager/logs

Product List
--------------------------------------------------------------------------------
ND                       installed

Installed Product
--------------------------------------------------------------------------------
Name                  IBM WebSphere Application Server Network Deployment
Version               8.0.0.3
ID                    ND
Build Level           cf031212.03
Build Date            3/20/12
Package               com.ibm.websphere.ND.v80_8.0.3.20120320_0536
Architecture          PPC64
Installed Features    IBM 64-bit SDK for Java, Version 6
                      EJBDeploy tool for pre-EJB 3.0 modules
                      Embeddable EJB container
                      Stand-alone thin clients and resource adapters

--------------------------------------------------------------------------------
End Installation Status Report
--------------------------------------------------------------------------------
bash-3.2$ 
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-02 18:26:50.919,,,no_permission,,Unknown,,,,,,,,,,,340584,,,Tue Aug 06 07:40:05 UTC 2013,,,,,,0|i1mqov:,340902,,,,,,,,"02/Aug/13 18:26;dkulp;
Just a note for my reference: technically, CXF has never worked with or supported the JAXB implementation build into WebSphere.  When the context was created, if it was NOT a com.sun.xml.bind version, it would force a recreation with the com.sun.xml.internal.bind (JAXB version in the JDK).   The commit was to NOT do that to start allowing support for additional JAXB implementation to work.   Thus, we COULD now check if its not a com.sun or org.eclipse version and defer back to the old ""internal"" methods or we COULD add additional code to support the IBM JAXB impl.   Without access to the IBM JAXB impl, the 2nd option would be hard.  Alternatively, if not Sun/Eclipse we could TRY processing some of the annotations ourselves to see if we can generate the BeanInfo objects that way.  May not be 100% matching the impl, but we could probably hit a very large %.

Anyway, just thoughts for right now.



","05/Aug/13 20:18;dkulp;
I believe this is now fixed.   I'd certainly appreciate it if someone could test it with the 2.7.7-SNAPSHOT builds (that should be available tomorrow) to make sure as I don't have access to WAS to really test it.
","06/Aug/13 07:40;davidkarlsen@gmail.com;[~dkulp]: Just gave it a spin - and it works fine!
Tested on:
{noformat}
bash-3.2$ /usr/IBM/WebSphere/AppServer/bin/versionInfo.sh 
WVER0010I: Copyright (c) IBM Corporation 2002, 2005, 2008; All rights reserved.
WVER0012I: VersionInfo reporter version 1.15.1.47, dated 10/18/11

--------------------------------------------------------------------------------
IBM WebSphere Product Installation Status Report
--------------------------------------------------------------------------------

Report at date and time 6. august 2013 11:10:27 CEST

Installation
--------------------------------------------------------------------------------
Product Directory        /usr/IBM/WebSphere/AppServer
Version Directory        /usr/IBM/WebSphere/AppServer/properties/version
DTD Directory            /usr/IBM/WebSphere/AppServer/properties/version/dtd
Log Directory            /var/ibm/InstallationManager/logs

Product List
--------------------------------------------------------------------------------
ND                       installed

Installed Product
--------------------------------------------------------------------------------
Name                  IBM WebSphere Application Server Network Deployment
Version               8.0.0.3
ID                    ND
Build Level           cf031212.03
Build Date            3/20/12
Package               com.ibm.websphere.ND.v80_8.0.3.20120320_0536
Architecture          PPC64
Installed Features    IBM 64-bit SDK for Java, Version 6
                      EJBDeploy tool for pre-EJB 3.0 modules
                      Embeddable EJB container
                      Stand-alone thin clients and resource adapters

--------------------------------------------------------------------------------
End Installation Status Report
--------------------------------------------------------------------------------
bash-3.2$ 

{noformat}

Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong class name in LogUtils.getL7dLogger() of org.apache.cxf.aegis.databinding.XMLStreamDataWriter class,CXF-5164,12660321,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,xldai,xldai,29/Jul/13 05:25,27/Sep/13 18:18,14/Mar/19 02:30,29/Jul/13 05:53,2.7.6,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,OtherDatabindings,,,,0,,,,,,,,"private static final Logger LOG = LogUtils.getL7dLogger(XMLStreamDataReader.class);

the ""XMLStreamDataReader.class"" should be ""XMLStreamDataWriter.class"". (copy/paste should be the source of this kink of problems )",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,340513,,,2013-07-29 05:25:11.0,,,,,,0|i1mq93:,340831,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AbstranctGrantHandler checks against ""authorization_code"" instead of supplied grant type",CXF-5161,12660019,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,hoegertn,hoegertn,26/Jul/13 10:47,27/Sep/13 18:18,14/Mar/19 02:30,26/Jul/13 12:47,2.7.6,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-RS Security,,,,0,OAuth2,,,,,,,"In the given commit the method checkIfGrantSupported was changed. This breaks my application. Is this by design or is it a bug? It worked in Version 2.7.5

http://svn.apache.org/viewvc/cxf/trunk/rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/grants/AbstractGrantHandler.java?r1=1491522&r2=1489392&diff_format=h",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-07-26 10:59:21.514,,,no_permission,,Unknown,,,,,,,,,,,340211,,,Fri Jul 26 16:07:49 UTC 2013,,,,,,0|i1moen:,340529,,,,,,,,"26/Jul/13 10:59;sergey_beryozkin;Sorry about the mess, it is a copy & paste error. Fortunately it is ""protected void checkIfGrantSupported(Client client)"" so please override it for now, and I'll get the typo fixed now. thanks","26/Jul/13 11:11;hoegertn;No problem, I just thought I killed my application and didn't know how.","26/Jul/13 12:47;sergey_beryozkin;I've fixed a typo and also updated it to be able to support concrete handlers which support more than one grant type, the existing impls won't be affected:
http://svn.apache.org/r1507293

Thanks","26/Jul/13 13:38;sergey_beryozkin;By the way, I'm looking at AbstractGrantHandler again and I think I'm going to deprecate its ""checkIfGrantSupported(Client client)"" because this is what AccessTokenService should do, make sure the current grant type is actually supported by a given Client, as opposed to GrantHandlers worrying about it. ","26/Jul/13 14:25;sergey_beryozkin;See https://issues.apache.org/jira/browse/CXF-5162.
Basically, I think it should tighten things a bit (example, I had to update a system test where a Client not supporting a ""custom_grant"" was accepted by CustomGrantHandler) so we minimize the chance of a user error (and on this basis I'd like to push the update to branches). And one less call to make for the handlers, which is not too bad too. I'm keeping this method as deprecated so it will work for you without the recompilation on the upgrade. Thanks",26/Jul/13 16:07;hoegertn;Thank you for fixing this fast. I like the change to move the check.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS JAASAuthenticationFilter not rfc2617 compliant for WWW-Authenticate realms,CXF-5157,12659918,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jgenender,jgenender,jgenender,25/Jul/13 22:51,29/Jul/13 10:29,14/Mar/19 02:30,25/Jul/13 23:04,2.7.5,2.7.6,,,,,,2.7.7,,,,JAX-RS Security,,,,0,,,,,,,,"The JAASAuthenticationFilter not rfc2617 compliant for WWW-Authenticate realms.  Currently the returned headers for a realm called ""foo"" would return:

Basic foo

However, according to rfc2617 p2/3 it states: 

The authentication parameter realm is defined for all authentication
   schemes:
      realm       = ""realm"" ""="" realm-value
      realm-value = quoted-string

Therefor the above example is supposed to look like the following:

Basic realm=""foo""

This will make the JAX-RS authentication compliant with the rfc and also compatible with other implementations such as Jetty.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-07-26 09:43:07.536,,,no_permission,,Unknown,,,,,,,,,,,340110,,,Mon Jul 29 10:29:02 UTC 2013,,,,,,0|i1mns7:,340428,,,,,,,,25/Jul/13 23:04;jgenender;Fixed in Committed revision 1507149.,"26/Jul/13 09:43;sergey_beryozkin;Ouch :-). I can see this is done properly in OAuth2 filter so I guess I just did not pay the proper attention to the code, so thanks for fixing it.
FYI, a redirect uri parameter is of no use at the moment - I've been planning to build some support for the form-based authentication may be around it","28/Jul/13 04:10;dkulp;
This was only committed on 2.7.x.....  Is trunk also affected?  Is a fix needed there?","28/Jul/13 18:10;sergey_beryozkin;Hi, yes, how this can be done from 2.7.x to the trunk ? ","29/Jul/13 10:29;sergey_beryozkin;I guess we have ""git cherrypick"" or may be Jeff simply merges the same patch to the trunk and then we can only record a backmerge in 2.7.x SVN properties...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PEP only sends Operation Namespace + Name to the PDP,CXF-5154,12659796,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,25/Jul/13 12:53,27/Sep/13 18:18,14/Mar/19 02:30,30/Jul/13 13:46,,,,,,,,2.7.7,,,,,,,,0,,,,,,,,"Currently, the PEP only sends the ""\{operationNamespace\}operationName"" to the PDP for authorization. This does not allow the PDP to perform authorization by service. 

This will be changed to the following instead:

""\{serviceNamespace}serviceName\#\{operationNamespace\}operationName"", which will be truncated to ""\{serviceNamespace}serviceName\#operationName"" for the case that the serviceNamespace == operationNamespace.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,339988,,,2013-07-25 12:53:46.0,,,,,,0|i1mn13:,340306,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SiteExporter ignores uppercased lang type in {code} macro,CXF-5149,12659267,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,dkulp,lukaszlenart,lukaszlenart,23/Jul/13 06:52,05/Dec/13 19:09,14/Mar/19 02:30,31/Jul/13 20:52,,,,,,,,,,,,,,,,0,,,,,,,,"Some of our old pages use \{code:JAVA} or \{code:XML} which are ignored by SiteExporter. Thus affects generated list of SyntaxHighlighter JavaScripts, which produce a popup when user opens affected page.

I have attached simple patch with test case.",,,,,,,,,,,,,,,,,,,,23/Jul/13 06:53;lukaszlenart;CXF-5149.patch;https://issues.apache.org/jira/secure/attachment/12593652/CXF-5149.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-07-31 20:52:04.58,,,no_permission,,Novice,,,,,,,,,,,339460,,,Thu Aug 01 09:35:30 UTC 2013,,,,,,0|i1mjsf:,339780,,,,,,,,30/Jul/13 09:27;lukaszlenart;Can I commit the change?,31/Jul/13 20:52;dkulp;Heavily modified patch applied,01/Aug/13 05:26;lukaszlenart;[~dkulp] thanks! Is this already available in snapshot version in snapshot repo?,01/Aug/13 09:35;dkulp;It is now.  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE setting OUT param Holder to null,CXF-5147,12659123,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,donatasc,donatasc,22/Jul/13 16:26,27/Sep/13 18:18,14/Mar/19 02:30,31/Jul/13 18:14,2.7.5,2.7.6,,,,,,2.7.7,,,,JAX-WS Runtime,,,,0,,,,,,,,"Steps to reproduce:

1. Build attached maven project (WSDL first approach, service has OUT parameter wrapped in Holder)
2. Run example.BookingService.main() 
3. Call WebService (e.g. with SoapUI)
4. Observe NPE (reason is Holder being left as null):

{code}
Starting Server
Lie 22, 2013 7:13:06 PM org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromWSDL
INFO: Creating Service {http://example/BookingService}BookingService from WSDL: classpath:wsdl/BookingService.wsdl
INFO: Setting the server's publish address to be http://localhost:9000/bookingservice
WARNING: Interceptor for {http://example/BookingService}BookingService#{http://example/BookingService}createBooking has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault
	at org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor.handleMessage(WrapperClassOutInterceptor.java:117)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:355)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:319)
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1074)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1010)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:365)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)
	at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:627)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:51)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:724)
Caused by: java.lang.NullPointerException
	at example.bookingservice.CreateBookingResponse_WrapperTypeHelper1.createWrapperObject(Unknown Source)
	at org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor.handleMessage(WrapperClassOutInterceptor.java:101)
	... 24 more
{code}
","Windows 7 x64, jdk 1.7.0u25",,,,,,,,,,,,,,,,,,,22/Jul/13 16:27;donatasc;CXFBug.zip;https://issues.apache.org/jira/secure/attachment/12593543/CXFBug.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-07-22 20:22:25.848,,,no_permission,,Unknown,,,,,,,,,,,339316,,,Tue Jul 23 08:23:07 UTC 2013,,,,,,0|i1miwf:,339636,,,,,,,,22/Jul/13 16:27;donatasc;Maven project - WSDL first approach.,"22/Jul/13 20:22;dkulp;
Reducing from ""Critical"" as this is due to trying to send invalid data.  According to the schema, the ""bookingId"" field is REQUIRED and thus needs to be set.  If you set the long OR change the schema to have minOccurs=""0"", then it works fine.   Anyway, in general, if you try to send data that is invalid according to the schema, some of the results may be unpredictable.  That said, an NPE is not ideal so this is still a bug.   Most likely, it should be raising some sort of marshaling exception or similar in this case.
","23/Jul/13 08:23;donatasc;Ooh, minOccurs... That would be the first time I see it being useful :) Metro seems to ignore it completely (not as it is a good approach). 

Thanks, I thought I'm stuck.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS client proxies do not unwrap TypeVariables,CXF-5146,12659062,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,22/Jul/13 11:11,27/Sep/13 18:18,14/Mar/19 02:30,22/Jul/13 14:43,,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-RS,,,,1,,,,,,,,This can confuse the data binding providers,,,,,,,,,,SYNCOPE-285,,,,,,,,CXF-5140,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,339255,,,2013-07-22 11:11:12.0,,,,,,0|i1miiv:,339575,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS Client Proxy-based API connection leak,CXF-5144,12659034,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jms_wu,jms_wu,22/Jul/13 07:49,08/May/15 09:49,14/Mar/19 02:30,24/Jul/13 16:42,,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"JAX-RS Client Proxy-based API could not reuse the TCP connection, even though with keep-alive. The reason is the InputStream did not be closed when the response body had been handled in ClientProxyImpl.handleResponse(), so do Webclient.handleResponse().",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-07-24 16:42:00.515,,,no_permission,,Unknown,,,,,,,,,,,339227,,,Fri May 08 09:49:45 UTC 2015,,,,,,0|i1micn:,339547,,,,,,,,"24/Jul/13 16:42;sergey_beryozkin;Closing IS unless Response or InputStream is requested.
","02/Aug/13 16:08;sergey_beryozkin;I'm making auto-closing response stream optional: we don't know of possible side-effects really. Example, if Reader or JAXP Source or lazy reading Stax-based Document is requested then we have a failure. In fact we can have random failures. Lets make it optional first and then see how realistic it is to make it automatic.","02/Aug/13 16:08;sergey_beryozkin;Set this property: ""response.stream.auto.close"" to true","15/Oct/13 10:21;jms_wu;the same as org.apache.cxf.jaxrs.impl.ResponseImpl.readEntity() method, the input stream should be closed after the entity read from it, in most of the cases, especially proxy based client, it's appropriate, so, maybe the property default value could be true.","15/Oct/13 11:02;sergey_beryozkin;The requirement to auto-close InputStream in Response.readEntity is now an accepted JAX-RS 2.0 spec issue, it breaks working with Source classes, lazy loading DOMs, etc, so we really can't make it a default value","09/Jan/14 15:33;sambitd;[~sergey_beryozkin]

In case proxy based client, it indeed is required to make it close. Do you suggest to make it auto close. Where do we set this property in clientConfig.getRequestContext.put(""response.stream.auto.close"",true);

","12/Jan/14 18:27;sergey_beryozkin;Set it as a property on JAXRSClientFactoryBean, or on the created proxy, by doing WebClient.getConfig(proxy) first, or in jaxrs:properties if using jaxrs:client

Sergey","24/Feb/15 05:29;ksnath;I migrated my application from CXF 2.7.7 to CXF 3.0.4. I have set the Bus property ""response.stream.auto.close"" to ""true"". Then, I started getting the below error. The reason being the ""entity"" is becoming ""null"", as part of ""ResponseImpl.autoClose()"" method. 

I don't get the below exception, if the bus property ""response.stream.auto.close"" is set to ""false"". However, if the bus property ""response.stream.auto.close"" is set to ""false"", the connection may not be reusable as the input stream is not closed.

Could you please suggest, how to proceed.

=================================================================================
javax.ws.rs.ProcessingException: java.lang.IllegalStateException: Entity is not available
	at org.apache.cxf.jaxrs.client.WebClient.handleResponse(WebClient.java:1195)
	at org.apache.cxf.jaxrs.client.WebClient.doResponse(WebClient.java:1159)
	at org.apache.cxf.jaxrs.client.WebClient.doChainedInvocation(WebClient.java:1095)
	at org.apache.cxf.jaxrs.client.WebClient.doInvoke(WebClient.java:893)
	at org.apache.cxf.jaxrs.client.WebClient.doInvoke(WebClient.java:864)
	at org.apache.cxf.jaxrs.client.WebClient.invoke(WebClient.java:427)
	at org.apache.cxf.jaxrs.client.WebClient.get(WebClient.java:610)
Caused by: java.lang.IllegalStateException: Entity is not available
	at org.apache.cxf.jaxrs.impl.ResponseImpl.checkEntityIsClosed(ResponseImpl.java:475)
	at org.apache.cxf.jaxrs.impl.ResponseImpl.getActualEntity(ResponseImpl.java:137)
	at org.apache.cxf.jaxrs.impl.ResponseImpl.getEntity(ResponseImpl.java:142)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.fromResponse(JAXRSUtils.java:1716)
	at org.apache.cxf.jaxrs.client.WebClient.handleResponse(WebClient.java:1185)
	... 31 more","24/Feb/15 10:36;sergey_beryozkin;Can you please repost the question the the users list and also provide the client code example 
Thanks","07/May/15 23:07;zhengxb;[~sergey_beryozkin] I am using CXF 2.7.5 and faces this issue. I tried migrating to 2.7.7 and add 'response.stream.auto.close=True' to RequestContext, which works for me. 

But I see that https://java.net/jira/browse/JAX_RS_SPEC-424 is still open, and it seems that we might still dis-allow this feature in future. So would like to know if we have any decision made on this?","08/May/15 09:49;sergey_beryozkin;I'd like to encourage you to comment on JAX_RS_SPEC-424.  We can not auto-close by default as I know that we have CXF clients reading DOM documents with the lazy loading approach, so auto-closing by default is just not an option.",,,,,,,,,,,,,,,,,,,,,,,,,
http-conf:server blueprint configuration doesn't work,CXF-5143,12659026,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,22/Jul/13 06:57,27/Sep/13 18:18,14/Mar/19 02:30,23/Jul/13 05:37,,,,,,,,2.6.10,2.7.7,3.0.0-milestone1,,,,,,0,,,,,,,,"miss class type cause NPE when unmarshall the configuration
{code}
mapElementToJaxbProperty(context, bean, element,
                new QName(HTTP_NS, ""server""), ""server"", null);//should specify HTTPServerPolicy.class but not null here

         mapElementToJaxbProperty(context, bean, element,
                new QName(HTTP_NS, ""fixedParameterOrder""), ""fixedParameterOrder"", null); //need fix here similarly

         mapElementToJaxbProperty(context, bean, element,
                new QName(HTTP_NS, ""contextMatchStrategy""), ""contextMatchStrategy"", null);//need fix here similarly
{code}

though use standalone jetty transport isn't neat in OSGi container, I think we should avoid the NPE here, just in case someone wanna use it",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,339219,,,2013-07-22 06:57:39.0,,,,,,0|i1miav:,339539,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFServlet hides ServletConfig parameters when creating a Servlet-specific ApplicationContext  ,CXF-5141,12658559,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,18/Jul/13 17:01,27/Sep/13 18:18,14/Mar/19 02:30,23/Jul/13 10:47,,,,,,,,2.6.9,2.7.7,3.0.0-milestone1,,Transports,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,338753,,,Tue Jul 23 10:47:39 UTC 2013,,,,,,0|i1mffb:,339073,,,,,,,,"23/Jul/13 10:47;sergey_beryozkin;2.6.x is not really affected, marking it fixed for 2.6.9 cause the merge went in there too",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SAMLTokenProvider does not support AuthnStatement SessionNotOnOrAfter attribute.,CXF-5136,12658385,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,ethan.wallwork,ethan.wallwork,17/Jul/13 21:32,27/Sep/13 18:18,14/Mar/19 02:30,18/Jul/13 10:24,2.7.5,,,,,,,2.7.7,,,,STS,,,,0,,,,,,,,"It is not possible to specify the SessionNotOnOrBefore attribute for a SAML 2.0 AuthnStatement when implementing an AuthenticationStatementProvider.

AuthenticationStatementBean does not carry this information and SAML2ComponentBuilder#createAuthnStatement() does not attempt to populate this attribute.",,,,,,,,,,,,,,,,,,,WSS-467,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,338579,,,2013-07-17 21:32:02.0,,,,,,0|i1mecn:,338899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF STS renewed token not itself renewable.,CXF-5133,12658118,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,ethan.wallwork,ethan.wallwork,16/Jul/13 21:30,14/Aug/13 15:49,14/Mar/19 02:30,17/Jul/13 13:59,2.7.5,,,,,,,2.6.10,2.7.6,,,STS,,,,0,,,,,,,,"When renewing a security token (a SAML assertion in my test case) the returned token cannot be renewed again (nor can the original).  This is true even if the <Renewing/> element is present in the renewal RST message.

It seems that the SAMLTokenRenewer class does not put the STSConstants.TOKEN_RENEWING_ALLOW and STSConstants.TOKEN_RENEWING_ALLOW_AFTER_EXPIRY properties on the SecurityTOken placed in the token store, which are required for renewal to later take place.

","Windows XP, Java 1.7",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,338312,,,2013-07-16 21:30:26.0,,,,,,0|i1mcpj:,338632,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Content type is always ""text/xml"" in case of using @Context HttpServletResponse response",CXF-5129,12657730,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,smalafeev,smalafeev,15/Jul/13 15:11,14/Aug/13 15:49,14/Mar/19 02:30,15/Jul/13 20:24,2.7.5,,,,,,,2.7.6,3.0.0-milestone1,,,,,,,0,,,,,,,,"In case of next endpoint with @Context HttpServletResponse:

{code}
@GET
@Path(""test"")
@Produces(MediaType.TEXT_PLAIN)
public void test(@Context HttpServletResponse response) throws IOException {
       response.setContentType(MediaType.TEXT_PLAIN);
       response.getOutputStream().print(""test"");
} 
{code}

Content-Type in received message is always ""text/xml"":
{code}
[bash]$ curl ""http://localhost:8030/test"" -D -
HTTP/1.1 200 OK
Content-Type: text/xml;charset=UTF-8
Content-Length: 4
{code}

So it is impossible to change Content-Type when @Context is used.
response.setContentType(MediaType.TEXT_PLAIN) doesn't work as well as @Produces(MediaType.TEXT_PLAIN)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-07-15 20:24:09.643,,,no_permission,,Unknown,,,,,,,,,,,337950,,,Mon Jul 15 20:24:09 UTC 2013,,,,,,0|i1mahj:,338272,,,,,,,,"15/Jul/13 20:24;sergey_beryozkin;Fixed; FYI, my tests show that if you specify HTTP 'Accept', which is not done in your example, then it also works... thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creation of SecurityContext from JAAS Subject causes incorrect Principal for Kerberos authentication,CXF-5126,12657684,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ashakirin,ashakirin,ashakirin,15/Jul/13 08:05,14/Aug/13 15:49,14/Mar/19 02:30,17/Jul/13 15:42,,,,,,,,2.7.6,3.0.0-milestone1,,,JAX-RS Security,WS-* Components,,,0,,,,,,,,"CXF-4931 introduced functionality to create SecurityContext from JAAS Subject if it is available.
The problem is that in case of Kerberos authentication, STS validates client Kerberos ticket using own Kerberos account. In this case JAAS Subject will contain Principal from STS Kerberos account and ws-security Principal is client Kerberos Principal. SecurityContext must be initialized using client Kerberos Principal and not STS one.
Moreover, sometimes JAAS Subject contains more than one Principal and it is very difficult to decide in CXF which one should be selected.
Propose:
1. Check for Kerberos Principal and use ws-security Principal instead of JAAS Subject in this case.
2. Introduce property to switch-off using JAAS Subject Principal for SecurityContext.

Regards,
Andrei.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,337904,,,2013-07-15 08:05:34.0,,,,,,0|i1ma7b:,338226,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jetty endpoint may log exception when it is assigned to a non-default cxf bus in spring beans,CXF-5119,12657423,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,12/Jul/13 08:56,14/Aug/13 15:49,14/Mar/19 02:30,12/Jul/13 12:42,2.6.8,2.7.5,,,,,,2.5.11,2.6.9,2.7.6,,Transports,,,,0,,,,,,,,"JettyHTTPServerEngineFactory's setBus method gets called twice in this case and the assert statement logs this error message.


12.07.2013 10:42:10 org.apache.cxf.common.injection.ResourceInjector invokeSetter
SCHWERWIEGEND: exception raied when invoking setter public final void org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory.setBus(org.apache.cxf.Bus)
java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.cxf.common.injection.ResourceInjector.invokeSetter(ResourceInjector.java:287)
        at org.apache.cxf.common.injection.ResourceInjector.visitMethod(ResourceInjector.java:232)
        at org.apache.cxf.common.annotation.AnnotationProcessor.processMethods(AnnotationProcessor.java:89)
        at org.apache.cxf.common.annotation.AnnotationProcessor.accept(AnnotationProcessor.java:72)
        at org.apache.cxf.common.injection.ResourceInjector.inject(ResourceInjector.java:118)
        at org.apache.cxf.common.injection.ResourceInjector.inject(ResourceInjector.java:112)
        at org.apache.cxf.bus.extension.ExtensionManagerImpl.loadAndRegister(ExtensionManagerImpl.java:225)
        at org.apache.cxf.bus.extension.ExtensionManagerImpl.getBeansOfType(ExtensionManagerImpl.java:305)
        at org.apache.cxf.bus.spring.SpringBeanLocator.getBeansOfType(SpringBeanLocator.java:163)
        at org.apache.cxf.bus.CXFBusImpl.getExtension(CXFBusImpl.java:108)
        at org.apache.cxf.transport.http_jetty.JettyDestinationFactory.createDestination(JettyDestinationFactory.java:35)
        at org.apache.cxf.transport.http.HTTPTransportFactory.getDestination(HTTPTransportFactory.java:305)
        at org.apache.cxf.binding.soap.SoapTransportFactory.getDestination(SoapTransportFactory.java:142)
        at org.apache.cxf.endpoint.ServerImpl.initDestination(ServerImpl.java:93)
        at org.apache.cxf.endpoint.ServerImpl.<init>(ServerImpl.java:72)
        at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:160)
        at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:211)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1581)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1522)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:607)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
        at org.apache.cxf.bus.spring.BusApplicationContext$1.run(BusApplicationContext.java:107)
        at org.apache.cxf.bus.spring.BusApplicationContext$1.run(BusApplicationContext.java:105)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:105)
        at org.apache.cxf.bus.spring.SpringBusFactory.createApplicationContext(SpringBusFactory.java:157)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:148)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:124)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:94)
        ...

Instead of using the assert line, we should avoid this problem by using @NoJSR250Annotations(unlessNull = ""bus"").

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,337645,,,2013-07-12 08:56:16.0,,,,,,0|i1m8lz:,337968,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DelegatingInputStream created in AbstractHTTPDestination is cached into wrong Message instance,CXF-5116,12657076,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,10/Jul/13 14:23,14/Aug/13 15:49,14/Mar/19 02:30,11/Jul/13 09:10,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,Core,Transports,,,0,,,,,,,,"The DelegatingInputStream instance created in AbstractHTTPDestination uses the passed Message instance to cache HttpServletRequest inputs. However in ChainInitiationObserver::onMessage a new SoapMessage is created by copying the existing request message contents, so when the DelegatingInputStream caching is triggered, the input data is saved in wrong message instance.

The result is CXF-2911 bug is still valid.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,337299,,,Thu Jul 11 06:51:20 UTC 2013,,,,,,0|i1m6h3:,337622,,,,,,,,11/Jul/13 06:51;asoldano;http://svn.apache.org/viewvc?view=revision&revision=r1502082 also related (on trunk / 3.0.x),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Primitive arrays for capturing HTTP parameters are not supported,CXF-5115,12656882,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,09/Jul/13 15:37,14/Aug/13 15:49,14/Mar/19 02:30,09/Jul/13 16:03,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,"Arrays like ""int[]"" can not be used to capture parameter values",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,337105,,,2013-07-09 15:37:43.0,,,,,,0|i1m5af:,337428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF Client issue when try to handle session for One-Way Operation call,CXF-5114,12656772,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,harsha1979,harsha1979,09/Jul/13 02:18,14/Aug/13 15:49,14/Mar/19 02:30,11/Jul/13 07:13,2.7.5,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-WS Runtime,Transports,,,0,,,,,,,,"I am working for a project that base on web service and client. My issue is in client side. I created the client using CXF. I wanted to call few operation in one service at once. In server side it handle the session so when do the first call it return session id and  client should pass it to the next operation call in same service There may be sequence of operation calls in one service at once.
I got this issue when first operation is one-way.  Because after do the first call it returns session id, but second call goes to the server as a fresh request(no set session id to second request).
I went through your code and got some fix , I'll attached  that fix with this. 
This was blocker issue for us really.

Note : I have handled the configuration in client side to do this as session enabled. I confirmed that, because If I do two way operation call , then this session handle correctly.","JDK 1.7.0_25, CXF 2.7.5 for Client , Axis2 for Server ",,,,,,,,,,,,,,,,,,,09/Jul/13 02:19;harsha1979;CXF_patch.patch;https://issues.apache.org/jira/secure/attachment/12591359/CXF_patch.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-07-10 03:41:14.02,,,no_permission,,Moderate,,,,,,,,,,,336995,,,Thu Jul 11 07:13:16 UTC 2013,,,,,,0|i1m4lz:,337318,,,,,,,,"09/Jul/13 13:29;harsha1979;hi,
We have to do something more here please ?

thanks 
Harsha Thirimanna","10/Jul/13 03:41;ffang;Hi,

From your patch, you wanna copy http cookie header back from response message when you use OneWay, however, this way is not guaranteed to work as CXF oneway means no block, send request out and back to caller thread and go on, so there's no waiting for the response message, if you logic depend on the response message when use oneway, you could fail when the server side oneway invocation takes long time, that said, when you client side check the http cookie header from response message, the response message of oneway may not available yet, so you can't do this way.

Actually, if you use CXF server, the session is initialized and maintained on server side across invocations, I just commit a testcase[1] to demonstrate it.

[1]http://svn.apache.org/r1501640

Freeman","10/Jul/13 10:54;ay;Hi Freeman,
I was wondering if the robust-inonly option could help this use case.

This option, when activated (i.e., setting the endpoint property ""org.apache.cxf.oneway.robust"" to true to activate it at the endpoint), forces the oneway call to be invoked synchronously at the server side so that the fault, if occurs, can be returned to the caller in the http response. You could exploit this behavior to make sure that the second call follows the completion of the service invocation of the first call.

regards, aki","10/Jul/13 12:29;dkulp;Freeman,

Per jaxws spec with HTTP, the call from the client side *IS* blocking until the 202 response comes back.  Thus, copying any cookies over is likely the correct thing to do on the client side.

That said, with a CXF server, if you don't use an interceptor or similar to initialize the session prior to the OneWayInInterceptor being called, the response likely would not have a session cookie in it.  You certainly could not wait until the service is invoked to have the session created.

","10/Jul/13 13:36;ffang;Thanks Dan, Aki,

Yeah, the patch is useful for the client side, I will apply it soon.

Freeman

","10/Jul/13 16:39;harsha1979;hi,

Thanks to the Dan, Aki to this information really. 
And thanks Freeman Fang to your quick reply to my thread.


thanks
Harsha Thirimanna","11/Jul/13 07:13;ffang;apply patch on behalf of Harsha Thirimanna with thanks, also add a testcase for this",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
leading spaces in karaf features.xml bundle elements lead to errors when using karaf 3.0.0,CXF-5113,12656597,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,misl,misl,08/Jul/13 12:31,14/Aug/13 15:49,14/Mar/19 02:30,08/Jul/13 19:15,2.7.5,,,,,,,2.7.6,,,,OSGi,,,,0,,,,,,,,"When using CXF 2.7.5 with Karaf 3.0.0RC1 I get the following error:

[ERROR] Failed to execute goal
org.apache.karaf.tooling:karaf-maven-plugin:3.0.0.RC1:install-kars
(default-install-kars) on project reva-distribution: Execution
default-install-kars of goal
org.apache.karaf.tooling:karaf-maven-plugin:3.0.0.RC1:install-kars
failed: Bad artifact coordinates
mvn:org.apache.httpcomponents/httpcore-osgi/4.2.2, expected format is
<groupId>:<artifactId>[:<extension>[:<classifier>]]:<version> -> [Help 1]

It appeared the specified artifact was incorrectly specified (leading space) in the CXF features.xml. Correcting it manually in my local maven repo correctly this flaw.

Looking at CXF trunk (r1500679) I noticed the specified bundle no longer had a space. However other bundles still had. The accompanying patch corrects this flaw.",,,,,,,,,,,,,,,,,,,,08/Jul/13 12:31;misl;jira-5113.patch;https://issues.apache.org/jira/secure/attachment/12591205/jira-5113.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,336820,,,Mon Jul 08 12:31:48 UTC 2013,,,,,,0|i1m3j3:,337143,,,,,,,,08/Jul/13 12:31;misl;patch to remove leading spaces in CXF features.xml,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuthUtils causes IllegalArgumentException when returning 400 instead of 401,CXF-5112,12656382,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,dashorst,dashorst,05/Jul/13 14:40,14/Aug/13 15:49,14/Mar/19 02:30,08/Jul/13 11:43,2.7.5,,,,,,,2.7.6,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"
OAuthUtils.handleException(MessageContext mc, Exception e, int status)

causes an IllegalArgumentException when one of the token parameters is invalid, making the oauth request return a 400. However OAuthUtils wants to always throw a NotAuthorizedException, hiding the original error in an IllegalArgumentException (which would better be an IllegalStateException in the first place):


java.lang.RuntimeException: org.apache.cxf.interceptor.Fault: Invalid response status code. Expected [401], was [400].
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:116)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:331)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:223)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:203)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:158)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:243)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:168)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:735)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:219)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1506)
    ...
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1486)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.__doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.apache.cxf.interceptor.Fault: Invalid response status code. Expected [401], was [400].
	at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:162)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:128)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:198)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:100)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:94)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	... 43 more
Caused by: java.lang.IllegalArgumentException: Invalid response status code. Expected [401], was [400].
	at javax.ws.rs.WebApplicationException.validate(WebApplicationException.java:167)
	at javax.ws.rs.NotAuthorizedException.<init>(NotAuthorizedException.java:98)
	at org.apache.cxf.rs.security.oauth.utils.OAuthUtils.handleException(OAuthUtils.java:185)
	at org.apache.cxf.rs.security.oauth.services.RequestTokenHandler.handle(RequestTokenHandler.java:114)
	at org.apache.cxf.rs.security.oauth.services.RequestTokenService.getRequestToken(RequestTokenService.java:51)
	at org.apache.cxf.rs.security.oauth.services.RequestTokenService.getRequestTokenWithGET(RequestTokenService.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)
	... 48 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-07-08 11:43:31.482,,,no_permission,,Unknown,,,,,,,,,,,336605,,,Mon Jul 08 11:43:31 UTC 2013,,,,,,0|i1m27b:,336928,,,,,,,,"08/Jul/13 11:43;sergey_beryozkin;I think it is a regression, initially WebApplicationException was thrown which was covering all error codes.

I've updated the code to return the error Response directly:
http://svn.apache.org/r1500669


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS providers typed on arrays like String[] are not selected,CXF-5111,12656354,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,05/Jul/13 10:44,14/Aug/13 15:49,14/Mar/19 02:30,05/Jul/13 12:29,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,336577,,,2013-07-05 10:44:04.0,,,,,,0|i1m21b:,336901,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong processing of @XmlJavaTypeAdapter with RPC style endpoints,CXF-5110,12656352,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,05/Jul/13 10:32,14/Aug/13 15:49,14/Mar/19 02:30,05/Jul/13 13:50,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAXB Databinding,,,,0,,,,,,,,"I've tried building a client for an endpoint whose interface is as follows:

{code}
@WebService(targetNamespace = ""http://www.jboss.org/wise/adapter/"", name = ""Endpoint"")
@XmlSeeAlso({ObjectFactory.class})
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface Endpoint {

    @WebResult(name = ""mimepart"", targetNamespace = ""http://www.jboss.org/wise/adapter/"", partName = ""mimepart"")
    @XmlJavaTypeAdapter(value = HexBinaryAdapter.class)
    @WebMethod
    public byte[] getData(
        @WebParam(partName = ""dataQuery"", mode = WebParam.Mode.INOUT, name = ""dataQuery"")
        javax.xml.ws.Holder<DataQuery> dataQuery
    );
}
{code}

and I'm getting the following exception:

{noformat}
2013-07-04 16:39:10,209 WARN  [org.apache.cxf.phase.PhaseInterceptorChain] Interceptor for {http://www.jboss.org/wise/adapter/}EndpointService#{http://www.jboss.org/wise/adapter/}getData has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Marshalling Error: org.jboss.wise.adapter.DataQuery cannot be cast to [B
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshalWithBridge(JAXBEncoderDecoder.java:298)
	at org.apache.cxf.jaxb.io.DataWriterImpl.write(DataWriterImpl.java:174)
	at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.writeParts(AbstractOutDatabindingInterceptor.java:121)
	at org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor.handleMessage(RPCOutInterceptor.java:90)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:530)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:463)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:366)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:319)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:96)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)
	at com.sun.proxy.$Proxy46.getData(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.jboss.wise.core.client.impl.reflection.EndpointMethodCaller.call(EndpointMethodCaller.java:73)
	at org.jboss.wise.core.client.impl.reflection.EndpointMethodPreview.call(EndpointMethodPreview.java:61)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
Caused by: javax.xml.bind.MarshalException
 - with linked exception:
[java.lang.ClassCastException: org.jboss.wise.adapter.DataQuery cannot be cast to [B]
	at com.sun.xml.bind.v2.runtime.BridgeAdapter._adaptM(BridgeAdapter.java:122)
	at com.sun.xml.bind.v2.runtime.BridgeAdapter.adaptM(BridgeAdapter.java:109)
	at com.sun.xml.bind.v2.runtime.BridgeAdapter.marshal(BridgeAdapter.java:85)
	at com.sun.xml.bind.api.Bridge.marshal(Bridge.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.cxf.common.util.ReflectionInvokationHandler.invoke(ReflectionInvokationHandler.java:54)
	at com.sun.proxy.$Proxy47.marshal(Unknown Source)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshalWithBridge(JAXBEncoderDecoder.java:280)
	... 22 more
Caused by: java.lang.ClassCastException: org.jboss.wise.adapter.DataQuery cannot be cast to [B
	at javax.xml.bind.annotation.adapters.HexBinaryAdapter.marshal(HexBinaryAdapter.java:39)
	at com.sun.xml.bind.v2.runtime.BridgeAdapter._adaptM(BridgeAdapter.java:119)
	... 32 more
{noformat}

The problem seems to be basically due to JAXBDataBase#getJAXBAnnotation(MessagePartInfo mpi) searching return annotations even for input messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,336575,,,2013-07-05 10:32:25.0,,,,,,0|i1m20v:,336899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
parameter beans feature not working through dynamic proxy based clients for JAXRS,CXF-5108,12656263,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sambitd,sambitd,04/Jul/13 14:21,27/Sep/13 13:32,14/Mar/19 02:30,10/Jul/13 16:04,2.7.3,2.7.5,,,,,,2.7.6,3.0.0-milestone1,,,Core,JAX-RS,,,0,,,,,,,,"We have a resource method declared as below. 

@Path(""/books"")
@Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })
Book searchBook(@QueryParam("""") Book book) throws ServiceException;

Here the query param can be any combination of property of the book bean which are searchable. 

When we construct the URL with appropriate query string and use the web client, it works fine.  

But it does not work when some one is using the proxy based approach where the client get hold of the interface for e.g BookStoreResourceI and try to get call the searchBook(Book b) method on that resource interface.  

When debug found that, the client side conversion for cases like @QueryParam("""")
@PathParam(""""), @MatrixParam("""")  are missing and its being implemented in the JAXRSInvoker.invoke operation just before invoking the resource API/method. 

We need to have this feature of conversion from these parameter types to actual URL so that irrespective of which type of client is consuming your service, it will work. Otherwise it will become a half baked client consumption model. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-07-05 10:38:49.017,,,no_permission,,Unknown,,,,,,,,,,,336486,,,Fri Sep 27 13:32:11 UTC 2013,,,,,,0|i1m1h3:,336810,,,,,,,,"05/Jul/13 10:38;sergey_beryozkin;JAXRS invoker does not have anything to do with this conversion. 
Quick question: I do not see an HTTP method annotation in your code fragment, which method do you actually use ?
","05/Jul/13 13:25;sergey_beryozkin;org.apache.cxf.systest.jaxrs.JAXRSSoapBookTest#testGetBookSubresourceParamExtensions

invokes on the following method:
{code:java}
@POST
    @Path(""/subresource4/{id}/{name}"")
    @Produces(""application/xml"")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    Book getTheBook4(@PathParam("""") Book bookPath,
                     @QueryParam("""") Book bookQuery,
                     @MatrixParam("""") Book matrixBook,
                     @FormParam("""") Book formBook) throws BookNotFoundFault;
{code}

and it works correctly.

I'd like to resolve this JIRA as Invalid, but if you have a test case - then lets have a look at it","05/Jul/13 16:06;sambitd;Hi [~sergeyb], I'm trying with @GET method. 

Do you have a test case for @GET method as mentioned in http://cxf.apache.org/docs/jax-rs-basics.html#JAX-RSBasics-Parameterbeans. ","07/Jul/13 19:27;sergey_beryozkin;Hi - sure, I've added a test:
http://svn.apache.org/r1500513

Please re-open if you can attach a test.

Resolving it as not a problem as indeed I did not have a test for @GET, thanks","09/Jul/13 05:22;sambitd;Hi [~sergey_beryozkin] [~sergeyb],
   
I tried with following book class. It failed because it tries to find the keys for methods like isEmpty in HashMap.  Suppose you have one attribute in the bean which is a map and which is initialized as an empty HashMap. Then when it tries to find params it fails.  

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""Book"")
@XmlRootElement(name = ""Book"")
public class Book implements Serializable {
	private String name;
     private long id;
	
     private Map<Long, Chapter> chapters = new HashMap<Long,Chapter>();
	
     public Book() {
	}

     public Book(String name, long id) {
		this.name = name;
		this.id = id;
	}

     public void setName(String n) {
		name = n;
	}

     public String getName() {
		return name;
	}

     public void setId(long i) {
		id = i;
	}
     public long getId() {
		return id;
	}

	public Map<Long, Chapter> getChapters() {
		return chapters;
	}
	public void setChapters(Map<Long, Chapter> chapters) {
		this.chapters = chapters;
	}

}

You can try the same test case with the above bean and let me know. ","09/Jul/13 10:20;sergey_beryozkin;I think we should just ignore Map on the client side, as the proxy won't know how to serialize a map like this one into URI","10/Jul/13 16:04;sergey_beryozkin;Maps with complex values (beans, etc) will be ignored but Map with primitive values or Lists of primitive values will be supported",27/Sep/13 13:32;sambitd;[~sergey_beryozkin] Is this fixed already in 2.7.7.,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS not injecting contexts after resuming a suspended continuation,CXF-5104,12655787,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,chandra.ps,chandra.ps,02/Jul/13 15:05,14/Aug/13 15:49,14/Mar/19 02:30,09/Jul/13 13:13,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-RS,,,,0,async,continuation,jax-rs,,,,,"Problem:

In order to use continuations, I have a 'MessageContext' injected into the JAX-RS resource using @Context annotation.  When the request is initially handled,  JAX-RS properly sets the thread-local MessageContext (ThreadLocalMessageContext) for that particular instance of thread, and am able to retrieve the ContinuationProvider (in my case org.apache.cxf.transport.http.Servlet3ContinuationProvider) from context.  Once I suspend the continuation and resume the same later, however, the thread-local MessageContext instance is not being set and therefore am unable to retrieve the resumed continuation (as  ThreadLocalMessageContext is null through which continuation provider has to be retrieved). 


Possible Fix:

Looks like the cause of the problem is in org.apache.cxf.jaxrs.JAXRSInvoker.invoke(Exchange, Object, Object) implementation, when a continuation is resumed, wasSuspended would be true and there is a conditional block which injects params and contexts only when wasSuspended = false.  Extracting the injection of the params and contexts out of this conditional block would fix the issue as so:

******

boolean wasSuspended = exchange.remove(REQUEST_WAS_SUSPENDED) != null;
        
if (!wasSuspended) {    
    pushOntoStack(ori, ClassHelper.getRealClass(resourceObject), inMessage);       
}

final boolean contextsAvailable = cri.contextsAvailable();
final boolean paramsAvailable = cri.paramsAvailable();
if (contextsAvailable || paramsAvailable) {
    Object realResourceObject = ClassHelper.getRealObject(resourceObject);
    if (paramsAvailable) {
        JAXRSUtils.injectParameters(ori, realResourceObject, inMessage);
    }
    if (contextsAvailable) {
        InjectionUtils.injectContexts(realResourceObject, cri, inMessage);
    }
}
if (cri.isRoot()) {
    ProviderInfo<?> appProvider = 
        (ProviderInfo<?>)exchange.getEndpoint().get(Application.class.getName());
    if (appProvider != null) {
        InjectionUtils.injectContexts(appProvider.getProvider(),
                                      appProvider,
                                      inMessage);
    }
}

******
","CXF 2.7.5, MAC-OSX 10.7.5, Tomcat 7.0.41, Spring 3.0.7",,,,,,,,,,,,,,,,,,,02/Jul/13 15:06;chandra.ps;AsyncResource.java;https://issues.apache.org/jira/secure/attachment/12590439/AsyncResource.java,02/Jul/13 20:01;chandra.ps;CXF-5104.patch;https://issues.apache.org/jira/secure/attachment/12590491/CXF-5104.patch,02/Jul/13 15:07;chandra.ps;JsonBean.java;https://issues.apache.org/jira/secure/attachment/12590442/JsonBean.java,02/Jul/13 15:07;chandra.ps;beans.xml;https://issues.apache.org/jira/secure/attachment/12590441/beans.xml,02/Jul/13 15:07;chandra.ps;web.xml;https://issues.apache.org/jira/secure/attachment/12590440/web.xml,,,5.0,,,,,,,,,,,,,,,,,,,,2013-07-05 13:36:54.451,,,no_permission,,Unknown,,,,,,,,,,,336062,,,Tue Jul 09 13:54:43 UTC 2013,,,,,,0|i1lyv3:,336386,,,,,,,,02/Jul/13 15:06;chandra.ps;JAX-RS resource AsyncResource attached,02/Jul/13 15:07;chandra.ps;web.xml and spring config files attached,02/Jul/13 20:01;chandra.ps;Attaching the patch if possible fix in the description is acceptable.,"05/Jul/13 13:36;sergey_beryozkin;thanks for a patch, I'll need to refresh my memory why I did it coded this way. FYI, you can always use PhaseInterceptorChain.getCurrentMessage().
Also consider using JAX-RS 2.0 AsyncResponse","05/Jul/13 13:50;chandra.ps;Hello Sergey, Thanks for the info on the alternatives. I am also curious to know if there was a reason it was coded that way - please do let us know if you could remember the reason.

Thanks,","09/Jul/13 13:12;sergey_beryozkin;I had a test where the assumption was made that original Continuations would be persisted during the initial request, so no context would be required on resuming the call and original code was written with that assumption in mind.

This only affects the code depending on CXF continuations. It has been fixed now. Note, if the request was suspended from a subresource instance then you'd still have to use PhaseInterceptorChain, or switch to using AsyncResponse",09/Jul/13 13:54;chandra.ps;Awesome! Thanks for resolving this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
schema resource loading code in various blueprint namespace handlers not working in some environment,CXF-5102,12655573,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,01/Jul/13 10:27,14/Aug/13 15:49,14/Mar/19 02:30,03/Jul/13 11:51,2.6.8,2.7.5,,,,,,2.6.9,2.7.6,,,Configuration,,,,0,,,,,,,,"The local schema resource loading code of various blueprint namespace handlers uses the incorrect resource name syntax to load included resources, which the eclipse's classloader seems to tolerate but the standalone classloader has an issue with it.

As a result, using PojoSR, you will see the following warning for various cxf's xml-schemas because those schemas cannot be loaded from the specified resource paths.

2013-06-29 16:49:18,008 [int Extender: 3] WARN  NamespaceHandlerRegistryImpl   - No URL is defined for schema http://cxf.apache.org/ws/rm/manager. This schema will not be validated
2013-06-29 16:49:18,009 [int Extender: 3] WARN  NamespaceHandlerRegistryImpl   - No URL is defined for schema http://schemas.xmlsoap.org/ws/2005/02/rm/policy. This schema will not be validated
2013-06-29 16:49:18,010 [int Extender: 3] WARN  NamespaceHandlerRegistryImpl   - No URL is defined for schema http://cxf.apache.org/ws/addressing. This schema will not be validated


Concretely, those namespace handlers are loading resources using the following syntax, for example when loading schemas/blueprint/something.xsd packaged in the jar.
getClass().getClassLoader().
                getResource(""/schemas/blueprint/something.xsd"")

However, when loading a resource over the class loader, it should use the relative path like:
getClass().getClassLoader().
                getResource(""schemas/blueprint/something.xsd"")


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-07-01 13:51:58.33,,,no_permission,,Unknown,,,,,,,,,,,335848,,,Wed Jul 03 11:51:32 UTC 2013,,,,,,0|i1lxjj:,336172,,,,,,,,"01/Jul/13 13:51;dkulp;
Actually, they likely should use ClassLoaderUtils.getResource(String resourceName, Class<?> callingClass) which would try a couple different methods for locating the schema to take into account several different classloader behaviors.

Either that or have the BundleContext injected into the Namespace handler and grab the schema directly from the bundle.  Not sure if BP would allow that though.

","02/Jul/13 14:18;ay;Hi Dan,
I think the standard path notation is the relative path (no leading ""/""). 

Some loaders seem to have a pre-processing code that removes the leading ""/"" if present, so the absolute path also works.

This removal code is also in java.lang.Class, so invoking getClass().getResource(""/path/resource.txt"") will look up ""path/resource.txt"" using its classloader and find the specified resource, as if invoking getClass().getClassLoader().getResource(""path/resource.txt""). I supposed this removal of leading ""/"" was a convenience code.

If there are classloaders that only take the absolute path, we should switch to ClassLoaderUtils's getResource. But otherwise, I think we can stick to the relative path notation and use the simple mechanism to load the resources.

Can we find or get an official confirmation or disconfirmation on this assumption?

thanks.
regards, aki
","02/Jul/13 15:30;dkulp;The ClassLoaderUtils stuff was first put in place many years ago.  At that point, there were likely more problematic use cases.   Anyway, if you've tested without the / with both Felix and Equinox, I'm OK.","02/Jul/13 20:53;ay;Okay. Thanks.
Have run a simple test on both felix-4.0.3 and equinox-3.8.0
        System.out.println(""classloader: "" + getClass().getClassLoader().getClass()); 
        System.out.println(""folder/res.txt? ""
            + getClass().getClassLoader().getResource(""path/file.txt""));
        System.out.println(""/folder/res.txt? ""
            + getClass().getClassLoader().getResource(""/path/file.txt""));

and saw the both path expressions successfully resolved.
classloader: class org.apache.felix.framework.BundleWiringImpl$BundleClassLoaderJava5
folder/res.txt? bundle://54.0:1/path/file.txt
/folder/res.txt? bundle://54.0:1/path/file.txt

classloader: class org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader
folder/res.txt? bundleresource://54.fwk833898193/path/file.txt
/folder/res.txt? bundleresource://54.fwk833898193/path/file.txt

So, this change should not harm the OSGi use cases.

","03/Jul/13 11:45;ay;and to complete the test output, here is the standalone jdk6 case.

classloader: class sun.misc.Launcher$AppClassLoader
folder/res.txt? jar:file:/tmp/test/test-resource-loading-0.0.1-SNAPSHOT.jar!/path/file.txt
/folder/res.txt? null

","03/Jul/13 11:51;ay;regarding the 2.7.x changes, some files that are listed for trunk on the source tab are not listed for 2.7.x, as those files were wrongly submitted with another ticket number, but these files have been also integrated into 2.7.x.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB-based providers fail when they try to set JAXB RI-specific properties on non-RI implementations,CXF-5100,12655299,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,28/Jun/13 09:51,14/Aug/13 15:49,14/Mar/19 02:30,28/Jun/13 10:55,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,335576,,,2013-06-28 09:51:39.0,,,,,,0|i1lvvb:,335900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optional extensions that refer to classes that cannot be found are not treated as optional,CXF-5099,12655187,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,27/Jun/13 17:36,14/Aug/13 15:49,14/Mar/19 02:30,27/Jun/13 20:03,2.7.5,,,,,,,2.5.11,2.6.9,2.7.6,,,,,,0,,,,,,,,"
If an extension is marked optional, if it's not loadable, CXF should continue as if the extension is not available.   However, if the extension class itself is loadable, but something it requires at resolve time is not, an exception is thrown.   

Example:
http://cxf.547215.n5.nabble.com/JavaToWS-throws-java-lang-NoClassDefFoundError-tt5729942.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,335464,,,2013-06-27 17:36:03.0,,,,,,0|i1lv6f:,335788,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
References to Kerberos Tokens are not created correctly in responses,CXF-5098,12655155,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,27/Jun/13 14:08,14/Aug/13 15:49,14/Mar/19 02:30,27/Jun/13 14:40,,,,,,,,2.6.9,2.7.6,,,,,,,0,,,,,,,,"
When a service secured with a KerberosToken policy assertion responds to the client, it is incorrectly using a wsse:Reference to the original BinarySecurityToken in some cases. Instead it should be using a KeyIdentifier with the SHA-1 of the AP-REQ bytes.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,335432,,,2013-06-27 14:08:07.0,,,,,,0|i1luzb:,335756,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-utils.js has incorrect error handling,CXF-5096,12655152,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,fvielhauer,fvielhauer,27/Jun/13 13:54,10/Apr/17 19:04,14/Mar/19 02:30,22/Mar/17 20:16,2.7.5,,,,,,,3.1.11,3.2.0,,,JavaScript Client,,,,0,callback,error,js,patch,,,,"cxf-utils.js passes wrong parameter to onerror() in two cases. Please see attached patch.

Because of this bug the client doesn't get any error callbacks when the SOAP server is not reachable for example.",,,,,,,,,,,,,,,,,,,,27/Jun/13 13:55;fvielhauer;my.patch;https://issues.apache.org/jira/secure/attachment/12589906/my.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,335429,,,2013-06-27 13:54:47.0,,,,,,0|i1luyn:,335753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow adding attachments to the contetx using jaxws attachments,CXF-5095,12655112,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,27/Jun/13 10:38,14/Aug/13 15:49,14/Mar/19 02:30,12/Jul/13 08:11,2.7.5,,,,,,,2.6.9,2.7.6,,,JAX-WS Runtime,,,,0,,,,,,,,"Currently, it is not possible to add attachments using jaxws's attachments.

http://cxf.547215.n5.nabble.com/Attachments-for-Dispatch-not-supported-td5729017.html

There are some options to get the wiring of attachments (of cxf and jaxws) working.

Option 1
change the WrappedMessageContext's put method so that the cxf's native attachments-set gets added when the jaxws attachments-map is added.
This is probably the simplest approach. But its limitation is that you cannot reflect any change of the original jaxws attachments-map into the actual cxf's attachments-set stored in the context, once this cxf's attachments-set is created and inserted.

Option 2
introduce package local WrappedAttachments that holds the original jaxws's attachments-map and expose it as the cxf's attachments-set. That means, when the jaxws's attachments-map is inserted, WrappedMessageContext can wrap it with WrappedAttachments which is treated as cxf's attachments-set. In this way, any operations on cxf's attachments-set or jaxws' attachments-map remain consistent. 

Option 2 is more flexible than option 1 and prevents potential confusion. So, I think we can choose option 2.



",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-27 11:10:41.339,,,no_permission,,Unknown,,,,,,,,,,,335389,,,Thu Jun 27 11:41:06 UTC 2013,,,,,,0|i1lupr:,335713,,,,,,,,"27/Jun/13 11:10;dsosnoski;Note that the current code handles jaxws attachments sent by the provider and received by the client, just not the other way around.","27/Jun/13 11:41;ay;Hi Dennis,
yes. This retrieval thing works because of what WrappedMessageContext's handling of jaxws attarchents retrieval at its getter method, which dynamically creates the jaxws's attachment-map out of the cxf's attachment-set, which Dan mentioned in the mail thread.

regards, aki
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPConduit prevents AsyncConduit from sending the payloads when custom HTTP methods are used,CXF-5093,12654911,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,26/Jun/13 11:16,14/Aug/13 15:49,14/Mar/19 02:30,01/Jul/13 12:06,,,,,,,,2.7.6,3.0.0-milestone1,,,Transports,,,,0,,,,,,,,"HttpConduit assumes that if a current method is neither POST nor PUT then the request has no payload. This worked fine before AsyncConduit was introduced because HTTPUrlConnection does not supports custom methods, with POST or PUT being the only candidates for having the payload available.

This blocks AsyncConduit from supporting custom methods like PATCH or WebDav ones which may have the payload
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,335188,,,2013-06-26 11:16:31.0,,,,,,0|i1lth3:,335512,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestTokenService signature verification bug [OAuthUtils],CXF-5092,12654905,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,vdveer,vdveer,26/Jun/13 10:40,14/Aug/13 15:49,14/Mar/19 02:30,27/Jun/13 09:02,2.7.5,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-RS Security,,,,0,patch,,,,,,,"When accessing the RequestTokenService of the cxf-rt-rs-security-oauth framework, consumer key and secret will be used to validate the signature of the sent message. When signature fails (ie. wrong clientsecret), an exception is thrown and catched, but since the actual requesttoken is null at that time, the exception is not thrown any further and the requesttoken will be generated afterwards and passed to the connected client even when the signature verification failed. See snippet of the OAuthUtils class.

[2.7.5 - lines 107-114]

try {
            validator.validateMessage(oAuthMessage, accessor);
        } catch (Exception ex) {
            if (token != null) {
                provider.removeToken(token);
                throw ex;
            }
}

If I'm correct, a possible solution will be to move the throw exception statement out of the if statement so that in case of catched exception it's always thrown further.

This is a minor bug, since in the next oauth step the signature verification will fail and since the token will not be null in this case, the exception is thrown the oauth flow will end unsuccesful. 
",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-27 09:02:13.631,,,no_permission,,Novice,,,,,,,,,,,335182,,,Thu Jun 27 09:02:13 UTC 2013,,,,,,0|i1ltfr:,335506,,,,,,,,"27/Jun/13 09:02;sergey_beryozkin;Was fixed as per your suggestion, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2ws generate both ref and nillabe attributes in a schema element ,CXF-5089,12654702,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,25/Jun/13 11:12,14/Aug/13 15:49,14/Mar/19 02:30,27/Jun/13 08:22,2.5.10,2.6.8,2.7.5,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,Tooling,,,,0,,,,,,,,"As per http://www.w3.org/TR/xmlschema-1/, this is invalid:

3.3.3 Constraints on XML Representations of Element Declarations
  Schema Representation Constraint: Element Declaration Representation

2.2 If ref is present, then all of <complexType>, <simpleType>, <key>, <keyref>, <unique>, nillable, default, fixed, form, block and type must be absent, i.e. only minOccurs, maxOccurs, id are allowed in addition to ref, along with <annotation>.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,334979,,,2013-06-25 11:12:20.0,,,,,,0|i1ls6v:,335303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ThreadLocal: BusFactory.threadBus is never removed, generates permgen out of memory error after some redeployments",CXF-5087,12653922,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rpreissel,rpreissel,20/Jun/13 12:13,13/Jan/14 03:18,14/Mar/19 02:30,27/Sep/13 11:20,2.7.5,,,,,,,2.7.6,,,,Bus,Core,,,2,,,,,,,,"The ThreadLocal BusFactory.threadBus is created in the constructor of the CXFBusImpl and removed in the shutdown()-method.
But in an application server environment (e.g. JBoss7) with thread pools the constructor and the shutdwon()-method are invoked from different threads and therefore this ThreadLocal is never removed.

Issue CXF-2164 and CXF-2985 do already discuss this topic and assume that this bug is fixed, but there is still this dangling ThreadLocal. I proved this in a JBoss7.1.1.Final environment.

I don't know the reason for having this ThreadLocal for the whole lifetime of the bus. From my point of view a ThreadLocal should only exist for the lifetime of one request. At the end of the request, when the thread is given back to the pool, the ThreadLocal must be cleared.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-27 07:45:23.261,,,no_permission,,Unknown,,,,,,,,,,,334199,,,Fri Sep 27 11:20:32 UTC 2013,,,,,,0|i1lnfb:,334525,,,,,,,,27/Sep/13 07:45;miken123;I believe this bug is missing a fix version 2.7.6. It does seem fixed judging from the source tagged 2.7.6/2.7.7.,27/Sep/13 11:20;dkulp;Thanks for testing it ad confirming the fix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSONProvider can not read explicit collections if unmarshallAsJaxbElement property is set,CXF-5086,12653739,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,19/Jun/13 16:02,14/Aug/13 15:49,14/Mar/19 02:30,19/Jun/13 20:36,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,334016,,,2013-06-19 16:02:54.0,,,,,,0|i1lman:,334342,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fixed package imports in BasicIntegrationTest,CXF-5085,12653708,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,afinke,afinke,19/Jun/13 14:01,11/Jul/14 12:50,14/Mar/19 02:30,18/Mar/14 20:05,3.0.0-milestone1,,,,,,,3.0,,,,Services,,,,0,,,,,,,,"The last Pax Exam [snapshot build|https://oss.sonatype.org/content/repositories/ops4j-snapshots/org/ops4j/pax/exam/pax-exam-container-karaf/3.1.0-SNAPSHOT/] did signifcant package structure changes which are explained by an earlier post at the [karaf mailing list|http://mail-archives.apache.org/mod_mbox/karaf-dev/201304.mbox/%3C51796AB5.6070900@googlemail.com%3E]. 

As XKMS's itests use the pax exam snapshot build some imports had to be adjusted.",,,,,,,,,,,,,,,,,,,,19/Jun/13 14:01;afinke;BasicIntegrationTest.java.patch;https://issues.apache.org/jira/secure/attachment/12588595/BasicIntegrationTest.java.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-03-18 20:05:09.61,,,no_permission,,Unknown,,,,,,,,,,,333985,,,Tue Mar 18 20:05:09 UTC 2014,,,,,,0|i1lm3r:,334311,,,,,,,,18/Mar/14 20:05;dkulp;This has been resolved for a while.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"URIBuilder optimization prevents relative paths that startWith ""h"" ""t"" ""t"" ""p""",CXF-5084,12653386,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dblevins,dblevins,18/Jun/13 06:46,14/Aug/13 15:49,14/Mar/19 02:30,18/Jun/13 10:25,2.5.10,2.6.8,2.7.5,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,,,,,0,,,,,,,,"        URI uri = new URI(""http://foo/bar/baz;m1=m1value"");
        URI newUri = new UriBuilderImpl(uri).replacePath(""httppnewpath"").build();
        assertEquals(""URI is not built correctly"", ""http://foo/httppnewpath"", newUri.toString());

Should pass, but results in:

FAILURE!
org.junit.ComparisonFailure: URI is not built correctly expected:<http:[//foo/]httppnewpath> but was:<http:[]httppnewpath>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.apache.cxf.jaxrs.impl.UriBuilderImplTest.testReplacePathHttpString(UriBuilderImplTest.java:537)
",,,,,,,,,,,,,,,,,,,,18/Jun/13 06:49;dblevins;CXF-5084.patch;https://issues.apache.org/jira/secure/attachment/12588300/CXF-5084.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-06-18 10:25:26.555,,,no_permission,,Unknown,,,,,,,,,,,333664,,,Tue Jun 18 10:25:26 UTC 2013,,,,,,0|i1lk4v:,333992,,,,,,,,"18/Jun/13 06:52;dblevins;Patch attached.  Would be great to get this into the next 2.x release, though the patch was made against trunk.

Not sure why someone would want relative paths like this, but is an issue a TomEE user ran into.",18/Jun/13 10:25;sergey_beryozkin;Thanks for the patch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS frontend has non-optional dependency on blueprint,CXF-5082,12653154,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,tdiesler,tdiesler,17/Jun/13 08:08,14/Aug/13 15:49,14/Mar/19 02:30,20/Jun/13 06:29,2.7.5,,,,,,,2.6.9,2.7.6,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"We are trying to integrate Camel-CXF with WildFly. This fails because of the non-optional dependency on blueprint. camel-cxf, camel-cxf-transport, cxf-api declare this dependency as optional.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-20 06:29:29.256,,,no_permission,,Unknown,,,,,,,,,,,333477,,,Thu Jun 20 06:29:29 UTC 2013,,,,,,0|i1lizb:,333805,,,,,,,,17/Jun/13 08:12;tdiesler;Cross-Ref: https://issues.jboss.org/browse/WFCAM-9,"20/Jun/13 06:29;ffang;also fix other modules which have similar issue
http://svn.apache.org/r1494465 for trunk
http://svn.apache.org/r1494467 for 2.7.x branch
http://svn.apache.org/r1494468 for 2.6.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLGetInterceptor holds a lock for too long,CXF-5078,12652743,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jbellassai,jbellassai,13/Jun/13 20:50,14/Aug/13 15:49,14/Mar/19 02:30,17/Jun/13 18:54,2.5.10,2.6.8,2.7.5,,,,,2.5.11,2.6.9,2.7.6,,Simple Frontend,,,,0,patch,,,,,,,"WSDLGetInterceptor both creates the WSDL Document object and writes that data to the OutputStream while holding onto a lock.  This can cause major issues in an environment where that data is being sent to very slow clients or there are other general networking issues.

We have seen this problem manifest multiple times in a production environment where all of Tomcat's connection handler threads pile up while waiting for this lock to become available because it is being held by a thread which is trying to write to a socket but cannot for whatever reason.  Eventually Tomcat stops responding to new requests and must be bounced.

Daniel Kulp suggested that instead of writing the WSDL Document directly to the OutputStream from the message, rather write it to a CachedOutputStream while holding the lock. Then outside of the synchronized block, copy it from the CachedOutputStream to the real OutputStream to the client.  In this way, a single bad connection or slow client cannot cause trouble for others.

I will attach a patch made against the lastest WSDLGetInterceptor from 2.7.6-SNAPSHOT.",,,,,,,,,,,,,,,,,,,,13/Jun/13 20:51;jbellassai;my.patch;https://issues.apache.org/jira/secure/attachment/12587699/my.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,333067,,,Thu Jun 13 20:51:23 UTC 2013,,,,,,0|i1lgg7:,333395,,,,,,,,13/Jun/13 20:51;jbellassai;Patch for WSDLGetInterceptor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
endless recursion in creating JAX-RS client proxy,CXF-5073,12651922,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,ainagy,ainagy,09/Jun/13 11:57,14/Aug/13 15:49,14/Mar/19 02:30,12/Jun/13 10:16,2.7.5,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,"I'm having a problem creating a JAX-RS client proxy with CXF version 2.7.5. 
I wrote a simple sample application designed with a resource model that is built up of ""ProductResource""s which contain ""parts"" which are also ""ProductResource""s (""PartsResource"" being a collection wrapper resource).
Creating the client proxy for these resources gets into an endless recursion and eventually fails with a stack overflow. I assume this is related to the loop among the resources (ProductResource -> PartsResource -> ProductResource). 

When this loop is ""immediate"", i.e. ProductResource directly references its part ProductResource's without the separate ""PartsResource"" collection wrapper, the client proxy creation does not get into the endless recursion and succeeds.
On the server side, there are no problems with either resource model.

@XmlRootElement(name = ""ProductResource"")
@Produces(""application/json"")
public interface IProductResource {
@Path(""/parts"")
public IPartsResource getParts();

...
}

@XmlRootElement(name = ""PartsResource"")
@Produces(""application/json"")
public interface IPartsResource {
@Path(""/{i}/"")
public IProductResource elementAt(@PathParam(""i"") String i);

...
}

And the line that gets into the endless recursion (again simplified a bit):
IProductResource productResource = JAXRSClientFactory.create(""http://localhost:9000"", IProductResource.class);

The relevant part of the stack trace, showing the endless recursion:
   ...
	at org.apache.cxf.jaxrs.utils.ResourceUtils.evaluateResourceClass(ResourceUtils.java:263)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createClassResourceInfo(ResourceUtils.java:242)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.evaluateResourceClass(ResourceUtils.java:263)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createClassResourceInfo(ResourceUtils.java:242)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.evaluateResourceClass(ResourceUtils.java:263)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createClassResourceInfo(ResourceUtils.java:242)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.evaluateResourceClass(ResourceUtils.java:263)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createClassResourceInfo(ResourceUtils.java:242)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.evaluateResourceClass(ResourceUtils.java:263)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createClassResourceInfo(ResourceUtils.java:242)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.evaluateResourceClass(ResourceUtils.java:263)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createClassResourceInfo(ResourceUtils.java:242)
    ...

Best regards,
Andras",,,,,,,,,,,,,,,,,,,,09/Jun/13 11:58;ainagy;drProduct.zip;https://issues.apache.org/jira/secure/attachment/12586945/drProduct.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,332246,,,Sun Jun 09 12:02:40 UTC 2013,,,,,,0|i1lbef:,332575,,,,,,,,09/Jun/13 11:58;ainagy;Sample code to reproduce the problem. The class ProductClient (in project drProductClient) needs to be run.,"09/Jun/13 12:02;ainagy;The attached sample code also contains a third resource interface, IProductServiceResource, which is used as the root resource interface (in contrast to the somewhat simplified example in the bug description), but this is not really relevant, the issue is related to the reference loop between IProductResource and IPartsResource.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Async Http transport: Injecting an sslSocketFactory in the tlsClientParameters has no effect ,CXF-5071,12651681,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,alevaux,alevaux,07/Jun/13 12:36,14/Aug/13 15:49,14/Mar/19 02:30,12/Jun/13 21:15,2.7.5,,,,,,,2.7.6,,,,Transports,,,,0,,,,,,,,"When using the async http transport, the sslSocketFactory injected in the tlsClientParameters is not taken into account.  TLSClientParameters.getSSLSocketFactory() is only used in HttpsURLConnectionFactory.

This issue prevents the integration with custom JSSE implementations (e.g.: using the Websphere JSSEHelper to get a specific SSLSocketFactory).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-12 20:05:36.595,,,no_permission,,Unknown,,,,,,,,,,,332007,,,Wed Jun 12 20:18:30 UTC 2013,,,,,,0|i1l9xj:,332336,,,,,,,,"12/Jun/13 20:05;olegk;Aymeric,
Blocking and non-blocking i/o models are very different and in many ways are not quite compatible. SSL support is one of those aspects that differ substantially. SocketFactory class and SocketFactory#createSocket methods in particular are inherently blocking and sockets instantiated in such a way cannot be used for asynchronous i/o. SSLContext class though is generic enough to be applicable to both blocking and non-blocking i/o models. (I presume CXF HTTP conduits can also be configured by providing a custom SSLContext).

Oleg   ","12/Jun/13 20:17;dkulp;At the moment, CXF HTTP Conduits cannot have a specific SSLContext configured.  You either need all the settings so CXF can create it or the SocketFactory.  That said, I'd certainly be OK with adding a setting to have an SSLContext configured in.

","12/Jun/13 20:18;dkulp;
Most likely, if the user has configured in an SocketFactory, we should delegate to the URLConnection based implementation. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CDATA sections are not taken into account by wsdl2java but are by xjc,CXF-5070,12651677,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,apannetier,apannetier,07/Jun/13 12:18,14/Aug/13 15:49,14/Mar/19 02:30,12/Jun/13 18:41,2.7.4,,,,,,,2.5.11,2.6.9,2.7.6,,Tooling,,,,0,newbie,,,,,,,"When generating javadoc comments in emitted java classes from xsd:documentation/xsd:annotation, CDATA are systematically disregarded by wsdl2java.

Narrowed down to a simple test

1/ wsdl2java -d src stuff.wsdl
2/ xjc -wsdl -d src stuff.wsdl

Simple wsdl:

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<wsdl:definitions
    xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
    xmlns:tns=""http:/com.example/""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
    xmlns:jaxb=""http://java.sun.com/xml/ns/jaxb""
    targetNamespace=""http:/com.example/""
    jaxb:version=""1.0""
    >
  <wsdl:types>
    <xsd:schema
    targetNamespace=""http:/com.example/"">

      <xsd:element name=""doStuff"">
         <xsd:complexType >
           <xsd:annotation>
              <xsd:documentation>
                 This does show up
                 <![CDATA[This doesn't]]>
              </xsd:documentation>
              <xsd:appinfo>
                  <jaxb:class name=""DoStuff"">
                      <jaxb:javadoc>This does show up
                          <![CDATA[This doesn't]]>
                      </jaxb:javadoc>
                  </jaxb:class>
              </xsd:appinfo>
           </xsd:annotation>
           <xsd:sequence/>
         </xsd:complexType>
      </xsd:element>

      <xsd:element name=""doStuffResponse"">
        <xsd:complexType>
            <xsd:sequence/>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>

  </wsdl:types>

  <wsdl:message name=""doStuffRequest"">
    <wsdl:part name=""input"" element=""tns:doStuff""/>
  </wsdl:message>

  <wsdl:message name=""doStuffResponse"">
    <wsdl:part name=""result"" element=""tns:doStuffResponse""/>
  </wsdl:message>


  <wsdl:portType name=""stuffPortType"">

    <wsdl:operation name=""doStuff"">
        <wsdl:input message=""tns:doStuffRequest""/>
        <wsdl:output message=""tns:doStuffResponse""/>
    </wsdl:operation>

  </wsdl:portType>

  <wsdl:binding name=""stuffBinding"" type=""tns:stuffPortType"">

    <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http"" />

    <wsdl:operation name=""doStuff"">
        <soap:operation soapAction=""http:/com.example/doStuff"" />
        <wsdl:input>
            <soap:body use=""literal"" />
        </wsdl:input>
        <wsdl:output>
            <soap:body use=""literal"" />
        </wsdl:output>
    </wsdl:operation>

  </wsdl:binding>

  <wsdl:service name=""stuffService"">
    <wsdl:port binding=""tns:stuffBinding"" name=""stuffPort"">
      <soap:address location=""http://localhost:8080/stuff/stuffService""/>
    </wsdl:port>
  </wsdl:service>

</wsdl:definitions>
{code} 
","Java 1.7 (Sun JDK, Linux Mint 14)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-07 17:06:25.916,,,no_permission,,Unknown,,,,,,,,,,,332003,,,Sun Jun 09 15:55:20 UTC 2013,,,,,,0|i1l9wv:,332332,,,,,,,,"07/Jun/13 16:37;apannetier;I think I've found it:

This is due to WoodStox having changed the default for the property ""IS_COALESCING"".

I've rebuild a 2.7.5 which works well if you add:

        setProperty(factory, XMLInputFactory.IS_COALESCING, Boolean.TRUE);

in org.apache.cxf.staxutils.StaxUtils#createXMLInputFactory.

Since this is standard stax property it can probably stay at this place (you guys decide of course ;-).

I followed under debug a wsdl2java session with my test wsdl (above) and could go little by little

1 => Definition, 
2 => Schema collections, 
3 => XmlSchemaAppInfo  => was not what I expected.

Eventually ended up in createXMLInputFactory, saw it was woodstox and looked up Jira. 
Stumbled upon jira.codehaus.org/browse/WSTX-274. Title:

""If a request contains <FieldA>outside cdata <![CDATA[inside <data> cdata]]></FieldA>, the transformed string will become <FieldA>outside cdata </FieldA>. I.e. the CDATA segment is completely missing in the result.""
 
With comments pointing at ""Now, the reason why this behaved differently in 3.2 is simply that the default settings for IS_COALESCING was 'true', which is incorrect as per specification, and 4.0 changed this to 'false' as per spec.""","07/Jun/13 17:06;dkulp;I definitely would prefer NOT setting the IS_COALESCING to true as a default.   That introduces a potentially nasty DOS attack vector.

This sounds like a possible bug in XmlSchema if it's not recording all the various nodes in the appinfo.   I'll try and debug a little bit to check.","07/Jun/13 17:43;apannetier;I see. You're probably right because even...

   <xsd:appinfo>
    <jaxb:class name=""DoStuff""><jaxb:javadoc><![CDATA[<p>My beautiful type</p>]]></jaxb:javadoc></jaxb:class>
   </xsd:appinfo>

does not work either.

It probably works with IS_COALESCING because this turns the #cdata-section in #text.","07/Jun/13 20:32;dkulp;
It's a bug in JAXB.  :-(

If you pass in the schema via an XMLStreamReader (which is what we do so line numbers and such can be retained), then it goes through the com.sun.istack.XMLStreamReaderToContentHandler class to map it to what JAXB needs internally.  However, that class has a nice method:

{code}
    private void handleCDATA() {
        // no-op ???
        // this event is listed in the javadoc, but not in the spec.
    }
{code}
which is called for the CDATA stuff.   Basically, CDATA is ignored.  :-(

We might be able to work around it by wrappering the XMLStreamReader with one that will map the CDATA to normal text events in the call to next().
",07/Jun/13 20:57;dkulp;Stuck a workaround in place.  Can you give tomorrows snapshots a try (or build from source)?,"07/Jun/13 22:30;apannetier;Thanks a lot for this super-flash fix.

I will give it a shot in a few hours. It's 1:30 am here  I-)

I wonder what JAXB version xjc's using though.
","07/Jun/13 22:37;dkulp;
XJC uses a SAX parser instead of a StAX parser.  Thus, it has a different content handler thing which actually handles the CDATA things correctly.  ","08/Jun/13 10:54;apannetier;I've tested the workaround included in 08 June Snapshot and tests show that it works as expected.
Even on various mixes of CDATA and text fragments (I had disabled the ""IS_COALESCING"" property).

I then diffed 06 and 08 snapshots and retrofitted the workaround in my 2.7.5 build which updated my Maven repo and all works now perfectly.

Thanks for this.  

It may look insignificant but being able to include javadoc _markup_ in XSDs/WSDLs greatly facilitates communication between teams.","09/Jun/13 15:55;apannetier;Looks like the workaround should also be added in one or two other places.

I discovered because my WSDL imports a bunch of additional XSDs (shared among various WSDLs).

So I had to add your workaround in 2 other places (both in org.apache.cxf.tools.wsdlto.databinding.jaxb.JAXBDataBinding#addSchemas)

{code:java|title=JAXBDataBinding#addSchemas line 660}
                InputSource is = new InputSource((InputStream)null);
                //key = key.replaceFirst(""#types[0-9]+$"", """");
                is.setSystemId(key);
                is.setPublicId(key);
                opts.addGrammar(is);
                try {
                    XMLStreamReader reader = new StreamReaderDelegate(StaxUtils.createXMLStreamReader(ele, key)) {
                        public int next() throws XMLStreamException {
                            int i = super.next();
                            return i == XMLStreamReader.CDATA ? XMLStreamReader.CHARACTERS : i;
                        }
                    };
                    schemaCompiler.parseSchema(key, reader);
                } catch (XMLStreamException e) {
                    throw new ToolException(e);
                }
{code}

And just below (adapted to the desired createXMLStreamReader overload)

{code:java|title=JAXBDataBinding#addSchemas line 690}
                    XMLStreamReader reader = new StreamReaderDelegate(StaxUtils.createXMLStreamReader(key, in)) {
                        public int next() throws XMLStreamException {
                            int i = super.next();
                            return i == XMLStreamReader.CDATA ? XMLStreamReader.CHARACTERS : i;
                        }
                    };

                    reader = new LocationFilterReader(reader, catalog);
                    InputSource is = new InputSource(key);
                    opts.addGrammar(is);
                    schemaCompiler.parseSchema(key, reader);
                    reader.close();
{code}

I might have overlooked other places (this is a huge class).",,,,,,,,,,,,,,,,,,,,,,,,,,,
Subresource operations do not see root resource Produces or Consumes annotations ,CXF-5065,12651439,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,06/Jun/13 20:39,27/Sep/13 18:18,14/Mar/19 02:30,26/Aug/13 13:26,,,,,,,,2.6.9,2.7.6,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"If we have 

{code:java}
@Path(""/root"")
@Produces(""text/xml"")
public class Root {
  @Path(""/sub"")  
  public SubRoot getSubRoot() {
  } 
}

public class SubRoot {

  @GET
  public Order get() {
  }
}
{code}

then SubRoot.get() method will not inherit Root's @Produces",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-08-22 04:30:14.195,,,no_permission,,Unknown,,,,,,,,,,,331765,,,Thu Aug 22 13:49:48 UTC 2013,,,,,,0|i1l8gn:,332096,,,,,,,,"22/Aug/13 04:30;bcwalrus;The fix seems to ignore any {{@Produces}} annotation on the subresource class. It will go straight to the root. For example, if the root class doesn't specify anything, then regardless of what the subresource class says, the fix always default to application/xml.

Is that intentional? (Doesn't seem intuitive to me.)","22/Aug/13 08:21;sergey_beryozkin;Right, the actual fix does enable for subresources see their parent's consumes/produces, but you right that as a side-effect subresources do not see their own class-level Consumes/Produces now. ","22/Aug/13 08:22;sergey_beryozkin;Subresources lose their own class-level Produces/Consumes annotations, this needs to be fixed",22/Aug/13 13:49;bcwalrus;Thanks for confirming!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XmlJavaTypeAdapter ignored on SOAP Headers,CXF-5064,12651391,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,tmclean,tmclean,06/Jun/13 17:27,14/Aug/13 15:49,14/Mar/19 02:30,14/Jun/13 03:04,2.7.5,,,,,,,2.6.9,2.7.6,,,JAXB Databinding,,,,0,,,,,,,,Supplying an XmlJavaTypeAdapter annotation that should marshal a simple POJO with two string fields into a single String element produces a complex element that would be the correct representation without the type adapter.,"Windows 7, JDK 1.6.0_35 (x64)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-07 01:53:55.676,,,no_permission,,Unknown,,,,,,,,,,,331717,,,Fri Jun 14 03:04:23 UTC 2013,,,,,,0|i1l85z:,332048,,,,,,,,"07/Jun/13 01:53;ffang;Hi,

Could you please elaborate more about this issue? A testcase would be more helpful here.

Thanks
Freeman","07/Jun/13 20:04;tmclean;Sure,

Given a POJO intended as a header in a SOAP message...

========================================================================
package com.feith.soapheadertest;

public class HeaderObj 
{
	String field1 = null;
	String field2 = null;
	
	public HeaderObj(){}
	
	public HeaderObj( String value )
	{
		if( value != null && !value.trim().isEmpty() )
		{
			String fields[] = value.split( ""-"" );
			
			if( fields.length == 2 )
			{
				field1 = fields[0];
				field2 = fields[1];
			}
		}
	}
	
	public String getField1() { return field1; }
	public void setField1(String field1) { this.field1 = field1; }
	
	public String getField2() { return field2; }
	public void setField2(String field2) { this.field2 = field2; }
	
	@Override
	public String toString() 
	{
		return field1 + ""-"" + field2;
	}
}
========================================================================

...an XmlAdapter to serialize that object into a string...

========================================================================
package com.feith.soapheadertest;

import javax.xml.bind.annotation.adapters.XmlAdapter;

public class HeaderObjTypeAdapter extends XmlAdapter<String, HeaderObj> 
{
	@Override
	public String marshal( HeaderObj v ) throws Exception
	{
		if( v == null )
			return null;
		
		return v.toString();
	}

	@Override
	public HeaderObj unmarshal( String v ) throws Exception
	{
		return new HeaderObj( v );
	}

}
========================================================================

...and the following SEI...

========================================================================
package com.feith.soapheadertest;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebParam.Mode;
import javax.jws.WebService;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

@WebService( targetNamespace=""http://www.feith.com/services/cxfSOAPHeaderTest"" )
public interface SOAPHeaderTest 
{
	@WebMethod( operationName=""test"" )
	public void test( 
			@WebParam( header=true, mode=Mode.IN, name=""SESSIONID"" )
			@XmlJavaTypeAdapter( HeaderObjTypeAdapter.class )
			HeaderObj headerObj
	);
}

========================================================================

The resulting WSDL is the following...

========================================================================
<?xml version='1.0' encoding='UTF-8'?><wsdl:definitions xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:tns=""http://www.feith.com/services/cxfSOAPHeaderTest"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:ns1=""http://schemas.xmlsoap.org/soap/http"" name=""CXFSOAPHeaderTest"" targetNamespace=""http://www.feith.com/services/cxfSOAPHeaderTest"">
  <wsdl:types>
<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:tns=""http://www.feith.com/services/cxfSOAPHeaderTest"" attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"" targetNamespace=""http://www.feith.com/services/cxfSOAPHeaderTest"">
  <xs:element name=""test"" type=""tns:test""/>
  <xs:element name=""testResponse"" type=""tns:testResponse""/>
  <xs:complexType name=""test"">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name=""headerObj"">
    <xs:sequence>
      <xs:element minOccurs=""0"" name=""field1"" type=""xs:string""/>
      <xs:element minOccurs=""0"" name=""field2"" type=""xs:string""/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name=""testResponse"">
    <xs:sequence/>
  </xs:complexType>
  <xs:element name=""SESSIONID"" nillable=""true"" type=""tns:headerObj""/>
</xs:schema>
  </wsdl:types>
  <wsdl:message name=""testResponse"">
    <wsdl:part element=""tns:testResponse"" name=""result"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name=""test"">
    <wsdl:part element=""tns:test"" name=""parameters"">
    </wsdl:part>
    <wsdl:part element=""tns:SESSIONID"" name=""SESSIONID"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name=""SOAPHeaderTest"">
    <wsdl:operation name=""test"">
      <wsdl:input message=""tns:test"" name=""test"">
    </wsdl:input>
      <wsdl:output message=""tns:testResponse"" name=""testResponse"">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name=""CXFSOAPHeaderTestSoapBinding"" type=""tns:SOAPHeaderTest"">
    <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
    <wsdl:operation name=""test"">
      <soap:operation soapAction="""" style=""document""/>
      <wsdl:input name=""test"">
        <soap:header message=""tns:test"" part=""SESSIONID"" use=""literal"">
        </soap:header>
        <soap:body parts=""parameters"" use=""literal""/>
      </wsdl:input>
      <wsdl:output name=""testResponse"">
        <soap:body use=""literal""/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name=""CXFSOAPHeaderTest"">
    <wsdl:port binding=""tns:CXFSOAPHeaderTestSoapBinding"" name=""SOAPHeaderTestImplPort"">
      <soap:address location=""http://localhost:8080/CXFTest/cxftest""/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
========================================================================

Notice that SESSIONID defined as 

========================================================================
  <xs:complexType name=""headerObj"">
    <xs:sequence>
      <xs:element minOccurs=""0"" name=""field1"" type=""xs:string""/>
      <xs:element minOccurs=""0"" name=""field2"" type=""xs:string""/>
    </xs:sequence>
  </xs:complexType>

  .........

  <xs:element name=""SESSIONID"" nillable=""true"" type=""tns:headerObj""/>
========================================================================

With the given XML adapter I would expect it to be defined as 

========================================================================
  <xs:element name=""SESSIONID"" nillable=""true"" type=""xs:string""/>
========================================================================

","14/Jun/13 03:04;dkulp;
Fixed.  

However: the ""pure JAXB"" API's have no way to handle this.  We have to use special bridge classes that are specific to the RI.  This may not work with other JAXB implementations (such as Moxy).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When using AsyncHttpConduit with a certificate alias CXF hangs after a bunch of requests,CXF-5063,12651384,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,alevaux,alevaux,06/Jun/13 17:05,14/Aug/13 15:49,14/Mar/19 02:30,14/Jun/13 02:49,2.7.5,,,,,,,2.7.6,,,,Transports,,,,0,,,,,,,,"When using AsyncHttpConduit with a certificate alias CXF hangs after a bunch of requests. 

*Root cause:*
For each request, when AsyncHTTPConduit.getSSLContext() is called,  the KeyManagers are wrapped by an AliasedX509ExtendedKeyManager. After some time, the KeyManagers are wrapped thousands of times. Then, at the moment a new connection needs to be established, a StackOverflowError is thrown when AliasedX509ExtendedKeyManager.getPrivateKey() is called. This causes the I/O dispatchers of the HttpAsynClient to all go down one after the other. When all the I/O dispatchers are down all requests done on the HttpAsyncClient are timing out.

In AsyncHTTPConduit.getSSLContext() the hash code of the TlsClientParameters is checked to decide whether or not a new SSLContext should be created. This is not working in this context as the wrapping of the KeyManagers has an influence on the tlsClientParameters hash code. 
Additionally (not directly linked to the issue), the hash code should never be used as an identifier. Two different TlsClientParameters might have the same hash code, in such a case the cached SSLContext won't be refreshed.

*Other points:*
* The AsyncHTTPConduit is containing a few auto generated catch blocks (with e.printStackTrace(); ).
* When the I/O dispatchers are going down (quite an important issue), the error is logged on the System.err and nothing is logged on the Logger.
* In the CXF documentation nothing is mentioned on the fact the HttpAsyncClient is still in beta.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-14 02:49:56.781,,,no_permission,,Unknown,,,,,,,,,,,331710,,,Fri Jun 14 02:49:56 UTC 2013,,,,,,0|i1l84f:,332041,,,,,,,,"13/Jun/13 12:39;alevaux;Hi Daniel,

The fix is not working, the getKeyManagersWithCertAlias method has been changed to return the wrapped KeyManager instead of modifying the TLSClientParameters but the returned KeyManagers are never used in getSSLContext.

Other questions:
* Is the hashCode check in getSSLContext required? Are there cases where the TLSClientParameters would change after the first connection has been established? I saw that there is no such mechanism in the HttpsURLConnectionFactory.
* Should I create a separate issue for the generated catch blocks that are swallowing exceptions?

Thanks,

Aymeric","14/Jun/13 02:49;dkulp;Thanks for checking/testing.

The HttpsURLCOnnectionFactory does do the hashcode thing in the decorateWithTLS method.   It's a rare case that the client params will change after the first connection, but it is allowed by the API's and such so we try to make a decent effort to detect it and reset.  The hashcode isn't 100% reliable, but generally OK for such a rare occurance.

Please create separate issues for other problems and patches would be appreciated.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refine classloader in org.apache.cxf.wsdl11.WSDLManagerImpl,CXF-5059,12651289,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,zhubinbj,zhubinbj,06/Jun/13 08:27,14/Aug/13 15:49,14/Mar/19 02:30,07/Jun/13 08:14,2.6.2,2.6.8,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,,,,,0,,,,,,,,"I was packaging the CXF jars(e.g.cxf-rt-core-2.6.2.jar ) into a OSGi bundle then use it to create web service. In my scenario, it is found that if there are respect binding resources defined in the .war/META-INF/extensions.xml, it will not be properly loaded and will caused the ""Unknown wsdl binding extension"" error.
After investigation, it's found that in the org.apache.cxf.wsdl11.WSDLManagerImpl.registerInitialXmlExtensions()method, the classloader is got by the following line:
             initialExtensions = PropertiesLoaderUtils.loadAllProperties(resource, 
-                  this.getClass().getClassLoader());
And caused the classes defined in .war/META-INF/extensions.xml was not correctly loaded.
I checked the similar scenario in org.apache.cxf.catalog.OASISCatalogManager.loadContextCatalogs and found it get classload like this:
loadCatalogs(Thread.currentThread().getContextClassLoader(), name);

So I tried to refine the classloader in WSDLManagerImpl like this and now it works in my test. Could someone help review this patch? Thanks in advance.",,,,,,,,,,,,,,,,,,,,06/Jun/13 08:28;zhubinbj;CXF-5059.patch;https://issues.apache.org/jira/secure/attachment/12586471/CXF-5059.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-06-06 08:50:45.92,,,no_permission,,Unknown,,,,,,,,,,,331615,,,Fri Jun 07 08:14:07 UTC 2013,,,,,,0|i1l7jb:,331946,,,,,,,,"06/Jun/13 08:50;ffang;Hi,

Though not take a close look at this issue, just a quick hint, since CXF 2.6.0, cxf-rt-core is already an OSGi bundle, so you needn't package it as a bundle yourself. Try use it as a bundle directly and see if you still run into this issue.

Freeman","06/Jun/13 10:23;zhubinbj;Hi Freeman,
Thanks for the information. I will try the cxf jar directly later.
But based on my understanding, it seems the this.getClass().getClassLoader() will only get the classloader for current bundler and may not allow CXF to load the classes defined in .war/META-INF/extensions.xml.
And in org.apache.cxf.catalog.OASISCatalogManager.loadContextCatalogs, there is a similar usage to get classloader by (Thread.currentThread().getContextClassLoader(). And there will be no problem in my scenario.
Any thought why the .OASISCatalogManager.loadContextCatalogs get classloader in this way but WSDLManagerImpl not?
Thanks.","07/Jun/13 04:57;ffang;Hi,

Revise your patch a little bit, add TCCL as fallback so it can load resources from other bundles in OSGi container

http://svn.apache.org/r1490506 for trunk
http://svn.apache.org/r1490509 for 2.7.x branch
http://svn.apache.org/r1490510 for 2.6.x branch
http://svn.apache.org/r1490513 for 2.5.x branch",07/Jun/13 05:37;zhubinbj;Thanks for the revision. It looks pretty good now and works well in my scenario.,"07/Jun/13 06:41;dkulp;Freeman and Bin,

Actually, both usecases should likely use the classloader from the bus (bus.getExtension(ClassLoader.class)) if there is one, otherwise fall back to the TCCL.  In OSGi, if using blueprint, the TCCL is likely null or not set to the applications classloader.  If using Spring, it may be set, but in other cases, it may not be.  

That said, I would suggest not using extensions.xml thing at all.   I'm strongly considering removing it for 3.0 as nothing within CXF uses it anymore.   It also doesn't work well in OSGi anyway.   To work correctly in OSGi, there would need to be a bundle listener or something that check all the loaded bundles for those files (like we do for the bus-extensions.xml).  My suggestion is to create a bean that WSDLExtensionLoader which registers things it needs to register.  Stick that bean in the bus-extensions.txt. 
","07/Jun/13 07:10;ffang;@Dan,
Thanks for the input, I will revise per your suggestion to use bus.getExtension(ClassLoader.class) for now.

@Bin,
Without fix for this issue, in your customer bundle, you can implements your own WSDLExtensionLoader and then put that bean in the bus-extensions.txt in your bundle, you can take a look at how it is implemented similarly in cxf jms transport bundle, the JMSWSDLExtensionLoader[1] which can register jms related wsdl extensions, and the bus-extensions.txt[2] which could be loaded automatically by bus. And this is the recommended way in OSGi container and would work with any future CXF releases.
[1]https://svn.apache.org/repos/asf/cxf/trunk/rt/transports/jms/src/main/java/org/apache/cxf/transport/jms/wsdl11/JMSWSDLExtensionLoader.java
[2]https://svn.apache.org/repos/asf/cxf/trunk/rt/transports/jms/src/main/resources/META-INF/cxf/bus-extensions.txt

Freeman","07/Jun/13 08:14;ffang;use bus.getExtension(ClassLoader.class) as default CL
http://svn.apache.org/r1490526 for trunk
http://svn.apache.org/r1490529 for 2.7.x branch
http://svn.apache.org/r1490530 for 2.6.x branch
http://svn.apache.org/r1490532 for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE at the decoupled endpoint when receiving a response message with an unknown identifier,CXF-5057,12651145,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,05/Jun/13 16:11,14/Aug/13 15:49,14/Mar/19 02:30,05/Jun/13 17:26,2.7.5,,,,,,,2.7.6,,,,WS-* Components,,,,0,,,,,,,,"When receiving a response message at the decoupled endpoint, when the original request message is not available (i.e., when the response message has a unknown identifier and cannot be associated with the exchange associated with its request message), it can lead to an NPE.

WARNUNG: Interceptor for has thrown exception, unwinding now
java.lang.NullPointerException
	at org.apache.cxf.ws.addressing.ContextUtils.isRequestor(ContextUtils.java:138)
	at org.apache.cxf.ws.addressing.ContextUtils.retrieveMAPs(ContextUtils.java:246)
	at org.apache.cxf.ws.addressing.soap.MAPCodec.restoreExchange(MAPCodec.java:829)
	at org.apache.cxf.ws.addressing.soap.MAPCodec.mediate(MAPCodec.java:174)
	at org.apache.cxf.ws.addressing.soap.MAPCodec.handleMessage(MAPCodec.java:121)
	at org.apache.cxf.ws.addressing.soap.MAPCodec.handleMessage(MAPCodec.java:78)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:800)
	at org.apache.cxf.ws.addressing.impl.MAPAggregatorImpl$InterposedMessageObserver.onMessage(MAPAggregatorImpl.java:1013)

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,331471,,,Wed Jun 05 17:26:44 UTC 2013,,,,,,0|i1l6nj:,331803,,,,,,,,"05/Jun/13 17:26;ay;The described issue only occurs in 2.7.x as a regression introduced by r1374362 which is not in 2.6.x.

I integrated the merged revision to the lower codelines.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndorsingSupportingTokens with both transport security and message layer security applied,CXF-5056,12651143,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,chance bj,chance bj,05/Jun/13 16:00,14/Aug/13 15:49,14/Mar/19 02:30,14/Jun/13 15:53,2.6.2,,,,,,,2.6.9,2.7.6,,,WS-* Components,,,,0,newbie,,,,,,,"According to WS-SecurityPolicy, EndorsingSupportingTokens signs timestamp if using transport security, and sign main message signature if using message layer security. 

In CXF WS-Security,   if TLS is used (regardless of Transport policy applied or not), it always requires timestamp be signed, without checking if message layer security is configured and main message signature is endorsed.

AbstractSupportingTokenPolicyValidator.java

    /**
     * Check the endorsing supporting token policy. If we're using the Transport Binding then
     * check that the Timestamp is signed. Otherwise, check that the signature is signed.
     * 
     * @return true if the endorsed supporting token policy is correct
     */
    private boolean checkEndorsed(List<WSSecurityEngineResult> tokenResults) {
        if (isTLSInUse()) {
            return checkTimestampIsSigned(tokenResults);
        }
        return checkSignatureIsSigned(tokenResults);
    }


Say  we have a ws-security policy which requires main message signature be endorsed, timestamp itself is not signed by endorsing token, and transport policy is not applied/attached.
If we run the test case over plain HTTP, the test case passes.
If we run the test case over HTTPS, the test case fails.

This raises following questions:
1. If you have both transport security and message layer security, which one to check? or which one first? or both?
2. When enforcing EndorsingSupportingToken, does ""Transport security"" in EndorsingSupportingToken means ""Transport Policy Applied"" or  ""SSL applied regardless of  Transport policy applied"".

I just want to bring this up for discussion first. If we have a conclusion on how it should work, I will submit a patch.

Thanks
",,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-06 14:06:01.768,,,no_permission,,Moderate,,,,,,,,,,,331469,,,Wed Jun 19 16:21:49 UTC 2013,,,,,,0|i1l6n3:,331801,,,,,,,,"06/Jun/13 14:06;coheigea;Hi,

What is the use-case of a non-TransportBinding with TLS? If you are using TLS then why not just use a TransportBinding policy?

Colm.","13/Jun/13 14:58;chance bj;Hi Colm,

Thanks for reply. I hit this problem by accident. When tested endorsing token with message level security/symmetric binding, and it works. Because the web container has TLS support, we just change endpoint to SSL without modifying policy, and test fails due to endorsing checking. 

If we always expect TransportBinding for TLS, should we emit a warning if TransportBinding is not configured?

Thanks

Chance","13/Jun/13 15:32;sawadood;If we have an existing application that does not use TransportBinding and we just want to protect it using TLS, do we have to reconfigure the WSPolicy to use TransportBinding?  Does CXF require TransportBinding to be configured if TLS is used?","14/Jun/13 14:59;coheigea;
I will relax the Endorsing requirement so that it first checks whether a Timestamp is signed (if TLS is in use), and falls back to checking whether a Signature is signed. Just bear in mind that CXF considers a token ""signed"" if it is received over TLS, which is quite different to how it works on the Message level.

Colm.

Ps. No, CXF does not require the TransportBinding to be used with TLS, although it depends on the use-case.","19/Jun/13 16:21;chance bj;Hi Colm,

Thanks! The proposed fix should solve the problem.

Thanks

Chance",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ProtectTokens assertion is not respected for SAML tokens,CXF-5051,12650344,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,asoldano,asoldano,31/May/13 13:53,07/Feb/18 14:52,14/Mar/19 02:30,24/Jan/18 21:04,,,,,,,,3.1.15,3.2.2,,,WS-* Components,,,,0,,,,,,,,"I've a ws-security policy wsdl, with an asymmetric binding, SAML holder-of-key assertion and ProtectTokens assertion.
Looks like that the SAML token is not signed as part of the main signature in the exchanged messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,330671,,,2013-05-31 13:53:38.0,,,,,,0|i1l1qf:,331005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Already connected exception when using CXF client to invoke to the server,CXF-5050,12650281,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,senvon,senvon,31/May/13 07:02,14/Aug/13 15:49,14/Mar/19 02:30,28/Jun/13 14:34,2.7.4,,,,,,,2.7.6,3.0.0-milestone1,,,JAX-RS,,,,0,CXF,,,,,,,"the interface decleared as following:

VerificationResultVO test(@FormParam("""") TestPOJO test)

the TestPOJO if havn't getter&setter
just like following:
public class TestPOJO {

	public String name;
	public int value ;
	
	@Override
	public String toString() {
		return ""TestPOJO [name="" + name + "", value="" + value + ""]"";
	}
}

when I using spring client to invoke the server , the CXF client will be thrown an exception like this
java.lang.IllegalStateException: IllegalStateException invoking http://localhost:18081/ups/verification: Already connected
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.mapException(HTTPConduit.java:1338)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1327)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:622)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.jaxrs.client.AbstractClient.doRunInterceptorChain(AbstractClient.java:581)
	at org.apache.cxf.jaxrs.client.ClientProxyImpl.doChainedInvocation(ClientProxyImpl.java:542)
	at org.apache.cxf.jaxrs.client.ClientProxyImpl.invoke(ClientProxyImpl.java:205)
	at $Proxy25.verify(Unknown Source)
	at com.shengpay.facade.test.UpsContractTestCase.testVerify(UpsContractTestCase.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.lang.IllegalStateException: Already connected
	at java.net.HttpURLConnection.setFixedLengthStreamingMode(HttpURLConnection.java:103)
	at org.apache.cxf.transport.http.URLConnectionHTTPConduit$URLConnectionWrappedOutputStream.setFixedLengthStreamingMode(URLConnectionHTTPConduit.java:272)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.thresholdNotReached(HTTPConduit.java:1085)
	at org.apache.cxf.io.AbstractThresholdOutputStream.close(AbstractThresholdOutputStream.java:99)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1301)

if the TestPOJO add the getter&setter methods,this problem will be solved.

It's spend me half day to find this bug , and I hope no one will spend time in this bug.

It's very easy to test, I won't upload the testcase.

good day & good job, thanks every one!",JDK 1.6+,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-04 09:23:13.858,,,no_permission,,Unknown,,,,,,,,,,,330608,,,Fri Jun 28 14:34:46 UTC 2013,,,,,,0|i1l1cf:,330942,,,,,,,,"04/Jun/13 09:23;sergey_beryozkin;FYI, the proxy won't inspect the fields, only getters, can you add them and see what happens ?",28/Jun/13 14:34;sergey_beryozkin;Posting empty forms works as expected now,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StaticSTSProperties class requires a CXF message context to initialize using configure() method,CXF-5048,12650005,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,geecxf,geecxf,29/May/13 20:27,26/Nov/13 17:40,14/Mar/19 02:30,04/Nov/13 14:55,2.7.3,,,,,,,2.6.11,2.7.8,,,,,,,0,,,,,,,,"On May 29, 2013, at 12:47 PM, geecxf <[hidden email]> wrote:

> While experimenting with the STS code I discovered that configureProperties()
> method of the StaticSTSProperties class requires a CXF message context in
> order to execute successfully.
>
> This seems a little strange to me because as far as I understand the
> properties are set once and there is nothing about them is related to the
> request context. The way it is implemented now you basically have to wait
> until the service is invoked before you can initialize the properties. Is
> there a reason why it was implemented this way?
>
> I ask because it just doesn't seem right. I would expect to be able to call
> configureProperties() at some point in time before the service was invoked.
... [show rest of quote]

This definitely looks like a bug.  In there, if the various properties objects are String's, then we end up doing:

 Bus bus = PhaseInterceptorChain.getCurrentMessage().getExchange().getBus();
            ResourceManager rm = bus.getExtension(ResourceManager.class);

to get a ResourceManager to try and resolve those.   Most likely, we should do:

1) Allow setting a Bus object on the properties so that the actual bus used is settable.

2) If bus is null, call BusFactory.getThreadDefaultBus() instead.  

Please log a bug.

Dan ","OSX, Karaf 2.2.9, CXF 2.7.3, Camel 2.10.2, Jetty 7.6.7.v20120910, Karaf-Jetty 7.5.4.v20111024",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,330332,,,2013-05-29 20:27:49.0,,,,,,0|i1kznb:,330666,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong soap:address generated in WSDL ,CXF-5047,12649956,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,efe4dsip,efe4dsip,29/May/13 16:31,14/Aug/13 15:49,14/Mar/19 02:30,07/Jun/13 04:59,2.7,,,,,,,2.6.9,2.7.6,3.0.0-milestone1,,JAX-WS Runtime,,,,0,endpoint,jaxws,,,,,,"I am currently tweaking the DoubleItService tutorial described by Glen Mazza on his Weblog http://www.jroller.com/gmazza/entry/web_service_tutorial.

I created test clients using generated classes using wsdl2java. Everything works as intented.

Now I would like to expose the same service at two location. 
Intended use is to filter access by requiring authentication at container level on some url-pattern like /underquota/doubleit, while /services/doubleit default remains accessible.

In WSDL, I added a second <wsdl:port> element 
{code:xml}
<wsdl:service name=""DoubleItService"">
 <wsdl:port name=""DoubleItPort"" binding=""tns:DoubleItBinding"">
   <soap:address location=""http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/services/doubleit""/>
 </wsdl:port>
 <wsdl:port name=""DoubleItPortUnderquota"" binding=""tns:DoubleItBinding"">
         <soap:address location=""http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/underquota/doubleit""/>
 </wsdl:port>
</wsdl:service> 
{code}

In cxf-servlet.xml, I declared 2 endpoints
{code:xml}
<jaxws:endpoint id=""doubleit""
implementor=""fr.efe4it.sample.webmodule.doubleitwsunderquota.DoubleItPortTypeImpl"" 
wsdlLocation=""WEB-INF/wsdl/DoubleIt.wsdl"" 
address=""/doubleit"" 
publishedEndpointUrl=""http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/services/doubleit"" />
<jaxws:endpoint id=""doubleitunderquota""
implementor=""fr.efe4it.sample.webmodule.doubleitwsunderquota.DoubleItUnderQuotaPortTypeImpl"" 
wsdlLocation=""WEB-INF/wsdl/DoubleIt.wsdl"" 
address=""/underquota/doubleit"" 
publishedEndpointUrl=""http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/underquota/doubleit"" />
{code}

The wsdl2java-generated classe DoubleItService now has 2 methods to retrieve each portType

{code:java}
@WebEndpoint(name = ""DoubleItPort"")
public DoubleItPortType getDoubleItPort() {
 return super.getPort(DoubleItPort, DoubleItPortType.class);
}
@WebEndpoint(name = ""DoubleItPortUnderquota"")
public DoubleItPortType getDoubleItPortUnderquota() {
 return super.getPort(DoubleItPortUnderquota, DoubleItPortType.class);
}
{code}

I also have to implementors, attached to the corresponding portName. Below is the one attached to the portName I added to the WSDL.
{code:java}
@WebService(targetNamespace = ""http://www.example.org/contract/DoubleIt"", //
portName = ""DoubleItPortUnderquota"", //
serviceName = ""DoubleItService"", //
endpointInterface = ""org.example.contract.doubleit.DoubleItPortType"")
@Features(features = ""org.apache.cxf.feature.LoggingFeature"")
public class DoubleItUnderQuotaPortTypeImpl implements DoubleItPortType {
...
{code}

When deploying the WAR under Tomcat, the call to http://localhost:8080/myapp/services/ display the 2 deployed services with correct URL.

||PortType||Operation||Detail||
|DoubleItPortType|DoubleIt|Endpoint address: http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/underquota/doubleit
WSDL : {http://www.example.org/contract/DoubleIt}DoubleItService
Target namespace: http://www.example.org/contract/DoubleIt|
|DoubleItPortType|DoubleIt|Endpoint address: http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/services/doubleit
WSDL : {http://www.example.org/contract/DoubleIt}DoubleItService
Target namespace: http://www.example.org/contract/DoubleIt|

Using SoapUI, I can succesfully run test queries against the 2 services.

However, when I request the WSDL in the browser, only one publishedEndpointUrl corresponds to what I setup in cxf-servlet.xml.

{code:xml title=published WSDL}
<wsdl:service name=""DoubleItService"">
<wsdl:port binding=""tns:DoubleItBinding"" name=""DoubleItPortUnderquota"">
<soap:address location=""/underquota/doubleit""/>
</wsdl:port>
<wsdl:port binding=""tns:DoubleItBinding"" name=""DoubleItPort"">
<soap:address location=""http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/services/doubleit""/>
</wsdl:port>
</wsdl:service>
{code}

A the SOAP address, here /underquota/doubleit, retrieved from published WSDL is the URL used by my java test code to invoke service operations, I get the following error.

{code:java}
Caused by: javax.xml.ws.soap.SOAPFaultException: URI is not absolute
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:156)
	at $Proxy27.doubleIt(Unknown Source)
{code}



",WinXPsp3; Java-1.6.0_35; Tomcat-7.0.33,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-06-03 05:11:52.294,,,no_permission,,Unknown,,,,,,,,,,,330283,,,Fri Jun 07 04:59:35 UTC 2013,,,,,,0|i1kzcf:,330617,,,,,,,,"03/Jun/13 05:11;ffang;Hi,

What's the address you used in the browser to retrieve the wsdl?

My gut feeling is that if you wanna port DoubleItPortUnderquota address to be the one you specified by ""publishedEndpointUrl"" property, you need use address specified for doubleitunderquota jaxws:endpoint, that said, the 
{code}
http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/underquota/doubleit?wsdl
{code}

Freeman
","03/Jun/13 13:02;efe4dsip;Hi

I get the same generated WSDL using both URL derived from ""address"" attribute of <jaxws:endpoint> element.
{code}
1- http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/services/doubleit?WSDL
2- http://localhost:8080/fr.efe4it.sample.webmodule.doubleitwsunderquota/services/underquota/doubleit?WSDL
{code}

If I am not mistaken, CXF publish the endpoint at /services/""@address"" and there is no need to match ""@address"" and ""@publishedEndpointUrl"" values.

What I do not understand is that <soap:address> is not build the same way for the 2 declared enpoints. 

Emmanuel



","04/Jun/13 07:25;ffang;Hi,

Please specify proper endpointName and serviceName for the jaxws:endpoint configuration, this can get the publishedEndpointUrl works properly for multiple endpoint|port in the wsdl. I just commit a testcase [1] to demonstrate it.

[1]http://svn.apache.org/r1489304

Freeman","04/Jun/13 10:24;efe4dsip;I read your testcase. That's clear to me now. I will check on my setup.
Thanks.

Sidenote: 
Regarding my initial intended use, I changed my mind and opted for publishing a single endpoint and overriding the soap address clientside using BindingProvider.ENDPOINT_ADDRESS_PROPERTY.","07/Jun/13 04:59;ffang;add a testcase to demonstrate how it works
http://svn.apache.org/r1489304 for trunk
http://svn.apache.org/r1489306 for 2.7.x branch
http://svn.apache.org/r1489310 for 2.6.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EncryptedSupportingTokens used with EncryptBeforeSigning does not encrypt Username token,CXF-5046,12649947,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,sawadood,sawadood,29/May/13 15:49,14/Aug/13 15:49,14/Mar/19 02:30,30/May/13 13:22,2.6.2,2.7.5,,,,,,2.5.11,2.6.8,2.7.6,,WS-* Components,,,,0,patch,,,,,,,"In some cases, the <EncryptedSupportingTokens> policy assertion does not encrypt the supporting token.  When the policy contains the <EncryptBeforeSigning> assertion, <SignedParts> and <EncryptedParts> assertions along with the <EncryptedSupportingTokens> assertion for a username token,  the username token is not encrypted in the outbound SOAP message.  ",All platforms,259200,259200,,0%,259200,259200,,,,,,,,,,,,,29/May/13 15:53;sawadood;asymbind_patch.txt;https://issues.apache.org/jira/secure/attachment/12585229/asymbind_patch.txt,29/May/13 15:54;sawadood;encrypted_supporting_tokens_policy.xml;https://issues.apache.org/jira/secure/attachment/12585230/encrypted_supporting_tokens_policy.xml,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,330274,,,Wed May 29 15:54:27 UTC 2013,,,,,,0|i1kzaf:,330608,,,,,,,,29/May/13 15:53;sawadood;Here is the fix for this problem.,29/May/13 15:54;sawadood;This is the WSSecurity policy that causes the failure.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UndeclaredThrowableException thrown in the client side when server responses with wsa:OnlyNonAnonymousAddressSupported soap12 version fault message,CXF-5045,12649849,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,29/May/13 06:26,10/Sep/13 10:42,14/Mar/19 02:30,29/May/13 09:01,2.5.10,2.6.8,2.7.5,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,WS-* Components,,,,0,,,,,,,,"As per the wsa spec, the wsa:OnlyNonAnonymousAddressSupported should be placed in the subCode section, not in the faultCode. The correct soap fault code should be soap12:sender. SAAJ impl checks if the faultCode is the standard one. It throws the following exception when meets the unexpected soapfault code wsa:OnlyNonAnonymousAddressSupported:
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy48.addNumbers(Unknown Source)
	at org.apache.cxf.systest.ws.addr_feature.WSASoap12ClientServerTest.testNonAnonWSA(WSASoap12ClientServerTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: {http://www.w3.org/2005/08/addressing}OnlyNonAnonymousAddressSupported is not a standard Code value
	at com.sun.xml.internal.messaging.saaj.soap.ver1_2.Fault1_2Impl.checkIfStandardFaultCode(Fault1_2Impl.java:131)
	at com.sun.xml.internal.messaging.saaj.soap.impl.FaultImpl.setFaultCode(FaultImpl.java:124)
	at com.sun.xml.internal.messaging.saaj.soap.impl.FaultImpl.setFaultCode(FaultImpl.java:87)
	at org.apache.cxf.binding.soap.saaj.SAAJUtils.setFaultCode(SAAJUtils.java:65)
	at org.apache.cxf.jaxws.JaxWsClientProxy.createSoapFault(JaxWsClientProxy.java:219)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:154)
	... 29 more
Inbound Message",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,330176,,,Tue Sep 10 10:42:39 UTC 2013,,,,,,0|i1kyon:,330510,,,,,,,,"10/Sep/13 10:42;ema;Also includes these changes: http://svn.apache.org/viewvc?view=revision&revision=r1487389, http://svn.apache.org/viewvc?view=revision&revision=r1487391,http://svn.apache.org/viewvc?view=revision&revision=r1487404, http://svn.apache.org/viewvc?view=revision&revision=r1487409",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
support new asm4 shade of xbean,CXF-5040,12649537,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,romain.manni-bucau,romain.manni-bucau,27/May/13 10:03,14/Aug/13 15:49,14/Mar/19 02:30,31/May/13 08:02,,,,,,,,2.6.9,2.7.6,3.0.0-milestone1,,,,,,0,,,,,,,,"xbean will use a new asm shade to support asm4 shade, in this shade ClassWriter is org.apache.xbean.asm4.ClassWriter so in ASMHelper tryClass(""org.apache.xbean.asm4.ClassWriter"");  should be added

note: would be great to get it backported on 2.6 branch to be able to use it in TomEE",,,,,,,,,,,,,,,,,,,,27/May/13 14:14;romain.manni-bucau;cxf-asm4.patch;https://issues.apache.org/jira/secure/attachment/12584939/cxf-asm4.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-05-31 08:02:24.563,,,no_permission,,Unknown,,,,,,,,,,,329864,,,Fri May 31 08:02:24 UTC 2013,,,,,,0|i1kwrj:,330199,,,,,,,,"31/May/13 08:02;ffang;apply patch on behalf of Romain Manni-Bucau with thanks
http://svn.apache.org/r1487196 for trunk
http://svn.apache.org/r1487203 for 2.7.x branch
http://svn.apache.org/r1487209 for 2.6.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultSecurityContext Principal is incorrectly set from Subject,CXF-5037,12649146,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,23/May/13 16:42,14/Aug/13 15:49,14/Mar/19 02:30,23/May/13 18:17,2.7.5,,,,,,,2.7.6,,,,,,,,0,,,,,,,,"
In CXF-4931, the SecurityContext was populated from a JAAS Subject if one was available in the WSS4J results. However, the User principal was incorrectly set from the Subject as well. Instead it should be set from the principal returned from the WSS4J results.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,329473,,,2013-05-23 16:42:17.0,,,,,,0|i1kucn:,329808,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception in opensaml initialization in OSGi: NoClassDefFoundError: org/apache/xml/security/Init,CXF-5030,12648898,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,22/May/13 14:18,14/Aug/13 15:49,14/Mar/19 02:30,23/May/13 08:54,2.7.5,,,,,,,2.7.6,3.0.0-milestone1,,,WS-* Components,,,,0,,,,,,,,"Opensaml depends on xmlsecurity. Unfortunately the dependency is optional but needed.

In the wss4j feature opensaml is loaded at start level 30,
xmlsec at start level 25.

So one part of the fix is to make opensaml depend on xmlsec without the optional flag.

The other part is to have them both at the same start level.
Additionally xmlsec should appear before opensaml in the feature so older karaf versions also work.


--

Caused by: java.lang.NoClassDefFoundError: org/apache/xml/security/Init
	at org.opensaml.DefaultBootstrap.initializeXMLSecurity(DefaultBootstrap.java:157)
	at org.apache.ws.security.saml.ext.OpenSAMLBootstrap.bootstrap(OpenSAMLBootstrap.java:78)
	at org.apache.ws.security.saml.ext.OpenSAMLUtil.initSamlEngine(OpenSAMLUtil.java:61)
	at org.apache.cxf.rt.security.xacml.AbstractXACMLAuthorizingInterceptor.<init>(AbstractXACMLAuthorizingInterceptor.java:60)
	at org.talend.esb.authorization.xacml.rt.pep.CXFXACMLAuthorizingInterceptor.<init>(CXFXACMLAuthorizingInterceptor.java:58)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)[:1.7.0_21]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)[:1.7.0_21]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)[:1.7.0_21]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)[:1.7.0_21]
	at org.apache.aries.blueprint.utils.ReflectionUtils.newInstance(ReflectionUtils.java:329)
	at org.apache.aries.blueprint.container.BeanRecipe.newInstance(BeanRecipe.java:962)
	at org.apache.aries.blueprint.container.BeanRecipe.getInstance(BeanRecipe.java:331)
	... 30 more
Caused by: java.lang.ClassNotFoundException: org.apache.xml.security.Init
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:501)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)[osgi-3.8.0.v20120529-1548.jar:]
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)[osgi-3.8.0.v20120529-1548.jar:]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:356)[:1.7.0_21]
	... 42 more",,,,,,,,,,,,,,SMX4-1470,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,329227,,,2013-05-22 14:18:07.0,,,,,,0|i1ksvj:,329567,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XKMS: id and RequestId attributes are not schema compatible,CXF-5029,12648575,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ashakirin,ashakirin,21/May/13 07:57,10/Apr/17 19:06,14/Mar/19 02:30,22/May/13 16:35,,,,,,,,,,,,,,,,0,,,,,,,,"Request/response attributes id and RequestId are not xml schema complaint. NCName requires letter, not number on the first place.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,328930,,,2013-05-21 07:57:13.0,,,,,,0|i1kr27:,329272,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS XOP marshaller does not support SWA attachments,CXF-5027,12648454,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/May/13 16:20,14/Aug/13 15:49,14/Mar/19 02:30,20/May/13 20:27,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,XmlAttachmentRef annotation implies the support for SWA attachments - this is not supported on the JAX-RS XOP path,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,328809,,,2013-05-20 16:20:20.0,,,,,,0|i1kqbb:,329151,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS Async client does not work if HTTP error is returned,CXF-5026,12648429,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/May/13 12:07,14/Aug/13 15:49,14/Mar/19 02:30,08/Jul/13 12:17,,,,,,,,2.7.6,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,328784,,,2013-05-20 12:07:12.0,,,,,,0|i1kq5r:,329126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Multiple JAX-RS services will start on the same address, but ""last one"" wins",CXF-5022,12648198,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,17/May/13 16:00,14/Aug/13 15:49,14/Mar/19 02:30,17/May/13 18:09,2.7.5,,,,,,,2.6.9,2.7.6,,,JAX-RS,,,,0,,,,,,,,"
If you start multiple JAX-RS services on the same address (for example, in separate OSGi bundles), there is no warning or anything that the last one is the only one that will then work.   This should behave like SOAP where an exception is thrown if you try to start a service on an address that is already being used.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,328554,,,2013-05-17 16:00:54.0,,,,,,0|i1kor3:,328898,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Static resources need the ""application/javascript"" content type for javascript files",CXF-5021,12648175,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,recacha,recacha,17/May/13 13:02,14/Aug/13 15:49,14/Mar/19 02:30,22/May/13 21:52,2.7.5,,,,,,,2.6.9,2.7.6,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"The static block of AbstractHTTPServlet (org.apache.cxf.transport.servlet.AbstractHTTPServlet) needs more content types, specifically for javascript files: 
STATIC_CONTENT_TYPES.put(""js"", ""application/javascript"");",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-05-22 21:52:27.804,,,no_permission,,Novice,,,,,,,,,,,328531,,,Wed May 22 21:52:27 UTC 2013,,,,,,0|i1kolz:,328875,,,,,,,,22/May/13 21:52;sergey_beryozkin;Custom cxfServletStaticResourcesMap.txt file can be used to further customize the mapping,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add NPE guard when we restore original java.class.path system property,CXF-5020,12647876,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,16/May/13 01:39,18/Sep/13 10:14,14/Mar/19 02:30,16/May/13 03:33,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,,,,,0,,,,,,,,in case original java.class.path system property is null,,,,,,,,,,,,,,CXF-5287,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,328232,,,Thu May 16 03:33:55 UTC 2013,,,,,,0|i1kmrj:,328576,,,,,,,,"16/May/13 03:33;ffang;commit fix
http://svn.apache.org/r1483151 for trunk
http://svn.apache.org/r1483154 for 2.7.x branch
http://svn.apache.org/r1483155 for 2.6.x branch
http://svn.apache.org/r1483160 for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EHCache TimeToLive value overriden in EHCacheReplayCache,CXF-5018,12647817,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,sawadood,sawadood,15/May/13 20:32,14/Aug/13 15:49,14/Mar/19 02:30,17/May/13 14:34,2.6.8,,,,,,,2.5.11,2.6.9,2.7.6,,WS-* Components,,,,0,,,,,,,,The default cache value of timeToLiveSeconds specified in the ehcache configuration file - cxf-ehcache.xml is overriden by a hard-coded value of ttl in EHCacheReplayCache.java. The ttl value is set to 3600 and the value in ehcache configuration file is ignored.   ,All platforms,43200,43200,,0%,43200,43200,,,,,,,,,,,,,15/May/13 20:34;sawadood;ehcache_ttl.patch;https://issues.apache.org/jira/secure/attachment/12583364/ehcache_ttl.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,328173,,,Wed May 15 20:34:01 UTC 2013,,,,,,0|i1kmef:,328517,,,,,,,,15/May/13 20:34;sawadood;Here is the fix for this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CrossOriginResourceSharingFilter FIELD_COMMA_PATTERN mangles firefox headers,CXF-5017,12647726,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,pvgoddijn,pvgoddijn,15/May/13 11:33,14/Aug/13 15:49,14/Mar/19 02:30,20/May/13 15:19,2.6,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,JAX-RS Security,,,,0,,,,,,,,"When a CORS request header send with a comma delimited list of values without whitespace, the regexp:
{private static final Pattern FIELD_COMMA_PATTERN = Pattern.compile("",\\w*"");}
consumes (part of) the next item in the list.

The offending header in my case is (on a HTTP OPTIONS pre-flight check)
Access-Control-Request-Headers: authorization,content-type
which is eventually returned to the browser as:
Access-Control-Allow-Headers: authorization, -type

The result of which is Firefox refusing the cross-domain POST request following this OPTIONS check

i couldn't find a reason why the {\\w*} part should be part of a comma splitting regexp, changing the regexp to
{"","" , "",\\b*"" or "",\\s""} fixed the problem for me and would seem more logical to me (but i'm not too familiar with the ins and out of CXF)



",firefox,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,328082,,,2013-05-15 11:33:50.0,,,,,,0|i1klu7:,328426,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArithmeticException on ResponseTimeCounterMBean.getAvgResponseTime() after counter reset(),CXF-5016,12647710,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,efe4dsip,efe4dsip,15/May/13 08:59,14/Aug/13 15:49,14/Mar/19 02:30,31/May/13 08:03,2.7,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,Management,,,,0,,,,,,,,"A JMX client program such as monitoring platform (Nagios plugin, HypericHQ, ...) retrieve metrics like AvgResponseTime per minute.
One way to retrieve data is to fetch value every minute and reset counter immediately after.

However, if no calls to the service has been made since last reset, you get an ArithmeticException ""divide by zero"" when calling ResponseTimeCounterMBean.getAvgResponseTime()

I suggest handling this case by returning 0 or -1 instead, thus avoiding exception and alarming stacktrace on the monitoring client side.

{code:title=ResponseTimeCounter.getAvgResponseTime()}
public Number getAvgResponseTime() {        
  if (_invocations.get() == 0) {
     return -1; // avoid divide by 0;
  }
  return (int)(totalHandlingTime / invocations.get());
}
{code}


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-05-31 08:03:31.223,,,no_permission,,Novice,,,,,,,,,,,328066,,,Fri May 31 08:03:31 UTC 2013,,,,,,0|i1klqn:,328410,,,,,,,,"31/May/13 08:03;ffang;commit fix
http://svn.apache.org/r1486838 for trunk
http://svn.apache.org/r1486847 for 2.7.x branch
http://svn.apache.org/r1486849 for 2.6.x branch
http://svn.apache.org/r1487180 for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP Response headers are split by default,CXF-5014,12647505,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,14/May/13 14:09,14/Aug/13 15:49,14/Mar/19 02:30,20/May/13 12:45,2.7.4,,,,,,,2.7.6,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,HTTP Response headers are still split by default which is not consistent with the way HTTP Request headers are now handled by default on the server. Besides it causes unexpected splits in some cases. The split should only be done optionally now,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,327861,,,Mon May 20 12:45:37 UTC 2013,,,,,,0|i1kkh3:,328205,,,,,,,,"20/May/13 12:45;sergey_beryozkin;""org.apache.cxf.http.header.split"" property can be used to preserve the legacy splitting of headers; the same property is checked by the server runtime; the header values are returned as is now by default",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need support for SHA256 Signature Algorithms,CXF-5013,12647380,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,sawadood,sawadood,13/May/13 21:18,14/Aug/13 15:49,14/Mar/19 02:30,14/May/13 09:52,2.6.2,,,,,,,2.6.9,2.7.6,,,WS-* Components,,,,0,,,,,,,,"Due to the weakness of SHA1 algorithm, US National Institute of Standards and Technology (NIST) has recommended that SHA256 or higher algorithms be used. Using SHA256 is also required by  Federal Information Processing Standard (FIPS).
Currently, there is no way to specify SHA256 Signature algorithms when signing a message part using Web services security.
",All supported platforms,345600,345600,,0%,345600,345600,,,,,,,,,,,,,13/May/13 21:24;sawadood;Sha2SignatureAlgorithmTest.java;https://issues.apache.org/jira/secure/attachment/12583007/Sha2SignatureAlgorithmTest.java,13/May/13 21:21;sawadood;sha256_sigalg.patch;https://issues.apache.org/jira/secure/attachment/12583003/sha256_sigalg.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-05-14 09:18:26.078,,,no_permission,,Moderate,,,,,,,,,,,327736,,,Tue May 14 09:18:26 UTC 2013,,,,,,0|i1kjpb:,328080,,,,,,,,13/May/13 21:21;sawadood;Here is the fix to enable support for sha256 signature algorithm.,13/May/13 21:24;sawadood;Here are two tests for testing the fix for sha256 signature algorithm support.,"14/May/13 09:18;coheigea;
I'll apply the patch. However, the solution is really for the WS-SecurityPolicy specification to be updated to support SHA-256. You also have the option to create your own AlgorithmSuite implementation.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible regression in the way proxies handle HTTP errors,CXF-5012,12647283,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,13/May/13 11:06,14/Aug/13 15:50,14/Mar/19 02:30,20/May/13 12:14,2.7.4,,,,,,,2.7.5,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"If a proxy can not find a matching HTTP error handler it should throw the exception, 2.7.4 is not handling it correctly",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-05-13 11:14:12.251,,,no_permission,,Unknown,,,,,,,,,,,327639,,,Mon May 20 12:14:33 UTC 2013,,,,,,0|i1kj3r:,327983,,,,,,,,"13/May/13 11:14;pwilson;Possible workaround - register a response exception mapper provider:

class RethrowingWebApplicationExceptionMapper implements ResponseExceptionMapper<WebApplicationException> {

    @Override
    public WebApplicationException fromResponse(Response r) {
        throw new WebApplicationException(r);
    }

}","13/May/13 19:55;sergey_beryozkin;Hi, I wonder if this regression has been fixed in CXF 2.7.5, to be released very shortly, see
http://svn.apache.org/r1481946

Can you try CXF 2.7.5, it is staging repo is here:
https://repository.apache.org/content/repositories/orgapachecxf-001/

thanks","14/May/13 14:06;sergey_beryozkin;FYI, 2.7.5 is in Central now","20/May/13 12:14;sergey_beryozkin;Hi Paul - let me tentatively resolve this issue for 2.7.5 as my tests confirm that WAE gets thrown from proxies if no mappers for a given HTTP error have been found; please reopen if it still does not work for you, with some sample code showing the method signature and what response exception mappers are used to map HTTP errors; thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix NPE in WSS4JInterceptor,CXF-5011,12647033,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,coheigea,sawadood,sawadood,10/May/13 16:18,14/Aug/13 15:50,14/Mar/19 02:30,10/May/13 17:05,,,,,,,,2.6.7,2.7.5,,,WS-* Components,,,,0,patch,,,,,,,"The tokens, when symmetric binding is used, are created with lifetime of 5 minutes. The callback handler code goes through all the tokens in the cache to get to the token id that matches the password callback's identifier field. If the token has expired, then cache implementation returns null and calling code does not have a check against null token and is causing NullPointerException (NPE). ",Problem occurs on all platforms,,,,,,,,,,,,,,,,,,,10/May/13 16:20;sawadood;wss4j_npe.patch;https://issues.apache.org/jira/secure/attachment/12582633/wss4j_npe.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,327390,,,Fri May 10 16:20:44 UTC 2013,,,,,,0|i1khkf:,327734,,,,,,,,10/May/13 16:20;sawadood;Attaching the patch for the NPE problem.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow multiple subcodes in a SOAP 1.2 fault,CXF-5009,12646920,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,klape,klape,10/May/13 00:04,14/Aug/13 15:49,14/Mar/19 02:30,17/May/13 09:17,,,,,,,,2.5.11,2.6.9,2.7.6,3.0.0-milestone1,Soap Binding,,,,0,,,,,,,,"Currently CXF only allows one subcode to be set via in a {{SoapFault}} object, but the SOAP 1.2 spec allows nested subcodes like so:

{code:xml}
<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"">
  <soap:Body>
    <soap:Fault>
      <soap:Code>
        <soap:Value>soap:Receiver</soap:Value>
        <soap:Subcode>
          <soap:Value xmlns:ns1=""http://ws.gss.redhat.com/"">ns1:Error</soap:Value>
          <soap:Subcode>
            <soap:Value xmlns:ns1=""http://ws.gss.redhat.com/"">ns1:Failure</soap:Value>
          </soap:Subcode>
        </soap:Subcode>
      </soap:Code>
      <soap:Reason>
        <soap:Text xml:lang=""en"">Error by Failure</soap:Text>
      </soap:Reason>
    </soap:Fault>
  </soap:Body>
</soap:Envelope>
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-05-17 09:26:00.528,,,no_permission,,Unknown,,,,,,,,,,,327277,,,Wed May 22 16:57:47 UTC 2013,,,,,,0|i1kgvb:,327621,,,,,,,,"17/May/13 09:26;ay;Hi Kyle,
the fix has been integrated into the 2.7.x, 2.6.x, and 2.5.x branches. You can use appendSubCode(QName subCode) or setSubCodes(List<QName> subcodes) to set the subCododes and getSubCodes() to get the list.
regards, aki","22/May/13 16:57;ay;Hi Kyle,
I renamed the method to addSubCode as requested. If you can test it with your scenario to verify the fix, that would be great.
regards, aki",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong EPR match in WSDiscoveryProvider::handleResolve,CXF-5005,12646442,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,07/May/13 16:37,14/Aug/13 15:50,14/Mar/19 02:30,07/May/13 16:44,2.7.4,,,,,,,2.7.5,3.0.0-milestone1,,,WS-* Components,,,,0,,,,,,,,There's a minor glitch in WSDiscoveryProvider::handleResolve that causes erroneous match of endpoint references. The probe handling is working properly instead.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,326800,,,2013-05-07 16:37:39.0,,,,,,0|i1kdnj:,327145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE at StaxUtils.copy for empty namespaces under JDK's XMLStreamReader,CXF-5004,12646336,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,07/May/13 00:23,14/Aug/13 15:50,14/Mar/19 02:30,08/May/13 09:50,2.7.4,,,,,,,2.5.11,2.6.9,2.7.5,,Core,,,,0,,,,,,,,"When XMLStreamReader returns null for getNamespceURI(int index), NPE is thrown  during the invocation of the StaxUtils.copy method, as shown in:

trying to invoke the method java.lang.String.equals(java.lang.Object) of an object loaded from local variable 'nsURI'
java.lang.NullPointerException: while trying to invoke the method java.lang.String.equals(java.lang.Object) of an object loaded from local variable 'nsURI'
        at org.apache.cxf.staxutils.StaxUtils.writeStartElement(StaxUtils.java:659)
        at org.apache.cxf.staxutils.StaxUtils.copy(StaxUtils.java:574)
        at org.apache.cxf.staxutils.StaxUtils.copy(StaxUtils.java:562)
        a
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,326694,,,2013-05-07 00:23:52.0,,,,,,0|i1kczz:,327039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Documentation ""Using WS-Reliable Messaging"" contains errors and could be improved",CXF-5002,12646169,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dsosnoski,p.mouawad@ubik-ingenierie.com,p.mouawad@ubik-ingenierie.com,06/May/13 07:40,13/Oct/13 22:11,14/Mar/19 02:30,13/Oct/13 22:10,2.7.4,,,,,,,3.0.0-milestone1,,,,Documentation,WS-* Components,,,0,,,,,,,,"Documentation contains typos errors:
wsrm-mgr:jdbcStore id=""myStore""
    driverClassName=""org.apache.derby.jdbc.ClientDriver""/>
    url=""jdbc:derby://localhost:1527/rmdb;create=true""/>
    password=""password""/>

should be:
wsrm-mgr:jdbcStore id=""myStore""
    driverClassName=""org.apache.derby.jdbc.ClientDriver""
    url=""jdbc:derby://localhost:1527/rmdb;create=true""
    password=""password""/>

It should also mention the right namespaces configuration:
xmlns:wsrm-mgr=""http://cxf.apache.org/ws/rm/manager""
xsi:schemaLocation=""
http://cxf.apache.org/ws/rm/manager http://cxf.apache.org/schemas/configuration/wsrm-manager.xsd
"">

Finally instead of mentionning the JDBC configuration with JDBC URL (which is rarely used in J2EE Environments), it should mention the datasource configuration way.

I will be happy to contribute fixes if you can tell me how doc patches can be contributed

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-10-13 22:10:52.903,,,no_permission,,Unknown,,,,,,,,,,,326527,,,Sun Oct 13 22:11:42 UTC 2013,,,,,,0|i1kbz3:,326872,,,,,,,,"13/Oct/13 22:10;dsosnoski;Added full list of defined attributes to documentation, fixed XML typos, linked to schema for more details of attributes.","13/Oct/13 22:11;dsosnoski;I think this change should be sufficient, but if not reopen with further details.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NameBindings are ignored for Reader and Writer interceptors ,CXF-5000,12646047,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,03/May/13 20:20,14/Aug/13 15:49,14/Mar/19 02:30,19/Jun/13 12:58,,,,,,,,2.7.6,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,The fix will also go to CXF 2.7.6-SNAPSHOT,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,326405,,,2013-05-03 20:20:35.0,,,,,,0|i1kb7z:,326750,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
publishedEndpointUrl ignored when wsdlLocation not used,CXF-4999,12646003,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,fneuch,fneuch,03/May/13 16:22,27/Sep/13 18:18,14/Mar/19 02:30,09/Sep/13 18:47,2.7.4,,,,,,,2.6.10,2.7.7,,,JAX-WS Runtime,,,,2,,,,,,,,"We use CXF with spring to expose our web services. We use the feature that let cxf generate the wsdl when publishing the endpoint. However, our tomcat is proxied by Apache so we used the publishedEndpointUrl to define the publicly accessible URL. 

It was working fine in cxf 2.7.0, now in 2.7.4 it isn't working anymore. In the generated wsdl, the endpoint is always exposed with localhost. This causes a problem with one of our tools.

It seems that in org.apache.cxf.jaxws.EndpointImpl in the method doPublish somewhere at line 340, it is now required to have a wsdlLocation. Which we don't since we do Java-first web services. 

It seems that publishedEndpointUrl is now ignored totally in 2.7.4
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-02 01:07:51.073,,,no_permission,,Unknown,,,,,,,,,,,326362,,,Mon Sep 02 01:07:51 UTC 2013,,,,,,0|i1kayf:,326707,,,,,,,,"02/Sep/13 01:07;magnusj;It seems like this was introduced with 1417095, that changed then caused the issue CXF-4856.

This is a major issue for people doing java first services that are hosted behind proxies.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue after upgrading to jackson-jaxrs-json-provider 2.2.0 (from 2.1.4),CXF-4996,12645873,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,gmatadh,gmatadh,02/May/13 20:44,14/Aug/13 15:49,14/Mar/19 02:30,21/May/13 22:16,2.7.4,,,,,,,2.6.9,2.7.6,3.0.0-milestone1,,,,,,0,,,,,,,,"15:34:18.035 [WARN] org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:: - No message body writer has been found for response class ArrayList.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-05-21 22:16:33.928,,,no_permission,,Unknown,,,,,,,,,,,326232,,,Tue May 21 22:16:33 UTC 2013,,,,,,0|i1ka5j:,326577,,,,,,,,21/May/13 22:16;sergey_beryozkin;Please use the following workaround in meantime: register a basic application/json custom provider which will delegate to Jackson 2.2.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LdapClaimsHandler can't find attributes if user authenticated against LDAP,CXF-4993,12645520,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,owulff,owulff,owulff,30/Apr/13 21:16,14/Aug/13 15:50,14/Mar/19 02:30,02/May/13 20:15,2.6.7,2.7.4,,,,,,2.7.5,3.0.0-milestone1,,,STS,,,,0,,,,,,,,"If the user got authenticated against LDAP, the principal is of type LdapPrincipal (JRE internal class). Therefore, the LDAP search doesn't work. Instead a lookup should be done.",,,,,,,,,,FEDIZ-55,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,325882,,,2013-04-30 21:16:08.0,,,,,,0|i1k7zz:,326227,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
proxy sub-resources creating wrong request URIs with non-HTTP transports,CXF-4992,12645281,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,adar,adar,29/Apr/13 18:59,14/Aug/13 15:50,14/Mar/19 02:30,30/Apr/13 12:19,2.7.4,,,,,,,2.5.11,2.6.8,2.7.5,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,"I was experimenting with direct dispatch local transport and ran into an issue with proxy-based clients.

Here's my working WebClient-based client code:

{code}
WebClient client = WebClient.create(""local://api"");
WebClient.getConfig(client).getRequestContext().put(LocalConduit.DIRECT_DISPATCH, Boolean.TRUE);
client.path(""v1/clusters/not-a-valid-cluster"");
client.get();
{code}

Here's my broken proxy-based client code:

{code}
JAXRSClientFactoryBean bean = new JAXRSClientFactoryBean();
bean.setAddress(""local://api"");
bean.setResourceClass(ApiRootResourceImpl.class);
ApiRootResource root = bean.create(ApiRootResourceImpl.class);
ClientConfiguration config = WebClient.getConfig(root);
config.getRequestContext().put(LocalConduit.DIRECT_DISPATCH, Boolean.TRUE);
config.getConduit();
root.getRootV1().getClustersResource().readCluster(""not-a-valid-cluster"");
{code}

What breaks? I get an IllegalStateException with the message ""Local destination does not have a MessageObserver on address /clusters"". Note that the proxy-based client code works correctly when the address is ""http://localhost:<port>/api"", so I don't suspect anything broken in either the code or in my resource layout.

I've spent a fair amount of time debugging this and I think I've figured out what's going on. Every method call into the proxy (getRootV1(), getClustersResource(), and readCluster()) creates a new proxy for the corresponding subresource. That involves creating a new LocalClientState (see ClientProxyImpl.invoke() for details). Here is its constructor:

{code}
public LocalClientState(URI baseURI) {
    this.baseURI = baseURI;
    String scheme = baseURI.getScheme();
    if (!StringUtils.isEmpty(scheme) && scheme.startsWith(HTTP_SCHEME)) {
        this.currentBuilder = UriBuilder.fromUri(baseURI);
    } else {
        this.currentBuilder = UriBuilder.fromUri(""/"");
    }
}
{code}

Because the baseURI in question begins with ""local://"", we end up in the 'else' statement, which resets our URI's path to '/'. In my case, the URIs for each subcall end up looking like ""/"", ""/v1"", and ""/clusters"" instead of ""local://api"", ""local://api/v1"", and ""local://api/v1/clusters"".

Later, during conduit selector preparation (called from inside ClientProxyImpl.doChainedInvocation, via createMessage()), we try to find a ""compatible"" conduit. We only have one conduit: a LocalConduit constructed during the call to config.getConduit() in the client code. The conduit is ""compatible"" if its endpoint's address matches the address in the message. And the address in the message is based on those partial URIs I described earlier. So what happens? The LocalConduit's endpoint's address is ""local://api"", but the address in the message is ""/clusters"". They don't match, and findCompatibleConduit() fails. We then construct a new LocalConduit on-the-fly (see AbstractConduitSelector.getSelectedConduit()), but the LocalDestination that's created for it (by LocalTransportFactory) never gets an observer installed in it. The original LocalConduit (the one that didn't match) has a destination with an observer; it was set up in ServerImpl.start().

Now, I was able to make forward progress by, using my debugger, modifying LocalClientState.currentBuilder in every proxy call to be an absolute path like ""local://api/..."". At that point, the exception went away and the message was routed to the server. But then JAXRSInInterceptor.processMessage() failed to find the method to dispatch, so I suspect I broke something in the process.

I asked about this on the cxf-users mailing list (http://cxf.547215.n5.nabble.com/JAX-RS-recursive-dispatch-td5726752.html). The consensus was that this is a real bug, and likely affects other non-HTTP transports like JMS.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,325643,,,2013-04-29 18:59:28.0,,,,,,0|i1k6iv:,325988,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Classloading issue with EH-Cache availability checks,CXF-4991,12645212,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,29/Apr/13 09:45,14/Aug/13 15:50,14/Mar/19 02:30,29/Apr/13 12:04,,,,,,,,2.6.8,2.7.5,3.0.0-milestone1,,WS-* Components,,,,0,,,,,,,,The EH-Cache availability checks in ReplayCacheFactory and TokenStoreFactory should be performed using the defining classloader. See http://mail-archives.apache.org/mod_mbox/cxf-dev/201304.mbox/%3C5177B2C3.2060708%40redhat.com%3E for more details,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,325574,,,2013-04-29 09:45:52.0,,,,,,0|i1k63j:,325919,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When thrown the fault from logical handle, the namespace setting doesn't work ",CXF-4990,12645062,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,28/Apr/13 06:35,14/Aug/13 15:50,14/Mar/19 02:30,28/Apr/13 08:38,2.6.7,2.7.4,,,,,,2.6.8,2.7.5,3.0.0-milestone1,,JAX-WS Runtime,,,,0,,,,,,,,"CXF support to setup the namespaces in the soap envelope by setting the property of soap.env.ns.map like the below setting, but it doesn't take effect when throwing the fault from handler like this.
{code}
<jaxws:endpoint
                id=""cxfEndpoint""
                address=""http://localhost:5555""
                wsdlURL=""wsdl/demo.wsdl""
                serviceClass=""example.esb.testing.HelloPortType""
                serviceName=""s:HelloService""
                xmlns:s=""urn:example:esb:testing"">
<jaxws:properties>
        
                        <entry key=""soap.env.ns.map"">
                                <map>
                                        <entry key=""esb"" value=""http://www.example.com/esb/20080930/header"" />
                                </map>
                        </entry>
                        
                </jaxws:properties>
                <jaxws:handlers>
                        <ref bean=""faultThrowingHandler"" />
                </jaxws:handlers>

</jaxws:endpoint> 

{code}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,325424,,,Sun Apr 28 08:38:56 UTC 2013,,,,,,0|i1k567:,325769,,,,,,,,"28/Apr/13 06:37;njiang;After digging the issue for a while, I found in CXF JAXWS frontend, LogicalHandlerFaultOutInterceptor replaces the Original XMLWriter with the W3CDOMStreamWriter to reread the fault message before calling the handleFault method of the LogicalHandler. 
Unfortunately the W3CDOMStreamWriter doesn't aware the root namespaces, so it uses the local prefix instead of using the namespaces from the soap envelope.","28/Apr/13 08:38;njiang;Applied the patch into trunk , 2.7.x-fixes and 2.6.x-fixes branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jax-rs2 request filter is unable to modify request header by adding a new header ,CXF-4986,12644571,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,abdelgadiri,abdelgadiri,25/Apr/13 10:16,16/Aug/13 14:12,14/Mar/19 02:30,16/Aug/13 14:12,2.7.2,,,,,,,2.7.5,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"I have a filter implementation as follows

@Provider
public class AuthSessionFilter implements ContainerRequestFilter {
    public AuthSessionFilter() {
    }

    @Override
    public void filter(ContainerRequestContext requestContext) throws IOException {      
        //another @Prematching filter is setting this session id so it is definitely not null
        Object sessionId = requestContext.getProperty(""sessionId"");
        if (sessionId == null || GeneralUtils.isNullOrBlank(sessionId + """")) {
            requestContext.abortWith(Response.status(Response.Status.UNAUTHORIZED)
                    .entity(""missing sessionId"").build());
        }

       //this line gets invoked without problems, however, the added header is not available from the resource class
        requestContext.getHeaders().putSingle(""sessionId"", sessionId+"""");
    }
}


The line requestContext.getHeaders().putSingle(""sessionId"", sessionId+""""); is not making the added sessionId header available when trying to obtain it from my resource. getHeaders() is supposed to return a mutable map in accordance with the spec, but its implementation 'ContainerRequestContextImpl' is returning a readonly map instead. it returning:

  return new MetadataMap<String, String>(
            (Map<String, List<String>>)m.get(Message.PROTOCOL_HEADERS), false, true, true);

where it is passing 'true' for the readonly parameter.


in my resource, I am trying to obtain the header using

public Response doSomething(UriInfo uriInfo, HttpServletRequest request) {
        //this is always null even though it shouldn't be null

        String sessionId = request.getHeader(""sessionId"");
}


",cxf on tomcat,,,,,,,,,,,,,,,,,,,16/Aug/13 14:08;abdelgadiri;bug4986-1.0.war;https://issues.apache.org/jira/secure/attachment/12598467/bug4986-1.0.war,16/Aug/13 14:08;abdelgadiri;bug4986.zip;https://issues.apache.org/jira/secure/attachment/12598468/bug4986.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-04-25 11:01:16.03,,,no_permission,,Unknown,,,,,,,,,,,324936,,,Fri Aug 16 14:12:30 UTC 2013,,,,,,0|i1k25z:,325281,,,,,,,,"25/Apr/13 10:48;abdelgadiri;I have now tried an alternative approach. I have my @Prematching filter call

sessionId = ... //non null session id
requestContext.setProperty(""sessionId"", sessionId);

according to the specification/java-doc of setProperty() method
""In a Servlet container, the properties are synchronized with the ServletRequest and expose all the attributes available in the ServletRequest. Any modifications of the properties are also reflected in the set of properties of the associated ServletRequest.""

so in my resource, I am trying:


public Response dosomething(UriInfo uriInfo, HttpServletRequest request) {
//this fails - sessionId is always null
Object sessionId = request.getAttribute(""sessionId"")

//this also fails - sessionId is always null
sessionId = request.getParameter(""sessionId"");

return Response.ok().build();
}


so, it looks like cxf is not allowing filters to modify the request","25/Apr/13 11:01;sergey_beryozkin;Ouch, I really thought I managed to convince the spec lead to get rid of this reference to ServletRequest and I thought they did some work but it stayed, really bad idea IMHO, the filters will see the HTTP request attributes set before the JAX-RS runtime even executes. Sigh. Have to fix that, thanks for spotting that. FYI, we have the tests where the filters pass the properties around, though they are not persisted into HTTP request...

 ","25/Apr/13 11:03;sergey_beryozkin;Also, can you start working with CXF 2.7.4 please ? Quite a few fixes went into this specific area, though I can see this JIRa is still valid","25/Apr/13 11:10;abdelgadiri;Thanks for the info. 

Yes, I am able to pass properties between filters without any problems, it is just when I try to pass a property onto the request where it is failing.

So, how can I make my filter add a property/header/parameter that is then retrievable from the resource ?

Thanks","25/Apr/13 11:13;sergey_beryozkin;Right, this is your requirement, inject HttpServletRequest into the filter, and then access it from the resource. Please switch to 2.7.4 though first",25/Apr/13 11:16;abdelgadiri;Thank you very much. I will give it a try after upgrading to 2.7.4,"25/Apr/13 11:54;abdelgadiri;First thank you for your speedy responses.

I have upgraded to 2.7.4 then injected a HttpServletRequest into my filter via

@Context HttpServletRequest request;

This appears to have injected an instance of ThreadLocalHttpServletRequest. However, calling setAttribute() on this request instance is throwing a NullPointerException.

the setAttribute() method is implemented as

public void setAttribute(String name, Object o) {
        get().setAttribute(name, o);

}

and it appears get() is returning null hence the thrown exception


Is this related to your previous comment regarding initialization of the jax-rs runtime when the filter is executed?




 ",25/Apr/13 12:06;sergey_beryozkin;I've updated my test locally so far and it works fine for me. Can you double check you have CXF 2.7.4 in the libs ?,"25/Apr/13 12:53;abdelgadiri;Yes - it now works. I just needed to clean up my build.
Thank you for your help
",26/Apr/13 12:26;sergey_beryozkin;Header and property related issues have been fixed,16/Aug/13 14:08;abdelgadiri;war to reproduce the issue,16/Aug/13 14:08;abdelgadiri;source maven project to reproduce the issue,16/Aug/13 14:11;abdelgadiri;attached is the code to reproduce the issue. I would deploy the war file to my tomcat then run the test cases in the attached source project. One of the test cases (smallpayload) is always succeeding while the other testcase (largepayload) is always failing,16/Aug/13 14:12;abdelgadiri;sorry I had reopened the wrong issue. it should be issue CXF-5201. closing this one,,,,,,,,,,,,,,,,,,,,,,
ResponseBuilder should set 204 status if the status has not been set and the entity is null,CXF-4985,12644350,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,24/Apr/13 13:02,14/Aug/13 15:49,14/Mar/19 02:30,16/Jul/13 11:16,,,,,,,,2.7.6,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"Spec: If the status property of the Response is not set: a 200 status code is used for a non-null entity property and a 204 status code is used if the entity property is null.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,324717,,,Fri May 03 15:38:40 UTC 2013,,,,,,0|i1k0tb:,325062,,,,,,,,"03/May/13 15:38;sergey_beryozkin;Will need to port the relevant fixes to 2.7.x, likely for 2.7.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS server has to set Content-Type to application/octet-stream if it is not available,CXF-4984,12644324,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,24/Apr/13 09:40,26/Nov/13 17:40,14/Mar/19 02:30,24/Apr/13 09:41,,,,,,,,3.0.0-milestone1,,,,JAX-RS,,,,0,,,,,,,,"Spec requires that, at the moment we set it to ""*/*"" if no Content-Type is available, which IMHO is better, example, an XML payload will still be processed by a method accepting ""application/xml"", but the compliance requires this change (on the trunk only)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,324691,,,2013-04-24 09:40:48.0,,,,,,0|i1k0nj:,325036,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Response.getStatusInfo does not work if the status code can not be mapped to Status enum ,CXF-4983,12644320,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,24/Apr/13 09:26,14/Aug/13 15:50,14/Mar/19 02:30,24/Apr/13 09:31,,,,,,,,2.7.5,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,Response.status(499).build().getStatusInfo() methods will throw NPE due to 499 (or other code with no matching Status enum) being mapped to a null Status ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,324687,,,2013-04-24 09:26:50.0,,,,,,0|i1k0mn:,325032,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Codegen maven plugin fails forked execution on Windows XP environment,CXF-4982,12644307,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,jeroen.benckhuijsen,jeroen.benckhuijsen,24/Apr/13 08:09,14/Aug/13 15:50,14/Mar/19 02:30,03/May/13 07:39,2.6.7,,,,,,,2.5.11,2.6.8,2.7.5,3.0.0-milestone1,,,,,0,,,,,,,,"Execution of the Maven cxf-codegen-plugin fails on Windows XP environment when using fork mode. Cause it that the JAR file created to hold the classpath is created in the temporary directory, which on Windpws XP points to C:\Documents and Settings\... Result is an error when executing the command line stating the jar file C:\Documents cannot be found.

For reference see: https://fisheye6.atlassian.com/browse/cxf/trunk/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/AbstractCodegenMoho.java?r=1465636

Proposed solutions is to apply quotes to the path. Other way is to create the jar file in the target/ folder of the current execution (which is often in a path without spaces, as multiple plugins are otherwise affected).","Windows XP, JDK 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-24 09:09:54.64,,,no_permission,,Novice,,,,,,,,,,,324674,,,Fri May 03 07:39:49 UTC 2013,,,,,,0|i1k0jr:,325019,,,,,,,,"24/Apr/13 09:09;ffang;Hi,

Could you please append the full stack trace here?

I think the recent change for OASISCatalogManager could also apply here.

Thanks
Freeman","24/Apr/13 09:15;jeroen.benckhuijsen;Build server logging below. Relevant message is last message before the ""8< snip"" at 24-Apr-2013 09:18:41.

24-Apr-2013 09:18:41	[INFO] [DEBUG] Classpath: [file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/target/classes/, file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/target/classes/, file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/common/common/target/gps-common.jar, file:/D:/.m2/repo3/joda-time/joda-time/1.6/joda-time-1.6.jar, file:/D:/.m2/repo3/uk/com/robust-it/cloning/1.7.9/cloning-1.7.9.jar, file:/D:/.m2/repo3/org/objenesis/objenesis/1.2/objenesis-1.2.jar, file:/D:/.m2/repo3/org/springframework/spring-beans/3.1.2.RELEASE/spring-beans-3.1.2.RELEASE.jar, file:/D:/.m2/repo3/org/springframework/spring-context/3.1.2.RELEASE/spring-context-3.1.2.RELEASE.jar, file:/D:/.m2/repo3/org/springframework/spring-aop/3.1.2.RELEASE/spring-aop-3.1.2.RELEASE.jar, file:/D:/.m2/repo3/org/springframework/spring-expression/3.1.2.RELEASE/spring-expression-3.1.2.RELEASE.jar, file:/D:/.m2/repo3/org/springframework/spring-asm/3.1.2.RELEASE/spring-asm-3.1.2.RELEASE.jar, file:/D:/.m2/repo3/org/springframework/spring-core/3.1.2.RELEASE/spring-core-3.1.2.RELEASE.jar, file:/D:/.m2/repo3/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar, file:/D:/.m2/repo3/org/springframework/spring-tx/3.1.2.RELEASE/spring-tx-3.1.2.RELEASE.jar, file:/D:/.m2/repo3/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, file:/D:/.m2/repo3/org/aspectj/aspectjrt/1.6.12/aspectjrt-1.6.12.jar, file:/D:/.m2/repo3/log4j/log4j/1.2.17/log4j-1.2.17.jar, file:/D:/.m2/repo3/commons-lang/commons-lang/2.4/commons-lang-2.4.jar, file:/D:/.m2/repo3/commons-collections/commons-collections/3.1/commons-collections-3.1.jar, file:/D:/.m2/repo3/nl/apg/gps/bre/lib/jrules-res-session-java/7.1.1.1/jrules-res-session-java-7.1.1.1.jar]
24-Apr-2013 09:18:41	[INFO] [DEBUG] Calling wsdl2java with args: [-encoding, UTF-8, -d, D:\bamboo-agent-home\xml-data\build-dir\GPSTWEE-IT-RELEASE\backend\ws-clients\gps-wow-sync-client\target\generated-sources\cxf, -b, file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/bindings.xml, -fe, jaxws21, -xjc-Xcollection-setter-injector, -wsdlLocation, /wsdl/wow-sync/WowSync_1.wsdl, -verbose, file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/wow-sync/WowSync_1.wsdl]
24-Apr-2013 09:18:41	[INFO] [INFO] Running code generation in fork mode...
24-Apr-2013 09:18:41	[INFO] [DEBUG] Running code generation in fork mode with args [-encoding, UTF-8, -d, D:\bamboo-agent-home\xml-data\build-dir\GPSTWEE-IT-RELEASE\backend\ws-clients\gps-wow-sync-client\target\generated-sources\cxf, -b, file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/bindings.xml, -fe, jaxws21, -xjc-Xcollection-setter-injector, -wsdlLocation, /wsdl/wow-sync/WowSync_1.wsdl, -verbose, file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/wow-sync/WowSync_1.wsdl]
24-Apr-2013 09:18:41	[INFO] [INFO] Building jar: C:\Documents and Settings\S-F-Javabuild\Local Settings\Temp\cxf-tmp-206960\cxf-codegen15082880103096748.jar
24-Apr-2013 09:18:41	[INFO] [WARNING] Unable to access jarfile C:\Documents

8< snip...

24-Apr-2013 09:18:42	[INFO] [ERROR] Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.6.1:wsdl2java (generate-wow-sync-client) on project gps-wow-sync-client:
24-Apr-2013 09:18:42	[INFO] [ERROR] Exit code: 1
24-Apr-2013 09:18:42	[INFO] [ERROR] Command line was: c:\dev\Java\jdk1.6.0_26\jre\bin\java.exe -jar ""C:\Documents and Settings\S-F-Javabuild\Local Settings\Temp\cxf-tmp-206960\cxf-codegen15082880103096748.jar"" -encoding UTF-8 -d D:\bamboo-agent-home\xml-data\build-dir\GPSTWEE-IT-RELEASE\backend\ws-clients\gps-wow-sync-client\target\generated-sources\cxf -b file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/bindings.xml -fe jaxws21 -xjc-Xcollection-setter-injector -wsdlLocation /wsdl/wow-sync/WowSync_1.wsdl -verbose file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/wow-sync/WowSync_1.wsdl
24-Apr-2013 09:18:42	[INFO] [ERROR] -> [Help 1]
24-Apr-2013 09:18:42	[INFO] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.6.1:wsdl2java (generate-wow-sync-client) on project gps-wow-sync-client: 
24-Apr-2013 09:18:42	[INFO] Exit code: 1
24-Apr-2013 09:18:42	[INFO] Command line was: c:\dev\Java\jdk1.6.0_26\jre\bin\java.exe -jar ""C:\Documents and Settings\S-F-Javabuild\Local Settings\Temp\cxf-tmp-206960\cxf-codegen15082880103096748.jar"" -encoding UTF-8 -d D:\bamboo-agent-home\xml-data\build-dir\GPSTWEE-IT-RELEASE\backend\ws-clients\gps-wow-sync-client\target\generated-sources\cxf -b file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/bindings.xml -fe jaxws21 -xjc-Xcollection-setter-injector -wsdlLocation /wsdl/wow-sync/WowSync_1.wsdl -verbose file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/wow-sync/WowSync_1.wsdl
24-Apr-2013 09:18:42	[INFO] 
24-Apr-2013 09:18:42	[INFO] 
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:217)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
24-Apr-2013 09:18:42	[INFO]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
24-Apr-2013 09:18:42	[INFO]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
24-Apr-2013 09:18:42	[INFO]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
24-Apr-2013 09:18:42	[INFO]         at java.lang.reflect.Method.invoke(Method.java:597)
24-Apr-2013 09:18:42	[INFO]         at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
24-Apr-2013 09:18:42	[INFO]         at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
24-Apr-2013 09:18:42	[INFO]         at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
24-Apr-2013 09:18:42	[INFO]         at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
24-Apr-2013 09:18:42	[INFO] Caused by: org.apache.maven.plugin.MojoExecutionException: 
24-Apr-2013 09:18:42	[INFO] Exit code: 1
24-Apr-2013 09:18:42	[INFO] Command line was: c:\dev\Java\jdk1.6.0_26\jre\bin\java.exe -jar ""C:\Documents and Settings\S-F-Javabuild\Local Settings\Temp\cxf-tmp-206960\cxf-codegen15082880103096748.jar"" -encoding UTF-8 -d D:\bamboo-agent-home\xml-data\build-dir\GPSTWEE-IT-RELEASE\backend\ws-clients\gps-wow-sync-client\target\generated-sources\cxf -b file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/bindings.xml -fe jaxws21 -xjc-Xcollection-setter-injector -wsdlLocation /wsdl/wow-sync/WowSync_1.wsdl -verbose file:/D:/bamboo-agent-home/xml-data/build-dir/GPSTWEE-IT-RELEASE/backend/ws-clients/gps-wow-sync-client/src/main/resources/wsdl/wow-sync/WowSync_1.wsdl
24-Apr-2013 09:18:42	[INFO] 
24-Apr-2013 09:18:42	[INFO] 
24-Apr-2013 09:18:42	[INFO]         at org.apache.cxf.maven_plugin.AbstractCodegenMoho.runForked(AbstractCodegenMoho.java:528)
24-Apr-2013 09:18:42	[INFO]         at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.generate(WSDL2JavaMojo.java:223)
24-Apr-2013 09:18:42	[INFO]         at org.apache.cxf.maven_plugin.AbstractCodegenMoho.execute(AbstractCodegenMoho.java:250)
24-Apr-2013 09:18:42	[INFO]         at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.execute(WSDL2JavaMojo.java:308)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
24-Apr-2013 09:18:42	[INFO]         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
24-Apr-2013 09:18:42	[INFO]         ... 19 more","24/Apr/13 10:07;ffang;Thanks, I will take a close look.
For a workaround now, you can run your maven project with -Djava.io.tmpdir=any_dir_without_space","03/May/13 07:39;ffang;commit fix
http://svn.apache.org/r1478291 for trunk
http://svn.apache.org/r1478294 for 2.7.x branch
http://svn.apache.org/r1478296 for 2.6.x branch
http://svn.apache.org/r1478663 for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WadlGenerator generates invalid xml for QueryParameters with a default value containing "" characters",CXF-4979,12644100,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,areilles,areilles,23/Apr/13 11:43,14/Aug/13 15:50,14/Mar/19 02:30,26/Apr/13 20:22,2.6.7,,,,,,,2.6.8,2.7.5,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"When defining a service with an {{@DefaultValue}} those value contains some double quotes, for instance:
{code}
@GET
  public List<Task> tasks(
   @DefaultValue(""-\""Created\"" -\""Done\"""") @QueryParam(""states"") String states) {
  ...
}
{code}
The wadl description generated by the {{WadlGenerator}} class is not valid xml: the value should be xml encoded. It seems there are a lot of cases where the inputs are not correctly xml encoded in the generator, {{@DefaultValue}} being the one that will most probably contain offending values.

As a side note, {{WadlGenerator}} is really painful to extend. For instance, in order to support custom ""doc"" annotations, one cannot override the handledocs method, but has to redefine all its callers.",tomee-1.6.0-SNAPSHOT,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-26 20:22:03.16,,,no_permission,,Unknown,,,,,,,,,,,324467,,,Fri Apr 26 20:22:03 UTC 2013,,,,,,0|i1jz9r:,324812,,,,,,,,"26/Apr/13 20:22;sergey_beryozkin;Path, method parameter default values, doc title and values are now XML-encoded if needed ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CXFNonSpringJaxrsServlet needs to ensure an optional Application path starts from ""/""",CXF-4975,12643570,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,19/Apr/13 11:26,14/Aug/13 15:50,14/Mar/19 02:30,19/Apr/13 11:46,,,,,,,,2.5.11,2.6.8,2.7.5,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,"CXF HTTP endpoints expect the relative addresses start from ""/"", thus when JAX-RS ApplicationPath has the value with no starting ""/"" the servlet should append it.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,323937,,,2013-04-19 11:26:35.0,,,,,,0|i1jw0f:,324282,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf servlet transport doesn't work when the endpoint deployed by using Spring within OSGi,CXF-4970,12642864,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,17/Apr/13 05:54,14/Aug/13 15:50,14/Mar/19 02:30,03/May/13 20:20,2.6.6,2.7.4,,,,,,2.6.8,2.7.5,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,CAMEL-6257,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,323278,,,Wed Apr 17 05:55:26 UTC 2013,,,,,,0|i1jrxz:,323623,,,,,,,,17/Apr/13 05:55;njiang;This issue is introduced in the patch of CXF-4870.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ExceptionMapper not used for exception in resource setter,CXF-4969,12642764,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,areilles,areilles,16/Apr/13 16:41,14/Aug/13 15:50,14/Mar/19 02:30,17/Apr/13 21:22,2.6.7,,,,,,,2.6.8,2.7.5,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,"I'm trying to use the cxf extension that allows to map exceptions to reponses. The issue I have is that exceptions raised in setXX methods annontated with @PathParam for example are caught and produce an internal server error. This prevents from performing usefull parameter validation from the setter methods, where they could benefit to all services.

Attached in a sample application that defines a custom mapper, and raises exceptions either in a setter or a service method.

Once deployed, I do get for:
{code}
http://localhost/testexceptions/a/b/fail_in_inject
{code}
where the exception is raised at the setter level an HTTP 500 response, with entity
{code:xml}
<ns1:XMLFault 
    xmlns:ns1=""http://cxf.apache.org/bindings/xformat"">
    <ns1:faultstring 
        xmlns:ns1=""http://cxf.apache.org/bindings/xformat"">javax.ws.rs.WebApplicationException
    </ns1:faultstring>
</ns1:XMLFault>
{code}
and a stack in the server logs, when
{code}
http://localhost/testexceptions/a/b/fail_in_serve
{code}
where the exception is raised at service level correctly returns HTTP 400

One sould be able to use the setter methods (or the resource constructor) to perform parameters validation, and property return errors.

Tested with tomee 1.6.0, which ships with cxf-2.6.7",tomee-1.6.0-SNAPSHOT,,,,,,,,,,,,,,,,,,,16/Apr/13 20:50;areilles;testexceptions-src.zip;https://issues.apache.org/jira/secure/attachment/12579010/testexceptions-src.zip,16/Apr/13 20:50;areilles;testexceptions.war;https://issues.apache.org/jira/secure/attachment/12579009/testexceptions.war,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-04-16 20:30:57.559,,,no_permission,,Unknown,,,,,,,,,,,323178,,,Thu Apr 18 12:17:02 UTC 2013,,,,,,0|i1jrbr:,323523,,,,,,,,"16/Apr/13 20:30;sergey_beryozkin;Thanks for reporting the issue, I do not see an attachment, but I understand what the issue is.  ","16/Apr/13 20:50;areilles;Sorry, I forgot to attach the test war. It is done now.","16/Apr/13 20:57;areilles;My issue is that when defining a rest resource like this:
{code}
@Path(""b/{name}"")
public class Service {
  String name;
  @PathParam(""name"")
  public void setName(String argname) {
    name = argname;
    if (""fail_in_inject"".equals(name)) {
      throw new WebApplicationException(400);
    }
  }  
  @GET
  public String serve() {
    return ""OK: ""+name;
  }
}
{code}
where I expect to validate the PathParam ""name"", for instance checking the resource is present, and twrowinf a WebApplicationException with 404 status otherwise. I want to perform this check at setter level (or in the resource constructor) so that each service in the resource benefits from the check.
When the WebApplicationException is raised in the setName method, cxf intercepts the exception, and replaces it with an internal error those only message is ""injection failed"", with the setter name. This prevents from using @PathParam or @queryParam annotated setter methods to provide meaningful error messages to the client.","16/Apr/13 21:02;sergey_beryozkin;Yes, I see it, thanks.","17/Apr/13 07:22;areilles;Checked the cxf sources, it seems that the method
{code:title=""org/apache/cxf/jaxrs/utils/InjectionUtils.java""}
    public static void injectThroughMethod(Object requestObject,
                                           Method method,
                                           Object parameterValue) {
        try {
            Method methodToInvoke = checkProxy(method, requestObject);
            methodToInvoke.invoke(requestObject, new Object[]{parameterValue});
        } catch (IllegalAccessException ex) {
            reportServerError(""METHOD_ACCESS_FAILURE"", method.getName());
        } catch (Exception ex) {
            reportServerError(""METHOD_INJECTION_FAILURE"", method.getName());
        }
    }
{code}
and probably its counterpart {{monospaced}}extractFromMethod{{monospaced}} could implement something like what is done in {{monospaced}}JAXRSInvoker.invoke(Exchange exchange, final Object serviceObject, Method m, List<Object> params){{monospaced}} and extract the cause from any {{monospaced}}InvocationTargetException{{monospaced}} to report this instead of simply swallowing it.
",17/Apr/13 21:22;sergey_beryozkin;Please try 2.6.8-SNAPSHOT in a couple of days,18/Apr/13 12:17;areilles;Thanks a lot !,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSONProvider will throw NPE if DOM Document is used and dropRootElement and ignoreNamespaces properties are set,CXF-4967,12642758,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,16/Apr/13 16:21,14/Aug/13 15:50,14/Mar/19 02:30,16/Apr/13 16:29,,,,,,,,2.6.8,2.7.5,3.0.0-milestone1,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,323172,,,2013-04-16 16:21:37.0,,,,,,0|i1jraf:,323517,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE is thrown when WS-RM's destination has no ackPolicy configured,CXF-4964,12642734,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,16/Apr/13 14:22,14/Aug/13 15:50,14/Mar/19 02:30,16/Apr/13 15:12,2.5.10,2.6.7,2.7.4,,,,,2.5.11,2.6.8,2.7.5,3.0.0-milestone1,WS-* Components,,,,0,,,,,,,,"When the RM manager/feature's destinationPolicy is configured without ackPolicy, an NPE is thrown at the server when it tries to return an acknowledgement message.

A workaround is to set explicitly the ackPolicy element.

This patch will add a fallback code to use the default policy values and aovid getting NPEs.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,323148,,,2013-04-16 14:22:11.0,,,,,,0|i1jr53:,323493,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race conditions in SOAP/HTTP startup,CXF-4960,12642289,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,12/Apr/13 18:13,14/Aug/13 15:50,14/Mar/19 02:30,03/May/13 13:38,2.7.4,,,,,,,2.7.5,,,,Soap Binding,Transports,,,0,,,,,,,,"
When running in OSGi and using Blueprint, the Aries blueprint container will use multiple threads to start the services.   If there are two services that attempt to register on the same address, no exception is raised in this case.  This only occurs when the container is started.  Attempting to add a second service to an address if one is already completely running works fine. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,322703,,,Fri May 03 13:38:31 UTC 2013,,,,,,0|i1joef:,323048,,,,,,,,03/May/13 13:38;dkulp;This is resolved for SOAP/HTTP.  There may still be issues with other transports and maybe with REST that will require more investigation and likely additional issues logged.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"remove dependency=""true"" for jsr339-api specs bundle",CXF-4957,12641785,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,10/Apr/13 07:11,14/Aug/13 15:50,14/Mar/19 02:30,10/Apr/13 07:52,,,,,,,,2.7.5,3.0.0-milestone1,,,,,,,0,,,,,,,,"as no other bundle explicitly import package from jsr339-api specs bundle in cxf-specs feature, have dependency=""true"" for this bundle can cause this bundle not get installed",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-10 14:38:34.581,,,no_permission,,Unknown,,,,,,,,,,,322200,,,Wed Apr 10 23:23:44 UTC 2013,,,,,,0|i1jlan:,322545,,,,,,,,"10/Apr/13 07:52;ffang;commit fix
http://svn.apache.org/r1466355 for trunk
http://svn.apache.org/r1466356 for 2.7.x branch
http://svn.apache.org/r1466359 for 2.6.x branch
http://svn.apache.org/r1466360 for 2.5.x branch","10/Apr/13 14:38;dkulp;
I'm a bit confused.

The jaxws frontend and the SOAP binding should definitely be importing the packages from saaj-api.

The JAX-RS frontend should definitely be importing everything from jsr339-api.

Thus, the description of the problem is certainly wrong.   The question is why aren't these being installed if those bundles are importing them.

","10/Apr/13 14:46;ffang;Hi Dan,

I believe the way how dependency=""true"" works is that only consider the bundles in same feature, not include the feature dependency, so if no other bundles in cxf-specs feature itself explicitly  import package, than it's not installed.

Freeman","10/Apr/13 14:52;dkulp;
Interesting.   If that's the case, we likely need to move a lot of things around.  Much of those should probably be moved into the appropriate features then.
","10/Apr/13 23:23;ffang;Yes, I think we can keep cxf-specs feature as is and add specs bundles to appropriate features which need them, so that cxf-specs feature could be still used by downstream projects",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interoperability Issue of the Discovery Hello Message  - wrong SOAP-Header-Action,CXF-4955,12641639,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,matthias.buchhorn@web.de,matthias.buchhorn@web.de,09/Apr/13 15:01,14/Aug/13 15:50,14/Mar/19 02:30,19/Apr/13 09:19,2.7.4,,,,,,,2.7.5,,,,WS-* Components,,,,0,,,,,,,,"CXF send out a WS-Discovery Multicast Hello Message by default.

We use the DiscoveryProxy from Microsoft WCF. This service  got the CXF Hello one-way message, but didn't accept that, because this SOAP Header Action is wrong:

<wsa:Action>http://cxf.apache.org/jaxws/dispatch/DummyImpl/InvokeOneWayRequest</wsa:Action>


In the WS-Discovery 1.1 Spec: http://docs.oasis-open.org/ws-dd/discovery/1.1/os/wsdd-discovery-1.1-spec-os.html#_Toc234231821 the Hello one-way Message has following SOAP Header Action:

<a:Action>
   http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01/Hello
</a:Action>

We find no possibility to change the SOAP-Header-Action by default. The core class org.apache.cxf.jaxws.ServiceImpl will set the SOAP Header Action in the method createDispatchService.
",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-09 15:11:54.484,,,no_permission,,Unknown,,,,,,,,,,,322055,,,Fri Apr 19 09:18:17 UTC 2013,,,,,,0|i1jkef:,322400,,,,,,,,"09/Apr/13 15:11;dkulp;I think I fixed this yesterday.  Any chance you could test with the latest code?  Unfortunately, Apache is having build machine/Jenkins issues and a snapshot wasn't deployed last night so you'd need to grab the latest code from SVN and build.  :-(","09/Apr/13 16:02;matthias.buchhorn@web.de;Hey Daniel, great news!  We will wait when the snapshot build was successful. I think here we can find it, isn't it?[1]https://repository.apache.org/content/groups/snapshots/org/apache/cxf/apache-cxf/2.7.5-SNAPSHOT/ We let you know about the result if we test the discovery Hello message agaist our DiscoveryProxy.
cheers and thank you very muchMatthias   Gesendet: Dienstag, 09. April 2013 um 17:12 Uhr
Von: ""Daniel Kulp (JIRA)"" <jira@apache.org>
An: matthias.buchhorn@web.de
Betreff: [jira] [Commented] (CXF-4955) Interoperability Issue of the Discovery Hello Message - wrong SOAP-Header-Action
[ [2]https://issues.apache.org/jira/browse/CXF-4955?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=13626700#comment-13626700 ]

Daniel Kulp commented on CXF-4955:
----------------------------------

I think I fixed this yesterday. Any chance you could test with the latest code? Unfortunately, Apache is having build machine/Jenkins issues and a snapshot wasn't deployed last night so you'd need to grab the latest code from SVN and build. :-(


--
This message is automatically generated by JIRA.
If you think it was sent incorrectly, please contact your JIRA administrators
For more information on JIRA, see: [7]http://www.atlassian.com/software/jira
----------------------------------------------------------------------------------------
[1] https://repository.apache.org/content/groups/snapshots/org/apache/cxf/apache-cxf/2.7.5-SNAPSHOT/
[2] https://issues.apache.org/jira/browse/CXF-4955?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=13626700#comment-13626700
[3] https://issues.apache.org/jira/browse/CXF-4955
[4] http://cxf.apache.org/jaxws/dispatch/DummyImpl/InvokeOneWayRequest
[5] http://docs.oasis-open.org/ws-dd/discovery/1.1/os/wsdd-discovery-1.1-spec-os.html#_Toc234231821
[6] http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01/Hello
[7] http://www.atlassian.com/software/jira
","09/Apr/13 17:23;dkulp;
I just manually deployed a new snapshot.  That should have the fixes in it.   Would definitely appreciate any testing you can do with it.","19/Apr/13 09:18;matthias.buchhorn@web.de;The Header is right now:

<wsa:Action>http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01/Hello</wsa:Action>

But since CXF 2.7.4 I can't configure CXF as Runtime in Eclipse. The Version and Type aren't detected automatically.

Windows / Preferences / Web Services / CXF2.x Preferences / Add ...
choose CXF home -> Browse -> OK

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CryptoCoverageChecker prevents handling of SOAPFault-Responses,CXF-4954,12641636,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,dlatt,dlatt,09/Apr/13 14:57,14/Aug/13 15:50,14/Mar/19 02:30,26/Apr/13 16:11,2.4.6,,,,,,,2.5.11,2.6.8,2.7.5,,WS-* Components,,,,0,,,,,,,,"Using CXF 2.4.6 in JBoss EAP 6, I'm securing my web services with WS-Security (no WS-SecurityPolicy as the algorithm suite is not supported there).

For this, I have configured WSS4JInInterceptors and WSS4JOutInterceptors on both client and server, and the setup works.

To check if incoming messages are signed, encrypted, and with timestamp token, I also have configured a CryptoCoverageChecker on both client and server. Now I have the problem that I cannot obtain Fault answers from the server on the client any more because the CryptoCoverageChecker kicks in and I don't have a chance to access the SOAPFaultException from the server. The server doesn't sign and encrypt Fault answers (which is ok, and this is the case also when using easy WS-SecurityPolicy configurations).
",JBoss EAP 6,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-26 15:57:48.935,,,no_permission,,Unknown,,,,,,,,,,,322052,,,Fri Apr 26 15:57:48 UTC 2013,,,,,,0|i1jkdr:,322397,,,,,,,,"26/Apr/13 15:57;coheigea;
This is now fixed. I have added a boolean configuration property to CryptoCoverageChecker (""checkFaults""). When this is true (default behaviour) it checks the response Fault for the Crypto requirements. To not check Faults, then set it to false.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRSClientFactoryBean doesn't take the bus features into consideration ,CXF-4953,12641377,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,njiang,njiang,08/Apr/13 15:09,14/Aug/13 15:49,14/Mar/19 02:30,15/Jul/13 13:01,2.5.10,2.6.7,2.7.4,,,,,2.7.6,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,"When we set the feature into to bus, the feature should be applied to all the JAXRSClientFactoryBean by default.
Current JAXRSClientFactoryBean just take the features which are set to itself into consideration.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-09 09:25:55.304,,,no_permission,,Unknown,,,,,,,,,,,321793,,,Thu Apr 18 14:33:39 UTC 2013,,,,,,0|i1jis7:,322138,,,,,,,,"09/Apr/13 08:23;njiang;In most case, we just setup a new interceptor into the feature, and cxf will load the interceptor from bus when it setup the interceptor chains for the client or server. But we could do more then interceptor setting work in the feature, such as the JMSFeature which could help CXF setup the JMS configuration or changing the behavior of the Client to support the fail over.
My suggestion is let the JAXRSClientFactoryBean check the features from Bus and apply them to itself. The code could like this
{code}
    protected void applyFeatures(AbstractClient client) {
        if (getFeatures() != null) {
            for (AbstractFeature feature : getFeatures()) {
                feature.initialize(client.getConfiguration(), getBus());
            }
        }
        
        // apply the feature from bus
        if (getBus().getFeatures() != null) {
             for (AbstractFeature feature : getBus().getFeatures()) {
                feature.initialize(client.getConfiguration(), getBus());
             }
        }
    }

{code}","09/Apr/13 09:25;sergey_beryozkin;Hi Willem, I guess it looks right. Please apply, thanks","09/Apr/13 11:28;dkulp;The JAX-WS side of things doesn't do this, does it?  This needs to match what is on the JAX-WS/Simple frontend.
","10/Apr/13 02:09;njiang;Hi Dan,

As you said in the cxf dev mailing list, we could use the ClientLifecycleListener to do the same work, but I don't find this interface can work for jaxrs frontend. ","10/Apr/13 14:59;sergey_beryozkin;Can we find some workaround, example, if a user does not want a given bus feature be explicitly applied by the (jaxrs) client runtime, then some bus property can be set (example, this property will be a list of feature instances to be ignored by the client runtime), so then the factory would check this bus property, and filter out the required bus properties ? I type and realize it is a hack - but may work. 

Otherwise some common ClientLifecycleListener-like interface may need to be introduced I guess.","10/Apr/13 15:02;dkulp;
I think getting the JAX-RS stuff to call the ClientLifecycleListener's is the right way to handle this to make sure it matches what the JAX-WS and Simple frontends are doing.
","18/Apr/13 14:33;sergey_beryozkin;Willem, I've added a frontend Client adapter, merged to 2.7.5-SNAPSHOT; can you please confirm on your end it fixes the issue ?

Dan, for 3.0, may be we can introduce an API interface named like ClientConfiguration which will extend InterceptorProvider, ConduitSelector, and may be get 1 or 2 methods from Client like getEndpoint(), and Client will extend this ClientConfiguration, and then ClientLifeCycleListener will be updated to accept ClientConfiguration.

Not sure how sensitive this change may become, but IMHO it might be reasonable. For now the JAXRS client configuration wrapped in the frontend 
client adapter seems to work.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-codegen-plugin wsdlArtifact ignores classifier,CXF-4951,12641350,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,yonatan,yonatan,08/Apr/13 11:04,14/Aug/13 15:50,14/Mar/19 02:30,09/Apr/13 02:35,2.7.4,,,,,,,2.5.11,2.6.8,2.7.5,3.0.0-milestone1,Core,,,,0,maven,,,,,,,"When specifying a wsdlArtifact element with classifier defined in wsdlOption, the plugin ignores the classifier and tries to download the unclassified artifact. 
For example, with this plugin defined:
{noformat}
<plugin>
 <groupId>org.apache.cxf</groupId>
 <artifactId>cxf-codegen-plugin</artifactId>
 <version>2.7.4</version>
 <executions>
  <execution>
   <id>process-sources</id>
   <phase>process-sources</phase>
   <configuration>
    <wsdlOptions>
     <wsdlOption>
      <wsdlArtifact>
       <groupId>org.group</groupId>
       <artifactId>artifact</artifactId>
       <version>1.0.0</version>
       <classifier>actionService</classifier>
      </wsdlArtifact>
      <extraargs>
       <extraarg>-p</extraarg>
       <extraarg>org.app.services.action</extraarg>
      </extraargs>
     </wsdlOption>
    </wsdlOptions>
   </configuration>
   <goals>
    <goal>wsdl2java</goal>
   </goals>
  </execution>
 </executions>
</plugin>
{noformat}
it will try to resolve {{org.group:artifact:wsdl:1.0.0}} instead of {{org.group:artifact:wsdl:actionService:1.0.0}}.
Notice that if the repo has {{artifact-1.0.0.wsld}} installed in it, it will succeed, otherwise it will fail.

Looks that if in:
{{org.apache.cxf.maven_plugin.AbstractCodegenMoho.downloadRemoteWsdls()}}
you would use
{{artifactFactory.createArtifactWithClassifier(groupId, artifactId, version, type, classifier)}}
instead of
{{artifactFactory.createBuildArtifact(groupId, artifactId, version, type)}}
the issue would be resolved.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-08 13:16:56.642,,,no_permission,,Unknown,,,,,,,,,,,321766,,,Tue Apr 09 02:35:05 UTC 2013,,,,,,0|i1jim7:,322111,,,,,,,,08/Apr/13 13:16;ffang;can also add classifier option for cxf-java2ws-plugin used for publish wsdl,"09/Apr/13 02:35;ffang;commit fix
http://svn.apache.org/r1465636 for trunk
http://svn.apache.org/r1465859 for 2.7.x branch
http://svn.apache.org/r1465860 for 2.6.x branch
http://svn.apache.org/r1465864 for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FIQL - searchContext returns null SearchCondition,CXF-4949,12641066,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,swarupe04,swarupe04,05/Apr/13 16:32,11/Jul/14 12:50,14/Mar/19 02:30,16/Jan/14 14:08,2.6.6,,,,,,,2.6.12,2.7.9,3.0.0-milestone2,,JAX-RS,,,,0,,,,,,,,"Hi,
I'm trying the fiql expression for the first time, and I get null searchCondition. But when i print the searchContext.getSearchExpression(), it seems to have parsed the query param fine with: lowestPrice=gt=10

SearchCondition<TourTicketStats> sc = searchContext.getCondition(filterContext.getSearchExpression(), TourTicketStats.class);

I'm atleast expecting some kind of exception raised if it's not able to parse it. 

Any help to debug it is appreciated.

Using v2.6.6

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-05 19:12:15.625,,,no_permission,,Unknown,,,,,,,,,,,321482,,,Thu Jan 16 14:10:16 UTC 2014,,,,,,0|i1jgv3:,321827,,,,,,,,"05/Apr/13 17:37;swarupe04;It seems to be case-insensitive. If I use lowestprice, it seems to recognize the property name even though property name is in camelcase: lowestPrice.

Is that a bug?","05/Apr/13 19:12;sergey_beryozkin;SearchCondition<TourTicketStats> sc = searchContext.getCondition(TourTicketStats.class);

should actually do it:

SearchCondition<TourTicketStats> sc = searchContext.getCondition(someExpression, TourTicketStats.class);

really makes sense when this 'someExpression' came from say a captured path expression (as opposed to from a _s query). etc

I'll have a look at the case-sensitivity issue either way","05/Apr/13 19:18;swarupe04;Hi,
I'm actually using it as @Context, but I've also verified with searchContext.getCondition(someExpression, TourTicketStats.class) just to make sure and it was same issue.

Yeah, it does seem to be case-sensitivity issue","05/Apr/13 19:50;sergey_beryozkin;As far as I recall, Beanspector converts the property names to a low case; this can explain why the query with a property containing a camel case is not matched - this should always work I guess. 
FYI, you can always follow http://cxf.apache.org/docs/jax-rs-search.html#JAX-RSSearch-Mappingofquerypropertiestobeanproperties to get the match, but in this case it is redundant indeed   ","13/Jun/13 13:05;nikosdim;Hi, 

I am trying to implement FIQL into my CXF service but I am getting java.lang.NullPointerException in the line 
SearchCondition<Book> condition = searchContext.getCondition(Book.class);

I am injecting the searchContext with the way below:

public List<Book> getBook(@Context SearchContext searchContext)

I have read both the CXF-4305 and (apparently) the CXF-4949 but I haven't manage to solve it. I am using cxf 2.7.5 (which is supposed to have this bug fixed). I am importing the CXF .jar files from maven pom.xml

Here are my pom.xml dependencies
cxf-rt-frontend-jaxrs:2.7.5
cxf-rt-rs.extension-providers:2.7.5
spring-core:3.2.2.RELEASE
spring-context:3.2.2.RELEASE
spring-web:3.2.2.RELEASE
cxf-rt-rs-extension-search:2.7.5

Any ideas?

Thanks","13/Jun/13 14:58;sergey_beryozkin;I think you need to register ""org.apache.cxf.jaxrs.ext.search.SerachContextProvider"" in jaxrs:providers, try it please",14/Jun/13 07:26;nikosdim;Thanks so much Sergey. That was it. Now it works fine.  ,"15/Jan/14 04:20;sandysoesilo;Hi,
since Beanspector is converting everything that I put in the search parameter into lower case, I'm forced not to have camelCase properties in my entities. My properties must be named with lowercase only. 
Is this a desirable situation? 

Thanks,","15/Jan/14 11:59;sergey_beryozkin;Hi, can you type an example here ? I think we have tests with entities having camel case properties
Thanks","16/Jan/14 02:29;sandysoesilo;Hi Sergey,
in my entity I have a camelCase property 
{code}
@Column(name=""PHONENO"", length=30, nullable=false)
private String phoneNumber;
{code}
with following call in the browser /customers?_s=phoneNumber==12345

I'm using JPATypedQueryVisitor  and he was unable to match the getters/setters for this property since it's been lowercased from the beginning.

{quote}Caused by: java.lang.IllegalArgumentException: Unable to locate Attribute  with the the given name [phonenumber] on this ManagedType [domain.AbstractEntity]
	at org.hibernate.jpa.internal.metamodel.AbstractManagedType.checkNotNull(AbstractManagedType.java:144)
	at org.hibernate.jpa.internal.metamodel.AbstractManagedType.getAttribute(AbstractManagedType.java:130)
	at org.hibernate.jpa.internal.metamodel.AbstractManagedType.getAttribute(AbstractManagedType.java:128)
	at org.hibernate.jpa.criteria.path.AbstractFromImpl.locateAttributeInternal(AbstractFromImpl.java:133)
	at org.hibernate.jpa.criteria.path.AbstractPathImpl.locateAttribute(AbstractPathImpl.java:212)
	at org.hibernate.jpa.criteria.path.AbstractPathImpl.get(AbstractPathImpl.java:185)
	at org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor.getNextPath(AbstractJPATypedQueryVisitor.java:287)
	at org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor.getPath(AbstractJPATypedQueryVisitor.java:278)
	at org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor.buildPredicate(AbstractJPATypedQueryVisitor.java:178)
	at org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor.visit(AbstractJPATypedQueryVisitor.java:123)
	at org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition.accept(SimpleSearchCondition.java:321)

	... 47 more{quote}

Tested with cxf 2.7.8

Thanks

","16/Jan/14 14:08;sergey_beryozkin;Thanks for this example, JPA test has a bean with several camel case properties but all of them are non primitive properties, and the issue occurs for simple properties apparently. I'd say it is a Hibernate issue, the fact it can match primitive values in a case-insensitive way, but I've done some updates to ensure the visitors do see the original search values provided ","16/Jan/14 14:10;sergey_beryozkin;By the way, the workaround is to pass a fieldMap Map property to the visitor, example, it can contain a ""phonenumber"":""phoneNumber"" mapping",,,,,,,,,,,,,,,,,,,,,,,,
Potential problems with the JAXBContext being null,CXF-4947,12640800,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rwonly,rwonly,04/Apr/13 16:05,06/Dec/16 13:52,14/Mar/19 02:30,29/Apr/13 19:21,2.6.7,2.7.4,,,,,,2.5.11,2.6.8,2.7.5,,JAXB Databinding,,,,0,,,,,,,,"I post a mail to mail list to describe this. And Daniel fixed it very quickly. I still open this JIRA to record this issue, so that I can get a numbered patch merging to my runtime. Thanks.

--
hi devs,
I found some intermittent NullpointerException, and it is very hard to reproduce but I did have met a lot of times, and it is thrown from different places from runtime:
Stack Dump = java.lang.NullPointerException
    at org.apache.cxf.common.jaxb.JAXBUtils.generateJaxbSchemas(JAXBUtils.java:765)
    at org.apache.cxf.jaxb.JAXBDataBinding.generateJaxbSchemas(JAXBDataBinding.java:440)
    at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:363)
    at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:86)
    at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:469)
    at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:690)
    at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:531)
    at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:247)

After checking the codes, they are all about the jaxbcontext is null.
From the JAXBContextCache.CachedContextAndSchemas, I notice this line:
private WeakReference<JAXBContext> context;

IMHO, WeakReference is not a good choice to do cache, it could be gc in any time. For example,
JAXBContextCache.getCachedContextAndSchemas(..)
<gc>
ctx = cachedContextAndSchemas.getContext()    <-- then the ctx will be null here

So I guess this is the root cause of the intermittent issue. ",,,,,,,,,,,,,,CXF-7166,,,,,,16/Apr/13 08:18;rwonly;CXF-4947-2.patch;https://issues.apache.org/jira/secure/attachment/12578899/CXF-4947-2.patch,16/Apr/13 08:18;rwonly;CXF-4947.patch;https://issues.apache.org/jira/secure/attachment/12578898/CXF-4947.patch,04/Apr/13 16:08;rwonly;r1464133_for_trunk.diff;https://issues.apache.org/jira/secure/attachment/12576993/r1464133_for_trunk.diff,04/Apr/13 16:08;rwonly;r1464141_for_br2.6.x.diff;https://issues.apache.org/jira/secure/attachment/12576994/r1464141_for_br2.6.x.diff,04/Apr/13 16:08;rwonly;r1464185_for_br2.6.x.diff;https://issues.apache.org/jira/secure/attachment/12576995/r1464185_for_br2.6.x.diff,05/Apr/13 06:28;rwonly;r1464627_for_tr.diff;https://issues.apache.org/jira/secure/attachment/12577169/r1464627_for_tr.diff,05/Apr/13 06:09;rwonly;r1464632_for_br2.6.x.diff;https://issues.apache.org/jira/secure/attachment/12577166/r1464632_for_br2.6.x.diff,7.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,321259,,,Tue Apr 16 08:33:03 UTC 2013,,,,,,0|i1jfhz:,321604,,,,,,,,04/Apr/13 16:08;rwonly;upload some diff files that how Daniel fixed this issue. ,16/Apr/13 08:17;rwonly;reopen this and upload a new patch.,"16/Apr/13 08:33;rwonly;upload CXF-4947-2.patch, the patch is for br2.6.
The main changes are:
1. add a new construct method in CachedContextAndSchemas:
  private CachedContextAndSchemas(JAXBContext context, Set<Class<?>> classes, CachedContextAndSchemasInternal i)
and then in getCachedContextAndSchemas()
  return new CachedContextAndSchemas(context, classes, cachedContextAndSchemasInternal);
so that we can hold the strong reference of context till the method is returned.
2. rename all local variable cachedContextAndSchemas to cachedContextAndSchemasInternal in getCachedContextAndSchemas()
so that this part of code is more readable..
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SourceGenerator needs to use URI resolve function when dealing with relative references containing parent folders,CXF-4946,12640767,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,04/Apr/13 13:37,14/Aug/13 15:50,14/Mar/19 02:30,18/Apr/13 10:17,,,,,,,,2.5.11,2.6.8,2.7.5,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,321226,,,2013-04-04 13:37:43.0,,,,,,0|i1jfan:,321571,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS Discovery service doesn't discover onvif devices,CXF-4943,12640686,Bug,Resolved,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,kotkot,kotkot,04/Apr/13 01:37,10/Sep/18 16:35,14/Mar/19 02:30,10/Sep/18 16:35,2.7.4,,,,,,,,,,,WS-* Components,,,,0,,,,,,,,"I have axis ip camera. It has onvif services enabled.I cant find any services on it using this code
        //Use WS-Discovery to find references to services that implement the Greeter portType
        WSDiscoveryClient client = new WSDiscoveryClient();
//                     client.
//        or: new WSDiscoveryClient(""soap.udp://proxyhost:3702"");
        client.setDefaultProbeTimeout(10000);

//        List<EndpointReference> references = client.probe(new QName(""http://www.onvif.org/ver10/network/wsdl"", ""NetworkVideoTransmitter""));
        List<EndpointReference> references = client.probe();
        client.close();

//        GreeterService service = new GreeterService();
//loop through all of them and have them greet me.
        for (EndpointReference ref : references) {

//            Greeter g = service.getPort(ref, Greeter.class);
            System.out.println(ref.toString());
        }


Onvif(onvif.org) devices require ws discovery 04/2005 version. But there seems no way to force cxf to use it.
Onvide",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2018-09-10 16:35:31.967,,,no_permission,,Unknown,,,,,,,,,,,321145,,,Mon Sep 10 16:35:31 UTC 2018,,,,,,0|i1jesn:,321490,,,,,,,,"10/Sep/18 16:35;coheigea;CXF supports WS-Discovery using 04/2005. You have to call:

client.setVersion10();",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM related faults do not contain the correct addressing action,CXF-4941,12640543,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,03/Apr/13 16:40,14/Aug/13 15:50,14/Mar/19 02:30,16/Apr/13 14:58,2.5.10,2.6.7,2.7.4,,,,,2.6.8,2.7.5,3.0.0-milestone1,,WS-* Components,,,,0,,,,,,,,"WS-RM related faults do not contain the correct fault action in their addressing action property.

According to the WS-RM 1.0 and 1.1 specs, the generic fault action URI to be used is:

WS-RM 1.0: WSA_NS + ""/fault""
WS-RM 1.1: WSRM_NS + ""/fault""",,,,,,,,,,,,,,CXF-3981,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,321003,,,Wed Apr 03 16:42:11 UTC 2013,,,,,,0|i1jdw7:,321344,,,,,,,,03/Apr/13 16:42;ay;related to CXF-3981 which covered WS-Addressing related faults but excluded WS-RM related faults.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF not (always) responding with the correct exception when working with an exception hierarchy,CXF-4940,12640542,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,d.enorme,d.enorme,03/Apr/13 16:38,14/Aug/13 15:50,14/Mar/19 02:30,08/Apr/13 02:32,2.7.4,,,,,,,2.5.11,2.6.8,2.7.5,3.0.0-milestone1,Core,,,,0,,,,,,,,"Hi there,

For a webservice I'm currently building (java first), I have a few custom exceptions arranged in a hierarchy. In order to have them properly declared in the WSDL, I list all possible exceptions in the WebMethod declarations, not only the top ones. That is, if exceptions B->A, I declare :
@WebMethod
String helloWorld() throws A,B;

And it works, as far as the WSDL is concerned.
What doesn't work is that when requesting the service and raising a 'B' (child) exception, the response embeds an 'A' (parent) fault.


I seem to have narrowed down the culprit to org.apache.cxf.interceptor.FaultOutInterceptor.getFaultForClass(BindingOperationInfo,Class<?>), which stops at the first exception 'assignable to' the one actually raised. I 'patched' it locally to return the 'closest to the one raised', and it does the trick for me.

I hope an actual CXF contributor can take a look at this issue. I'm a beginner with CXF, and I might use it improperly. Please bear with me if that's the case :)


",,,,,,,,,,,,,,,,,,,,03/Apr/13 16:41;d.enorme;FaultOutInterceptor.patch;https://issues.apache.org/jira/secure/attachment/12576806/FaultOutInterceptor.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-04-07 07:43:41.202,,,no_permission,,Unknown,,,,,,,,,,,321002,,,Mon Apr 08 02:32:06 UTC 2013,,,,,,0|i1jdvz:,321343,,,,,,,,03/Apr/13 16:41;d.enorme;+attachment : the patch I used,"07/Apr/13 07:43;ffang;Hi,

I just commit a testcase[1] which demonstrate the exception hierarchy works. 

Could you please append a testcase which we can reproduce the behavior you described here?

[1]http://svn.apache.org/r1465337
Freeman","07/Apr/13 10:46;d.enorme;Hello,

Well, the testcase you have commited could have reproduced the behavior. Problem is that org.apache.cxf.interceptor.FaultOutInterceptor.getFaultForClass will scan exceptions in the order of a Map.values(), which is non-deterministic. That's the reason why I have titled ""[...] not (always) responding [...]"".
So I don't know, maybe you could try playing with AddNumberSubException's hashcode ? But still, even if you can make the testException() fail today with one VM version, it could very well work with another one, as you know. ","07/Apr/13 12:32;ffang;Hi,

Yeah, nice point, and your patch can always find the most close exception from the inherit tree, I will apply it soon.

Thanks
Freeman","08/Apr/13 02:32;ffang;apply patch on behalf of David G with thanks
http://svn.apache.org/r1465373 for trunk
http://svn.apache.org/r1465526 for 2.7.x branch
http://svn.apache.org/r1465527 for 2.6.x branch
http://svn.apache.org/r1465529 for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting RuntimeDelegate instance in CXFNonSpringJaxrsServlet is too aggresive,CXF-4938,12640461,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,marek.winkler,marek.winkler,03/Apr/13 08:45,14/Aug/13 15:50,14/Mar/19 02:30,04/Apr/13 13:17,2.4.10,,,,,,,2.5.11,2.6.8,2.7.5,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,"Setting RuntimeDelegate instance in CXFNonSpringJaxrsServlet breaks the ability to use CXF, bundled in a WAR application, along with other JAX-RS providers for other applications deployed on the same application server.

The problem occurs for instance on JBoss AS 7.1, when one application uses CXF, while the other uses RestEasy. It occurs after upgrading from 2.4.8 to 2.4.10 (I can see that the static initializer had been introduced there).

Could you consider changing the static initializer in CXFNonSpringJaxrsServlet to something optional/configurable?",JBoss AS 7.1,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-03 08:55:40.984,,,no_permission,,Unknown,,,,,,,,,,,320921,,,Thu Apr 04 17:38:33 UTC 2013,,,,,,0|i1jddz:,321262,,,,,,,,03/Apr/13 08:46;marek.winkler;Consequence of the static initializer described in CXF-3949,"03/Apr/13 08:55;sergey_beryozkin;I started some work on minimizing the dependency of the runtime on RuntimeDelegate in the first place, however as far as I recall this initializer was added on the request to bypass some issues in some of the OSGI environments where CXF RuntimeDelegate could not be located. May be I can introduce CXFRuntimeDelegateServlet which extends CXFNonSpringJaxrsServlet and this one will do a static initializer, not sure yet...","03/Apr/13 11:01;marek.winkler;+1 for this solution, that would help us a lot. Thanks for considering it.","03/Apr/13 16:10;marek.winkler;We have further investigated the issue and found it in fact a blocker for using CXF 2.4.10 in our application. Because we need the bug fixes present in 2.4.10, we will probably have either to patch CXF, or find another workaround until this issue is resolved.","04/Apr/13 13:17;sergey_beryozkin;Sure, I've pushed it to CXFJaxrsRuntimeDelegateServlet - see also https://issues.apache.org/jira/browse/CXF-3949#comment-13622164 
thanks",04/Apr/13 14:05;marek.winkler;Great news! Is there any chance that the fix could make it into 2.4.x version as well? Thanks a lot for resolving this issue!,04/Apr/13 17:38;dkulp;We're not planning any more 2.4.x. builds/releases.   You are strongly advised to start upgrading to the supported versions of CXF.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRSInvoker and Proxy classes (Spring Security),CXF-4934,12639779,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,franpregernik,franpregernik,29/Mar/13 09:48,26/Nov/13 17:40,14/Mar/19 02:30,27/Sep/13 16:32,2.7.3,3.0.0-milestone1,,,,,,2.7.8,3.0.0-milestone1,,,JAX-RS,,,,0,invoker,newbie,proxy,rest,springsecurity,,,"Hi,


I am aware of other tickets regarding the proxy invocation issues.

During development I noticed an exception popping up:
IllegalArgumentException: object not instance of class

I narrowed it down to AbstractInvoker.java:performInvocation(Exchange exchange, Object serviceObject, Method m, Object[] paramArray)

This kept happening whenever I added a @Secured annotation to a rest method. This annotation caused a Spring Security AOP Proxy to be passed to the default Invoker (JAXRSInvoker.java) instead of the original target class. Which is fine.

The problem (I think) is in the method performInvocation. The serviceObject parameter is a reference to the Proxy and not the target class causing the line:
{noformat}
return m.invoke(serviceObject, paramArray);
{noformat}

to fail with the above mentioned error.


I resolved this by extending JAXRSInvoker and registering it via:
{noformat}
<jaxrs:invoker>
    <bean class=""hr.altima.web.security.SpringSecurityInvokerProxy""/>
</jaxrs:invoker>
{noformat}

and overriding the performInvocation method like so:
{noformat}
public class SpringSecurityInvokerProxy extends JAXRSInvoker {

    @Override
    protected Object performInvocation(Exchange exchange, Object serviceObject, Method m, Object[] paramArray) throws Exception {
        paramArray = insertExchange(m, paramArray, exchange);


        if (serviceObject instanceof Proxy) {
            try {
                return Proxy.getInvocationHandler(serviceObject).invoke(serviceObject, m, paramArray);
            } catch (Throwable throwable) {
                throw new Exception(""Proxy invocation threw an exception"", throwable);
            }
        } else {
            return m.invoke(serviceObject, paramArray);
        }
    }
}
{noformat}


My reasoning is that you want to call the proxied method (security check) and not the target method directly but the call through proxies should be done differently.

I am not saying this is the correct way to invoke proxies but it works for this situation although I prefer this to be built in the CXF lib.


",Spring framework ver 3.1.3.RELEASE,,,,,,,,,,,,,,,,,,,02/Apr/13 09:34;franpregernik;web-template-2.zip;https://issues.apache.org/jira/secure/attachment/12576529/web-template-2.zip,30/Mar/13 05:42;franpregernik;web-template.zip;https://issues.apache.org/jira/secure/attachment/12576221/web-template.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-03-29 18:22:46.175,,,no_permission,,Unknown,,,,,,,,,,,320248,,,Tue Apr 02 09:34:22 UTC 2013,,,,,,0|i1j98f:,320589,,,,,,,,"29/Mar/13 18:22;sergey_beryozkin;Hi - thanks for reporting the issue - good the see you've found a workaround. 
I've thought we've had most of these issues resolved - for example, see
http://svn.apache.org/repos/asf/cxf/trunk/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/security/SecureBookInterface.java

this interface is implemented by

http://svn.apache.org/repos/asf/cxf/trunk/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/security/SecureBookStore.java

and is referenced here:
http://svn.apache.org/repos/asf/cxf/trunk/systests/jaxrs/src/test/resources/jaxrs_security/WEB-INF/beans.xml

I wonder what is  different in your case ?
","30/Mar/13 05:32;franpregernik;Hi,

in the example you provided I noticed that the @Secured interface was defined on the interface. I have a generic CrudInterface so that wouldn't be ok to do but I tried it anyway and it didn't help. JAXRSInvoker still gets the Proxy class as the serviceObject in performInvocation and the m.invoke fails.

I also noticed in the example that it is using the CustomJAXRSInvoker which does its own security checking before the reflection invoke call. But this is duplicating the behaviour that the Proxy does anyway (and it does it better probably).

I will attach the testbed for my issue and you can see the issue for yourself. Just put a brakepoint in SpringSecurityInvokerProxy:performInvocation.
",30/Mar/13 05:42;franpregernik;Demo project,"31/Mar/13 19:39;sergey_beryozkin;Hi - thanks for attaching the test project.

What I've found out is that changing CrudService to have ""public Response findById(Long id);"" instead of ""public Response findById(I id);"" fixes the issue. JAX-RS runtime tries to find out which method to invoke on the proxy and I guess CrudService methods have actually Object parameters due to the erasure so the runtime can not spot the actual method on the proxy so it fails and the workaround is needed.

I'm not sure yet if we can generalize what you typed in the custom invoker...


 

Note that even with your custom service invoker, SpringSecurity still blocks 'findById' with 403, it kind of works during the 1st attempt but then fails after the retry.  



","02/Apr/13 04:13;franpregernik;Hi,

thank you for your effort. I just started configuring Spring Security and chances are high that I misconfigured something - ignore that :D

You are right, there is no need to use the generic form of CrudService. Now I have two workarounds for this issue.

To generalize this in the future maybe you could find out how is it that the proxy invocation handler resolves and calls the method on the proxy without problems and use that in CXF. Maybe Spring Security took into account the generic parameter when creating the proxy wrapper, created the proper method signature and that is why the call works (just speculating).

That being said I am satisfied with the workarounds so you can treat this issue as you see fit.","02/Apr/13 07:26;sergey_beryozkin;Hi - I'm actually not sure the invocation handler invokes the right method either. CXF does ""method.invoke(object)"" and in this case it does not work because the method belongs to the service bean class, not to its proxy. I suspect the handler works because it is smart enough to invoke directly on the service bean - bypassing the AOP layer supporting @Secured - I was not able to confirm because even with ""rod:koala"" I was getting 403 :-) ","02/Apr/13 09:34;franpregernik;Updated project - fixed AccessDeniedException by switching to Spring Security pre-post annotations.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Illegal method arguments generated by Wadl2Java,CXF-4932,12639478,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,etexier,etexier,27/Mar/13 22:46,09/Apr/13 15:15,14/Mar/19 02:30,28/Mar/13 09:41,2.7.3,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,JAX-RS,Tooling,,,0,patch,,,,,,,"I am trying to generate the JAX-RS interfaces from a public twitter wadl . The generated methods contained arguments that conflicted with java reserved keywords (ex: String long), or illegal "":"" (ex: String attribute:street_adress) .

I looked at the original code (SourceGenerator.java), and will attach a proposed patch that seems to work for me
",,,,,,,,,,,,,,,,,,,,27/Mar/13 22:51;etexier;SourceGenerator.java.patch;https://issues.apache.org/jira/secure/attachment/12575792/SourceGenerator.java.patch,27/Mar/13 22:47;etexier;twitter-wadl.xml;https://issues.apache.org/jira/secure/attachment/12575789/twitter-wadl.xml,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-03-28 09:41:26.362,,,no_permission,,Moderate,,,,,,,,,,,319948,,,Thu Mar 28 16:14:37 UTC 2013,,,,,,0|i1j7dr:,320289,,,,,,,,27/Mar/13 22:47;etexier;test twitter wadl,27/Mar/13 22:51;etexier;SourceGenerator patch that seems to fix the problem (git diff),"28/Mar/13 09:41;sergey_beryozkin;Patch has been applied, thanks. FYI, in one case they use a 'default' attribute to document the purpose of the parameter which is not correct, it compiles, but the generated code looks a bit strange :-) ","28/Mar/13 16:14;etexier;Thanks Sergey! I must say I am still learning the wadl syntax :) This wadl was taken from a suite of popular rest APIs found at https://github.com/apigee/wadl-library . Most of the time, I am able to tweak the WADLs to avoid some issues with generation. But I'll keep you posted if I found some other problems. Cheers!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS 2.0 filters do not work correctly with generic entities and annotations,CXF-4929,12639331,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,27/Mar/13 14:45,09/Apr/13 15:15,14/Mar/19 02:30,28/Mar/13 15:44,,,,,,,,2.7.4,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,319801,,,2013-03-27 14:45:37.0,,,,,,0|i1j6h3:,320142,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpHeaders.getRequestHeader has to return null if no header is available,CXF-4927,12639271,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,27/Mar/13 08:56,03/Aug/16 14:55,14/Mar/19 02:30,27/Mar/13 09:05,,,,,,,,3.0.0-milestone1,,,,JAX-RS,,,,0,,,,,,,,At the moment an empty list is returned if no header is available but this conflicts with the case when an empty header is provided. Lets limit the update to 2.8.0 as it may break some of the older code,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2016-08-03 14:47:31.793,,,no_permission,,Unknown,,,,,,,,,,,319741,,,Wed Aug 03 14:55:08 UTC 2016,,,,,,0|i1j63r:,320082,,,,,,,,"03/Aug/16 14:47;svella;It is unclear to me why this change was made since not only is it a breaking change, it doesn't conform to the JAX-RS specification as I read it, which says that it should return a list and does not mention returning null. If no header is available, it should return an empty list. If a header is available but it has no value, then the list item for that header should contain the empty string.",03/Aug/16 14:55;sergey_beryozkin;You should be able to find a confirmation from one of the spec leads in the JAX-RS 1.1 or 2.0 archives,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE is thrown at EP creation when no service class is specified and the wsdl cannot be loaded,CXF-4922,12638880,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,25/Mar/13 14:22,09/Apr/13 15:15,14/Mar/19 02:30,26/Mar/13 10:11,2.7.3,,,,,,,2.6.7,2.7.4,3.0.0-milestone1,,Core,,,,0,,,,,,,,"ReflectionServiceFactoryBean is falling back to use the service class to initialize the endpoint when the provided wsdl cannot be loaded (e.g., not found). This can lead to an NPE, as the service class can be null.

This patch adds a check to verify this condition and throws an appropriate unchecked exception (ServiceConstructionException) instead.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,319350,,,2013-03-25 14:22:49.0,,,,,,0|i1j3on:,319691,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LinkBuilder can't be reused,CXF-4921,12638860,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,soilandreyes,soilandreyes,25/Mar/13 11:38,26/Nov/13 17:40,14/Mar/19 02:30,25/Mar/13 19:10,2.7.3,,,,,,,3.0.0-milestone1,,,,JAX-RS,,,,0,link,,,,,,,"Currently the linkbuilder will do the 'wrong' thing if it is reused, because it does not copy the map of parameters on .build) - so later changes to the linkbuilder will affect previously built links.

The suggested patch at https://github.com/apache/cxf/pull/6 includes a unit test to verify the bug, and copies the parameters on build() to fix it.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-25 19:10:46.672,,,no_permission,,Unknown,,,,,,,,,,,319330,,,Mon Mar 25 19:10:46 UTC 2013,,,,,,0|i1j3kf:,319671,,,,,,,,"25/Mar/13 19:10;sergey_beryozkin;Hi - this can only be fixed at 2.8.0.
Note, the actual re-usability of individual builders is not recommended as the parameters not reset and left over from the previous link state, will be inherited - I've actually raised the issue at the spec level but they seem to be have no problems with that - nothing I can do I'm afraid. That said, the actual fix to do with copying the parameters is nice, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransformationInInterceptor fails when XML contains same namespace with different prefixes,CXF-4920,12638855,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,ay,nannou9,nannou9,25/Mar/13 11:06,09/Apr/13 15:15,14/Mar/19 02:30,27/Mar/13 22:40,2.3,2.4,2.5,2.6,2.7.3,3.0.0-milestone1,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,Core,,,,0,core,failed,interceptors,missing,namespace,prefix,transform,"TransformationInInterceptor fails when XML contains same namespace with different prefixes.


So for example this will fail:
{code}
<wireTransfer xmlns:q1=""http://bar.com/foo"" xsi:type=""q1:SwiftWireTransfer"">
...
</wireTransfer>
<wireTransfer xmlns:q2=""http://bar.com/foo"" xsi:type=""q2:SwiftWireTransfer"">
...
</wireTransfer>
{code}

as for ""q2:SwiftWireTransfer"" the prefix q2 would be never found due to internal cache strategy.

So the above bug blocks usage of such kind of XML message.
Of cource using different prefixes for same namespaces is not a good practice, but when there is a need to ""talk"" with external vendor software (as in my situation) there might be no chance to fix it on second side.

I have this already fixed.
Will apply patch in few moments.

Greetings,
Piotr Klimczak",FuseESB 4.4.1-07-11 on SLES,,,,,,,,,,,,,,,,,,,25/Mar/13 12:05;nannou9;CXF4920-v2.5.X.diff;https://issues.apache.org/jira/secure/attachment/12575307/CXF4920-v2.5.X.diff,25/Mar/13 12:04;nannou9;CXF4920-v2.6.X.diff;https://issues.apache.org/jira/secure/attachment/12575306/CXF4920-v2.6.X.diff,25/Mar/13 11:10;nannou9;CXF4920.diff;https://issues.apache.org/jira/secure/attachment/12575304/CXF4920.diff,,,,,3.0,,,,,,,,,,,,,,,,,,,,2013-03-26 13:35:11.561,,,no_permission,,Unknown,,,,,,,,,,,319325,,,Thu Mar 28 06:43:27 UTC 2013,,,,,,0|i1j3jb:,319666,,,,,,,,"25/Mar/13 11:10;nannou9;Passed test on core:
Results :

Tests run: 270, Failures: 0, Errors: 0, Skipped: 1

As well as on whole CXF project- all compiles and successfully passes tests.","25/Mar/13 11:23;nannou9;The patch was made for trunk and 2.7 version.
On 2.6.x and older it will fail.

If anybody will request then i can create a patch for 2.6.x, 2.5.x versions.

Greetings
Piotr Klimczak
",25/Mar/13 12:04;nannou9;Patch for latest 2.6.x version,25/Mar/13 12:05;nannou9;Patch for latest 2.5.x version,"26/Mar/13 12:15;nannou9;Hi Aki!

Thanks for taking this issue.
If you have any questions to the patches or anything else I will do my best to answer ASAP.

Please note that this bug is a blocker for my project.

Greetings,
Piotr Klimczak
[http://reintegrate.pl]

","26/Mar/13 13:35;ay;Hi Piotr,
there is a test case for preserving the original prefixes which is working. And I now wrote another test case that looks like yours:
input xml
<a:foo xmlns:a=""urn:abc"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <wireTransfer xmlns:q1=""http://bar.com/foo"" xsi:type=""q1:SwiftWireTransfer"">10</wireTransfer>
  <wireTransfer xmlns:q2=""http://bar.com/foo"" xsi:type=""q2:SwiftWireTransfer"">20</wireTransfer>
</a:foo>
with transform option
transformElements.put(""{urn:abc}*"",
                      ""{urn:a}*"");

and get the result xml
<a:foo xmlns:a=""urn:a"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <wireTransfer xmlns:q1=""http://bar.com/foo"" xsi:type=""q1:SwiftWireTransfer"">10</wireTransfer>
  <wireTransfer xmlns:q2=""http://bar.com/foo"" xsi:type=""q2:SwiftWireTransfer"">20</wireTransfer>
</a:foo>

And I am not observing the problem you mentioned. Could you attach the test input file, the transformer option, and the expected result xml so that I can see the issue?

thanks.
regards, aki
","26/Mar/13 14:28;nannou9;Hi Aki,

Thanks for your answer.
What is the name of that test? I would like to take a look at it.

I know that it sounds crazy when i'm saying that i found such a bug that exists from the very beginning of CXF 2.X (or meybe even 1.X). The exact situation is quite difficult to reproduce as i've hitted this bug using CXF to handle WebServices over HTTP with this interceptors:
* WS Security Signature + timestamp
* LoggingInInterceptor
* TransformInInterceptors (transforming namespaces)

Similar interceptors are used for OUT.

Using WS Security altogether with TransformIn/OutInterceptor was very difficult to get it work as default position for in/out interceptors in interceptor chain makes them unusable.

So finally in such a complicated configuration i've hitted this bug.
I have found it in CXF code doing tracing and debuging.
I was not able to reproduce this situation in any unit test that covers hughe part of code (basing on existing unit test). Also the real life situation was too dificult to be reproduced in unit test. But as I remember the exception was raised with some kind of unknown prefix exception.
The only way to reproduce this bug in a test case was to test the very small piece of code.

Those patches have solved my problems but i need them to be official.


But let's go back to your test.
In your example you are transforming different namespace that the one making problems.
Try to transform ""http://bar.com/foo"" to anyhing else. Then it should fail.

I know that testcases are saying everything is ok, but if you take a look at the code and analyze it, you will see there is a bug in cache strategy.

Cache is using this two maps:
NAMESPACES: prefix as key, ns as a value => MAPPING PREFIXES TO NAMESPACES
PREFIXES: ns as a key, prefix as a value => MAPPING NAMESPACES TO PREFIXES

The problem is with mapping namespaces to prefixes.
When it find in XML shuch part: q1=""http://bar.com/foo"" then it adds to cache maps:
NAMESPACES:
{code}
q1 =>http://bar.com/foo
{code}
PREFIXES: 
{code}
http://bar.com/foo => q1
{code}

So when it hits: q2=""http://bar.com/foo"", then it adds:
NAMESPACES:
{code}
q2 => http://bar.com/foo
{code}
PREFIXES: 
{code}
http://bar.com/foo => q2
{code}

So after second prefix with same name, NAMESPACES contains 2 elements but PREFIXES cache contains only one element with the key q2. So the q1 prefix is forgotten in PREFIXES when it is known in NAMESPACES.

This situation is unexpected and it is solved in my patches.

Greetings
Piotr Klimczak ","26/Mar/13 14:47;nannou9;Sorry for making few edits to the above comment but i'm doing few other things in parallel.
The above comment is finished.","26/Mar/13 14:58;ay;Hi Piotr,
thanks.
I can now see the problem.
regards, aki","26/Mar/13 15:34;nannou9;No problem :)

I'm always happy to be helpful :)

Greetings,
Piotr Klimczak","27/Mar/13 09:17;ay;Hi Piotr,
I added a stricter namespace binding check that made this problem visible.
I also added your DelegatingNamespaceContext's test case. But I fixed the problem differently as other changes were needed in InTransformReader to make all the existing tests work with this stricter namespace binding check.

The change is in trunk and 2.7.x. I will be integrating it to the lower versions later.
If you could test it for your case, that would be great.

regards, aki","27/Mar/13 13:40;nannou9;Thanks Aki for your effort.

It will take me some time to test it in real life, but as I see it should be ok becauese the main reason of my problem has been removed.

I have seen your changes and I have noticed that PREFIXES map can be removed at all.
Just remove prefixes from here: 
{code}
        if (!prefixes.isEmpty()) {
            Map<String, String> cache = prefixes.getFirst();
            for (Map<String, String> pfs : prefixes) {
{code}
and replace them by entrySet on namespaces.

Greetings
Piotr Klimczak","27/Mar/13 22:39;ay;Hi Piotr,

I am not sure what you mean by your comment on the ""prefixes"" code fragment.
Both prefixes and namespaces are used along with their cache entry (corresponding to the current level entry) to perform the two frequently used operations getNamespaceURI(String prefix) and getPrefix(String uri) efficiently. Basically, when a particular prefix or uri is looked up at some level, if it doesn't find the binding in that level, it goes up the level until it finds one and then caches it at the current level so that the subsequent lookup can find the binding in that level.

regards, aki
p.s. in any way, the fix is now all the way down to 2.5.x. Thanks again for spotting this.","28/Mar/13 06:43;nannou9;Hi Aki,

Thanks again for solving this problem.
Hope that my patches ware at least a little helpful.

Greetings,
Piotr Klimczak",,,,,,,,,,,,,,,,,,,,,,
UriInfo.relativize (and HttpUtils.relativize) broken,CXF-4919,12638843,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,soilandreyes,soilandreyes,25/Mar/13 10:08,26/Nov/13 17:40,14/Mar/19 02:30,30/Apr/13 15:32,2.7.3,,,,,,,3.0.0-milestone1,,,,JAX-RS,,,,0,,,,,,,,"None of these tests pass:

{code}
  
    @Test
    public void testRelativize() throws Exception {
        URI ab = URI.create(""http://example.com/a/b/"");
        URI abcd = URI.create(""http://example.com/a/b/c/d"");
        assertEquals(URI.create(""""), HttpUtils.relativize(ab, ab));
        assertEquals(URI.create(""c/d""), HttpUtils.relativize(ab, abcd));
        assertEquals(URI.create(""../""), HttpUtils.relativize(abcd, ab));
        assertEquals(URI.create(""""), HttpUtils.relativize(abcd, abcd));
        URI abcd2 = URI.create(""http://example.com/a/b/c/d2"");
        assertEquals(URI.create(""d2""), HttpUtils.relativize(abcd, abcd2));
        URI ab2cd = URI.create(""http://example.com/a/b2/c/d"");
        assertEquals(URI.create(""../../b2/c/d""), HttpUtils.relativize(abcd, ab2cd));
    }
{code}

This affects LinkBuilder.buildRelativize() and UriInfo.relativize()

The algorithm is basically working by counting elements common by position - this would also fail hard when there are common elements later - but with a different ancestor.

Javadoc for UriInfo.relativize() also has some testcases that should work.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-28 18:26:03.254,,,no_permission,,Unknown,,,,,,,,,,,319318,,,Tue Apr 30 15:32:09 UTC 2013,,,,,,0|i1j3hr:,319659,,,,,,,,"28/Mar/13 18:26;sergey_beryozkin;Stian, would you consider a contribution in the form of a regular patch ? It appears that the only option for us. If it is not easy for you then I'd go ahead and fix this issue, without copying your code - guaranteed","03/Apr/13 10:20;soilandreyes;OK, I'll do a patch; next week, I'm afraid.",16/Apr/13 20:45;sergey_beryozkin;Are you still planning to do it ? Cheers,"22/Apr/13 01:05;soilandreyes;Sorry for the wait, I was waiting for our legal department to clear the contributors agreement, in the end I just did it from scratch in my spare time at home. I did not look at nor use the similar (but in retrospect subtly different) algorithm I wrote in 2011 for my employer.


Here's the suggested patch:

  https://github.com/stain/cxf/compare/CXF-4919-jaxrs-relativize-uri

The algorithm uses Java's URI.relativize(), but if needed climbs up to find a common parent (as URI.relativize will refuse to do ""../""). It has a requirement that the base URI must already be absolute; ie ""http://example.com/base/root/"" rather than ""/base/root/"" - I can make that supported as well, but that must be done carefully.

I just created the code of the above patch in my personal time, and should therefore not depend on the my employers (pending) contributors license assignment.


I am still waiting for the cxf-systests-jaxrs to complete and will let you know if they fail due to this. ",22/Apr/13 01:28;soilandreyes;I've reported the misleading JAX-RS javadoc at https://java.net/jira/browse/JAX_RS_SPEC-398 -- but as JAX-RS is scheduled for release tomorrow (!) 2013-04-23 we might end up in a confusing situation where we would have to choose between following the specification of JAX-RS or generate URI references that are correct for the rest of the world.,"22/Apr/13 09:47;sergey_beryozkin;Hi Stian, thanks for the effort, 

> It has a requirement that the base URI must already be absolute

I think this is what the JAX-RS expectation is too, see bullet 1 at 
https://jax-rs-spec.java.net/nonav/2.0-SNAPSHOT/apidocs/javax/ws/rs/core/UriInfo.html#relativize(java.net.URI)

(If the URI to relativize needs to become absolute then obviously the base has to be absolute too).

Regarding https://java.net/jira/browse/JAX_RS_SPEC-398, I can not access it, may be you need to update the permissions on it (who can see it and such ?).
FYI, I'm not sure what is wrong with: 

{noformat}
Request URI: http://host:port/app/root/a/b/c
Supplied URI: a/b/c/d/e
Returned URI: d/e 
{noformat}

According to http://docs.oracle.com/javase/6/docs/api/java/net/URI.html,

{noformat}
u.resolve(u.relativize(v)).equals(v) 
{noformat}

and resolving ""d/e"" against ""http://host:port/app/root/a/b/c"" should produce ""http://host:port/app/root/a/b/c/d/e""

Actually, I think I see the doc bug, should be 

{noformat}
Request URI: http://host:port/app/root/a/b/c/
Supplied URI: a/b/c/d/e
Returned URI: d/e 
{noformat}

Right ?
","24/Apr/13 14:48;soilandreyes; https://java.net/jira/browse/JAX_RS_SPEC-398 was for some reason was deleted, on request I posted it again.

content below (for records):

{quote}
Note: This issue was previously posted as JAX_RS_SPEC-398 which somehow disappeared. I was requested to post it again - see 


In the documentation https://jax-rs-spec.java.net/nonav/2.0-SNAPSHOT/apidocs/javax/ws/rs/core/UriInfo.html#relativize(java.net.URI)

The example is misleading (and wrong):

{quote}
Examples (for base URI http://host:port/app/root/):

Request URI: http://host:port/app/root/a/b/c
Supplied URI: a/b/c/d/e
Returned URI: d/e
{quote}


But this would be an invalid example, as trying to resolve the returned URI shows:

{code}
java.net.URI.create(""http://host:port/app/root/a/b/c"").resolve(""d/e"")
http://host:port/app/root/a/b/d/e
{code}

This is simply because a / is missing at the end of the request URI - it would be very strange for someone requesting /app/root/a/b/c to interpret that as /app/root/a/b/c/. Replace ""c"" with ""index.html"" to understand in a web sense, it's reference to d.png should not resolve to index.html/d.png.


The above misleading example has already led to confusions in the implementation in CXF - see https://issues.apache.org/jira/browse/CXF-4919  -- in my suggested patch I have deliberately changed the original test to not check for the specified behaviour in JAX-RS javadocs as I believe it is wrong.


The documentation could probably be rewritten to use a .html resource to be more understandable out of the box. I would also change the confusing (and HTTP-wise invalid) "":port"" - as this is an example no need to be generic ;)


For instance:

{quote}
Base URI: http://example.com:8080/app/root/
Request URI: http://example.com:8080/app/root/a/b/c/resource.html
Supplied URI: a/b/c/d/e.txt
Returned URI: d/e.txt
{quote}

Or a very simpler fix would be to just add the missing / in the request URI:

{quote}
Examples (for base URI http://host:port/app/root/):

Request URI: http://host:port/app/root/a/b/c/
Supplied URI: a/b/c/d/e
Returned URI: d/e
{quote}

.. although that would still lead open to the same confusions for request URIs not ending in /.

{quote}","24/Apr/13 15:01;sergey_beryozkin;Hi, looks like I've got it, see the example at the end of my last comment. I'll support JAX_RS_SPEC-398, that can be fixed for 2.1.


","24/Apr/13 15:14;soilandreyes;yes, you reasoned correct about what was the documentation bug :) Thanks for responding on ""the other side"" as well. Too bad we seemed to have missed it for 2.0..","30/Apr/13 15:32;sergey_beryozkin;Stian, patch has been applied, many thanks",,,,,,,,,,,,,,,,,,,,,,,,,,
"Cannot get xsd schema file when access wsdl file as ""?wsdl"" with auto redirect turned on",CXF-4918,12638793,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,kouzq,kouzq,25/Mar/13 08:18,28/Mar/13 14:08,14/Mar/19 02:30,28/Mar/13 14:06,2.6.2,,,,,,,2.6.7,2.7.4,,,Transports,,,,0,,,,,,,,"=============
Problem Description:
=============

The scenario is trying to access wsdl file from remote service provider using URL as ""http://localhost:9083/TestWeb/HelloService?wsdl"". The remote service redirect the request to URL ""http://localhost:9083/TestWeb/HelloService/HelloService.wsdl"".

I turned on AutoRedirect by calling method ""HTTPClientPolicy.setAutoRedirect(true)"" in CXF. The auto redirection works and WSDL file is loaded successfully.

However, inside of the WSDL file it imports another XSD schema file which is in the same folder as WSDL file on remote server.

<xsd:schema>
<xsd:import namespace=""http://hello.jaxws.sample.com/"" schemaLocation=""HelloService_schema1.xsd""/>
</xsd:schema>

CXF tries to load this XSD file, but it use the original URL ""http://localhost:9083/TestWeb/HelloService?wsdl"" as base URI, and got the wrong target address as ""http://localhost:9083/TestWeb/HelloService_schema1.xsd"". Obviously it failed since the XSD file is not there.

Actually if CXF use the new URL after auto redirect as base URI, it will get the correct URL for XSD file, in this case it should be ""http://localhost:9083/TestWeb/HelloService/HelloService_schema1.xsd"".


=============
Investigation
=============


In method TransportURIResolver.resolve(String curUri, String baseUri):

                    c.prepare(message);
                    c.close(message);
                    InputStream ins = exch.get(InputStream.class);
                    resourceOpened.addElement(ins);
                    InputSource src = new InputSource(ins);
                    src.setPublicId(base.toString());
                    src.setSystemId(base.toString());
                    lastestImportUri = base.toString();

The actual redirect happens in method HTTPConduit.redirectRetransmit(...) when ""c.close(message)"" above is invoked. However TransportURIResolver has no idea if redirect happens or not. So it still save the original URI (the variable base) to publicId and systemId and lastestImportUri. Later when it tries to get XSD file these info will be used as base URI.

To resolve this problem I suggest we get the new URL after redirect, and save it as publicId, systemId, or lastestImportUri. And use it as future base URI.

Per my investigation the new URL after redirect can be retrieved from message object:

                    java.net.HttpURLConnection conn = (java.net.HttpURLConnection)message.get(""http.connection"");
                    String newURL = conn.getURL().toURI().toString();

The problem is at this place it does not know if redirect happened or not. If it does not happen, the returned URL should be the same as original base URI.

Could somebody help to review this logic please? Is there any object for this proposed change? Any suggestion are welcome. Thank you!

Regards,
Eric
 

",Windows,,,,,,,,,,CXF-4917,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-26 19:47:11.558,,,no_permission,,Unknown,,,,,,,,,,,319268,,,Thu Mar 28 14:06:12 UTC 2013,,,,,,0|i1j36n:,319609,,,,,,,,"26/Mar/13 19:47;dkulp;
That won't work if the Async http conduit is picked up as the HttpURLConnection wouldn't be used.   

I THINK a better option would be:

{code}
diff --git a/api/src/main/java/org/apache/cxf/transport/TransportURIResolver.java b/api/src/main/java/org/apache/cxf/transport/TransportURIResolver.java
index 72a336d..261a822 100644
--- a/api/src/main/java/org/apache/cxf/transport/TransportURIResolver.java
+++ b/api/src/main/java/org/apache/cxf/transport/TransportURIResolver.java
@@ -129,9 +129,13 @@ public class TransportURIResolver extends ExtendedURIResolver {
                     InputStream ins = exch.get(InputStream.class);
                     resourceOpened.addElement(ins);
                     InputSource src = new InputSource(ins);
-                    src.setPublicId(base.toString());
-                    src.setSystemId(base.toString());
-                    lastestImportUri = base.toString();
+                    String u = (String)message.get(""http.retransmit.url"");
+                    if (u == null) {
+                        u = base.toString();
+                    }
+                    src.setPublicId(u);
+                    src.setSystemId(u);
+                    lastestImportUri = u;
                     currentResolver.unresolve();
                     return src;
                 }
diff --git a/rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java b/rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java
index 9876088..7f564ac 100644
--- a/rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java
+++ b/rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java
@@ -1187,7 +1187,7 @@ public abstract class HTTPConduit
         
         protected void retransmit(String newURL) throws IOException {
             setupNewConnection(newURL);
-            
+            outMessage.put(""http.retransmit.url"", newURL);
             if (cachedStream != null && cachedStream.size() < Integer.MAX_VALUE) {
                 setFixedLengthStreamingMode((int)cachedStream.size());
             }
{code}

as that would set that property for both of the HTTPConduit subclasses.  I'm going to see if that ""breaks"" anything, but help testing would be great.  
","28/Mar/13 14:06;kouzq;Hi Daniel, thank you so much for giving the fix of this issue!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResponseBuilderImpl returns null on link() and links(),CXF-4914,12638506,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,soilandreyes,soilandreyes,22/Mar/13 13:56,09/Apr/13 15:15,14/Mar/19 02:30,25/Mar/13 19:05,2.7.3,,,,,,,2.7.4,3.0.0-milestone1,,,JAX-RS,,,,0,jax-rs,link,response,,,,,"The link() and links() methods (and others) are unimplemented in ResponseBuilderImpl.

Rather than raise a NotImplementedException or similar, the current code seems to be autogenerated by Eclipse and returns null rather than a Builder.

I've suggested a patch at https://github.com/apache/cxf/pull/5 from https://github.com/stain/cxf/tree/jaxrs-responsebuilder-nulls which implements each of the missing methods. Unit tests are included.",,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-25 19:05:12.059,,,no_permission,,Novice,,,,,,,,,,,318982,,,Mon Mar 25 19:05:12 UTC 2013,,,,,,0|i1j1f3:,319323,,,,,,,,"22/Mar/13 14:01;soilandreyes;Suggested patch: https://github.com/apache/cxf/pull/5 from https://github.com/stain/cxf/tree/jaxrs-responsebuilder-nulls which (unlike Friday's patch on /pull/4) implements and tests all of the methods that previously returned null.

I suggested fix for 2.7.4 as the current behaviour of returning null is a bug - but feel free to reclassify as a new feature! :)","22/Mar/13 14:03;soilandreyes;I am uncertain if links() with no arguments should really reset, as that is not what I would expect from javadoc at http://jax-rs-spec.java.net/nonav/2.0-SNAPSHOT/apidocs/javax/ws/rs/core/Response.ResponseBuilder.html#links(javax.ws.rs.core.Link...) - which only describes null-values.

However, cookie() has the same behaviour (through addHeader()) so I did the same. This should probably be raised as a separate issue.
","25/Mar/13 19:05;sergey_beryozkin;Stian, thanks for the quality patch. I've merged it to the trunk & 2.7.x, note though, in 2.7.x we have no CXF LinkBuilder, and m10 Link.Builder (was shipped as part of API) has no commas, so you'd have no '<page>;rel=\""next\""' but '<page>;rel=next' in 2.7.x   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf rest client always picks the first ResponseExceptionMapper for a method with different exception throws,CXF-4912,12638445,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,parwiz,parwiz,22/Mar/13 06:19,09/Apr/13 15:15,14/Mar/19 02:30,26/Mar/13 12:31,2.7.3,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,"The selection for response mapper on client side will always pick the first
exception listed and invoke the mapper for that guy.. it will never
invoke Exception1ResponseMapper  even though our exception is of type
Exception1.. 

throws Exception2, Exception1  <-- this will always find a mapper for Exception2 
first and use that even if our actual eexception is Exception1 in this case.

I think the code needs to lookup the mapper based on type as well
instead of generic first mapper found for that service.

I have two differnt exceptions:

{code:borderStyle=solid}
public class Exception1 extends Exception {
    public Exception1() { }

    public Exception1(String msg) {
        super(msg);
    }
}

public class Exception2 extends Exception {
    public Exception2() {}

    public Exception2(String msg) {
        super(msg);
    }
}
{code}

{code:title=Exception1ResponseMapper.java|borderStyle=solid}

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.MappingJsonFactory;
import java.io.InputStream;
import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.ResponseExceptionMapper;

public class Exception1ResponseMapper implements ResponseExceptionMapper<Exception1> {
    @Override
    public Exception1 fromResponse(Response response) {
        try {
	    MappingJsonFactory factory = new MappingJsonFactory();
	    JsonParser parser = factory.createJsonParser((InputStream) response.getEntity());
	    Exception1 exception = parser.readValueAs(Exception1.class);
	    return exception;
	} catch (Exception ex) {
	    return new Exception1(""Could not deserialize server side exception: "" + ex.getMessage());
        }
    }
}
{code}

{code:title=Exception2ResponseMapper.java|borderStyle=solid}

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.MappingJsonFactory;
import java.io.InputStream;
import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.ResponseExceptionMapper;

public class Exception2ResponseMapper implements ResponseExceptionMapper<Exception2> {
    @Override
    public Exception2 fromResponse(Response response) {
        try {
	    MappingJsonFactory factory = new MappingJsonFactory();
	    JsonParser parser = factory.createJsonParser((InputStream) response.getEntity());
	    Exception2 exception = parser.readValueAs(Exception2.class);
            // do some specific work for exception 2 only
	    return exception;
	} catch (Exception ex) {
	    return new Exception2(""Could not deserialize server side exception: "" + ex.getMessage());
        }
    }
}
{code}

so suppose one mapper does something different than the other one.

now my service method:

{code:borderStyle=solid}
@Path(""/cool"")
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
public interface MyService {
    @GET
    SomeCoolObject myMethod() throws Exception2, Exception1;
}

@Service(""myService"")
public class MyServiceImpl implements MyService {
    public SomeCoolObject myMethod() throws Exception2, Exception1 {
        throw new Exception1(""hey this exception will still go exception 2 mapper.. why?"");
    }
}
{code}

{code:title=creating client proxy|borderStyle=solid}
    List providers = new ArrayList<Object>();
    providers.add(new com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider());
    providers.add(new Exception1ResponseMapper());
    providers.add(new Exception2ResponseMapper());
    MyService serviceProxy = JAXRSClientFactory.create(""http://localhost:8080/"", MyService.class, providers);

    try {
        serviceProxy.myMethod();
    } catch(Exception e) {
     // should get back Exception1 but no go
    }

{code}



following is exception to response mappers on service side
{code:title=Exception mapping on server side|borderStyle=solid}
@Provider
public class Exception1AsResponseMapper implements ExceptionMapper<Exception1> {

    @Override
    public Response toResponse(Exception1 exception) {
        return Response.ok(exception, MediaType.APPLICATION_JSON).status(Response.Status.BAD_REQUEST).build();
    }
}

@Provider
public class Exception2AsResponseMapper implements ExceptionMapper<Exception2> {

    @Override
    public Response toResponse(Exception2 exception) {
        return Response.ok(exception, MediaType.APPLICATION_JSON).status(Response.Status.BAD_REQUEST).build();
    }
}
{code}

{code:xml|title=spring configs for cxf servlet}
<import resource=""classpath:META-INF/cxf/cxf.xml"" />
<import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />
<context:annotation-config/>
	
<context:component-scan base-package=""com.test""/>

<jaxrs:server id=""services"" address=""/"">
		<jaxrs:serviceBeans>
			<ref bean=""myService""/>
		</jaxrs:serviceBeans>

		<jaxrs:providers>
			<bean class=""com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider""/>
			<bean class=""com.test.server.Exception1AsResponseMapper""/>
			<bean class=""com.test.server.Exception2AsResponseMapper""/>
		</jaxrs:providers>
		<jaxrs:extensionMappings>
			<entry key=""json"" value=""application/json"" />
		</jaxrs:extensionMappings>
	</jaxrs:server>
{code}

on the server side the right response mapper is invoked correctly based on type of Exception thrown.","apache-tomcat-6.0.33, jdk1.6.0_34, spring 3.2.1.RELEASE, jackson 2.1.4",,,,,,,,,,,,,,,,,,,26/Mar/13 08:23;parwiz;ClientProxyImpl.java.patch;https://issues.apache.org/jira/secure/attachment/12575491/ClientProxyImpl.java.patch,22/Mar/13 08:08;parwiz;cxftest.zip;https://issues.apache.org/jira/secure/attachment/12574983/cxftest.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,318921,,,Tue Mar 26 08:23:17 UTC 2013,,,,,,0|i1j11j:,319262,,,,,,,,"22/Mar/13 06:24;parwiz;if you change the order of throws from throws Exception2 , Exception1 to throws Exception1, Exception2
then it will find the mapper for exception 1 which works..
but suppose you are throwing Exception2 also in this method in some other part/branch.. now again it will go 
to Exception1ResponMapper... it always goes by the first type of exception delcared
in the method signature.. I think this needs to be expanded to do a type match on the exception type first and then see if there is a mapper for that type (or one of its parents).","22/Mar/13 08:08;parwiz;full setup to build (maven or gradle)
deploy to tomcat and run
ClientTest as main entry point to
run a client with wrong exception mapper selected shown.","23/Mar/13 08:01;parwiz;i commented in a fixed bug that was complaining about run time exception mapping for client side.. so here is that one as well. https://issues.apache.org/jira/browse/CXF-4496

actually the bigger issue is that it always picks the first exception mapper based on method signature.
https://issues.apache.org/jira/browse/CXF-4912
what's happening right now is if you say have two different exception in your throws method
myMethod() throws Exception2, Exception1;
and mappers for both of those exceptions on server side and client side (maybe you are doing different
things.. so yes i know you can have one super class if they are both checked exceptions.. let's say 
you have a legacy exception and you don't have source for it.. and a new exception you created for something else)
now the client code is blind and picks the first mapper when a fault occurs so in this it will always
default to Exception2ResponeMapper on client side.. even if in the method you happen to throw Exception1
this is incorrect..
please take a look again as this is a big issue if you have multiple mappers and a method that
throws more than one exception in its signature (be it checked or runtime or multiple checked exceptions)... 
it will pick the first mapper for the first exception listed after throws keyword.. not 
actually match based on actual exception type and mappers available.
maybe allow the response to have a header of some sort that contains the exception name/class
and in the findExceptionMapper() use that header to know exactly what exception occurred and go
find a mapper based on that type instead of picking the first exception after the throws clause 
aka Class<?>[] exTypes = m.getExceptionTypes(); <-- the mapper is selected based on the order returned by this",26/Mar/13 08:23;parwiz;patch to pick other response exception mapper if first one returns null.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad handling of Schema imports (WSDLGetInterceptor),CXF-4910,12638237,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,erce,erce,21/Mar/13 13:51,06/May/15 15:01,14/Mar/19 02:30,06/Mar/14 13:54,2.7.3,,,,,,,2.6.14,2.7.11,3.0,,Simple Frontend,,,,2,,,,,,,,"While doing my experiments with completely dynamic service creation from WSDL only, I found suspicious code in WSDLGetInterceptor regarding schema cacheing. 
A following example results in incorrect behavior:

Namely:
WSDLGetUtils.updateSchemaImports() uses a map for caching processed schemata.
A service built from following path layout
{code}
Wsdl.wsdl
z/Types.xsd
z/z/Types.xsd
{code}
Where
- Wsdl.wsld imports z/Types.xsd(NS: http://example.com/NS1) using relative path
- z/Types.xsd imports z/Types.xsd(NS: http://example.com/NS2) using relative path (i.e. imports z/z/Types.xsd)

results in incorrect serving of service definition when querying the endpoint.

The link from wsdl to import points to ""?xsd=z/Types.xsd"".
{code:xml}
<wsdl:definitions xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:tns=""http://example.com/Service/"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" name=""Service"" targetNamespace=""http://example.com/Service/"">
<wsdl:types>
<xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:tns=""http://example.com/Service/"" xmlns:sty=""http://example.com/StructTypes"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" targetNamespace=""http://example.com/Service/"">
<xsd:import namespace=""http://example.com/StructTypes"" schemaLocation=""http://localhost:8080/Service?xsd=z/Types.xsd""/>
[...SNIP...]
{code}

The link from z/Types.xsd points again to itself ""?xsd=z/Types.xsd"" (same content is served).
{code:xml}
<xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:tns=""http://example.com/StructTypes"" xmlns:bty=""http://example.com/BaseTypes"" targetNamespace=""http://example.com/StructTypes"">
<xsd:import namespace=""http://example.com/BaseTypes"" schemaLocation=""http://localhost:8080/Service?xsd=z/Types.xsd""/>
[...SNIP...]
{code}

This is because the WSDLGetUtils cuts of the schemata processing on the first import because relative path is used as key identifier in the schema map.

I suspect the same applies for the WSDL imports in WSDLGetUtils.updateDefinition() due to caching the definitions in the definition map.
",Windows,,,,,,,,,,,,,CXF-6392,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,318713,,,2013-03-21 13:51:46.0,,,,,,0|i1izrb:,319054,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"wadl2java: NPE in SourceGenerator when generating method with ""plain"" style parameter",CXF-4909,12638221,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,knob-creek,knob-creek,21/Mar/13 12:22,09/Apr/13 15:15,14/Mar/19 02:30,22/Mar/13 16:31,2.7.3,,,,,,,2.6.7,2.7.4,3.0.0-milestone1,,Tooling,,,,0,,,,,,,,"When trying to generate client classes with wadl2java command line tool, i encounter a NPE in org.apache.cxf.tools.wadlto.jaxrs.SourceGenerator.writeAnnotation(SourceGenerator.java:608)
The ""cls"" parameter is null, what is not checked for.
This is due to PARAM_ANNOTATIONS not containing the ""plain"" style, which is valid according to w3c wadl description (2.12.2).",JDK 1.7.0_17,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-22 11:32:32.805,,,no_permission,,Moderate,,,,,,,,,,,318697,,,Fri Mar 22 11:32:32 UTC 2013,,,,,,0|i1iznr:,319038,,,,,,,,"21/Mar/13 14:20;knob-creek;The wadl file used was in fact invalid: requests and responses may have parameters, but the must not be ""plain"" style.  Plain style parameters are allowed for representations, only, and a surrounding representation was missing in the wadl file.  It would be nice if wadl2java would detect this error and issue a meaningful error message instead of just crashing.","22/Mar/13 11:32;sergey_beryozkin;Sure, I've added the initial code for validating the parameter style.
See also 
https://issues.apache.org/jira/browse/CXF-4913,

(to be done at some later time),

The WADL schema won't actually help with catching this specific issue so it makes sense to support a basic validation mode but also update SourceGenerator when the basic validation will not catch the invalid WADLs, as in this case  
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Http Headers should ignore the case for ""User-Agent""",CXF-4906,12637897,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,njiang,njiang,20/Mar/13 06:07,09/Apr/13 15:15,14/Mar/19 02:30,20/Mar/13 06:57,2.5.9,2.6.6,2.7.3,,,,,2.6.7,2.7.4,3.0.0-milestone1,,Transports,,,,0,,,,,,,,"Headers is using below code to setup the User-Agent header.
{code}
if (!connection.getRequestProperties().containsKey(""User-Agent"")) {
connection.addRequestProperty(""User-Agent"", Version.getCompleteVersionString());
}
{code}
As you know, http header should ignore the case, the fix should help CXF avoid sending more than one ""User-Agent"" header.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,318377,,,Wed Mar 20 06:57:40 UTC 2013,,,,,,0|i1ixon:,318718,,,,,,,,20/Mar/13 06:57;njiang;Committed the patch into trunk and cxf-2.7.x and cxf-2.6.x branches.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.NullPointerException at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.serverStarted(WSDiscoveryServiceImpl.java:126),CXF-4905,12637885,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,steve@doitnext.com,steve@doitnext.com,20/Mar/13 03:46,09/Apr/13 15:15,14/Mar/19 02:30,26/Mar/13 19:49,2.7.3,,,,,,,2.7.4,,,,JAX-RS,,,,0,,,,,,,,"I get the following exception when starting up an Apache CXF service:
org.apache.cxf.service.factory.ServiceConstructionException
	at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)
	at com.doitnext.server.Server.<init>(Server.java:33)
	at com.doitnext.server.Server.main(Server.java:38)
Caused by: java.lang.NullPointerException
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.serverStarted(WSDiscoveryServiceImpl.java:126)
	at org.apache.cxf.ws.discovery.listeners.WSDiscoveryServerListener.startServer(WSDiscoveryServerListener.java:72)
	at org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl.startServer(ServerLifeCycleManagerImpl.java:61)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:146)
	at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:192)
	... 2 more
",Oracle Java JDK 1.6,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-20 09:49:03.367,,,no_permission,,Unknown,,,,,,,,,,,318365,,,Tue Mar 26 22:38:29 UTC 2013,,,,,,0|i1ixlz:,318706,,,,,,,,"20/Mar/13 09:49;sergey_beryozkin;This has been finally resolved for 2.7.4, can you please confirm it with the latest snapshot ?","26/Mar/13 22:38;steve@doitnext.com;Drat, I wish I had received this message before today.  Just this morning I ended up ripping out all of the Apache CXF stuff and migrating my project over to Spring MVC/Maven.  I don't think I can repro the issue now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect validation of Layout LaxTimestampFirst + LaxTimestampLast,CXF-4904,12637778,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,19/Mar/13 16:40,09/Apr/13 15:15,14/Mar/19 02:30,20/Mar/13 10:56,2.5.9,2.6.6,2.7.3,,,,,2.5.10,2.6.7,2.7.4,,,,,,0,,,,,,,,"
The WS-SecurityPolicy Layout policies ""LaxTimestampFirst"" and ""LaxTimestampLast"" are not validated correctly.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,318258,,,2013-03-19 16:40:32.0,,,,,,0|i1iwy7:,318599,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SamlTokenInterceptor doesn't validate version of received token against the policy,CXF-4902,12637554,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,18/Mar/13 15:33,09/Apr/13 15:15,14/Mar/19 02:30,18/Mar/13 16:11,2.5.9,2.6.6,2.7.3,,,,,2.5.10,2.6.7,2.7.4,,,,,,0,,,,,,,,"
The SamlTokenInterceptor, which kicks in when a Saml Token policy is used without a Binding policy, does not validate the version of the received token against the policy (version) child.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,318045,,,2013-03-18 15:33:36.0,,,,,,0|i1ivmv:,318386,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OnlySignEntireHeadersAndBody property validation doesn't check if a SOAP Body child was signed,CXF-4901,12637553,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,18/Mar/13 15:32,09/Apr/13 15:15,14/Mar/19 02:30,18/Mar/13 16:11,2.5.9,2.6.6,2.7.3,,,,,2.5.10,2.6.7,2.7.4,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,318044,,,2013-03-18 15:32:08.0,,,,,,0|i1ivmn:,318385,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STS: check not found certificates in DefaultSubjectProvider for symmetric key type,CXF-4897,12637440,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ashakirin,ashakirin,ashakirin,17/Mar/13 15:17,14/Aug/13 15:50,14/Mar/19 02:30,26/Apr/13 14:59,,,,,,,,2.5.11,2.6.8,2.7.5,,STS,,,,0,,,,,,,,"DefaultSubjectProvider retrieves X509 certificate to encrypt key information. It asks crypto provider for X509 certs using:
X509Certificate certificate = crypto.getX509Certificates(cryptoType)[0];

If certificates are not found it caused NLP or ArrayOutOfBound exceptions in STS code.

Proposal: check returned array for null and 0 length.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-19 10:22:46.978,,,no_permission,,Unknown,,,,,,,,,,,317931,,,Fri Apr 26 15:02:13 UTC 2013,,,,,,0|i1iuxj:,318272,,,,,,,,"19/Mar/13 10:22;coheigea;Hi Andrei,

Please backmerge this fix as well to 2.7.x, 2.6.x + 2.5.x.

Colm.","23/Mar/13 15:16;ashakirin;Done for 2.6.x and 2.5.x.
2.7.x was already merged by Dan via git cherry-pick.

Andrei.","26/Apr/13 14:54;coheigea;Hi Andrei,

I take it this issue can be resolved?

Colm.","26/Apr/13 15:02;ashakirin;Yep, set as Resolved.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Changing TLS information after first call doesn't affect anything,CXF-4895,12637069,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,14/Mar/13 18:46,09/Apr/13 15:15,14/Mar/19 02:30,14/Mar/13 20:53,2.5.9,2.6.6,2.7.3,,,,,2.6.7,2.7.4,,,Transports,,,,0,,,,,,,,"
If you change anything in the TLSClientParams of an HTTPConduit after making the first call, the changes are ignored.  This only affects the URLConnection based conduit.  The async conduit works as expected.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,317561,,,2013-03-14 18:46:27.0,,,,,,0|i1isnb:,317902,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot set content-type header,CXF-4891,12636655,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,redijedi,redijedi,12/Mar/13 20:58,09/Apr/13 15:15,14/Mar/19 02:30,20/Mar/13 11:29,2.6.2,2.7.3,,,,,,2.7.4,3.0.0-milestone1,,,JAX-RS,Transports,,,0,,,,,,,,"From within an interceptor I am trying to alter the content-type simply to add a few parameters to the response header. I have attempted multiple ways to do so, across several Phases.

Firstly, there are examples on the web of setting the header using Message.put(Message.CONTENT_TYPE, ""whatever""). This simply does not work. I then wrote the header using aMessage.put(Message.PROTOCOL_HEADERS, arrayOfWhatever). This appears to work, but it's a lie. In the CXF response logging I see what appears to be what I want:
{code}
ID: 18
Response-Code: 200
Content-Type: text/plain;charset=UTF-8;version=1.0.0-SNAPSHOT
Headers: {Expires=[-1], Cache-Control=[no-cache], Pragma=[no-cache], Content-Type=[text/plain], Date=[Tue, 12 Mar 2013 20:37:43 GMT]}
Payload: 1.0
{code}

However, this must be getting overwritten between this logging statement and my client because the browser only displays text/plain. Thinking this was just a browser error I used Firfox and curl, both resulted in the same value of text/plain being returned.

I have only been able to get the actual values changed by grabbing the HTTPServletResponse using HttpServletResponse response = (HttpServletResponse) m.get(AbstractHTTPDestination.HTTP_RESPONSE); and setting the content-type via response.setHeader(HttpHeaders.CONTENT_TYPE, contentType);. However, this doesn't work right. First of all, it won't work if you attempt to write the content type after MARSHAL because the stream has already been written to. And if you attempt to write the value before MARSHAL, then when you attempt to pull the content-type from the Message, you'll get a default content-type (I believe text/xml) value other than what the body is. That is, if the content was marshalled to JSON, you will not get application/json as expected.

I have been over this for two days. I have attempted to use JAXRS handlers with similar results. I simply do not see a way to affect the headers as I need to.

I originally ran against 2.6.2, but was hoping that 2.7.3 corrected this. Unfortunately both version exhibit this behavior.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-12 21:04:28.407,,,no_permission,,Unknown,,,,,,,,,,,317147,,,Thu Mar 21 20:21:46 UTC 2013,,,,,,0|i1iq3b:,317488,,,,,,,,"12/Mar/13 21:04;sergey_beryozkin;For now, setting both PROTOCOL_HEADERS & CONTENT_TYPE before MARSHAL really has to work, give that a try please.
I'll add a test as well and will get back to you ","12/Mar/13 21:22;redijedi;Thanks for the speedy response. I have tried this, and just reverified. The issue is that since this phase is prior to marshalling, CXF doesn't know what type of marshalling has taken place. That is, it never updated the content-type to application/json (in the case that I am requesting a JSON resource). So when I read the content-type from the message to then append the charset, etc. I only see the default. Then when I set the content-type back into the message and protocol_headers, it is text/xml.","12/Mar/13 21:34;sergey_beryozkin;Do you expect the runtime already setting the right media type, before you attempt to modify it ?
In CXF 2.7.x, JAX-RS 2.0 ContainerResponseFilter or WriterInterceptor should be able to help, they run before the marshalling but after JAXRSOutInterceptor sets up the headers, can you try either of these 2 options, though I will also add a test asap ","12/Mar/13 21:47;sergey_beryozkin;OK, that path is broken too; will be fixed; I'm presuming you can not use Response or even Produces(""application/json;charset=somevalue"")","12/Mar/13 23:18;redijedi;I can't use Produces because some of the values are dynamic. I would like to find a way to not use Responses because we have a large number of responses and I would not like to have switches in each method for each supported mime type.

I suppose for the time being I can use a servlet filter, but that is definitely a workaround. Thanks for looking into this!","15/Mar/13 14:02;sergey_beryozkin;FYI, this is mostly resolved, however I had to change JAXRSOutInterceptor along the way quite a lot as this issue highlighted it was not able to meet some of ContainerResponseContext's method requirements, so it is a bit time consuming indeed","15/Mar/13 17:30;sergey_beryozkin;Hi, most of the updates went into 2.8.x so far, and I'm not really sure I want them pushed down to 2.7.x as they are quite sensitive given that the way response content type is calculated has completely changed.

However, there is actually a JAX-RS compliant way to get the response content type (already correctly determined by the runtime) updated, before the serialization takes place, this is possible to do from a custom message body writer.

See http://svn.apache.org/r1457026 for one example. This works on 2.7.x too.
Can you try this option please ?


","19/Mar/13 20:19;redijedi;The MessageBodyWriter approach works for my simple case of adding charset, but I also have a need to look at the marshalled object to discover and analyze a number of annotations. I'd end up having to perform the marshalling myself, which would be redundant.","20/Mar/13 11:28;sergey_beryozkin;Sure, I went ahead and merged the actual changes to 2.7.x - I thought I'd rather keep them on the trunk only but given that ContainerResponseFilter and WriterInterceptor chains are not run correctly on 2.7.x the changes have to make it into 2.7.x.

In CXF 2.7.4 you will be able to use JAX-RS 2.0 ContainerResponseFilter to check the entity and update the media type as needed - please give it a try with CXF 2.7.4-SNAPSHOT in a few days and reopen the JIRA if it does not work as expected.

Also, note that one can write a delegating MBW which will do exactly the same but indeed it will require more effort, for example:

{code:java}

public class MyWriter implements MessageBodyProvider {
   private static final String ACTIVE_JAXRS_PROVIDER_KEY = ""active.jaxrs.provider"";

   @Context
   private Providers providers;

   public void writeTo(Object obj, Class<?> type, Type genericType, Annotation[] anns, MediaType mt,
                        MultivaluedMap<String, Object> headers, OutputStream os) 
        throws IOException, WebApplicationException {

        // to avoid the recursive calls
        Message currentMessage = PhaseInterceptorChain.getCurrentMessage(); 
        currentMessage.put(ACTIVE_JAXRS_PROVIDER_KEY, this);
        
        MessageBodyWriter<T> r = null;
        try {
            r = mc.getProviders().getMessageBodyWriter(type, genericType, anns, mt);
        } finally {
            currentMessage.put(""active.jaxrs.provider"", null); 
        }
        // check the object, update mt as needed
        r.writeTo(obj, type, genericType, anns, mt, headers, os);  
   }

}
{code}

This will work on 2.7.3","21/Mar/13 12:56;redijedi;I've updated my version to 2.7.4-SNAPSHOT and converted some code to use the ContainerResponseFilter. This approach has been met with initial excitement at the ease of use, but then disappointment at the end result. As best as I can tell, String contentType = responseContext.getHeaderString(HttpHeaders.CONTENT_TYPE); returns null when called during a response. I then attempt to reference responseContext.getMediaType(), but this is also null. 

Thoughts?","21/Mar/13 20:21;sergey_beryozkin;Well, I have the end to end test where the content type is modified first by ContainerResponseFilter and then WriterInterceptor and it all works as expected.
I wonder if the snapshot you've picked up does not contain the right changes yet ?

Can you retry please ? I do expect it to work...

If that does not work - can you try to create a simple test case (maven based if possible or simply create a basic war) ?
 

 ",,,,,,,,,,,,,,,,,,,,,,,,,
issues with spring context override properties,CXF-4890,12636601,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jefimm1,jefimm1,12/Mar/13 16:32,09/Apr/13 15:15,14/Mar/19 02:30,12/Mar/13 19:57,2.6.4,2.6.5,2.6.6,2.7.3,,,,2.5.10,2.6.7,2.7.4,,,,,,0,,,,,,,,The attached example works with 2.6.3 but fail with any higher version of 2.6.x and 2.7.x,,,,,,,,,,,,,,,,,,,,12/Mar/13 16:35;jefimm1;cxf-spring-test.zip;https://issues.apache.org/jira/secure/attachment/12573359/cxf-spring-test.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-03-12 19:13:59.862,,,no_permission,,Unknown,,,,,,,,,,,317093,,,Tue Mar 12 19:13:59 UTC 2013,,,,,,0|i1iprb:,317434,,,,,,,,"12/Mar/13 19:13;dkulp;
Simple workaround for now is to add @WebService annotation to the interface.   

Fixing for 2.7.4.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuthClientUtils ignore argument on getAccessToken(),CXF-4888,12636211,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,hoegertn,hoegertn,09/Mar/13 21:35,09/Apr/13 15:15,14/Mar/19 02:30,11/Mar/13 12:29,2.7.3,,,,,,,2.6.7,2.7.4,3.0.0-milestone1,,JAX-RS Security,,,,0,,,,,,,,"The method getAccessToken(String,Consumer,AccessTokenGrant,boolean) ignores the value of setAuthorizationHeader and forwards a hard coded value of true to the next call. (Line: 136)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,316703,,,2013-03-09 21:35:12.0,,,,,,0|i1ind3:,317045,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect spring config example on http://cxf.apache.org/docs/security.html#Security-XML,CXF-4885,12636064,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,brentworden,brentworden,08/Mar/13 16:03,05/Dec/13 19:09,14/Mar/19 02:30,08/Mar/13 16:18,,,,,,,,,,,,Documentation,,,,0,,,,,,,,"http://cxf.apache.org/docs/security.html#Security-XML

{code}<bean ref=""...""/>{code}

should be

{code}<ref bean=""...""/>{code}

There are two instances.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-08 16:18:05.924,,,no_permission,,Unknown,,,,,,,,,,,316556,,,Fri Mar 08 16:18:05 UTC 2013,,,,,,0|i1imgf:,316898,,,,,,,,08/Mar/13 16:18;sergey_beryozkin;https://cwiki.apache.org/confluence/display/CXF20DOC/Security,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error when http.proxy* system properties are empty,CXF-4879,12635584,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ambro23,ambro23,06/Mar/13 15:20,09/Apr/13 15:15,14/Mar/19 02:30,06/Mar/13 21:24,2.7.3,,,,,,,2.5.10,2.6.7,2.7.4,,Configuration,JAX-WS Runtime,,,0,,,,,,,,"Hi,

we have an Apache CXF client configured using Spring. In the production environment the following system properties exist and the are both empty:
{code}http.proxyHost=
http.proxyPort=
{code} 

This causes the following exception:
{code}java.lang.NumberFormatException: For input string: """"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:59)
	at java.lang.Integer.parseInt(Integer.java:481)
	at java.lang.Integer.valueOf(Integer.java:565)
	at org.apache.cxf.transport.http.ProxyFactory.createSystemProxyConfiguration(ProxyFactory.java:75)
	at org.apache.cxf.transport.http.ProxyFactory.<init>(ProxyFactory.java:59)
	at org.apache.cxf.transport.http.HTTPConduit.<init>(HTTPConduit.java:288)
	at org.apache.cxf.transport.http.URLConnectionHTTPConduit.<init>(URLConnectionHTTPConduit.java:66)
	at org.apache.cxf.transport.http.HTTPTransportFactory.getConduit(HTTPTransportFactory.java:258)
	at org.apache.cxf.binding.soap.SoapTransportFactory.getConduit(SoapTransportFactory.java:238)
	at org.apache.cxf.binding.soap.SoapTransportFactory.getConduit(SoapTransportFactory.java:245)
	at org.apache.cxf.endpoint.AbstractConduitSelector.getSelectedConduit(AbstractConduitSelector.java:103)
	at org.apache.cxf.endpoint.UpfrontConduitSelector.prepare(UpfrontConduitSelector.java:63)
	at org.apache.cxf.endpoint.ClientImpl.prepareConduitSelector(ClientImpl.java:850)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:525)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:463)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:366)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:319)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:96)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:133)
	... 57 more
{code} 

I think ProxyFactory.java around line 66 should handle empty string for proxyHost the same way as NULL.
{code}String proxyHost = SystemPropertyAction.getPropertyOrNull(HTTP_PROXY_HOST);
if (proxyHost != null) {
            // System is configured with a proxy, use it
{code}

Furthermore, it seems that even using http:conduit in our Spring config, it's not possible to override the system properties for a jaxws:client. The following block works only if the http.proxyHost system properties are not defined:
{code} <http:conduit name=""*.http-conduit"">
    <http:client
    	ProxyServer=""somehost""
     	ProxyServerPort=""123""/>
</http:conduit>
{code} 



",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-06 21:24:45.832,,,no_permission,,Novice,,,,,,,,,,,316077,,,Wed Mar 06 21:24:45 UTC 2013,,,,,,0|i1iji7:,316420,,,,,,,,06/Mar/13 21:24;dkulp;Fixed the main NFE described in the report.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF will throw javax.wsdl.WSDLException: WSDLException: faultCode=OTHER_ERROR: Can't find prefix if the SEI has Action annotation,CXF-4877,12635508,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,shengym,shengym,06/Mar/13 07:18,09/Apr/13 15:15,14/Mar/19 02:30,06/Mar/13 21:23,2.6.2,,,,,,,2.5.10,2.6.7,2.7.4,,Integration,Tooling,,,0,,,,,,,,"There are two key conditions to reproduce this problem:
1. The targetNamesapce of SEI and impl class is different;
2. Add  @Action annotation in SEI.

SEI:
{code:java}
@WebService(name = ""SimonTestOne"", targetNamespace = ""iftest.interfaces.webservice_g2.annotations"")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SimonTestOne {
    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = ""notreturn"", targetNamespace = """")
    @RequestWrapper(localName = ""bareIfMethod"", targetNamespace = ""iftest.interfaces.webservice_g2.annotations"", className = ""annotations.webservice_g2.interfaces.iftest.BareIfMethod"")
    @ResponseWrapper(localName = ""bareIfMethodResponse"", targetNamespace = ""iftest.interfaces.webservice_g2.annotations"", className = ""annotations.webservice_g2.interfaces.iftest.BareIfMethodResponse"")
    @Action(input = ""iftest.interfaces.webservice_g2.annotations/InterfaceTestOne/bareIfMethodRequest"", output = ""iftest.interfaces.webservice_g2.annotations/InterfaceTestOne/bareIfMethodResponse"")
    public String bareIfMethod(
        @WebParam(name = ""arg0"", targetNamespace = """")
        String arg0);
}
{code}

Impl class
{code:java}
@WebService(targetNamespace=""server.interfaces.webservice_g2.annotations"",
			serviceName=""ifimplsvc"",
			portName=""iftest"",
			endpointInterface=""annotations.webservice_g2.interfaces.server.SimonTestOne""
            )
		
public class SimonTestOneImpl{
	// implemented from interface
	public String bareIfMethod(String s){return  s;}
}
{code}

command: 
{code}
java2ws -cp . -verbose -client -server -wsdl -d ""D:\temp\wsgencxf"" -s ""D:\temp\wsgencxf"" 
{code}

The exception statck is:
{code}
javax.wsdl.WSDLException: WSDLException: faultCode=OTHER_ERROR: Can't find prefix for 'http://www.w3.org/2007/05/addressing/metadata'. Namespace prefixes must be set on the Definition object using the addNamespace(...) method.
	at com.ibm.wsdl.util.xml.DOMUtils.getPrefix(Unknown Source)
	at com.ibm.wsdl.util.xml.DOMUtils.getQualifiedValue(Unknown Source)
	at com.ibm.wsdl.util.xml.DOMUtils.printQualifiedAttribute(Unknown Source)
	at com.ibm.wsdl.xml.WSDLWriterImpl.printExtensibilityAttributes(Unknown Source)
	at com.ibm.wsdl.xml.WSDLWriterImpl.printInput(Unknown Source)
	at com.ibm.wsdl.xml.WSDLWriterImpl.printOperations(Unknown Source)
	at com.ibm.wsdl.xml.WSDLWriterImpl.printPortTypes(Unknown Source)
	at com.ibm.wsdl.xml.WSDLWriterImpl.printDefinition(Unknown Source)
	at com.ibm.wsdl.xml.WSDLWriterImpl.writeWSDL(Unknown Source)
	at com.ibm.wsdl.xml.WSDLWriterImpl.writeWSDL(Unknown Source)
	at org.apache.cxf.tools.java2wsdl.generator.wsdl11.WSDL11Generator.generate(WSDL11Generator.java:99)
	at org.apache.cxf.tools.java2wsdl.generator.wsdl11.WSDL11Generator.generate(WSDL11Generator.java:1)
	at org.apache.cxf.tools.java2wsdl.processor.JavaToWSDLProcessor.generate(JavaToWSDLProcessor.java:156)
	at org.apache.cxf.tools.java2wsdl.processor.JavaToWSDLProcessor.process(JavaToWSDLProcessor.java:118)
	at org.apache.cxf.tools.java2ws.JavaToWSContainer.processWSDL(JavaToWSContainer.java:110)
	at org.apache.cxf.tools.java2ws.JavaToWSContainer.execute(JavaToWSContainer.java:75)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
	at org.apache.cxf.tools.java2ws.JavaToWS.run(JavaToWS.java:77)
	at org.apache.cxf.tools.java2ws.JavaToWS.main(JavaToWS.java:45)
{code}",,,,,,,,,,,,,,,,,,,,06/Mar/13 13:49;shengym;CXF-4877.patch;https://issues.apache.org/jira/secure/attachment/12572316/CXF-4877.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-03-06 20:38:15.297,,,no_permission,,Novice,,,,,,,,,,,316001,,,Wed Mar 06 20:38:15 UTC 2013,,,,,,0|i1ij1b:,316344,,,,,,,,"06/Mar/13 13:49;shengym;I created a patch to fix it.
Basically I add code to add the prefix plus namespace into the imported SEI definition from the current service implementation definition as follows:

                //add the nameSpace of implementation service definition to the imported SEI definition
                Iterator<Map.Entry<String, String>> iterator = CastUtils.cast(def.getNamespaces().entrySet().iterator());
                while (iterator.hasNext()) {
                    Map.Entry<String, String> entry = iterator.next();
                    imp.getDefinition().addNamespace(entry.getKey(), entry.getValue());
                }","06/Mar/13 20:38;dkulp;
Thanks for looking into this and a very good detailed explanation of a test for it.   I was able to quickly reproduce it with a testcase here.   However, I'm not going to use your patch.  It kind of patches the symptom of the problem, but not the real problem.   Instead, I'm updating the ServiceWSDLBuilder to actually pass the appropriate WSDL definition around so that namespaces added by extensors and other things can be properly added to the correct definition instead of the ""root"" one.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF RespectBinding feature does not support the customized binding info under operation and its sub element.,CXF-4876,12635505,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,mg0432062,mg0432062,06/Mar/13 06:45,09/Apr/13 15:15,14/Mar/19 02:30,14/Mar/13 13:26,2.6.2,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,JAXB Databinding,,,,0,JAXWS-2.2,"RespectBinding,",,,,,,"The RespectBinding description in the JAXWS 2.2 spec is:

6.5.3 javax.xml.ws.RespectBindingFeature

The RespectBindingFeature is used to control whether a JAX-WS implementation MUST respect/honor the contents of the wsdl:binding associated with an endpoint. It has a corresponding RespectBinding annotation described in section 7.14.3.

♦ Conformance (javax.xml.ws.RespectBindingFeature): When the javax.xml.ws.RespectBindingFeature is enabled, a JAX-WS implementation MUST inspect the wsdl:binding at runtime to determine result and parameter bindings as well as any wsdl:extensions that have the required=true attribute. All required wsdl:extensions MUST be supported and honored by a JAX-WS implementation unless a specific wsdl:extension has be explicitly disabled via a WebServiceFeature.

But when we test our application that enabled the RespectBinding feature, we found an issue in cxf-2.6.2. The issue is if we add an invalid binding under wsdl:binding element as you can see in below, a WebServiceException will be throw out when accessing the endpoint first time, and the endpoint will not be accessed, this is behavior is correct.

  <binding name=""EchoPortBinding"" type=""tns:Echo"">
    <soap:binding transport=""http://schemas.xmlsoap.org/soap/http"" style=""document""/>
    <tns:badBinding wsdl:required=""true"" uri=""http://bad/bad"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" />
    <operation name=""echo"">
      <soap:operation soapAction=""""/>
      <input>
        <soap:body use=""literal""/>       
      </input>
      <output>
        <soap:body use=""literal""/>
      </output>
      <fault name=""Exception"">
        <soap:fault name=""Exception"" use=""literal""/>
      </fault>
    </operation>
  </binding>

But if we add the invalid binding under operation or its sub element (input, output or fault), like the example in below, then cxf will not check it, and the endpoint would be access after deployment, although the wsdl4j has deserialize it as an unkown element. 

  <binding name=""EchoPortBinding"" type=""tns:Echo"">
    <soap:binding transport=""http://schemas.xmlsoap.org/soap/http"" style=""document""/>   
    <operation name=""echo"">
      <soap:operation soapAction=""""/>
      <tns:badBinding wsdl:required=""true"" uri=""http://bad/bad"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" />
      <input>
        <soap:body use=""literal""/>       
      </input>
      <output>
        <soap:body use=""literal""/>
      </output>
      <fault name=""Exception"">
        <soap:fault name=""Exception"" use=""literal""/>
      </fault>
    </operation>
  </binding>

",,,,,,,,,,,,,,,,,,,,14/Mar/13 03:13;ffang;CXF-4876-checkstyle.patch;https://issues.apache.org/jira/secure/attachment/12573662/CXF-4876-checkstyle.patch,08/Mar/13 01:23;mg0432062;JaxWsEndpointImpl.java.patch;https://issues.apache.org/jira/secure/attachment/12572671/JaxWsEndpointImpl.java.patch,14/Mar/13 09:46;mg0432062;cxf-4876.patch;https://issues.apache.org/jira/secure/attachment/12573704/cxf-4876.patch,,,,,3.0,,,,,,,,,,,,,,,,,,,,2013-03-13 14:27:37.26,,,no_permission,,Unknown,,,,,,,,,,,315998,,,Fri Mar 15 01:35:22 UTC 2013,,,,,,0|i1ij0n:,316341,,,,,,,,08/Mar/13 01:23;mg0432062;Fixed the defect 4876,"13/Mar/13 14:27;ffang;Hi Alan,

I'm OK with this patch basically, would you please also add testcase for this functionality?

You can extend the RespectBindingFeatureClientServerTest(and the wsdl used for this test)[1] to cover your scenario.
[1]http://svn.apache.org/viewvc?view=revision&revision=1177248

Thanks
Freeman","14/Mar/13 03:13;ffang;Hi,

I revised your patch which can pass our checkstyle.

When you attach the testcase, please ensure you also run ""mvn clean install"".

Thanks
Freeman",14/Mar/13 09:46;mg0432062;Modified the test cases org.apache.cxf.cxf2006.RespectBindingFeatureClientServerTest based on the patch CXF-4876-checkstyle.patch reviesed by Freeman. ,"14/Mar/13 13:26;ffang;apply patch on behalf of Alan Yang with thanks
http://svn.apache.org/r1456402 for trunk
http://svn.apache.org/r1456405 for 2.7.x branch
http://svn.apache.org/r1456416 for 2.6.x branch
http://svn.apache.org/r1456419 for 2.5.x branch",15/Mar/13 01:35;mg0432062;Thanks Freeman :),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE resolving policy reference,CXF-4875,12635369,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,asoldano,asoldano,05/Mar/13 16:41,09/Apr/13 15:15,14/Mar/19 02:30,11/Mar/13 05:45,,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,WS-* Components,,,,0,,,,,,,,"This is related to the changes for CXF-4814 [1]. I get the following exception
{code}
java.lang.NullPointerException
	at org.apache.cxf.ws.policy.WSPolicyFeature.resolveLocal(WSPolicyFeature.java:236)
	at org.apache.cxf.ws.policy.WSPolicyFeature.resolveReference(WSPolicyFeature.java:225)
	at org.apache.cxf.ws.policy.WSPolicyFeature.initializeEndpointPolicy(WSPolicyFeature.java:153)
	at org.apache.cxf.ws.policy.WSPolicyFeature.initialize(WSPolicyFeature.java:118)
	at org.apache.cxf.frontend.ServerFactoryBean.applyFeatures(ServerFactoryBean.java:248)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:192)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:211)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:454)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:334)
	... 30 more
{code}

when dealing with a spring descriptor as follows:

{code}
...
<wsp:Policy wsu:Id=""RM"" xmlns:wsp=""http://www.w3.org/ns/ws-policy"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">
    <wsam:Addressing xmlns:wsam=""http://www.w3.org/2007/02/addressing/metadata"">
      <wsp:Policy/>
    </wsam:Addressing>
    <wsrmp:RMAssertion xmlns:wsrmp=""http://schemas.xmlsoap.org/ws/2005/02/rm/policy"">
      <wsrmp:BaseRetransmissionInterval Milliseconds=""10000""/>
    </wsrmp:RMAssertion>
  </wsp:Policy>
  
  <jaxws:endpoint id='TestService' address='http://@jboss.bind.address@:8080/jaxws-cxf-wsrm-basic-rpc' implementor='org.jboss.test.ws.jaxws.cxf.wsrm.BasicRPCEndpointImpl'>
    <jaxws:features>
      <p:policies>
        <wsp:PolicyReference URI=""#RM"" xmlns:wsp=""http://www.w3.org/ns/ws-policy""/>
      </p:policies>
    </jaxws:features>
  </jaxws:endpoint>
...
{code}

It seems like the code in WSPolicyFeature::resolveLocal(PolicyReference ref, final Bus bus, DescriptionInfo i) is trying to access the current DescriptionInfo, while that will only be set later in WSPolicyFeature::initialize(Server server, Bus bus) (using the ServiceModelPolicyUpdater::addPolicyAttachments and ServiceModelPolicyUpdater::addPolicy methods)


[1] http://svn.apache.org/viewvc/cxf/trunk/rt/ws/policy/src/main/java/org/apache/cxf/ws/policy/WSPolicyFeature.java?r1=1445307&r2=1445306&pathrev=1445307",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,315862,,,2013-03-05 16:41:49.0,,,,,,0|i1ii6f:,316205,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data types for Fields not correctly published in WSDL from Exception classes,CXF-4874,12635316,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,mmusaji,mmusaji,05/Mar/13 10:42,04/May/17 19:42,14/Mar/19 02:30,11/Mar/13 08:09,2.4.10,2.5.6,2.6.3,2.7,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,JAXB Databinding,,,,0,,,,,,,,"This fix relies on CXF-4847 and fixes the same issue described in this but for public Field Types.

Example: 

@WebFault
public class CustomException extends Exception {
    
    public ArrayList<MyData> names;
...

<xs:complexType name=""CustomException"">
<xs:sequence>
<xs:element name=""names"" nillable=""true"" type=""tns:arrayList""/>
</xs:sequence>

But it should be

<xs:complexType name=""CustomException"">
<xs:sequence>
<xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""names"" type=""tns:myData""/>
</xs:sequence>
",,,,,,,,,,,CXF-4847,,,,,,,,CXF-4847,05/Mar/13 10:47;mmusaji;CXF4874.proposed.patch;https://issues.apache.org/jira/secure/attachment/12572067/CXF4874.proposed.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-03-11 08:09:35.687,,,no_permission,,Unknown,,,,,,,,,,,315809,,,Mon Mar 11 08:09:35 UTC 2013,,,,,,0|i1ihun:,316152,,,,,,,,05/Mar/13 10:48;mmusaji;I've attached a proposed patch which is essentially the same as the patch for CXF-4847 but checks for Field Types.,11/Mar/13 08:09;ema;Patch applied. Thanks Mustafa!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.management.RuntimeOperationsException when register performance mbean using cxf webclient with an operation's uri containing some query params,CXF-4873,12635314,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,guillaumemary,guillaumemary,05/Mar/13 10:35,22/Nov/13 03:05,14/Mar/19 02:30,08/Mar/13 14:23,2.5.2,2.7.2,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,JAX-RS,,,,0,jmx,,,,,,,"I want to monitor my CXF REST service call, then i use the Performance MBean provided by CXF.  

One of my operation use query params :

{code:java} 
        @GET
        @Path(""/documents/{idDocument}"")
        @Produces(MediaType.APPLICATION_OCTET_STREAM)
        public Response loadDocument(
          @Context Request request, @HeaderParam(""If-Modified-Since"") Date date,
          @PathParam(""idDocument"") String idDocument,
          @QueryParam(""loadingType"") String loadingType)...
{code}

When i call the service's operation like this :

{code:java}    WebClient.create(""http://host/DocumentService"").path(""/documents/{idDocument}"",""10"").query(""loadingType"",""C"").accept(""*/*"").get(Response.class);
{code}

The operation works but in the log we have this stacktrace :

{code:java}
    WARN - Create Counter''s ObjectName failed. {0}
    javax.management.RuntimeOperationsException
        at javax.management.ObjectInstance.<init>(ObjectInstance.java:97)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:985)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:938)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:330)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:516)
        at org.apache.cxf.management.jmx.InstrumentationManagerImpl.registerMBeanWithServer(InstrumentationManagerImpl.java:331)
        at org.apache.cxf.management.jmx.InstrumentationManagerImpl.register(InstrumentationManagerImpl.java:229)
        at org.apache.cxf.management.jmx.InstrumentationManagerImpl.register(InstrumentationManagerImpl.java:246)
        at org.apache.cxf.management.jmx.InstrumentationManagerImpl.register(InstrumentationManagerImpl.java:239)
        at org.apache.cxf.management.counters.CounterRepository.createCounter(CounterRepository.java:117)
        at org.apache.cxf.management.counters.CounterRepository.increaseCounter(CounterRepository.java:93)
        at org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor.increaseCounter(AbstractMessageResponseTimeInterceptor.java:142)
        at org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor.endHandlingMessage(AbstractMessageResponseTimeInterceptor.java:74)
        at org.apache.cxf.management.interceptor.ResponseTimeMessageInInterceptor.handleMessage(ResponseTimeMessageInInterceptor.java:39)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
        at org.apache.cxf.jaxrs.client.ClientMessageObserver.onMessage(ClientMessageObserver.java:56)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1627)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1494)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1402)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:649)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
        at org.apache.cxf.jaxrs.client.WebClient.doChainedInvocation(WebClient.java:727)
        at org.apache.cxf.jaxrs.client.WebClient.doInvoke(WebClient.java:678)
        at org.apache.cxf.jaxrs.client.WebClient.invoke(WebClient.java:325)
        at org.apache.cxf.jaxrs.client.WebClient.get(WebClient.java:422)
        ...
    Caused by: java.lang.IllegalArgumentException: Invalid name->org.apache.cxf:bus.id=cxf2071824233,type=Performance.Counter.Client,service=""{http://host/DocumentService}WebClient"",port=""WebClient"",operation=""GET:http://host/DocumentService/documents/10?loadingType=C""
        at javax.management.ObjectInstance.<init>(ObjectInstance.java:94)...
{code}

I understand that the problem is when you use the WebClient to call your REST service. CXF use the URI to register the MBean to monitor the service call. In our case, the URI contains a question mark which is detected as a pattern style for an MBean and the Mbean server avoid creating an MBean with a pattern name.

Maybe we could replace the question mark by another char.",,,,,,,,,,,,,,CXF-5415,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-08 14:23:14.169,,,no_permission,,Novice,,,,,,,,,,,315807,,,Fri Mar 08 14:23:14 UTC 2013,,,,,,0|i1ihu7:,316150,,,,,,,,"08/Mar/13 14:23;sergey_beryozkin;Thanks for reporting this issue; I've updated the counter interceptor to escape '?', this really affects only WebClient path as '?' is unlikely to/will not appear in WS client or indeed in RS proxy client operation names, so for now I've just limited the escaping code.

I wonder if the 'query' should be part of the WebClient operation name, in principle, this can be reported as another MBean property, but probably makes sense to keep it as is for now as technically the query is part of the specific application URI. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSONProvider can not drop a root element if DOM Document is copied to JSON,CXF-4872,12635121,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,04/Mar/13 13:10,09/Apr/13 15:15,14/Mar/19 02:30,04/Mar/13 13:17,,,,,,,,2.7.4,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,315614,,,2013-03-04 13:10:39.0,,,,,,0|i1ignb:,315957,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
osgi field is always false when creating a SpringBus via SpringBusFactory in OSGI ENV,CXF-4870,12635089,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,gangliu,gangliu,04/Mar/13 09:07,14/Aug/13 15:50,14/Mar/19 02:30,03/Jun/13 08:45,2.7.3,,,,,,,2.6.8,2.7.5,,,OSGi,,,,0,,,,,,,,"when using following code to create Camel CXF endpoint bus:
{code}
SpringCamelContext springCamelContext = (SpringCamelContext) context;
ApplicationContext applicationContext = springCamelContext.getApplicationContext();
busFactory = new SpringBusFactory(applicationContext);
busFactory.createBus();
{code}
after deployed into Karaf, some extension can't be loaded.

I checked the source code, the *osgi* flag of *SpringBeanLocator* is always false, because the *context* is an instanceof *BusApplicationContext* (created in method *createApplicationContext()* of SpringBusFactory), and it has no *getBundleContext* method.

and in *OSGIBusListener* class, only when registered *ConfiguredBeanLocator* object is an instanceof *ExtensionManagerImpl*, the *OSGiBeanLocator* will be used:
{code}
    private void registerConfiguredBeanLocator() {
        final ConfiguredBeanLocator cbl = bus.getExtension(ConfiguredBeanLocator.class);
        if (cbl instanceof ExtensionManagerImpl) {
            // wire in the OSGi things
            bus.setExtension(new OSGiBeanLocator(cbl, defaultContext), 
                             ConfiguredBeanLocator.class);
        }
    }
{code}

and *SpringBeanLocator* is not an instanceof *ExtensionManagerImpl*, so we can't load the extensions in OSGI ENV.",,,,,,,,,,,,,,CXF-4970,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-18 06:45:06.442,,,no_permission,,Unknown,,,,,,,,,,,315582,,,Mon Jun 03 08:45:19 UTC 2013,,,,,,0|i1igg7:,315925,,,,,,,,"18/Mar/13 06:45;njiang;SpringBusFactory will create a BusApplicationContext which has no getBundlerContext method.
This issue can be fixed by let the SpringBeanLocator look up the bundleContext from the application context and the parent application context.

I just committed a quick fix for it.
Please feel free to verify it with the latest CXF 2.7.x-SNAPSHOT.
 ","18/Mar/13 07:04;gangliu;Great, Thanks alot!","17/Apr/13 05:50;njiang;When I trace the issue of CAMEL-6257, I found this patch is not right, so I reopen the issue here.",03/Jun/13 08:45;njiang;Updated the fixed version.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSRM in combination with WS-Security: timestamp problem,CXF-4866,12634820,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dsosnoski,j0hnli,j0hnli,01/Mar/13 14:47,08/Apr/16 08:33,14/Mar/19 02:30,23/Jun/14 01:42,,,,,,,,3.0,,,,WS-* Components,,,,1,,,,,,,,"The current WSRM implementation retransmits the message exactly as it was sent over the wire. If the message contains a WS-Security timestamp, the message will be cause an WS-Security error due to an invalid Timestamp.
For more information, see: http://mail-archives.apache.org/mod_mbox/cxf-dev/201302.mbox/%3CCA+myoW_jTe3Y21P=gU87_GgkXuM+LuGSJt-JAZJjiT9sAQMp2Q@mail.gmail.com%3E",,,,,,,,,,,,,,,,CXF-6507,CXF-6863,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-06-23 01:42:44.203,,,no_permission,,Unknown,,,,,,,,,,,315313,,,Mon Jun 23 01:42:44 UTC 2014,,,,,,0|i1iesv:,315657,,,,,,,,23/Jun/14 01:42;dsosnoski;Fixed by commit http://svn.apache.org/r1566555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestinationSequence doesn't pick up right number when it deliverying the message InOrder,CXF-4864,12634743,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,01/Mar/13 02:45,09/Apr/13 15:15,14/Mar/19 02:30,01/Mar/13 12:44,,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,,,,,0,,,,,,,,"DestinationSequence should make the below members to be volatile, as we need to access this members in different thread if the InOrder Delivery is enabled.
{code}
inProcessNumber;
highNumberCompleted;
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,315236,,,Fri Mar 01 12:44:54 UTC 2013,,,,,,0|i1iebr:,315580,,,,,,,,"01/Mar/13 12:44;njiang;Applied the patch into trunk, 2.7.x-fixes, 2.6.x-fixes, 2.5.x-fixes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TerminateSequenceResponse must be returned in reponse to WS-RM 1.1 TerminateSequence,CXF-4863,12634692,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,28/Feb/13 21:48,09/Apr/13 15:15,14/Mar/19 02:30,26/Mar/13 13:45,2.7.3,,,,,,,2.6.7,2.7.4,3.0.0-milestone1,,WS-* Components,,,,0,,,,,,,,"WS-RM 1.1 protocol specifies the TerminateSequenceResponse message to be sent in response to the TerminateSequence message. This behavior differs from WS-RM 1.0. which does not define the TerminateSequenceResponse message. The current CXF accepts WS-RM 1.1 the TerminateSequence message but does not respond with the TerminateSequenceResponse message.

See 
http://cxf.547215.n5.nabble.com/Usage-of-WS-RM-1-1-in-the-client-configuration-tc5721766.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,315185,,,2013-02-28 21:48:11.0,,,,,,0|i1ie0f:,315529,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Encoding issue jax-rs - UriBuilder,CXF-4861,12634616,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,klevenzs,klevenzs,28/Feb/13 14:29,09/Apr/13 15:15,14/Mar/19 02:30,04/Mar/13 16:59,2.6,2.7,,,,,,2.6.7,2.7.4,3.0.0-milestone1,,,,,,0,,,,,,,,"Use Case: OData (odata.org) / odata4j (odata4j.org)

Building an URI based on OData query parameter:

URI called by http client: .../Employees?$filter=startswith(CarrierId,'A')

URI build on server:

String nextHref = uriInfo.getRequestUriBuilder().replaceQueryParam(""$skiptoken"", ""{dummySkipToken}"").build().toString();

Result is:

/Employees?$filter=startswith%2528CarrierId%252C%2527A%2527%2529&$skiptoken=%7BdummySkipToken%7D

The value of query parameter $filter is encoded twice. The issue is in the embrasing {} of the value of the $skiptoken query parameter.

CXF does a partial encoding of the first query parameter which succeeds and then gets a UriSyntaxException for the 2nd query parameter. After that it falls back and encodes the whole URI while the 1st query option is already encoded.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-01 09:11:52.027,,,no_permission,,Unknown,,,,,,,,,,,315109,,,Mon Mar 04 16:59:19 UTC 2013,,,,,,0|i1idjj:,315453,,,,,,,,"01/Mar/13 09:11;ay;if there are unresolved parameters in a partially encoded query, while building a uri object, we need to escape the prop delimiters of theQuery before calling buildURIFromEncoded to avoid passing an invalid uri string.

this assumes the resulting uri to look like
$filter=startswith%28CarrierId%2C%27A%27%29&$skiptoken=%7BdummySkipToken%7D","01/Mar/13 10:15;sergey_beryozkin;In this case ""{dummyStickToken}"" is a query parameter value and thus UriBuilder#buildFromEncoded should encode any not-encoded symbols - it actually does it, but misses on ""{"" and ""}"" - I'll investigate; pre-encoding ""{dummyStickToken}"" should do as a workaround.
","01/Mar/13 13:42;ay;I chatted with sergey. It appears the assumption above was wrong. 

The spec talks about an IAE in this case:

public abstract java.net.URI build(java.lang.Object... values)
                            throws java.lang.IllegalArgumentException,
                                   UriBuilderException
...
Throws:
java.lang.IllegalArgumentException - if there are any URI template parameters without a supplied value, or if a value is null.
UriBuilderException - if a URI cannot be constructed based on the current state of the builder.
","01/Mar/13 14:09;sergey_beryozkin;Thanks Aki - so the proposed workaround to get ""{dummyStickToken}"" passed over is to pre-encode it and then use buildFromEncoded call is actually what needs to be done - this will avoid a double '%' encoding. A minor fix to UriBuilder to ensure IAE is thrown needs to be done in meantime.
Note a test exists for a case where at least two template values are provided but not all have been substituted via build or buildFromEncoded, but some buggy optimization in UriBuilder implementation misses on a case where only a single query template var is provided and left non-substituted - and it already works as expected for path segment variables
","01/Mar/13 15:00;sergey_beryozkin;Actually,
builder.replaceQueryParam(""$skiptoken"", ""{var}"").buildFromEncoded(""{dummySkipToken}"").toString(); works (with some fix) without the user having to pre-encode ""{dummySkipToken}"", and no double encoding of the original query parameter,

but

builder.replaceQueryParam(""$skiptoken"", ""{var}"").build(""{dummySkipToken}"").toString(); does not - still the double encoding of the original query parameter, so a bit more work has to be done  


","04/Mar/13 16:59;sergey_beryozkin;The original reported code will result in IAE, replacing the template variable like ""{var}"" with ""$dummyTokenValue"", with UriBuilder already containing encoded parts, will work as expected with build() or buildFromEncoded calls ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Request.Inpustream Lost,CXF-4860,12634354,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,rabbitfoot,rabbitfoot,27/Feb/13 04:38,09/Apr/13 15:15,14/Mar/19 02:30,27/Feb/13 11:44,2.6.6,,,,,,,2.6.7,2.7.4,3.0.0-milestone1,,Transports,,,,0,,,,,,,,"Hi.
I am using CXF on WAS (JEUS 6).
I called jax-rs service with ""application/x-www-form-urlencoded"" content type.
I'm ok with Tomcat or WebLogic.
But some WAS lost request.getInpustream.(It already read).
When CXF 2.3.x was good. but after 2.4.X,
AbstractHTTPDestination.class changed and copyKnownRequestParameters code is added.
I think copyKnownRequestParameters method call request.getParameter, so WAS read request.inpustream. So some Interceptor can't handle inpustream.

WAS can not be changed. Can you suggest any solution?
Is copyKnownRequestParameters method necessary method.

Thanks.",On JEUS Web Application Server,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-02-27 10:48:39.436,,,no_permission,,Unknown,,,,,,,,,,,314847,,,Wed Feb 27 11:45:18 UTC 2013,,,,,,0|i1ibxb:,315191,,,,,,,,"27/Feb/13 10:48;sergey_beryozkin;I've added that method so that a transformation feature acts only if a given request has been redirected, I'll investigate how this can be changed",27/Feb/13 11:44;sergey_beryozkin;HttpServletRequest getAttribute is now checked instead,"27/Feb/13 11:45;ay;I am not sure why you want to get the input stream directly from the servlet request object and not from the message.

I think it would be better if you can explain it more and post your question to users@cxf list first.

regards, aki",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect msg of COULD_NOT_SET_WRAPPER_STYLE in cxf-rt-core/src/main/org/apache/cxf/service/factory/Messages.properties,CXF-4859,12634342,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,hanhongfang,hanhongfang,27/Feb/13 02:38,09/Apr/13 15:15,14/Mar/19 02:30,27/Feb/13 07:42,2.6.6,,,,,,,2.6.7,2.7.4,3.0.0-milestone1,,Core,,,,0,,,,,,,,"COULD_NOT_SET_WRAPPER_STYLE = Service class: {0} contains overloaded operation can not use wrapper style 
              
The msg is incorrect from grammar point of view. I tried to fix it, but searching the 2.6.x-fixes branch, did not find this msg is used in code. Maybe we just delete this msg in Messages.properties file.",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-02-27 07:40:58.313,,,no_permission,,Novice,,,,,,,,,,,314835,,,Wed Feb 27 07:40:58 UTC 2013,,,,,,0|i1ibun:,315179,,,,,,,,"27/Feb/13 07:40;ffang;Thanks for pointing out it.
Also remove unused COULD_NOT_FIND_PART for now

commit fix
http://svn.apache.org/r1450649 for trunk
http://svn.apache.org/r1450654 for 2.7.x branch
http://svn.apache.org/r1450658 for 2.6.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maintain Session (Cookie) is not honoured when using NTLM,CXF-4858,12634339,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bigmikew,bigmikew,27/Feb/13 02:13,09/Apr/13 15:15,14/Mar/19 02:30,06/Mar/13 21:47,2.7.3,,,,,,,2.7.4,,,,Transports,,,,0,,,,,,,,"When using the AsyncHTTPConduit in an attempt to authenticate against an IIS based webservice that requires NTLM & an authentication cookie (ASP.NET_SessionId) I see that the NTLM authentication succeeds but because the session cookie is missing the endpoint returns another 401.

I'll attach wireshark output that demonstrates this behaviour.

I've narrowed it down to:   
  HTTPConduit$WrappedOutputStream#authorizationRetransmit()
where authorizationToken below is always null when using NTLM so it returns false and doesn't continue down to the block of code about 6 lines down that sets the cookies!

String authorizationToken =   
  authSupplier.getAuthorization(effectiveAthPolicy, currentURI, outMessage,   
                                authHeader.getFullHeader());
if (authorizationToken == null) {
  // authentication not possible => we give up
  return false;
}


","Windows Server 2008 R2 Standard SP1 (Client & Server). 
JDK6 + 7 both tried (Client).
IIS 7 (Server)",,,,,,,,,,,,,,,,,,,27/Feb/13 22:36;bigmikew;HTTPConduit.diff;https://issues.apache.org/jira/secure/attachment/12571284/HTTPConduit.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-03-06 21:47:46.992,,,no_permission,,Moderate,,,,,,,,,,,314832,,,Mon Mar 11 00:28:29 UTC 2013,,,,,,0|i1ibtz:,315176,,,,,,,,"27/Feb/13 02:14;bigmikew;Wireshark output:


POST /worksite/services/IWOVServices.asmx HTTP/1.1
Accept: */*
User-Agent: Apache CXF 2.7.3
SOAPAction: ""http://worksite.imanage.com/GetDocuments""
Transfer-Encoding: chunked
Content-Type: text/xml; charset=UTF-8
Host: myserver.mydomain.com
Connection: Keep-Alive

1cf
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><GetDocuments xmlns=""http://worksite.imanage.com""><ObjectIDs><string>10616126</string></ObjectIDs><OutputProfile><imProfileAttributeID>imProfileAuthor</imProfileAttributeID><imProfileAttributeID>imProfileName</imProfileAttributeID><imProfileAttributeID>imProfileDocNum</imProfileAttributeID></OutputProfile><OutputMask>Profile</OutputMask></GetDocuments></soap:Body></soap:Envelope>
0

HTTP/1.1 401 Unauthorized
Cache-Control: private
Transfer-Encoding: chunked
Content-Type: text/html
Server: Microsoft-IIS/7.5
X-AspNet-Version: 2.0.50727
X-WorkSite-Version: 8.5.1002.10
Set-Cookie: ASP.NET_SessionId=vpmsvt45idwhhdufcu0iwgbk; path=/; HttpOnly
Set-Cookie: virtualPath=/WorkSite; path=/
Set-Cookie: virtualRoot=http://myserver.mydomain.com/WorkSite; path=/
Set-Cookie: keyCode=; path=/
WWW-Authenticate: Negotiate
WWW-Authenticate: NTLM
X-Powered-By: ASP.NET
Date: Wed, 27 Feb 2013 01:15:06 GMT

3a
You do not have permission to view this directory or page.
0

POST /worksite/services/IWOVServices.asmx HTTP/1.1
Accept: */*
User-Agent: Apache CXF 2.7.3
SOAPAction: ""http://worksite.imanage.com/GetDocuments""
Transfer-Encoding: chunked
Content-Type: text/xml; charset=UTF-8
Host: myserver.mydomain.com
Connection: Keep-Alive
Authorization: NTLM TlRMTVNTUAABAAAANQIIIAgACAAyAAAAEgASACAAAABBAEsATABFAFMARQBYAFAAMQBOAFoAVABFAA==

1cf
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><GetDocuments xmlns=""http://worksite.imanage.com""><ObjectIDs><string>10616126</string></ObjectIDs><OutputProfile><imProfileAttributeID>imProfileAuthor</imProfileAttributeID><imProfileAttributeID>imProfileName</imProfileAttributeID><imProfileAttributeID>imProfileDocNum</imProfileAttributeID></OutputProfile><OutputMask>Profile</OutputMask></GetDocuments></soap:Body></soap:Envelope>
0

HTTP/1.1 401 Unauthorized
Content-Type: text/html; charset=us-ascii
Server: Microsoft-HTTPAPI/2.0
WWW-Authenticate: NTLM TlRMTVNTUAACAAAACAAIADgAAAA1AokiuxDWllxlRwsAAAAAAAAAALwAvABAAAAABgGxHQAAAA9OAFoAVABFAAIACABOAFoAVABFAAEAFABBAEsATABXAFMAVwBFAEIAVAAyAAQAIgBjAG8AcgBwAC4AbgB6AHQAZQAuAGcAbwB2AHQALgBuAHoAAwA4AEEASwBMAFcAUwBXAEUAQgB0ADIALgBjAG8AcgBwAC4AbgB6AHQAZQAuAGcAbwB2AHQALgBuAHoABQAiAGMAbwByAHAALgBuAHoAdABlAC4AZwBvAHYAdAAuAG4AegAHAAgAqAfe4IcUzgEAAAAA
Date: Wed, 27 Feb 2013 01:15:06 GMT
Content-Length: 341

<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01//EN""""http://www.w3.org/TR/html4/strict.dtd"">
<HTML><HEAD><TITLE>Not Authorized</TITLE>
<META HTTP-EQUIV=""Content-Type"" Content=""text/html; charset=us-ascii""></HEAD>
<BODY><h2>Not Authorized</h2>
<hr><p>HTTP Error 401. The requested resource requires user authentication.</p>
</BODY></HTML>
POST /worksite/services/IWOVServices.asmx HTTP/1.1
Accept: */*
User-Agent: Apache CXF 2.7.3
SOAPAction: ""http://worksite.imanage.com/GetDocuments""
Transfer-Encoding: chunked
Content-Type: text/xml; charset=UTF-8
Host: myserver.mydomain.com
Connection: Keep-Alive
Authorization: NTLM TlRMTVNTUAADAAAAGAAYAEAAAADoAOgAWAAAAAgACABAAQAAFAAUAEgBAAASABIAXAEAAAAAAABuAQAANQIIIBbsDfykN317xp82pJmgmfemwZLWBvrWX929BW+6DyH0kU1PTL6Ghp4BAQAAAAAAADDWu+CHFM4BpsGS1gb61l8AAAAAAgAIAE4AWgBUAEUAAQAUAEEASwBMAFcAUwBXAEUAQgBUADIABAAiAGMAbwByAHAALgBuAHoAdABlAC4AZwBvAHYAdAAuAG4AegADADgAQQBLAEwAVwBTAFcARQBCAHQAMgAuAGMAbwByAHAALgBuAHoAdABlAC4AZwBvAHYAdAAuAG4AegAFACIAYwBvAHIAcAAuAG4AegB0AGUALgBnAG8AdgB0AC4AbgB6AAcACACoB97ghxTOAQAAAABOAFoAVABFAHMAZQBhAHIAYwBoAGkAbQBhAG4AQQBLAEwARQBTAEUAWABQADEA

1cf
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><GetDocuments xmlns=""http://worksite.imanage.com""><ObjectIDs><string>10616126</string></ObjectIDs><OutputProfile><imProfileAttributeID>imProfileAuthor</imProfileAttributeID><imProfileAttributeID>imProfileName</imProfileAttributeID><imProfileAttributeID>imProfileDocNum</imProfileAttributeID></OutputProfile><OutputMask>Profile</OutputMask></GetDocuments></soap:Body></soap:Envelope>
0

HTTP/1.1 401 Unauthorized
Cache-Control: private
Transfer-Encoding: chunked
Content-Type: text/html
Server: Microsoft-IIS/7.5
X-AspNet-Version: 2.0.50727
X-WorkSite-Version: 8.5.1002.10
Set-Cookie: ASP.NET_SessionId=qs1rxfu12v24djzhw4u4jj45; path=/; HttpOnly
Set-Cookie: virtualPath=/WorkSite; path=/
Set-Cookie: virtualRoot=http://myserver.mydomain.com/WorkSite; path=/
Set-Cookie: keyCode=; path=/
WWW-Authenticate: Negotiate
WWW-Authenticate: NTLM
X-Powered-By: ASP.NET
Date: Wed, 27 Feb 2013 01:15:06 GMT

3a
You do not have permission to view this directory or page.
0
",27/Feb/13 02:18;bigmikew;Related to https://issues.apache.org/jira/browse/CXF-4645,"27/Feb/13 22:34;bigmikew;Simple fix for this appears to be to remove the check for authorizationToken == null that returns false ahead of setting the cookies.

This may have an impact on the scenario where authentication is genuinly not possible (ie NTLM is not in play) but I'd expect that to at least be caught by the checks on the number of re-transmits sent.

I've patched and tested this locally and I can now authenticate successfully with NTLM where an authentication cookie is required.

Here's the diff of what I changed to test:

### Eclipse Workspace Patch 1.0
#P cxf-rt-transports-http
Index: src/main/java/org/apache/cxf/transport/http/HTTPConduit.java
===================================================================
--- src/main/java/org/apache/cxf/transport/http/HTTPConduit.java	(revision 1450581)
+++ src/main/java/org/apache/cxf/transport/http/HTTPConduit.java	(working copy)
@@ -1448,10 +1448,10 @@
             String authorizationToken = 
                 authSupplier.getAuthorization(
                     effectiveAthPolicy, currentURI, outMessage, authHeader.getFullHeader());
-            if (authorizationToken == null) {
-                // authentication not possible => we give up
-                return false;
-            }
+//            if (authorizationToken == null) {
+//                // authentication not possible => we give up
+//                return false;
+//            }
             
             try {
                 closeInputStream();


Any chance this fix can get in to 2.8.0 (or 2.7.4 if such a version is created)?

",27/Feb/13 22:36;bigmikew;Diff as shown in comments.,"06/Mar/13 21:47;dkulp;
I think this is now resolved by just handling this in the AsyncHTTPConduit as that patch would break some of the handling for the non-Async cases.   Since I don't have any NTLM servers to test with, can you give it a try?","06/Mar/13 22:21;bigmikew;Hi Daniel,
I'm happy to retest as I'm still actively working on this. I'm not sure I follow what you're saying though. Have you made changes in AsyncHTTPConduit? Do I just need to grab 2.7.4 and retest?

Cheers
Mike
","06/Mar/13 22:30;dkulp;
Michael,

Instead of making modifications to HTTPConduit$WrappedOutputStream#authorizationRetransmit(), I overrode that method in the AsyncHTTPConduit subclass so it would be specific to the Async things.   In anycase, if Jenkins builds are successful tonights, tomorrows 2.7.4-SNAPSHOT should have it.

Thanks!","06/Mar/13 22:33;bigmikew;Thanks Daniel, sounds like a better approach than my quick hack.

I'll pick up the snapshot tomorrow and update when I've tested.","11/Mar/13 00:28;bigmikew;Hi Daniel,

Just confirming that 2.7.4-SNAPSHOT from the 8th March appears to have resolved this issue.

Thanks again for your help.

Regards,
Mike",,,,,,,,,,,,,,,,,,,,,,,,,,,
A java.lang.NullPointerException is thrown when publishedEndpointUrl is used,CXF-4856,12634116,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,marcoc,marcoc,26/Feb/13 11:14,09/Apr/13 15:15,14/Mar/19 02:30,27/Feb/13 17:59,2.7.3,,,,,,,2.6.7,2.7.4,,,Configuration,WS-* Components,,,0,,,,,,,,"If the property publishedEndpointUrl is used and the property wsdlLocation is not defined a java.lang.NullPointerException is thrown.

The same configuration works fine in CXF 2.6.0

",Apache Tomcat 6.0,,,,,,,,,,,,,,,,,,,26/Feb/13 11:20;marcoc;WebServiceProject.war;https://issues.apache.org/jira/secure/attachment/12570973/WebServiceProject.war,26/Feb/13 11:20;marcoc;exception.txt;https://issues.apache.org/jira/secure/attachment/12570972/exception.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,314609,,,Tue Feb 26 11:20:01 UTC 2013,,,,,,0|i1iagf:,314953,,,,,,,,26/Feb/13 11:20;marcoc;I have added a sample application (without libs) and the Exception thrown.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The server does not work with HTTP 1.0 clients (keep-alive not respected),CXF-4855,12634092,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mattiasl,mattiasl,26/Feb/13 10:02,09/Apr/13 15:15,14/Mar/19 02:30,27/Feb/13 19:11,2.7,,,,,,,2.7.4,,,,Transports,,,,0,,,,,,,,"The ""Connection: keep-alive"" handling for HTTP 1.0 clients do not seem to work in 2.7.x (tested on 2.7.0 and 2.7.3)
After some debugging in our system, the problem seems to be in the transport class org/apache/cxf/transport/http_jetty/JettyHTTPDestination.java

This is a FilterOutputStream which means that calling close on this stream causes flush() + close() on the underlying stream. The problem is that the flush() call seem to cause response content length calculations to fail. This then causes the ""Connection"" response header to be filtered out (among other things).

We are currently running with our own local patch
=====
--- apache-cxf-2.7.0-src/rt/transports/http-jetty/src/main/java/org/apache/cxf/transport/http_jetty/JettyHTTPDestination.java.orig	2012-10-06 04:19:50.000000000 +0200
+++ apache-cxf-2.7.0-src/rt/transports/http-jetty/src/main/java/org/apache/cxf/transport/http_jetty/JettyHTTPDestination.java	2013-02-11 14:59:21.411916187 +0100
@@ -405,6 +405,13 @@
             out.sendContent(c);
             return c.getCount();
         }
+
+        @Override
+        public void close() throws IOException {
+            // Avoid calling flush() here. It interferes with
+            // content length calculation in the generator.
+            out.close();
+        }
     }
     static class CountingInputStream extends FilterInputStream {
         int count;
=====

This seems to work in our system at least.",,,,,,,,,,,,,,,,,,,,26/Feb/13 10:05;mattiasl;JettyHTTPDestination.patch;https://issues.apache.org/jira/secure/attachment/12570961/JettyHTTPDestination.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-02-27 19:11:20.355,,,no_permission,,Unknown,,,,,,,,,,,314585,,,Wed Feb 27 19:11:20 UTC 2013,,,,,,0|i1iab3:,314929,,,,,,,,"26/Feb/13 10:05;mattiasl;Attaching the patch (in the Description) as a separate file, since the whitespace became messed up.",27/Feb/13 19:11;dkulp;Patch applied!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pre-Match ContainerRequestFilter can not replace request stream and URI,CXF-4852,12633917,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,25/Feb/13 15:01,09/Apr/13 15:15,14/Mar/19 02:30,25/Feb/13 15:28,,,,,,,,2.7.4,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,314411,,,2013-02-25 15:01:47.0,,,,,,0|i1i98n:,314756,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AttachmentDeserializer cannot handle attachments with Quoted Printable content transfer encoding in initializeRootMessage,CXF-4851,12633892,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,vanarchi,vanarchi,25/Feb/13 11:44,10/Apr/17 19:04,14/Mar/19 02:30,29/Mar/17 12:38,2.6.6,2.7.3,,,,,,3.0.13,3.1.11,3.2.0,,,,,,0,,,,,,,,"The issue is the same as CXF-1847, but it happens by initializing root message in initializeRootMessage() method.

processing SOAP

POST /PortalUpdateStatusServiceWAR/updateStatusService HTTP/1.1
Host: 127.0.0.1:7788
Connection: close, TE
TE: trailers, deflate, gzip, compress
User-Agent: Oracle HTTPClient Version 10h
SOAPAction: updateStatus
Accept-Encoding: gzip, x-gzip, compress, x-compress
Content-type: multipart/related; type=""text/xml""; start=""<84353ECADD8D15912FBDF2318104ECF4>""; 	boundary=""----=_Part_119_6505558.1361536929956""
Content-length: 138556


------=_Part_119_6505558.1361536929956
Content-Type: text/plain; charset=Cp1251
Content-Transfer-Encoding: quoted-printable
Content-Id: <84353ECADD8D15912FBDF2318104ECF4>

<?xml version=3D""1.0"" encoding=3D""UTF-8""?>
...
</env:Body>
</env:Envelope>
------=_Part_119_6505558.1361536929956
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-Id: <3048>
...

results in the following exception:

13:38:30.567 [AJPRequestHandler-RMICallHandler-38] WARN  o.a.cxf.phase.PhaseInterceptorChain - Interceptor for {http://ws.apache.org/axis2}updateStatusService has thrown exception, unwinding now
java.lang.RuntimeException: Couldn't parse stream.
	at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:1262) ~[cxf-api-2.6.6.jar:2.6.6]
	at org.apache.cxf.interceptor.StaxInInterceptor.handleMessage(StaxInInterceptor.java:112) ~[cxf-api-2.6.6.jar:2.6.6]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262) ~[cxf-api-2.6.6.jar:2.6.6]
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121) [cxf-api-2.6.6.jar:2.6.6]
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:237) [cxf-rt-transports-http-2.6.6.jar:2.6.6]
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:209) [cxf-rt-transports-http-2.6.6.jar:2.6.6]
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:189) [cxf-rt-transports-http-2.6.6.jar:2.6.6]
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:130) [cxf-rt-transports-http-2.6.6.jar:2.6.6]
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:225) [cxf-rt-transports-http-2.6.6.jar:2.6.6]
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:145) [cxf-rt-transports-http-2.6.6.jar:2.6.6]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:763) [servlet.jar:na]
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:201) [cxf-rt-transports-http-2.6.6.jar:2.6.6]
	at com.evermind.server.http.ServletRequestDispatcher.invoke(ServletRequestDispatcher.java:734) [oc4j-internal.jar:na]
	at com.evermind.server.http.ServletRequestDispatcher.forwardInternal(ServletRequestDispatcher.java:391) [oc4j-internal.jar:na]
	at com.evermind.server.http.HttpRequestHandler.doProcessRequest(HttpRequestHandler.java:908) [oc4j-internal.jar:na]
	at com.evermind.server.http.HttpRequestHandler.processRequest(HttpRequestHandler.java:458) [oc4j-internal.jar:na]
	at com.evermind.server.http.AJPRequestHandler.run(AJPRequestHandler.java:313) [oc4j-internal.jar:na]
	at com.evermind.server.http.AJPRequestHandler.run(AJPRequestHandler.java:199) [oc4j-internal.jar:na]
	at oracle.oc4j.network.ServerSocketReadHandler$SafeRunnable.run(ServerSocketReadHandler.java:260) [oc4j-internal.jar:na]
	at com.evermind.util.ReleasableResourcePooledExecutor$MyWorker.run(ReleasableResourcePooledExecutor.java:303) [oc4j-internal.jar:na]
	at java.lang.Thread.run(Thread.java:595) [na:1.5.0_18]
Caused by: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character '3' (code 51); expected a quote character enclosing value for 'version'
 at [row,col {unknown-source}]: [1,15]
	at com.ctc.wstx.io.InputBootstrapper.reportUnexpectedChar(InputBootstrapper.java:506) ~[woodstox-core-asl-4.1.1.jar:4.1.1]
	at com.ctc.wstx.io.InputBootstrapper.handleEq(InputBootstrapper.java:421) ~[woodstox-core-asl-4.1.1.jar:4.1.1]
	at com.ctc.wstx.io.InputBootstrapper.readXmlVersion(InputBootstrapper.java:319) ~[woodstox-core-asl-4.1.1.jar:4.1.1]
	at com.ctc.wstx.io.InputBootstrapper.readXmlDecl(InputBootstrapper.java:262) ~[woodstox-core-asl-4.1.1.jar:4.1.1]
	at com.ctc.wstx.io.ReaderBootstrapper.bootstrapInput(ReaderBootstrapper.java:155) ~[woodstox-core-asl-4.1.1.jar:4.1.1]
	at com.ctc.wstx.stax.WstxInputFactory.doCreateSR(WstxInputFactory.java:531) ~[woodstox-core-asl-4.1.1.jar:4.1.1]
	at com.ctc.wstx.stax.WstxInputFactory.createSR(WstxInputFactory.java:585) ~[woodstox-core-asl-4.1.1.jar:4.1.1]
	at com.ctc.wstx.stax.WstxInputFactory.createSR(WstxInputFactory.java:610) ~[woodstox-core-asl-4.1.1.jar:4.1.1]
	at com.ctc.wstx.stax.WstxInputFactory.createXMLStreamReader(WstxInputFactory.java:316) ~[woodstox-core-asl-4.1.1.jar:4.1.1]
	at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:1260) ~[cxf-api-2.6.6.jar:2.6.6]
	... 20 common frames omitted

I solved that by the following modification (version 2.6.6)

 try {
                InternetHeaders ih = new InternetHeaders(stream);
                message.put(InternetHeaders.class.getName(), ih);
                String val = ih.getHeader(""Content-Type"", ""; "");
                if (!StringUtils.isEmpty(val)) {
                    String cs = HttpHeaderHelper.findCharset(val);
                    if (!StringUtils.isEmpty(cs)) {
                        message.put(Message.ENCODING, HttpHeaderHelper.mapCharset(cs));
                    }
                    String contentTransferEncoding = ih.getHeader(""Content-Transfer-Encoding"", null);
                    quotedPrintable = contentTransferEncoding != null 
                    		&& contentTransferEncoding
                    		.equalsIgnoreCase(QUOTED_PRINTABLE);
                }
            } catch (MessagingException e) {
                throw new RuntimeException(e);
            }
            InputStream is;
            if (quotedPrintable)
            {
            	InputStream rawInputSream = new MimeBodyPartInputStream(stream, boundary, pbAmount);
				is = new QuotedPrintableDecoderStream(rawInputSream);
            }
            	else
            		is = new MimeBodyPartInputStream(stream, boundary, pbAmount);
            body = new DelegatingInputStream(is,
                                             this);
            createCount++;
            message.setContent(InputStream.class, body);",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,314386,,,2013-02-25 11:44:51.0,,,,,,0|i1i933:,314731,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebClient does not process GenericEntity correctly,CXF-4848,12633587,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,22/Feb/13 10:30,09/Apr/13 15:15,14/Mar/19 02:30,22/Feb/13 21:37,,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,,,,,0,,,,,,,,"GenericEntity is JAX-RS 1.0 class which can be used to write explicit collection or other generic class instances, example:

{code:java} 
GenericEntity<List<Book>> genericEntity = 
            new GenericEntity<List<Book>>(books) {
            };
{code}
or
{code:java}

class Representation<T> {
 private T data;
 public Representation(T data) {
     this.data = data;
 }
}

Representation<Book> rep = new Representation<Book>(new Book());

GenericEntity<Representation<Book>> genericEntity2 = 
   new GenericEntity<Representation<Book>>(rep, Book.class);

{code}

This is supported on the server, when writing responses, but not with WebClient",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-02-22 21:34:51.165,,,no_permission,,Unknown,,,,,,,,,,,314082,,,Fri Feb 22 21:34:51 UTC 2013,,,,,,0|i1i77j:,314427,,,,,,,,"22/Feb/13 21:34;sambitd;Thanks Sergey, This is exactly my requirement which is missing and as i mention in JIRA - https://issues.apache.org/jira/browse/CXF-4799",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data types not correctly published in WSDL from Exception classes,CXF-4847,12633585,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,mmusaji,mmusaji,22/Feb/13 10:24,02/May/13 02:30,14/Mar/19 02:30,05/Mar/13 07:53,2.4.10,2.5.6,2.6.3,2.7,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,JAXB Databinding,,,,0,,,,,,,,"Fixes for CXF-4542 and CXF-4542 introduced this regression where an Exception class with a Collection was always represented as the Collection type instead of the Paramatized Type.

Example: 

@WebFault
public class CustomException extends Exception {
    
    private ArrayList<MyData> names;
...

<xs:complexType name=""CustomException"">
<xs:sequence>
<xs:element name=""names"" nillable=""true"" type=""tns:arrayList""/>
</xs:sequence>

But it should be

<xs:complexType name=""CustomException"">
<xs:sequence>
<xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""names"" type=""tns:myData""/>
</xs:sequence>
",,,,,,,,,,,,,,,,,,,,22/Feb/13 10:26;mmusaji;CXF4847.proposed.patch;https://issues.apache.org/jira/secure/attachment/12570455/CXF4847.proposed.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-03-05 07:53:18.461,,,no_permission,,Unknown,,,,,,,,,,,314080,,,Tue Mar 05 07:53:18 UTC 2013,,,,,,0|i1i773:,314425,,,,,,,,22/Feb/13 10:26;mmusaji;I'm attaching a proposed patch for this fix,05/Mar/13 07:53;ema;Patch applied. Thanks mustafa!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A confusing exception may be thrown from HTTPConduit when oneway call results in HTTP 500 response,CXF-4846,12633439,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,21/Feb/13 18:04,09/Apr/13 15:15,14/Mar/19 02:30,27/Feb/13 11:19,2.6.6,,,,,,,2.6.7,,,,Transports,,,,0,,,,,,,,"HTTPConduit in 2.6.x does not correctly close the stream for oneway call that results in HTTP 500. Instead of closing the error stream, it tries to close the input stream. And this leads to a confusing exception message and might potentially lead to other issue.

This problem might be related to the socket already closed exception that has been occasionally observed for CXF 2.6.x with recent jdk1.6.0_38 and 39 but not with earlier jdk versions.

Note that this problem is not relevant for 2.7.x and 2.8.x, as HTTPConduit is differently implemented in 2.7.x.",,,,,,,,,,,,,,CXF-4857,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,313934,,,Wed Feb 27 11:22:04 UTC 2013,,,,,,0|i1i6an:,314279,,,,,,,,"27/Feb/13 11:15;ay;http://svn.apache.org/viewvc?view=revision&revision=1450509
cxf/branches/2.6.x-fixes/rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java","27/Feb/13 11:19;ay;Resolving this issue in respect to the part that handles the stream-closing.
",27/Feb/13 11:22;ay;For the Socket Closed exception for jdk1.6.0_nn (nn >= 38).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Response header Content-type not recognized for asynchronous soap/http,CXF-4844,12633281,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,psmolinski,psmolinski,20/Feb/13 21:33,09/Apr/13 15:15,14/Mar/19 02:30,20/Mar/13 07:43,2.7.3,,,,,,,2.7.4,3.0.0-milestone1,,,Transports,,,,0,,,,,,,,"I've tried using asynchronous http webservices implementation. The test failed with NullPointerException:
{code}
java.lang.NullPointerException
	at org.apache.cxf.binding.soap.interceptor.StartBodyInterceptor.handleMessage(StartBodyInterceptor.java:59)
	at org.apache.cxf.binding.soap.interceptor.StartBodyInterceptor.handleMessage(StartBodyInterceptor.java:37)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:782)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1592)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:1123)
	at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3.run(AutomaticWorkQueueImpl.java:426)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1.run(AutomaticWorkQueueImpl.java:351)
	at java.lang.Thread.run(Thread.java:722)
{code}

The test however succeeded with synchronous call. After some investigation I realized that the issue is missing Content-Type value which prevented StaxInInterceptor from injecting the reader.

The problem was caused by different code handling headers parsing for synchronous and asynchronous calls:
* URLConnectionHTTPConduit$URLConnectionWrappedOutputStream#updateResponseHeaders
* AsyncHTTPConduit$AsyncWrappedOutputStream#updateResponseHeaders

The first one gets Content Type from from connection. The latter one does interpret headers and compare them (case-sensitive) against 'Content-Type' string. In the service I tested, the server generates however 'Content-type' (which is still valid for RFC2616, 4.2 Message Headers).

The simplest solution is to fix AsyncWrappedOutputStream#readHeaders and replace ""Content-Type"".equals with ""Content-Type"".equalsIgnoreCase 

Thanks,
Piotr",any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-20 07:43:50.665,,,no_permission,,Unknown,,,,,,,,,,,313777,,,Wed Mar 20 07:43:50 UTC 2013,,,,,,0|i1i5br:,314122,,,,,,,,"20/Mar/13 07:43;ffang;commit fix
http://svn.apache.org/r1458659 for trunk
http://svn.apache.org/r1458664 for 2.7.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support Claims defined in Security Policy at IssuedToken/Claims,CXF-4842,12633195,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,owulff,owulff,20/Feb/13 14:00,09/Apr/13 15:15,14/Mar/19 02:30,26/Feb/13 15:06,2.6.6,2.7.3,,,,,,2.6.7,2.7.4,,,WS-* Components,,,,0,,,,,,,,"The STSClient only requests claims from the STS if they are configured in IssuesToken/RequestSecurityTokenTemplate.

The claims defined at IssuedToken/Claims are ignored.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,313691,,,2013-02-20 14:00:22.0,,,,,,0|i1i4sn:,314036,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STSClient AppliesTo is not working correctly in certain circumstances,CXF-4841,12633170,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,20/Feb/13 10:59,09/Apr/13 15:15,14/Mar/19 02:30,20/Feb/13 12:11,2.6.6,2.7.3,,,,,,2.6.7,2.7.4,,,STS,,,,0,,,,,,,,"
The STSClient is only sending an AppliesTo address when an AddressingProperties object is available on the message context. It should default to the standard WSA namespace when it is not + send the AppliesTo address.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,313666,,,2013-02-20 10:59:33.0,,,,,,0|i1i4n3:,314011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Server-side endpoint may throw an NPE when a request message arrives while the endpoint is being stopped but not yet stopped,CXF-4838,12633022,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,19/Feb/13 18:28,09/Apr/13 15:15,14/Mar/19 02:30,27/Feb/13 12:59,2.7.3,,,,,,,2.6.7,2.7.4,3.0.0-milestone1,,Core,,,,0,,,,,,,,"When a server-side endpoint is stopped, it first clears the observable object of the destination and then unregister the destination at the service path.

Because of the order in which these two actions are performed, there is a chance for a request message to arrive at the endpoint and still find the destination at the service path but its associated observable is already null. When this occurs, the call will currently result in an NPE, as shown like below:

SCHWERWIEGEND: Servlet.service() for servlet [cxf-servlet] in context with path [/cxf] threw exception
java.lang.NullPointerException
        at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:236)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:213)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:193)
        at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:130)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:221)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:141)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:197)

To avoid this problem, we should make sure that these two actions: setting and clearing the observer and registering and unregistering the service path (destination), to occur in the correct order at starting and stopping of the endpoint.

That means:
when starting
- set the observable and register the destination

when stopping
- unregister the destination and clear the observable


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,313518,,,Wed Feb 27 12:59:08 UTC 2013,,,,,,0|i1i3q7:,313863,,,,,,,,"27/Feb/13 12:59;ay;trunk 
http://svn.apache.org/viewvc?view=revision&revision=r1447862

2.7.x
http://svn.apache.org/viewvc?view=revision&revision=r1448140

2.6.x
http://svn.apache.org/viewvc?view=revision&revision=r1448142",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceImpl getPort does not need to throw Exception if the portName can not be found in portInfos,CXF-4836,12632975,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,shengym,shengym,19/Feb/13 12:22,10/Apr/17 19:06,14/Mar/19 02:30,18/Jul/13 06:12,2.6.2,,,,,,,,,,,JAX-WS Runtime,,,,0,,,,,,,,"We create such client which will set target address info and binding info in RequestContext of BindingProvider.

		String mtom11URL = ""http://localhost:9080//MyBusiness/MTOM11Service"";
		
		MTOMInterface port = null;
		BindingProvider bp = null;
		
		System.out.println(""Looking up SOAP 1.1 MTOM service"");

		QName serviceName = new QName(""http://shengym.com/MyBusiness/"",""MTOM11Service"");
		QName portName = new QName(""http://shengym.com/MyBusiness"", ""MTOM11Port"");
		// Setup the necessary JAX-WS artifacts
		Service svc = Service.create(serviceName);
		port = svc.getPort(portName, MTOMInterface.class);

		// Set the target URL
		bp = (BindingProvider) port;
		Map<String, Object> requestCtx = bp.getRequestContext();
		requestCtx.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,mtom11URL);
	
		// Enable MTOM
		SOAPBinding binding = (SOAPBinding) bp.getBinding();
		binding.setMTOMEnabled(true);

However, it reports such error:

javax.xml.ws.WebServiceException:Port{http://shengym.com/MyBusiness/}MTOM11Port not found.
org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:332)
org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:323)
javax.xml.ws.Service.getPort(Service.java:134)

I know that the added following code can fix this error:
svc.addPort(portName, SOAPBinding.SOAP11HTTP_MTOM_BINDING, mtom11URL);

Well, this error should not report even the addPort method is not called.
I know the added check in ServiceImpl is to avoid run time error and report it as early as possible. But I think it is not needed. The reasons are:
1. User can get run time error later;
2. User can set target addess info and bind info in other ways (as my example shows)

I remove the check from the ServiceImpl then my client code works well. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,313471,,,Tue Mar 12 06:18:49 UTC 2013,,,,,,0|i1i3fr:,313816,,,,,,,,"25/Feb/13 07:32;shengym;What I removed is :
    public <T> T getPort(QName portName, Class<T> serviceEndpointInterface, WebServiceFeature... features) {
        if (portName == null) {
            throw new WebServiceException(BUNDLE.getString(""PORT_NAME_NULL_EXC""));
        }

      //Here the check should not be needed
//        if (!portInfos.containsKey(portName)) {
//            throw new WebServiceException(new Message(""INVALID_PORT"", BUNDLE, portName).toString());
//        }

        try {
            return createPort(portName, null, serviceEndpointInterface, features);
        } catch (ServiceConstructionException e) {
            throw new WebServiceException(e);
        }
    }

Can anybody take a look at it? Thanks.",11/Mar/13 05:54;shengym;Can anybody take a look at it? Thanks.,"12/Mar/13 06:18;shengym;The JSR 224 spec has the following statement:

4.1 javax.xml.Service
Create a new port via the addPortmethod. Such ports only include binding and endpoint information
and are thus only suitable for creating Dispatch instances since these do not requireWSDL port type
information.

So I do not think the exception should be thrown here as proxy is used in this case not dispatch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBoundException when printing stacktrace for ToolException,CXF-4833,12632875,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,18/Feb/13 18:38,09/Apr/13 15:15,14/Mar/19 02:30,19/Feb/13 09:57,2.6.6,2.7.3,,,,,,2.6.7,2.7.4,3.0.0-milestone1,,Tooling,,,,0,,,,,,,,"I'm getting a IndexOutOfBoundsException when printing a ToolException. Seems like a missing check on the hasSuppressed flag for cause exception.

{code}
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.RangeCheck(ArrayList.java:547)
	at java.util.ArrayList.get(ArrayList.java:322)
	at org.apache.cxf.tools.common.ToolException.printStackTrace(ToolException.java:120)
	at org.apache.cxf.tools.common.ToolException.printThrowable(ToolException.java:126)
	at org.apache.cxf.tools.common.ToolException.printStackTrace(ToolException.java:121)
	at org.apache.cxf.tools.common.ToolException.printStackTrace(ToolException.java:104)
	at org.jboss.wise.core.client.consumer.WiseCXFConsumerImpl.consume(WiseCXFConsumerImpl.java:265)
	at org.jboss.ws.api.tools.WSContractConsumer.consume(WSContractConsumer.java:210)
	at org.jboss.wise.core.consumer.impl.jbossws.DefaultWSImportImpl.runWSConsume(DefaultWSImportImpl.java:90)
	at org.jboss.wise.core.consumer.impl.jbossws.DefaultWSImportImpl.importObjectFromWsdl(DefaultWSImportImpl.java:85)
	at org.jboss.wise.core.consumer.impl.WSConsumerTest.parseHelloGreetingWSDLShouldFailWithPackageAndNoBindingsForNameDuplication(WSConsumerTest.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:22)
	... 22 more
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,313371,,,2013-02-18 18:38:07.0,,,,,,0|i1i2tj:,313716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
META-INF/services/org.apache.cxf.bus.factory contains extra data on a second line,CXF-4832,12632791,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,jameslivingston,jameslivingston,18/Feb/13 06:34,14/Aug/13 15:49,14/Mar/19 02:30,28/Jun/13 14:44,2.6.4,,,,,,,2.6.9,2.7.6,3.0.0-milestone1,,Bus,,,,0,,,,,,,,"In the change http://svn.apache.org/viewvc?view=revision&revision=1091006, BusFactory loads META-INF/services/org.apache.cxf.bus.factory and loads additional data ""busFactoryCondition"" from the second line.

http://docs.oracle.com/javase/7/docs/api/java/util/ServiceLoader.html says (amongst other details) ""The file contains a list of fully-qualified binary names of concrete provider classes, one per line.""

JBoss AS7 currently emits a warning when CXF is packaged into applications because the second line of the file is not a valid class name. I'm not sure where is best, but the service file is probably not the best place for that extra information since it doesn't match what the ServiceLoader documentation says should be in the file.

I've seen the problem on 2.6.4, but the code is still the same in the latest release.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,313287,,,2013-02-18 06:34:04.0,,,,,,0|i1i2av:,313632,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support renewing SAML Tokens by default in the DefaultSecurityTokenServiceProvider,CXF-4831,12632590,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,15/Feb/13 14:27,09/Apr/13 15:15,14/Mar/19 02:30,15/Feb/13 14:41,2.7.3,,,,,,,2.7.4,,,,,,,,0,,,,,,,,"
Currently, the DefaultSecurityTokenServiceProvider only supports issuing + validating SAML Tokens by default, and does not support renewing them. This task is to add support for this by default.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,313086,,,2013-02-15 14:27:34.0,,,,,,0|i1i12f:,313432,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF - Rampart  interoperability issue: order of signature and encrypted key elements in XML ,CXF-4823,12631945,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,sgri,sgri,12/Feb/13 14:00,09/Apr/13 15:15,14/Mar/19 02:30,13/Feb/13 12:21,,,,,,,,2.5.10,2.6.7,2.7.4,,WS-* Components,,,,0,,,,,,,,"We have a CXF web service secured with WS-Security. The problem is that Axis2 client which uses Rampart module cannot handle response generated by CXF. Rampart  expects that xenc:EncryptedKey goes first, and ds:Signature is next. CXF puts elements in the opposite order. The workaround is
to re-order actions in Axis2 config file:
{code:xml}
<parameter name=""InflowSecurity"">
      <action>
        <!-- Signature Encrypt Timestamp  makes the Axis2 client to throw ""Actions mismatch"" exception !-->
        <items>Encrypt Signature Timestamp</items>
      </action>
    </parameter>
{code}

The question is: how to make CXF to change the order of signature and encrypted key elements in security header of the SOAP response to make it compatible with Axis2 clients? Since the order of action is the same in both Axis and CXF configuration files *Signature Encrypt Timestamp*, then it should work out of the box, shouldn't it ?


Response sample:
{code:xml}


<?xml version=""1.0"" encoding=""utf-8""?>
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">

  <soap:Header>
    <wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""
    xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
    soap:mustUnderstand=""1"">
      <wsu:Timestamp wsu:Id=""TS-6"">
        <wsu:Created>2013-02-10T20:22:51.879Z</wsu:Created>
        <wsu:Expires>2013-02-10T20:27:51.879Z</wsu:Expires>
      </wsu:Timestamp>     
      <ds:Signature xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""
      Id=""SIG-8"">
        <ds:SignedInfo>
          <ds:CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" />
          <ds:SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1"" />
          <ds:Reference URI=""#id-7"">
            <ds:Transforms>
              <ds:Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" />
            </ds:Transforms>
            <ds:DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1"" />
            <ds:DigestValue>
            otiRAVkSs777jSOZqqwBJlFILJo=</ds:DigestValue>
          </ds:Reference>
          <ds:Reference URI=""#TS-6"">
            <ds:Transforms>
              <ds:Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" />
            </ds:Transforms>
            <ds:DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1"" />
            <ds:DigestValue>
            wAJxVtTNvbPX6aHqrrX7/SOPplQ=</ds:DigestValue>
          </ds:Reference>
        </ds:SignedInfo>
        <ds:SignatureValue>
        Dy/OVbJOTr1lfqzbZCGxUlanJ0YKVmnyDV9F3Z1aJtB093rXffnKX35o4CxfWqVY/k1COF1TG6mfDZ6nbd1PqM6Vlbk8hBL5iSUFZAKe6RgilD9nYZmWPl2KaLAVrHS66jdmczWGWUh/15YTWB1s8cyNbBSVrwcyKx9FlOgI3pY=</ds:SignatureValue>
        <ds:KeyInfo Id=""KI-6029833839643E518513605277718807"">
          <wsse:SecurityTokenReference wsu:Id=""STR-6029833839643E518513605277718808"">

            <wsse:KeyIdentifier EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary""
            ValueType=""http://docs.oasis-open.org/wss/oasis-wss-soap-message-security-1.1#ThumbprintSHA1"">
            4ZQm/eQOxdcAHohj09+Uk4ex3Lw=</wsse:KeyIdentifier>
          </wsse:SecurityTokenReference>
        </ds:KeyInfo>
      </ds:Signature>
 <xenc:EncryptedKey xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#""
      Id=""EK-6029833839643E518513605277718755"">
        <xenc:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#rsa-1_5"" />
        <ds:KeyInfo xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
          <wsse:SecurityTokenReference>
            <wsse:KeyIdentifier EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary""
            ValueType=""http://docs.oasis-open.org/wss/oasis-wss-soap-message-security-1.1#ThumbprintSHA1"">
            mxCXzekKZqaJcrE3UmHFGOswTnI=</wsse:KeyIdentifier>
          </wsse:SecurityTokenReference>
        </ds:KeyInfo>
        <xenc:CipherData>
          <xenc:CipherValue>
          SQWm0I/90/iJUEDAts1jBPC4/W67aDTwrWGzZn1sYYRKyiFx/SxaGj3rtO3Nx8548I0e0ymfGN78ukjcytsUZHoABSNPmJb773Ou4r1l/S7oPqrGCW87A3OpFj3ri62u+iVP3c0u58tnjdIyKXqyeuZTpjtRETlTviH7O4YyInk=</xenc:CipherValue>
        </xenc:CipherData>
        <xenc:ReferenceList>
          <xenc:DataReference URI=""#ED-5"" />
        </xenc:ReferenceList>
      </xenc:EncryptedKey>
    </wsse:Security>
    <Action xmlns=""http://www.w3.org/2005/08/addressing"">
    http://service.resadapter.myidtravel.lhsystems.com/RESAdapterServicePortType/getAvailabilityResponse</Action>
    <MessageID xmlns=""http://www.w3.org/2005/08/addressing"">
    urn:uuid:f8f2570d-cd35-404a-b413-e5322ca92d01</MessageID>
    <To xmlns=""http://www.w3.org/2005/08/addressing"">
    http://www.w3.org/2005/08/addressing/anonymous</To>
    <RelatesTo xmlns=""http://www.w3.org/2005/08/addressing"">
    urn:uuid:65935AD1BEED993E3D1360527858578</RelatesTo>
  </soap:Header>
  <soap:Body xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
  wsu:Id=""id-7"">
    <xenc:EncryptedData xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#""
    Id=""ED-5"" Type=""http://www.w3.org/2001/04/xmlenc#Content"">
      <xenc:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#tripledes-cbc"" />
      <ds:KeyInfo xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
        <wsse:SecurityTokenReference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""
        xmlns:wsse11=""http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd""
        wsse11:TokenType=""http://docs.oasis-open.org/wss/oasis-wss-soap-message-security-1.1#EncryptedKey"">

          <wsse:Reference URI=""#EK-6029833839643E518513605277718755"" />
        </wsse:SecurityTokenReference>
      </ds:KeyInfo>
      <xenc:CipherData>
        <xenc:CipherValue>
        hk6afclqW40YD/Lt91WdResuoUwzUwB9HYmcmmnMS2O3TdqOm7UC09l4h5Y2BCYoqM6+eBw8C1aS3Pg8TCYVksfVDRUW8Oai5VT+Hk7ihs/ABE2xZBeo2h50Nnx1EGVhizJfm2Be37yyJFz4i0MhI51Lto2LZvRppChyywe9GBdmxyC3+X+lM5cgSBRWPPi11KYgdNhcy6+FHaij5ZW4TjIlbg98gNGaGq8/5tR2H0luYadEq02bzMj0Qqjqxze7ixND9n750+BM89amhsnOXWCAbN9DXBjvA57qJSqmDRyyejUgj6srHV2n7VRMof75JpcmIdB0kfKMRPGXq0Jcd6LZIjjeG8+nit7HoJBRPk7VN3BO2A+5VZEjPW4Csb+4+KSx5+cmquIX+dxJvJ6M86iglkUVb+M+syekJffOVwOgFlZcZx54JL9O2VJIzsongff3KtYBg6Hxfhsx80ZfwTtH/6T8pf68rWF3MG6xSbP+cv6UjTegjQ/j84b7D2Gga5Vv5y+9c9PYlgpUIFX91Bx1RzmR+gkgEZ5EVG8OfhIlM6DGFyayXhSi0en4vpuRYu9qhOJKIgEjA7egc2G6rH81RQhObp4p9m1mlJrBakiUzxzayMsYXbzPduXTXdU7q2gEo/ZzjABnD9VVUY5oyMIGclnNDCNOtrVnnKm3zsM2xYlMhjIxUdTSFGHJmZXbGeApkZUef/b69hXvy3d0d6MP0L5zQatECj8NoOdIx5oJo26jsJId0wpPshkEAx+sgOu7Dnt+6sTnKg4zYQIKm4951d0nz9qP1bp3iWaRuid4oiZXfjBioqMom1teORmm1tEldTBen8Qa1p65y6sutb0D9B3E/j6ovHuaMs2J76+eU5q82N8fjkIPakvElVMBlvHIrgnyiburB9iCRjaI9SBcPbIlS1N6HExcdJSoB4o+glQb54o0KwV57919HvaZKii7tiIpDBMBPV7q3dyi5iXc0xYc7dFifwlxOyboH0ZlMBv2jmzo+sMZB7sN9BwAkJzRWKu9Bj44vZAqBSWL3dLIyKWSzDFchOV7xu8BBREr2sJKk2v0eFlIFwO8rfAowpgt0JLex0txXqIRx8gMq94lrAjquv4ADu91ImckDI8x7bURCax3O1YYA0un/oM5xH+kCuBk6dJNj+mUGOtM7qaJJEqGNpfMIIhoOCnc2BVP8WIt7CMVHM71DxOCWBZkQPFH+HlNs8MilXxWUFEjOFF5Fao8Cx62erSK3JBauiCdeMzVVyX8Xewwhg4pklYS/6fEpvovxgAt6DijH5cWfUDcwJIUMwY0JAMzC7uDB6kjTgYyphtcxHnS01xZISJeLqpPn8XOoQW1V2eUpcrITFHFgXd+85uCnP+vfVS9Z0Uv/ZNmYDqOnm837Y7VRNb9NIlUlgb6HNFVUThhqm6w0QzYMT3Vc304sc4LrvL/kfrLtqVzQwAT8zoikyOEj3kUOUdehJNWu4/yvyxZsyeQn436m/bPiZcYxQaN596VGRTOk8sYL5wDP7hWolBijswT9MFLb/lyK6fUinFc84pgq7gt8u7MoPWl4fxtzoMgyBvr85Rgtoyqopb0h+1XGcXd6rdC2JkEr3fCeM6M7CBAO/VycaLzDOkLW7TWlWEZDN/bQRGaV6QphY1l7qN3IpS8g1tnPSvbW0ots8OtLgyjIDidb6kPRKIzT16q8cTUuUZT8cO3NXMaIOwfbEKPN928pkQF8V15Bma2KBdMCWN5jHmLmLJZGWhXVi/flgo86Eoy8GpCJmr5IowrDfYOZZZbsw6m4bdTUsksDLpdXczlsY+8m6N1kQNwxXOJHbnbEb/e/qHAXmjgJ+fDVRjBd3MrJEZkcOf+bKP7NGjbY8AQzUgpZ/RdOfJ19WlwpvfPPG9f3UbifcUBliDTHFD2igeal3IUBVgYaGzmsw1fzT+G5nip64MadaVAF33TTMqFgQ3Pm/U+f/f0jKnJ9DnV4eH/k9XQyyvpbm58wHwBauI99vqWmce9gRkOwSc4X8eURM9I4ajCwod7iUUugbXvUegh9VckQncZPromBwL3R55RCPfj7XcbfjhSIrPbSbM+/TgP+0yTnwdJogm6F26IlfoPbbxWBhjgaGOW8P42ytJupbnVZUzChaC1Xip6UHDaYdy6WOsoasbp2LExY+LTmOrt/m1dy18z2DkO4nmlGBB8+KjjFh+7bD71a0shOoXImmW3paIudcDLMyhjUp0VfwXPUwiQnmgBLqj0FEF3yvul5ptJvzq6ZYWJ293IOVZFbxKmhyJVYctl2EmfaPtEYUMak3QIntWYr6PT5FRj2YBqiuhqsqOwA7CGSetbJ+9ArRd8JKZS5KEmsPlVloESzD7kwCjfkto+l+rb/dkDa5Bjk3X29dQC/U9vyxb5YZ8zxAYNii67e+LhfpxoCkFi22WXjFPsmRctFwpIVuTgObObRAqAcwNwk5QGrb9hNdCQZZ8RyVBx3T1m6k+5ZdRUkv9Vo/gdrh5WQa5oONa0J7e5jO/Ursim1/z86xbs0Wupu/90XHRuAtmxBBbvCv6ja2DquhvUFldhPueW+B1Ltr11OlZZ9jrGwmfGlwr5Z83v/PK9+nOvai9ibbOAe9j02uZBurigBPMRo0lBtcqu2Pj90WlR00HHZ8gPuxhL5siPr9f5aPWaVoPJtbACA+ukQveq5094B59Ez2vEFf3fZySHqgqMXtP+E19chT32mkF/ggq9I84jKurvDlmRRlFt/D/UAqVpON3W/0+CI7CeJ2/70IWgvdPghCuu70/sGXnXLX7EpdAnzDSwuCdt1KU5ZXvWKyWH86pizkRXNx3drSsLYVz1zbA5Y189aE4TvbYVvvxfxfe1CehLsJxzOmtmgu5fOUEEAyv6386PNPOBapsOW0Py46xpzAF9C9oqG4T+FHukaJGnMhk/oLMwIpruWfJt5qV2ydhCgQcWDf/biTQUUomK6mo+Bs/KuShUo+z0Ki4YbdjtQtYhNeqJqFYMKUSmBVqf+Pm5e63SuxXUBNqAaJtF9k4ZeolYoTfIILuNBytuuk6a5BGNhJ3gl+AKQBxFs8tjiharbLC0ckoECSheAPdb2OT7aCP5dxQfP5ovgRNQXIWlQJj7gxXQQjzIS3BcbaLegbi3VIt569bUiLT0wMnLgseBGmW9W+ue8pGEq/hqejgaaHn44qW7eNNwWojhSSjPq3FBQb0L3OedyYPom/w/F62fFTpe1WxTr3xMFOMp0JtXnAMx+tJvW1pI04wqXaIzV8AdBBGMvqTtJZ0pVgtxI3bBcIZP9ymIIIQ/odC96cZbM9ywVNknJHtptH0VUq2r0iWM62BHrSDYHJd+6rBwRQf9/LOk/JkVEPfggKkYkVPGMix3DB3ZvNUGxjbuZO/ReT+1XktijvOJX5sCcGn/pFIWKIxepiB5dtZ5AJeNqrbnc8asHb+bh5rPn/RkUCTcyEFCKGjgqpX5df9h+To0f5mkaTZP84g2dKDG+O08PojTdXr+QOHug5yPlC1cABbpkpnUbqnpJAh+lWl48GugnoIZZTbTISeGOFPNy4wdRKWaoFNITTnuST+X8HLGsybQPHhB0PaCDz8VKxq2gQw3rgNND78I6aLdNfaV9hZnOZuCX2qDNH34zXl4zCZd09r77mFQyCLO7lgQlTUT+tt+8+VAe6yTje34xX7W3jreDoVjVeL/+rzJmS6geg0RCYjE5I8OScYbx3vDyy8ONP+w0TByhOqb8LHEqfHSjUki3rQ9/2KZHJhHt7ZZ7bMCVJdzlEZOh/SF8auL83FKLkMxv9kdH9b8noZMtZzu1U7Q8j77J6kRx3wfJI3PCPzI7OOy7TN0w+/uqEwQSQ/LEqwdkBZKL9R68ngCKjxeIOEctqI0wc1fc/IwQ6iTZujYwdZNmMbiDKxM9gbklUOL4+iLrpmAOiaTXamAkrN7Xh29XGMvxtv7uC2derda0LszlGejRJISAqX1vkPclLU1q5UEUB6CrF0ilPQ7fkuJVaL920ooOW2LZoXBvUJ1Kl1OvqoRbbfiZIWzNZXTujRcwOOo9mxbWt5YBiLZN84tBWySeDuSqeNX4dXOs2rFz7IVBgLQH//64hSCG4GIBs00RElF8Fg/FqLg8wEowJA1OpZn49/j3Y9ZeNjGsBboRd7ZsOZjIY9w9Tn2wxpP3rXWMaKgUQkYU03cHdiSefQO4qGgpbQq8CQrBMQY1ZahEVPVPP33BST8XgDB9wQh5E7r8BqeDTMSpYmaObCnv3xRQzvZ6SBtWtkco/XbkEPNgMleFu0e3Lte/PmsstvNABfGbA==</xenc:CipherValue>
      </xenc:CipherData>
    </xenc:EncryptedData>
  </soap:Body>
</soap:Envelope>


{code}



Rampart configuration : 
{code:xml}
<parameter name=""InflowSecurity"">
      <action>
        <items>Signature Encrypt Timestamp</items>
      </action>
    </parameter>
{code}

CXF configuration:
{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xmlns:jaxws=""http://cxf.apache.org/jaxws""
       xmlns:wsa=""http://cxf.apache.org/ws/addressing""
    xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
                        http://cxf.apache.org/ws/addressing http://cxf.apache.org/schemas/ws-addr-conf.xsd"">

    <import resource=""classpath:META-INF/cxf/cxf.xml"" />
    <import resource=""classpath:META-INF/cxf/cxf-extension-*.xml"" />
    <import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />

    <!-- Spring manage ServiceBean -->
    <bean id=""RESAdapterService"" class=""net.worldticket.edi.protocol.ota.RESAdapterService"" />

    <!--
    Log4j is set to be used in META-INF\cxf\org.apache.cxf.Logger
    Make sure that log4j INFO level is set for the following interceptors or
    for the package org.apache.cxf to make them work.
    -->
    <bean id=""logInInterceptor"" class=""org.apache.cxf.interceptor.LoggingInInterceptor""/>
    <bean id=""logOutInterceptor"" class=""org.apache.cxf.interceptor.LoggingOutInterceptor""/>

    <!--
         WSS4JInInterceptor for decrypting and validating the signature of the SOAP request.
    -->
    <bean
        id=""TimestampSignEncrypt_Request""
        class=""org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"">
        <constructor-arg>
            <map>
                <entry key=""action"" value=""Signature Encrypt Timestamp""/>
                <entry key=""signaturePropFile"" value=""interop.properties""/>
                <entry key=""decryptionPropFile"" value=""interop.properties""/>
                <entry key=""passwordCallbackClass"" value=""net.worldticket.myIdTravel.PasswordCallback""/>
            </map>
        </constructor-arg>
    </bean>

    <!--
         WSS4JOutInterceptor for encoding and signing the SOAP response.
    -->
    <bean
        id=""TimestampSignEncrypt_Response""
        class=""org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor"">
        <constructor-arg>
            <map>
                <entry key=""action"" value=""Signature Encrypt Timestamp""/>
                <entry key=""user"" value=""useReqSigCert""/>
                <entry key=""signatureUser"" value=""bob""/>
                <entry key=""signaturePropFile"" value=""interop.properties""/>
                <entry key=""encryptionPropFile"" value=""interop.properties""/>
                <entry key=""passwordCallbackClass"" value=""net.worldticket.myIdTravel.PasswordCallback""/>
                <entry key=""signatureParts"" value=""{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body;{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp""/>
                <entry key=""encryptionParts"" value=""{Content}{http://schemas.xmlsoap.org/soap/envelope/}Body""/>
                <entry key=""encryptionSymAlgorithm"" value=""http://www.w3.org/2001/04/xmlenc#tripledes-cbc""/>
                <entry key=""encryptionKeyTransportAlgorithm"" value=""http://www.w3.org/2001/04/xmlenc#rsa-1_5""/>
                <entry key=""encryptionKeyIdentifier"" value=""Thumbprint""/>
                <entry key=""signatureKeyIdentifier"" value=""Thumbprint""/>
            </map>
        </constructor-arg>
    </bean>

    <!-- JAX-WS Service Endpoint -->
    <jaxws:endpoint id=""resadapter"" implementor=""#RESAdapterService"" address=""/resadapter"">
        <jaxws:outInterceptors>
             <ref bean=""logOutInterceptor""/>
             <ref bean=""TimestampSignEncrypt_Response""/>
         </jaxws:outInterceptors>
         <jaxws:inInterceptors>
             <ref bean=""logInInterceptor""/>
             <ref bean=""TimestampSignEncrypt_Request""/>
         </jaxws:inInterceptors>
        <jaxws:features>
            <wsa:addressing allowDuplicates=""false""/>
        </jaxws:features>
    </jaxws:endpoint>

</beans>
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-02-12 14:13:33.373,,,no_permission,,Unknown,,,,,,,,,,,312441,,,Thu Feb 14 07:04:34 UTC 2013,,,,,,0|i1hx2v:,312787,,,,,,,,"12/Feb/13 14:13;coheigea;
Have you tried changing the Rampart configuration so that ""Encrypt"" is before ""Signature""?

Colm.","12/Feb/13 14:18;coheigea;
>  Since the order of action is the same in both Axis and CXF configuration files Signature Encrypt 
> Timestamp, then it should work out of the box, shouldn't it ?

No, they're different products. I suspect you're using an older version of Axis which uses WSS4J 1.5.x, which had different rules based around how Signature Elements are added to the security header.

Colm.","12/Feb/13 14:18;sgri;Yes I did and it works, but the problem is that the company who connects to us with Axis2 is not willing to change configuration because if they change configuration, then they may have errors connecting other services who use Axis2 on the server side. That is not an option for us.","12/Feb/13 14:23;sgri;I have re-produced the problem locally with wss4j version 1.6.9, Axis and Rampart version 1.6.3, CXF version 2.7.3. All of them are at the latest version, so this is not caused by outdated libraries.","12/Feb/13 14:38;coheigea;
There is no Rampart release version 1.6.3:

http://axis.apache.org/axis2/java/rampart/download.html

Colm.","12/Feb/13 14:51;sgri;Sorry, Axis and Rampart 1.6.2","13/Feb/13 09:28;sgri;Eventually I found a workaround. I have implemented a javax.servlet.Filter which re-orders XML elements before returning response to the client. I have also removed the message body from the signature, now signature is computed on timestamp element only, otherwise re-ordering ""encrypted key"" and ""signature"" elements causes an error when checking signature on the client side.

Nevertheless this issue has to be fixed, because it is frustrating to not be able to serve Axis2 clients out-of-the box. I think a new parameter has to be added to CXF endpoint configuration to activate Axis2 compatibility mode.","13/Feb/13 11:03;dkulp;
Has an issue been raised in Rampart?","13/Feb/13 12:21;coheigea;
I looked into what was happening here some more. The problem is due to a fix for WSS-231:

https://issues.apache.org/jira/browse/WSS-231

This was to support ""Signature Timestamp"" type actions in WSS4J 1.6.x. Therefore, I do not think that any Axis2 clients using WSS4J 1.6.x could work with this type of ordering, unless Rampart is doing some hack under the hood. In any case, I've fixed the ordering for the next release:

https://issues.apache.org/jira/browse/WSS-424

Colm.","14/Feb/13 07:04;sgri;Colm,

Thank you very much for fixing the issue so quickly.",,,,,,,,,,,,,,,,,,,,,,,,,,
UseAsyncMethod annotation does not work with Provider interface,CXF-4821,12631660,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,elfarto,elfarto,10/Feb/13 18:36,10/Apr/17 19:04,14/Mar/19 02:30,27/Mar/17 18:23,2.7.3,,,,,,,3.0.13,3.1.11,,,JAX-WS Runtime,,,,0,,,,,,,,"The UseAsyncMethod annotation does not work with the Provider interface. The problem seems to be the JAXWSProviderMethodDispatcher class, it currently gets the invoke(Object) method, which you can't actually annotate with UseAsyncMethod.",,,,,,,,,,,,,,,,,,,,10/Feb/13 18:37;elfarto;provider-async.patch;https://issues.apache.org/jira/secure/attachment/12568763/provider-async.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2017-03-27 18:23:40.46,,,no_permission,,Unknown,,,,,,,,,,,312156,,,Mon Mar 27 18:23:40 UTC 2017,,,,,,0|i1hvbj:,312502,,,,,,,,10/Feb/13 18:37;elfarto;Added my attempt at a patch,27/Mar/17 18:23;dkulp;Heavily modified patch applied ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2js throws Exception,CXF-4820,12631549,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,venkatgk22,venkatgk22,09/Feb/13 02:09,09/Apr/13 15:15,14/Mar/19 02:30,27/Feb/13 17:29,2.7.3,,,,,,,2.5.10,2.6.7,2.7.4,,WS-* Components,,,,0,,,,,,,,"wsdl2java.bat works fine for the same wsdl file & generates all the java files. 
But i want to use it in javascript. 

>wsdl2js.bat -wv 1.2 -verbose HAN_Server.wsdl
wsdl2js -wv 1.2 -verbose HAN_Server.wsdl
wsdl2js - Apache CXF 2.6.6


WSDLToJS Error : java.lang.IndexOutOfBoundsException: Index: 0, Size: 0

org.apache.cxf.tools.common.ToolException: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:308)
        at org.apache.cxf.tools.wsdlto.javascript.JavaScriptContainer.execute(JavaScriptContainer.java:154)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:67)
        at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScript.run(WSDLToJavaScript.java:60)
        at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScript.main(WSDLToJavaScript.java:97)
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
        at java.util.ArrayList.rangeCheck(ArrayList.java:604)
        at java.util.ArrayList.get(ArrayList.java:382)
        at org.apache.cxf.tools.wsdlto.javascript.JavaScriptContainer.execute(JavaScriptContainer.java:133)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:300)
        ... 5 more

>

I get exactly the same error in 2.7.3 too. ",,,,,,,,,,,,,,,,,,,,19/Feb/13 01:10;venkatgk22;HAN_Server.wsdl;https://issues.apache.org/jira/secure/attachment/12569881/HAN_Server.wsdl,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-02-14 21:56:19.796,,,no_permission,,Unknown,,,,,,,,,,,312045,,,Wed Feb 27 17:29:59 UTC 2013,,,,,,0|i1humv:,312391,,,,,,,,"14/Feb/13 21:56;dkulp;
CXF doesn't support anything other than WSDL 1.1.   Probably should remove the -wv flags from everything.   In anycase, remove the ""-wv 1.2"" flags.","14/Feb/13 22:10;dkulp;
Added a better exception message.","15/Feb/13 22:30;venkatgk22;When i dont specify version 1.2, i get another error. 
org.apache.cxf.common.xmlschema.UnsupportedConstruct: GROUP_CHILD


wsdl2js -wv 1.1 -verbose http://172.18.90.72:8001/multispeak/services/HAN_Server?wsdl
wsdl2js - Apache CXF 2.7.3

Feb 15, 2013 2:27:36 PM org.apache.cxf.common.xmlschema.XmlSchemaUtils unsupportedConstruct
SEVERE: GROUP_CHILD

WSDLToJS Error : org.apache.cxf.common.xmlschema.UnsupportedConstruct: GROUP_CHILD

org.apache.cxf.tools.common.ToolException: org.apache.cxf.common.xmlschema.UnsupportedConstruct: GROUP_CHILD
	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:308)
	at org.apache.cxf.tools.wsdlto.javascript.JavaScriptContainer.execute(JavaScriptContainer.java:154)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:67)
	at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScript.run(WSDLToJavaScript.java:60)
	at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScript.main(WSDLToJavaScript.java:97)
Caused by: org.apache.cxf.common.xmlschema.UnsupportedConstruct: GROUP_CHILD
	at org.apache.cxf.common.xmlschema.XmlSchemaUtils.unsupportedConstruct(XmlSchemaUtils.java:657)
	at org.apache.cxf.common.xmlschema.XmlSchemaUtils.getObjectParticle(XmlSchemaUtils.java:455)
	at org.apache.cxf.javascript.ParticleInfo.forLocalItem(ParticleInfo.java:133)
	at org.apache.cxf.javascript.types.SchemaJavascriptBuilder.complexTypeConstructorAndAccessors(SchemaJavascriptBuilder.java:190)
	at org.apache.cxf.javascript.types.SchemaJavascriptBuilder.generateCodeForSchema(SchemaJavascriptBuilder.java:107)
	at org.apache.cxf.javascript.types.SchemaJavascriptBuilder.generateCodeForSchemaCollection(SchemaJavascriptBuilder.java:84)
	at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScriptProcessor.process(WSDLToJavaScriptProcessor.java:87)
	at org.apache.cxf.tools.wsdlto.javascript.JavaScriptContainer.execute(JavaScriptContainer.java:147)
	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:300)
	... 5 more
","16/Feb/13 00:19;dkulp;
We'd likely need to see the WSDL for that.   There are a bunch of constructs that the javascript client doesn't support, but this is being thrown from the XmlSchemaUtils class which is not specific to the javascript stuff.   ","19/Feb/13 01:10;venkatgk22;Attaching the wsdl file. 
","27/Feb/13 17:23;dkulp;There is a bug in the error messages.  The error SHOULD be:
{code}
SEVERE: Limitation: unsupported construct XmlSchemaChoice found in {gml_V4.1_Release}LinearRingMemberType. 
{code}

as xs:choice constructs are not supported by the javascript client at this time.  I'm cleaning up the Message.properties files in this area to make sure the error messages are properly displayed.",27/Feb/13 17:29;dkulp;Fixed the error messages.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF validates soapHeaders and barfs on mustUnderstand attributes,CXF-4819,12631516,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,davidkarlsen@gmail.com,davidkarlsen@gmail.com,08/Feb/13 20:42,09/Apr/13 15:15,14/Mar/19 02:30,15/Feb/13 19:20,2.7.1,2.7.2,2.7.3,,,,,2.6.7,2.7.4,,,JAXB Databinding,,,,0,,,,,,,,"Related issue is CXF-3813.

A request:
{noformat}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
        <soapenv:Header>
                <ns1:AutHeader xmlns:ns1=""somenamespace""
                        soapenv:mustUnderstand=""0"">
                                <ns1:someelm></ns1:someelm>
                        </ns1:ClientContext>
                </ns1:AutHeader>
        </soapenv:Header>
        <soapenv:Body>
                .....   
        </soapenv:Body>
</soapenv:Envelope>

{noformat}

fails on validation because mustUnderstand is not part of the schema declaring the header.

This worked when CXF-3813 got implemented - but has started failing again at some point after that.",Might fail on several versions than I provided - but at least these fail,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,312012,,,Mon Feb 18 08:46:12 UTC 2013,,,,,,0|i1hufj:,312358,,,,,,,,18/Feb/13 08:46;davidkarlsen@gmail.com;Adding link to discussion on mailinglist: http://cxf.547215.n5.nabble.com/CXF-4819-breaking-validation-of-mustUnderstand-attribute-tt5723289.html#none,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The body and header appears in reverse order for outbound soap message,CXF-4818,12631467,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,xuhaihong,xuhaihong,08/Feb/13 15:59,09/Apr/13 15:15,14/Mar/19 02:30,14/Feb/13 21:48,2.6.6,,,,,,,2.6.7,2.7.4,,,Soap Binding,,,,0,,,,,,,,"In the scenario below, the body and header elements are in reverse order, which will cause issue for client application.
Step to reproduce :
a. Use WebServiceProvider as the server side, and return a soap message with the content below:
<SOAP-ENV:Envelope xmlns:SOAP-ENV=\""http://schemas.xmlsoap.org/soap/envelope/\""><SOAP-ENV:Body><provider>my message</provider></SOAP-ENV:Body></SOAP-ENV:Envelope>
b. Enabling addressing for the server/client side

The interceptor chain will be something like :

Chain org.apache.cxf.phase.PhaseInterceptorChain@29de29de. Current flow:
  setup [PolicyOutInterceptor]
  pre-logical [MAPAggregatorImpl, SwAOutInterceptor, SoapHeaderOutFilterInterceptor, SecurityVerificationOutInterceptor]
  post-logical [SoapPreProtocolOutInterceptor]
  prepare-send [MessageSenderInterceptor, MessageModeOutInterceptor]
  pre-stream [LoggingOutInterceptor, AttachmentOutInterceptor, StaxOutInterceptor]
  pre-protocol [SAAJOutInterceptor, MAPCodec, PolicyBasedWSS4JOutInterceptor, UsernameTokenInterceptor]
  write [SoapOutInterceptor]
  marshal [BareOutInterceptor]
  post-protocol [PolicyBasedWSS4JOutInterceptorInternal]

It seems that, although we add a header checing in the SAAIOutInterceptor, while those addressing headers are not there at that time, then SoapOutInterceptor will add the header after the existing body elements.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,311963,,,2013-02-08 15:59:17.0,,,,,,0|i1hu4n:,312309,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS AsyncResponse implementation needs to call AsyncContext.complete after the request is done,CXF-4817,12631450,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,08/Feb/13 13:55,08/Dec/14 10:48,14/Mar/19 02:30,12/Feb/13 11:44,,,,,,,,2.7.4,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,This will help with a better recycling of threads plus will get AsyncListener onComplete and onError callbacks called - for the registered completion callbacks be notified,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-12-05 10:29:53.274,,,no_permission,,Unknown,,,,,,,,,,,311946,,,Mon Dec 08 10:48:40 UTC 2014,,,,,,0|i1hu0v:,312292,,,,,,,,"08/Feb/13 22:06;sergey_beryozkin;r1444117,r1444252",12/Feb/13 11:44;sergey_beryozkin;Lets limit the fix to the trunk for now and push to 2.7.x on request,"05/Dec/14 10:29;efouret;The fix for this issue was rollbacked with CXF-5414, so this issue is still present in CXF 3.0.X, could it be reopened?","05/Dec/14 11:06;sergey_beryozkin;Hi - I've just rerun a test and I can see a registered CompletionCallback being called - are you seeing it is not in your case ?

","05/Dec/14 13:34;efouret;Thanks for your quick reply. {{javax.ws.rs.container.CompletionCallback.onComplete()}} is called but {{javax.servlet.AsyncContext.complete()}} is not and thus any {{javax.servlet.AsyncListener}} declared (e.g. inside a servlet filter) won't see a call to {{onComplete()}}.
It seems the code initially committed to fix this issue resulted in calling {{AsyncContext.complete()}} (through {{Servlet3ContinuationProvider.reset()}}) which is no longer the case.","05/Dec/14 13:59;sergey_beryozkin;It appears to be something very subtle. CXF AbstractHttpDestination does call ContinuationProvider complete(), in case of Servlet3Continuation it leads to an immediate call to asyncContext.complete().

Did you have your custom listeners called before this change ? 
It migh be that the current container you useis too sensitive to having a context.complete() method being called - the exception is ignored in such cases.
Can you please investigate and check if it is the case for you ?

Cheers, Sergey

","05/Dec/14 15:42;efouret;I continued investigating and found that the real issue is that the custom {{AsyncListener}} gets lost when the response is ready. Indeed, this will indirectly cause a call to {{Servlet3ContinuationProvider.getContinuation()}} which will call {{Servlet3Continuation.startAsyncAgain()}} which will then call {{req.startAsync()}}. This last call erases previously registered listeners and thus no call to {{onComplete()}} will be seen on any custom listener.
Perhaps {{Servlet3ContinuationProvider.getContinuation()}} shouldn't call startAsync() when a continuation already exist?","05/Dec/14 16:24;sergey_beryozkin;Calling startAsync is the only way, as far as I know, to ensure that multiple timeouts (those managed by TimeoutHandler) work. 

However, I think we can try and optionally avoid restarting a context if a contextual property is set, for example, if the application knows TimeoutHandler, if any, will never re-suspend the continuation, then setting a property would do.

","05/Dec/14 16:47;sergey_beryozkin;Actually, see
https://docs.oracle.com/javaee/6/api/javax/servlet/AsyncListener.html#onStartAsync%28javax.servlet.AsyncEvent%29

The custom listener is expected to re-register itself. 

thanks","05/Dec/14 17:05;efouret;Thanks. This seems to be a tomcat issue then, since tomcat clears the list of listeners after firing the {{onStartAsync}} event with the same {{AsyncContext}}, thus preventing listeners from re-registering themselves.
Thanks again for your time.","05/Dec/14 17:24;sergey_beryozkin;np, I'll experiment with the JAXRS tests and check if the optional blocking of restartAsync does not affect them, if not then I guess we can optionally block a restart","07/Dec/14 21:22;sergey_beryozkin;Just a quick question: is there a technical reason the servlet filter-level listeners can not be impemented as a CompletionCallback ?
thanks, Sergey",08/Dec/14 09:07;efouret;We need to log I/O along with some stats. {{CompletionCallback}} doesn't provide access to the response and {{ContainerResponseFilter}} doesn't allow to retrieve data stored in the {{ContainerRequestContext}} (within a {{ContainerRequestFilter}}). This is why we resorted to using a servlet filter.,"08/Dec/14 10:07;sergey_beryozkin;Thanks for the clarification. 
ContainerRequestContext has a set/get Property method, and this context is available to the response filters so I think the data should be available - if it does not work in your case then it is a bug - please open a JIRA issue. You can also get HttpServletResponse passed as a context parameter to a JAX-RS service and then to a CompletionCallback instance.
I'm still open though to the optional blocking of async context restarts

","08/Dec/14 10:48;sergey_beryozkin;I've updated the code to check an ""org.apache.cxf.continuation.block.restart"" contextual property. This property needs to be used with care, enabling it is in conflict with making a JAX-RS TimeoutHandler perform a new suspend action. It can only make sense if the application is not doing multiple suspend actions (can be JAX-RS or JAX-WS)",,,,,,,,,,,,,,,,,,,,,
Allow use of @Policy on Service Implementation as alternative to Interface,CXF-4816,12631185,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,pellcorp,pellcorp,pellcorp,07/Feb/13 01:05,09/Apr/13 15:15,14/Mar/19 02:30,28/Mar/13 14:13,2.7.3,,,,,,,2.7.4,3.0.0-milestone1,,,WS-* Components,,,,0,,,,,,,,"The PolicyAnnotationListener has a section for registering @Policies from the Impl, so I am changing the type to a Bug as its not workng.

",,,,,,,,,,,,,,,,,,,,07/Feb/13 21:25;dkulp;methodpatch.txt;https://issues.apache.org/jira/secure/attachment/12568465/methodpatch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-02-07 21:25:16.496,,,no_permission,,Unknown,,,,,,,,,,,311681,,,Thu Mar 28 14:13:44 UTC 2013,,,,,,0|i1hse7:,312027,,,,,,,,"07/Feb/13 09:31;pellcorp;The JaxWsServerFactoryBean create eventually calls PolicyEngineImpl.getAggregatedServicePolicy(ServiceInfo si), but the SERVER_CREATED event
comes after this, so the policies from the ServiceImpl are not part of this aggregated policy.


Since the SERVER_CREATED event acts on the Endpoint anyway, I have moved this call to the ENDPOINT_SELECTED which will allow class level annotations to be effective for Service Implementations.

Without significant refactoring of the PolicyAnnotationListener I don't think there is an easy way to support method level annotations against the impl.","07/Feb/13 21:25;dkulp;
Attaching a simple patch to use as a starting point for possibly having method level annotations.   I don't have time right now to fully test it or pursue it, but I don't want it lost so attaching here.","07/Feb/13 22:38;pellcorp;Thanks Dan, looking at the patch.  ","11/Feb/13 05:43;pellcorp;I used the patch and committed an initial set of updates.
However upon further consideration I think my changes are not quite correct.  I am calling the same method as for the interface, but really annotations on the Impl should probably be BINDING operations.

Also at the moment because the class annotations are encountered after the method annotations, any *_OPERATION_* annotations defined at class level will not be applied at the method level like they are for the interface.

So this requires some more thought and a bit of refactoring probably.  

The change to support class level annotations is correct and so that can be considered complete for 2.7.4.  So I might migrate the method level stuff to another jira if I don't get it done before 2.7.4 is released.



","28/Mar/13 14:13;dkulp;Marking resolved for 2.7.4.  If there are additional issues or updates, please add a new JIRA to resolve for a later version.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid login creds will send many requests to server,CXF-4815,12631108,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,dkulp,dkulp,06/Feb/13 18:18,09/Apr/13 15:15,14/Mar/19 02:30,13/Feb/13 18:52,2.5.9,2.6.6,2.7.3,,,,,2.5.10,2.6.7,2.7.4,,Transports,,,,0,,,,,,,,"
If you set authorizations stuff in the HTTPConduit with a wrong password or username and issue a GET, 20 requests are sent to the server.  For non-streaming connections (like GET), for the 401 response, the HttpURLConnection calls the Authenticator to get auth information.  We create a new PasswordAuthentication object and return it each time.  However, the HttpURLConnection does not compare that returned value with the previous value and will keep trying until it hits the http.maxRedirects value (default is 20).   

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-02-06 19:53:28.128,,,no_permission,,Unknown,,,,,,,,,,,311604,,,Thu Feb 07 16:30:31 UTC 2013,,,,,,0|i1hrx3:,311950,,,,,,,,06/Feb/13 19:53;chris@die-schneider.net;Very nice can I help with it in any way? Would setting the http.maxRedirects to another value be a workaround?,"06/Feb/13 22:23;dkulp;
Setting the ""http.maxRedirects"" as a system property would work around the issue, but it would HAVE to be set prior to any usage of HttpURLConduit.  Basically, set as a parameter to surefire/failsafe in the pom should work.   

That said, fix is committed and  merged to 2.7.x.  If you could double check with the latest snapshots, that would be great.

",06/Feb/13 23:53;chris@die-schneider.net;http://svn.apache.org/viewvc?view=revision&revision=1443132,"07/Feb/13 16:30;chris@die-schneider.net;This does not fully solve the problem. The authenticator now returns username/password one time and null on the next call. This makes HttpUrlConnection do 2 requests instead of 20 but it should be only one.

After talking to Dan we agreed that CXFAuthenticator should always return null in case of basic or digest auth as we are handling this in the HttpConduit already. A first test in Syncope shows that this seems to fix the issue. I will prepare a fix for this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support multiple AlgorithmSuite policy alternatives,CXF-4814,12631048,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,coheigea,coheigea,06/Feb/13 12:05,09/Apr/13 15:15,14/Mar/19 02:30,13/Feb/13 18:50,2.5.9,2.6.6,2.7.3,,,,,2.5.10,2.6.7,2.7.4,,,,,,0,,,,,,,,"
This task is to support processing multiple policies alternatives with different AlgorithmSuites. Currently it just takes the first AlgorithmSuite policy and enforces that on the inbound message.",,,,,,,,,,,,,,CXF-4875,CXF-4813,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,311544,,,2013-02-06 12:05:15.0,,,,,,0|i1hrjr:,311890,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java First @Policy at Operation level has some issues with supporting some policy alternatives,CXF-4813,12631024,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,pellcorp,pellcorp,pellcorp,06/Feb/13 08:27,09/Apr/13 15:15,14/Mar/19 02:30,14/Feb/13 10:38,2.7.3,,,,,,,2.7.4,3.0.0-milestone1,,,WS-* Components,,,,0,,,,,,,,"Policies with alternatives do not appear to be fully functional when applied at the Binding Operation level.  They work perfectly when applied at the BINDING level (So when the @Policy is added at the SEI class level).

I am attaching a test project which demonstrates the problem.  This is probably a issue that can be worked around so its not a high priority.

The only reason it became obvious was I wanted to be able to have no policy for operations such as Ping.

Policies which do not have any alternative (so a single wsp:All instead of a wsp:ExactlyOne) work perfectly.
",,,,,,,,,,,,,,,,,,,,06/Feb/13 08:28;pellcorp;PolicySample.tar.gz;https://issues.apache.org/jira/secure/attachment/12568186/PolicySample.tar.gz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,311520,,,Thu Feb 14 10:38:12 UTC 2013,,,,,,0|i1href:,311866,,,,,,,,06/Feb/13 08:28;pellcorp;Maven project with 2 broken tests showing the issue.,06/Feb/13 22:37;pellcorp;I am merging in the test suite to both 2.7.x and trunk.  Two of the tests will be @Ignore'd as they will break until bug is fixed.,14/Feb/13 10:38;pellcorp;thanks to Dan this issue is now resolved.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on MessageModeInInterceptor when sending empty SOAPBody,CXF-4812,12630913,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,jesus.castillo,jesus.castillo,05/Feb/13 17:46,09/Apr/13 15:15,14/Mar/19 02:30,14/Feb/13 17:21,2.7,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,JAX-WS Runtime,Soap Binding,,,0,,,,,,,,"I'm getting a NPE on MessageModeInInterceptor when sending a SOAP message with empty body. In addition, no WSDL and using JAX-WS Dispatch API and Provider interface with SOAPMessage.

Everything is fine if the SOAPBody contains a payload but it fails when is empty. This is the stack trace.


java.lang.NullPointerException
        at org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor.handleMessage(MessageModeInInterceptor.java:71)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:354)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:318)
        at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1074)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1010)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
        at org.eclipse.jetty.server.Server.handle(Server.java:361)
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)
        at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:627)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:51)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
        at java.lang.Thread.run(Thread.java:662)


and that line in the interceptor is:

    public void handleMessage(Message message) throws Fault {
        if (!bindingName.equals(message.getExchange().get(BindingOperationInfo.class)
                               .getBinding().getName())) {




It seems that the BindingOperationInfo is not found in the exchange.


This is the Test scenario:

1. Tested on CXF 2.7.0
2. NO WSDL. It's pure SOAP messaging. 
3. Soap 1.2 Binding although tested with 1.1. and is the same error.
4. Client side using JAX-WS Dispatch API with SOAPMessage.
5. Server side using JAX-WS Provider interface with SOAPMessage.

Rgds,

Jesus. ","Tested on Eclipse IDE environment on a maven-based project.
CXF version is 2.7.0
Java is JDK1.6.0_37
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-02-14 17:21:49.616,,,no_permission,,Unknown,,,,,,,,,,,311409,,,Thu Feb 14 17:21:49 UTC 2013,,,,,,0|i1hqpr:,311755,,,,,,,,14/Feb/13 17:21;ay;http://svn.apache.org/viewvc?view=revision&revision=r1444251,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.beans.IntrospectionException: java.lang.Exception not superclass of java.lang.Exception,CXF-4810,12630892,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,echaplet,echaplet,05/Feb/13 15:50,09/Apr/13 15:15,14/Mar/19 02:30,13/Feb/13 18:49,2.7.3,,,,,,,2.7.4,,,,Aegis Databinding,,,,0,,,,,,,,"On startup, I've got an exception thrown by org.apache.cxf.aegis.type.basic.BeanTypeInfo.initializeProperties() when calling Introspector.getBeanInfo(Exception.class, Exception.class); => Error initializing parameters for operation that throws java.lang.Exception.

It's very blocking for us, Apache CXF can't be launched normally !

Example with a method of a webservice :
@WebMethod(operationName = ""doSomething"", action = ""urn:doSomething"")
@WebResult(name = ""something"")
List<MyObject> myMethod(@WebParam(name = ""myParam"") String s) throws Exception;

Stack Trace :

Caused by: java.beans.IntrospectionException: java.lang.Exception not superclass of java.lang.Exception
	at java.beans.Introspector.<init>(Introspector.java:374)
	at java.beans.Introspector.getBeanInfo(Introspector.java:232)
	at java.beans.Introspector.getBeanInfo(Introspector.java:218)
	at org.apache.cxf.aegis.type.basic.BeanTypeInfo.initializeProperties(BeanTypeInfo.java:281)",CXF with Spring on Tomcat,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,311388,,,2013-02-05 15:50:15.0,,,,,,0|i1hql3:,311734,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When using Spring, cannot set Jetty engine connector to an instance of SslSelectChannelConnector",CXF-4806,12630731,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,geecxf,geecxf,04/Feb/13 19:27,09/Apr/13 15:15,14/Mar/19 02:30,05/Feb/13 20:17,2.7.2,,,,,,,2.6.7,2.7.4,,,,,,,0,,,,,,,,"When using spring it is not possible to set a connector of type SslSelectChannelConnector. Below is a sample Spring configuration that does not work:

{code:xml}
    <httpj:engine-factory bus=""cxf"">
        <httpj:engine port=""${webservice.https.port}"">
            <httpj:tlsServerParameters>
                <sec:keyManagers keyPassword=""${webservice.https.keyManagerPwd}"">
                    <sec:keyStore
                        url=""${webservice.https.serviceKeyStoreUrl}""
                        password=""${webservice.https.serviceKeyStorePwd}""
                        type=""JKS"" />
                </sec:keyManagers>
                <sec:trustManagers>
                    <sec:keyStore
                        url=""${webservice.https.trustKeyStoreUrl}""
                        password=""${webservice.https.trustKeyStorePwd}""
                        type=""JKS"" />
                </sec:trustManagers>
                <sec:cipherSuitesFilter>
                    <sec:include>.*_WITH_3DES_.*</sec:include>
                    <sec:include>.*_WITH_AES_128_.*</sec:include>
                    <sec:include>.*_WITH_AES_256_.*</sec:include>
                    <sec:include>.*_EXPORT_.*</sec:include>
                    <sec:include>.*_EXPORT1024_.*</sec:include>
                    <sec:include>.*_WITH_DES_.*</sec:include>
                    <sec:include>.*_WITH_AES_.*</sec:include>
                    <sec:include>.*_WITH_NULL_.*</sec:include>
                    <sec:exclude>.*_DH_anon_.*</sec:exclude>
                </sec:cipherSuitesFilter>
                <sec:clientAuthentication want=""false""
                    required=""false"" />
                <sec:certAlias>${webservice.https.certAlias}</sec:certAlias>
            </httpj:tlsServerParameters>
            <httpj:threadingParameters
                minThreads=""${webservice.minThreads}"" maxThreads=""${webservice.maxThreads}"" />
            <httpj:connector>
                <bean class=""org.eclipse.jetty.server.ssl.SslSelectChannelConnector"">
                    <beans:constructor-arg ref=""sslContextFactory"" />
                    <property name=""port""
                        value=""${webservice.https.port}"" />
                    <property name=""acceptors""
                        value=""${webservice.acceptors}"" />
                </bean>
            </httpj:connector>
        </httpj:engine>
    </httpj:engine-factory>
{code}

The problem is code in JettHTTPServerEngine.java at line 607 and 617:

{code:java}
    protected void retrieveListenerFactory() {
        if (tlsServerParameters != null) {
            if (null != connector && !(connector instanceof SslSocketConnector)) {
                LOG.warning(""Connector "" + connector + "" for JettyServerEngine Port ""
                        + port + "" does not support SSL connections."");
                return;
            }
            connectorFactory =
                getHTTPSConnectorFactory(tlsServerParameters);            
            protocol = ""https"";
           
        } else {
            if (connector instanceof SslSocketConnector) {
                throw new RuntimeException(""Connector "" + connector + "" for JettyServerEngine Port ""
                      + port + "" does not support non-SSL connections."");
            }
            connectorFactory = getHTTPConnectorFactory();            
            protocol = ""http"";
        }
        LOG.fine(""Configured port "" + port + "" for \"""" + protocol + ""\""."");
    }
{code}

As the code is right now it does not allow the use of SslSelectChannelConnector only SslSocketConnector. Furthermore, the error checking for a plain HTTP engine is incorrect since the logic will not throw an exception for using SslSelectChannelConnector for a plain HTTP engine.

Instead, the code should check if the instance is of a type that implements SslConnector. SslConnector is an interface which both SslSocketConnector and SslSelectChannelConnector implement and no non Ssl connector should implement.

For discussion on this issue see:
http://cxf.547215.n5.nabble.com/Bug-in-2-7-2-td5722635.html#a5722736
","Mac OS X, Karaf container, Spring 3.1.2",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,311227,,,2013-02-04 19:27:26.0,,,,,,0|i1hplb:,311573,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP services try to process HTTP 'OPTIONS',CXF-4805,12630634,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,04/Feb/13 13:10,26/Nov/13 17:40,14/Mar/19 02:30,08/Feb/13 12:11,2.5.6,,,,,,,3.0.0-milestone1,,,,,,,,0,,,,,,,,"We tried, somewhat absentmindedly, to access a JAX-WS SOAP service cross-origin-ly from a browser. The browser sent the required OPTIONS ahead of the POST, and CXF went ahead and tried to handle it as if it was a SOAP request, and then got very sad trying to parse the empty payload as XML.

Shouldn't CXF have produced a clear log message and error response about not understanding OPTIONS?
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-02-04 13:46:30.045,,,no_permission,,Unknown,,,,,,,,,,,311130,,,Tue Feb 05 00:49:43 UTC 2013,,,,,,0|i1hozz:,311477,,,,,,,,"04/Feb/13 13:46;ffang;Hi Benson,

I think in some scenario cxf endpoint can handle request from local browser is useful, especially for some demos, let customer open a local browser and edit a soap message and send it out and see the response from same browser page is convenient.

For the CORS issue, I generally add a out interceptor for the cxf endpoint in demos, something like
{code}
public class EnableCORSInterceptor extends AbstractPhaseInterceptor<Message> {

    public EnableCORSInterceptor() {
        super(Phase.PRE_PROTOCOL);
    }

    @Override
    public void handleMessage(Message message) throws Fault {
        Map<String, List<String>> headers = Headers.getSetProtocolHeaders(message);
        try {
            //Access-Control-Allow-Origin:* Access-Control-Allow-Methods:POST,GET
            headers.put(""Access-Control-Allow-Origin"", Arrays.asList(""*""));
            headers.put(""Access-Control-Allow-Methods"", Arrays.asList(""POST"", ""GET""));
        } catch (Exception ce) {
            throw new Fault(ce);
        }
    }
}
{code}
This can make browser send/receive soap message to/from CXF endpoint.

Freeman",04/Feb/13 15:49;bmargulies;How does this prevent OPTIONS transaction from being processed by the subsequent interceptors?,05/Feb/13 00:49;ffang;It won't. It just add some CORS headers to the response message so that  local browser can receive/recognize the response.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE is thrown while enabling fine log level in TrustDecisionUtil if MessageTrustDecider from message context is used,CXF-4803,12630608,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,xuhaihong,xuhaihong,04/Feb/13 02:41,09/Apr/13 15:15,14/Mar/19 02:30,04/Feb/13 14:35,2.6.5,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,Transports,,,,0,,,,,,,,"If we uses the MessageTrustDecider from the message context and fine log level is enabled, the NPE will thrown while handling UntrsustedURLConnectionIOException.",,,,,,,,,,,,,,,,,,,,04/Feb/13 02:42;xuhaihong;CXF-4803.patch;https://issues.apache.org/jira/secure/attachment/12567795/CXF-4803.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-02-04 03:26:38.247,,,no_permission,,Unknown,,,,,,,,,,,311104,,,Mon Feb 04 14:27:09 UTC 2013,,,,,,0|i1houf:,311452,,,,,,,,04/Feb/13 03:26;ffang;Good catch!,"04/Feb/13 03:46;ffang;apply patch on behalf of Ivan with thanks
http://svn.apache.org/viewvc?rev=1442016&view=rev for trunk
http://svn.apache.org/viewvc?rev=1442017&view=rev for 2.7.x branch
http://svn.apache.org/viewvc?rev=1442018&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1442020&view=rev for 2.5.x branch","04/Feb/13 06:50;xuhaihong;Hmm, I made a junior mistaken in the patch, we need to add the bracket around the condition operator, or incorrect output will be get in some scenarios. Sorry for that.","04/Feb/13 10:09;ffang;Do you mean something like
{code}
(trustDecider != null) ? trustDecider.getLogicalName() : decider2.getLogicalName()
{code}

I don't think we really need it, the operator ""!="" is higher priority  so you get a true or false from it firstly. Do I miss something?","04/Feb/13 14:04;xuhaihong;I mean (trustDecider != null ? trustDecider.getLogicalName() : decider2.getLogicalName()), or decider2.getLogicalName() will be always invoked with + operator.","04/Feb/13 14:27;ffang;right, revise it accordingly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CachedWriter may leave temp files undeleted,CXF-4797,12630164,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,31/Jan/13 15:55,02/May/13 02:30,14/Mar/19 02:30,31/Jan/13 16:28,2.7.2,,,,,,,2.7.4,3.0.0-milestone1,,,Core,,,,0,,,,,,,,"CachedWriter may leave temporary files on the file system. 

CachedWriter is used for data caching by the logging interceptors, for examples, when the data is read from the Reader object when the InputStream is no longer available. After the CachedWriter and its associated input readers are closed, the temporary file, if created, should be deleted.

 ",,,,,,,,,,,,,,,,,,,CXF-4397,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,310660,,,2013-01-31 15:55:40.0,,,,,,0|i1hm3b:,311005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Accessing Conduit in JAX-RS ClientConfiguration causes NPE if failover is enabled,CXF-4796,12630161,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,31/Jan/13 15:50,09/Apr/13 15:15,14/Mar/19 02:30,31/Jan/13 17:34,,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,310657,,,2013-01-31 15:50:11.0,,,,,,0|i1hm2n:,311002,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leaks in CXF with spring while using WebClient APIs,CXF-4795,12629980,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,ajitamitav,ajitamitav,30/Jan/13 19:45,04/Jun/15 08:58,14/Mar/19 02:30,13/Feb/13 18:51,2.4.2,,,,,,,2.5.10,2.6.7,2.7.4,,JAX-RS,,,,0,,,,,,,,"Problem - We are facing a very weird memory issue while using spring (3.0.5.RELEASE) with Apache-CXF(2.4.2). We are trying to make a REST(GET) call using Apache CXF WebClient.get().Each outbound call URL is getting configured as a bean in the Spring Container. 

Description - 
1.Placeholder in Spring where the URL is getting configured as a Bean 
Class Name - AbstractBeanFactory 
private final Set<String> alreadyCreated = Collections.synchronizedSet(new HashSet<String>()); 

2.Reason 

During the WebClient.get call CXF prepares conduit to channel the message to destination. Since it is a HTTP call HTTPTransportFactory is used to create HTTP Conduit for the endpoint. 
This is done by HTTPTransportFactory.getConduit method. 
HTTPTransportFactory.getConduit invokes HTTPTransportFactory.configure(Object bean, String name, String extraName) 

  
protected void configure(Object bean, String name, String extraName) { 
        Configurer configurer = bus.getExtension(Configurer.class); 
        if (null != configurer) { 
            configurer.configureBean(name, bean); 
            if (extraName != null) { 
                configurer.configureBean(extraName, bean); 
            } 
        } 
    } 

name parameter value is - {http://<ip>:<port>/<application-context>/user/96BEEBE3119B4B809F35CFFAF5EA9803/detail}WebClient.http-conduit 

extraName parameter value is - http://<ip>:<port>/<application-context>/user/96BEEBE3119B4B809F35CFFAF5EA9803/detail

Since CXF by default uses SpringBus,the configurer class returned for bus.getExtension(Configurer.class) call is org.apache.cxf.configuration.spring.ConfigurerImpl . 
This class ends up configuring both the above mentioned URL as bean in Spring. 

This bean names are keep on adding to a Set instance alreadyCreated which never get garbage collected, and keep increasing the memory footprint and finally causing OutOfMemory issue. 

My application is growing with huge memory foot print as the number of outbound calls increases, we are forced to bounce back the server in frequent intervals

Already put this @http://cxf.547215.n5.nabble.com/memory-leaks-in-CXF-with-spring-while-using-WebClient-APIs-td5721974.html",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-30 21:53:56.251,,,no_permission,,Unknown,,,,,,,,,,,310476,,,Thu Jun 04 08:58:08 UTC 2015,,,,,,0|i1hkyn:,310821,,,,,,,,30/Jan/13 21:53;sergey_beryozkin;Can you try the latest released CXF 2.5.x please ?,"30/Jan/13 22:03;dkulp;Sergey,

I was able to verify this yesterday and stuck a potential fix on trunk.  Just merging it back to the branches now.
","30/Jan/13 22:05;sergey_beryozkin;Never mind, looks like Dan is fixing it right now as we speak :-) ","30/Jan/13 22:06;sergey_beryozkin;Hi Dan - yep, just saw the merges, thanks","30/Jan/13 22:09;dkulp;
Note:  Nabble was not configured properly so the original messages never made it to any of the CXF mailing lists.  I've disabled the ability to create new messages in the ""CXF"" category at Nabble.  You will now need to select a subforum.  That should prevent this issue in the future.
","09/Feb/13 14:31;jpenninkhof;I've downloaded the snap-shot and tried it out in a test application. The memory leak is gone :)
Daniel and Ajit, thanks for reporting and patching this so quickly. Excellent job done!","03/Jun/15 16:07;neerajvas;I am also getting similar kind of issue. Its expecting url as bean and when its not found, it throws NoSuchBeanException. I am using cxf 2.4.8 and getting ""No bean named '{http://www.springframework.org/schema/beans}MessageCenterService' found in org.springframework.beans.factory.support.DefaultListableBeanFactory@1045897b"". I tried using 2.5.10, but of no help. Please help me in understanding the issues and how can I avoid these url to be searched as ""bean"". ","04/Jun/15 08:58;sergey_beryozkin;2.5.x line reached the end of life a long time ago, try 2.7.15 and see if the issue you are seeing still there; I'm presuming it is a different issue to the one reported here originally so try 2.7.15 and open a new issue if needed, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Soap 1.1 service returns an invalid soap fault for soap 1.2 requests,CXF-4794,12629901,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,30/Jan/13 14:21,09/Apr/13 15:15,14/Mar/19 02:30,31/Jan/13 09:08,2.7.2,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,Soap Binding,,,,0,,,,,,,,"The soap 1.1 endpoint (i.e., soap 1.2 binding not enabled) is supposed to returns a soap fault when a soap 1.2 message is received. The fault is correctly raised, however, the returned fault message is inconsistent and has the soap 1.2 fault containing the soap 1.1 fault content, as 

<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"">
  <soap:Body>
    <soap:Fault>
      <faultcode xmlns:ns1=""http://schemas.xmlsoap.org/soap/envelope/"">ns1:VersionMismatch</faultcode>
      <faultstring>A SOAP 1.2 message is not valid when sent to a SOAP 1.1 only endpoint.</faultstring>
    </soap:Fault>
  </soap:Body>
</soap:Envelope>

This will lead to problems at most soap clients (including CXF which gets an NPE), as the fault code is not found at the expected element.

We can fix this by returning either the soap 1.1 fault or the soap 1.2 fault. The client that sent the soap 1.2 request message obviously understands both soap 1.2 and 1.1, it is not clear whether the service must return the soap 1.1 message or may return the message of the same version as the request message, in this case, the soap 1.2 message.



",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-30 14:54:32.637,,,no_permission,,Unknown,,,,,,,,,,,310397,,,Mon Feb 04 12:13:07 UTC 2013,,,,,,0|i1hkh3:,310742,,,,,,,,"30/Jan/13 14:54;dkulp;Per the soap 1.2 spec:

A SOAP/1.1 node receiving a SOAP Version 1.2 message will according to SOAP/1.1 generate a version mismatch SOAP fault based on a SOAP/1.1 message construct. That is, the envelope will have a [local name] of Envelope and a [namespace name] of ""http://schemas.xmlsoap.org/soap/envelope/"".

","30/Jan/13 15:46;ay;Hi Dan,
okay. Thanks for the info. I will fix it in that way.
regards, aki","31/Jan/13 09:08;ay;changed
 - the server side so that it returns a valid soap fault 1.1. in this case.
 - the client side so that it doesn't get an unexpected NPE even if the returned fault is invalid/inconsistent.
","04/Feb/13 07:16;alexzan;Hi Aki,
Could you put up your fix link or show me where is your code change? I really need it for urgent issue.

Thanks!","04/Feb/13 12:13;ay;Hi Alex,
somehow the jira plugin is not adding the rev info automatically.
here is the trunk rev
http://svn.apache.org/viewvc?view=revision&revision=1440485

regards, aki",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set lang and subcode for soapfault,CXF-4790,12629854,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,irisding,irisding,30/Jan/13 08:42,01/Dec/14 23:51,14/Mar/19 02:30,04/Feb/13 04:47,2.6.4,2.7.2,3.0.0-milestone1,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,JAX-WS Runtime,,,,0,,,,,,,,"lang parameter in soapfault should be got dynamically when using jaxws frontend.
subcode parameter in soapfault can not be set when using jaxws frontend.",,,,,,,,,,,,,,CXF-5186,CXF-5009,,,,,01/Feb/13 04:56;irisding;cxf-4790.patch;https://issues.apache.org/jira/secure/attachment/12567516/cxf-4790.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-02-04 03:05:37.08,,,no_permission,,Unknown,,,,,,,,,,,310350,,,Mon Feb 04 04:47:49 UTC 2013,,,,,,0|i1hk6n:,310695,,,,,,,,"04/Feb/13 03:05;ffang;Hi,

In your patch you have change for Soap12FaultOutInterceptor.java
{code}
-        if (message.getVersion() == Soap11.getInstance()) {
+        if (message.getVersion().getVersion() == 1.1) {
{code}

as message.getVersion() basically will return a singleton, so I'd keep this as is.

Freeman","04/Feb/13 04:47;ffang;apply patch on behalf of iris ding with thanks
http://svn.apache.org/viewvc?rev=1442015&view=rev for trunk
http://svn.apache.org/viewvc?rev=1442021&view=rev for 2.7.x branch
http://svn.apache.org/viewvc?rev=1442024&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1442025&view=rev for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndorsingSupportingTokens do not respect ProtectTokens assertion from paired binding policy ,CXF-4789,12629672,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,asoldano,asoldano,29/Jan/13 11:05,09/Apr/13 15:15,14/Mar/19 02:30,08/Feb/13 13:17,2.4.8,,,,,,,2.5.10,2.6.7,2.7.4,3.0.0-milestone1,WS-* Components,,,,1,,,,,,,,"I've a wsdl containing both a SymmetricBinding and an EndorsingSupportingTokens policies. The binding one specifies ProtectTokens assertion. As a consequence as per WS-SecurityPolicy 1.2 Section 8.9, the signature for the endorsing supporting token should sign both the first signature and the endorsing token, while it seems the latter is currently not covered.",,,,,,,,,,,,,,,,,,,WSS-421,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,310168,,,Thu Feb 07 14:21:05 UTC 2013,,,,,,0|i1hj27:,310513,,,,,,,,"07/Feb/13 14:11;asoldano;In order for fixing this issue, the WSS-421 fix needs to be included. Moreover the following patch is also required to allow validating the incoming message on server side:

{code}
Index: src/main/java/org/apache/cxf/ws/security/wss4j/policyvalidators/AbstractSupportingTokenPolicyValidator.java
===================================================================
--- src/main/java/org/apache/cxf/ws/security/wss4j/policyvalidators/AbstractSupportingTokenPolicyValidator.java	(revision 1442960)
+++ src/main/java/org/apache/cxf/ws/security/wss4j/policyvalidators/AbstractSupportingTokenPolicyValidator.java	(working copy)
@@ -539,7 +539,7 @@
                 CastUtils.cast((List<?>)signedResult.get(
                     WSSecurityEngineResult.TAG_DATA_REF_URIS
                 ));
-            if (sl != null && sl.size() == 1) {
+            if (sl != null && sl.size() >= 1) {
                 for (WSDataRef dataRef : sl) {
                     QName signedQName = dataRef.getName();
                     if (WSSecurityEngine.SIGNATURE.equals(signedQName)
{code}",07/Feb/13 14:21;asoldano;Assigning to Colm for later moving WSS4J dependency to 1.6.10.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WADL to Java generator uses the system encoding to create the files,CXF-4787,12629527,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,28/Jan/13 14:01,28/Feb/13 17:27,14/Mar/19 02:30,28/Jan/13 15:26,,,,,,,,2.5.9,2.6.6,2.7.3,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,310023,,,2013-01-28 14:01:14.0,,,,,,0|i1hi5z:,310368,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
enhance CXF to follow jaxws spec 3.6.2.3 when using RI or Axis2 client,CXF-4784,12629475,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,zhubinbj,zhubinbj,28/Jan/13 05:10,28/Feb/13 17:27,14/Mar/19 02:30,28/Jan/13 06:30,2.6.2,2.6.5,2.7.2,,,,,2.5.9,2.6.6,2.7.3,3.0.0-milestone1,JAX-WS Runtime,,,,0,,,,,,,,"The content of the Outbound SOAP message in RPC/literal web service in current CXF is like below:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
<soap:Body>
<ns1:returnNullResponse xmlns:ns1=""http://serverrpc.testdata.soapbinding.annotations/"">
<soap:Fault>
<faultcode>soap:Server</faultcode>
<faultstring>Cannot write part return. RPC/Literal parts cannot be null. (WS-I BP R2211)</faultstring>
</soap:Fault>
</ns1:returnNullResponse>
</soap:Body>
</soap:Envelope>
If we use RI/Axis2 client, then it will not catch the WebServiceException. The reason is that CXF wrapped the Fault in the common response element.
With this fix, the SOAP message in this scenario will be like below, which will catch the WebServiceException using RI/Axis2 client.
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Body>
      <soap:Fault>
         <faultcode>soap:Server</faultcode>
         <faultstring>Cannot write part return. RPC/Literal parts cannot be null. (WS-I BP R2211)</faultstring>
      </soap:Fault>
   </soap:Body>
</soap:Envelope>",,,,,,,,,,,,,,,,,,,,28/Jan/13 05:13;zhubinbj;CXF-4784.patch;https://issues.apache.org/jira/secure/attachment/12566712/CXF-4784.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-01-28 06:30:40.024,,,no_permission,,Unknown,,,,,,,,,,,309971,,,Mon Jan 28 06:30:40 UTC 2013,,,,,,0|i1hhuf:,310316,,,,,,,,"28/Jan/13 05:15;zhubinbj;Uploaded the patches for this issue, can you help review it? Thanks.","28/Jan/13 06:30;ffang;apply patch on behalf of Bin Zhu with thanks
http://svn.apache.org/viewvc?rev=1439260&view=rev for trunk
http://svn.apache.org/viewvc?rev=1439264&view=rev for 2.7.x branch
http://svn.apache.org/viewvc?rev=1439268&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1439269&view=rev for 2.5.x branch
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MacAccessTokenValidator needs a setter for the nonceVerifier variable,CXF-4781,12629206,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,craigmcc,craigmcc,25/Jan/13 02:13,28/Feb/13 17:27,14/Mar/19 02:30,25/Jan/13 10:32,3.0.0-milestone1,,,,,,,2.6.6,2.7.3,3.0.0-milestone1,,JAX-RS Security,,,,0,,,,,,,,"In order to enable configuration of the nonceVerifier field in MacAccessTokenValidator, there needs to be a public setter so you can configure it from Spring or whatever.
",,,,,,,,,,,,,,,,,,,,25/Jan/13 02:15;craigmcc;MacAccessTokenValidator_needs_nonceVerifier_setter.patch;https://issues.apache.org/jira/secure/attachment/12566438/MacAccessTokenValidator_needs_nonceVerifier_setter.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-01-25 10:32:05.132,,,no_permission,,Unknown,,,,,,,,,,,309050,,,Fri Jan 25 10:32:05 UTC 2013,,,,,,0|i1dynb:,289710,,,,,,,,"25/Jan/13 02:15;craigmcc;Here's a really simple one for you :-).  As an ASF member, I grant permission for this to be included in Apache CXF.
","25/Jan/13 10:32;sergey_beryozkin;Perfect :-), thanks for a patch, applied to 2.6.x/2.7.x/trunk.

FYI, have a look at https://issues.apache.org/jira/browse/CXF-4783. Sasi M. provided a NonceVerifier implementation awhile back but at a time I was not ready to look into applying it, but I've created a different issue now to get that patch more visible; may be you can find that patch useful, I'll give it a try later on, cheers ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Require Command Line Option for wsdl2java to set Maximum Heap Memory Size,CXF-4778,12629107,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,rouble,rouble,24/Jan/13 17:43,28/Nov/17 10:42,14/Mar/19 02:30,24/Mar/17 17:44,2.4.3,,,,,,,3.2.0,,,,Tooling,,,,0,,,,,,,,"By default wsdl2Java is coded to use 128M of maximum memory heap space.

These days, however, WSDLs are starting to become very large and complex beasts - and sometimes wsdl2java will run out of heap space while creating its internal data structures. This is not an issue with memory management within wsdl2java, but rather a consequence of large WSDLs.

Because of CXF-2081, we have the ability to set the maximum memory heap size, however it requires manually modifying wsdl2java. This is not ideal. 

This JIRA is requesting two things:
a) A command line option -Xmx to wsdltojava, that allows users to set the maximum heap memory size.

b) Upping the default maximum heap memory size to 256M. I leave this up to the development team to decide.

UPDATE:
Another option is for wsdl2java to inherit all the JAVA_OPTS from the environment. So, if someone properly sets -Xmx in the environment variable JAVA_OPTS, wsdl2java will pick it up. This is probably a better solution that will address more use cases.",,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,308883,,,2013-01-24 17:43:52.0,,,,,,0|i1dotr:,288119,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UsernameTokenValidator do not validate that password is not provided.,CXF-4776,12628986,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,pellcorp,pellcorp,pellcorp,24/Jan/13 01:43,28/Feb/13 17:27,14/Mar/19 02:30,25/Jan/13 10:53,2.5.8,2.6.5,2.7.2,,,,,2.5.9,2.6.6,2.7.3,,WS-* Components,,,,0,,,,,,,,"This is an issue for both WS-Policy and WSS4JInInterceptor configuration.

If I include an incorrect Password I get the expected authentication error.  If I actually remove the password I get no authentication failure.  The UsernameTokenValidator only checks that the username is provided.

",,,,,,,,,,,,,,,,,,,,24/Jan/13 01:44;pellcorp;UsernamePasswordPolicy.xml;https://issues.apache.org/jira/secure/attachment/12566234/UsernamePasswordPolicy.xml,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-01-24 17:18:38.439,,,no_permission,,Unknown,,,,,,,,,,,308604,,,Thu Jan 24 17:18:38 UTC 2013,,,,,,0|i1cqp3:,282456,,,,,,,,"24/Jan/13 03:21;pellcorp;This is also the case for the UsernameTokenInterceptor as well.

This seems to be a terrible default stance to take.  Is this not a huge security hole?

The wss4j UsernameTokenValidator calls the verifyUnknownPassword when no password is provided in the username token.  However I would have thought this should not be the default.  If a Password type of NONE was specified then of course passwords should not be validated.  But where a password type of Text is provided the Password Validator should throw up an error for a missing password.","24/Jan/13 17:18;gmazza;Note there may be other circumstances, like situation #2 here (UsernameToken w/password derived key: http://www.jroller.com/gmazza/date/20121220), where a password is not supplied with the username and also where it does not appear any password type is provided.  Make sure any solution you propose will still work with this case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpHeaders.getRequestHeader splits complex header values,CXF-4775,12628899,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,23/Jan/13 14:25,28/Feb/13 17:27,14/Mar/19 02:30,23/Jan/13 16:58,,,,,,,,2.5.9,2.6.6,2.7.3,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,HttpHeaders.getRequestHeader will split complex headers by default; this might make sense for well known headers like Accept but can return unexpected data for other headers; it has also been confirmed it is not portable to split the complex header values by default,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,308381,,,2013-01-23 14:25:03.0,,,,,,0|i1c1nj:,278398,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java First ws policy attachments are not being serialised correctly,CXF-4774,12628867,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,pellcorp,pellcorp,pellcorp,23/Jan/13 09:55,28/Feb/13 17:27,14/Mar/19 02:30,23/Jan/13 21:10,2.7.2,,,,,,,2.7.3,3.0.0-milestone1,,,WS-* Components,,,,0,,,,,,,,"When using external attachments, the WSDL serialised version of this attachment is missing prefixes on ExactlyOne and All tags.  This causes the jaxws:client to fall over.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,308347,,,Wed Jan 23 09:56:03 UTC 2013,,,,,,0|i1c0pb:,278244,,,,,,,,23/Jan/13 09:56;pellcorp;This bug is related to CXF-4547,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StackOverflowError when JAXBSchemaInitializer tries to process  parametrized type Enum<E>,CXF-4773,12628656,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,22/Jan/13 03:55,28/Feb/13 17:27,14/Mar/19 02:30,22/Jan/13 04:14,2.5.8,2.6.5,2.7.2,,,,,2.5.9,2.6.6,2.7.3,3.0.0-milestone1,JAXB Databinding,,,,0,,,,,,,,"----Some Object ----
public class SomeObject<E extends Enum<E>>
{
  private AnotherObject<E> obj;

  public AnotherObject<E> getAnotherObject()
  {
    return obj;
  }

  public void setAnotherObject(AnotherObject<E> obj)
  {
    this.obj = obj;
  }
}

---Another Object----

public class AnotherObject<E extends Enum<E>>
{
}

----Enum Test-----
@javax.jws.WebService
public class EnumTest
{
  public <T extends Enum<T>> SomeObject<T> test2(SomeObject<T> o)
  {
    return o;
  }
}

java.lang.StackOverflowError
	at sun.reflect.Reflection.getCallerClass(Native Method)
	at java.lang.ClassLoader.getCallerClassLoader(ClassLoader.java:1383)
	at java.lang.Class.getDeclaredConstructor(Class.java:1984)
	at org.apache.cxf.common.util.ReflectionUtil$2.run(ReflectionUtil.java:67)
	at org.apache.cxf.common.util.ReflectionUtil$2.run(ReflectionUtil.java:64)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.cxf.common.util.ReflectionUtil.getDeclaredConstructor(ReflectionUtil.java:64)
	at org.apache.cxf.common.jaxb.JAXBUtils.getValidClass(JAXBUtils.java:518)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addClass(JAXBContextInitializer.java:274)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:222)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:225)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,307147,,,2013-01-22 03:55:05.0,,,,,,0|i1a6f3:,267506,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[OAuth 2] MAC Authorization Header is not parsed correctly,CXF-4771,12628600,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,craigmcc,craigmcc,21/Jan/13 19:41,10/Apr/17 19:07,14/Mar/19 02:30,23/Jan/13 16:59,2.7.2,,,,,,,,,,,JAX-RS Security,,,,0,,,,,,,,"I'm trying to implement MAC authorization on my OAuth 2.0 server.  I use OAuthClientUtils#createAuthorizationHeader() to create an authorization header that, on the wire, looks something like this:

Authorization:  MAC id=""55aa32664c6e1ae9eea4f8d2a6b6fe3"",nonce=""bMIaTnH+yw7daK6augoW9waPBhQ="",mac=""xMgBytGHEyVjLk0Bea5Sa6jfMdUvvrCWJhlL95rtNHs="",ts=""1358796727285"",

There is a minor problem with this -- the trailing comma should be eliminated.

The major problem, though, is when the server tries to parse this (AuthorizationUtils#getAuthorizationParts()).  The call to mc.getHttpHeaders().getRequestHeader(""Authorization"") returns five header values instead of one.  It appears to be parsing on both spaces and commas.  This causes the remaining logic to never parse the MAC token.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-22 16:33:14.72,,,no_permission,,Unknown,,,,,,,,,,,307089,,,Wed Jan 23 16:59:19 UTC 2013,,,,,,0|i1a4yf:,267269,,,,,,,,"22/Jan/13 16:33;sergey_beryozkin;I'm finding that working with HTTP headers can be tricky :-). 
Consider:
{noformat}
Accept: text/xml,text/html
Authorization: MAC id=""55aa32664c6e1ae9eea4f8d2a6b6fe3"",nonce=""bMIaTnH+yw7daK6augoW9waPBhQ=""
{noformat}

what I'm actually not sure what HttpHeaders.getRequestHeader() should return (List of String) to make it right for both cases.
I guess it makes sense to split in the former case, in the latter case I decided to split to simplify parsing the actual value, but I wonder if it is right at all...
I'm going to introduce a property to regulate it better and also seek some clarifications at the JAX-RS list...
thanks
","22/Jan/13 21:14;sergey_beryozkin;I've confirmed splitting the headers by default is not going to be portable - I'll keep that option but the default approach will be to return the actual complete string value - it will fix this issue along the way too, thanks","23/Jan/13 16:59;sergey_beryozkin;Also see https://issues.apache.org/jira/browse/CXF-4775,

thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When passing NULL @PathParam to JAXRS Client Proxy it now throws NullPointerException instead of IllegalArgumentException as in prior releases (2.7.0),CXF-4770,12628585,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,seanmmills,seanmmills,21/Jan/13 18:05,28/Feb/13 17:27,14/Mar/19 02:30,22/Jan/13 13:17,2.7.2,,,,,,,2.7.3,3.0.0-milestone1,,,JAX-RS,,,,0,,,,,,,,When passing NULL @PathParam to JAXRS Client Proxy it now throws NullPointerException instead of IllegalArgumentException as in prior releases (2.7.0).  Test case is attached.,,,,,,,,,,,,,,,,,,,,21/Jan/13 18:08;seanmmills;cxf-rest-client.zip;https://issues.apache.org/jira/secure/attachment/12565814/cxf-rest-client.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-01-22 13:17:04.584,,,no_permission,,Unknown,,,,,,,,,,,307036,,,Tue Jan 22 13:17:04 UTC 2013,,,,,,0|i1a3b3:,267002,,,,,,,,"21/Jan/13 18:08;seanmmills;Extract this maven project and execute ""mvn -Pit-web clean verify"" to show how 2.7.0 works okay.  Then, update the cxf.version in the pom.xml to 2.7.2 and rerun the mvn command and you will see the issue.","22/Jan/13 13:17;sergey_beryozkin;enhancing the client to support ParamConverters caused the regression, fixed now, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor STSClient,CXF-4769,12628533,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,21/Jan/13 11:19,28/Feb/13 17:27,14/Mar/19 02:30,21/Jan/13 12:51,2.6.5,2.7.2,,,,,,2.6.6,2.7.3,,,WS-* Components,,,,0,,,,,,,,"
This task is to refactor the STSClient to expose more of the functionality involved in communicating with the STS. The STSClient only returns ""SecurityTokens"", whereas a client might want to parse the STS Response itself.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,306618,,,2013-01-21 11:19:01.0,,,,,,0|i19x5r:,266006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS endpoints fail to register properly with ws-discovery service,CXF-4767,12628287,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,18/Jan/13 21:27,28/Feb/13 17:27,14/Mar/19 02:30,04/Feb/13 21:20,2.7.2,,,,,,,2.7.3,3.0.0-milestone1,,,JAX-RS,WS-* Components,,,0,,,,,,,,NPE is reported if JAX-RS endpoint is created when WS-Discovery service is also running,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-30 23:19:08.381,,,no_permission,,Unknown,,,,,,,,,,,305413,,,Mon Feb 04 21:20:41 UTC 2013,,,,,,0|i18c7z:,256782,,,,,,,,"30/Jan/13 23:19;subaruwrc;We are still seeing this bug today using both 2.7.3-SNAPSHOT and 2.8.0-SNAPSHOT.

Is there a working Spring application context configuration combining JAX-WS, JAX-RS and WS-Discovery?","31/Jan/13 00:08;subaruwrc;Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'content': Invocation of init method failed; nested exception is org.apache.cxf.service.factory.ServiceConstructionException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:626)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:389)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:294)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:112)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4791)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5285)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:633)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:968)
	at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1646)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.apache.cxf.service.factory.ServiceConstructionException
	at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1612)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1483)
	... 26 more
Caused by: java.lang.NullPointerException
	at org.apache.cxf.ws.discovery.internal.WSDiscoveryServiceImpl.serverStarted(WSDiscoveryServiceImpl.java:126)
	at org.apache.cxf.ws.discovery.listeners.WSDiscoveryServerListener.startServer(WSDiscoveryServerListener.java:72)
	at org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl.startServer(ServerLifeCycleManagerImpl.java:61)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:146)
	at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:192)
	... 33 more","31/Jan/13 10:36;sergey_beryozkin;I've definitely validated it by adding ws-discovery dependencies to a war, reproducing NPE, and then updating to the patched CXF 2.7.3-SNAPSHOT and seeing the application starting OK.

Do you actually use WS-Discovery ? Can you please share some sample web app or Maven based test project ?",31/Jan/13 10:55;sergey_beryozkin;Hmm...I'm seeing it again - I'm quite sure I did see a successful WS-Discovery message after starting the war...,"31/Jan/13 11:33;sergey_beryozkin;Sigh, that was another NPE I got fixed, this one is coming next, no idea why I've missed it.
Can you afford simply removing ws-discovery modules from the distribution ?

thanks","31/Jan/13 12:17;sergey_beryozkin;Please try the new snapshots shortly, trunk: r1440922, 2.7.x: r1440927
","01/Feb/13 02:00;subaruwrc;Thank you for such a quick response!

Unfortunately, we still seem to be experiencing this bug.

Here is some potentially useful configuration, are we using the correct settings?

pom.xml


<dependency>
   <groupId>org.apache.cxf.services.ws-discovery</groupId>
   <artifactId>cxf-services-ws-discovery-service</artifactId>
   <version>2.7.3-SNAPSHOT</version>
</dependency>

<dependency>
   <groupId>org.apache.cxf.services.ws-discovery</groupId>
   <artifactId>cxf-services-ws-discovery-api</artifactId>
   <version>2.7.3-SNAPSHOT</version>
</dependency>

<repository>
   <id>Apache-Snapshots</id>
   <name>Apache-Snapshots</name>
   <url>http://repository.apache.org/snapshots</url>
   <snapshots>
      <enabled>true</enabled>
   </snapshots>
</repository>

<pluginRepository>
   <id>Apache-Snapshots</id>
   <name>Apache-Snapshots</name>
   <url>http://repository.apache.org/snapshots</url>
   <snapshots>
      <enabled>true</enabled>
   </snapshots>
</pluginRepository>","01/Feb/13 10:06;sergey_beryozkin;Hi - it has to be either 2.7.4-SNAPSHOT or 2.8.0-SNAPSHOT, thanks",04/Feb/13 19:04;subaruwrc;Using 2.7.4-SNAPSHOT appears to have fixed the NPE on deployment. Thank you very much for your assistance.,04/Feb/13 21:20;sergey_beryozkin;thanks for the confirmation; sorry it took me 3 attempts to fix this issue :-),,,,,,,,,,,,,,,,,,,,,,,,,,
WADL to Java generator does not strip custom regular expressions from method names,CXF-4766,12628228,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,18/Jan/13 16:12,28/Feb/13 17:27,14/Mar/19 02:30,18/Jan/13 16:36,,,,,,,,2.5.9,2.6.6,2.7.3,3.0.0-milestone1,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,305354,,,2013-01-18 16:12:23.0,,,,,,0|i18buf:,256721,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
can't set timeout in message HTTPClientPolicy if it is not set in conduit,CXF-4765,12628206,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,vadimb,vadimb,18/Jan/13 14:10,30/Sep/14 08:33,14/Mar/19 02:30,24/Jan/13 17:27,,,,,,,,2.6.6,2.7.3,,,Transports,,,,0,,,,,,,,"This code in ClientPolicyCalculator.intersect (previously in PolicyUtils.intersect) tries to combine timeout values from two policies by taking the smaller:
{code}
        if (p1.isSetConnectionTimeout() || p2.isSetConnectionTimeout()) {
            p.setConnectionTimeout(Math.min(p1.getConnectionTimeout(), p2.getConnectionTimeout()));
        }
        if (p1.isSetReceiveTimeout() || p2.isSetReceiveTimeout()) {
            p.setReceiveTimeout(Math.min(p1.getReceiveTimeout(), p2.getReceiveTimeout()));
        }
{code}
Together with HTTPClientPolicy returning hardcoded default timeouts when not set (30000 ms for connect, 60000 for receive), it means that one cannot, eg, set receiveTimeout in a message policy to 2 min, if the timeout is left unset in the conduit. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-09-30 08:33:30.922,,,no_permission,,Unknown,,,,,,,,,,,305332,,,Tue Sep 30 08:33:30 UTC 2014,,,,,,0|i18bpj:,256699,,,,,,,,"30/Sep/14 08:33;Jalum;Change need to be verified.

There is nothing changed in ClientPolicyCalculator and neither in HTTPConduit since version 2.7.2.
Checked sources : apache-cxf-2.7.3-src.zip apache-cxf-2.7.12-src.zip apache-cxf-3.0.1-src.zip 
available at http://cxf.apache.org/download.html.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPS does not work with asynch client unless you specify port number ,CXF-4762,12628057,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,oysteingr,oysteingr,17/Jan/13 15:44,28/Feb/13 17:27,14/Mar/19 02:30,24/Jan/13 17:23,2.7.1,2.7.2,,,,,,2.7.3,,,,Transports,,,,0,,,,,,,,"I´m trying to get CXF in combination with HttpAsyncClient to talk to my server over HTTPS. What I found is that when I try to consume the url https://myserver/service, CXF/HttpAsyncClient will actually try to talk TLS to my server on port 80.

Digging around in various source code, I found that the getTarget() method in CXFHttpAsyncRequestProducer is a bit unfortunate. It seems to be hard coded to use port 80, unless a port is specified. I´m suggesting that instead of hard coding port 80, CXFHttpAsyncRequestProducer should be looking at the scheme registry to find an appropriate port or just set the port to -1. In case it returns -1, HttpAsyncClient will do a lookup in the scheme registry to find default port for the requested scheme (ie. http=80, https=443)

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,304908,,,2013-01-17 15:44:24.0,,,,,,0|i17wtb:,254285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Receive error message when trying to connect to crm 2011 Webservices with https binding - javax.xml.ws.soap.SOAPFaultException: An error occurred when verifying security for the message.,CXF-4758,12627833,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,coheigea,jair,jair,16/Jan/13 14:37,28/Feb/13 17:27,14/Mar/19 02:30,17/Jan/13 12:16,2.5.8,2.6.5,2.7.2,,,,,2.5.9,2.6.6,2.7.3,,,,,,0,,,,,,,,"I am trying to connect from a Java client with cxf to crm 2011 Web Services(on premise). When I connected over http everything worked fine. But when I switched to HTTPS(Port 443)I suddenly got this error:

FEIN: Invoking handleMessage on interceptor org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor@17698cbe
Exception in thread ""main"" javax.xml.ws.soap.SOAPFaultException: An error occurred when verifying security for the message.
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:155)
	at $Proxy46.create(Unknown Source)
	at GetCRm.doIt(GetCRm.java:322)
	at RunHttpSpnego.main(RunHttpSpnego.java:20)
Caused by: org.apache.cxf.binding.soap.SoapFault: An error occurred when verifying security for the message.
	at org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor.unmarshalFault(Soap12FaultInInterceptor.java:133)
	at org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor.handleMessage(Soap12FaultInInterceptor.java:59)
	at org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor.handleMessage(Soap12FaultInInterceptor.java:46)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:114)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:69)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:34)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:800)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1590)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1488)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1307)
	at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:50)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:229)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:622)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:530)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:463)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:366)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:319)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:96)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:133)
	... 3 more 



Against first thoughts, this was not a time issue between the server and client.
I activated WCF Tracing and got the following error:

<Exception><ExceptionType>System.ServiceModel.Security.MessageSecurityException, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ExceptionType><Message>A supporting token that satisfies parameters 'System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters:
InclusionMode: AlwaysToRecipient
ReferenceStyle: Internal
RequireDerivedKeys: False
RequireCancellation: True' and attachment mode 'Endorsing' was not provided.</Message><StackTrace>   at System.ServiceModel.Security.ReceiveSecurityHeader.VerifySupportingToken(TokenTracker tracker)
   at System.ServiceModel.Security.ReceiveSecurityHeader.Process(TimeSpan timeout, ChannelBinding channelBinding, ExtendedProtectionPolicy extendedProtectionPolicy)
   at System.ServiceModel.Security.TransportSecurityProtocol.VerifyIncomingMessageCore(Message&amp;amp; message, TimeSpan timeout)
   at System.ServiceModel.Security.TransportSecurityProtocol.VerifyIncomingMessage(Message&amp;amp; message, TimeSpan timeout)
   at System.ServiceModel.Security.SecurityProtocol.VerifyIncomingMessage(Message&amp;amp; message, TimeSpan timeout, SecurityProtocolCorrelationState[] correlationStates)
   at System.ServiceModel.Channels.SecurityChannelListener`1.ServerSecurityChannel`1.VerifyIncomingMessage(Message&amp;amp; message, TimeSpan timeout, SecurityProtocolCorrelationState[] correlationState)
   at System.ServiceModel.Channels.SecurityChannelListener`1.SecurityReplyChannel.ProcessReceivedRequest(RequestContext requestContext, TimeSpan timeout)
   at System.ServiceModel.Channels.SecurityChannelListener`1.ReceiveItemAndVerifySecurityAsyncResult`2.OnInnerReceiveDone()
   at System.ServiceModel.Channels.SecurityChannelListener`1.ReceiveItemAndVerifySecurityAsyncResult`2.InnerTryReceiveCompletedCallback(IAsyncResult result)
   at System.Runtime.Fx.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)
   at System.Runtime.AsyncResult.Complete(Boolean completedSynchronously)
   at System.Runtime.InputQueue`1.AsyncQueueReader.Set(Item item)
   at System.Runtime.InputQueue`1.Dispatch()
   at System.Runtime.IOThreadScheduler.ScheduledOverlapped.IOCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)
   at System.Runtime.Fx.IOCompletionThunk.UnhandledExceptionFrame(UInt32 error, UInt32 bytesRead, NativeOverlapped* nativeOverlapped)
   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)
</StackTrace><ExceptionString>System.ServiceModel.Security.MessageSecurityException: A supporting token that satisfies parameters 'System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters:
InclusionMode: AlwaysToRecipient
ReferenceStyle: Internal
RequireDerivedKeys: False
RequireCancellation: True' and attachment mode 'Endorsing' was not provided.</ExceptionString></Exception></TraceRecord></DataItem></TraceData></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns=""http://schemas.microsoft.com/2004/06/E2ETraceEvent""><System xmlns=""http://schemas.microsoft.com/2004/06/windows/eventlog/system""><EventID>458802</EventID><Type>3</Type><SubType Name=""Warning"">0</SubType><Level>4</Level><TimeCreated SystemTime=""2013-01-16T13:55:44.5998534Z"" /><Source Name=""System.ServiceModel"" /><Correlation ActivityID=""{00000000-0000-0000-0000-000000000000}"" /><Execution ProcessName=""w3wp"" ProcessID=""8504"" ThreadID=""16"" /><Channel/><Computer>LOGICALIS-ALT</Computer></System><ApplicationData><TraceData><DataItem><TraceRecord xmlns=""http://schemas.microsoft.com/2004/10/E2ETraceEvent/TraceRecord"" Severity=""Warning""><TraceIdentifier>http://msdn.microsoft.com/de-DE/library/System.ServiceModel.Security.SecurityBindingVerifyIncomingMessageFailure.aspx</TraceIdentifier><Description>The security protocol cannot verify the incoming message.</Description>

This only happens when trying to connect over HTTPS.

I connect to my endpoint by using a servicestub generated with WSDL to java. The authentication policy for the Webservice Looks like this:

<?xml version=""1.0"" encoding=""utf-8"" ?> 
- <wsdl:definitions targetNamespace=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:wsx=""http://schemas.xmlsoap.org/ws/2004/09/mex"" xmlns:wsa10=""http://www.w3.org/2005/08/addressing"" xmlns:tns=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"" xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy"" xmlns:wsap=""http://schemas.xmlsoap.org/ws/2004/08/addressing/policy"" xmlns:msc=""http://schemas.microsoft.com/ws/2005/12/wsdl/contract"" xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing"" xmlns:wsam=""http://www.w3.org/2007/05/addressing/metadata"" xmlns:wsaw=""http://www.w3.org/2006/05/addressing/wsdl"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/"">
- <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <ms-xrm:AuthenticationPolicy xmlns:ms-xrm=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"">
  <ms-xrm:Authentication>ActiveDirectory</ms-xrm:Authentication> 
  </ms-xrm:AuthenticationPolicy>
- <sp:TransportBinding xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
- <wsp:Policy>
- <sp:TransportToken>
- <wsp:Policy>
  <sp:HttpsToken RequireClientCertificate=""false"" /> 
  </wsp:Policy>
  </sp:TransportToken>
- <sp:AlgorithmSuite>
- <wsp:Policy>
  <sp:Basic256 /> 
  </wsp:Policy>
  </sp:AlgorithmSuite>
- <sp:Layout>
- <wsp:Policy>
  <sp:Strict /> 
  </wsp:Policy>
  </sp:Layout>
  <sp:IncludeTimestamp /> 
  </wsp:Policy>
  </sp:TransportBinding>
- <sp:EndorsingSupportingTokens xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
- <wsp:Policy>
- <sp:SpnegoContextToken sp:IncludeToken=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient"">
  <wsp:Policy /> 
  </sp:SpnegoContextToken>
  </wsp:Policy>
  </sp:EndorsingSupportingTokens>
- <sp:Wss11 xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <wsp:Policy /> 
  </sp:Wss11>
- <sp:Trust10 xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
- <wsp:Policy>
  <sp:MustSupportIssuedTokens /> 
  <sp:RequireClientEntropy /> 
  <sp:RequireServerEntropy /> 
  </wsp:Policy>
  </sp:Trust10>
  <wsaw:UsingAddressing /> 
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>

The authentication process is handled by Spnego.
I simply changed the Webservice endpoint for my URL and imported the neccessary certificates into the respective java certca store
besides that I didn´t make any changes to the code.
I have tried for a long time to make it work but without success. Can you guys tell me more about this?
Am I missing something in my code that I have to add to make this work?",Windows 7 64 Bit. Java 1.6.37 runtime environment,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-16 14:58:36.524,,,no_permission,,Unknown,,,,,,,,,,,304621,,,Thu Jan 17 12:16:40 UTC 2013,,,,,,0|i17nqv:,252816,,,,,,,,"16/Jan/13 14:58;coheigea;
Some questions:

a) What does the CXF request look like?
b) What does the CXF request look like over HTTP?
c) What does the policy of the endpoint look like for HTTP? (if any)

Colm.","16/Jan/13 15:43;jair;Thank you for your fast reply =)

a)
the Soap Messages look like this:


SPENGO-OUT

<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"">
<soap:Header>
<Action xmlns=""http://www.w3.org/2005/08/addressing"">http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue</Action>
<MessageID xmlns=""http://www.w3.org/2005/08/addressing"">urn:uuid:6d0b33ad-71ea-4a04-8a7c-db8c88fac0ef</MessageID>
<To xmlns=""http://www.w3.org/2005/08/addressing"">https://logicalis-alt.logicalis-old.local/logicalisGmbH/XRMServices/2011/Organization.svc</To>
<ReplyTo xmlns=""http://www.w3.org/2005/08/addressing"">
<Address>http://www.w3.org/2005/08/addressing/anonymous</Address>
</ReplyTo>
</soap:Header>
<soap:Body>
<wst:RequestSecurityToken xmlns:wst=""http://schemas.xmlsoap.org/ws/2005/02/trust"" Context=""_62422B642FF5EA5F1513583285903681"">
<wst:RequestType>http://schemas.xmlsoap.org/ws/2005/02/trust/Issue</wst:RequestType>
<wsp:AppliesTo xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy"">
<wsa:EndpointReference xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
<wsa:Address>https://logicalis-alt.logicalis-old.local/logicalisGmbH/XRMServices/2011/Organization.svc</wsa:Address>
</wsa:EndpointReference>
</wsp:AppliesTo>
<wst:TokenType>http://schemas.xmlsoap.org/ws/2005/02/sc/sct</wst:TokenType>
<wst:KeySize>256</wst:KeySize>
<wst:BinaryExchange EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"" 
			ValueType=""http://schemas.xmlsoap.org/ws/2005/02/trust/spnego"">YIIGNwYGKwYBBQUCoIIGKzCCBiegDTALBgkqhkiG9xIBAgKhBAMCATaiggYOBIIGCmCCBgYGCSqGSIb3E
gECAgEAboIF9TCCBfGgAwIBBaEDAgEOogcDBQAAAAAAo4IFFWGCBREwggUNoAMCAQWhFRsTTE9HSUNBTElTLU9MRC5MT0NBTKI3MDWgAwIBAKEuMCwbBEhUVFAbJGxvZ2ljYWxpcy1hbHQubG9naWNhbHMtb2xkLmxvY2FsOjQ
0M6OCBLQwggSwoAMCARehAwIBB6KCBKIEggSezNvSzVzX6OgoCLddWIEsn9SxHqQlLuX9/jIBxpZvaFFSTUabc1YXhbIjXlA9tuidprSrSLOKcPNTzelPsaz5gDVDzY2+DW22MbTq4Na7RsBUCkM8XRES1/dOBk2nULkxbOsiXoe
/bIKpVVFqKKEdivA210pb19nnY+ci7JcLeAqMS27tbKqdLTpF3oYOp3dtqKFCMDDO+EjkGQ4Qtx4QQqQLMUGU7uWvt1SY5sFKhKo8hq+APDiqXZHdHVNhxvqgfUVmVqkkfD9KuTRsvXm+69gn9lDrvPAdOL64AAaTbFFadVlc3v
FRK2QkUEZqGmsoAA2AyXwYqrq2bHYXNx3CDneb9Dxyuy8JnU3rDh1E986oq2Tta1D+IKkzP7ukk7noqqlqU7DP4vsaMtlpamwEj1NntvaQ37gw+56j7OT2OFHkpl//fBlb2fiTIwPn1DsPrJcGYp9H1KPb09rIu9KhawvtVA33x
GAu9a249gvAT/EbJeDL7m/K45zXLXkVhygXe3pa+vYgDEdo7rig5r8inu1ifYgWTsd7x/nzos4xOxdB7u21SWFPFlrUF7bNXyBVT21Dl3HM4Hkg9Q3dCAQU3svymsEbNnFMxq5qhHipDDZqQIvmF4GQ90txehr8HQdNuzmhao2x
HzSd7C8a3t/EPRX0+JLMv0z9hunQLSRYf0fp/pw4b5wemJyj/bA5HpL/9WSLZ2cqlYulNF2fhIqF6wPP59y6gKzuyzoIYKSsVG6GDSFCwJJ/4JlBbAC5OzFoPnhl0miKxLDksz5gUzhRZ6eAmitXLs8G2H5NUnRLf9iOveNBFck
rCVwWTiewjQ0Bhq/0xbl5aOgDMrhbFVseu4Sdvxc4V7sAnHJxXuq6qxFtcwO8NZhljy81Jcv9PQJi3N2zEmv/v+BDFnAADusKZAVO2ne5HjTJW+t9cabOIO3eFx7k7BZpjDqUdJHKU7qJkETSKKYcPeDE0O4RkLg84rsYhQEMgQ
qk/GPkwF8LhbgdL+Y79JuLIJxkyN98lninArRjw78wtaULs5tgf1iOLZ4I7Ta80Y3G7ksI+eiZYxKA6eIWEG9h1CuDWjiQCG3s+6LG8MNRaTFi2dZkyQKc0gWGCtRlmaUvBd3aDmL7/fmTmZ2a0Zcb3skrd0uOb9FlxMK5ggxPIl
nO7t/9JhiZjRAtlXjmtJQ+Pb0bWyn0NArOazWwBgqsc3KxwDjQNBxtHv8i4gMUjIyNSDmBzYQUW5pDQyDWfbOPCKPl7B7yMXzUEWMguWioqOmtOIw6S77wH+xcwoV0P9WOSyTS+9jMp+fKS1Q+kiJ40WvWwmiJFi0UZarXoXKCcj
KtfHcIkaekrKHCBw1wcdOMEFQ8iAFYVqVTySY13Cm1YIawQ/NN0/AnHwwjSOY8S1TxhGS8KwCYNbE0MOOSX/CJFGcB0xgN0V/OaOm3wCQFP2JVOGWmeh0CQZ9FuwCp45osG4SRQkJsAqh92buX2P8tYo4G24azMetdJQuED8nO+
01yv9asGxij0nZOUOx8VqP94c+/v9BX7w3EyKHJwu/TdSSHbJO3euvo3szjvz5qOmf4tCTgpIHCMIG/oAMCAReigbcEgbQpEPKGFc5ZdFT5qph/VPk/MCEOlSxdQ3QwHXxVLfdv3wWQN5d5Al27m0gYuPi0YpKuXRfJ7ME8/ch
qggszyuOcEL5E/8EreDx5EbcKxNMjcuquJ0jGQ6bc3NQh2DrXSpBfpMWVI3ZTVycjX1G9TWJsS/ECGvxG+ND1fECwclGC3dg+tATmev68tGSU3+2eobsNFl2oFvNRu2B14YYF7HlF+0Q4kAPpZa+AWFtOdzniKjqUFvI=
</wst:BinaryExchange>
<wst:Renewing/><
/wst:RequestSecurityToken>
</soap:Body>
</soap:Envelope>






SPENGO-IN

<s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:a=""http://www.w3.org/2005/08/addressing"">
<s:Header>
<a:Action s:mustUnderstand=""1"">http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</a:Action>
<a:RelatesTo>urn:uuid:54fb5e03-732a-4d03-986d-92021fb0d5d4</a:RelatesTo></s:Header>
<s:Body><t:RequestSecurityTokenResponseCollection xmlns:t=""http://schemas.xmlsoap.org/ws/2005/02/trust"">
<t:RequestSecurityTokenResponse Context=""_DA41BF03AF7B9501B313583294881111"" xmlns:u=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">
<t:TokenType>http://schemas.xmlsoap.org/ws/2005/02/sc/sct</t:TokenType>
<t:RequestedSecurityToken>
<c:SecurityContextToken u:Id=""uuid-32da8094-b784-4caa-828f-930026cf5bf6-13"" xmlns:c=""http://schemas.xmlsoap.org/ws/2005/02/sc"">
<c:Identifier>urn:uuid:c36e5346-094d-4a05-9daf-bcf02f13dfe7</c:Identifier>
</c:SecurityContextToken>
</t:RequestedSecurityToken>
<wsp:AppliesTo xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy""><EndpointReference xmlns=""http://www.w3.org/2005/08/addressing"">
<Address>https://logicalis-alt.logicalis-old.local/logicalisGmbH/XRMServices/2011/Organization.svc</Address>
</EndpointReference>
</wsp:AppliesTo>
<t:RequestedAttachedReference>
<o:SecurityTokenReference xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">
<o:Reference ValueType=""http://schemas.xmlsoap.org/ws/2005/02/sc/sct"" URI=""#uuid-32da8094-b784-4caa-828f-930026cf5bf6-13""></o:Reference>
</o:SecurityTokenReference></t:RequestedAttachedReference><t:RequestedUnattachedReference>
<o:SecurityTokenReference xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">
<o:Reference URI=""urn:uuid:c36e5346-094d-4a05-9daf-bcf02f13dfe7"" ValueType=""http://schemas.xmlsoap.org/ws/2005/02/sc/sct""></o:Reference>
</o:SecurityTokenReference></t:RequestedUnattachedReference><t:RequestedProofToken>
<e:EncryptedKey xmlns:e=""http://www.w3.org/2001/04/xmlenc#"">
<e:EncryptionMethod Algorithm=""http://schemas.xmlsoap.org/2005/02/trust/spnego#GSS_Wrap"">
</e:EncryptionMethod>
<e:CipherData>
<e:CipherValue>YEwGCSqGSIb3EgECAgIBEQAQAP//gBc1T9QCbBDI7JkG5pJDZwje5qhPyrNyWx3w1RZIqJ1Ev+TTREkwBIcKtmrMunke0W5PAeRlzynd</e:CipherValue>
</e:CipherData><
/e:EncryptedKey>
</t:RequestedProofToken>
<t:Lifetime>
<u:Created>2013-01-16T09:44:50.291Z</u:Created>
<u:Expires>2013-01-16T19:44:50.291Z</u:Expires>
</t:Lifetime>
<t:KeySize>256</t:KeySize>
<t:BinaryExchange ValueType=""http://schemas.xmlsoap.org/ws/2005/02/trust/spnego"" 
			EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"">oRQwEqADCgEAoQsGCSqGSIb3EgECAg==</t:BinaryExchange>
</t:RequestSecurityTokenResponse>
<t:RequestSecurityTokenResponse Context=""_DA41BF03AF7B9501B313583294881111"" xmlns:u=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">
<t:Authenticator>
<t:CombinedHash>ln3KofYLZ1DPSV72y9EmNwpR23EI6/wd/AIXObo5+qI=</t:CombinedHash>
</t:Authenticator>
</t:RequestSecurityTokenResponse>
</t:RequestSecurityTokenResponseCollection>
</s:Body>
</s:Envelope>






SOAP OUT

<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"">
<soap:Header>
<Action xmlns=""http://www.w3.org/2005/08/addressing"">http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Create</Action>
<MessageID xmlns=""http://www.w3.org/2005/08/addressing"">urn:uuid:712350c4-acf5-4f4e-9dc9-3ae95f2d0b68</MessageID>
<To xmlns=""http://www.w3.org/2005/08/addressing"">https://logicalis-alt.logicalis-old.local/logicalisGmbH/XRMServices/2011/Organization.svc</To>
<ReplyTo xmlns=""http://www.w3.org/2005/08/addressing"">
<Address>http://www.w3.org/2005/08/addressing/anonymous</Address>
</ReplyTo>
<wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" 
xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" soap:mustUnderstand=""true"">
<wsu:Timestamp wsu:Id=""TS-1"">
<wsu:Created>2013-01-16T00:15:57.968Z</wsu:Created>
<wsu:Expires>2013-01-16T00:20:57.968Z</wsu:Expires>
</wsu:Timestamp>
</wsse:Security>
</soap:Header>
<soap:Body>
<xs:Create xmlns:ns2=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" 
xmlns:ns3=""http://schemas.microsoft.com/xrm/2011/Contracts"" 
xmlns:ns5=""http://schemas.microsoft.com/2003/10/Serialization/"" 
xmlns:ns6=""http://schemas.microsoft.com/xrm/2011/Metadata"" 
xmlns:ns7=""http://schemas.microsoft.com/crm/2011/Contracts"" 
xmlns:ns8=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" 
xmlns:xs=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"">
<xs:entity><ns3:Attributes><ns3:KeyValuePairOfstringanyType>
<ns2:key>name</ns2:key>
<ns2:value xmlns:ns10=""http://www.w3.org/2001/XMLSchema"" 
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
xsi:type=""ns10:string"">TESTRJPTEST</ns2:value>
</ns3:KeyValuePairOfstringanyType>
</ns3:Attributes>
<ns3:EntityState xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:nil=""true""/>
<ns3:FormattedValues xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:nil=""true""/>
<ns3:LogicalName>account</ns3:LogicalName><ns3:RelatedEntities xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:nil=""true""/>
</xs:entity>
</xs:Create>
</soap:Body>
</soap:Envelope>




SOAP-IN

<s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:a=""http://www.w3.org/2005/08/addressing"">
<s:Header>
<a:Action s:mustUnderstand=""1"">http://www.w3.org/2005/08/addressing/soap/fault</a:Action>
<a:RelatesTo>urn:uuid:63e903e1-0224-40ee-a42d-751aece0681d</a:RelatesTo>
</s:Header><s:Body><s:Fault><s:Code><s:Value>s:Sender</s:Value>
<s:Subcode>
<s:Value xmlns:a=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">a:InvalidSecurity</s:Value>
</s:Subcode>
</s:Code>
<s:Reason>
<s:Text xml:lang=""de-DE"">An error occurred when verifying security for the message.</s:Text>
</s:Reason>
</s:Fault>
</s:Body>
</s:Envelope>

b)

this are the soap messages for http when its working(Lat soap response was not logged somehow):
These Messages are somewhat big because of the Tokens sent.


SPENGO OUT

<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Header><Action xmlns=""http://www.w3.org/2005/08/addressing"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Id-1844781148"">http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultiple</Action><MessageID xmlns=""http://www.w3.org/2005/08/addressing"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Id-1685182312"">urn:uuid:b9025ee6-2996-4de0-9f55-01d516906b43</MessageID><To xmlns=""http://www.w3.org/2005/08/addressing"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Id-1157060537"">http://t4ac50:5555/Team4GmbHDev/XRMServices/2011/Organization.svc</To><ReplyTo xmlns=""http://www.w3.org/2005/08/addressing"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Id-1252021774""><Address>http://www.w3.org/2005/08/addressing/anonymous</Address></ReplyTo><wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" soap:mustUnderstand=""true""><wsu:Timestamp wsu:Id=""TS-1""><wsu:Created>2013-01-16T10:53:18.986Z</wsu:Created><wsu:Expires>2013-01-16T10:58:18.986Z</wsu:Expires></wsu:Timestamp><c:SecurityContextToken xmlns:c=""http://schemas.xmlsoap.org/ws/2005/02/sc"" xmlns:u=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" u:Id=""uuid-ffdc68ce-6426-4071-a214-8c8a4bc648d0-2815""><c:Identifier>urn:uuid:1b6a35f2-5516-44b0-b429-afc509b2a10f</c:Identifier></c:SecurityContextToken><wsc:DerivedKeyToken xmlns:wsc=""http://schemas.xmlsoap.org/ws/2005/02/sc"" wsu:Id=""DK-2""><o:SecurityTokenReference xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><o:Reference URI=""#uuid-ffdc68ce-6426-4071-a214-8c8a4bc648d0-2815"" ValueType=""http://schemas.xmlsoap.org/ws/2005/02/sc/sct""/></o:SecurityTokenReference><wsc:Offset>0</wsc:Offset><wsc:Length>24</wsc:Length><wsc:Nonce>TUOKvqNxXMHSBxzUwGBdxQ==</wsc:Nonce></wsc:DerivedKeyToken><wsc:DerivedKeyToken xmlns:wsc=""http://schemas.xmlsoap.org/ws/2005/02/sc"" wsu:Id=""DK-4""><o:SecurityTokenReference xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><o:Reference URI=""#uuid-ffdc68ce-6426-4071-a214-8c8a4bc648d0-2815"" ValueType=""http://schemas.xmlsoap.org/ws/2005/02/sc/sct""/></o:SecurityTokenReference><wsc:Offset>0</wsc:Offset><wsc:Length>32</wsc:Length><wsc:Nonce>bzZo2W046BuRVTzTGfByEQ==</wsc:Nonce></wsc:DerivedKeyToken><xenc:ReferenceList xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#""><xenc:DataReference URI=""#ED-5""/><xenc:DataReference URI=""#ED-6""/></xenc:ReferenceList><xenc:EncryptedData xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#"" Id=""ED-6"" Type=""http://www.w3.org/2001/04/xmlenc#Element""><xenc:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#aes256-cbc""/><ds:KeyInfo xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""><wsse:SecurityTokenReference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><wsse:Reference URI=""#DK-4""/></wsse:SecurityTokenReference></ds:KeyInfo><xenc:CipherData><xenc:CipherValue>euu/ROxihfldzurAVwhO8UE4IxTodm7AJgxngfLzbNoH5z9hYnZl9FshKmw2w2sXmZ8O0VgE1Kv0+K7r3uBufyPZcN2x8XRHqrHT/M3XrXvwgu+TPiLtyueGGb7lWsFw+IdIbTTuXaXvof8kqd9sEDFQ/ZrluEK4Y7QPpUOyTgNd7azY7rTiHgHNqxufLOlQIH/VBQoHtHztdFPbsRqtexIOri7NK1by/zQmIGQaTXTWLkmu8n+hwPHb1Cjx0LutJ9nWJQJTEAhLTwGN53X1H4u/yclblanVhJx/nsXCa05jU7rJXCBFPx3e0yn52yzszeAlWPtv8TS8odDZqYdroAy2n90zaXvmP7P/Cn/Zt7fv063C+Cbr3g6ZqpCJ2m529otpZexFixRu5P7jtOIMH9jhD2j0TDFA2RPnWg8bH4VBLrwnYv7ZrDRAunCz1xIo8C9tRYx1Z92RVaWv9YGy0HsIQ1AFy8qwouAX0Xnis/yfQ4nJvbCncUdgE/AlXtTK84W+9pYQGm/dGHPuAM93nfhCEnKqOYVFqMua59axQzEwPDDcAGIbhG2JhJVC35zbywB8fWc1c5nXm4MFFUtcy+YZaDunEXwocZq3rmKwvXH4JP63zPzoIdwoSngYhw2hMQ1/eODV5zUSOMqAxHIglMWLGe5n/sxJJEMAwnloNQeXeDJtxQ5gMfStlXvjrxnw+lert1m4t3ju0KxXKaCni1K6iJM4o7PXbfublRWv5EttR9xBwNemfbM+F+XMwWqCTF6TeCFi1u86cVYkqf9ivys1FZEY07X66Hn0cWK/VJO6/SKrDE6rY3r0UltWL3gBcXMZne6aRH/kWOa0cTAb6tk+mfhZijSWSb2cplIoev8f3FM3BEelI9Rfqorfw2YCo/o/fdtT1DMt4P2CLd+8EhPKTFICXtIxgSzA4PKlfvRPupDa5weiWYfMTG9w4XfYgi3AIzfAFZ2PWKTD/iGVPMQzhZjYdf2eYBgk1wO1KFIMCBiprvOng9ZCE5y+FxOXjAyeIu5OYZlA17Dk9NAIcYfbvr+Ikl4qb3BBSJ5baRn8miEpRhvOf8icBye8xrj/qSOBCNf85rJHG6bFCZ3UEjz5c38OMxjMhwWq11n71ZaylXuusK8fzSfjQZL9xxSuAvaftIeW9baVzJwBji8k2v/mdtNswQU4Q/v3OVEJ0kV7QV9BBC/jcSGVLM0jWTLoMqHcu3R+Mha6NRLgR2ldEQ5JOGwJ+JIx8AQyJhYYazxZ0S/FwFwUaaPDrw6oZMWaxB6U4HTfMQsZ2BEAPj3WpFJkGRwUbPYIn9aaorua/+1YyJc44ZUhzmCSstafYWHSbtwpcvKzYuHzXgLhy53ENJSNFLKFk5HLswlDpavIXpJP2blhicrUkAaBsap9mi2p2yzubOGOm6LQxYxRZVGURAqth66ooH2McoOSjPPzWeRD78aHkb0hX0SnbrwUjJFagKgzj5oOoDiSFozPNcU3DmBUZDsJ9FCqp+ELBKjKgxcKFwf6IsmNn/Itn2d6mcnsDmumIyO3XZaoTRtjOUFykiMo2HIyyi2JP54alpZPb2OX/ky81I0ReLWcIzEb3EMBQU31b0AD+EeTcrQwkMD8n3Kr8f+xvLwKyJu2gPPWg5JCdbrBBx1+iYRtn1TpoN6Cb6/GpkbCciscg9nsfByELwBQhCxMiNEgImsDLsF+Qhl/APhSp6AZDvZvWNFUsoZXGXf9qbtpfVmizejk3CTpR4pL+vLUom8g+hRu+A+R/TwExn/4kK6C2GrhX7Wx7109+Kp/v8jIEbMvluMkGAKXYd2Kf2jyCwiXnx6Dg3hsMgkcz7GQ/RPlsgR7Doj0YE2oweeZsjmkmkLf4uPCRKsZLBJUuexVAzvoDoRzLlp6EicmFJPdBm8wNgzOazGufrBBI37CFkNLk86JysBYGLPwB2DnsCEwl+TS/rJz/8uQTkv3HkycTsWmYCXfPb0i06TioBZyGdCAB1CEdPemFZZa83PsoxyRI5863oPKryXNv63Zq1zHryqHG1pzJ0Yz58LDugmPBYVW5pcvfYQhTPIeCwGb8N5KLov+DW5PGRcyAJasNHAj+QTEDBl0WMySCPx2J+DvjCvGiMo5zPOdHywR89rwsZbJstPl10fUagrgmYIcJge9+9puvhe+U226slO1+nkHz4knKrcZPoxSpCg369/rkDTz2VrVIQTLFlpJnIf+6Ve7XGvcXUFtKSQ1AFCF5p2dgd+M+szNKMYx7aU+suoYgL/IPUvW3V6yzZBDEfvHPTEi4J7REEr7EFMJJpztr3cEQUIKuLzdVlZSPvgFxP8Fma/vEVO10r0eJobcKcnHj7Mx8vNAuiQ3qpkb0xWThCT+hqurBqSfkyaA/6NQwwU8MLq4BE1iAxrSJzm+xRQrH9rg9/4L6AftHtmzxjz1vDOsHZxJ8qvasm3eMlvKht/TLFE8u+ZePg3sN/ch2EAwdvFFSe1dZSTf0Ht/PInCy/IlsEDP1+mVzxTf+wBlrY/29wYJn0jx7+/Zruz9PTohshVYtVcI0IX5YmsGchougCO6x5wK68HsDcf5h68BLYFpK2EzGDzHHAQ/uVebq5U/DePSKchnK9sY4Xe09eN+7gbKsqeQSbUtwNCZ2V2QU/+eM8rjE9QmqiHF03tMi00H7O8c+v4sv06LVZyxaRAoe4AOAXIluWeSd2qPzGcjlHPXqoLzP6Z7l5QJrbNIgFfp7Uxq5kLgpRpJG+4LwmT5rpoob292TOLA6HnhBSQ3quLrieYICEOsfirJ2caW7ZY6iq55rA0WzOL2qcXQGS+Am4tPIdf+7juMLQGa99UCbFSAe6as4NV3BLkcJEKgaGprVISauEgTQ9SdCFpYTAwY5c50MhVxoKYw4UEYiVTouNlDnCGEJAKjDTZSuUUfudL9gRhonGj+oPONI628nt4DsxAsoerN77hquJqlQ0Zv9uQzEg1CbayUkcyot283Rtp4ZbccGiEzGPanAapZ0Bb0MQ3RtfY94UsjWAmqzWO0XfwyOkjcsjDDtAo4aAjZOo/w2j1vPOU0/MUi4d13SFETFD/GquxjEfUk9O4cV0PzomL45ANOlsxZ279ik8Vdk98JxQrSxyl4+klY3JbGBUk6YwuiMAw1Id+MfzuL+ednOv+ZLqHcCGrk+ufOzvy+Kr8naQ4Zook1z6paEVZwwG46RMqlfvF/u8MWvr5OVIewm+/LD0G9PSAKfJHqIP+t6QZnhmR3SKRPqXqiK5wY2lgn8JlkLrO3+UCJ4rySaX3i0VqvUAqoljSa2MtvUo8s1WNssCRfVYVJaMd33gsmjxD6+nYlC0KS3z2BlFh/T8OfwGIa3xBlv6MeIKdWaDdsAzpkOKuOFXC6mhfpLCIlomN7enfjkaglYNh3UujcsQ7faOhmPUnXqSgjv0i3HzvRc1vlbWn87V1lP0CIHad0qB/Sz+9SCYDZUTwVQ6KZDIeLI08xZlm+/36CD43VlaFBYtEpZwkOiWUjKF7xn94fpyNmj8VGCGEe0fpWwwpBNB4/gk/2E1yfe8HRQ0OjxsVIR7RswLOrcnp7zQ3deRuocgLEC59mE3fJ7C2bfeeqF6EhsN8mMtmHFWehKmWs4UEkiZmJqHQaF6oFoPzAWDlwO2PPTMdZthe2hpLa2KevAx94wGIOJl2gqjdJJZVYO0fLZPA0jZgyp3csjfQmFDe8yYTqxrXxpIximvyDW0I690ujqzottXZU84N44BjSY3o3PvQuz5kub/U8pOTXEIGpqI2G/DcXVoplj0ELctdV4OASfmmBzjzY4w0dBADG/drlLqLdPsuAc00P4eoZXYDTcO6AAl8YIRiRblWxzN/atFao+7qX8Zc0v/t9+MdmrERsxhOrsYAY9QbqRuHo07AaN1RHxBT9ptwysVbPN4fHcG58f4RTbxChrok+jqb5ol9eQwqPlvASV6rQnpQqh1N43strxScVPHp/swJP28tMTQpf0S+mo8pLyZRYFrGVvzIScPU82vWTlZ7ueB1Vk3rZxq9AhEqBsTW4aa0UhEwS+ApwvoZM2wPWJ7Rt5KIZ8JYtZGI+mLVwS7E5E1Dl9M7iNmhtn2zIV/rN00BhHMuKfe5aKg1iZryUUiLLaFMA/2Fty4S/TAjCSQLhUqCVwMo2dKuDuEx2jpVi4LKlWFLrXkalcEpX+tlWiMAUmcmsKv8WbQLVBC5GIV6/uf0Ogovf8abXgi6V6MHj2Hrtu75/9zew+wVhkrOveQbJTfNaNWogbS5Ljm4OLXRrf4QugjnPnk3Zu0ETDGMpWPSiIRlpj/6/P3s1kdaaLMzC3zRl0aquF6knj8XHs6WoN9MfsrlJGTJamwhmm8CgLHv1LjG1U7XZSdSJa4uuAdQuKAot+HKGLS4=</xenc:CipherValue></xenc:CipherData></xenc:EncryptedData></wsse:Security></soap:Header><soap:Body xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Id-1522869469""><xenc:EncryptedData xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#"" Id=""ED-5"" Type=""http://www.w3.org/2001/04/xmlenc#Content""><xenc:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#aes256-cbc""/><ds:KeyInfo xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""><wsse:SecurityTokenReference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><wsse:Reference URI=""#DK-4""/></wsse:SecurityTokenReference></ds:KeyInfo><xenc:CipherData><xenc:CipherValue>7DAeeKBrgMs0Pieyvj37bruaAB4f0+eI2j9ceMCas06pQDuejIWpQjtph6ASwBH1wRu4zkgsnMO/HhKIRcymEiug1J/fk2SvgtizqkinKCSAg6Wl1b+tSS/S103lUnf96am0LMw/EMp30yDl0kO1nAE9Wl+oG9Xe6UjRhC9oPFdK36+yK7ohUfE0mD67wuu3bYMDafIQBAKAAMtPl/0L/W3QNHL2lp5KM3xgzIbmmWPXFsZjHCvVJSThAHixr5+xnSVKMVjdBVg78qanCgDMlGFREYteDl2Rf59qHOMwMYe3sdVfyurf8xn+0BLK2cl52j8ywPiU/4v1IN2Tqn0kL4qKuWT9MDtgTYfvEhA7bsXRDKuWmm7XYhbh9VuGzsW3BvuUlcICggJjLJwDQoQzpOFHBncnfgtyJHkBHNGS6G7a2356fvJcKa3s0SeOOOqy0pTBFjH7V/9UCd5SQ87fAKnvhEF4XaSbe8ku68K+5kxX3xdXeun0VRx8Njv503biIGl4/+hGAfI18OKKljpQgPv9nmeDK2lbiEhLXGTZUGTdMFPLvNsEZRixH+LeKZYTriw1R1MyNY9PSTLV4fzCgxyndKRTG0S+Sj7GiY3jpONrlXeU0cCJVjNxK4a33p7GmcMs3XllJ4/kPDpykse/8jGsDAdIEXemXnW2nZEkzN/TzNEfFbjL34mORerXuOWUuWb3m3WuarGGK1A2FvdBvIasjNZ7HbXy85ueBY4Iy7RnqPizXQgGGjfoh4+1BlziU0NnSSKG4ppTUnDb792rbKKwZmoYAlJzlfnnSgwqS258HFWmDgCGA0wv9qphwzV9/NDfE7YyXb8RIl3EBk7iGItDekh4ZvD0LcrY3bA9cFiVjxKIGjpPNzmQaMtavD+UJ5bdY/W2CKqGPyaS4wB+nVeQsmb2ljjwgZkEpcDOgMTeRR7Sl9oPZ66mvO/rAlR3HowXszE5VTkmeQhXEncwLKdgI5CWXUhucGxvlQCGg6WnL1pNu+ISQGU4zHSR5qh/7Vi7VtvGCoZKFAJdBt6uicnFUcvtb8TaIlP3Hs2coyYMcd/EHfbjGP5VO6B7gESIISw3fRkLE/QuSiKJEsMRRkXyH+CUdk3zmOreF9363lKjD0QDcxjpCBrKSGgggvXqrDRXkaHKOR4ku+1+ft/SHz+hXL4XTYVxi/cvwTa+iq57c196sVa61M7E6x+VI64SilHiv8p58X35E2X32XvIUlEvK5cF1bMJ2Dr87RBct7A=</xenc:CipherValue></xenc:CipherData></xenc:EncryptedData></soap:Body></soap:Envelope>


SPENGO IN
<s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:a=""http://www.w3.org/2005/08/addressing"" xmlns:u=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""><s:Header><a:Action s:mustUnderstand=""1"" u:Id=""_4"">http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultipleResponse</a:Action><a:RelatesTo u:Id=""_5"">urn:uuid:b9025ee6-2996-4de0-9f55-01d516906b43</a:RelatesTo><ActivityId CorrelationId=""4cc2c724-0eb2-47e4-a302-4b51e01484f4"" xmlns=""http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics"">00000000-0000-0000-0000-000000000000</ActivityId><o:Security s:mustUnderstand=""1"" xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><u:Timestamp u:Id=""uuid-ffdc68ce-6426-4071-a214-8c8a4bc648d0-2818""><u:Created>2013-01-16T10:53:31.981Z</u:Created><u:Expires>2013-01-16T10:58:31.981Z</u:Expires></u:Timestamp><c:DerivedKeyToken u:Id=""_0"" xmlns:c=""http://schemas.xmlsoap.org/ws/2005/02/sc""><o:SecurityTokenReference><o:Reference URI=""urn:uuid:1b6a35f2-5516-44b0-b429-afc509b2a10f"" ValueType=""http://schemas.xmlsoap.org/ws/2005/02/sc/sct""/></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce>+V4Wc8IS2OjbRUn/bl38pQ==</c:Nonce></c:DerivedKeyToken><c:DerivedKeyToken u:Id=""_1"" xmlns:c=""http://schemas.xmlsoap.org/ws/2005/02/sc""><o:SecurityTokenReference><o:Reference URI=""urn:uuid:1b6a35f2-5516-44b0-b429-afc509b2a10f"" ValueType=""http://schemas.xmlsoap.org/ws/2005/02/sc/sct""/></o:SecurityTokenReference><c:Nonce>UyYJdoHE06M53z6zggJVpA==</c:Nonce></c:DerivedKeyToken><e:ReferenceList xmlns:e=""http://www.w3.org/2001/04/xmlenc#""><e:DataReference URI=""#_3""/><e:DataReference URI=""#_6""/></e:ReferenceList><e:EncryptedData Id=""_6"" Type=""http://www.w3.org/2001/04/xmlenc#Element"" xmlns:e=""http://www.w3.org/2001/04/xmlenc#""><e:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#aes256-cbc""/><KeyInfo xmlns=""http://www.w3.org/2000/09/xmldsig#""><o:SecurityTokenReference><o:Reference ValueType=""http://schemas.xmlsoap.org/ws/2005/02/sc/dk"" URI=""#_1""/></o:SecurityTokenReference></KeyInfo><e:CipherData><e:CipherValue>mjlPn+p4kJXJ4MaByN1OYpBCPINnDEJ1VKmHhQp/WbyTNKtGc0OO+GwKCUaco8GIBUNsbupLdSGIvJpnA06xhp/hH5kopYsUeJu1NOxpJQFPr+59rmWAyrCUYAWdaEu8P4Dgo1yuYHksOaCnmdn0gK721+m4HPCh+LEpxZDOPvSbh2mkgnKmfwABm3nXoal1GY+1/jpoHHGj9INGAkAwiiQTVsKftQzRNJWR55wzWOyYPdAFjrX0zRqE9DyieywaDI8pFdSotzfD4OzXVx5TKTpARdCKE1ppvcHjj8l8z/15qgDxGInSRv1aIICJtp3VKMBd8v+T7hihNHf/pEmJTUFdg0UTAPPIH9pZGg6AxN1ShP7fWa0ifD1AsK/1O0F2t15ooW+h3FjMnlBx3DLSPe6c2UafNuJslmdUV1ySFDLE3x1Sy2qJEdVNPHtJJFmM1fMUpuBuh4dzAxzD7Y4E+2W9M1onIj6wfdX39/raKXbYBeYHpzCBfjCEjVwwEDqoWRg1kQ/zq3ypWMcw2LhITelaDM8nfti5RFfPP46IZUs9Z4h08tf2d61Ge6TpUo8f5VVUPcWWsXpxzwyUO/x5+y1iVi/0Q5cGu0XvNzkEsTeRKqmEGsGBVo2wp3OFHSPwfA19vDPqcqUgmRi1Qx1iF0fCCeRPskbgtB69KBL76fdNtyTknZ2kJXgg1JhNNLfWJmMXpaQlPschl8iWn58C/knHimFcaSPYRb8XnZHMKBFxDujmf9Qc4UQ2gy7+beW4YqFxSGt6m7hmc4ZwLiHq1dBzATP0S/xKttZKn6LpGVf9Bq1zlUjUePnhW8tWycaBhV+sjwq3cSrgtpCBFCnqZbWsaHmWSbL1y0x5ReMPJIL9zwMi6OQB2vI/yYvWervJ24nEC/GDV33MfopZuJ9vWIJ7AbKfgxQD+7DAONH/KifivCze407Rxcyr9llxSfeewjOZ68qRqlS33hEDLlojeilNWTyXSWxRCUpT/McU1N4yu+HqqxchIrcbGT+IG73h/Vkfp5wvA0OtFh9P85P0zeU86HIfimAGs07cnspH9LxD2k5ZWQAScssnPTwNjaAWTx5ZYGBAFo/7D56IVsBdr24FNkaIYatx3fhtQU7CFVz2koDhCrwtR0W8ByBxc1ADxzx/yzpGFV9/FBZWzsbpK48fLbQOL/2ZYNQyDgO+xOddgER1ATVwh669ZsP4EF9l4Y0t810wCyXbvlQus5aM8bM85MnmIvnCRXldPG/H5r773RhzSP9pscmbiDKZ8MiWXIqNln7TKsZ6kJ44ebspto7dWRveDsksbCl7BhGYg4ruT3/d12RtKOwo5Gr4YksFSZ6jvN0TeOBBBC4pFR/uQVCJrxmGD+HsJOADSTknKkxc1oLeZvIgDxzr/8npHcRuamwr3oaUm+RyjVzpZj0FnLMP2eUBARjQLxYXlUZ9cU1i+DAtEOF9tQ7RsGO2jOryfX5xPCwrqnoa/boB4RRDNjVIBBe3ztks2dKibrFXu2DxGQy/Qksx6EqwYB3dk7Po1j9C7ve8xf+GLPCLFxZ20uIOmCZyC18JE0bRnz/J6e6nzdW2dKDKOqbWCoxKYjyoLSCNxA7N37/1MJ/GE1JBIZQY9GGYAmUZC2zlDO0CDwsRASD+kLV9LVqSVJO9CSGNvg4Ph5LOeNBSDe1cn8E3DSruuq0TKLjL8u42bx/L2jmr6rkRkhqLMMmsW38TAlNu7Jo7QyIa6tYaEj7IxeAxBYUiv1+fDrDdCu/Z5KFM6kYyTZGeOqg+NE0cWLPI2rEo7UgkmxMDnNLFsst2OhryT+iOuz2WMKJbcHj+ulRINN3F0/M/aVo7W5oC6k1hgBhYxsVQkKtfROYgWFqD1T2je+0a5H6rOq9act/hGdLvAfJ4Qf6z8wmqqeo4hIuGimRUgrHKodGsxGj5t7IsxbLQA6MPM7PjaXwVYIIX/Orru9H6mNa983xzOmCW0r3lr+G21y72MIvj5m5eUjlN2W/bz0TZsDWUC6lfoTcjMLWOXhErux2sazScKpM08HkoVnmCeUiTIyAXD1n3D4BhvqedOAXxU3lUxBcm4a45sICH1ZOw0wwwGZpsGpe0op37YRqM</e:CipherValue></e:CipherData></e:EncryptedData></o:Security></s:Header><s:Body u:Id=""_2""><e:EncryptedData Id=""_3"" Type=""http://www.w3.org/2001/04/xmlenc#Content"" xmlns:e=""http://www.w3.org/2001/04/xmlenc#""><e:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#aes256-cbc""/><KeyInfo xmlns=""http://www.w3.org/2000/09/xmldsig#""><o:SecurityTokenReference xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><o:Reference ValueType=""http://schemas.xmlsoap.org/ws/2005/02/sc/dk"" URI=""#_1""/></o:SecurityTokenReference></KeyInfo><e:CipherData><e:CipherValue>nSTYb+fQGAFeCZF5z/aMNshPrPjFH7TS1OgGAok9oMJfBQstnZVUvOOj//UcPqx4EV6pJKc7GzZ3xbSN7moPd5md+QR+vgGW95fIngA43SjJSIaWYtSpe5/2fnxFbP1MYOpEViEIikgAzAV/oyB2LO238AXCi9qKtXKxcXgQTwx1b5Jgw5x237ql5syosi49j2VM9pEGzKTmRzplsNlpCmzCNvylKKw1+KRPYtSI8MxQKczyjE9BQI5vZZyRXOjhWUv07KQ60xU8BILbv+PVHvHck7xrcQRa0MGm5KpmiBPDN30L53aikHkFFAsKBTLMUo+jWu+dTKTxQ2bEsl85JwghPQTs5QntomY9AeQ9v/K3NfqzaGi5NwDUR3KuR1xC6v1EkPUWSZamm7lxAjyb4NuCqq8DvQKwcjQMyo7PIzcEEy7IvXP2w8LNyQrsoGPaJVI8i4jl21uc9XZlz9oFfrd5EoGp3Ao44mKiufy/0uekjmUS4GsPb+JHXpVS+5oWYyqDCMBglJsXucTjDKy+9r9KbN4pg5xSWcCMkU937Svk1Dy7HmUsPi+9BWAn81UXwU/CzcW4VGWTXCJgkl8+EVMAWvbIFnywCAvoBjInYzQm1LLtN6Fm32P7VT500zt5c87WT0ZDmKB8nOqCbXojFjfNbjpVN0PVgh51tpdGGL3taGZozkOOi68eySJ9KJRBS2a3caXoh9wZKbbp/Pg1hoiyrZG19C9aqx4jzbgoJrEjbkQWL98p+h2He0Cdcug1vzsjDArA+VYt530uXNhFxmVWchjVl3eVoQOyZthQzXdz6ujTaV2nfi1mz6yyRJTaL4OsorxQ+lCP8+L3tvAWXvb89h7Wb4WO2u8dETjjR9HiyWWWg1kAfCekEWW42N0zDLhX+nNX79vfpPe9vild1bEGLVHEgreFutn3+gLuxS9+owbFAmlG5PHtam+v880Aimuo7oRimpP8T2L+qgRfsX1XJbDn5wOzjkP4/sIO5lDVTu3S0SejYyN4HiWjAsrrU9URmOZF3osKxzcS5y9ZXqtulJlRAfRfZIwYRR5HzTKbI1Gt8OXwJ6ltVK+bMWdQ8WKgWckhjHMjXUez2vJUWR4Yd1aFG8WkAbZJN7dpU8Fiaj8ndrX8tWBTn3ItofhKnDr8nuO0uEGClxT3Wgzd7eZKtuywNl2ORwfs0Nk9/gBYqy0fz+OS7nozZ1RfiVsDEs5LKCodGVy6Gn4tFyZgQGkTMroeDh2y9k+CP6cTeL6q0O9piRSkPNBcnedTQXla7dEKOwnf09kIomSMaYkULmP7QrgCiSy7ELzfiSWdgaRJiZuJZrmPyDun58mRYpOI9Z4tY4+8UYTyrkdTHd2ZtvWRrCxjPbxUiIXp85xxe1nigOCCkWMex57W2R1yJxnu18SgSFTR+qmIU90ay6O8PpiDPG4FXKPqhkVrbqleqGKEiJ14ZACQXtNPAnbnsqSKDyYqWimFfUBxKoP1iEo5n1Jqe7mgTm8m8zkv+skyyh4vdhhgUoNrSTg2BDVMYJJwPrV96I5DMFCe+mb2SWg6mRMg6QHAKebwsufLhM+KtRu2Sp+szOjWzwnurifzjrTnt4U3ffSSDBAq6P5b5e9YBI1dpLTjt2a4Xh7mQhpEd/YLWjKriNXCBSRGjcYYRU+i0mFz2PxLe88ijOE1snOmmuVEXTJmjG5InGKHrxf4DIQ5cAYLLP4KvNUhqaeezSAG9n4tQsTZX4VE2/bFvapioEttNWCEhwXCdkzAKd8CKT+O5smX65ds8CSFPXIk4UCzRjFtGAdMnJ+E0xS/GWVwy+usI1hJsG1Ni4m6VIPwINP+pEz3OkRqe8OwHrGXuwibogMJGVWNtT+l/9KrIvIale4NmMnFwzwNgP2QnPYaBl6Jc9rVbtAonaacuQTgRNypFmhnBFYRD2lMel0fAXOA0nbj+t6AvYqF7lemsro6kuRrXQRYcNVhoxu1zZqwh6qqNih8nC/LpN4JZ4T4o2QPUkS8XcdptuWiopmyxJjkHrlnWWYubtC2KNeCgl/mLB2t6irN5c59m4F4PorbI/kgET0CJRK3WM+jjq1xu7r26fjbxV52aJRMIzpVSWYE3jhXHOHrMYakojNgt+vQR5wWFh+CYAllyZCT7cvf/rEevaXQG4VHGArUUjG0gxGwfuU16L9nS/GdA3JoYkKoAQo4XaqkQPb78glRaJXybMhGrd0d9raZrwqL5F+BEctw5t7K57HUIGYAInwGMNgi4YQ6ji0IK9RkXYmMFgKZJ3eeceSrRmr57LdogFefoNjeH796ILhvB5Pl8fspNCL5LlCHpdgz8/4PyTnuxsDBv8Sk4IW9tRVEN7Mk4+OGhz4HKzCB4aQiVrqJpXdIiwrL4lplBGLQ3oKdY3iMZ1Ub5jP8cTQdifA4IhLa8lrh3xkrkpRN9GoAaiJ5JqAFDCUl8p11OVA/DhEgxXy39oTsBGgxD55rL3R3c5rL/y3nFdI5q/xphWaaL6W7dFdfG8wKQZIcf1lN8lTTd1GhCS/kkcmHSIp4tBfOjvntTY+Qz6UMXWdMrq7YtgHGNJiBpuAfIaFqa0AIvRZaIi1OvXQ4zdARgspAKGhU1N+ussynHCrlooW3LCYDYedP64N8vPIpDy/4tTgL+zmP0l6DdWaxBiZppAi1oh8WtZ9pC5JKaJBotZESo1tEPLQLYOkhlVqQ3B3xYqsG0dmALo6AwWglCXdX/hgDBf1fU2JO17FX1p1ibKB1h44A5Ev73uk3VvZBp67GiOMbeNoVaCMZfD08Bo2/9fF61PtmsWkag9s//10pe34lpq/UnVFPxLunxM34MDI4gfsPk3QlPVy2I8OZOQGu0m/+5AQ/++X9BafB/q/vd38UTeXnPgod+XCP322OJMrVRPvNEdU0hwRGCmGZDxCgO5bAxkcNNdY645Dxy1hjxVKldVRsxImeJVaGUh5DuWJkVSmy+Ae4tcaC1UCL8qZtCu5I4/L1WOX8p8whap4BSlOAccCYY+3H/pjRvVAX/hZR6YVP4Sx1ifV04ywvC9V+Z5O4GzYVnubUr7fsP1h4e7Ln4m+FVbNb3dVu8g9JxyRbBpxKWhPg63sphJKyHZ2aZr+Uinl5uHgyMseVkkvXYU3EmeN8cV7pjIzRmmCiLAYX7owXWCZq3B4qVyX4dO9QFbFs5lRMu8vuZKUPvNw/NbeUohfWNILbZchYIArVOlINyUcZVBDsRqv96K6kKeQlH1HCkuPIYOHfHibvaqKju++uvEbQuENDJoZDCoPPurzvd2R4EUa/sRxGKKDq8JQ7KQyUQVLt8HjWisEUanWRiW/BrFenN6FsysIEZb74s0L3rN4+3NZVCaN/HSvLoeSyQmjv5GYGJyISltlf3DaL5IeADmVF0eVvy17Rv+AzllHNLxMrOOxEvVHqmD3QC0zJHcpD3EGfPIfaR4lgZojXt4ULP7+1gxgykiHop9dweJdZrOKhBQAwBHdkZbneHJrznv0QOcMRSjQ1Lcb8KAal4voOX19XpXWmCHjSNPRao/ZfJWcESY62f2C6ACn2Tl7AhUIN8OqeRwTV4OolR96Qs5Vt8rmRlCUpzZv9aHO9izeexEqyBQMWd9aVSz2aTen/W507s3qHMxmLh5PpB1wtCNJV89a6q6714aNTbEaIxjnULePIppLajbgebHWt/ds49Xdk9cf1KsmjWZ7ks6RbajyXdRvdu//H15zQ5oropChvLlSjqVmgS/z94FCtz6gwdJg8/c6GKA2yvpgVfZQhW2kMmjnh6Og2dqT7IeZZpurWmTvMm06IBmyqxqOyF20P9GYprWzT0R0EEm20nIB5ImIK8cc5DwI0tvh5tFI4VVQst8zM6dvnObbr4MqpWOIahzz4+L+KIm1obbkbNFSb4cFsMZHTlKBkS7ffG+AJDrK5qmSdn6tlWNcyXhvHKEtP2gC0IDoVURcqVqAIddZqyZnZVmiX1DvJcQ70fHjO5JcZjhEgoH1yRVODfSQdFYQQBm8qWWdTKj7W/FvHJ5VKbrNLSIvfL8ULajVuQ/pZvanm647HaaWXcLUGPXJp0vbmG24Az9JcqgDcLNia+scN7icF7Gwrva2rwMMF4P5Q212YjulReEbNR50/uphQMv0s9SRwNCFFYnYm39L4bpCaSZMjyuYtVS0N6M/2r5FI6xCllafOYgrbW2wURUiSsSXaOC3wzdHftyP6kaUwE8FGa8xTqT6kqJEHxiBx6zXViBQ7mEzHctYLH/UTNfqmlVdgOrPWYeap0tCgJVSZG+HxzJg6B00txNMcHz8gXSSOBgtcW4lqkoofVKt6N3dyK/bFi6l5OVqRpNVNIFPOz/qsIrbxsDPSGySvNPvyK6aZue1dUQ0Rt3vwqBv/IhK5aKOaGtvEniUWiG7r+dtiQ4hoNyPG1tne7d+fhU56yr8CIebaOaMxGuECO4QzgA/Ux9d9mtkAhlMzUQ8/AWr5gjT+If9Rwrty+jA4t62J0G7abcTrN3zEKOLZyoR6GC2LQO/BncmX8l0VLzWYajymd8IpmJobzHoBXHp2hnM05DnDUQkiPWt1+ROtK2QGyDXoZjf9ga78TLgbZ/STfLC9o6yhGn+av+t1BonAzvoQcLpzLH4Q/pwU8dSAFPbq56fyvkHkhCXw50KkgWR/AxuAjVgoiRfg</e:CipherValue></e:CipherData></e:EncryptedData></s:Body></s:Envelope>

SOAP OUT

<s:Body xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:u=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" u:Id=""_2""><RetrieveMultipleResponse xmlns=""http://schemas.microsoft.com/xrm/2011/Contracts/Services""><RetrieveMultipleResult><a:Entities xmlns:a=""http://schemas.microsoft.com/xrm/2011/Contracts""><a:Entity><a:Attributes><a:KeyValuePairOfstringanyType><b:key xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"">name</b:key><b:value xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:type=""c:string"">TESTJAIRJETZT</b:value></a:KeyValuePairOfstringanyType><a:KeyValuePairOfstringanyType><b:key xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"">parentaccountid</b:key><b:value xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:type=""a:EntityReference""><a:Id>45df6f8c-641b-e211-85cf-000c29054fe2</a:Id><a:LogicalName>account</a:LogicalName><a:Name>TESTCREATEFROMJAVACLIENTWITHPCID</a:Name></b:value></a:KeyValuePairOfstringanyType><a:KeyValuePairOfstringanyType><b:key xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"">accountid</b:key><b:value xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:type=""c:guid"">4d364f1b-631b-e211-85cf-000c29054fe2</b:value></a:KeyValuePairOfstringanyType></a:Attributes><a:EntityState xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:nil=""true""></a:EntityState><a:FormattedValues></a:FormattedValues><a:Id>4d364f1b-631b-e211-85cf-000c29054fe2</a:Id><a:LogicalName>account</a:LogicalName><a:RelatedEntities></a:RelatedEntities></a:Entity><a:Entity><a:Attributes><a:KeyValuePairOfstringanyType><b:key xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"">name</b:key><b:value xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:type=""c:string"">testJava2</b:value></a:KeyValuePairOfstringanyType><a:KeyValuePairOfstringanyType><b:key xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"">accountid</b:key><b:value xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:type=""c:guid"">cf2228ea-7b1c-e211-8dde-000c29054fe2</b:value></a:KeyValuePairOfstringanyType></a:Attributes><a:EntityState xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:nil=""true""></a:EntityState><a:FormattedValues></a:FormattedValues><a:Id>cf2228ea-7b1c-e211-8dde-000c29054fe2</a:Id><a:LogicalName>account</a:LogicalName><a:RelatedEntities></a:RelatedEntities></a:Entity><a:Entity><a:Attributes><a:KeyValuePairOfstringanyType><b:key xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"">name</b:key><b:value xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:type=""c:string"">testJava2</b:value></a:KeyValuePairOfstringanyType><a:KeyValuePairOfstringanyType><b:key xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"">accountid</b:key><b:value xmlns:b=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:type=""c:guid"">df3aab65-7c1c-e211-8dde-000c29054fe2</b:value></a:KeyValuePairOfstringanyType></a:Attributes><a:EntityState xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" i:nil=""true""></a:EntityState><a:FormattedValues></a:FormattedValues><a:Id>df3aab65-7c1c-e211-8dde-000c29054fe2</a:Id><a:LogicalName>account</a:LogicalName><a:RelatedEntities></a:RelatedEntities></a:Entity></a:Entities><a:EntityName xmlns:a=""http://schemas.microsoft.com/xrm/2011/Contracts"">account</a:EntityName><a:MinActiveRowVersion xmlns:a=""http://schemas.microsoft.com/xrm/2011/Contracts"">-1</a:MinActiveRowVersion><a:MoreRecords xmlns:a=""http://schemas.microsoft.com/xrm/2011/Contracts"">false</a:MoreRecords><a:PagingCookie xmlns:a=""http://schemas.microsoft.com/xrm/2011/Contracts"">&lt;cookie page=""1""&gt;&lt;accountid last=""{DF3AAB65-7C1C-E211-8DDE-000C29054FE2}"" first=""{4D364F1B-631B-E211-85CF-000C29054FE2}"" /&gt;&lt;/cookie&gt;</a:PagingCookie><a:TotalRecordCount xmlns:a=""http://schemas.microsoft.com/xrm/2011/Contracts"">-1</a:TotalRecordCount><a:TotalRecordCountLimitExceeded xmlns:a=""http://schemas.microsoft.com/xrm/2011/Contracts"">false</a:TotalRecordCountLimitExceeded></RetrieveMultipleResult></RetrieveMultipleResponse></s:Body>

SOAP IN

<a:Action xmlns:a=""http://www.w3.org/2005/08/addressing"" xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:u=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" u:Id=""_4"" s:mustUnderstand=""1"">http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultipleResponse</a:Action>


c)
this would be the policy for an http binding(Here are the custom bindings present):

  <?xml version=""1.0"" encoding=""utf-8"" ?> 
- <wsdl:definitions targetNamespace=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:wsx=""http://schemas.xmlsoap.org/ws/2004/09/mex"" xmlns:wsa10=""http://www.w3.org/2005/08/addressing"" xmlns:tns=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"" xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy"" xmlns:wsap=""http://schemas.xmlsoap.org/ws/2004/08/addressing/policy"" xmlns:msc=""http://schemas.microsoft.com/ws/2005/12/wsdl/contract"" xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing"" xmlns:wsam=""http://www.w3.org/2007/05/addressing/metadata"" xmlns:wsaw=""http://www.w3.org/2006/05/addressing/wsdl"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/"">
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <ms-xrm:AuthenticationPolicy xmlns:ms-xrm=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"">
  <ms-xrm:Authentication>ActiveDirectory</ms-xrm:Authentication> 
  </ms-xrm:AuthenticationPolicy>
- <sp:SymmetricBinding xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
- <wsp:Policy>
- <sp:ProtectionToken>
- <wsp:Policy>
- <sp:SpnegoContextToken sp:IncludeToken=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient"">
- <wsp:Policy>
  <sp:RequireDerivedKeys /> 
  </wsp:Policy>
  </sp:SpnegoContextToken>
  </wsp:Policy>
  </sp:ProtectionToken>
- <sp:AlgorithmSuite>
- <wsp:Policy>
  <sp:Basic256 /> 
  </wsp:Policy>
  </sp:AlgorithmSuite>
- <sp:Layout>
- <wsp:Policy>
  <sp:Strict /> 
  </wsp:Policy>
  </sp:Layout>
  <sp:IncludeTimestamp /> 
  <sp:EncryptSignature /> 
  <sp:OnlySignEntireHeadersAndBody /> 
  </wsp:Policy>
  </sp:SymmetricBinding>
- <sp:Wss11 xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <wsp:Policy /> 
  </sp:Wss11>
- <sp:Trust10 xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
- <wsp:Policy>
  <sp:MustSupportIssuedTokens /> 
  <sp:RequireClientEntropy /> 
  <sp:RequireServerEntropy /> 
  </wsp:Policy>
  </sp:Trust10>
  <wsaw:UsingAddressing /> 
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Create_Input_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Create_output_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Create_OrganizationServiceFaultFault_Fault"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Retrieve_Input_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Retrieve_output_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Retrieve_OrganizationServiceFaultFault_Fault"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Update_Input_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Update_output_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Update_OrganizationServiceFaultFault_Fault"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Delete_Input_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Delete_output_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Delete_OrganizationServiceFaultFault_Fault"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Execute_Input_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Execute_output_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Execute_OrganizationServiceFaultFault_Fault"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Associate_Input_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Associate_output_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Associate_OrganizationServiceFaultFault_Fault"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Disassociate_Input_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Disassociate_output_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_Disassociate_OrganizationServiceFaultFault_Fault"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_RetrieveMultiple_Input_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_RetrieveMultiple_output_policy"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_RetrieveMultiple_OrganizationServiceFaultFault_Fault"">
- <wsp:ExactlyOne>
- <wsp:All>
- <sp:SignedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  <sp:Header Name=""To"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""From"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""FaultTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""ReplyTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""MessageID"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""RelatesTo"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  <sp:Header Name=""Action"" Namespace=""http://www.w3.org/2005/08/addressing"" /> 
  </sp:SignedParts>
- <sp:EncryptedParts xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
  <sp:Body /> 
  </sp:EncryptedParts>
  </wsp:All>
  </wsp:ExactlyOne>
  </wsp:Policy>
+ <wsdl:types>
- <xsd:schema elementFormDefault=""qualified"" targetNamespace=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"">
- <xsd:element name=""Create"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""entity"" nillable=""true"" type=""q1:Entity"" xmlns:q1=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""CreateResponse"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""CreateResult"" type=""q2:guid"" xmlns:q2=""http://schemas.microsoft.com/2003/10/Serialization/"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""Retrieve"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""entityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""id"" type=""q3:guid"" xmlns:q3=""http://schemas.microsoft.com/2003/10/Serialization/"" /> 
  <xsd:element minOccurs=""0"" name=""columnSet"" nillable=""true"" type=""q4:ColumnSet"" xmlns:q4=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""RetrieveResponse"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""RetrieveResult"" nillable=""true"" type=""q5:Entity"" xmlns:q5=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""Update"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""entity"" nillable=""true"" type=""q6:Entity"" xmlns:q6=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""UpdateResponse"">
- <xsd:complexType>
  <xsd:sequence /> 
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""Delete"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""entityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""id"" type=""q7:guid"" xmlns:q7=""http://schemas.microsoft.com/2003/10/Serialization/"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""DeleteResponse"">
- <xsd:complexType>
  <xsd:sequence /> 
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""Execute"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""request"" nillable=""true"" type=""q8:OrganizationRequest"" xmlns:q8=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""ExecuteResponse"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ExecuteResult"" nillable=""true"" type=""q9:OrganizationResponse"" xmlns:q9=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""Associate"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""entityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""entityId"" type=""q10:guid"" xmlns:q10=""http://schemas.microsoft.com/2003/10/Serialization/"" /> 
  <xsd:element minOccurs=""0"" name=""relationship"" nillable=""true"" type=""q11:Relationship"" xmlns:q11=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""relatedEntities"" nillable=""true"" type=""q12:EntityReferenceCollection"" xmlns:q12=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""AssociateResponse"">
- <xsd:complexType>
  <xsd:sequence /> 
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""Disassociate"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""entityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""entityId"" type=""q13:guid"" xmlns:q13=""http://schemas.microsoft.com/2003/10/Serialization/"" /> 
  <xsd:element minOccurs=""0"" name=""relationship"" nillable=""true"" type=""q14:Relationship"" xmlns:q14=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""relatedEntities"" nillable=""true"" type=""q15:EntityReferenceCollection"" xmlns:q15=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""DisassociateResponse"">
- <xsd:complexType>
  <xsd:sequence /> 
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""RetrieveMultiple"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""query"" nillable=""true"" type=""q16:QueryBase"" xmlns:q16=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
- <xsd:element name=""RetrieveMultipleResponse"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""RetrieveMultipleResult"" nillable=""true"" type=""q17:EntityCollection"" xmlns:q17=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
  </xsd:schema>
- <xsd:schema elementFormDefault=""qualified"" targetNamespace=""http://schemas.microsoft.com/xrm/2011/Contracts"" xmlns:tns=""http://schemas.microsoft.com/xrm/2011/Contracts"" xmlns:ser=""http://schemas.microsoft.com/2003/10/Serialization/"">
- <xsd:complexType name=""Entity"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Attributes"" nillable=""true"" type=""tns:AttributeCollection"" /> 
  <xsd:element minOccurs=""0"" name=""EntityState"" nillable=""true"" type=""tns:EntityState"" /> 
  <xsd:element minOccurs=""0"" name=""FormattedValues"" nillable=""true"" type=""tns:FormattedValueCollection"" /> 
  <xsd:element minOccurs=""0"" name=""Id"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""LogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""RelatedEntities"" nillable=""true"" type=""tns:RelatedEntityCollection"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""Entity"" nillable=""true"" type=""tns:Entity"" /> 
- <xsd:complexType name=""AttributeCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""KeyValuePairOfstringanyType"" type=""q18:KeyValuePairOfstringanyType"" xmlns:q18=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AttributeCollection"" nillable=""true"" type=""tns:AttributeCollection"" /> 
- <xsd:complexType name=""Money"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Value"" type=""xsd:decimal"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""Money"" nillable=""true"" type=""tns:Money"" /> 
- <xsd:complexType name=""ArrayOfMoney"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""Money"" nillable=""true"" type=""tns:Money"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfMoney"" nillable=""true"" type=""tns:ArrayOfMoney"" /> 
- <xsd:complexType name=""EntityReference"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Id"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""LogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Name"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""EntityReference"" nillable=""true"" type=""tns:EntityReference"" /> 
- <xsd:complexType name=""ArrayOfEntityReference"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""EntityReference"" nillable=""true"" type=""tns:EntityReference"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfEntityReference"" nillable=""true"" type=""tns:ArrayOfEntityReference"" /> 
- <xsd:complexType name=""OptionSetValue"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Value"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""OptionSetValue"" nillable=""true"" type=""tns:OptionSetValue"" /> 
- <xsd:complexType name=""ArrayOfOptionSetValue"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""OptionSetValue"" nillable=""true"" type=""tns:OptionSetValue"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfOptionSetValue"" nillable=""true"" type=""tns:ArrayOfOptionSetValue"" /> 
- <xsd:complexType name=""EntityCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Entities"" nillable=""true"" type=""tns:ArrayOfEntity"" /> 
  <xsd:element minOccurs=""0"" name=""EntityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""MinActiveRowVersion"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""MoreRecords"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""PagingCookie"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""TotalRecordCount"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""TotalRecordCountLimitExceeded"" type=""xsd:boolean"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""EntityCollection"" nillable=""true"" type=""tns:EntityCollection"" /> 
- <xsd:complexType name=""ArrayOfEntity"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""Entity"" nillable=""true"" type=""tns:Entity"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfEntity"" nillable=""true"" type=""tns:ArrayOfEntity"" /> 
- <xsd:complexType name=""Label"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""LocalizedLabels"" nillable=""true"" type=""tns:LocalizedLabelCollection"" /> 
  <xsd:element minOccurs=""0"" name=""UserLocalizedLabel"" nillable=""true"" type=""tns:LocalizedLabel"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""Label"" nillable=""true"" type=""tns:Label"" /> 
- <xsd:complexType name=""LocalizedLabelCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""LocalizedLabel"" nillable=""true"" type=""tns:LocalizedLabel"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""LocalizedLabelCollection"" nillable=""true"" type=""tns:LocalizedLabelCollection"" /> 
- <xsd:complexType name=""LocalizedLabel"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""IsManaged"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""Label"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""LanguageCode"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""LocalizedLabel"" nillable=""true"" type=""tns:LocalizedLabel"" /> 
- <xsd:complexType name=""BooleanManagedProperty"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:ManagedPropertyboolean"">
  <xsd:sequence /> 
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""BooleanManagedProperty"" nillable=""true"" type=""tns:BooleanManagedProperty"" /> 
- <xsd:complexType name=""ManagedPropertyboolean"">
- <xsd:annotation>
- <xsd:appinfo>
- <GenericType Name=""ManagedProperty{0}"" Namespace=""http://schemas.microsoft.com/xrm/2011/Contracts"" xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">
  <GenericParameter Name=""boolean"" Namespace=""http://www.w3.org/2001/XMLSchema"" /> 
  </GenericType>
  </xsd:appinfo>
  </xsd:annotation>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""CanBeChanged"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""ManagedPropertyLogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Value"" type=""xsd:boolean"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ManagedPropertyboolean"" nillable=""true"" type=""tns:ManagedPropertyboolean"" /> 
- <xsd:complexType name=""ManagedPropertyAttributeRequiredLevel"">
- <xsd:annotation>
- <xsd:appinfo>
- <GenericType Name=""ManagedProperty{0}"" Namespace=""http://schemas.microsoft.com/xrm/2011/Contracts"" xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">
  <GenericParameter Name=""AttributeRequiredLevel"" Namespace=""http://schemas.microsoft.com/xrm/2011/Metadata"" /> 
  </GenericType>
  </xsd:appinfo>
  </xsd:annotation>
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""CanBeChanged"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""ManagedPropertyLogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Value"" type=""q19:AttributeRequiredLevel"" xmlns:q19=""http://schemas.microsoft.com/xrm/2011/Metadata"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ManagedPropertyAttributeRequiredLevel"" nillable=""true"" type=""tns:ManagedPropertyAttributeRequiredLevel"" /> 
- <xsd:complexType name=""AliasedValue"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AttributeLogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""EntityLogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Value"" nillable=""true"" type=""xsd:anyType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AliasedValue"" nillable=""true"" type=""tns:AliasedValue"" /> 
- <xsd:complexType name=""ColumnSet"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AllColumns"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""Columns"" nillable=""true"" type=""q20:ArrayOfstring"" xmlns:q20=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ColumnSet"" nillable=""true"" type=""tns:ColumnSet"" /> 
- <xsd:complexType name=""EntityReferenceCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""EntityReference"" nillable=""true"" type=""tns:EntityReference"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""EntityReferenceCollection"" nillable=""true"" type=""tns:EntityReferenceCollection"" /> 
- <xsd:complexType name=""QueryBase"">
  <xsd:sequence /> 
  </xsd:complexType>
  <xsd:element name=""QueryBase"" nillable=""true"" type=""tns:QueryBase"" /> 
- <xsd:complexType name=""FetchExpression"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:QueryBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Query"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""FetchExpression"" nillable=""true"" type=""tns:FetchExpression"" /> 
- <xsd:complexType name=""QueryExpression"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:QueryBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ColumnSet"" nillable=""true"" type=""tns:ColumnSet"" /> 
  <xsd:element minOccurs=""0"" name=""Criteria"" nillable=""true"" type=""tns:FilterExpression"" /> 
  <xsd:element minOccurs=""0"" name=""Distinct"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""EntityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""LinkEntities"" nillable=""true"" type=""tns:ArrayOfLinkEntity"" /> 
  <xsd:element minOccurs=""0"" name=""Orders"" nillable=""true"" type=""tns:ArrayOfOrderExpression"" /> 
  <xsd:element minOccurs=""0"" name=""PageInfo"" nillable=""true"" type=""tns:PagingInfo"" /> 
  <xsd:element minOccurs=""0"" name=""NoLock"" type=""xsd:boolean"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""QueryExpression"" nillable=""true"" type=""tns:QueryExpression"" /> 
- <xsd:complexType name=""FilterExpression"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Conditions"" nillable=""true"" type=""tns:ArrayOfConditionExpression"" /> 
  <xsd:element minOccurs=""0"" name=""FilterOperator"" type=""tns:LogicalOperator"" /> 
  <xsd:element minOccurs=""0"" name=""Filters"" nillable=""true"" type=""tns:ArrayOfFilterExpression"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""FilterExpression"" nillable=""true"" type=""tns:FilterExpression"" /> 
- <xsd:complexType name=""ArrayOfConditionExpression"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ConditionExpression"" nillable=""true"" type=""tns:ConditionExpression"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfConditionExpression"" nillable=""true"" type=""tns:ArrayOfConditionExpression"" /> 
- <xsd:complexType name=""ConditionExpression"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AttributeName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Operator"" type=""tns:ConditionOperator"" /> 
  <xsd:element minOccurs=""0"" name=""Values"" nillable=""true"" type=""q21:ArrayOfanyType"" xmlns:q21=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ConditionExpression"" nillable=""true"" type=""tns:ConditionExpression"" /> 
- <xsd:simpleType name=""ConditionOperator"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Equal"" /> 
  <xsd:enumeration value=""NotEqual"" /> 
  <xsd:enumeration value=""GreaterThan"" /> 
  <xsd:enumeration value=""LessThan"" /> 
  <xsd:enumeration value=""GreaterEqual"" /> 
  <xsd:enumeration value=""LessEqual"" /> 
  <xsd:enumeration value=""Like"" /> 
  <xsd:enumeration value=""NotLike"" /> 
  <xsd:enumeration value=""In"" /> 
  <xsd:enumeration value=""NotIn"" /> 
  <xsd:enumeration value=""Between"" /> 
  <xsd:enumeration value=""NotBetween"" /> 
  <xsd:enumeration value=""Null"" /> 
  <xsd:enumeration value=""NotNull"" /> 
  <xsd:enumeration value=""Yesterday"" /> 
  <xsd:enumeration value=""Today"" /> 
  <xsd:enumeration value=""Tomorrow"" /> 
  <xsd:enumeration value=""Last7Days"" /> 
  <xsd:enumeration value=""Next7Days"" /> 
  <xsd:enumeration value=""LastWeek"" /> 
  <xsd:enumeration value=""ThisWeek"" /> 
  <xsd:enumeration value=""NextWeek"" /> 
  <xsd:enumeration value=""LastMonth"" /> 
  <xsd:enumeration value=""ThisMonth"" /> 
  <xsd:enumeration value=""NextMonth"" /> 
  <xsd:enumeration value=""On"" /> 
  <xsd:enumeration value=""OnOrBefore"" /> 
  <xsd:enumeration value=""OnOrAfter"" /> 
  <xsd:enumeration value=""LastYear"" /> 
  <xsd:enumeration value=""ThisYear"" /> 
  <xsd:enumeration value=""NextYear"" /> 
  <xsd:enumeration value=""LastXHours"" /> 
  <xsd:enumeration value=""NextXHours"" /> 
  <xsd:enumeration value=""LastXDays"" /> 
  <xsd:enumeration value=""NextXDays"" /> 
  <xsd:enumeration value=""LastXWeeks"" /> 
  <xsd:enumeration value=""NextXWeeks"" /> 
  <xsd:enumeration value=""LastXMonths"" /> 
  <xsd:enumeration value=""NextXMonths"" /> 
  <xsd:enumeration value=""LastXYears"" /> 
  <xsd:enumeration value=""NextXYears"" /> 
  <xsd:enumeration value=""EqualUserId"" /> 
  <xsd:enumeration value=""NotEqualUserId"" /> 
  <xsd:enumeration value=""EqualBusinessId"" /> 
  <xsd:enumeration value=""NotEqualBusinessId"" /> 
  <xsd:enumeration value=""ChildOf"" /> 
  <xsd:enumeration value=""Mask"" /> 
  <xsd:enumeration value=""NotMask"" /> 
  <xsd:enumeration value=""MasksSelect"" /> 
  <xsd:enumeration value=""Contains"" /> 
  <xsd:enumeration value=""DoesNotContain"" /> 
  <xsd:enumeration value=""EqualUserLanguage"" /> 
  <xsd:enumeration value=""NotOn"" /> 
  <xsd:enumeration value=""OlderThanXMonths"" /> 
  <xsd:enumeration value=""BeginsWith"" /> 
  <xsd:enumeration value=""DoesNotBeginWith"" /> 
  <xsd:enumeration value=""EndsWith"" /> 
  <xsd:enumeration value=""DoesNotEndWith"" /> 
  <xsd:enumeration value=""ThisFiscalYear"" /> 
  <xsd:enumeration value=""ThisFiscalPeriod"" /> 
  <xsd:enumeration value=""NextFiscalYear"" /> 
  <xsd:enumeration value=""NextFiscalPeriod"" /> 
  <xsd:enumeration value=""LastFiscalYear"" /> 
  <xsd:enumeration value=""LastFiscalPeriod"" /> 
  <xsd:enumeration value=""LastXFiscalYears"" /> 
  <xsd:enumeration value=""LastXFiscalPeriods"" /> 
  <xsd:enumeration value=""NextXFiscalYears"" /> 
  <xsd:enumeration value=""NextXFiscalPeriods"" /> 
  <xsd:enumeration value=""InFiscalYear"" /> 
  <xsd:enumeration value=""InFiscalPeriod"" /> 
  <xsd:enumeration value=""InFiscalPeriodAndYear"" /> 
  <xsd:enumeration value=""InOrBeforeFiscalPeriodAndYear"" /> 
  <xsd:enumeration value=""InOrAfterFiscalPeriodAndYear"" /> 
  <xsd:enumeration value=""EqualUserTeams"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""ConditionOperator"" nillable=""true"" type=""tns:ConditionOperator"" /> 
- <xsd:simpleType name=""LogicalOperator"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""And"" /> 
  <xsd:enumeration value=""Or"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""LogicalOperator"" nillable=""true"" type=""tns:LogicalOperator"" /> 
- <xsd:complexType name=""ArrayOfFilterExpression"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""FilterExpression"" nillable=""true"" type=""tns:FilterExpression"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfFilterExpression"" nillable=""true"" type=""tns:ArrayOfFilterExpression"" /> 
- <xsd:complexType name=""ArrayOfLinkEntity"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""LinkEntity"" nillable=""true"" type=""tns:LinkEntity"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfLinkEntity"" nillable=""true"" type=""tns:ArrayOfLinkEntity"" /> 
- <xsd:complexType name=""LinkEntity"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Columns"" nillable=""true"" type=""tns:ColumnSet"" /> 
  <xsd:element minOccurs=""0"" name=""EntityAlias"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""JoinOperator"" type=""tns:JoinOperator"" /> 
  <xsd:element minOccurs=""0"" name=""LinkCriteria"" nillable=""true"" type=""tns:FilterExpression"" /> 
  <xsd:element minOccurs=""0"" name=""LinkEntities"" nillable=""true"" type=""tns:ArrayOfLinkEntity"" /> 
  <xsd:element minOccurs=""0"" name=""LinkFromAttributeName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""LinkFromEntityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""LinkToAttributeName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""LinkToEntityName"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""LinkEntity"" nillable=""true"" type=""tns:LinkEntity"" /> 
- <xsd:simpleType name=""JoinOperator"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Inner"" /> 
  <xsd:enumeration value=""LeftOuter"" /> 
  <xsd:enumeration value=""Natural"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""JoinOperator"" nillable=""true"" type=""tns:JoinOperator"" /> 
- <xsd:complexType name=""ArrayOfOrderExpression"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""OrderExpression"" nillable=""true"" type=""tns:OrderExpression"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfOrderExpression"" nillable=""true"" type=""tns:ArrayOfOrderExpression"" /> 
- <xsd:complexType name=""OrderExpression"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AttributeName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""OrderType"" type=""tns:OrderType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""OrderExpression"" nillable=""true"" type=""tns:OrderExpression"" /> 
- <xsd:simpleType name=""OrderType"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Ascending"" /> 
  <xsd:enumeration value=""Descending"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""OrderType"" nillable=""true"" type=""tns:OrderType"" /> 
- <xsd:complexType name=""PagingInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Count"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""PageNumber"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""PagingCookie"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ReturnTotalRecordCount"" type=""xsd:boolean"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""PagingInfo"" nillable=""true"" type=""tns:PagingInfo"" /> 
- <xsd:complexType name=""QueryByAttribute"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:QueryBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Attributes"" nillable=""true"" type=""q22:ArrayOfstring"" xmlns:q22=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  <xsd:element minOccurs=""0"" name=""ColumnSet"" nillable=""true"" type=""tns:ColumnSet"" /> 
  <xsd:element minOccurs=""0"" name=""EntityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Orders"" nillable=""true"" type=""tns:ArrayOfOrderExpression"" /> 
  <xsd:element minOccurs=""0"" name=""PageInfo"" nillable=""true"" type=""tns:PagingInfo"" /> 
  <xsd:element minOccurs=""0"" name=""Values"" nillable=""true"" type=""q23:ArrayOfanyType"" xmlns:q23=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""QueryByAttribute"" nillable=""true"" type=""tns:QueryByAttribute"" /> 
- <xsd:complexType name=""ArrayOfQueryExpression"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""QueryExpression"" nillable=""true"" type=""tns:QueryExpression"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfQueryExpression"" nillable=""true"" type=""tns:ArrayOfQueryExpression"" /> 
- <xsd:complexType name=""ArrayOfLocalizedLabel"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""LocalizedLabel"" nillable=""true"" type=""tns:LocalizedLabel"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfLocalizedLabel"" nillable=""true"" type=""tns:ArrayOfLocalizedLabel"" /> 
- <xsd:complexType name=""Relationship"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""PrimaryEntityRole"" nillable=""true"" type=""tns:EntityRole"" /> 
  <xsd:element minOccurs=""0"" name=""SchemaName"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""Relationship"" nillable=""true"" type=""tns:Relationship"" /> 
- <xsd:simpleType name=""EntityRole"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Referencing"" /> 
  <xsd:enumeration value=""Referenced"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""EntityRole"" nillable=""true"" type=""tns:EntityRole"" /> 
- <xsd:complexType name=""AttributePrivilegeCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AttributePrivilege"" nillable=""true"" type=""tns:AttributePrivilege"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AttributePrivilegeCollection"" nillable=""true"" type=""tns:AttributePrivilegeCollection"" /> 
- <xsd:complexType name=""AttributePrivilege"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AttributeId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""CanCreate"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""CanRead"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""CanUpdate"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AttributePrivilege"" nillable=""true"" type=""tns:AttributePrivilege"" /> 
- <xsd:complexType name=""RelationshipQueryCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""KeyValuePairOfRelationshipQueryBaseX_PsK4FkN"" type=""q24:KeyValuePairOfRelationshipQueryBaseX_PsK4FkN"" xmlns:q24=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""RelationshipQueryCollection"" nillable=""true"" type=""tns:RelationshipQueryCollection"" /> 
- <xsd:simpleType name=""EntityState"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Unchanged"" /> 
  <xsd:enumeration value=""Created"" /> 
  <xsd:enumeration value=""Changed"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""EntityState"" nillable=""true"" type=""tns:EntityState"" /> 
- <xsd:complexType name=""FormattedValueCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""KeyValuePairOfstringstring"" type=""q25:KeyValuePairOfstringstring"" xmlns:q25=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""FormattedValueCollection"" nillable=""true"" type=""tns:FormattedValueCollection"" /> 
- <xsd:complexType name=""RelatedEntityCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""KeyValuePairOfRelationshipEntityCollectionX_PsK4FkN"" type=""q26:KeyValuePairOfRelationshipEntityCollectionX_PsK4FkN"" xmlns:q26=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""RelatedEntityCollection"" nillable=""true"" type=""tns:RelatedEntityCollection"" /> 
- <xsd:complexType name=""OrganizationServiceFault"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:BaseServiceFault"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""InnerFault"" nillable=""true"" type=""tns:OrganizationServiceFault"" /> 
  <xsd:element minOccurs=""0"" name=""TraceText"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""OrganizationServiceFault"" nillable=""true"" type=""tns:OrganizationServiceFault"" /> 
- <xsd:complexType name=""BaseServiceFault"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ErrorCode"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""ErrorDetails"" nillable=""true"" type=""tns:ErrorDetailCollection"" /> 
  <xsd:element minOccurs=""0"" name=""Message"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Timestamp"" type=""xsd:dateTime"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""BaseServiceFault"" nillable=""true"" type=""tns:BaseServiceFault"" /> 
- <xsd:complexType name=""ErrorDetailCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""KeyValuePairOfstringanyType"" type=""q27:KeyValuePairOfstringanyType"" xmlns:q27=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ErrorDetailCollection"" nillable=""true"" type=""tns:ErrorDetailCollection"" /> 
- <xsd:complexType name=""DiscoveryServiceFault"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:BaseServiceFault"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""InnerFault"" nillable=""true"" type=""tns:DiscoveryServiceFault"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""DiscoveryServiceFault"" nillable=""true"" type=""tns:DiscoveryServiceFault"" /> 
- <xsd:complexType name=""OrganizationRequest"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Parameters"" nillable=""true"" type=""tns:ParameterCollection"" /> 
  <xsd:element minOccurs=""0"" name=""RequestId"" nillable=""true"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""RequestName"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""OrganizationRequest"" nillable=""true"" type=""tns:OrganizationRequest"" /> 
- <xsd:complexType name=""ParameterCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""KeyValuePairOfstringanyType"" type=""q28:KeyValuePairOfstringanyType"" xmlns:q28=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ParameterCollection"" nillable=""true"" type=""tns:ParameterCollection"" /> 
- <xsd:complexType name=""OrganizationResponse"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ResponseName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Results"" nillable=""true"" type=""tns:ParameterCollection"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""OrganizationResponse"" nillable=""true"" type=""tns:OrganizationResponse"" /> 
  </xsd:schema>
- <xs:schema attributeFormDefault=""qualified"" elementFormDefault=""qualified"" targetNamespace=""http://schemas.microsoft.com/2003/10/Serialization/"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:tns=""http://schemas.microsoft.com/2003/10/Serialization/"">
  <xs:element name=""anyType"" nillable=""true"" type=""xs:anyType"" /> 
  <xs:element name=""anyURI"" nillable=""true"" type=""xs:anyURI"" /> 
  <xs:element name=""base64Binary"" nillable=""true"" type=""xs:base64Binary"" /> 
  <xs:element name=""boolean"" nillable=""true"" type=""xs:boolean"" /> 
  <xs:element name=""byte"" nillable=""true"" type=""xs:byte"" /> 
  <xs:element name=""dateTime"" nillable=""true"" type=""xs:dateTime"" /> 
  <xs:element name=""decimal"" nillable=""true"" type=""xs:decimal"" /> 
  <xs:element name=""double"" nillable=""true"" type=""xs:double"" /> 
  <xs:element name=""float"" nillable=""true"" type=""xs:float"" /> 
  <xs:element name=""int"" nillable=""true"" type=""xs:int"" /> 
  <xs:element name=""long"" nillable=""true"" type=""xs:long"" /> 
  <xs:element name=""QName"" nillable=""true"" type=""xs:QName"" /> 
  <xs:element name=""short"" nillable=""true"" type=""xs:short"" /> 
  <xs:element name=""string"" nillable=""true"" type=""xs:string"" /> 
  <xs:element name=""unsignedByte"" nillable=""true"" type=""xs:unsignedByte"" /> 
  <xs:element name=""unsignedInt"" nillable=""true"" type=""xs:unsignedInt"" /> 
  <xs:element name=""unsignedLong"" nillable=""true"" type=""xs:unsignedLong"" /> 
  <xs:element name=""unsignedShort"" nillable=""true"" type=""xs:unsignedShort"" /> 
  <xs:element name=""char"" nillable=""true"" type=""tns:char"" /> 
- <xs:simpleType name=""char"">
  <xs:restriction base=""xs:int"" /> 
  </xs:simpleType>
  <xs:element name=""duration"" nillable=""true"" type=""tns:duration"" /> 
- <xs:simpleType name=""duration"">
- <xs:restriction base=""xs:duration"">
  <xs:pattern value=""\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"" /> 
  <xs:minInclusive value=""-P10675199DT2H48M5.4775808S"" /> 
  <xs:maxInclusive value=""P10675199DT2H48M5.4775807S"" /> 
  </xs:restriction>
  </xs:simpleType>
  <xs:element name=""guid"" nillable=""true"" type=""tns:guid"" /> 
- <xs:simpleType name=""guid"">
- <xs:restriction base=""xs:string"">
  <xs:pattern value=""[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"" /> 
  </xs:restriction>
  </xs:simpleType>
  </xs:schema>
- <xsd:schema elementFormDefault=""qualified"" targetNamespace=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:tns=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"">
- <xsd:complexType name=""KeyValuePairOfstringanyType"">
- <xsd:annotation>
- <xsd:appinfo>
- <GenericType Name=""KeyValuePairOf{0}{1}{#}"" Namespace=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">
  <GenericParameter Name=""string"" Namespace=""http://www.w3.org/2001/XMLSchema"" /> 
  <GenericParameter Name=""anyType"" Namespace=""http://www.w3.org/2001/XMLSchema"" /> 
  </GenericType>
  <IsValueType xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">true</IsValueType> 
  </xsd:appinfo>
  </xsd:annotation>
- <xsd:sequence>
  <xsd:element name=""key"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element name=""value"" nillable=""true"" type=""xsd:anyType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""KeyValuePairOfstringanyType"" nillable=""true"" type=""tns:KeyValuePairOfstringanyType"" /> 
- <xsd:complexType name=""KeyValuePairOfRelationshipQueryBaseX_PsK4FkN"">
- <xsd:annotation>
- <xsd:appinfo>
- <GenericType Name=""KeyValuePairOf{0}{1}{#}"" Namespace=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">
  <GenericParameter Name=""Relationship"" Namespace=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <GenericParameter Name=""QueryBase"" Namespace=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </GenericType>
  <IsValueType xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">true</IsValueType> 
  </xsd:appinfo>
  </xsd:annotation>
- <xsd:sequence>
  <xsd:element name=""key"" nillable=""true"" type=""q29:Relationship"" xmlns:q29=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element name=""value"" nillable=""true"" type=""q30:QueryBase"" xmlns:q30=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""KeyValuePairOfRelationshipQueryBaseX_PsK4FkN"" nillable=""true"" type=""tns:KeyValuePairOfRelationshipQueryBaseX_PsK4FkN"" /> 
- <xsd:complexType name=""KeyValuePairOfstringQueryBasegUGIFE1S"">
- <xsd:annotation>
- <xsd:appinfo>
- <GenericType Name=""KeyValuePairOf{0}{1}{#}"" Namespace=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">
  <GenericParameter Name=""string"" Namespace=""http://www.w3.org/2001/XMLSchema"" /> 
  <GenericParameter Name=""QueryBase"" Namespace=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </GenericType>
  <IsValueType xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">true</IsValueType> 
  </xsd:appinfo>
  </xsd:annotation>
- <xsd:sequence>
  <xsd:element name=""key"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element name=""value"" nillable=""true"" type=""q31:QueryBase"" xmlns:q31=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""KeyValuePairOfstringQueryBasegUGIFE1S"" nillable=""true"" type=""tns:KeyValuePairOfstringQueryBasegUGIFE1S"" /> 
- <xsd:complexType name=""KeyValuePairOfstringstring"">
- <xsd:annotation>
- <xsd:appinfo>
- <GenericType Name=""KeyValuePairOf{0}{1}{#}"" Namespace=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">
  <GenericParameter Name=""string"" Namespace=""http://www.w3.org/2001/XMLSchema"" /> 
  <GenericParameter Name=""string"" Namespace=""http://www.w3.org/2001/XMLSchema"" /> 
  </GenericType>
  <IsValueType xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">true</IsValueType> 
  </xsd:appinfo>
  </xsd:annotation>
- <xsd:sequence>
  <xsd:element name=""key"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element name=""value"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""KeyValuePairOfstringstring"" nillable=""true"" type=""tns:KeyValuePairOfstringstring"" /> 
- <xsd:complexType name=""KeyValuePairOfRelationshipEntityCollectionX_PsK4FkN"">
- <xsd:annotation>
- <xsd:appinfo>
- <GenericType Name=""KeyValuePairOf{0}{1}{#}"" Namespace=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">
  <GenericParameter Name=""Relationship"" Namespace=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <GenericParameter Name=""EntityCollection"" Namespace=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </GenericType>
  <IsValueType xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">true</IsValueType> 
  </xsd:appinfo>
  </xsd:annotation>
- <xsd:sequence>
  <xsd:element name=""key"" nillable=""true"" type=""q32:Relationship"" xmlns:q32=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element name=""value"" nillable=""true"" type=""q33:EntityCollection"" xmlns:q33=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""KeyValuePairOfRelationshipEntityCollectionX_PsK4FkN"" nillable=""true"" type=""tns:KeyValuePairOfRelationshipEntityCollectionX_PsK4FkN"" /> 
  </xsd:schema>
- <xsd:schema elementFormDefault=""qualified"" targetNamespace=""http://schemas.microsoft.com/xrm/2011/Metadata"" xmlns:tns=""http://schemas.microsoft.com/xrm/2011/Metadata"" xmlns:ser=""http://schemas.microsoft.com/2003/10/Serialization/"">
- <xsd:complexType name=""ArrayOfEntityMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""EntityMetadata"" nillable=""true"" type=""tns:EntityMetadata"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfEntityMetadata"" nillable=""true"" type=""tns:ArrayOfEntityMetadata"" /> 
- <xsd:complexType name=""EntityMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:MetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ActivityTypeMask"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""Attributes"" nillable=""true"" type=""tns:ArrayOfAttributeMetadata"" /> 
  <xsd:element minOccurs=""0"" name=""AutoRouteToOwnerQueue"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""CanBeInManyToMany"" nillable=""true"" type=""q34:BooleanManagedProperty"" xmlns:q34=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""CanBePrimaryEntityInRelationship"" nillable=""true"" type=""q35:BooleanManagedProperty"" xmlns:q35=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""CanBeRelatedEntityInRelationship"" nillable=""true"" type=""q36:BooleanManagedProperty"" xmlns:q36=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""CanCreateAttributes"" nillable=""true"" type=""q37:BooleanManagedProperty"" xmlns:q37=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""CanCreateCharts"" nillable=""true"" type=""q38:BooleanManagedProperty"" xmlns:q38=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""CanCreateForms"" nillable=""true"" type=""q39:BooleanManagedProperty"" xmlns:q39=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""CanCreateViews"" nillable=""true"" type=""q40:BooleanManagedProperty"" xmlns:q40=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""CanModifyAdditionalSettings"" nillable=""true"" type=""q41:BooleanManagedProperty"" xmlns:q41=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""CanTriggerWorkflow"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""Description"" nillable=""true"" type=""q42:Label"" xmlns:q42=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""DisplayCollectionName"" nillable=""true"" type=""q43:Label"" xmlns:q43=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""DisplayName"" nillable=""true"" type=""q44:Label"" xmlns:q44=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IconLargeName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""IconMediumName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""IconSmallName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""IsActivity"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsActivityParty"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsAuditEnabled"" nillable=""true"" type=""q45:BooleanManagedProperty"" xmlns:q45=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsAvailableOffline"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsChildEntity"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsConnectionsEnabled"" nillable=""true"" type=""q46:BooleanManagedProperty"" xmlns:q46=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsCustomEntity"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsCustomizable"" nillable=""true"" type=""q47:BooleanManagedProperty"" xmlns:q47=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsDocumentManagementEnabled"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsDuplicateDetectionEnabled"" nillable=""true"" type=""q48:BooleanManagedProperty"" xmlns:q48=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsEnabledForCharts"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsImportable"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsIntersect"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsMailMergeEnabled"" nillable=""true"" type=""q49:BooleanManagedProperty"" xmlns:q49=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsManaged"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsMappable"" nillable=""true"" type=""q50:BooleanManagedProperty"" xmlns:q50=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsReadingPaneEnabled"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsRenameable"" nillable=""true"" type=""q51:BooleanManagedProperty"" xmlns:q51=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsValidForAdvancedFind"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsValidForQueue"" nillable=""true"" type=""q52:BooleanManagedProperty"" xmlns:q52=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsVisibleInMobile"" nillable=""true"" type=""q53:BooleanManagedProperty"" xmlns:q53=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""LogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ManyToManyRelationships"" nillable=""true"" type=""tns:ArrayOfManyToManyRelationshipMetadata"" /> 
  <xsd:element minOccurs=""0"" name=""ManyToOneRelationships"" nillable=""true"" type=""tns:ArrayOfOneToManyRelationshipMetadata"" /> 
  <xsd:element minOccurs=""0"" name=""ObjectTypeCode"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""OneToManyRelationships"" nillable=""true"" type=""tns:ArrayOfOneToManyRelationshipMetadata"" /> 
  <xsd:element minOccurs=""0"" name=""OwnershipType"" nillable=""true"" type=""tns:OwnershipTypes"" /> 
  <xsd:element minOccurs=""0"" name=""PrimaryIdAttribute"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""PrimaryNameAttribute"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Privileges"" nillable=""true"" type=""tns:ArrayOfSecurityPrivilegeMetadata"" /> 
  <xsd:element minOccurs=""0"" name=""RecurrenceBaseEntityLogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ReportViewName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""SchemaName"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""EntityMetadata"" nillable=""true"" type=""tns:EntityMetadata"" /> 
- <xsd:complexType name=""MetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""MetadataId"" nillable=""true"" type=""ser:guid"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""MetadataBase"" nillable=""true"" type=""tns:MetadataBase"" /> 
- <xsd:complexType name=""RelationshipMetadataBase"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:MetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""IsCustomRelationship"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsCustomizable"" nillable=""true"" type=""q54:BooleanManagedProperty"" xmlns:q54=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsManaged"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsValidForAdvancedFind"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""SchemaName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""SecurityTypes"" nillable=""true"" type=""tns:SecurityTypes"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""RelationshipMetadataBase"" nillable=""true"" type=""tns:RelationshipMetadataBase"" /> 
- <xsd:simpleType name=""AttributeRequiredLevel"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""None"" /> 
  <xsd:enumeration value=""SystemRequired"" /> 
  <xsd:enumeration value=""ApplicationRequired"" /> 
  <xsd:enumeration value=""Recommended"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""AttributeRequiredLevel"" nillable=""true"" type=""tns:AttributeRequiredLevel"" /> 
- <xsd:simpleType name=""SecurityTypes"">
- <xsd:list>
- <xsd:simpleType>
- <xsd:restriction base=""xsd:string"">
- <xsd:enumeration value=""None"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">0</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""Append"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">1</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""ParentChild"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">2</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""Pointer"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">4</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""Inheritance"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">8</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
  </xsd:restriction>
  </xsd:simpleType>
  </xsd:list>
  </xsd:simpleType>
  <xsd:element name=""SecurityTypes"" nillable=""true"" type=""tns:SecurityTypes"" /> 
- <xsd:complexType name=""OneToManyRelationshipMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:RelationshipMetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AssociatedMenuConfiguration"" nillable=""true"" type=""tns:AssociatedMenuConfiguration"" /> 
  <xsd:element minOccurs=""0"" name=""CascadeConfiguration"" nillable=""true"" type=""tns:CascadeConfiguration"" /> 
  <xsd:element minOccurs=""0"" name=""ReferencedAttribute"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ReferencedEntity"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ReferencingAttribute"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ReferencingEntity"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""OneToManyRelationshipMetadata"" nillable=""true"" type=""tns:OneToManyRelationshipMetadata"" /> 
- <xsd:complexType name=""AssociatedMenuConfiguration"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Behavior"" nillable=""true"" type=""tns:AssociatedMenuBehavior"" /> 
  <xsd:element minOccurs=""0"" name=""Group"" nillable=""true"" type=""tns:AssociatedMenuGroup"" /> 
  <xsd:element minOccurs=""0"" name=""Label"" nillable=""true"" type=""q55:Label"" xmlns:q55=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""Order"" nillable=""true"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AssociatedMenuConfiguration"" nillable=""true"" type=""tns:AssociatedMenuConfiguration"" /> 
- <xsd:simpleType name=""AssociatedMenuBehavior"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""UseCollectionName"" /> 
  <xsd:enumeration value=""UseLabel"" /> 
  <xsd:enumeration value=""DoNotDisplay"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""AssociatedMenuBehavior"" nillable=""true"" type=""tns:AssociatedMenuBehavior"" /> 
- <xsd:simpleType name=""AssociatedMenuGroup"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Details"" /> 
  <xsd:enumeration value=""Sales"" /> 
  <xsd:enumeration value=""Service"" /> 
  <xsd:enumeration value=""Marketing"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""AssociatedMenuGroup"" nillable=""true"" type=""tns:AssociatedMenuGroup"" /> 
- <xsd:complexType name=""CascadeConfiguration"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Assign"" nillable=""true"" type=""tns:CascadeType"" /> 
  <xsd:element minOccurs=""0"" name=""Delete"" nillable=""true"" type=""tns:CascadeType"" /> 
  <xsd:element minOccurs=""0"" name=""Merge"" nillable=""true"" type=""tns:CascadeType"" /> 
  <xsd:element minOccurs=""0"" name=""Reparent"" nillable=""true"" type=""tns:CascadeType"" /> 
  <xsd:element minOccurs=""0"" name=""Share"" nillable=""true"" type=""tns:CascadeType"" /> 
  <xsd:element minOccurs=""0"" name=""Unshare"" nillable=""true"" type=""tns:CascadeType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""CascadeConfiguration"" nillable=""true"" type=""tns:CascadeConfiguration"" /> 
- <xsd:simpleType name=""CascadeType"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""NoCascade"" /> 
  <xsd:enumeration value=""Cascade"" /> 
  <xsd:enumeration value=""Active"" /> 
  <xsd:enumeration value=""UserOwned"" /> 
  <xsd:enumeration value=""RemoveLink"" /> 
  <xsd:enumeration value=""Restrict"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""CascadeType"" nillable=""true"" type=""tns:CascadeType"" /> 
- <xsd:complexType name=""ManyToManyRelationshipMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:RelationshipMetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Entity1AssociatedMenuConfiguration"" nillable=""true"" type=""tns:AssociatedMenuConfiguration"" /> 
  <xsd:element minOccurs=""0"" name=""Entity1IntersectAttribute"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Entity1LogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Entity2AssociatedMenuConfiguration"" nillable=""true"" type=""tns:AssociatedMenuConfiguration"" /> 
  <xsd:element minOccurs=""0"" name=""Entity2IntersectAttribute"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Entity2LogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""IntersectEntityName"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""ManyToManyRelationshipMetadata"" nillable=""true"" type=""tns:ManyToManyRelationshipMetadata"" /> 
- <xsd:complexType name=""AttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:MetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AttributeOf"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""AttributeType"" nillable=""true"" type=""tns:AttributeTypeCode"" /> 
  <xsd:element minOccurs=""0"" name=""CanBeSecuredForCreate"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""CanBeSecuredForRead"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""CanBeSecuredForUpdate"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""CanModifyAdditionalSettings"" nillable=""true"" type=""q56:BooleanManagedProperty"" xmlns:q56=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""ColumnNumber"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""DeprecatedVersion"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Description"" nillable=""true"" type=""q57:Label"" xmlns:q57=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""DisplayName"" nillable=""true"" type=""q58:Label"" xmlns:q58=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""EntityLogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""IsAuditEnabled"" nillable=""true"" type=""q59:BooleanManagedProperty"" xmlns:q59=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsCustomAttribute"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsCustomizable"" nillable=""true"" type=""q60:BooleanManagedProperty"" xmlns:q60=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsManaged"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsPrimaryId"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsPrimaryName"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsRenameable"" nillable=""true"" type=""q61:BooleanManagedProperty"" xmlns:q61=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsSecured"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsValidForAdvancedFind"" nillable=""true"" type=""q62:BooleanManagedProperty"" xmlns:q62=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsValidForCreate"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsValidForRead"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsValidForUpdate"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""LinkedAttributeId"" nillable=""true"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""LogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""RequiredLevel"" nillable=""true"" type=""tns:AttributeRequiredLevelManagedProperty"" /> 
  <xsd:element minOccurs=""0"" name=""SchemaName"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""AttributeMetadata"" nillable=""true"" type=""tns:AttributeMetadata"" /> 
- <xsd:simpleType name=""AttributeTypeCode"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Boolean"" /> 
  <xsd:enumeration value=""Customer"" /> 
  <xsd:enumeration value=""DateTime"" /> 
  <xsd:enumeration value=""Decimal"" /> 
  <xsd:enumeration value=""Double"" /> 
  <xsd:enumeration value=""Integer"" /> 
  <xsd:enumeration value=""Lookup"" /> 
  <xsd:enumeration value=""Memo"" /> 
  <xsd:enumeration value=""Money"" /> 
  <xsd:enumeration value=""Owner"" /> 
  <xsd:enumeration value=""PartyList"" /> 
  <xsd:enumeration value=""Picklist"" /> 
  <xsd:enumeration value=""State"" /> 
  <xsd:enumeration value=""Status"" /> 
  <xsd:enumeration value=""String"" /> 
  <xsd:enumeration value=""Uniqueidentifier"" /> 
  <xsd:enumeration value=""CalendarRules"" /> 
  <xsd:enumeration value=""Virtual"" /> 
  <xsd:enumeration value=""BigInt"" /> 
  <xsd:enumeration value=""ManagedProperty"" /> 
  <xsd:enumeration value=""EntityName"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""AttributeTypeCode"" nillable=""true"" type=""tns:AttributeTypeCode"" /> 
- <xsd:complexType name=""AttributeRequiredLevelManagedProperty"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""q63:ManagedPropertyAttributeRequiredLevel"" xmlns:q63=""http://schemas.microsoft.com/xrm/2011/Contracts"">
  <xsd:sequence /> 
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""AttributeRequiredLevelManagedProperty"" nillable=""true"" type=""tns:AttributeRequiredLevelManagedProperty"" /> 
- <xsd:complexType name=""StringAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Format"" nillable=""true"" type=""tns:StringFormat"" /> 
  <xsd:element minOccurs=""0"" name=""ImeMode"" nillable=""true"" type=""tns:ImeMode"" /> 
  <xsd:element minOccurs=""0"" name=""MaxLength"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""YomiOf"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""StringAttributeMetadata"" nillable=""true"" type=""tns:StringAttributeMetadata"" /> 
- <xsd:simpleType name=""StringFormat"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Email"" /> 
  <xsd:enumeration value=""Text"" /> 
  <xsd:enumeration value=""TextArea"" /> 
  <xsd:enumeration value=""Url"" /> 
  <xsd:enumeration value=""TickerSymbol"" /> 
  <xsd:enumeration value=""PhoneticGuide"" /> 
  <xsd:enumeration value=""VersionNumber"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""StringFormat"" nillable=""true"" type=""tns:StringFormat"" /> 
- <xsd:simpleType name=""ImeMode"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Auto"" /> 
  <xsd:enumeration value=""Inactive"" /> 
  <xsd:enumeration value=""Active"" /> 
  <xsd:enumeration value=""Disabled"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""ImeMode"" nillable=""true"" type=""tns:ImeMode"" /> 
- <xsd:complexType name=""BigIntAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""MaxValue"" nillable=""true"" type=""xsd:long"" /> 
  <xsd:element minOccurs=""0"" name=""MinValue"" nillable=""true"" type=""xsd:long"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""BigIntAttributeMetadata"" nillable=""true"" type=""tns:BigIntAttributeMetadata"" /> 
- <xsd:complexType name=""ManagedPropertyAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ManagedPropertyLogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ParentAttributeName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ParentComponentType"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""ValueAttributeTypeCode"" type=""tns:AttributeTypeCode"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""ManagedPropertyAttributeMetadata"" nillable=""true"" type=""tns:ManagedPropertyAttributeMetadata"" /> 
- <xsd:complexType name=""DateTimeAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Format"" nillable=""true"" type=""tns:DateTimeFormat"" /> 
  <xsd:element minOccurs=""0"" name=""ImeMode"" nillable=""true"" type=""tns:ImeMode"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""DateTimeAttributeMetadata"" nillable=""true"" type=""tns:DateTimeAttributeMetadata"" /> 
- <xsd:simpleType name=""DateTimeFormat"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""DateOnly"" /> 
  <xsd:enumeration value=""DateAndTime"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""DateTimeFormat"" nillable=""true"" type=""tns:DateTimeFormat"" /> 
- <xsd:complexType name=""DecimalAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ImeMode"" nillable=""true"" type=""tns:ImeMode"" /> 
  <xsd:element minOccurs=""0"" name=""MaxValue"" nillable=""true"" type=""xsd:decimal"" /> 
  <xsd:element minOccurs=""0"" name=""MinValue"" nillable=""true"" type=""xsd:decimal"" /> 
  <xsd:element minOccurs=""0"" name=""Precision"" nillable=""true"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""DecimalAttributeMetadata"" nillable=""true"" type=""tns:DecimalAttributeMetadata"" /> 
- <xsd:complexType name=""DoubleAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ImeMode"" nillable=""true"" type=""tns:ImeMode"" /> 
  <xsd:element minOccurs=""0"" name=""MaxValue"" nillable=""true"" type=""xsd:double"" /> 
  <xsd:element minOccurs=""0"" name=""MinValue"" nillable=""true"" type=""xsd:double"" /> 
  <xsd:element minOccurs=""0"" name=""Precision"" nillable=""true"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""DoubleAttributeMetadata"" nillable=""true"" type=""tns:DoubleAttributeMetadata"" /> 
- <xsd:complexType name=""EntityNameAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:EnumAttributeMetadata"">
  <xsd:sequence /> 
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""EntityNameAttributeMetadata"" nillable=""true"" type=""tns:EntityNameAttributeMetadata"" /> 
- <xsd:complexType name=""EnumAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""DefaultFormValue"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""OptionSet"" nillable=""true"" type=""tns:OptionSetMetadata"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""EnumAttributeMetadata"" nillable=""true"" type=""tns:EnumAttributeMetadata"" /> 
- <xsd:complexType name=""OptionSetMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:OptionSetMetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Options"" nillable=""true"" type=""tns:ArrayOfOptionMetadata"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""OptionSetMetadata"" nillable=""true"" type=""tns:OptionSetMetadata"" /> 
- <xsd:complexType name=""OptionSetMetadataBase"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:MetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Description"" nillable=""true"" type=""q64:Label"" xmlns:q64=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""DisplayName"" nillable=""true"" type=""q65:Label"" xmlns:q65=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsCustomOptionSet"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsCustomizable"" nillable=""true"" type=""q66:BooleanManagedProperty"" xmlns:q66=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsGlobal"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsManaged"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""Name"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""OptionSetType"" nillable=""true"" type=""tns:OptionSetType"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""OptionSetMetadataBase"" nillable=""true"" type=""tns:OptionSetMetadataBase"" /> 
- <xsd:simpleType name=""OptionSetType"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Picklist"" /> 
  <xsd:enumeration value=""State"" /> 
  <xsd:enumeration value=""Status"" /> 
  <xsd:enumeration value=""Boolean"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""OptionSetType"" nillable=""true"" type=""tns:OptionSetType"" /> 
- <xsd:complexType name=""BooleanOptionSetMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:OptionSetMetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""FalseOption"" nillable=""true"" type=""tns:OptionMetadata"" /> 
  <xsd:element minOccurs=""0"" name=""TrueOption"" nillable=""true"" type=""tns:OptionMetadata"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""BooleanOptionSetMetadata"" nillable=""true"" type=""tns:BooleanOptionSetMetadata"" /> 
- <xsd:complexType name=""OptionMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:MetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Description"" nillable=""true"" type=""q67:Label"" xmlns:q67=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""IsManaged"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""Label"" nillable=""true"" type=""q68:Label"" xmlns:q68=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""Value"" nillable=""true"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""OptionMetadata"" nillable=""true"" type=""tns:OptionMetadata"" /> 
- <xsd:complexType name=""StatusOptionMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:OptionMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""State"" nillable=""true"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""StatusOptionMetadata"" nillable=""true"" type=""tns:StatusOptionMetadata"" /> 
- <xsd:complexType name=""StateOptionMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:OptionMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""DefaultStatus"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""InvariantName"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""StateOptionMetadata"" nillable=""true"" type=""tns:StateOptionMetadata"" /> 
- <xsd:complexType name=""PicklistAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:EnumAttributeMetadata"">
  <xsd:sequence /> 
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""PicklistAttributeMetadata"" nillable=""true"" type=""tns:PicklistAttributeMetadata"" /> 
- <xsd:complexType name=""StatusAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:EnumAttributeMetadata"">
  <xsd:sequence /> 
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""StatusAttributeMetadata"" nillable=""true"" type=""tns:StatusAttributeMetadata"" /> 
- <xsd:complexType name=""StateAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:EnumAttributeMetadata"">
  <xsd:sequence /> 
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""StateAttributeMetadata"" nillable=""true"" type=""tns:StateAttributeMetadata"" /> 
- <xsd:complexType name=""IntegerAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Format"" nillable=""true"" type=""tns:IntegerFormat"" /> 
  <xsd:element minOccurs=""0"" name=""MaxValue"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""MinValue"" nillable=""true"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""IntegerAttributeMetadata"" nillable=""true"" type=""tns:IntegerAttributeMetadata"" /> 
- <xsd:simpleType name=""IntegerFormat"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""None"" /> 
  <xsd:enumeration value=""Duration"" /> 
  <xsd:enumeration value=""TimeZone"" /> 
  <xsd:enumeration value=""Language"" /> 
  <xsd:enumeration value=""Locale"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""IntegerFormat"" nillable=""true"" type=""tns:IntegerFormat"" /> 
- <xsd:complexType name=""BooleanAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""DefaultValue"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""OptionSet"" nillable=""true"" type=""tns:BooleanOptionSetMetadata"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""BooleanAttributeMetadata"" nillable=""true"" type=""tns:BooleanAttributeMetadata"" /> 
- <xsd:complexType name=""LookupAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Targets"" nillable=""true"" type=""q69:ArrayOfstring"" xmlns:q69=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""LookupAttributeMetadata"" nillable=""true"" type=""tns:LookupAttributeMetadata"" /> 
- <xsd:complexType name=""MemoAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Format"" nillable=""true"" type=""tns:StringFormat"" /> 
  <xsd:element minOccurs=""0"" name=""ImeMode"" nillable=""true"" type=""tns:ImeMode"" /> 
  <xsd:element minOccurs=""0"" name=""MaxLength"" nillable=""true"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""MemoAttributeMetadata"" nillable=""true"" type=""tns:MemoAttributeMetadata"" /> 
- <xsd:complexType name=""MoneyAttributeMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""CalculationOf"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ImeMode"" nillable=""true"" type=""tns:ImeMode"" /> 
  <xsd:element minOccurs=""0"" name=""MaxValue"" nillable=""true"" type=""xsd:double"" /> 
  <xsd:element minOccurs=""0"" name=""MinValue"" nillable=""true"" type=""xsd:double"" /> 
  <xsd:element minOccurs=""0"" name=""Precision"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""PrecisionSource"" nillable=""true"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""MoneyAttributeMetadata"" nillable=""true"" type=""tns:MoneyAttributeMetadata"" /> 
- <xsd:complexType name=""ArrayOfOptionMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""OptionMetadata"" nillable=""true"" type=""tns:OptionMetadata"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfOptionMetadata"" nillable=""true"" type=""tns:ArrayOfOptionMetadata"" /> 
- <xsd:complexType name=""ArrayOfAttributeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AttributeMetadata"" nillable=""true"" type=""tns:AttributeMetadata"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAttributeMetadata"" nillable=""true"" type=""tns:ArrayOfAttributeMetadata"" /> 
- <xsd:complexType name=""ArrayOfManyToManyRelationshipMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ManyToManyRelationshipMetadata"" nillable=""true"" type=""tns:ManyToManyRelationshipMetadata"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfManyToManyRelationshipMetadata"" nillable=""true"" type=""tns:ArrayOfManyToManyRelationshipMetadata"" /> 
- <xsd:complexType name=""ArrayOfOneToManyRelationshipMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""OneToManyRelationshipMetadata"" nillable=""true"" type=""tns:OneToManyRelationshipMetadata"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfOneToManyRelationshipMetadata"" nillable=""true"" type=""tns:ArrayOfOneToManyRelationshipMetadata"" /> 
- <xsd:simpleType name=""OwnershipTypes"">
- <xsd:list>
- <xsd:simpleType>
- <xsd:restriction base=""xsd:string"">
- <xsd:enumeration value=""None"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">0</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""UserOwned"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">1</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""TeamOwned"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">2</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""BusinessOwned"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">4</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""OrganizationOwned"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">8</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""BusinessParented"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">16</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
  </xsd:restriction>
  </xsd:simpleType>
  </xsd:list>
  </xsd:simpleType>
  <xsd:element name=""OwnershipTypes"" nillable=""true"" type=""tns:OwnershipTypes"" /> 
- <xsd:complexType name=""ArrayOfSecurityPrivilegeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""SecurityPrivilegeMetadata"" nillable=""true"" type=""tns:SecurityPrivilegeMetadata"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfSecurityPrivilegeMetadata"" nillable=""true"" type=""tns:ArrayOfSecurityPrivilegeMetadata"" /> 
- <xsd:complexType name=""SecurityPrivilegeMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""CanBeBasic"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""CanBeDeep"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""CanBeGlobal"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""CanBeLocal"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""Name"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""PrivilegeId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""PrivilegeType"" type=""tns:PrivilegeType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""SecurityPrivilegeMetadata"" nillable=""true"" type=""tns:SecurityPrivilegeMetadata"" /> 
- <xsd:simpleType name=""PrivilegeType"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""None"" /> 
  <xsd:enumeration value=""Create"" /> 
  <xsd:enumeration value=""Read"" /> 
  <xsd:enumeration value=""Write"" /> 
  <xsd:enumeration value=""Delete"" /> 
  <xsd:enumeration value=""Assign"" /> 
  <xsd:enumeration value=""Share"" /> 
  <xsd:enumeration value=""Append"" /> 
  <xsd:enumeration value=""AppendTo"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""PrivilegeType"" nillable=""true"" type=""tns:PrivilegeType"" /> 
- <xsd:complexType name=""ArrayOfRelationshipMetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""RelationshipMetadataBase"" nillable=""true"" type=""tns:RelationshipMetadataBase"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfRelationshipMetadataBase"" nillable=""true"" type=""tns:ArrayOfRelationshipMetadataBase"" /> 
- <xsd:simpleType name=""EntityFilters"">
- <xsd:list>
- <xsd:simpleType>
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Entity"" /> 
  <xsd:enumeration value=""Attributes"" /> 
  <xsd:enumeration value=""Privileges"" /> 
  <xsd:enumeration value=""Relationships"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  </xsd:list>
  </xsd:simpleType>
  <xsd:element name=""EntityFilters"" nillable=""true"" type=""tns:EntityFilters"" /> 
- <xsd:complexType name=""ArrayOfOptionSetMetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""OptionSetMetadataBase"" nillable=""true"" type=""tns:OptionSetMetadataBase"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfOptionSetMetadataBase"" nillable=""true"" type=""tns:ArrayOfOptionSetMetadataBase"" /> 
- <xsd:complexType name=""ManagedPropertyMetadata"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:MetadataBase"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Description"" nillable=""true"" type=""q70:Label"" xmlns:q70=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""DisplayName"" nillable=""true"" type=""q71:Label"" xmlns:q71=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""EnablesAttributeName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""EnablesEntityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ErrorCode"" nillable=""true"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""EvaluationPriority"" nillable=""true"" type=""tns:ManagedPropertyEvaluationPriority"" /> 
  <xsd:element minOccurs=""0"" name=""IsGlobalForOperation"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""IsPrivate"" nillable=""true"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""LogicalName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ManagedPropertyType"" nillable=""true"" type=""tns:ManagedPropertyType"" /> 
  <xsd:element minOccurs=""0"" name=""Operation"" nillable=""true"" type=""tns:ManagedPropertyOperation"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""ManagedPropertyMetadata"" nillable=""true"" type=""tns:ManagedPropertyMetadata"" /> 
- <xsd:simpleType name=""ManagedPropertyEvaluationPriority"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""None"" /> 
  <xsd:enumeration value=""Low"" /> 
  <xsd:enumeration value=""Normal"" /> 
  <xsd:enumeration value=""High"" /> 
  <xsd:enumeration value=""Essential"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""ManagedPropertyEvaluationPriority"" nillable=""true"" type=""tns:ManagedPropertyEvaluationPriority"" /> 
- <xsd:simpleType name=""ManagedPropertyType"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Operation"" /> 
  <xsd:enumeration value=""Attribute"" /> 
  <xsd:enumeration value=""CustomEvaluator"" /> 
  <xsd:enumeration value=""Custom"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""ManagedPropertyType"" nillable=""true"" type=""tns:ManagedPropertyType"" /> 
- <xsd:simpleType name=""ManagedPropertyOperation"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""None"" /> 
  <xsd:enumeration value=""Create"" /> 
  <xsd:enumeration value=""Update"" /> 
- <xsd:enumeration value=""Delete"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">4</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""CreateUpdate"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">3</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""UpdateDelete"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">6</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""All"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">7</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""ManagedPropertyOperation"" nillable=""true"" type=""tns:ManagedPropertyOperation"" /> 
- <xsd:complexType name=""ArrayOfManagedPropertyMetadata"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ManagedPropertyMetadata"" nillable=""true"" type=""tns:ManagedPropertyMetadata"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfManagedPropertyMetadata"" nillable=""true"" type=""tns:ArrayOfManagedPropertyMetadata"" /> 
  </xsd:schema>
- <xsd:schema elementFormDefault=""qualified"" targetNamespace=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" xmlns:tns=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" xmlns:ser=""http://schemas.microsoft.com/2003/10/Serialization/"">
- <xsd:complexType name=""ArrayOfboolean"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""boolean"" type=""xsd:boolean"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfboolean"" nillable=""true"" type=""tns:ArrayOfboolean"" /> 
- <xsd:complexType name=""ArrayOfint"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""int"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfint"" nillable=""true"" type=""tns:ArrayOfint"" /> 
- <xsd:complexType name=""ArrayOfstring"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""string"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfstring"" nillable=""true"" type=""tns:ArrayOfstring"" /> 
- <xsd:complexType name=""ArrayOfArrayOfstring"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfstring"" nillable=""true"" type=""tns:ArrayOfstring"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfstring"" nillable=""true"" type=""tns:ArrayOfArrayOfstring"" /> 
- <xsd:complexType name=""ArrayOfdouble"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""double"" type=""xsd:double"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfdouble"" nillable=""true"" type=""tns:ArrayOfdouble"" /> 
- <xsd:complexType name=""ArrayOfdecimal"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""decimal"" type=""xsd:decimal"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfdecimal"" nillable=""true"" type=""tns:ArrayOfdecimal"" /> 
- <xsd:complexType name=""ArrayOfguid"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""guid"" type=""ser:guid"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfguid"" nillable=""true"" type=""tns:ArrayOfguid"" /> 
- <xsd:complexType name=""ArrayOfdateTime"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""dateTime"" type=""xsd:dateTime"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfdateTime"" nillable=""true"" type=""tns:ArrayOfdateTime"" /> 
- <xsd:complexType name=""ArrayOfKeyValueOfstringstring"">
- <xsd:annotation>
- <xsd:appinfo>
  <IsDictionary xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">true</IsDictionary> 
  </xsd:appinfo>
  </xsd:annotation>
- <xsd:sequence>
- <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""KeyValueOfstringstring"">
- <xsd:complexType>
- <xsd:sequence>
  <xsd:element name=""Key"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element name=""Value"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfKeyValueOfstringstring"" nillable=""true"" type=""tns:ArrayOfKeyValueOfstringstring"" /> 
- <xsd:complexType name=""ArrayOfanyType"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""anyType"" nillable=""true"" type=""xsd:anyType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfanyType"" nillable=""true"" type=""tns:ArrayOfanyType"" /> 
  </xsd:schema>
- <xsd:schema elementFormDefault=""qualified"" targetNamespace=""http://schemas.microsoft.com/crm/2011/Contracts"" xmlns:tns=""http://schemas.microsoft.com/crm/2011/Contracts"" xmlns:ser=""http://schemas.microsoft.com/2003/10/Serialization/"">
- <xsd:complexType name=""AppointmentProposal"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""End"" nillable=""true"" type=""xsd:dateTime"" /> 
  <xsd:element minOccurs=""0"" name=""ProposalParties"" nillable=""true"" type=""tns:ArrayOfProposalParty"" /> 
  <xsd:element minOccurs=""0"" name=""SiteId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""SiteName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Start"" nillable=""true"" type=""xsd:dateTime"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AppointmentProposal"" nillable=""true"" type=""tns:AppointmentProposal"" /> 
- <xsd:complexType name=""ArrayOfProposalParty"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ProposalParty"" nillable=""true"" type=""tns:ProposalParty"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfProposalParty"" nillable=""true"" type=""tns:ArrayOfProposalParty"" /> 
- <xsd:complexType name=""ProposalParty"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""DisplayName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""EffortRequired"" type=""xsd:double"" /> 
  <xsd:element minOccurs=""0"" name=""EntityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ResourceId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""ResourceSpecId"" type=""ser:guid"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ProposalParty"" nillable=""true"" type=""tns:ProposalParty"" /> 
- <xsd:complexType name=""ArrayOfAppointmentProposal"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AppointmentProposal"" nillable=""true"" type=""tns:AppointmentProposal"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAppointmentProposal"" nillable=""true"" type=""tns:ArrayOfAppointmentProposal"" /> 
- <xsd:complexType name=""ArrayOfArrayOfAppointmentProposal"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfAppointmentProposal"" nillable=""true"" type=""tns:ArrayOfAppointmentProposal"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfAppointmentProposal"" nillable=""true"" type=""tns:ArrayOfArrayOfAppointmentProposal"" /> 
- <xsd:simpleType name=""SearchDirection"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Forward"" /> 
  <xsd:enumeration value=""Backward"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""SearchDirection"" nillable=""true"" type=""tns:SearchDirection"" /> 
- <xsd:complexType name=""ArrayOfSearchDirection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""SearchDirection"" type=""tns:SearchDirection"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfSearchDirection"" nillable=""true"" type=""tns:ArrayOfSearchDirection"" /> 
- <xsd:complexType name=""ArrayOfArrayOfSearchDirection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfSearchDirection"" nillable=""true"" type=""tns:ArrayOfSearchDirection"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfSearchDirection"" nillable=""true"" type=""tns:ArrayOfArrayOfSearchDirection"" /> 
- <xsd:complexType name=""AppointmentRequest"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AnchorOffset"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""AppointmentsToIgnore"" nillable=""true"" type=""tns:ArrayOfAppointmentsToIgnore"" /> 
  <xsd:element minOccurs=""0"" name=""Constraints"" nillable=""true"" type=""tns:ArrayOfConstraintRelation"" /> 
  <xsd:element minOccurs=""0"" name=""Direction"" type=""tns:SearchDirection"" /> 
  <xsd:element minOccurs=""0"" name=""Duration"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""NumberOfResults"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""Objectives"" nillable=""true"" type=""tns:ArrayOfObjectiveRelation"" /> 
  <xsd:element minOccurs=""0"" name=""RecurrenceDuration"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""RecurrenceTimeZoneCode"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""RequiredResources"" nillable=""true"" type=""tns:ArrayOfRequiredResource"" /> 
  <xsd:element minOccurs=""0"" name=""SearchRecurrenceRule"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""SearchRecurrenceStart"" nillable=""true"" type=""xsd:dateTime"" /> 
  <xsd:element minOccurs=""0"" name=""SearchWindowEnd"" nillable=""true"" type=""xsd:dateTime"" /> 
  <xsd:element minOccurs=""0"" name=""SearchWindowStart"" nillable=""true"" type=""xsd:dateTime"" /> 
  <xsd:element minOccurs=""0"" name=""ServiceId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""Sites"" nillable=""true"" type=""q72:ArrayOfguid"" xmlns:q72=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  <xsd:element minOccurs=""0"" name=""UserTimeZoneCode"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AppointmentRequest"" nillable=""true"" type=""tns:AppointmentRequest"" /> 
- <xsd:complexType name=""ArrayOfAppointmentsToIgnore"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AppointmentsToIgnore"" nillable=""true"" type=""tns:AppointmentsToIgnore"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAppointmentsToIgnore"" nillable=""true"" type=""tns:ArrayOfAppointmentsToIgnore"" /> 
- <xsd:complexType name=""AppointmentsToIgnore"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Appointments"" nillable=""true"" type=""q73:ArrayOfguid"" xmlns:q73=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  <xsd:element minOccurs=""0"" name=""ResourceId"" type=""ser:guid"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AppointmentsToIgnore"" nillable=""true"" type=""tns:AppointmentsToIgnore"" /> 
- <xsd:complexType name=""ArrayOfConstraintRelation"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ConstraintRelation"" nillable=""true"" type=""tns:ConstraintRelation"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfConstraintRelation"" nillable=""true"" type=""tns:ArrayOfConstraintRelation"" /> 
- <xsd:complexType name=""ConstraintRelation"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ConstraintType"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Constraints"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ObjectId"" type=""ser:guid"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ConstraintRelation"" nillable=""true"" type=""tns:ConstraintRelation"" /> 
- <xsd:complexType name=""ArrayOfObjectiveRelation"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ObjectiveRelation"" nillable=""true"" type=""tns:ObjectiveRelation"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfObjectiveRelation"" nillable=""true"" type=""tns:ArrayOfObjectiveRelation"" /> 
- <xsd:complexType name=""ObjectiveRelation"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ObjectiveExpression"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ResourceSpecId"" type=""ser:guid"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ObjectiveRelation"" nillable=""true"" type=""tns:ObjectiveRelation"" /> 
- <xsd:complexType name=""ArrayOfRequiredResource"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""RequiredResource"" nillable=""true"" type=""tns:RequiredResource"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfRequiredResource"" nillable=""true"" type=""tns:ArrayOfRequiredResource"" /> 
- <xsd:complexType name=""RequiredResource"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ResourceId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""ResourceSpecId"" type=""ser:guid"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""RequiredResource"" nillable=""true"" type=""tns:RequiredResource"" /> 
- <xsd:complexType name=""ArrayOfAppointmentRequest"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AppointmentRequest"" nillable=""true"" type=""tns:AppointmentRequest"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAppointmentRequest"" nillable=""true"" type=""tns:ArrayOfAppointmentRequest"" /> 
- <xsd:complexType name=""ArrayOfArrayOfAppointmentRequest"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfAppointmentRequest"" nillable=""true"" type=""tns:ArrayOfAppointmentRequest"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfAppointmentRequest"" nillable=""true"" type=""tns:ArrayOfArrayOfAppointmentRequest"" /> 
- <xsd:complexType name=""ArrayOfArrayOfAppointmentsToIgnore"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfAppointmentsToIgnore"" nillable=""true"" type=""tns:ArrayOfAppointmentsToIgnore"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfAppointmentsToIgnore"" nillable=""true"" type=""tns:ArrayOfArrayOfAppointmentsToIgnore"" /> 
- <xsd:complexType name=""AuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AuditRecord"" nillable=""true"" type=""q74:Entity"" xmlns:q74=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AuditDetail"" nillable=""true"" type=""tns:AuditDetail"" /> 
- <xsd:complexType name=""ShareAuditDetail"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""NewPrivileges"" type=""tns:AccessRights"" /> 
  <xsd:element minOccurs=""0"" name=""OldPrivileges"" type=""tns:AccessRights"" /> 
  <xsd:element minOccurs=""0"" name=""Principal"" nillable=""true"" type=""q75:EntityReference"" xmlns:q75=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""ShareAuditDetail"" nillable=""true"" type=""tns:ShareAuditDetail"" /> 
- <xsd:simpleType name=""AccessRights"">
- <xsd:list>
- <xsd:simpleType>
- <xsd:restriction base=""xsd:string"">
- <xsd:enumeration value=""None"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">0</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""ReadAccess"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">1</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""WriteAccess"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">2</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""AppendAccess"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">4</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
  <xsd:enumeration value=""AppendToAccess"" /> 
  <xsd:enumeration value=""CreateAccess"" /> 
- <xsd:enumeration value=""DeleteAccess"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">65536</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""ShareAccess"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">262144</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
- <xsd:enumeration value=""AssignAccess"">
- <xsd:annotation>
- <xsd:appinfo>
  <EnumerationValue xmlns=""http://schemas.microsoft.com/2003/10/Serialization/"">524288</EnumerationValue> 
  </xsd:appinfo>
  </xsd:annotation>
  </xsd:enumeration>
  </xsd:restriction>
  </xsd:simpleType>
  </xsd:list>
  </xsd:simpleType>
  <xsd:element name=""AccessRights"" nillable=""true"" type=""tns:AccessRights"" /> 
- <xsd:complexType name=""AttributeAuditDetail"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""InvalidNewValueAttributes"" nillable=""true"" type=""q76:ArrayOfstring"" xmlns:q76=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  <xsd:element minOccurs=""0"" name=""NewValue"" nillable=""true"" type=""q77:Entity"" xmlns:q77=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  <xsd:element minOccurs=""0"" name=""OldValue"" nillable=""true"" type=""q78:Entity"" xmlns:q78=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""AttributeAuditDetail"" nillable=""true"" type=""tns:AttributeAuditDetail"" /> 
- <xsd:complexType name=""RelationshipAuditDetail"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""RelationshipName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""TargetRecords"" nillable=""true"" type=""q79:ArrayOfEntityReference"" xmlns:q79=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""RelationshipAuditDetail"" nillable=""true"" type=""tns:RelationshipAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AuditDetail"" nillable=""true"" type=""tns:AuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAuditDetail"" nillable=""true"" type=""tns:ArrayOfAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfAuditDetail"" nillable=""true"" type=""tns:ArrayOfAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfAuditDetail"" nillable=""true"" type=""tns:ArrayOfArrayOfAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfAttributeAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AttributeAuditDetail"" nillable=""true"" type=""tns:AttributeAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAttributeAuditDetail"" nillable=""true"" type=""tns:ArrayOfAttributeAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfAttributeAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfAttributeAuditDetail"" nillable=""true"" type=""tns:ArrayOfAttributeAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfAttributeAuditDetail"" nillable=""true"" type=""tns:ArrayOfArrayOfAttributeAuditDetail"" /> 
- <xsd:complexType name=""AuditDetailCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AuditDetails"" nillable=""true"" type=""tns:ArrayOfAuditDetail"" /> 
  <xsd:element minOccurs=""0"" name=""MoreRecords"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""PagingCookie"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""TotalRecordCount"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AuditDetailCollection"" nillable=""true"" type=""tns:AuditDetailCollection"" /> 
- <xsd:complexType name=""ArrayOfAuditDetailCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AuditDetailCollection"" nillable=""true"" type=""tns:AuditDetailCollection"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAuditDetailCollection"" nillable=""true"" type=""tns:ArrayOfAuditDetailCollection"" /> 
- <xsd:complexType name=""ArrayOfArrayOfAuditDetailCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfAuditDetailCollection"" nillable=""true"" type=""tns:ArrayOfAuditDetailCollection"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfAuditDetailCollection"" nillable=""true"" type=""tns:ArrayOfArrayOfAuditDetailCollection"" /> 
- <xsd:complexType name=""AuditPartitionDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""EndDate"" nillable=""true"" type=""xsd:dateTime"" /> 
  <xsd:element minOccurs=""0"" name=""PartitionNumber"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""Size"" type=""xsd:long"" /> 
  <xsd:element minOccurs=""0"" name=""StartDate"" nillable=""true"" type=""xsd:dateTime"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AuditPartitionDetail"" nillable=""true"" type=""tns:AuditPartitionDetail"" /> 
- <xsd:complexType name=""ArrayOfAuditPartitionDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AuditPartitionDetail"" nillable=""true"" type=""tns:AuditPartitionDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAuditPartitionDetail"" nillable=""true"" type=""tns:ArrayOfAuditPartitionDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfAuditPartitionDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfAuditPartitionDetail"" nillable=""true"" type=""tns:ArrayOfAuditPartitionDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfAuditPartitionDetail"" nillable=""true"" type=""tns:ArrayOfArrayOfAuditPartitionDetail"" /> 
- <xsd:complexType name=""AuditPartitionDetailCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AuditPartitionDetail"" nillable=""true"" type=""tns:AuditPartitionDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""AuditPartitionDetailCollection"" nillable=""true"" type=""tns:AuditPartitionDetailCollection"" /> 
- <xsd:complexType name=""ArrayOfAuditPartitionDetailCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AuditPartitionDetailCollection"" nillable=""true"" type=""tns:AuditPartitionDetailCollection"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAuditPartitionDetailCollection"" nillable=""true"" type=""tns:ArrayOfAuditPartitionDetailCollection"" /> 
- <xsd:complexType name=""ArrayOfArrayOfAuditPartitionDetailCollection"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfAuditPartitionDetailCollection"" nillable=""true"" type=""tns:ArrayOfAuditPartitionDetailCollection"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfAuditPartitionDetailCollection"" nillable=""true"" type=""tns:ArrayOfArrayOfAuditPartitionDetailCollection"" /> 
- <xsd:complexType name=""ComponentDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""DisplayName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Id"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""ParentDisplayName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ParentId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""ParentSchemaName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""SchemaName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Solution"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Type"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ComponentDetail"" nillable=""true"" type=""tns:ComponentDetail"" /> 
- <xsd:complexType name=""ArrayOfComponentDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ComponentDetail"" nillable=""true"" type=""tns:ComponentDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfComponentDetail"" nillable=""true"" type=""tns:ArrayOfComponentDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfComponentDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfComponentDetail"" nillable=""true"" type=""tns:ArrayOfComponentDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfComponentDetail"" nillable=""true"" type=""tns:ArrayOfArrayOfComponentDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfConstraintRelation"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfConstraintRelation"" nillable=""true"" type=""tns:ArrayOfConstraintRelation"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfConstraintRelation"" nillable=""true"" type=""tns:ArrayOfArrayOfConstraintRelation"" /> 
- <xsd:simpleType name=""BulkOperationSource"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""QuickCampaign"" /> 
  <xsd:enumeration value=""CampaignActivity"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""BulkOperationSource"" nillable=""true"" type=""tns:BulkOperationSource"" /> 
- <xsd:complexType name=""ArrayOfBulkOperationSource"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""BulkOperationSource"" type=""tns:BulkOperationSource"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfBulkOperationSource"" nillable=""true"" type=""tns:ArrayOfBulkOperationSource"" /> 
- <xsd:complexType name=""ArrayOfArrayOfBulkOperationSource"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfBulkOperationSource"" nillable=""true"" type=""tns:ArrayOfBulkOperationSource"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfBulkOperationSource"" nillable=""true"" type=""tns:ArrayOfArrayOfBulkOperationSource"" /> 
- <xsd:simpleType name=""EntitySource"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Account"" /> 
  <xsd:enumeration value=""Contact"" /> 
  <xsd:enumeration value=""Lead"" /> 
  <xsd:enumeration value=""All"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""EntitySource"" nillable=""true"" type=""tns:EntitySource"" /> 
- <xsd:complexType name=""ArrayOfEntitySource"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""EntitySource"" type=""tns:EntitySource"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfEntitySource"" nillable=""true"" type=""tns:ArrayOfEntitySource"" /> 
- <xsd:complexType name=""ArrayOfArrayOfEntitySource"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfEntitySource"" nillable=""true"" type=""tns:ArrayOfEntitySource"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfEntitySource"" nillable=""true"" type=""tns:ArrayOfArrayOfEntitySource"" /> 
- <xsd:simpleType name=""TargetFieldType"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""All"" /> 
  <xsd:enumeration value=""ValidForCreate"" /> 
  <xsd:enumeration value=""ValidForUpdate"" /> 
  <xsd:enumeration value=""ValidForRead"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""TargetFieldType"" nillable=""true"" type=""tns:TargetFieldType"" /> 
- <xsd:complexType name=""ArrayOfTargetFieldType"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""TargetFieldType"" type=""tns:TargetFieldType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfTargetFieldType"" nillable=""true"" type=""tns:ArrayOfTargetFieldType"" /> 
- <xsd:complexType name=""ArrayOfArrayOfTargetFieldType"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfTargetFieldType"" nillable=""true"" type=""tns:ArrayOfTargetFieldType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfTargetFieldType"" nillable=""true"" type=""tns:ArrayOfArrayOfTargetFieldType"" /> 
- <xsd:simpleType name=""PropagationOwnershipOptions"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""None"" /> 
  <xsd:enumeration value=""Caller"" /> 
  <xsd:enumeration value=""ListMemberOwner"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""PropagationOwnershipOptions"" nillable=""true"" type=""tns:PropagationOwnershipOptions"" /> 
- <xsd:complexType name=""ArrayOfPropagationOwnershipOptions"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""PropagationOwnershipOptions"" type=""tns:PropagationOwnershipOptions"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfPropagationOwnershipOptions"" nillable=""true"" type=""tns:ArrayOfPropagationOwnershipOptions"" /> 
- <xsd:complexType name=""ArrayOfArrayOfPropagationOwnershipOptions"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfPropagationOwnershipOptions"" nillable=""true"" type=""tns:ArrayOfPropagationOwnershipOptions"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfPropagationOwnershipOptions"" nillable=""true"" type=""tns:ArrayOfArrayOfPropagationOwnershipOptions"" /> 
- <xsd:simpleType name=""RollupType"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""None"" /> 
  <xsd:enumeration value=""Related"" /> 
  <xsd:enumeration value=""Extended"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""RollupType"" nillable=""true"" type=""tns:RollupType"" /> 
- <xsd:complexType name=""ArrayOfRollupType"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""RollupType"" type=""tns:RollupType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfRollupType"" nillable=""true"" type=""tns:ArrayOfRollupType"" /> 
- <xsd:complexType name=""ArrayOfArrayOfRollupType"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfRollupType"" nillable=""true"" type=""tns:ArrayOfRollupType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfRollupType"" nillable=""true"" type=""tns:ArrayOfArrayOfRollupType"" /> 
- <xsd:complexType name=""ErrorInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ErrorCode"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ResourceList"" nillable=""true"" type=""tns:ArrayOfResourceInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ErrorInfo"" nillable=""true"" type=""tns:ErrorInfo"" /> 
- <xsd:complexType name=""ArrayOfResourceInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ResourceInfo"" nillable=""true"" type=""tns:ResourceInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfResourceInfo"" nillable=""true"" type=""tns:ArrayOfResourceInfo"" /> 
- <xsd:complexType name=""ResourceInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""DisplayName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""EntityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Id"" type=""ser:guid"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ResourceInfo"" nillable=""true"" type=""tns:ResourceInfo"" /> 
- <xsd:complexType name=""ArrayOfErrorInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ErrorInfo"" nillable=""true"" type=""tns:ErrorInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfErrorInfo"" nillable=""true"" type=""tns:ArrayOfErrorInfo"" /> 
- <xsd:complexType name=""ArrayOfArrayOfErrorInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfErrorInfo"" nillable=""true"" type=""tns:ArrayOfErrorInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfErrorInfo"" nillable=""true"" type=""tns:ArrayOfArrayOfErrorInfo"" /> 
- <xsd:complexType name=""MissingComponent"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""DependentComponent"" nillable=""true"" type=""tns:ComponentDetail"" /> 
  <xsd:element minOccurs=""0"" name=""RequiredComponent"" nillable=""true"" type=""tns:ComponentDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""MissingComponent"" nillable=""true"" type=""tns:MissingComponent"" /> 
- <xsd:complexType name=""ArrayOfMissingComponent"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""MissingComponent"" nillable=""true"" type=""tns:MissingComponent"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfMissingComponent"" nillable=""true"" type=""tns:ArrayOfMissingComponent"" /> 
- <xsd:complexType name=""ArrayOfArrayOfMissingComponent"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfMissingComponent"" nillable=""true"" type=""tns:ArrayOfMissingComponent"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfMissingComponent"" nillable=""true"" type=""tns:ArrayOfArrayOfMissingComponent"" /> 
- <xsd:complexType name=""ArrayOfArrayOfObjectiveRelation"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfObjectiveRelation"" nillable=""true"" type=""tns:ArrayOfObjectiveRelation"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfObjectiveRelation"" nillable=""true"" type=""tns:ArrayOfArrayOfObjectiveRelation"" /> 
- <xsd:complexType name=""OrganizationResources"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""CurrentNumberOfActiveUsers"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""CurrentNumberOfCustomEntities"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""CurrentNumberOfNonInteractiveUsers"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""CurrentNumberOfPublishedWorkflows"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""CurrentStorage"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""MaxNumberOfActiveUsers"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""MaxNumberOfCustomEntities"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""MaxNumberOfNonInteractiveUsers"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""MaxNumberOfPublishedWorkflows"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""MaxStorage"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""OrganizationResources"" nillable=""true"" type=""tns:OrganizationResources"" /> 
- <xsd:complexType name=""ArrayOfOrganizationResources"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""OrganizationResources"" nillable=""true"" type=""tns:OrganizationResources"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfOrganizationResources"" nillable=""true"" type=""tns:ArrayOfOrganizationResources"" /> 
- <xsd:complexType name=""ArrayOfArrayOfOrganizationResources"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfOrganizationResources"" nillable=""true"" type=""tns:ArrayOfOrganizationResources"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfOrganizationResources"" nillable=""true"" type=""tns:ArrayOfArrayOfOrganizationResources"" /> 
- <xsd:complexType name=""PrincipalAccess"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AccessMask"" type=""tns:AccessRights"" /> 
  <xsd:element minOccurs=""0"" name=""Principal"" nillable=""true"" type=""q80:EntityReference"" xmlns:q80=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""PrincipalAccess"" nillable=""true"" type=""tns:PrincipalAccess"" /> 
- <xsd:complexType name=""ArrayOfPrincipalAccess"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""PrincipalAccess"" nillable=""true"" type=""tns:PrincipalAccess"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfPrincipalAccess"" nillable=""true"" type=""tns:ArrayOfPrincipalAccess"" /> 
- <xsd:complexType name=""ArrayOfArrayOfPrincipalAccess"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfPrincipalAccess"" nillable=""true"" type=""tns:ArrayOfPrincipalAccess"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfPrincipalAccess"" nillable=""true"" type=""tns:ArrayOfArrayOfPrincipalAccess"" /> 
- <xsd:complexType name=""ArrayOfAccessRights"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""AccessRights"" type=""tns:AccessRights"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfAccessRights"" nillable=""true"" type=""tns:ArrayOfAccessRights"" /> 
- <xsd:complexType name=""ArrayOfArrayOfAccessRights"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfAccessRights"" nillable=""true"" type=""tns:ArrayOfAccessRights"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfAccessRights"" nillable=""true"" type=""tns:ArrayOfArrayOfAccessRights"" /> 
- <xsd:complexType name=""ArrayOfArrayOfProposalParty"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfProposalParty"" nillable=""true"" type=""tns:ArrayOfProposalParty"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfProposalParty"" nillable=""true"" type=""tns:ArrayOfArrayOfProposalParty"" /> 
- <xsd:complexType name=""ArrayOfRelationshipAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""RelationshipAuditDetail"" nillable=""true"" type=""tns:RelationshipAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfRelationshipAuditDetail"" nillable=""true"" type=""tns:ArrayOfRelationshipAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfRelationshipAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfRelationshipAuditDetail"" nillable=""true"" type=""tns:ArrayOfRelationshipAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfRelationshipAuditDetail"" nillable=""true"" type=""tns:ArrayOfArrayOfRelationshipAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfRequiredResource"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfRequiredResource"" nillable=""true"" type=""tns:ArrayOfRequiredResource"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfRequiredResource"" nillable=""true"" type=""tns:ArrayOfArrayOfRequiredResource"" /> 
- <xsd:complexType name=""ArrayOfArrayOfResourceInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfResourceInfo"" nillable=""true"" type=""tns:ArrayOfResourceInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfResourceInfo"" nillable=""true"" type=""tns:ArrayOfArrayOfResourceInfo"" /> 
- <xsd:simpleType name=""RibbonLocationFilters"">
- <xsd:list>
- <xsd:simpleType>
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Form"" /> 
  <xsd:enumeration value=""HomepageGrid"" /> 
  <xsd:enumeration value=""SubGrid"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  </xsd:list>
  </xsd:simpleType>
  <xsd:element name=""RibbonLocationFilters"" nillable=""true"" type=""tns:RibbonLocationFilters"" /> 
- <xsd:complexType name=""ArrayOfRibbonLocationFilters"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""RibbonLocationFilters"" type=""tns:RibbonLocationFilters"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfRibbonLocationFilters"" nillable=""true"" type=""tns:ArrayOfRibbonLocationFilters"" /> 
- <xsd:complexType name=""ArrayOfArrayOfRibbonLocationFilters"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfRibbonLocationFilters"" nillable=""true"" type=""tns:ArrayOfRibbonLocationFilters"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfRibbonLocationFilters"" nillable=""true"" type=""tns:ArrayOfArrayOfRibbonLocationFilters"" /> 
- <xsd:simpleType name=""PrivilegeDepth"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Basic"" /> 
  <xsd:enumeration value=""Local"" /> 
  <xsd:enumeration value=""Deep"" /> 
  <xsd:enumeration value=""Global"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""PrivilegeDepth"" nillable=""true"" type=""tns:PrivilegeDepth"" /> 
- <xsd:complexType name=""ArrayOfPrivilegeDepth"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""PrivilegeDepth"" type=""tns:PrivilegeDepth"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfPrivilegeDepth"" nillable=""true"" type=""tns:ArrayOfPrivilegeDepth"" /> 
- <xsd:complexType name=""ArrayOfArrayOfPrivilegeDepth"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfPrivilegeDepth"" nillable=""true"" type=""tns:ArrayOfPrivilegeDepth"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfPrivilegeDepth"" nillable=""true"" type=""tns:ArrayOfArrayOfPrivilegeDepth"" /> 
- <xsd:complexType name=""RolePrivilege"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""BusinessUnitId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""Depth"" type=""tns:PrivilegeDepth"" /> 
  <xsd:element minOccurs=""0"" name=""PrivilegeId"" type=""ser:guid"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""RolePrivilege"" nillable=""true"" type=""tns:RolePrivilege"" /> 
- <xsd:complexType name=""ArrayOfRolePrivilege"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""RolePrivilege"" nillable=""true"" type=""tns:RolePrivilege"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfRolePrivilege"" nillable=""true"" type=""tns:ArrayOfRolePrivilege"" /> 
- <xsd:complexType name=""ArrayOfArrayOfRolePrivilege"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfRolePrivilege"" nillable=""true"" type=""tns:ArrayOfRolePrivilege"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfRolePrivilege"" nillable=""true"" type=""tns:ArrayOfArrayOfRolePrivilege"" /> 
- <xsd:complexType name=""SearchResults"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Proposals"" nillable=""true"" type=""tns:ArrayOfAppointmentProposal"" /> 
  <xsd:element minOccurs=""0"" name=""TraceInfo"" nillable=""true"" type=""tns:TraceInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""SearchResults"" nillable=""true"" type=""tns:SearchResults"" /> 
- <xsd:complexType name=""TraceInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ErrorInfoList"" nillable=""true"" type=""tns:ArrayOfErrorInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""TraceInfo"" nillable=""true"" type=""tns:TraceInfo"" /> 
- <xsd:complexType name=""ArrayOfSearchResults"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""SearchResults"" nillable=""true"" type=""tns:SearchResults"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfSearchResults"" nillable=""true"" type=""tns:ArrayOfSearchResults"" /> 
- <xsd:complexType name=""ArrayOfArrayOfSearchResults"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfSearchResults"" nillable=""true"" type=""tns:ArrayOfSearchResults"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfSearchResults"" nillable=""true"" type=""tns:ArrayOfArrayOfSearchResults"" /> 
- <xsd:complexType name=""ArrayOfShareAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ShareAuditDetail"" nillable=""true"" type=""tns:ShareAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfShareAuditDetail"" nillable=""true"" type=""tns:ArrayOfShareAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfShareAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfShareAuditDetail"" nillable=""true"" type=""tns:ArrayOfShareAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfShareAuditDetail"" nillable=""true"" type=""tns:ArrayOfArrayOfShareAuditDetail"" /> 
- <xsd:complexType name=""RolePrivilegeAuditDetail"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""InvalidNewPrivileges"" nillable=""true"" type=""q81:ArrayOfguid"" xmlns:q81=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  <xsd:element minOccurs=""0"" name=""NewRolePrivileges"" nillable=""true"" type=""tns:ArrayOfRolePrivilege"" /> 
  <xsd:element minOccurs=""0"" name=""OldRolePrivileges"" nillable=""true"" type=""tns:ArrayOfRolePrivilege"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""RolePrivilegeAuditDetail"" nillable=""true"" type=""tns:RolePrivilegeAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfRolePrivilegeAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""RolePrivilegeAuditDetail"" nillable=""true"" type=""tns:RolePrivilegeAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfRolePrivilegeAuditDetail"" nillable=""true"" type=""tns:ArrayOfRolePrivilegeAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfRolePrivilegeAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfRolePrivilegeAuditDetail"" nillable=""true"" type=""tns:ArrayOfRolePrivilegeAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfRolePrivilegeAuditDetail"" nillable=""true"" type=""tns:ArrayOfArrayOfRolePrivilegeAuditDetail"" /> 
- <xsd:complexType name=""TimeInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ActivityStatusCode"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""CalendarId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""DisplayText"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Effort"" type=""xsd:double"" /> 
  <xsd:element minOccurs=""0"" name=""End"" nillable=""true"" type=""xsd:dateTime"" /> 
  <xsd:element minOccurs=""0"" name=""IsActivity"" type=""xsd:boolean"" /> 
  <xsd:element minOccurs=""0"" name=""SourceId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""SourceTypeCode"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""Start"" nillable=""true"" type=""xsd:dateTime"" /> 
  <xsd:element minOccurs=""0"" name=""SubCode"" type=""tns:SubCode"" /> 
  <xsd:element minOccurs=""0"" name=""TimeCode"" type=""tns:TimeCode"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""TimeInfo"" nillable=""true"" type=""tns:TimeInfo"" /> 
- <xsd:simpleType name=""SubCode"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Unspecified"" /> 
  <xsd:enumeration value=""Schedulable"" /> 
  <xsd:enumeration value=""Committed"" /> 
  <xsd:enumeration value=""Uncommitted"" /> 
  <xsd:enumeration value=""Break"" /> 
  <xsd:enumeration value=""Holiday"" /> 
  <xsd:enumeration value=""Vacation"" /> 
  <xsd:enumeration value=""Appointment"" /> 
  <xsd:enumeration value=""ResourceStartTime"" /> 
  <xsd:enumeration value=""ResourceServiceRestriction"" /> 
  <xsd:enumeration value=""ResourceCapacity"" /> 
  <xsd:enumeration value=""ServiceRestriction"" /> 
  <xsd:enumeration value=""ServiceCost"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""SubCode"" nillable=""true"" type=""tns:SubCode"" /> 
- <xsd:simpleType name=""TimeCode"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""Available"" /> 
  <xsd:enumeration value=""Busy"" /> 
  <xsd:enumeration value=""Unavailable"" /> 
  <xsd:enumeration value=""Filter"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""TimeCode"" nillable=""true"" type=""tns:TimeCode"" /> 
- <xsd:complexType name=""ArrayOfTimeInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""TimeInfo"" nillable=""true"" type=""tns:TimeInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfTimeInfo"" nillable=""true"" type=""tns:ArrayOfTimeInfo"" /> 
- <xsd:complexType name=""ArrayOfArrayOfTimeInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfTimeInfo"" nillable=""true"" type=""tns:ArrayOfTimeInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfTimeInfo"" nillable=""true"" type=""tns:ArrayOfArrayOfTimeInfo"" /> 
- <xsd:complexType name=""ArrayOfTimeCode"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""TimeCode"" type=""tns:TimeCode"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfTimeCode"" nillable=""true"" type=""tns:ArrayOfTimeCode"" /> 
- <xsd:complexType name=""ArrayOfArrayOfTimeCode"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfTimeCode"" nillable=""true"" type=""tns:ArrayOfTimeCode"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfTimeCode"" nillable=""true"" type=""tns:ArrayOfArrayOfTimeCode"" /> 
- <xsd:complexType name=""ArrayOfSubCode"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""SubCode"" type=""tns:SubCode"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfSubCode"" nillable=""true"" type=""tns:ArrayOfSubCode"" /> 
- <xsd:complexType name=""ArrayOfArrayOfSubCode"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfSubCode"" nillable=""true"" type=""tns:ArrayOfSubCode"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfSubCode"" nillable=""true"" type=""tns:ArrayOfArrayOfSubCode"" /> 
- <xsd:complexType name=""ArrayOfTraceInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""TraceInfo"" nillable=""true"" type=""tns:TraceInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfTraceInfo"" nillable=""true"" type=""tns:ArrayOfTraceInfo"" /> 
- <xsd:complexType name=""ArrayOfArrayOfTraceInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfTraceInfo"" nillable=""true"" type=""tns:ArrayOfTraceInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfTraceInfo"" nillable=""true"" type=""tns:ArrayOfArrayOfTraceInfo"" /> 
- <xsd:complexType name=""UserAccessAuditDetail"">
- <xsd:complexContent mixed=""false"">
- <xsd:extension base=""tns:AuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""AccessTime"" type=""xsd:dateTime"" /> 
  <xsd:element minOccurs=""0"" name=""Interval"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:extension>
  </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name=""UserAccessAuditDetail"" nillable=""true"" type=""tns:UserAccessAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfUserAccessAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""UserAccessAuditDetail"" nillable=""true"" type=""tns:UserAccessAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfUserAccessAuditDetail"" nillable=""true"" type=""tns:ArrayOfUserAccessAuditDetail"" /> 
- <xsd:complexType name=""ArrayOfArrayOfUserAccessAuditDetail"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfUserAccessAuditDetail"" nillable=""true"" type=""tns:ArrayOfUserAccessAuditDetail"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfUserAccessAuditDetail"" nillable=""true"" type=""tns:ArrayOfArrayOfUserAccessAuditDetail"" /> 
- <xsd:complexType name=""ValidationResult"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""ActivityId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""TraceInfo"" nillable=""true"" type=""tns:TraceInfo"" /> 
  <xsd:element minOccurs=""0"" name=""ValidationSuccess"" type=""xsd:boolean"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ValidationResult"" nillable=""true"" type=""tns:ValidationResult"" /> 
- <xsd:complexType name=""ArrayOfValidationResult"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ValidationResult"" nillable=""true"" type=""tns:ValidationResult"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfValidationResult"" nillable=""true"" type=""tns:ArrayOfValidationResult"" /> 
- <xsd:complexType name=""ArrayOfArrayOfValidationResult"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfValidationResult"" nillable=""true"" type=""tns:ArrayOfValidationResult"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfValidationResult"" nillable=""true"" type=""tns:ArrayOfArrayOfValidationResult"" /> 
- <xsd:complexType name=""CacheItem"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Data"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Key"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""CacheItem"" nillable=""true"" type=""tns:CacheItem"" /> 
- <xsd:complexType name=""ArrayOfCacheItem"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""CacheItem"" nillable=""true"" type=""tns:CacheItem"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfCacheItem"" nillable=""true"" type=""tns:ArrayOfCacheItem"" /> 
- <xsd:complexType name=""ArrayOfArrayOfCacheItem"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfCacheItem"" nillable=""true"" type=""tns:ArrayOfCacheItem"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfCacheItem"" nillable=""true"" type=""tns:ArrayOfArrayOfCacheItem"" /> 
- <xsd:simpleType name=""FaultType"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""CrmException"" /> 
  <xsd:enumeration value=""ClrException"" /> 
  <xsd:enumeration value=""Assertion"" /> 
  <xsd:enumeration value=""Watson"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""FaultType"" nillable=""true"" type=""tns:FaultType"" /> 
- <xsd:complexType name=""ArrayOfFaultType"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""FaultType"" type=""tns:FaultType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfFaultType"" nillable=""true"" type=""tns:ArrayOfFaultType"" /> 
- <xsd:complexType name=""ArrayOfArrayOfFaultType"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfFaultType"" nillable=""true"" type=""tns:ArrayOfFaultType"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfFaultType"" nillable=""true"" type=""tns:ArrayOfArrayOfFaultType"" /> 
- <xsd:complexType name=""QueryByEntityNameDictionary"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""KeyValuePairOfstringQueryBasegUGIFE1S"" type=""q82:KeyValuePairOfstringQueryBasegUGIFE1S"" xmlns:q82=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""QueryByEntityNameDictionary"" nillable=""true"" type=""tns:QueryByEntityNameDictionary"" /> 
- <xsd:complexType name=""ArrayOfQueryByEntityNameDictionary"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""QueryByEntityNameDictionary"" nillable=""true"" type=""tns:QueryByEntityNameDictionary"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfQueryByEntityNameDictionary"" nillable=""true"" type=""tns:ArrayOfQueryByEntityNameDictionary"" /> 
- <xsd:complexType name=""ArrayOfArrayOfQueryByEntityNameDictionary"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfQueryByEntityNameDictionary"" nillable=""true"" type=""tns:ArrayOfQueryByEntityNameDictionary"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfQueryByEntityNameDictionary"" nillable=""true"" type=""tns:ArrayOfArrayOfQueryByEntityNameDictionary"" /> 
- <xsd:complexType name=""ResetSyncStateInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""EntityIds"" nillable=""true"" type=""q83:ArrayOfguid"" xmlns:q83=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  <xsd:element minOccurs=""0"" name=""ObjectTypeCode"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ResetSyncStateInfo"" nillable=""true"" type=""tns:ResetSyncStateInfo"" /> 
- <xsd:complexType name=""ArrayOfResetSyncStateInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ResetSyncStateInfo"" nillable=""true"" type=""tns:ResetSyncStateInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfResetSyncStateInfo"" nillable=""true"" type=""tns:ArrayOfResetSyncStateInfo"" /> 
- <xsd:complexType name=""ArrayOfArrayOfResetSyncStateInfo"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfResetSyncStateInfo"" nillable=""true"" type=""tns:ArrayOfResetSyncStateInfo"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfResetSyncStateInfo"" nillable=""true"" type=""tns:ArrayOfArrayOfResetSyncStateInfo"" /> 
- <xsd:complexType name=""SdkMessageProcessingStepImageRegistration"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""Attributes"" nillable=""true"" type=""q84:ArrayOfstring"" xmlns:q84=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" /> 
  <xsd:element minOccurs=""0"" name=""EntityAlias"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""ImageType"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""MessagePropertyName"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""SdkMessageProcessingStepImageRegistration"" nillable=""true"" type=""tns:SdkMessageProcessingStepImageRegistration"" /> 
- <xsd:complexType name=""ArrayOfSdkMessageProcessingStepImageRegistration"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""SdkMessageProcessingStepImageRegistration"" nillable=""true"" type=""tns:SdkMessageProcessingStepImageRegistration"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfSdkMessageProcessingStepImageRegistration"" nillable=""true"" type=""tns:ArrayOfSdkMessageProcessingStepImageRegistration"" /> 
- <xsd:complexType name=""ArrayOfArrayOfSdkMessageProcessingStepImageRegistration"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfSdkMessageProcessingStepImageRegistration"" nillable=""true"" type=""tns:ArrayOfSdkMessageProcessingStepImageRegistration"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfSdkMessageProcessingStepImageRegistration"" nillable=""true"" type=""tns:ArrayOfArrayOfSdkMessageProcessingStepImageRegistration"" /> 
- <xsd:complexType name=""SdkMessageProcessingStepRegistration"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""CustomConfiguration"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Description"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""FilteringAttributes"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Images"" nillable=""true"" type=""tns:ArrayOfSdkMessageProcessingStepImageRegistration"" /> 
  <xsd:element minOccurs=""0"" name=""ImpersonatingUserId"" type=""ser:guid"" /> 
  <xsd:element minOccurs=""0"" name=""InvocationSource"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""MessageName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Mode"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""PluginTypeFriendlyName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""PluginTypeName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""PrimaryEntityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""SecondaryEntityName"" nillable=""true"" type=""xsd:string"" /> 
  <xsd:element minOccurs=""0"" name=""Stage"" type=""xsd:int"" /> 
  <xsd:element minOccurs=""0"" name=""SupportedDeployment"" type=""xsd:int"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""SdkMessageProcessingStepRegistration"" nillable=""true"" type=""tns:SdkMessageProcessingStepRegistration"" /> 
- <xsd:complexType name=""ArrayOfSdkMessageProcessingStepRegistration"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""SdkMessageProcessingStepRegistration"" nillable=""true"" type=""tns:SdkMessageProcessingStepRegistration"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfSdkMessageProcessingStepRegistration"" nillable=""true"" type=""tns:ArrayOfSdkMessageProcessingStepRegistration"" /> 
- <xsd:complexType name=""ArrayOfArrayOfSdkMessageProcessingStepRegistration"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfSdkMessageProcessingStepRegistration"" nillable=""true"" type=""tns:ArrayOfSdkMessageProcessingStepRegistration"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfSdkMessageProcessingStepRegistration"" nillable=""true"" type=""tns:ArrayOfArrayOfSdkMessageProcessingStepRegistration"" /> 
- <xsd:simpleType name=""SyncAction"">
- <xsd:restriction base=""xsd:string"">
  <xsd:enumeration value=""None"" /> 
  <xsd:enumeration value=""Insert"" /> 
  <xsd:enumeration value=""Delete"" /> 
  <xsd:enumeration value=""Update"" /> 
  </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name=""SyncAction"" nillable=""true"" type=""tns:SyncAction"" /> 
- <xsd:complexType name=""ArrayOfSyncAction"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""SyncAction"" type=""tns:SyncAction"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfSyncAction"" nillable=""true"" type=""tns:ArrayOfSyncAction"" /> 
- <xsd:complexType name=""ArrayOfArrayOfSyncAction"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" maxOccurs=""unbounded"" name=""ArrayOfSyncAction"" nillable=""true"" type=""tns:ArrayOfSyncAction"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""ArrayOfArrayOfSyncAction"" nillable=""true"" type=""tns:ArrayOfArrayOfSyncAction"" /> 
  </xsd:schema>
  </wsdl:types>
+ <wsdl:message name=""IOrganizationService_Create_InputMessage"">
  <wsdl:part name=""parameters"" element=""tns:Create"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Create_OutputMessage"">
  <wsdl:part name=""parameters"" element=""tns:CreateResponse"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Create_OrganizationServiceFaultFault_FaultMessage"">
  <wsdl:part name=""detail"" element=""q85:OrganizationServiceFault"" xmlns:q85=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Retrieve_InputMessage"">
  <wsdl:part name=""parameters"" element=""tns:Retrieve"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Retrieve_OutputMessage"">
  <wsdl:part name=""parameters"" element=""tns:RetrieveResponse"" /> 
  </wsdl:message>
- <wsdl:message name=""IOrganizationService_Retrieve_OrganizationServiceFaultFault_FaultMessage"">
  <wsdl:part name=""detail"" element=""q86:OrganizationServiceFault"" xmlns:q86=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Update_InputMessage"">
  <wsdl:part name=""parameters"" element=""tns:Update"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Update_OutputMessage"">
  <wsdl:part name=""parameters"" element=""tns:UpdateResponse"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Update_OrganizationServiceFaultFault_FaultMessage"">
  <wsdl:part name=""detail"" element=""q87:OrganizationServiceFault"" xmlns:q87=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Delete_InputMessage"">
  <wsdl:part name=""parameters"" element=""tns:Delete"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Delete_OutputMessage"">
  <wsdl:part name=""parameters"" element=""tns:DeleteResponse"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Delete_OrganizationServiceFaultFault_FaultMessage"">
  <wsdl:part name=""detail"" element=""q88:OrganizationServiceFault"" xmlns:q88=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Execute_InputMessage"">
  <wsdl:part name=""parameters"" element=""tns:Execute"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Execute_OutputMessage"">
  <wsdl:part name=""parameters"" element=""tns:ExecuteResponse"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Execute_OrganizationServiceFaultFault_FaultMessage"">
  <wsdl:part name=""detail"" element=""q89:OrganizationServiceFault"" xmlns:q89=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Associate_InputMessage"">
  <wsdl:part name=""parameters"" element=""tns:Associate"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Associate_OutputMessage"">
  <wsdl:part name=""parameters"" element=""tns:AssociateResponse"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Associate_OrganizationServiceFaultFault_FaultMessage"">
  <wsdl:part name=""detail"" element=""q90:OrganizationServiceFault"" xmlns:q90=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Disassociate_InputMessage"">
  <wsdl:part name=""parameters"" element=""tns:Disassociate"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Disassociate_OutputMessage"">
  <wsdl:part name=""parameters"" element=""tns:DisassociateResponse"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_Disassociate_OrganizationServiceFaultFault_FaultMessage"">
  <wsdl:part name=""detail"" element=""q91:OrganizationServiceFault"" xmlns:q91=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_RetrieveMultiple_InputMessage"">
  <wsdl:part name=""parameters"" element=""tns:RetrieveMultiple"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_RetrieveMultiple_OutputMessage"">
  <wsdl:part name=""parameters"" element=""tns:RetrieveMultipleResponse"" /> 
  </wsdl:message>
+ <wsdl:message name=""IOrganizationService_RetrieveMultiple_OrganizationServiceFaultFault_FaultMessage"">
  <wsdl:part name=""detail"" element=""q92:OrganizationServiceFault"" xmlns:q92=""http://schemas.microsoft.com/xrm/2011/Contracts"" /> 
  </wsdl:message>
+ <wsdl:portType name=""IOrganizationService"">
- <wsdl:operation name=""Create"">
  <wsdl:input wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Create"" message=""tns:IOrganizationService_Create_InputMessage"" /> 
  <wsdl:output wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/CreateResponse"" message=""tns:IOrganizationService_Create_OutputMessage"" /> 
  <wsdl:fault wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/CreateOrganizationServiceFaultFault"" name=""OrganizationServiceFaultFault"" message=""tns:IOrganizationService_Create_OrganizationServiceFaultFault_FaultMessage"" /> 
  </wsdl:operation>
- <wsdl:operation name=""Retrieve"">
  <wsdl:input wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Retrieve"" message=""tns:IOrganizationService_Retrieve_InputMessage"" /> 
  <wsdl:output wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveResponse"" message=""tns:IOrganizationService_Retrieve_OutputMessage"" /> 
  <wsdl:fault wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveOrganizationServiceFaultFault"" name=""OrganizationServiceFaultFault"" message=""tns:IOrganizationService_Retrieve_OrganizationServiceFaultFault_FaultMessage"" /> 
  </wsdl:operation>
- <wsdl:operation name=""Update"">
  <wsdl:input wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Update"" message=""tns:IOrganizationService_Update_InputMessage"" /> 
  <wsdl:output wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/UpdateResponse"" message=""tns:IOrganizationService_Update_OutputMessage"" /> 
  <wsdl:fault wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/UpdateOrganizationServiceFaultFault"" name=""OrganizationServiceFaultFault"" message=""tns:IOrganizationService_Update_OrganizationServiceFaultFault_FaultMessage"" /> 
  </wsdl:operation>
- <wsdl:operation name=""Delete"">
  <wsdl:input wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Delete"" message=""tns:IOrganizationService_Delete_InputMessage"" /> 
  <wsdl:output wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/DeleteResponse"" message=""tns:IOrganizationService_Delete_OutputMessage"" /> 
  <wsdl:fault wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/DeleteOrganizationServiceFaultFault"" name=""OrganizationServiceFaultFault"" message=""tns:IOrganizationService_Delete_OrganizationServiceFaultFault_FaultMessage"" /> 
  </wsdl:operation>
- <wsdl:operation name=""Execute"">
  <wsdl:input wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Execute"" message=""tns:IOrganizationService_Execute_InputMessage"" /> 
  <wsdl:output wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/ExecuteResponse"" message=""tns:IOrganizationService_Execute_OutputMessage"" /> 
  <wsdl:fault wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/ExecuteOrganizationServiceFaultFault"" name=""OrganizationServiceFaultFault"" message=""tns:IOrganizationService_Execute_OrganizationServiceFaultFault_FaultMessage"" /> 
  </wsdl:operation>
- <wsdl:operation name=""Associate"">
  <wsdl:input wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Associate"" message=""tns:IOrganizationService_Associate_InputMessage"" /> 
  <wsdl:output wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/AssociateResponse"" message=""tns:IOrganizationService_Associate_OutputMessage"" /> 
  <wsdl:fault wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/AssociateOrganizationServiceFaultFault"" name=""OrganizationServiceFaultFault"" message=""tns:IOrganizationService_Associate_OrganizationServiceFaultFault_FaultMessage"" /> 
  </wsdl:operation>
- <wsdl:operation name=""Disassociate"">
  <wsdl:input wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Disassociate"" message=""tns:IOrganizationService_Disassociate_InputMessage"" /> 
  <wsdl:output wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/DisassociateResponse"" message=""tns:IOrganizationService_Disassociate_OutputMessage"" /> 
  <wsdl:fault wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/DisassociateOrganizationServiceFaultFault"" name=""OrganizationServiceFaultFault"" message=""tns:IOrganizationService_Disassociate_OrganizationServiceFaultFault_FaultMessage"" /> 
  </wsdl:operation>
- <wsdl:operation name=""RetrieveMultiple"">
  <wsdl:input wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultiple"" message=""tns:IOrganizationService_RetrieveMultiple_InputMessage"" /> 
  <wsdl:output wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultipleResponse"" message=""tns:IOrganizationService_RetrieveMultiple_OutputMessage"" /> 
  <wsdl:fault wsaw:Action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultipleOrganizationServiceFaultFault"" name=""OrganizationServiceFaultFault"" message=""tns:IOrganizationService_RetrieveMultiple_OrganizationServiceFaultFault_FaultMessage"" /> 
  </wsdl:operation>
  </wsdl:portType>
+ <wsdl:binding name=""CustomBinding_IOrganizationService"" type=""tns:IOrganizationService"">
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_policy"" /> 
  <soap12:binding transport=""http://schemas.xmlsoap.org/soap/http"" /> 
- <wsdl:operation name=""Create"">
  <soap12:operation soapAction=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Create"" style=""document"" /> 
- <wsdl:input>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Create_Input_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Create_output_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:output>
- <wsdl:fault name=""OrganizationServiceFaultFault"">
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Create_OrganizationServiceFaultFault_Fault"" /> 
  <soap12:fault name=""OrganizationServiceFaultFault"" use=""literal"" /> 
  </wsdl:fault>
  </wsdl:operation>
- <wsdl:operation name=""Retrieve"">
  <soap12:operation soapAction=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Retrieve"" style=""document"" /> 
- <wsdl:input>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Retrieve_Input_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Retrieve_output_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:output>
- <wsdl:fault name=""OrganizationServiceFaultFault"">
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Retrieve_OrganizationServiceFaultFault_Fault"" /> 
  <soap12:fault name=""OrganizationServiceFaultFault"" use=""literal"" /> 
  </wsdl:fault>
  </wsdl:operation>
- <wsdl:operation name=""Update"">
  <soap12:operation soapAction=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Update"" style=""document"" /> 
- <wsdl:input>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Update_Input_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Update_output_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:output>
- <wsdl:fault name=""OrganizationServiceFaultFault"">
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Update_OrganizationServiceFaultFault_Fault"" /> 
  <soap12:fault name=""OrganizationServiceFaultFault"" use=""literal"" /> 
  </wsdl:fault>
  </wsdl:operation>
- <wsdl:operation name=""Delete"">
  <soap12:operation soapAction=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Delete"" style=""document"" /> 
- <wsdl:input>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Delete_Input_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Delete_output_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:output>
- <wsdl:fault name=""OrganizationServiceFaultFault"">
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Delete_OrganizationServiceFaultFault_Fault"" /> 
  <soap12:fault name=""OrganizationServiceFaultFault"" use=""literal"" /> 
  </wsdl:fault>
  </wsdl:operation>
- <wsdl:operation name=""Execute"">
  <soap12:operation soapAction=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Execute"" style=""document"" /> 
- <wsdl:input>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Execute_Input_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Execute_output_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:output>
- <wsdl:fault name=""OrganizationServiceFaultFault"">
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Execute_OrganizationServiceFaultFault_Fault"" /> 
  <soap12:fault name=""OrganizationServiceFaultFault"" use=""literal"" /> 
  </wsdl:fault>
  </wsdl:operation>
- <wsdl:operation name=""Associate"">
  <soap12:operation soapAction=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Associate"" style=""document"" /> 
- <wsdl:input>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Associate_Input_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Associate_output_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:output>
- <wsdl:fault name=""OrganizationServiceFaultFault"">
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Associate_OrganizationServiceFaultFault_Fault"" /> 
  <soap12:fault name=""OrganizationServiceFaultFault"" use=""literal"" /> 
  </wsdl:fault>
  </wsdl:operation>
- <wsdl:operation name=""Disassociate"">
  <soap12:operation soapAction=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Disassociate"" style=""document"" /> 
- <wsdl:input>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Disassociate_Input_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Disassociate_output_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:output>
- <wsdl:fault name=""OrganizationServiceFaultFault"">
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_Disassociate_OrganizationServiceFaultFault_Fault"" /> 
  <soap12:fault name=""OrganizationServiceFaultFault"" use=""literal"" /> 
  </wsdl:fault>
  </wsdl:operation>
- <wsdl:operation name=""RetrieveMultiple"">
  <soap12:operation soapAction=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultiple"" style=""document"" /> 
- <wsdl:input>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_RetrieveMultiple_Input_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output>
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_RetrieveMultiple_output_policy"" /> 
  <soap12:body use=""literal"" /> 
  </wsdl:output>
- <wsdl:fault name=""OrganizationServiceFaultFault"">
  <wsp:PolicyReference URI=""#CustomBinding_IOrganizationService_RetrieveMultiple_OrganizationServiceFaultFault_Fault"" /> 
  <soap12:fault name=""OrganizationServiceFaultFault"" use=""literal"" /> 
  </wsdl:fault>
  </wsdl:operation>
  </wsdl:binding>
  </wsdl:definitions>
 


Sorry for the large WSDL file.

Jair","16/Jan/13 17:14;coheigea;
I have just merged a potential fix. Could you try with the latest CXF 2.7.3-SNAPSHOT code and let me know if it works? The TransportBindingHandler was not properly handling the case of a SpnegoContextToken, which explains why it works with the SymmetricBinding but not the TransportBinding.

Either wait until the Jenkins build deploys the latest SNAPSHOT with this fix in it or you can checkout the source yourself and build the cxf-rt-ws-security-2.7.3-SNAPSHOT jar.

Colm.","17/Jan/13 12:11;jair;Hi Colm,

I just tried with the SNAPSHOT and it works perfectly =)

You´re the man!

THX

Jair","17/Jan/13 12:16;coheigea;
Thanks for testing the fix...

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't deploy CXF based service/client onto WebLogic12c,CXF-4757,12627793,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,mulderbaba,mulderbaba,16/Jan/13 09:15,17/Jan/13 14:15,14/Mar/19 02:30,17/Jan/13 14:15,2.7.2,,,,,,,,,,,Integration,,,,0,,,,,,,,"while spring context is getting up, I'm getting the exception below.

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'fakeIDRetrieval': Invocation of init method failed; nested exception is javax.xml.ws.WebServiceException: java.lang.RuntimeException: Invalid schema document passed to AbstractDataBinding.addSchemaDocument, not in W3C schema namespace: schema
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:383)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at weblogic.servlet.internal.EventsManager$FireContextListenerAction.run(EventsManager.java:582)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:120)
	at weblogic.servlet.provider.WlsSubjectHandle.run(WlsSubjectHandle.java:57)
	at weblogic.servlet.internal.EventsManager.executeContextListener(EventsManager.java:233)
	at weblogic.servlet.internal.EventsManager.notifyContextCreatedEvent(EventsManager.java:190)
	at weblogic.servlet.internal.EventsManager.notifyContextCreatedEvent(EventsManager.java:175)
	at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:1730)
	at weblogic.servlet.internal.WebAppServletContext.start(WebAppServletContext.java:2740)
	at weblogic.servlet.internal.WebAppModule.startContexts(WebAppModule.java:1704)
	at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:781)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:213)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:208)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:35)
	at weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:70)
	at weblogic.application.internal.flow.ScopedModuleDriver.start(ScopedModuleDriver.java:212)
	at weblogic.application.internal.ExtensibleModuleWrapper.start(ExtensibleModuleWrapper.java:111)
	at weblogic.application.internal.flow.ModuleListenerInvoker.start(ModuleListenerInvoker.java:124)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:213)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:208)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:35)
	at weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:70)
	at weblogic.application.internal.flow.StartModulesFlow.activate(StartModulesFlow.java:24)
	at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:729)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:35)
	at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:258)
	at weblogic.application.internal.SingleModuleDeployment.activate(SingleModuleDeployment.java:48)
	at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:165)
	at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:79)
	at weblogic.deploy.internal.targetserver.BasicDeployment.activate(BasicDeployment.java:192)
	at weblogic.deploy.internal.targetserver.BasicDeployment.activateFromServerLifecycle(BasicDeployment.java:369)
	at weblogic.management.deploy.internal.DeploymentAdapter$1.doActivate(DeploymentAdapter.java:51)
	at weblogic.management.deploy.internal.DeploymentAdapter.activate(DeploymentAdapter.java:200)
	at weblogic.management.deploy.internal.AppTransition$2.transitionApp(AppTransition.java:30)
	at weblogic.management.deploy.internal.ConfiguredDeployments.transitionApps(ConfiguredDeployments.java:261)
	at weblogic.management.deploy.internal.ConfiguredDeployments.transitionApps(ConfiguredDeployments.java:246)
	at weblogic.management.deploy.internal.ConfiguredDeployments.activate(ConfiguredDeployments.java:169)
	at weblogic.management.deploy.internal.ConfiguredDeployments.deploy(ConfiguredDeployments.java:123)
	at weblogic.management.deploy.internal.DeploymentServerService.resume(DeploymentServerService.java:186)
	at weblogic.management.deploy.internal.DeploymentServerService.start(DeploymentServerService.java:94)
	at weblogic.t3.srvr.SubsystemRequest.run(SubsystemRequest.java:64)
	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:256)
	at weblogic.work.ExecuteThread.run(ExecuteThread.java:221)
Caused by: javax.xml.ws.WebServiceException: java.lang.RuntimeException: Invalid schema document passed to AbstractDataBinding.addSchemaDocument, not in W3C schema namespace: schema
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:358)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:248)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1522)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:605)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:926)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:384)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:283)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:112)
	at weblogic.servlet.internal.EventsManager$FireContextListenerAction.run(EventsManager.java:582)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:120)
	at weblogic.servlet.provider.WlsSubjectHandle.run(WlsSubjectHandle.java:57)
	at weblogic.servlet.internal.EventsManager.executeContextListener(EventsManager.java:233)
	at weblogic.servlet.internal.EventsManager.notifyContextCreatedEvent(EventsManager.java:190)
	at weblogic.servlet.internal.EventsManager.notifyContextCreatedEvent(EventsManager.java:176)
	at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:1732)
	at weblogic.servlet.internal.WebAppServletContext.start(WebAppServletContext.java:2741)
	at weblogic.servlet.internal.WebAppModule.startContexts(WebAppModule.java:1704)
	at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:782)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:214)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:208)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:35)
	at weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:70)
	at weblogic.application.internal.flow.ScopedModuleDriver.start(ScopedModuleDriver.java:213)
	at weblogic.application.internal.ExtensibleModuleWrapper.start(ExtensibleModuleWrapper.java:112)
	at weblogic.application.internal.flow.ModuleListenerInvoker.start(ModuleListenerInvoker.java:125)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:214)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:208)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:35)
	at weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:70)
	at weblogic.application.internal.flow.StartModulesFlow.activate(StartModulesFlow.java:25)
	at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:730)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:35)
	at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:258)
	at weblogic.application.internal.SingleModuleDeployment.activate(SingleModuleDeployment.java:48)
	at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:165)
	at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:79)
	at weblogic.deploy.internal.targetserver.BasicDeployment.activate(BasicDeployment.java:192)
	at weblogic.deploy.internal.targetserver.BasicDeployment.activateFromServerLifecycle(BasicDeployment.java:369)
	at weblogic.management.deploy.internal.DeploymentAdapter$1.doActivate(DeploymentAdapter.java:52)
	at weblogic.management.deploy.internal.DeploymentAdapter.activate(DeploymentAdapter.java:200)
	at weblogic.management.deploy.internal.AppTransition$2.transitionApp(AppTransition.java:31)
	at weblogic.management.deploy.internal.ConfiguredDeployments.transitionApps(ConfiguredDeployments.java:261)
	at weblogic.management.deploy.internal.ConfiguredDeployments.transitionApps(ConfiguredDeployments.java:246)
	at weblogic.management.deploy.internal.ConfiguredDeployments.activate(ConfiguredDeployments.java:170)
	at weblogic.management.deploy.internal.ConfiguredDeployments.deploy(ConfiguredDeployments.java:124)
	at weblogic.management.deploy.internal.DeploymentServerService.resume(DeploymentServerService.java:187)
	at weblogic.management.deploy.internal.DeploymentServerService.start(DeploymentServerService.java:95)
	... 3 more
Caused by: java.lang.RuntimeException: Invalid schema document passed to AbstractDataBinding.addSchemaDocument, not in W3C schema namespace: schema
	at org.apache.cxf.databinding.AbstractDataBinding.addSchemaDocument(AbstractDataBinding.java:109)
	at org.apache.cxf.databinding.AbstractDataBinding.addSchemaDocument(AbstractDataBinding.java:95)
	at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:385)
	at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:88)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:476)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:691)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:536)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:250)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:205)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:159)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:211)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:443)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:331)
	... 64 more",Linux bugday 2.6.32-279.14.1.el6.x86_64 #1 SMP Mon Oct 15 13:44:51 EDT 2012 x86_64 x86_64 x86_64 GNU/Linux,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Advanced,,,,,,,,,,,304581,,,Thu Jan 17 14:15:48 UTC 2013,,,,,,0|i17nhz:,252776,,,,,,,,"17/Jan/13 14:15;mulderbaba;adding application package preference into weblogic.xml solved the issue.

<?xml version=""1.0"" encoding=""UTF-8""?>
<wls:weblogic-web-app 
	xmlns:wls=""http://xmlns.oracle.com/weblogic/weblogic-web-app"" 
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
	xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/ejb-jar_3_0.xsd http://xmlns.oracle.com/weblogic/weblogic-web-app http://xmlns.oracle.com/weblogic/weblogic-web-app/1.2/weblogic-web-app.xsd"">
    <wls:container-descriptor>
        <wls:prefer-application-packages>  
	     	<wls:package-name>org.apache.cxf.*</wls:package-name>  
   		</wls:prefer-application-packages>  
    </wls:container-descriptor>
</wls:weblogic-web-app>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StackOverflowError when ASMHelper tries to getClassCode from a parametrized type <E extends Enum>,CXF-4755,12627605,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,15/Jan/13 07:04,28/Feb/13 17:27,14/Mar/19 02:30,15/Jan/13 08:25,2.5.8,2.6.5,2.7.2,,,,,2.6.6,2.7.3,3.0.0-milestone1,,Core,,,,0,,,,,,,,"ASMHelper will throw stack overflow error when starts the server with SEI:

@javax.jws.WebService
public class EnumTest
{
  public <T extends Enum<T>> EnumObject<T> test(EnumObject<T> o)
  {
    return o;
  }
}


public class EnumObject<E extends Enum<E>>
{
  private String name;

  public String getName()
  {
    return name;
  }

  public void setName(String param)
  {
    this.name = param;
  }
}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,304389,,,2013-01-15 07:04:53.0,,,,,,0|i17m73:,252565,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stax outTransform cannot deep-drop an element that has some attributes,CXF-4753,12627474,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,14/Jan/13 18:35,28/Feb/13 17:27,14/Mar/19 02:30,14/Jan/13 19:22,2.5.8,2.6.5,2.7.2,,,,,2.5.9,2.6.6,2.7.3,3.0.0-milestone1,Core,,,,0,,,,,,,,"When trying to remove a specific element and its child elements (i.e., deep-drop) using stax transform feature, it fails to remove the element when there are some attributes present in that element.

This error is indicated by the following exception stack trace:

javax.xml.stream.XMLStreamException: Trying to write an attribute when there is no open start element.
	at com.ctc.wstx.sw.BaseStreamWriter.throwOutputError(BaseStreamWriter.java:1522)
	at com.ctc.wstx.sw.BaseStreamWriter.reportNwfStructure(BaseStreamWriter.java:1551)
	at com.ctc.wstx.sw.BaseNsStreamWriter.writeAttribute(BaseNsStreamWriter.java:226)
	at org.apache.cxf.staxutils.DelegatingXMLStreamWriter.writeAttribute(DelegatingXMLStreamWriter.java:79)
	at org.apache.cxf.staxutils.transform.OutTransformWriter.writeAttribute(OutTransformWriter.java:442)
	at org.apache.cxf.staxutils.StaxUtils.writeStartElement(StaxUtils.java:682)
	at org.apache.cxf.staxutils.StaxUtils.copy(StaxUtils.java:574)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,304258,,,2013-01-14 18:35:28.0,,,,,,0|i17ktj:,252342,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransformOutInterceptor does not transform SoapFaults,CXF-4752,12627469,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,omoser,omoser,14/Jan/13 18:08,28/Feb/13 17:27,14/Mar/19 02:30,25/Jan/13 11:24,2.7.2,,,,,,,2.5.9,2.6.6,2.7.3,3.0.0-milestone1,Core,,,,0,,,,,,,,"The TransformOutInterceptor skips the processing of fault messages by the following lines \\

{code}
// org.apache.cxf.interceptor.transform.TransformOutInterceptor#handleFault
if (null != message.getContent(Exception.class)) {
     return;
}
{code}

Hence, there is no way to apply transformations on SoapFault messages. Suggestion from the mailthread: Either use a boolean flag to toggle the behavior (i.e. boolean skipFaultMessages) or make this explicit by providing a TransformOutFaultInterceptor. 

more information can be found in this mailing list thread:

http://mail-archives.apache.org/mod_mbox/cxf-users/201301.mbox/%3C210917a979980a96b58d7cb87b18c5d7%40omoser.com%3E",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-25 11:24:24.143,,,no_permission,,Unknown,,,,,,,,,,,304253,,,Fri Jan 25 11:24:24 UTC 2013,,,,,,0|i17ksf:,252337,,,,,,,,"25/Jan/13 11:24;ay;added an option skipOnFault to turn on or off the fault transformation.

added also a test case to verify the stax-trans interceptors do not interfere with the logging interceptors (independent of whether the fault transformation is enabled or disabled).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema validation causes false validation error under concurrent load for on outgoing message,CXF-4751,12627444,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,eirbjo,eirbjo,14/Jan/13 15:24,31/Mar/17 19:38,14/Mar/19 02:30,23/Mar/17 18:25,2.6.1,2.7.1,2.7.2,,,,,2.7.18,,,,,,,,0,,,,,,,,"We're observing a small, but noticeable number of requests in our load tests failing with MarshallingErrors caused by schema validation failing when marshalling a JAX-WS annotated response object.

The service is a JAX-WS endpoint with Message.SCHEMA_VALIDATION_ENABLED set to SchemaValidation.SchemaValidationType.OUT (or BOTH).

The error is reproduced in a small JUnit test case. The error could not be reproduced with requests run on a single thread. On two or more threads, the unexpected result is consistently reproducible.

Here is a typical stack trace:
{noformat}
WARNING: Interceptor for {http://www.examples.com/wsdl/HelloService.wsdl}Hello_Service#{http://www.examples.com/wsdl/HelloService.wsdl}sayHello has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Marshalling Error: cvc-complex-type.2.4.b: The content of element 'addresses' is not complete. One of '{""http://www.examples.com/wsdl/HelloService.model"":addressLine}' is expected.
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:258)
	at org.apache.cxf.jaxb.io.DataWriterImpl.write(DataWriterImpl.java:168)
	at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.writeParts(AbstractOutDatabindingInterceptor.java:123)
	at org.apache.cxf.interceptor.BareOutInterceptor.handleMessage(BareOutInterceptor.java:68)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:355)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:319)
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1074)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1010)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:365)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)
	at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:627)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:51)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:680)
Caused by: javax.xml.bind.MarshalException
 - with linked exception:
[org.xml.sax.SAXParseException: cvc-complex-type.2.4.b: The content of element 'addresses' is not complete. One of '{""http://www.examples.com/wsdl/HelloService.model"":addressLine}' is expected.]
	at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:318)
	at com.sun.xml.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:172)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.writeObject(JAXBEncoderDecoder.java:537)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:233)
	... 27 more
Caused by: org.xml.sax.SAXParseException: cvc-complex-type.2.4.b: The content of element 'addresses' is not complete. One of '{""http://www.examples.com/wsdl/HelloService.model"":addressLine}' is expected.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:423)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3188)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.elementLocallyValidComplexType(XMLSchemaValidator.java:3175)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.elementLocallyValidType(XMLSchemaValidator.java:3111)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processElementContent(XMLSchemaValidator.java:3013)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleEndElement(XMLSchemaValidator.java:2156)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.endElement(XMLSchemaValidator.java:824)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHandlerImpl.endElement(ValidatorHandlerImpl.java:565)
	at org.xml.sax.helpers.XMLFilterImpl.endElement(XMLFilterImpl.java:546)
	at com.sun.xml.bind.v2.runtime.output.SAXOutput.endTag(SAXOutput.java:128)
	at com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl.endTag(XmlOutputAbstractImpl.java:120)
	at com.sun.xml.bind.v2.runtime.output.ForkXmlOutput.endTag(ForkXmlOutput.java:87)
	at com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element.endElement(NamespaceContextImpl.java:499)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.endElement(XMLSerializer.java:314)
	at com.sun.xml.bind.v2.runtime.property.ArrayElementProperty.serializeListBody(ArrayElementProperty.java:171)
	at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:155)
	at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:340)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:696)
	at com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty.serializeBody(SingleElementNodeProperty.java:152)
	at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:157)
	at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:189)
	at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeBody(ElementBeanInfoImpl.java:316)
	at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:323)
	at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:72)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:494)
	at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:315)
	... 30 more
{noformat}
",Java 6,,,,,,,,,,,,,,,,,,,15/Jan/13 10:56;eirbjo;cxf-4751-concurrent-marshalling-with-validation-nocxf.zip;https://issues.apache.org/jira/secure/attachment/12564907/cxf-4751-concurrent-marshalling-with-validation-nocxf.zip,14/Jan/13 15:31;eirbjo;cxf-4751-concurrent-marshalling-with-validation.zip;https://issues.apache.org/jira/secure/attachment/12564717/cxf-4751-concurrent-marshalling-with-validation.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-01-17 07:41:31.691,,,no_permission,,Unknown,,,,,,,,,,,304228,,,Thu Mar 23 18:25:46 UTC 2017,,,,,,0|i17k8n:,252248,,,,,,,,"14/Jan/13 15:31;eirbjo;Minimal Maven project with JUnit test demonstrating marshalling errors under concurrent load, but not under serial load","14/Jan/13 16:23;eirbjo;Adding the following dependency made the concurrent test pass on Java 6, update 37:

{noformat}
<dependency>
    <groupId>xerces</groupId>
    <artifactId>xercesImpl</artifactId>
    <version>2.10.0</version>
</dependency>
{noformat}","14/Jan/13 18:34;eirbjo;Test fails with 2.6.2, passes with 2.7.0, so there seems to have been a fix in 2.7.0:

http://xerces.apache.org/xerces2-j/releases.html

2.7.0 seems to include some large changes/rewrites relating to schemas, so this might perhaps not have been an explicit bug fix, but rather an accidental one. The release notes are not clear.","15/Jan/13 10:56;eirbjo;Updated version of test case including a test which reproduces the issue without using CXF at all, just pure Java / JAXB. See SharedSchemaMarshallingTest","17/Jan/13 07:41;ffang;Hi,

If I read it correctly, it's more like a jaxb side issue, no?

Freeman","28/Jan/13 21:13;eirbjo;Freeman,

Yes. I'm assuming a resolution of this issue in CXF will either just document that schema validation using JAXB marshalling on Java 6 is not safe, or detect this being done and log a warning, or a combination of the two.

Java 6 is reaching end of life, so the XML parser will probably never be updated.","29/Jan/13 00:38;pellcorp;Or an upgrade to use 2.10.0 of Xerces.

My company uses 2.9.1 explicit xerces dependency with cxf fine.  I am updating our app to use 2.10.0 out of curiosity to see how much breaks.  

Even though java 6 is EOL, its going to remain in use by lots of customers of cxf for a long time.  Especially as java 5 was only just desupported on cxf, long after java 6 was introduced.
","29/Jan/13 13:19;eirbjo;Jason,

Yes, you can exchange ""Java 6"" in my last comment with ""stock Java6"".

The work-around of adding Xerces 2.7.1 or newer to a Java6 classpath should be documented.",23/Mar/17 18:25;dkulp;Apparently resolved with newer jdk/xerces/etc...,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong return type for enumeration in generated service interface using xmlbeans,CXF-4750,12627412,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rmueller,rmueller,14/Jan/13 11:16,28/Feb/13 17:27,14/Mar/19 02:30,28/Jan/13 18:13,2.3.11,2.7.2,,,,,,2.5.9,2.6.6,2.7.3,,OtherDatabindings,Tooling,,,0,,,,,,,,"I have a WSDL which has an enumeration as the response type for a SOAP operation. From that, I am generating Java classes using the cxf-codegen-plugin with xmlbeans.
The generated service interface has a String as response type. If my implementation returns a String containing one of the specified enum values, I get an Exception (using CXF 2.3.11):
org.apache.cxf.interceptor.Fault
	at org.apache.cxf.databinding.AbstractWrapperHelper.createWrapperObject(AbstractWrapperHelper.java:107)
	at org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor.handleMessage(WrapperClassOutInterceptor.java:105)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:77)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
	at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:102)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:464)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:188)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:751)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)

If I manually change the return type of the generated interface and my implementation from String to ""org.apache.test.ETestResponseType.Enum"", everything works well.

I could only test the wsdl2java generation with a newer CXF version, but 2.7.2 also generates a String as the response type.

I will attach a sample project.",,,,,,,,,,,,,,,,,,,,28/Jan/13 13:02;rmueller;enumtest-2.7.2.zip;https://issues.apache.org/jira/secure/attachment/12566753/enumtest-2.7.2.zip,28/Jan/13 13:02;rmueller;enumtest-2.7.3-SNAPSHOT.zip;https://issues.apache.org/jira/secure/attachment/12566754/enumtest-2.7.3-SNAPSHOT.zip,14/Jan/13 11:17;rmueller;enumtest.zip;https://issues.apache.org/jira/secure/attachment/12564688/enumtest.zip,,,,,3.0,,,,,,,,,,,,,,,,,,,,2013-01-22 18:57:54.423,,,no_permission,,Unknown,,,,,,,,,,,304196,,,Mon Jan 28 18:13:59 UTC 2013,,,,,,0|i17k1j:,252216,,,,,,,,14/Jan/13 11:17;rmueller;Sample project,"18/Jan/13 16:25;rmueller;Thanks for the quick fix! Sadly it also changed the behavior when Enums are used as input parameters, where I get exceptions now. These had a String type previously, which was fine, and also need an Enum now. Here's a stacktrace of 2.5.9-SNAPSHOT:

org.apache.cxf.interceptor.Fault: argument type mismatch while invoking public abstract org.apache.test.MyResponseType org.apache.test.TestServicePortType.testFunction2(org.apache.test.ETestResponseType$Enum) with params [<xml-fragment>ONE</xml-fragment>].
	at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:159)
	at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.createFault(AbstractJAXWSMethodInvoker.java:86)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:133)
	at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:66)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:107)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:122)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:233)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:209)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:189)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:129)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:223)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:143)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:751)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:199)
...
Caused by: java.lang.IllegalArgumentException: argument type mismatch
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:173)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:89)
	... 44 more
","22/Jan/13 18:57;dkulp;We'll likely need to see a full testcase.   The test I added does a complete echo of the enum:

https://fisheye6.atlassian.com/browse/cxf/trunk/systests/databinding/src/test/java/org/apache/cxf/systest/xmlbeans/GreeterImpl.java?r2=1433007&r1=1127624


which works.  Thus, it looks like the incoming enum should work OK based on the testcase.","28/Jan/13 13:02;rmueller;Hi, I created two test projects, one using CXF 2.7.2, the other one using CXF 2.7.3-SNAPSHOT, which I will attach.
You can run them via Maven, first ""mvn clean install"" and then ""mvn jetty:run"". The projects only differ in the CXF version in the pom.xml and in the implementation of the generated service interface.
I use soapUI for generating test requests from the wsdl and for requesting the server. The problematic request is called ""sampleMethod"" and looks like the following:
{code:xml}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:test=""http://test.apache.org/"">
   <soapenv:Header/>
   <soapenv:Body>
      <test:sampleMethod>
         <sampleValue>LEFT</sampleValue>
      </test:sampleMethod>
   </soapenv:Body>
</soapenv:Envelope>
{code}
It works on 2.7.2, but does not on 2.7.3-SNAPSHOT where I get the exception from above. For completeness, I also added the previous testFunction, which works on 2.7.3-SNAPSHOT, but does not on 2.7.2.","28/Jan/13 18:13;dkulp;
OK.  This now works.   If you have a type that extends an enumeration, XmlSchemas doesn't map those to an enumeration.  I've updated the code generator to use the same type mapping in this case.   For example, in the SampleMethodDocument.java, the getSampleValue() call returns an ESample and not an Enum.  Thus, we need to make sure we use that ESample type instead.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STS issues invalid SAML 1.1 Assertions under certain conditions,CXF-4746,12627174,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,11/Jan/13 14:44,02/May/13 02:29,14/Mar/19 02:30,11/Jan/13 15:20,2.5.8,2.6.5,2.7.2,,,,,2.5.9,2.6.6,2.7.3,,Services,,,,0,,,,,,,,"
The STS issues invalid SAML 1.1 Assertions under certain conditions. Namely, if an AttributeStatementProvider (such as the ClaimsAttributeStatementProvider) is explicitly configured on the SAMLTokenProvider, but no AttributeStatement is actually added (for example, if the client doesn't present any claims).

In this case, a SAML 1.1 Assertion can be issued with no Statements, something which is invalid according to the schema.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,303943,,,2013-01-11 14:44:23.0,,,,,,0|i17h13:,251728,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not possible to disable token renewal in STS client,CXF-4742,12626766,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,igorewka,igorewka,09/Jan/13 14:13,28/Feb/13 17:27,14/Mar/19 02:30,16/Jan/13 11:38,2.6.5,2.7.2,,,,,,2.6.6,2.7.3,,,,,,,0,,,,,,,,"There're properties in org.apache.cxf.ws.security.trust.STSClient:
sendRenewing, allowRenewing
Unfortunately they don't prevent the renewal from being issued.

p.s. We have a real usecase where thirdparty use STS service but don't support the renewal

Affected version: 2.7.1",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-09 14:36:20.299,,,no_permission,,Unknown,,,,,,,,,,,303384,,,Wed Jan 16 13:28:01 UTC 2013,,,,,,0|i17auf:,250725,,,,,,,,"09/Jan/13 14:36;coheigea;
I'm not quite sure what the problem is here. The ""sendRenewing"" boolean configuration property on the STSClient disables sending a ""Renewing"" Element in the RequestSecurityToken request. Are you saying this is not working? If so, could you please show an example of your configuration with this property set to ""false""?

Colm.","11/Jan/13 11:01;igorewka;I don't know the STS stuff very well, so I will describe what is happening:

CASE 1: sendRenewing is true
1. some request is done using CXF with STS(before the request, SecurityToken is retrieved via STSClient.requestSecurityToken()). Expiration time for token is 10 min.
2. After 11 min. another request is done(before the request, SecurityToken is renewed via STSClient.renewSecurityToken())

CASE 2: sendRenewing is false - exactly the same result!

CASE 2: sendRenewing is false - expected result:
1. the same stuff
2. After 11 min. another request is done(before the request, SecurityToken is RETRIEVED again instead of renewal)

The following patch is done in order to get expected result:
    public SecurityToken renewSecurityToken(SecurityToken tok) throws Exception {
        if (!sendRenewing) {
            String appliesTo = message.getContextualProperty(Message.ENDPOINT_ADDRESS).toString();
            SecurityToken newToken = requestSecurityToken(appliesTo);

            return newToken;
        }


STSClient is created like this:
        STSClient stsClient = new STSClient(BusFactory.getDefaultBus(false));
        stsClient.setWsdlLocation(wsdlLocation);
        stsClient.setServiceName(""{http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice}SecurityTokenService"");
        stsClient.setEndpointName(""{http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice}WS2007HttpBinding_IWSTrust13Sync2"");
        stsClient.setSecureConv(false);
        stsClient.setRequiresEntropy(true);
        stsClient.setSendRenewing(false);
        stsClient.setAllowRenewing(false);
","14/Jan/13 14:19;coheigea;
Are you using the STSClient to retrieve tokens manually or via the IssuedTokenInterceptorProvider? If the former, then why not just call requestSecurityToken instead of renewSecurityToken if you do not want to support renewal anyway?

Colm.","15/Jan/13 09:02;igorewka;We're using STS embedded into CXF service proxy:
((BindingProvider) service).getRequestContext().put(SecurityConstants.STS_CLIENT, stsClient);

So CXF is managing the STS calls automatically.","16/Jan/13 11:02;coheigea;
I have merged a fix for this. If ""AllowRenewing"" is false on the STSClient then the IssuedTokenInterceptorProvider will issue a new token, rather than renew the existing token, if it has expired.

Colm.","16/Jan/13 13:28;igorewka;Sounds perfect, thank you.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-bundle-jaxrs has a dependency on org.apache.lucene which should be optional,CXF-4737,12626582,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,aaronjwhiteside,aaronjwhiteside,08/Jan/13 17:37,28/Feb/13 17:27,14/Mar/19 02:30,08/Jan/13 18:00,2.7.1,,,,,,,2.7.2,,,,OSGi,,,,0,,,,,,,,"cxf-bundle-jaxrs imports org.apache.lucene which should be marked as optional.

",Glassfish 3.1.2 + Gemini Blueprint 1.0.2 + Spring 3.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-08 18:00:13.687,,,no_permission,,Unknown,,,,,,,,,,,303189,,,Tue Jan 08 18:00:13 UTC 2013,,,,,,0|i178jj:,250352,,,,,,,,"08/Jan/13 18:00;dkulp;
This was fixed in 2.7.2 (released to maven central late last night)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@XmlJavaTypeAdapter ignored on exception setters,CXF-4735,12626560,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,opalka,opalka,08/Jan/13 14:54,28/Feb/13 17:27,14/Mar/19 02:30,18/Jan/13 07:16,,,,,,,,2.5.9,2.6.6,2.7.3,,JAXB Databinding,,,,0,,,,,,,,It works on getters but can be specified on setters as well (see JAXB spec.),,,,,,,,,,,,,,,,,,,,08/Jan/13 14:58;opalka;CXF4735.patch;https://issues.apache.org/jira/secure/attachment/12563757/CXF4735.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-01-15 10:58:07.687,,,no_permission,,Unknown,,,,,,,,,,,303167,,,Fri Jan 18 07:15:12 UTC 2013,,,,,,0|i178en:,250330,,,,,,,,08/Jan/13 14:58;opalka;Proposed patch,"15/Jan/13 10:58;ema;Hi Richard, I looked at the jaxb spc didn't find the related content. Can you point me where the jaxb spec says ?  Should the @XmlJavaTypeAdapter in setter be used in unmarshal phrase, and  @XmlJavaTypeAdapter in getter should be mapped in marshal phrase?
","17/Jan/13 05:02;opalka;With see JAXB spec I meant it works with JAXB without problems.
Apache CXF is de/serializing exceptions on its own and @XmlJavaTypeAdapter
doesn't work if specified on exception setters.","18/Jan/13 07:15;ema;Patch applied. Two lines are added to fix the test case failure : 


    private static boolean isGetter(Method m) {
        if (m.getReturnType() != Void.class && m.getReturnType() != Void.TYPE && m.getParameterTypes().length == 0) {
            Method setter = getSetter(m);
            if (setter != null) {
                return !setter.isAnnotationPresent(XmlTransient.class);
            }
 +           return true;
        }
        return false;
    }


    static XmlJavaTypeAdapter getMethodXJTA(final Method m) {
        XmlJavaTypeAdapter adapter = m.getAnnotation(XmlJavaTypeAdapter.class);
        if (adapter == null) {
            Method setter = getSetter(m);
+           if (setter != null) {
                adapter = setter.getAnnotation(XmlJavaTypeAdapter.class);
            }
        }




",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong port address generated in wsdl when using autoRewriteSoapAddressForAllServices,CXF-4732,12626340,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,asoldano,asoldano,asoldano,07/Jan/13 12:47,28/Feb/13 17:27,14/Mar/19 02:30,25/Jan/13 10:57,2.6.5,2.7.2,,,,,,2.6.6,2.7.3,,,Core,,,,0,,,,,,,,"When using the 'autoRewriteSoapAddressForAllServices' prop to automatically rewrite soap:address for all services in the document returned to wsdl queries, a invalid port value (-1) is used when the requested url uses the default http port (no explicit port in the url).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,302930,,,2013-01-07 12:47:02.0,,,,,,0|i176lz:,250039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unwanted {0} in the NO_SETTER_OR_FIELD_FOR_RESOURCE from cxf-api \org\apache\cxf\common\injection\Messages.properties,CXF-4730,12626167,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,xuhaihong,xuhaihong,05/Jan/13 09:52,28/Feb/13 17:27,14/Mar/19 02:30,06/Jan/13 01:06,2.7.1,,,,,,,2.5.9,2.6.6,2.7.3,,Core,,,,0,,,,,,,,"In the message file \org\apache\cxf\common\injection\Messages.properties, seems that an extra {0} is added for the message of NO_SETTER_OR_FIELD_FOR_RESOURCE


NO_SETTER_OR_FIELD_FOR_RESOURCE=Resource annotation {0} on {0} but no field or setter found.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-06 01:06:29.365,,,no_permission,,Unknown,,,,,,,,,,,302750,,,Sun Jan 06 01:06:29 UTC 2013,,,,,,0|i1754v:,249800,,,,,,,,"06/Jan/13 01:06;ffang;commit fix
http://svn.apache.org/viewvc?rev=1429242&view=rev for trunk
http://svn.apache.org/viewvc?rev=1429244&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1429447&view=rev for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STS KeyIdentifier AttachedReference shouldn't use a URI fragment,CXF-4728,12625831,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,03/Jan/13 11:19,28/Feb/13 17:27,14/Mar/19 02:30,03/Jan/13 12:26,2.5.7,2.6.4,2.7.1,,,,,2.5.8,2.6.5,2.7.2,,Services,,,,0,,,,,,,,"
The KeyIdentifier URI in the RequestedAttachedReference returned by the STS is using a relative URI fragment ('#XYZ'), when it should be using an absolute URI instead.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,302377,,,2013-01-03 11:19:33.0,,,,,,0|i170h3:,249044,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in org.apache.cxf.resource.ExtendedURIResolver,CXF-4727,12625734,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,garydgregory,garydgregory,02/Jan/13 22:07,28/Feb/13 17:27,14/Mar/19 02:30,04/Jan/13 01:37,2.6,,,,,,,2.5.8,2.6.5,2.7.2,,,,,,0,,,,,,,,"I am seeing an NPE that comes up randomly at org.apache.cxf.resource.ExtendedURIResolver.close(ExtendedURIResolver.java:75).

I see the method as:

{code:java}
    public void close() {
        while (!resourceOpened.isEmpty()) {
            try {
                InputStream in = resourceOpened.pop();
                in.close(); 
            } catch (IOException ioe) {
                // move on...
            }
        }
    }
{code}

The NPE is on the line for ""in.close();"".

I have no way of reproducing this, I can just watch our builds fail on rare occasion and our tests do not log the full stack trace.

Since the catch clause does nothing, would it make sense to guard the close call? Like this:


{code:java}
    public void close() {
        while (!resourceOpened.isEmpty()) {
            try {
                InputStream in = resourceOpened.pop();
                if (in != null) {
                  in.close();
                }
            } catch (IOException ioe) {
                // move on...
            }
        }
    }
{code}
","Apache Maven 3.0.4 (r1232337; 2012-01-17 03:44:56-0500)
Maven home: C:\Java\apache-maven-3.0.4\bin\..
Java version: 1.6.0_35, vendor: Sun Microsystems Inc.
Java home: C:\Program Files\Java\jdk1.6.0_35\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows 7"", version: ""6.1"", arch: ""amd64"", family: ""windows""",,,,,,,,,,,,,,,,,,,04/Jan/13 00:38;garydgregory;CXF-4727.diff;https://issues.apache.org/jira/secure/attachment/12563199/CXF-4727.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,302285,,,Fri Jan 04 00:38:30 UTC 2013,,,,,,0|i16zwn:,248952,,,,,,,,04/Jan/13 00:38;garydgregory;Patch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
duplicated message key found,CXF-4725,12625313,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,rwonly,rwonly,27/Dec/12 07:06,28/Feb/13 17:27,14/Mar/19 02:30,27/Dec/12 08:01,2.6.2,,,,,,,2.5.8,2.6.5,2.7.2,,Core,Transports,,,0,,,,,,,,"The messages.properties in 
rt\core\src\main\java\org\apache\cxf\service\factory
rt\transports\http\src\main\java\org\apache\cxf\transport\http

has duplicated message key, please see the patch.",any,,,,,,,,,,,,,,,,,,,27/Dec/12 07:07;rwonly;CXF-4725.patch;https://issues.apache.org/jira/secure/attachment/12562445/CXF-4725.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-12-27 08:01:45.038,,,no_permission,,Unknown,,,,,,,,,,,301855,,,Thu Dec 27 08:01:45 UTC 2012,,,,,,0|i16x07:,248479,,,,,,,,"27/Dec/12 08:01;ffang;apply patch on behalf of Rex Wang with thanks
http://svn.apache.org/viewvc?rev=1426140&view=rev for trunk
http://svn.apache.org/viewvc?rev=1426141&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1426143&view=rev for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stax outTransform may generate duplicate namespace declarations for global attributes,CXF-4723,12625155,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,23/Dec/12 21:15,28/Feb/13 17:27,14/Mar/19 02:30,23/Dec/12 22:49,2.7.1,,,,,,,2.5.8,2.6.5,2.7.2,,Core,,,,0,,,,,,,,"This problem depends on how namespaces are declared for global attributes and when it occurs, the transformed output will contain a duplicate namespace declaration.

Concretely, the outTransform feature transforms the input:
  <soap:Header>
    <Action xmlns=""http://www.w3.org/2005/08/addressing"">http://apache.org/hello_world_soap_http/Greeter/greetMeRequest</Action>
    <customer:CustomerKey xmlns=""http://www.w3.org/2005/08/addressing"" xmlns:customer=""http://example.org/customer"" xmlns:wsa=""http://www.w3.org/2005/08/addressing"" wsa:IsReferenceParameter=""1"">Key#123456789</customer:CustomerKey>

into the non-wellformed output containing a duplicate namespace declaration for wsa:
  <soap:Header>
    <Action xmlns=""http://www.w3.org/2005/08/addressing"">http://apache.org/hello_world_soap_http/Greeter/greetMeRequest</Action>
   <customer:CustomerKey xmlns=""http://www.w3.org/2005/08/addressing"" xmlns:customer=""http://example.org/customer"" xmlns:wsa=""http://www.w3.org/2005/08/addressing"" xmlns:wsa=""http://www.w3.org/2005/08/addressing""  wsa:IsReferenceParameter=""1"">Key#123456789</customer:CustomerKey>

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,301695,,,2012-12-23 21:15:53.0,,,,,,0|i16vpz:,248271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS documentation incorrect about phase of interceptors,CXF-4722,12625094,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,yinzara,yinzara,22/Dec/12 03:21,05/Dec/13 19:09,14/Mar/19 02:30,27/Dec/12 16:16,,,,,,,,,,,,Documentation,,,,0,documentation,interceptors,jax-rs',phase,,,,"On the page:
http://cxf.apache.org/docs/jax-rs-filters.html

In the section:
Difference between JAX-RS filters and CXF interceptors

It notes that the JAXRSInInterceptor is tied to the Phase.PRE_STREAM phase.  However this was changed in revision# 775241 in trunk on the 15th of May, 2009 to the Phase.UNMARSHAL phase with the comment:
JAX-RS : moving JAXRSInInterceptor to Phase.UNMARSHAL, support for relative URIs in ResponseBuilder.location

Which means for all version of JAX-RS v 2.2.2 or higher (2.2.2 was released shortly thereafter), it is in the UNMARSHAL phase and for previous versions, it's in the PRE_STREAM phase. 

The JAXRSOutInterceptor is correctly listed as MARSHAL phase.

This caused me hours of confusion when writing custom interceptors.",,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-27 16:16:12.434,,,no_permission,,Novice,,,,,,,,,,,301630,,,Thu Dec 27 16:16:12 UTC 2012,,,,,,0|i16v47:,248173,,,,,,,,"27/Dec/12 16:16;sergey_beryozkin;Please see
https://cwiki.apache.org/confluence/display/CXF20DOC/JAX-RS+Filters

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binary size is equal with MTOM threshold should not be sent as attachment,CXF-4720,12625018,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,hanhongfang,hanhongfang,21/Dec/12 16:20,28/Feb/13 17:27,14/Mar/19 02:30,21/Dec/12 16:50,2.6.2,2.6.3,,,,,,2.5.8,2.6.5,2.7.2,,JAX-WS Runtime,,,,0,,,,,,,,"Javadoc of javax.xml.ws.soap.MTOM says below.

public abstract int threshold - Property for MTOM threshold value. When MTOM is enabled, binary data above this size in bytes will be XOP encoded or sent as attachment. The value of this property MUST always be >= 0. Default value is 0. 


With this statement, binary data whose size is equal with threshold should not be sent as attachment.",,,,,,,,,,,,,,,,,,,,21/Dec/12 16:22;hanhongfang;CXF-4720.patch;https://issues.apache.org/jira/secure/attachment/12562095/CXF-4720.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,301554,,,Fri Dec 21 16:22:47 UTC 2012,,,,,,0|i16umv:,248095,,,,,,,,"21/Dec/12 16:22;hanhongfang;Patch is attached, please help to review. TIA!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UsernameTokenInterceptor is not caching nonces,CXF-4718,12624969,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,21/Dec/12 10:31,28/Feb/13 17:27,14/Mar/19 02:30,21/Dec/12 11:46,2.5.7,2.6.4,2.7.1,,,,,2.5.8,2.6.5,2.7.2,,WS-* Components,,,,0,,,,,,,,"
The UsernameTokenInterceptor, which is used to send + process WS-Security UsernameTokens using a streaming implementation rather than WSS4J, is not caching nonces, and hence is vulnerable to replay attacks.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,301492,,,2012-12-21 10:31:43.0,,,,,,0|i16u33:,248006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WS-security policies enforcement with CXF server, bad policy selected",CXF-4716,12624844,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,fwi,fwi,20/Dec/12 16:32,28/Feb/13 17:27,14/Mar/19 02:30,21/Dec/12 15:54,2.6.1,2.7.1,,,,,,2.5.8,2.6.5,2.7.2,,WS-* Components,,,,0,,,,,,,,"The problem is related to WS-security policies, only when a service is exposed with CXF in Tomcat :

We have 2 operations :
- getMsgChiffr : the ""chiffr_policy"" security policy is  bound
- getMsg2ChiffrBody : the ""chiffr_body_policy"" security policy is  bound

The input request for these 2 operations is composed of :
- an input message : a string
- a header : two strings

The 2 policies are :
chiffr_body_policy : only the body must be encrypted
chiffr_policy : body+headers must be encrypted


When getMsgChiffr is called, all is fine. CXF checks if ""chiff_policy"" is correctly applied (= body+headers encrypted)

When getMsg2ChiffrBody is called, CXF checks ""chiff_policy"" instead of ""chiffr_body_policy"". The stacktrace is :

2012-12-20 17:16:21,037-DEBUG PolicyBasedWSS4JInInterceptor - Incoming request failed signed-encrypted policy validation
2012-12-20 17:16:21,037-DEBUG WSS4JInInterceptor - WSS4JInInterceptor: exit handleMessage()
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleMessage on interceptor org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor@1c673a9
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleMessage on interceptor org.apache.cxf.jaxb.attachment.JAXBAttachmentSchemaValidationHack@2a6c5e
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleMessage on interceptor org.apache.cxf.interceptor.DocLiteralInInterceptor@46a62
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleMessage on interceptor org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor@1e463a2
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleMessage on interceptor org.apache.cxf.interceptor.OneWayProcessorInterceptor@1173444
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleMessage on interceptor org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor@688800
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleMessage on interceptor org.apache.cxf.jaxws.interceptors.SwAInInterceptor@b07eeb
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleMessage on interceptor org.apache.cxf.jaxws.interceptors.HolderInInterceptor@b8ec86
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleMessage on interceptor org.apache.cxf.ws.policy.PolicyVerificationInInterceptor@1d6f8ae
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.ws.policy.PolicyVerificationInInterceptor@1d6f8ae
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.jaxws.interceptors.HolderInInterceptor@b8ec86
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.jaxws.interceptors.SwAInInterceptor@b07eeb
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor@688800
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.interceptor.OneWayProcessorInterceptor@1173444
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor@1e463a2
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.interceptor.DocLiteralInInterceptor@46a62
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.jaxb.attachment.JAXBAttachmentSchemaValidationHack@2a6c5e
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor@1c673a9
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor@676d73
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor@1d3676a
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.ws.mex.MEXInInterceptor@7e872c
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.binding.soap.interceptor.StartBodyInterceptor@16d81d
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor@7418be
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor@1494fcf
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.binding.soap.saaj.SAAJInInterceptor$SAAJPreInInterceptor@1264f8b
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.frontend.WSDLGetInterceptor@11be2e3
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.interceptor.StaxInInterceptor@1e699b0
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.transport.https.CertConstraintsInterceptor@130ac20
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.interceptor.AttachmentInInterceptor@dc5f15
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.interceptor.LoggingInInterceptor@15ca1bd
2012-12-20 17:16:21,052-DEBUG PhaseInterceptorChain - Invoking handleFault on interceptor org.apache.cxf.ws.policy.PolicyInInterceptor@2c7301
2012-12-20 17:16:21,052-WARN  PhaseInterceptorChain - Interceptor for {http://www.abcdef-hijklmn.fr/interop/POC1/}POC1_service_sec#{http://www.abcdef-hijklmn.fr/interop/POC1/}getMsg2ChiffrBody has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: These policy alternatives can not be satisfied: 
{http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702}EncryptedParts: {http://referentiel.ca.fr/soapHeaderV1} not + ENCRYPTED
{http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702}EncryptedParts
	at org.apache.cxf.ws.policy.AbstractPolicyInterceptor.handleMessage(AbstractPolicyInterceptor.java:47)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:238)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:218)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:198)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:158)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:243)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:163)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:219)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.apache.cxf.ws.policy.PolicyException: These policy alternatives can not be satisfied: 
{http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702}EncryptedParts: {http://referentiel.ca.fr/soapHeaderV1} not + ENCRYPTED
{http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702}EncryptedParts
	at org.apache.cxf.ws.policy.AssertionInfoMap.checkEffectivePolicy(AssertionInfoMap.java:167)
	at org.apache.cxf.ws.policy.PolicyVerificationInInterceptor.handle(PolicyVerificationInInterceptor.java:101)
	at org.apache.cxf.ws.policy.AbstractPolicyInterceptor.handleMessage(AbstractPolicyInterceptor.java:45)
	... 23 more

The behavior seems to depend on some names used in the WSDL definition. The problem disappears when these names are changed, for example : 
- targetNamespace set to http://www.abcdefghijklmn.fr/interop/POC1/ or http://www.c-a.fr/interop/POC1/
- operation getMsgChiffr set to something else


It works fine when CXF runs as a client with the same WSDL. (CXF 2.6.1, CXF 2.7.1)



","JDK 1.7.0_02
Windows 7
Tomcat 6.0.29",,,,,,,,,,,,,,,,,,,20/Dec/12 16:33;fwi;CA_groupHeader_simple.xsd;https://issues.apache.org/jira/secure/attachment/12561919/CA_groupHeader_simple.xsd,20/Dec/12 16:37;fwi;POC1.wsdl;https://issues.apache.org/jira/secure/attachment/12561924/POC1.wsdl,20/Dec/12 16:33;fwi;POC1.xsd;https://issues.apache.org/jira/secure/attachment/12561920/POC1.xsd,20/Dec/12 16:33;fwi;request.txt;https://issues.apache.org/jira/secure/attachment/12561922/request.txt,,,,4.0,,,,,,,,,,,,,,,,,,,,2012-12-21 15:54:28.535,,,no_permission,,Unknown,,,,,,,,,,,301352,,,Fri Dec 21 15:54:28 UTC 2012,,,,,,0|i16rv3:,247646,,,,,,,,20/Dec/12 16:33;fwi;WSDL example+xsd to reproduce the problem + request capture (sent with CXF),"21/Dec/12 15:54;coheigea;
This issue is now fixed, as confirmed by a test-case. The problem was that we were exiting too early from certain policy validation operations.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WS-security encrypted elements with XPath . CXF generates wsu:Id attribute, XSD validation on Metro fails",CXF-4715,12624827,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,fwi,fwi,20/Dec/12 15:18,14/Mar/16 11:31,14/Mar/19 02:30,20/Dec/12 20:18,2.6.1,2.7.1,,,,,,2.5.8,2.6.5,2.7.2,,WS-* Components,,,,0,,,,,,,,"The problem is related to WS-security policies enforcement by a CXF client and the generated message compared to what is expected by a Metro server when XSD validation is turned on.

The following policy is used :
<wsp:Policy wsu:Id=""chiffr_elt_policy"">
		<wsp:ExactlyOne>
			<wsp:All>
				<sp:EncryptedElements
					xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
					<sp:XPath>
						//*[local-name()='inputToEncrypt']					
						</sp:XPath>
				</sp:EncryptedElements>
			</wsp:All>
		</wsp:ExactlyOne>
</wsp:Policy>

CXF client encrypts the element matching the XPath expression, but it seems to add a ""wsu:Id"" attribute that is not allowed by Metro (not allowed by the XSD of ""inputToEncrypt"" element). When the server analyzes the request and tries to validate the message against the XSD, the following error appears :

javax.xml.ws.WebServiceException: org.xml.sax.SAXParseException; cvc-complex-type.3.2.2 : L'attribut 'wsu:Id' n'est pas autorisé dans l'élément 'inputToEncrypt'.
	at com.sun.xml.ws.util.pipe.AbstractSchemaValidationTube.doProcess(AbstractSchemaValidationTube.java:242)
	at com.sun.xml.ws.util.pipe.AbstractSchemaValidationTube.processRequest(AbstractSchemaValidationTube.java:211)
	at com.sun.xml.ws.api.pipe.Fiber.__doRun(Fiber.java:598)
	at com.sun.xml.ws.api.pipe.Fiber._doRun(Fiber.java:557)
	at com.sun.xml.ws.api.pipe.Fiber.doRun(Fiber.java:542)
	at com.sun.xml.ws.api.pipe.Fiber.runSync(Fiber.java:439)
	at com.sun.xml.ws.server.WSEndpointImpl$2.process(WSEndpointImpl.java:243)
	at com.sun.xml.ws.transport.http.HttpAdapter$HttpToolkit.handle(HttpAdapter.java:471)
	at com.sun.xml.ws.transport.http.HttpAdapter.handle(HttpAdapter.java:244)
	at com.sun.xml.ws.transport.http.servlet.ServletAdapter.handle(ServletAdapter.java:135)
	at com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doGet(WSServletDelegate.java:129)
	at com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doPost(WSServletDelegate.java:160)
	at com.sun.xml.ws.transport.http.servlet.WSServlet.doPost(WSServlet.java:75)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.xml.sax.SAXParseException; cvc-complex-type.3.2.2 : L'attribut 'wsu:Id' n'est pas autorisé dans l'élément 'inputToEncrypt'.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:449)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3228)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2705)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2047)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:737)
	at com.sun.org.apache.xerces.internal.jaxp.validation.DOMValidatorHelper.beginNode(DOMValidatorHelper.java:276)
	at com.sun.org.apache.xerces.internal.jaxp.validation.DOMValidatorHelper.validate(DOMValidatorHelper.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.validation.DOMValidatorHelper.validate(DOMValidatorHelper.java:189)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorImpl.validate(ValidatorImpl.java:109)
	at javax.xml.validation.Validator.validate(Validator.java:124)
	at com.sun.xml.ws.util.pipe.AbstractSchemaValidationTube.doProcess(AbstractSchemaValidationTube.java:240)
	... 26 more



The workaround is to delete @SchemaValidation in the service class on Metro server to disable XSD validation.
A Metro client with the same policy does not have this behavior and the XSD validation is fine.





","JDK 1.7.0_02
Windows 7
Tomcat 6.0.29
Metro 1.5 / 2.2 server",,,,,,,,,,,,,,,,,,,20/Dec/12 17:07;fwi;cxf_decrypted_request.txt;https://issues.apache.org/jira/secure/attachment/12561935/cxf_decrypted_request.txt,20/Dec/12 17:07;fwi;cxf_request.txt;https://issues.apache.org/jira/secure/attachment/12561936/cxf_request.txt,21/Dec/12 10:16;fwi;cxf_signed_request.txt;https://issues.apache.org/jira/secure/attachment/12562061/cxf_signed_request.txt,20/Dec/12 17:07;fwi;helloclient.wsdl;https://issues.apache.org/jira/secure/attachment/12561934/helloclient.wsdl,20/Dec/12 17:07;fwi;metro_decrypted_request.txt;https://issues.apache.org/jira/secure/attachment/12561937/metro_decrypted_request.txt,20/Dec/12 17:07;fwi;metro_request.txt;https://issues.apache.org/jira/secure/attachment/12561938/metro_request.txt,21/Dec/12 10:16;fwi;metro_signed_request.txt;https://issues.apache.org/jira/secure/attachment/12562062/metro_signed_request.txt,7.0,,,,,,,,,,,,,,,,,,,,2012-12-20 15:55:12.407,,,no_permission,,Unknown,,,,,,,,,,,301335,,,Mon Mar 14 11:31:14 UTC 2016,,,,,,0|i16rr3:,247628,,,,,,,,"20/Dec/12 15:55;dkulp;
Can you get wire captures of the two messages so we can really see the differences?  Normally with WS-Security, you should be putting the wsu:Id on there so that the element can be referenced in the security header.  I'd like to see how Metro has decided to to reference it.","20/Dec/12 17:06;fwi;I have a simpler example (see attached wsdl, CXF and Metro requests )

The associated stacktrace on the Metro server (2.2) : 

WARNING: Client Request doesn't pass Service's Schema Validation
org.xml.sax.SAXParseException; cvc-type.3.1.1: Element 'in' is a simple type, so it cannot have attributes, excepting those whose namespace name is identical to 'http://www.w3.org/2001/XMLSchema-instance' and whose [local name] is one of 'type', 'nil', 'schemaLocation' or 'noNamespaceSchemaLocation'. However, the attribute, 'wsu:Id' was found.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:449)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3228)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2678)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2047)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:737)
	at com.sun.org.apache.xerces.internal.jaxp.validation.DOMValidatorHelper.beginNode(DOMValidatorHelper.java:276)
	at com.sun.org.apache.xerces.internal.jaxp.validation.DOMValidatorHelper.validate(DOMValidatorHelper.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.validation.DOMValidatorHelper.validate(DOMValidatorHelper.java:189)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorImpl.validate(ValidatorImpl.java:109)
	at javax.xml.validation.Validator.validate(Validator.java:124)
	at com.sun.xml.ws.util.pipe.AbstractSchemaValidationTube.doProcess(AbstractSchemaValidationTube.java:540)
	at com.sun.xml.ws.server.ServerSchemaValidationTube.processRequest(ServerSchemaValidationTube.java:125)
	at com.sun.xml.ws.api.pipe.Fiber.__doRun(Fiber.java:961)
	at com.sun.xml.ws.api.pipe.Fiber._doRun(Fiber.java:910)
	at com.sun.xml.ws.api.pipe.Fiber.doRun(Fiber.java:873)
	at com.sun.xml.ws.api.pipe.Fiber.runSync(Fiber.java:775)
	at com.sun.xml.ws.server.WSEndpointImpl$2.process(WSEndpointImpl.java:386)
	at com.sun.xml.ws.transport.http.HttpAdapter$HttpToolkit.handle(HttpAdapter.java:640)
	at com.sun.xml.ws.transport.http.HttpAdapter.handle(HttpAdapter.java:263)
	at com.sun.xml.ws.transport.http.servlet.ServletAdapter.invokeAsync(ServletAdapter.java:218)
	at com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doGet(WSServletDelegate.java:159)
	at com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doPost(WSServletDelegate.java:194)
	at com.sun.xml.ws.transport.http.servlet.WSServlet.doPost(WSServlet.java:80)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:722)","20/Dec/12 18:05;dkulp;
Can you do one more thing for me as a test with Metro?  If you change the policy from an sp:EncryptedElements to a sp:SignedElements to just sign the elements, does Metro add the wsu:Id as well?   I think it would have to to be able to process the signature, but I'd like to make sure.   Right now in CXF, we have a single method to lookup the element by xpath which we use for both entrypted and signatures and we always add the wsu:Id at that point.   I can add a flag to turn that off for the encrypted case (I think), but I don't think we can for the signatures.  In anycase, I would like to know how Metro would handle the signature case to see if the metro -> metro with schema validation on would fail for that as well.
","20/Dec/12 20:18;dkulp;
Stopped adding the wsu:Id for elements used just for encryption which would resolve this.   However, I'm still interested in knowing how Metro handles the signed elements.  
","20/Dec/12 21:20;ay;There is an interesting old thread at

http://www.java.net/node/670006

I don't know if this issue was intended to be fixed in metro but it wasn't fixed?

I think Metro rejecting wsu:Id doesn't make much sense when using the specs like ws-security that uses wsu.
","21/Dec/12 10:22;fwi;I added metro_signed_request and cxf_signed_request corresponding to the policy with SignedElements. CXF and Metro outputs are similar in that case.

But there is another problem with Metro on the server side :

SEVERE: WSS1338: Error occurred in verifying the signature
Dec 21, 2012 11:08:54 AM com.sun.xml.wss.jaxws.impl.SecurityServerTube processRequest
SEVERE: WSSTUBE0025: Error in Verifying Security in the Inbound Message.
com.sun.xml.wss.XWSSecurityException: java.lang.NullPointerException
	at com.sun.xml.wss.impl.dsig.SignatureProcessor.verify(SignatureProcessor.java:916)
	at com.sun.xml.wss.impl.filter.SignatureFilter.process(SignatureFilter.java:638)
	at com.sun.xml.wss.impl.NewSecurityRecipient.processCurrentHeader(NewSecurityRecipient.java:245)
	at com.sun.xml.wss.impl.NewSecurityRecipient.pProcess(NewSecurityRecipient.java:324)
	at com.sun.xml.wss.impl.NewSecurityRecipient.validateMessage(NewSecurityRecipient.java:143)
	at com.sun.xml.wss.jaxws.impl.SecurityServerTube.verifyInboundMessage(SecurityServerTube.java:678)
	at com.sun.xml.wss.jaxws.impl.SecurityServerTube.processRequest(SecurityServerTube.java:292)
	at com.sun.xml.ws.api.pipe.Fiber.__doRun(Fiber.java:961)
	at com.sun.xml.ws.api.pipe.Fiber._doRun(Fiber.java:910)
	at com.sun.xml.ws.api.pipe.Fiber.doRun(Fiber.java:873)
	at com.sun.xml.ws.api.pipe.Fiber.runSync(Fiber.java:775)
	at com.sun.xml.ws.server.WSEndpointImpl$2.process(WSEndpointImpl.java:386)
	at com.sun.xml.ws.transport.http.HttpAdapter$HttpToolkit.handle(HttpAdapter.java:640)
	at com.sun.xml.ws.transport.http.HttpAdapter.handle(HttpAdapter.java:263)
	at com.sun.xml.ws.transport.http.servlet.ServletAdapter.invokeAsync(ServletAdapter.java:218)
	at com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doGet(WSServletDelegate.java:159)
	at com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doPost(WSServletDelegate.java:194)
	at com.sun.xml.ws.transport.http.servlet.WSServlet.doPost(WSServlet.java:80)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.NullPointerException
	at com.sun.xml.wss.impl.dsig.WSSPolicyConsumerImpl.constructSignaturePolicy(WSSPolicyConsumerImpl.java:400)
	at com.sun.xml.wss.impl.dsig.SignatureProcessor.verify(SignatureProcessor.java:885)
	... 31 more


The policy with SignedElements seems to be well-formed as CXF and Metro clients succeed into generating requests. So it is probably a bug on Metro in that case. ","04/Mar/16 10:33;apurva.shop;This issue seems to be still there when you try to encrypt and/or sign your custom header object. wsu:Id element still present in decrypted custom header. This is not the case with body.
I am currently on 3.1.5 version. ","14/Mar/16 11:31;coheigea;Please log a separate JIRA with a test-case to reproduce the issue.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CopyingOutputStream may loop in some cases ,CXF-4714,12624807,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/Dec/12 12:24,28/Feb/13 17:27,14/Mar/19 02:30,20/Dec/12 12:27,2.7.1,,,,,,,2.7.2,,,,Core,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,301315,,,2012-12-20 12:24:24.0,,,,,,0|i16rmf:,247607,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Method inherited from super interface can not be part of operations in wsdl ,CXF-4713,12624772,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,irisding,irisding,20/Dec/12 06:12,28/Feb/13 17:27,14/Mar/19 02:30,21/Dec/12 15:44,2.6,,,,,,,2.6.5,2.7.2,,,JAX-WS Runtime,,,,0,,,,,,,,"I want to expose some existed class as webservice use below logic:
1. Define the SEI as below:

@javax.jws.WebService
public interface AddNumbersInterface extends IrisSuperInterface{
}

2. Define the implementation as below:
@javax.jws.WebService (serviceName=""AddNumbers"")
public class AddNumbers extends AddNumbersBusiness implements AddNumbersInterface{
}
3. Below the original business logic class:
public class AddNumbersBusiness implements IrisSuperInterface{
        public String addNumbers(int arg0, int arg1) throws AddNumbersException {
                if(arg0 + arg1 <0){
                        throw new AddNumbersException(""Sum is less than 0."");
                }
                return ""Result = "" + String.valueOf(arg0 + arg1);
        }
        public String addNegatives(int arg0, int arg1) throws AddNegativesException {
        // expect 2 negative numbers
                if(arg0>0 || arg1>0){
                        throw new AddNegativesException(""Expected all negative numbers."");
                }
                return ""Result = "" + String.valueOf(arg0 + arg1);
        }
        public String useAnno(int arg0, int arg1) throws AnnoException {      
                if(arg0 + arg1 <0){
                        throw new AnnoException(""userAnno: Sum is less than 0."");
                }
                return ""Result = "" + String.valueOf(arg0 + arg1);
        }

}
4. Below is the original business interface:
public interface IrisSuperInterface {

        public String addNumbers(int arg0, int arg1) throws AddNumbersException;
        public String addNegatives(int arg0, int arg1) throws AddNegativesException;
        public String useAnno(int arg0, int arg1) throws AnnoException;
}

Now if I deploy below ear into server and the generated wsdl is like below:
<wsdl:definitions name=""AddNumbers"" targetNamespace=""xxxxxxxx"">
<wsdl:portType name=""AddNumbersInterface"">
</wsdl:portType>
<wsdl:binding name=""AddNumbersSoapBinding"" type=""tns:AddNumbersInterface""><soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
</wsdl:binding>
<wsdl:service name=""AddNumbers"">
<wsdl:port binding=""tns:AddNumbersSoapBinding"" name=""AddNumbersPort""><soap:address location=""http://xxxxxxxxxx/AddNumbers""/></wsdl:port>
</wsdl:service>
</wsdl:definitions>

The portType part is empty. I have a look into CXF and found :org.apache.cxf.jaxws.support.JaxWsServiceConfiguration.isWebMethod(Method)
will check whether the super interface has @webservice annotation defined. so in our case it fails.

According to :
3.4.1 Inheritance
WSDL 1.1 does not define a standard representation for the inheritance of wsdl:portType elements.
When mapping an SEI that inherits from another interface, the SEI is treated as if all methods of the inherited
interface were defined within the SEI.

we should not check the @webservice annotation in SEI's super interface.
I propsed to add below lines into org.apache.cxf.jaxws.support.JaxWsServiceConfiguration.isWebMethod(Method), do you have any comments for it?


Class<?>  cls = method.getDeclaringClass();
        if (cls.isInterface() && ( cls.isAssignableFrom(implInfo.getImplementorClass()) || cls.isAssignableFrom(implInfo.getSEIClass()))) {
        return Boolean.TRUE;
        }

Thanks a lot!
",,,,,,,,,,,,,,,,,,,,21/Dec/12 01:06;irisding;cxf-4713.patch;https://issues.apache.org/jira/secure/attachment/12562020/cxf-4713.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,301278,,,Fri Dec 21 01:07:40 UTC 2012,,,,,,0|i16r3j:,247522,,,,,,,,"21/Dec/12 01:07;irisding;I have tried the same scenario using RI, the operation part is the same with the patch one.  Without the patch-using the original CXF code, the operation part in porttype is empty.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXBContextInitializer addType stopped handling recursive types (StackOverflow) ,CXF-4711,12624602,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,elferink,elferink,19/Dec/12 10:04,30/Jan/15 12:53,14/Mar/19 02:30,07/Feb/13 16:18,2.7.1,,,,,,,2.7.2,,,,JAXB Databinding,,,,0,CXF,Databinding,JAXB,,,,,"Upgrading from 2.7.0. to 2.7.1 uncovers a stackoverflow in JAXBContextInitializer.addType when using a recursive type definition like
{code}
public static abstract class AddressEntity<T extends AddressEntity<T>> {
	public abstract Addressable<T> getEntity();
}
	
public interface Addressable<T extends AddressEntity<T>>{}
{code}
{code}
java.lang.StackOverflowError
	at java.lang.Class.getDeclaredConstructor(Class.java:2001)
	at org.apache.cxf.common.util.ReflectionUtil$2.run(ReflectionUtil.java:67)
	at org.apache.cxf.common.util.ReflectionUtil$2.run(ReflectionUtil.java:64)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.cxf.common.util.ReflectionUtil.getDeclaredConstructor(ReflectionUtil.java:64)
	at org.apache.cxf.common.jaxb.JAXBUtils.getValidClass(JAXBUtils.java:518)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addClass(JAXBContextInitializer.java:274)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:222)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:225)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:227)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:260)
etc....
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-19 15:02:17.21,,,no_permission,,Unknown,,,,,,,,,,,300425,,,Fri Jan 30 12:52:51 UTC 2015,,,,,,0|i1686n:,244458,,,,,,,,"19/Dec/12 15:02;dkulp;
I haven't been able to reproduce this based on the information above.  I'll need a more thorough test case.  I tried a simple thing like:

{code:java}

    @Test
    public void testResursiveType() throws Exception {
        Set<Class<?>> classes = new HashSet<Class<?>>();
        Collection<Object> typeReferences = new ArrayList<Object>();
        JAXBContextInitializer init = new JAXBContextInitializer(null, classes, typeReferences);
        init.addClass(Type2.class);   //note: made this package protected to be able to call it for the test
        System.out.println(classes);
    }
    
    public interface RecursiveType<T extends RecursiveType<T>> {
        
    }
    
    public static class Type1 implements RecursiveType<Type1> {
    }
    
    public static class Type2 extends Type1 {
    }

{code}

And played around with various implements, extends, interfaces/classes, etc....  and was not able to reproduce. ",19/Dec/12 16:59;elferink;I'm out for the holidays so I will get back to this in the new year.,"07/Feb/13 09:33;elferink;This is a testcase that fails:

{code}
package org.apache.cxf.jaxb;

import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Set;

import org.junit.Test;

public class Cxf4711Tester {

	@Test
	public void testResursiveType() throws Exception {
		Set<Class<?>> classes = new HashSet<Class<?>>();
		Collection<Object> typeReferences = new ArrayList<Object>();
		JAXBContextInitializer init = new JAXBContextInitializer(null, classes, typeReferences);
		Method addClassMethod = JAXBContextInitializer.class.getDeclaredMethod(""addClass"", Class.class);
		addClassMethod.setAccessible(true);
		addClassMethod.invoke(init, Type2.class);
		System.out.println(classes);
	}
	
	public abstract static class Type2 extends AddressEntity<Type2> {
	}
	
	public static abstract class AddressEntity<T extends AddressEntity<T>> {
		public abstract Addressable<T> getEntity();
	}
	
	public interface Addressable<T extends AddressEntity<T>>{}
}
{code}","07/Feb/13 16:18;dkulp;
This was already resolved in 2.7.2.",08/Feb/13 12:30;elferink;I can confirm that 2.7.2 indeed resolves this issue.,"24/Jan/14 15:26;deni_s;Reproduced this bug in latest version of CXF 2.7.8 and 3.0.0-milestone1(as well as in fix version for this bug - 2.7.2). Same situation appears in following case:
{code:title=CxfRecursiveTypeTest.java|borderStyle=solid}
public class CxfRecursiveTypeTest {

    @Test
    public void testRecursiveType() throws Exception {
        Set<Class<?>> classes = new HashSet<Class<?>>();
        Collection<Object> typeReferences = new ArrayList<Object>();
        JAXBContextInitializer jaxbContextInitializer = new JAXBContextInitializer(null, classes, typeReferences);
        Method addClassMethod = JAXBContextInitializer.class.getDeclaredMethod(""addClass"", Class.class);
        addClassMethod.setAccessible(true);
        addClassMethod.invoke(jaxbContextInitializer, Validation.class);
        System.out.println(classes);
    }

    public static class ObjectGraphProcessorItem<T extends ObjectGraphProcessorItem<T>> {

        protected T parentItem;
        protected List<T> childItems = new ArrayList<T>();

        public ObjectGraphProcessorItem(Object object) {
            super();
        }

        public List<T> getChildItems() {
            return childItems;
        }

        public void setChildItems(List<T> childItems) {
            this.childItems = childItems;
        }

        public T getParentItem() {
            return parentItem;
        }

        public void setParentItem(T parentItem) {
            this.parentItem = parentItem;
        }
    }

    public static class Validation extends ObjectGraphProcessorItem<Validation> implements Serializable {

        public Validation() {
            super(null);
        }

        public Validation(Object object) {
            super(object);
        }
    }
}
{code}


{code:title=Stacktrace|borderStyle=solid}
Caused by: java.lang.StackOverflowError
	at java.security.AccessController.doPrivileged(Native Method) [rt.jar:1.7.0_45]
	at org.apache.cxf.common.util.ReflectionUtil.getDeclaredConstructor(ReflectionUtil.java:83) [cxf-api-2.7.8.jar:2.7.8]
	at org.apache.cxf.common.jaxb.JAXBUtils.getValidClass(JAXBUtils.java:516) [cxf-api-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addClass(JAXBContextInitializer.java:280) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:223) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:226) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:263) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:229) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:213) [cxf-rt-databinding-jaxb-2.7.8.jar:2.7.8]
{code}",30/Jan/15 12:52;sohil;Denis Simonov : I face the same issue (that you mentioned above) in  CXF 2.7.7 . How did you get it resolved?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnable to publish service when XmlAdapter has generic parameter,CXF-4708,12624467,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,stiller,stiller,18/Dec/12 13:28,28/Feb/13 17:27,14/Mar/19 02:30,19/Dec/12 19:12,2.7.1,,,,,,,2.5.8,2.6.5,2.7.2,,Core,Tooling,,,0,,,,,,,,"Following exception is thrown when generate WSDL from Java Code. I was able to debug the code and found that problem is that implementation of the XmlAdapter contains generic typed class.

Eg. Following XmlAdapter declaration does not work.
{code}
public class MappedListXmlAdapter<K, V> extends XmlAdapter<JaxbHashMapList<K, V>, MappedList<K, V>> {
{code}
but the declaration without generic works:
{code}
public class MappedListXmlAdapter extends XmlAdapter<JaxbHashMapList, MappedList> {
{code}

Same apply for more complex XmlAdapter. Following throws exception.
{code}
public class EnumWrapperAdapter<T extends Enum<T>> extends XmlAdapter<T, EnumWrapper<T>> {
{code}
After this update it is ok
{code}
public class EnumWrapperAdapter extends XmlAdapter<Enum, EnumWrapper> {
{code}

*This is regression as it works with plugin version 2.5.2*


java.lang.RuntimeException: java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class
        at org.apache.cxf.frontend.AbstractServiceFactory.createService(AbstractServiceFactory.java:80)
        at org.apache.cxf.tools.java2wsdl.processor.JavaToWSDLProcessor.process(JavaToWSDLProcessor.java:101)
        at org.apache.cxf.tools.java2ws.JavaToWSContainer.processWSDL(JavaToWSContainer.java:110)
        at org.apache.cxf.tools.java2ws.JavaToWSContainer.execute(JavaToWSContainer.java:75)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
        at org.apache.cxf.tools.java2ws.JavaToWS.run(JavaToWS.java:77)
        at org.apache.cxf.maven_plugin.Java2WSMojo.processJavaClass(Java2WSMojo.java:357)
        at org.apache.cxf.maven_plugin.Java2WSMojo.execute(Java2WSMojo.java:225)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class
        at org.apache.cxf.jaxb.Utils.getTypeFromXmlAdapter(Utils.java:294)
        at org.apache.cxf.jaxb.JAXBContextInitializer.addClass(JAXBContextInitializer.java:295)
        at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:222)
        at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
        at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:225)
        at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
        at org.apache.cxf.jaxb.JAXBContextInitializer.walkReferences(JAXBContextInitializer.java:337)
        at org.apache.cxf.jaxb.JAXBContextInitializer.addClass(JAXBContextInitializer.java:309)
        at org.apache.cxf.jaxb.JAXBContextInitializer.begin(JAXBContextInitializer.java:173)
        at org.apache.cxf.service.ServiceModelVisitor.visitOperation(ServiceModelVisitor.java:109)
        at org.apache.cxf.service.ServiceModelVisitor.walk(ServiceModelVisitor.java:74)
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:318)
        at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:86)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:474)
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:690)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:536)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:248)
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:205)
        at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
        at org.apache.cxf.frontend.AbstractServiceFactory.createService(AbstractServiceFactory.java:78)
","Maven 3.0.4, cxf-java2ws-plugin 2.7.1",,,,,,,,,,,,,,,,,,,19/Dec/12 16:50;stiller;bug4708.zip;https://issues.apache.org/jira/secure/attachment/12561729/bug4708.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-12-19 15:23:03.523,,,no_permission,,Unknown,,,,,,,,,,,300016,,,Wed Dec 19 16:52:38 UTC 2012,,,,,,0|i165bb:,243993,,,,,,,,"19/Dec/12 09:04;stiller;Problem is not just maven plugin, but also core when publishing the service.

Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'myService': Invocation of init method failed; nested exception is javax.xml.ws.WebServiceException: java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl incompatible with java.lang.Class
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:607)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.apache.cxf.transport.servlet.CXFServlet.createSpringContext(CXFServlet.java:160)
	at org.apache.cxf.transport.servlet.CXFServlet.loadBus(CXFServlet.java:74)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.init(CXFNonSpringServlet.java:71)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.init(ServletWrapper.java:336)
	... 24 more
Caused by: javax.xml.ws.WebServiceException: java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl incompatible with java.lang.Class
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:369)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:251)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:537)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
	at java.lang.reflect.Method.invoke(Method.java:611)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1612)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1483)
	... 37 more
Caused by: java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl incompatible with java.lang.Class
	at org.apache.cxf.jaxb.Utils.getTypeFromXmlAdapter(Utils.java:294)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addClass(JAXBContextInitializer.java:295)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:222)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:225)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:212)
	at org.apache.cxf.jaxb.JAXBContextInitializer.walkReferences(JAXBContextInitializer.java:337)
	at org.apache.cxf.jaxb.JAXBContextInitializer.addClass(JAXBContextInitializer.java:309)
	at org.apache.cxf.jaxb.JAXBContextInitializer.begin(JAXBContextInitializer.java:173)
	at org.apache.cxf.service.ServiceModelVisitor.visitOperation(ServiceModelVisitor.java:109)
	at org.apache.cxf.service.ServiceModelVisitor.walk(ServiceModelVisitor.java:74)
	at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:318)
	at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:86)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:474)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:690)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:536)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:248)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:205)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:159)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:211)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:454)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.j","19/Dec/12 15:23;dkulp;
I need a more complete test case as I cannot reproduce this.   I tried a simple structure like:

{code}
    enum TestEnum {
        VAL1, VAL2
    };
    
    public static class EnumWrapper<T> {
        String wraperValue;
        public EnumWrapper() {
        }
        public EnumWrapper(TestEnum e) {
            wraperValue = e.toString();
        }
        public String getWraperValue() {
            return wraperValue;
        }
        public void setWraperValue(String wraperValue) {
            this.wraperValue = wraperValue;
        }
    }
    public static class EnumWrapperAdapter<T extends Enum<T>> extends XmlAdapter<T, EnumWrapper<T>> {

        public EnumWrapper<T> unmarshal(T v) throws Exception {
            // TODO Auto-generated method stub
            return null;
        }

        public T marshal(EnumWrapper<T> v) throws Exception {
            // TODO Auto-generated method stub
            return null;
        }
    }

    public static class ConcreteEnumWrapperAdapter extends EnumWrapperAdapter<TestEnum> {

        
    }
    
    @WebService
    public static class GenericAdapterService {
        
        @WebMethod
        @XmlJavaTypeAdapter(value = ConcreteEnumWrapperAdapter.class)
        public EnumWrapper<TestEnum> create(String t) {
            return new EnumWrapper<TestEnum>(TestEnum.VAL1);
        }
    }
{code}

but that is working fine.   I definitely need more information.
","19/Dec/12 16:52;stiller;Sorry the EnumWrapperAdapter is not a problem. I found that only the MappedListXmlAdapter cause the problem.

I attach the project that failed to generate WSDL. Just unpack and run: *mvn clean package* and the build fill failed. The stack trace is very same for java2ws tool and when creating service during spring context startup. I can prepare something with spring if you will need it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OasisCatalogManager throws exception with backslash URL reference to jax-ws-catalog.xml,CXF-4707,12624380,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,brennano,brennano,18/Dec/12 00:47,28/Feb/13 17:27,14/Mar/19 02:30,19/Dec/12 19:20,2.5.4,2.5.7,,,,,,2.5.8,2.6.5,2.7.2,,,,,,0,client,"CXF,",dynamic,java,wsdl,,,"Connecting to Windows WCF service using JaxWSDynamicClient and wrapped as a jar with all cxf libraries.  The jar is then called from a test client and the path to the jax-ws-catalog looks fine with correct forward slashes.  However when the test client is called by a 3rd application, the reference to the jar with the jax-ws-catalog.xml file contains backslashes which throws an exception in the OasisCatalogManager.java on line 147 in the loadCatalogs method.

Example url which causes an exception: 
""jar:file:C:\Program Files (x86)\snaplogic\extensions\components\Attunix\DynamicsAXSnap\axclientcxf-1.0.jar!/META-INF/jax-ws-catalog.xml""","Windows 7, 64bit, JDK1.6.11, CXF 2.5.7",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,299219,,,2012-12-18 00:47:23.0,,,,,,0|i160bz:,243186,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.xml.bind.UnmarshalException at server startup,CXF-4706,12624301,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,titleist168,titleist168,17/Dec/12 16:01,28/Feb/13 17:27,14/Mar/19 02:30,17/Dec/12 17:34,2.7.1,,,,,,,2.7.2,,,,Bus,,,,0,,,,,,,,"CXF 2.7.1 keeps broadcasting the following exception message after a service WAR is deployed to Tomcat. This issue even happens to the simplest service returning ""echo message"":

javax.xml.bind.UnmarshalException: unexpected element (uri:""http://schemas.xmlsoap.org/ws/2005/04/discovery"", local:""Probe""). Expected elements are <{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}AppSequence>,<{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}Bye>,<{http://www.w3.org/20
05/08/addressing}EndpointReference>,<{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}Hello>,<{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}MetadataVersion>,<{http://docs.oasis-open.org
/ws-dd/ns/discovery/2009/01}Probe>,<{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}ProbeMatches>,<{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}Resolve>,<{http://docs.oasis-open.org/w
s-dd/ns/discovery/2009/01}ResolveMatches>,<{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}Scopes>,<{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}Security>,<{http://docs.oasis-open.org
/ws-dd/ns/discovery/2009/01}Sig>,<{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}SupportedMatchingRules>,<{http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01}Types>,<{http://docs.oasis-open
.org/ws-dd/ns/discovery/2009/01}XAddrs>",Tomcat 7.0.30 /JDK 1.6.0_26 / Windows 7/Mac OS Mountain Lion,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-17 17:34:23.784,,,no_permission,,Unknown,,,,,,,,,,,299074,,,Mon Dec 17 21:17:45 UTC 2012,,,,,,0|i15yen:,242874,,,,,,,,"17/Dec/12 17:34;dkulp;
Something on the network is probing the services (via WS-Discovery), but using the old old WS-Discovery namespaces instead of the version CXF supports.  I've just updated the CXF code to try mapping those namespaces into the newer versions.   Can you try with tomorrows 2.7.2-SNAPSHOT and see if the error goes away (or a new error is raised)?  That would be a big help.   

As another ""fix"", you can remove the cxf-services-ws-discovery modules from your application and the problem should go away as CXF would no longer support WS-Discovery at all.
","17/Dec/12 21:17;titleist168;Thanks. I knew it was the newly added discovery that's causing the multicast exception message. I removed two discovery jars and everything worked fine. Thanks again,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Class loading problem using CXFNonSpringJaxrsServlet in OSGi environment,CXF-4704,12624251,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jasius9,jasius9,17/Dec/12 10:01,28/Feb/13 17:27,14/Mar/19 02:30,17/Dec/12 17:29,2.6.2,,,,,,,2.6.5,2.7.2,,,JAX-RS,,,,1,,,,,,,,"The JAX-RS proxy classes are not loaded when I try to use CXFNonSpringJaxrsServlet in Apache Felix. I get ClassNotFoundException.

The problem is that currently CXFNonSpringJaxrsServlet.loadClass always uses the ClassLoadUtils.loadClass which tries the following class loaders:
ThreadContextClassloader,
ClassLoader from CXFNonSpringJaxrsServlet,
Classloader from ClassLoaderUtils.

All of them are not compatible with OSGi. It would be good, to set an explicit classloader for the servlet.",Apache Felix,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-17 10:43:45.757,,,no_permission,,Unknown,,,,,,,,,,,299021,,,Mon Dec 17 17:29:26 UTC 2012,,,,,,0|i15y1b:,242814,,,,,,,,"17/Dec/12 10:43;sergey_beryozkin;You probably need to extend it, as done here for example:

http://svn.apache.org/repos/asf/cxf/trunk/distribution/src/main/release/samples/jax_rs/minimal_osgi/src/main/java/minimalosgi/SampleServlet.java

or

use you bundle Activator to register it directly with OSGI HttpService.

> It would be good, to set an explicit classloader for the servlet.

Do you mean adding ""setClassLoader"" setter to it so that the servlet can use this loader instead of delegating to ClassLoaderUtils ?







","17/Dec/12 12:46;jasius9;Yes, I use bundle Activator:

{noformat}
    public void start(BundleContext context) throws Exception {
        ServiceReference sRef = context.getServiceReference(HttpService.class.getName());
        if (sRef != null) {
            HttpService service = (HttpService) context.getService(sRef);
            final Dictionary<String, Object> properties = new Hashtable<String, Object>();
            properties.put(""jaxrs.serviceClasses"", ""com.MyProxyImpl"");
            service.registerServlet(PATH, new CXFNonSpringJaxrsServlet(), properties, null);
        }
    } 
{noformat}

And then I get 
{noformat}
Caused by: java.lang.ClassNotFoundException: com.MyProxyImpl not found by bundle [233]
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:787)
	at org.apache.felix.framework.ModuleImpl.access$400(ModuleImpl.java:71)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1768)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	at org.apache.cxf.common.classloader.ClassLoaderUtils.loadClass2(ClassLoaderUtils.java:271)
	at org.apache.cxf.common.classloader.ClassLoaderUtils.loadClass(ClassLoaderUtils.java:245)
	at org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet.loadClass(CXFNonSpringJaxrsServlet.java:430)
{noformat}

A workaround would be to use a correct class loader:
{noformat}
    public void start(BundleContext context) throws Exception {
        ServiceReference sRef = context.getServiceReference(HttpService.class.getName());
        if (sRef != null) {
            HttpService service = (HttpService) context.getService(sRef);
            final Dictionary<String, Object> properties = new Hashtable<String, Object>();
            properties.put(""jaxrs.serviceClasses"", ""com.MyProxyImpl"");

            // patch TCCL as it is used here
            ClassLoader oldCl = Thread.currentThread().getContextClassLoader();
            Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());
            service.registerServlet(PATH, new CXFNonSpringJaxrsServlet(), properties, null);
            Thread.currentThread().setContextClassLoader(oldCl);
        }
    } 
{noformat}

> Do you mean adding ""setClassLoader"" setter to it so that the servlet can use this loader instead of delegating to ClassLoaderUtils ?
Yes, it would be nice to have such setter.",17/Dec/12 14:03;kwin;The key issue here is that the service class (MyProxyImpl) lives in another bundle than the CXF classes (CXFNonSpringJaxrsServlet and ClassLoaderUtils). Therefore neither of the used classloaders used with the ClassLoaderUtils can instanciate the MyProxyImpl. The workaround with patching the TCCL is really not a nice solution. So having a dedicated setClassLoader in the CXFNonSpringJaxrsServlet would be the best solution here.,"17/Dec/12 17:29;sergey_beryozkin;I've added a class loader property; it is unfortunate servlet parameter values are supposed to be Strings, otherwise loaded instances could've been passed along. Registering JAX-RS Application as OSGI Service would need to be supported too...

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema validation on Weblogic 10.3 fails with AssertionError,CXF-4699,12623698,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mail@johannesrost.de,mail@johannesrost.de,13/Dec/12 10:04,28/Feb/13 17:27,14/Mar/19 02:30,17/Dec/12 18:18,2.6.3,2.6.4,,,,,,2.5.8,2.6.5,2.7.2,,Core,,,,0,,,,,,,,"When activating schema validation webservice calls fail with an AssertionError, because the Weblogic DOM-implementation uses AssertionErrors to mark unimplemented methods instead of Exceptions.

W3CDOMStreamReader ""only"" catches all Exceptions when using Node.getUserData.

From org.apache.cxf.staxutils.W3CDOMStreamReader starting with line 413:
{code:java}

    public Location getLocation() {
        try {
            Object o = getCurrentNode().getUserData(""location"");
            if (o instanceof Location) { 
                return (Location)o;
            }
        } catch (Exception ex) {
            //ignore, probably not DOM level 3
        }
        return super.getLocation();
    }

{code}

Since Weblogic uses an AssertionError, the DOM Level is not correctly detected and the Error is not catched:

{code}
java.lang.AssertionError: UNIMPLEMENTED
	at weblogic.xml.domimpl.NodeImpl.getUserData(NodeImpl.java:488)
	at org.apache.cxf.staxutils.W3CDOMStreamReader.getLocation(W3CDOMStreamReader.java:415)
	at org.apache.cxf.staxutils.DepthXMLStreamReader.getLocation(DepthXMLStreamReader.java:110)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.getCurrentLocation(StAXStreamConnector.java:237)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector$1.getSystemId(StAXConnector.java:100)
	at com.sun.org.apache.xerces.internal.util.SAXLocatorWrapper.getLiteralSystemId(SAXLocatorWrapper.java:63)
	at com.sun.org.apache.xerces.internal.util.SAXLocatorWrapper.getExpandedSystemId(SAXLocatorWrapper.java:73)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2398)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1782)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHandlerImpl.startElement(ValidatorHandlerImpl.java:550)
	at com.sun.xml.bind.v2.runtime.unmarshaller.ValidatingUnmarshaller.startElement(ValidatingUnmarshaller.java:89)
	at com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor.startElement(InterningXmlVisitor.java:71)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleStartElement(StAXStreamConnector.java:275)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:209)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:358)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:337)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.doUnmarshal(JAXBEncoderDecoder.java:769)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.access$100(JAXBEncoderDecoder.java:94)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder$1.run(JAXBEncoderDecoder.java:797)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:795)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:630)
	at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:157)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:203)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:236)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:209)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:189)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:130)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:226)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:146)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
[...]
{code}

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,297427,,,2012-12-13 10:04:52.0,,,,,,0|i14okn:,235446,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebFaultOutInterceptor should use RumtimeException's cause,CXF-4698,12623665,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,andersonmao,andersonmao,13/Dec/12 04:47,28/Nov/17 10:42,14/Mar/19 02:30,04/Apr/17 18:49,2.7.1,,,,,,,3.2.0,,,,JAX-WS Runtime,,,,1,,,,,,,,"WebFaultOutInterceptor.java should use RumtimeException's cause
http://svn.apache.org/repos/asf/cxf/trunk/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/interceptors/WebFaultOutInterceptor.java
---- Revision 1421074, line 86
Throwable cause = f.getCause();
WebFault fault = null;
if (cause != null) {
    fault = getWebFaultAnnotation(cause.getClass());
}
----
When the ""cause"" is instance of RuntimeException. Will get null WebFault.
Should be fixed by use cause's cause.
---- Fix code
WebFault fault = null;
if(cause!=null && cause instanceof RuntimeException && cause.getCause()!=null){
    cause = cause.getCause();
}
if (cause != null) {
    fault = getWebFaultAnnotation(cause.getClass());
}
----


Thanks a lot
Anderson Mao
2012-12-13","apache-cxf-2.7.0
Use JaxWsServerFactoryBean
factory.getOutFaultInterceptors().add(new WebFaultOutInterceptor() );",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-13 18:43:12.973,,,no_permission,,Novice,,,,,,,,,,,297393,,,Tue Apr 04 18:49:09 UTC 2017,,,,,,0|i14od3:,235412,,,,,,,,"13/Dec/12 18:43;dkulp;
This would prevent any subclass of RuntimeException that DOES have a @WebFault annotation on it from being properly mapped.  ","17/Dec/12 07:10;andersonmao;The below code will be better to use cause itself to get WebFault first. And use cause.getCause() as secondary option.
----
        WebFault fault = null;
        if (cause != null) {
            fault = getWebFaultAnnotation(cause.getClass());
            if(fault == null && cause.getCause() !=null){
            	cause = cause.getCause();
            	fault = getWebFaultAnnotation(cause.getClass());
            }
        }","04/Apr/17 18:49;dkulp;Resolved, but only for 3.2 as it's a behavior change.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalArgumentException thrown if I have a MultivaluedMap parameter in multipart/mixed Content Type,CXF-4697,12623649,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,wtam,wtam,13/Dec/12 01:11,28/Feb/13 17:27,14/Mar/19 02:30,13/Dec/12 12:49,,,,,,,,2.5.8,2.6.5,2.7.2,,JAX-RS,,,,0,,,,,,,,"This issue looks like a regression of addressing https://issues.apache.org/jira/browse/CXF-3292. MultipartProvider would create a LinkedHashMap for a MultivaluedMap type parameter.  As a result LinkedHashMap is not assignable to MultivaluedMap (same problem can be expected for any Map that is not assignable from LinkedHashMap) and IllegalArgumentException is thrown.

Please review the attached patch (I believe that the intended fix of CXF-3292) and testcase.",,,,,,,,,,,,,,,,,,,,13/Dec/12 01:18;wtam;CXF-4697.patch;https://issues.apache.org/jira/secure/attachment/12560694/CXF-4697.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-12-13 12:49:50.125,,,no_permission,,Novice,,,,,,,,,,,297375,,,Thu Dec 13 12:49:50 UTC 2012,,,,,,0|i14o93:,235394,,,,,,,,13/Dec/12 01:18;wtam;Patch with test case.,"13/Dec/12 12:49;sergey_beryozkin;William, thanks for the patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
autoRewriteSoapAddressForAllServices does not work for relative enpoint addresses,CXF-4695,12623531,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,12/Dec/12 11:47,28/Feb/13 17:27,14/Mar/19 02:30,14/Dec/12 09:00,2.6.4,2.7.1,,,,,,2.6.5,2.7.2,,,Simple Frontend,,,,0,,,,,,,,"This is a followup to the patch Bin Zhu attached to CXF-4677, see http://cxf.547215.n5.nabble.com/service-location-in-WSDL-generated-by-CXF-td5719173.html .
Basically, the autoRewriteSoapAddressForAllServices option added in CXF-4677 only works for absolute endpoint addresses.",,,,,,,,,,,,,,,,,,,,12/Dec/12 11:48;asoldano;cxf-4695.txt;https://issues.apache.org/jira/secure/attachment/12560548/cxf-4695.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-12-14 03:08:07.278,,,no_permission,,Unknown,,,,,,,,,,,297240,,,Fri Dec 14 03:08:07 UTC 2012,,,,,,0|i14nav:,235240,,,,,,,,"14/Dec/12 03:08;zhubinbj;Hi Alessio,
I tested this patch and it works in my scenario. Thanks :-)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM is not returning a correct soap fault message to the client,CXF-4694,12623528,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,12/Dec/12 11:41,28/Feb/13 17:27,14/Mar/19 02:30,12/Dec/12 18:16,2.7.1,,,,,,,2.5.8,2.6.5,2.7.2,,WS-* Components,,,,0,,,,,,,,"There are two issues in the current exception handling of WS-RM.

1. When the exception is constructed, it sets the subCode attribute even for the SOAP 1.1 binding
2. The exception is simply thrown in the inbound chain and the fault message is not returned to the caller if the call is oneway.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,297237,,,2012-12-12 11:41:24.0,,,,,,0|i14na7:,235237,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stax's inTransform feature does not work with a generic provider's Source based service,CXF-4690,12623144,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,10/Dec/12 13:50,28/Feb/13 17:27,14/Mar/19 02:30,12/Dec/12 18:15,2.7,,,,,,,2.5.8,2.6.5,2.7.2,,Core,,,,0,,,,,,,,"When stax's inTransform feature is used for a provider's Source based service, the call may fail with the following exception:

Caused by: java.lang.NullPointerException
	at org.apache.cxf.databinding.source.XMLStreamDataReader$2.close(XMLStreamDataReader.java:206)
...


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,296739,,,2012-12-10 13:50:08.0,,,,,,0|i14gzz:,234217,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stax outTransform feature may fail to remove the default namespace from an element,CXF-4689,12623130,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,10/Dec/12 12:02,28/Feb/13 17:27,14/Mar/19 02:30,12/Dec/12 15:31,2.7,,,,,,,2.5.8,2.6.5,2.7.2,,Core,,,,0,,,,,,,,"The stax outTransform feature may fail to remove the default namespace from an element.

For example, if you have an input message:

    <greetMe xmlns=""http://cxf.apache.org/hello_world_soap_http/types2"">
      <requestType>Tanya</requestType>
    </greetMe>

and when you set outTransformElements with entry
<entry key=""{http://cxf.apache.org/hello_world_soap_http/types2}requestType"" value=""requestType"">

The outTranform feature fails to remove the namespace from requestType.

The correct behavior would be to produce the output message:
    <greetMe xmlns=""http://cxf.apache.org/hello_world_soap_http/types2"">
      <requestType xmlns="""">Tanya</requestType>
    </greetMe>

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,296725,,,2012-12-10 12:02:39.0,,,,,,0|i14gwv:,234203,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-codegen-plugin breaks mvn deploy when proxy exists,CXF-4687,12623035,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,hathawa,hathawa,09/Dec/12 00:43,28/Feb/13 17:27,14/Mar/19 02:30,14/Dec/12 05:48,2.7,,,,,,,2.5.8,2.6.5,2.7.2,,Tooling,,,,0,,,,,,,,"After using the cxf-codegen-plugin, the maven-deploy-plugin fails to execute the deploy goal with the message: ""Failed to deploy artifacts: Could not find artifact...."". This only happens when the maven settings file contains a proxy. If I remove the proxy everything is fine. Note, the proxy entry also contains a list of nonProxyHosts.  I suspect this may be the cause since AbstractCodegenMoho does a configureProxyServerSettings without setting the nonProxyHosts.",Windows XP; Maven 3.0.3,,,,,,,,,,,,,CXF-3547,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-10 21:33:10.763,,,no_permission,,Unknown,,,,,,,,,,,296626,,,Mon Dec 10 22:02:28 UTC 2012,,,,,,0|i14aqv:,233204,,,,,,,,"10/Dec/12 21:33;gmazza;It may be good to provide a simple, minimal pom.xml and a settings.xml snippet that illustrates the problem.  Please don't post anything sensitive (i.e., make everything fictional.)
","10/Dec/12 22:02;dkulp;
Well, looking at that code in AbstractCodegenMoho, I'm not sure WHAT it is doing.   The system properties that CXF (and the HTTPUrlCOnnection object and other code) would be looking for would be ""http.proxyHost"" and ""http.proxyPort"", not just ""proxyHost"".    

That said, any system property that we set in there should definitely be reset back.   The plugins certainly should be cleaning up after they are done.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAPFault message improvement in CXF when there is unchecked NPE,CXF-4684,12622881,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,zhubinbj,zhubinbj,07/Dec/12 09:29,28/Feb/13 17:27,14/Mar/19 02:30,23/Dec/12 22:47,2.6.2,,,,,,,2.5.8,2.6.5,2.7.2,,WS-* Components,,,,0,,,,,,,,"When there is unchecked NPE thrown, the SOAPFault in CXF will only throw the ""Fault occurred while processing."" message rather than the original NPE message.

Analysis:
1. In org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor and org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor,
It will check fault.getMessage() :
                if (fault.getMessage() != null) {
                    if (message.get(""forced.faultstring"") != null) {
                        writer.writeCharacters((String) message.get(""forced.faultstring""));
                    } else {
                        writer.writeCharacters(fault.getMessage());
                    }

                } else {
                    writer.writeCharacters(""Fault occurred while processing."");
                }
But for NPE, the fault.getMessage() will return null instead of the ""java.lang.NullPointerException"" in the getMessage() in NPE.

2. 
Fault.getMessage will return null in the NPE scenario while it's super class Throwable will not.
When there is NPE, the message attribute in Fault is null while the detailMessageAtrribute is ""java.lang.NullPointerException"".
Details:
SoapFault->Fault->UncheckedException->RuntimeException->Exception->Throwable. //  SoapFault->Fault means SoapFault class extends Fault class
UncheckedException.getMessage:
    public String getMessage() {
        if (null != message) {
            return message.toString();
        }
        return null;
    }
Throwable.getMessage:
public String getMessage() {
	return detailMessage;
}



",,,,,,,,,,,,,,,,,,,,13/Dec/12 05:45;zhubinbj;CXF-4684.patch;https://issues.apache.org/jira/secure/attachment/12560720/CXF-4684.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-12-12 22:15:48.62,,,no_permission,,Unknown,,,,,,,,,,,296458,,,Tue Dec 25 01:26:21 UTC 2012,,,,,,0|i149jb:,233008,,,,,,,,"12/Dec/12 22:15;ay;I was not sure if the jaxws spec section 10.2.2 was implying this faultstring rule of ex.toString() to be used only for unexpected service endpoints excetptions or also for handlers exceptions.

http://mail-archives.apache.org/mod_mbox/cxf-dev/201212.mbox/%3CCAF8t5XtpOovD10k-nVGy%2BGbPH1kzVRhn%3D0qnFXdCs1EhrKKbbQ%40mail.gmail.com%3E

I didn't get a definitive answer to it.

I checked what RI 2.2 is doing and it uses toString() for handler exceptions as well.

So we can resolve this issue by making CXF follow the same rule.


","13/Dec/12 05:47;zhubinbj;Thanks Aki for the investigation.
My assumption is that we can fix the issue in UncheckedException.java.
I attached the patch and can you help review it? ","13/Dec/12 10:47;ay;Hi Bin,
Thanks for spotting this issue and providing a patch.

But I don't think your change in UncheckedException will work if it calls its super's getMessage() because that is null. You wanted to call toString(), no? However, that will also not work, as this getMessage method is overwritten by its extended class like CXF's Fault. Besides, UncheckedException is too deep in the layer (almost like java.lang.RuntimeException) and we shouldn't be touching it to just comply to a rule given for a higher layer like jaxws. 

The change should go into either CXF's Fault itself or where the soap fault is serialized. I had an impression that changing the soap fault serialization part is simpler than changing Fault itself when I commented on this issue sometime ago at users@cxf. I will look at it again today.

regards, aki
","14/Dec/12 15:20;ay;Hi Bin,
I submitted the correction in trunk (2.7.2-SNAPSHOT) and 2.6.x (2.6.5-SNAPSHOT).
Could you try it out to see if it works for your case?
Thanks.
Regards, Aki","16/Dec/12 02:56;zhubinbj;Hi Aki,
I tested the code you submitted and it works in my scenario. Thanks.","16/Dec/12 04:10;gmazza;Wait a second...we're not returning server-side error specifics to the SOAP client are we?  That would be a security bug, allowing hackers to see the internal implementation of the web service provider.  For unexpected internal errors like NPE's, database failures, etc. SOAP clients should be getting a generic ""Fault occurred while processing"" while the server-side log should detail what the specific problem is.","17/Dec/12 09:48;ay;Hi Glen,
Yes. This touches exactly that security point. There was a discussion thread started by Bin.

http://cxf.547215.n5.nabble.com/SOAPFault-message-improvement-in-CXF-when-there-is-unchecked-NPE-tc5719398.html#a5719568

Initially I suggested for the exceptionCauseEnabled property. However, this property only wrote the cause message but not the cause itself (e.g. NPE). In addition, Ivan pointed us to the jaxws spec section 10.2.2 that specifies that the faultstring must come from the cause.toString() in some cases.

So, I asked at dev@cxf asking the interpretation of this rule.
http://cxf.547215.n5.nabble.com/interpretation-of-jaxws-10-2-2-exception-handling-tc5719946.html#a5720008

The rest is stated in my comment from Dec 12 above.

Personally, I think the jaxws spec could have left this toString rule out of its normative part. I am not really concerned about just writing the class name like NPE. But I am more concerned about some unknown user extended runtime exception that overwrites its toString to do more than writing its class name. 

However, this rule is there, so we need to comply to it right? Or supposing the jaxws 10.2.2 itself is a security issue, should we only enable this rule with an option? That was the point of my original question in dev@cxf. Any definitive answers will be appreciated.

Thanks.
regards, aki
","17/Dec/12 14:08;gmazza;Hi Aki, sorry I hadn't gotten to your dev list message, and my knowledge in this area is incomplete.  The fact that the original submitter of this bug wrote ""The SOAPFault in CXF will only throw the 'Fault occurred while processing.' message rather than the original NPE message."" shows he doesn't understand the Pen-testing 101 rule *not* to pass service-side exception bug details back to the client.  He didn't mention anything about the JAX-WS specification, so that wasn't his motivation.

Why is his motivation important?  Right now, he apparently feels that if you have a database space error, somehow the SOAP client should receive a message like ""Wizard RDMBS error: Table AdminAccountName.MY_STUFF on server camel07 is full, please expand more space for it.""  That's a training issue, and once he understands that's a no-no, I suspect he would be likely going to request a return to 'Fault occurred while processing' again, rather than defend the new implementation based on the apparent rule in JAX-WS 10.2.2.  Very few people indeed truly want service-side error messages propagated back to the client (incidentally, NPEs are embarrassing for all concerned and developers don't like it when their web service stacks embarrass them to their customers in such a manner.)

Further, ""NullPointerException"" is a Java-language construct, while SOAP is language-independent.  There shouldn't be any need to return Java-language constructs to the client, as that would incorrectly imply the SOAP client base may base logic on the fact that the SOAP service is implemented in Java.

I'm confused a little about your statement: ""But I am more concerned about some unknown user extended runtime exception that overwrites its toString to do more than writing its class name.""  Does this new change *facilitate* that (they can override toString() now?) or *hinder* that (now if they tried to overwrite it, the client will still get an ""NPE"" message)?  If the latter, perhaps this change does more good than harm, but if the former, I would say CXF should tighten up and not allow this, to protect systems against sloppier developers putting too much info in their error messages back to the client.

Anyway, CXF has several masters--the WSDL, JAX-WS, JAX-RS and WS-I Basic Profile (and Basic Security Profile) specs--and as you know, we can't serve more than one perfectly.  I believe CXF has already tightened itself up in a few places w.r.t. the WS-I profiles, becoming invalid as a consequence with the more-easygoing WSDL and JAX-WS specs, both of which allow more than what WS-I does.  This would appear to be something where going the safer route rather than strict compliance with any specific JAX-WS rule would appear justified.  I don't think this change is vetoable but my instinct would be to revert it, because I think its going to happen anyway (someone several months down the road will complain about CXF improperly sending internal error messages to the client) but if you wait several months to revert you may have to deal with backwards compatibility issues of many SOAP clients now incorrectly basing logic based on specific Java class exceptions being returned from the web service provider.","17/Dec/12 17:32;ay;Hi Glen,
I agree with you that there is no point in setting the faultstring with e.toString() except under some debugging purpose and the jaxws spec shouldn't have included this rule. I expressed my concern which you quoted ""But I am more ..."". The change does not facilitate nor hinder overriding of the exception. It simply applies this faulstring rule that can lead to not only those internal exception message being exposed as you mentioned but also to some unknown consequences depending on how the toString of the relevant runtime exception is implemented. 

So, I am perfectly fine with optionally enabling this rule using a configuration property. In fact, if there is a vote to take, I choose for this option. Maybe we could reuse the enableCause thing to align its behavior with this jaxws rule under some condition. The current behavior of enableCause thing is not practical in some situations (e.g. when cause.getMessage() is null).

I'll look at it again to see what we can do.
regards, aki","17/Dec/12 21:08;gmazza;Thanks.  A configuration property seems like a very workable idea; if you go that route you might wish to default it to what it was before this patch was applied, lest we wait and end up needing to default it to the less-secure option out of concern for backwards compatibility.  Also, by keeping ""Fault occurred while processing"" as the default we can get people wanting something else to show up on the mailing list, where we can (1) inform them of this new property and (2) make sure they are in fact aware that they shouldn't be sending sensitive internal error messages back to the client (if that is, in fact, their intention.)","21/Dec/12 21:28;ay;Hi Bin,
As you probably followed the discussion above, I modified the previous change so that you can still configure CXF to construct the faulstring using cause.toString() for no-message runtime exception without the message but keep us all on the safer side from the security perspective.

In short, to enable this configuration, you can set the endpoint property exceptionMessageCauseEnabled as described in 

http://cxf.apache.org/docs/debugging-and-logging.html#DebuggingandLogging-Stacktraceinfaultdetails

Programmatically, you can use the following constant from Message, as in

   ep.getProperties().put(org.apache.cxf.message.Message.EXCEPTION_MESSAGE_CAUSE_ENABLED, ""true"")

I hope you are satisfied with solution.

Thanks.
regards, aki

","21/Dec/12 21:55;gmazza;Thanks for all your attention to this, Aki.  Yoku dekimashita!  :)","25/Dec/12 01:26;zhubinbj;Hi Aki,
Sorry for the late response. The final changes looks fine for me. Many thanks to all of you.",,,,,,,,,,,,,,,,,,,,,,,
workqueue configuration in BP does not derive the id attribute from the name attribute,CXF-4683,12619010,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,06/Dec/12 08:37,19/Dec/12 14:38,14/Mar/19 02:30,06/Dec/12 08:50,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,Core,,,,0,,,,,,,,"The id attribute is not derived from the name attribute correctly, which leads to the exception:

java.lang.IllegalArgumentException: Component must have a valid id
        at org.apache.aries.blueprint.namespace.ComponentDefinitionRegistryImpl.registerComponentDefinition(ComponentDefinitionRegistryImpl.java:81)
        at org.apache.aries.blueprint.container.Parser.loadComponents(Parser.java:342)
        at org.apache.aries.blueprint.container.Parser.populate(Parser.java:277)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:283)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:230)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,296299,,,2012-12-06 08:37:47.0,,,,,,0|i148b3:,232809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF karaf feature cannot pass the karaf feature validate,CXF-4681,12619006,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,06/Dec/12 08:32,19/Dec/12 14:38,14/Mar/19 02:30,06/Dec/12 08:49,2.6.3,2.7,,,,,,2.6.4,2.7.1,,,OSGi,,,,0,,,,,,,,"Current cxf is using karaf 2.2.6 which karaf feature validate cannot validate the CXF feature well.
I fixed the karaf feature validating issue few month ago, after upgrading the karaf feature to 2.2.9, I found bunch of CXF karaf feature related issue.

We need to fix it before the new release cut of CXF.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,296295,,,Thu Dec 06 08:49:29 UTC 2012,,,,,,0|i148a7:,232805,,,,,,,,06/Dec/12 08:49;njiang;Applied the patch into trunk and cxf-2.6.x-fixes branche. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fault properties not ordered correctly in WSDL according to JAX-WS spec,CXF-4680,12618989,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,klape,klape,06/Dec/12 05:50,28/Feb/13 17:27,14/Mar/19 02:30,14/Dec/12 07:07,2.7,,,,,,,2.5.8,2.6.5,2.7.2,,JAXB Databinding,,,,0,,,,,,,,"Under certain circumstances (e.g. when there are multiple properties across an exception hierarchy), the order of the properties is not correct according to section 3.7, numbered point 4, which states they should be sorted lexicographically.",,,,,,,,,,,,,,,,,,,,06/Dec/12 05:53;klape;propOrderFix.diff;https://issues.apache.org/jira/secure/attachment/12556216/propOrderFix.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-12-10 10:25:25.125,,,no_permission,,Unknown,,,,,,,,,,,296275,,,Fri Dec 14 05:39:44 UTC 2012,,,,,,0|i1485j:,232784,,,,,,,,"10/Dec/12 10:25;ema;I added the support of @XmlType(propOrder={...}), does this work for your case? The exception class still doesn't support @XmlAccessOrder annotation, if there is requirement for this support, we can look at this later.","13/Dec/12 18:32;ay;Hi Jim,
There was a checkstyle error with above revision 1419325, which was corrected with revision 1419370.

So if 1419325 goes into 2.6.x, please take 1419370 with it.

Thanks.
regards, aki","14/Dec/12 05:39;ema;Thanks, Aki. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STS onBehalfOf validation should throw exception for invalid tokens in issue operation,CXF-4679,12618957,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,ychawla,ychawla,05/Dec/12 22:46,19/Dec/12 14:41,14/Mar/19 02:30,06/Dec/12 14:21,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,,,,,0,sts,,,,,,,"The STS Token Issue operation allows for token validators.  When the validator has an issue, the TokenIssueOperation class should throw an exception in the 'issueSingle' method.

This exception will propogate to create a fault for the client.",,28800,28800,,0%,28800,28800,,,,,,,,,,,,,06/Dec/12 02:09;ychawla;patch.txt;https://issues.apache.org/jira/secure/attachment/12556201/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,296226,,,Thu Dec 06 02:09:39 UTC 2012,,,,,,0|i1474n:,232618,,,,,,,,06/Dec/12 02:09;ychawla;This is the patch for the issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException from WS-RM's RMOutInterceptor's acknowledgement update code,CXF-4678,12618910,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,05/Dec/12 17:05,19/Dec/12 14:38,14/Mar/19 02:30,05/Dec/12 17:22,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,WS-* Components,,,,0,,,,,,,,"The sequence map held in RM's Destination (and also Source) should be made thread-safe to avoid ConcurrentModificaitonException while iterating over the sequences.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,296176,,,2012-12-05 17:05:42.0,,,,,,0|i146iv:,232520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Partial WSDL support in CXF ,CXF-4676,12618821,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,irisding,irisding,05/Dec/12 03:21,28/Feb/13 17:27,14/Mar/19 02:30,14/Jan/13 06:32,2.6.2,,,,,,,2.5.9,2.6.6,2.7.3,3.0.0-milestone1,Services,,,,0,,,,,,,,"I have one SEI defined as below:

@WebService(wsdlLocation=""WEB-INF/wsdl/AddNumbersImplPartial1Service.wsdl"")
public class AddNumbersImplPartial1 {
       
        public int addTwoNumbers(int number1, int number2) throws AddNegativeNumbersException {
                if (number1 < 0 || number2 < 0) {
                        throw new AddNegativeNumbersException(""Negative number submitted !! "", ""Numbers: "" +
                                                              number1 + "", "" + number2);
                }
                return number1 + number2;
        }
}

The WEB-INF/wsdl/AddNumbersImplPartial1Service.wsdl is not complete, it only contains to the porttype part:
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>
<definitions
targetNamespace=""http://serverpartial1.partialwsdl.annotations/"" 
name=""AddNumbersImplPartial1Service""
xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" 
xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" 
xmlns:tns=""http://serverpartial1.partialwsdl.annotations/""
xmlns=""http://schemas.xmlsoap.org/wsdl/"">
  <types>
    <xsd:schema>
      <xsd:import namespace=""http://serverpartial1.partialwsdl.annotations/"" schemaLocation=""AddNumbersImplPartial1Service_schema1.xsd""/>
    </xsd:schema>
  </types>
  <message name=""addTwoNumbers"">
    <part name=""parameters"" element=""tns:addTwoNumbers""/>
  </message>
  <message name=""addTwoNumbersResponse"">
    <part name=""parameters"" element=""tns:addTwoNumbersResponse""/>
  </message>
  <message name=""AddNegativeNumbersException"">
    <part name=""fault"" element=""tns:AddNegativeNumbersException""/>
  </message>
  <portType name=""AddNumbersImplPartial1"">
    <operation name=""addTwoNumbers"">
      <input message=""tns:addTwoNumbers""/>
      <output message=""tns:addTwoNumbersResponse""/>
      <fault name=""AddNegativeNumbersException"" message=""tns:AddNegativeNumbersException""/>
    </operation>
  </portType>
 
</definitions>

Now if I put the war file into tomcat and let it use CXF, the service can not be deployed successfully. In CXF, when it calls WSDLServiceFactory.create, it will simply get the service name from wsdl file and in our case, since it is empty, it will throw exception and service deployment failed. you can reference below part:

javax.wsdl.Service wsdlService = definition.getService(serviceName);
            if (wsdlService == null) {
                throw new ServiceConstructionException(new Message(""NO_SUCH_SERVICE_EXC"", LOG, serviceName));
            }

But per jaxws 2.2 spec, in chapter 5.2.5.5:

5.2.5.5 Application-specified PortType
No metadata document contains a definition for the sought-after service S, but a metadata document, say
D, contains a definition for the WSDL portType whose qualified name, say P, matches that specified by the
endpoint being published. In this case, a JAX-WS implementation MUST create a new description for S,
including an appropriate WSDL binding element referencing portType P. The metadata document D MUST
be imported/included so that the published contract uses the definition of P provided by D. No schema generation
occurs,as P is assumed to embed or import schema definitions for all the types/elements it requires.
Like in the previous case, the implementation MUST override any location and schemaLocation attributes.
It is an error if more than one metadata document contains a definition for the sought-after portType
P.

",,,,,,,,,,,,,,,,,,,,10/Jan/13 08:57;irisding;cxf-4676-test.patch;https://issues.apache.org/jira/secure/attachment/12564144/cxf-4676-test.patch,10/Jan/13 03:14;irisding;cxf-4676.patch;https://issues.apache.org/jira/secure/attachment/12564115/cxf-4676.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-01-05 06:11:15.282,,,no_permission,,Unknown,,,,,,,,,,,296069,,,Tue Feb 19 19:33:01 UTC 2013,,,,,,0|i1451b:,232279,,,,,,,,06/Dec/12 07:58;irisding;I will attach a patch soon.,"14/Dec/12 02:44;irisding;WSDLServiceFactory is also used for client side, Do we have a way to distingwish the server or client? Currently I have not found a way to handle this.

","05/Jan/13 06:07;irisding;Hi ,

Woud you plase help to review my patch and give your valuable comments on it? Thanks a lot!

Iris Ding","05/Jan/13 06:11;ffang;Hi Iris,

I'll take care of it.

Freeman
","05/Jan/13 06:14;irisding;Hi Freeman,

Thanks a lot!

Iris Ding","06/Jan/13 08:58;ffang;Hi Iris,

Thanks for the patch.
But it breaks several tests in rt/databinding/sdo module.

Please ensure all tests pass with your patch. Also for this improvement, I think it's better that you also append a testcase which can demonstrate your patch works for the specific purpose, something like publish an endpoint successfully with a partial wsdl and  a client invocation works. We have systests/jaxws test module, so you can add a test like ClientServerPartialWsdlTest there. Take a look at how other ClientServer Test works in that module, it should be a good start for you.

Freeman","06/Jan/13 12:16;ffang;also append the discussion[1] about this issue on mailing list for better track
[1]http://cxf.547215.n5.nabble.com/Partial-WSDL-support-in-CXF-td5719073.html","07/Jan/13 02:26;irisding;Hi Freeman,

Do you mean test in rt\databinding\sdo? below is my test results:

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.cxf.sdo.HelloWorldDynamicTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.831 sec
Running org.apache.cxf.sdo.HelloWorldStaticTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.2 sec

Results :

Tests run: 6, Failures: 0, Errors: 0, Skipped: 0

No failures.
","07/Jan/13 02:45;ffang;Hi,

Please ensure you grasp the latest code(svn update) on trunk, that's what I get with your patch

{code}
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.cxf.sdo.HelloWorldDynamicTest
Tests run: 3, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 1.395 sec <<< FAILURE!
testBasicInvoke(org.apache.cxf.sdo.HelloWorldDynamicTest)  Time elapsed: 1.25 sec  <<< FAILURE!
junit.framework.AssertionFailedError: Failed to select any nodes for expression:
/s:Envelope/s:Body/ns1:greetMeResponse from document:
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
<soap:Body>
<soap:Fault>
<faultcode>soap:Server</faultcode>
<faultstring>argument type mismatch while invoking public java.lang.String org.apache.cxf.sdo.HelloWorldDynamicTest$Server.greetMe(java.lang.String) with params [[org.apache.tuscany.sdo.impl.AnyTypeDataObjectImpl@1bd7b222 (mixed: [xml.type:text=World], anyAttribute: null)]].</faultstring>
</soap:Fault>
</soap:Body>
</soap:Envelope>

	at org.apache.cxf.test.XPathAssert.assertValid(XPathAssert.java:65)
	at org.apache.cxf.test.TestUtilities.assertValid(TestUtilities.java:146)
	at org.apache.cxf.test.AbstractCXFTest.assertValid(AbstractCXFTest.java:111)
	at org.apache.cxf.sdo.AbstractHelloWorldTest.testBasicInvoke(AbstractHelloWorldTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
testWSDL(org.apache.cxf.sdo.HelloWorldDynamicTest)  Time elapsed: 0.047 sec  <<< FAILURE!
java.lang.AssertionError: Did not find schemas
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.cxf.sdo.AbstractHelloWorldTest.testWSDL(AbstractHelloWorldTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
testStructure(org.apache.cxf.sdo.HelloWorldDynamicTest)  Time elapsed: 0.033 sec  <<< FAILURE!
junit.framework.AssertionFailedError: Failed to select any nodes for expression:
/s:Envelope/s:Body/ns1:echoStructResponse from document:
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
<soap:Body>
<soap:Fault>
<faultcode>soap:Server</faultcode>
<faultstring>argument type mismatch while invoking public commonj.sdo.DataObject org.apache.cxf.sdo.HelloWorldDynamicTest$Server.echoStruct(commonj.sdo.DataObject) with params [[org.apache.tuscany.sdo.impl.AnyTypeDataObjectImpl@71257687 (mixed: [xml.type:text=
  		, types:text=org.apache.tuscany.sdo.impl.AnyTypeDataObjectImpl@5288d319 (mixed: [xml.type:text=Hello], anyAttribute: null), xml.type:text=
  		, types:int=org.apache.tuscany.sdo.impl.AnyTypeDataObjectImpl@14db38a4 (mixed: [xml.type:text=24], anyAttribute: null), xml.type:text=
  		, types:dbl=org.apache.tuscany.sdo.impl.AnyTypeDataObjectImpl@4463a1ae (mixed: [xml.type:text=3.14159], anyAttribute: null), xml.type:text=
  		, types:texts=org.apache.tuscany.sdo.impl.AnyTypeDataObjectImpl@690bc995 (mixed: [xml.type:text=Hello], anyAttribute: null), xml.type:text=
  		, types:texts=org.apache.tuscany.sdo.impl.AnyTypeDataObjectImpl@4df8b14 (mixed: [xml.type:text=World], anyAttribute: null), xml.type:text=
  	], anyAttribute: null)]].</faultstring>
</soap:Fault>
</soap:Body>
</soap:Envelope>

	at org.apache.cxf.test.XPathAssert.assertValid(XPathAssert.java:65)
	at org.apache.cxf.test.TestUtilities.assertValid(TestUtilities.java:146)
	at org.apache.cxf.test.AbstractCXFTest.assertValid(AbstractCXFTest.java:111)
	at org.apache.cxf.sdo.AbstractHelloWorldTest.testStructure(AbstractHelloWorldTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Running org.apache.cxf.sdo.HelloWorldStaticTest
Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.146 sec <<< FAILURE!
testWSDL(org.apache.cxf.sdo.HelloWorldStaticTest)  Time elapsed: 0.036 sec  <<< FAILURE!
java.lang.AssertionError: Did not find schemas
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.cxf.sdo.AbstractHelloWorldTest.testWSDL(AbstractHelloWorldTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Results :

Failed tests:   testBasicInvoke(org.apache.cxf.sdo.HelloWorldDynamicTest): Failed to select any nodes for expression:(..)
  testWSDL(org.apache.cxf.sdo.HelloWorldDynamicTest): Did not find schemas
  testStructure(org.apache.cxf.sdo.HelloWorldDynamicTest): Failed to select any nodes for expression:(..)
  testWSDL(org.apache.cxf.sdo.HelloWorldStaticTest): Did not find schemas

Tests run: 6, Failures: 4, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] -----------------------------------------------------------------------
{code}

It works without your patch

Freeman


","07/Jan/13 08:39;irisding;Hi Freeman,

I can see the errors and attach a new patch. Can you please help to review again? 

Thanks a lot!

Iris Ding","07/Jan/13 08:46;ffang;Hi Iris,

Thanks for the patch.
As I mentioned before, fancy to add a testcase for this improvement?

Freeman","07/Jan/13 09:30;ffang;Hi Iris,

I still see  test failures with your new patch, in systests/ws-security module,  
{code}
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.cxf.systest.ws.wssc.WSSCTest
java.lang.StackOverflowError
	at java.util.HashMap$EntryIterator.<init>(HashMap.java:832)
	at java.util.HashMap$EntryIterator.<init>(HashMap.java:832)
	at java.util.HashMap.newEntryIterator(HashMap.java:846)
	at java.util.HashMap$EntrySet.iterator(HashMap.java:950)
	at java.util.HashMap.putAllForCreate(HashMap.java:434)
	at java.util.HashMap.<init>(HashMap.java:225)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
	at com.ibm.wsdl.DefinitionImpl.getAllPortTypes(Unknown Source)
{code}

Seems you patch cause  some recursive invocation but never exit which cause StackOverflowError. Could you see it from your side? We need ensure all exist tests passed.

Freeman
","08/Jan/13 02:58;irisding;Hi Freeman,

seems this is a bug for DefinitionImpl.getAllPortTypes() method. To bypass this problem, I will use below code snippet for this aim: -it means getPortTypes from wsdl and all it's imported wsdl by ourself.

  private boolean isEmptywsdl(String wsdlUrl) {
        Definition definition;
        try {
            definition = getBus().getExtension(WSDLManager.class).getDefinition(wsdlUrl);
            List<Definition> importedDefinitions = new ArrayList<Definition>();
            parseImports(definition, importedDefinitions);
            for (Definition def : importedDefinitions) {
            	Set<QName> portTypes = def.getPortTypes().keySet();
                for (QName sName : portTypes) {
                    if (!definition.getPortTypes().keySet().contains(sName)) {
                    	definition.getPortTypes().put(sName, def.getPortType(sName));
                    }
                }
            }

        } catch (Exception e) {
            return true;
        }
       if (definition.getPortTypes().isEmpty()) {
            return true;
        } 
        return false;
    }
    private void parseImports(Definition def, List<Definition> importedDefinitions) {
        for (Import impt : getImports(def)) {
            if (!importedDefinitions.contains(impt.getDefinition())) {
                importedDefinitions.add(impt.getDefinition());
                parseImports(impt.getDefinition(), importedDefinitions);
            }
        }
    }
    
    private static Collection<Import> getImports(final Definition wsdlDef) {
        Collection<Import> importList = new ArrayList<Import>();
        Map<?, ?> imports = wsdlDef.getImports();
        for (Iterator<?> iter = imports.keySet().iterator(); iter.hasNext();) {
            String uri = (String)iter.next();
            List<Import> lst = CastUtils.cast((List<?>)imports.get(uri));
            importList.addAll(lst);
        }
        return importList;
    }
Do you have any comments for this? This method works for the above cases.","08/Jan/13 04:09;ffang;Unfortunately this can also cause another test failure at
{code}
Running org.apache.cxf.systest.http.HTTPSClientTest
Tests run: 7, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.694 sec <<< FAILURE!
testResourceKeySpecEndpointURL(org.apache.cxf.systest.http.HTTPSClientTest)  Time elapsed: 0.321 sec  <<< ERROR!
org.apache.cxf.service.factory.ServiceConstructionException: Failed to create service.
	at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:86)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:292)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:235)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:228)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:183)
	at org.apache.cxf.systest.http.HTTPSClientTest.testSuccessfulCall(HTTPSClientTest.java:114)
	at org.apache.cxf.systest.http.HTTPSClientTest.testResourceKeySpecEndpointURL(HTTPSClientTest.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: javax.wsdl.WSDLException: WSDLException (at /soap:Envelope): faultCode=INVALID_WSDL: Expected element '{http://schemas.xmlsoap.org/wsdl/}definitions'.
	at com.ibm.wsdl.xml.WSDLReaderImpl.checkElementName(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.parseDefinitions(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
	at org.apache.cxf.wsdl11.WSDLManagerImpl.loadDefinition(WSDLManagerImpl.java:260)
	at org.apache.cxf.wsdl11.WSDLManagerImpl.getDefinition(WSDLManagerImpl.java:205)
	at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:84)
	... 38 more

{code}

You really should run all tests and ensure all passed with your patch.
Btw, there's no rush, take your time.","10/Jan/13 03:19;irisding;Hi Freeman,

sorry for the inconvenience. Sometimes I need to debug the case to see the errors. The test runs smoothly without errors using mvn test in my environment. It is weird.  Not sure to Set up a new env in Linux machine will solve the problem or not. Do you have any suggestions for this? anyway, I have attached new patch with test case also. Pls help to review it. Thanks a lot!

Iris Ding","10/Jan/13 05:07;ffang;Hi Iris,

We definitely have more developers/advocators who are on linux/mac in open source community, so yeah, if you can setup a linux machine that could be great. 
Another hint is that please use CLI tool to run the whole test, to generate the patch. You can use the IDE to debug, but you need run whole test using ""mvn clean install"" and ensure everything is OK before you submit a patch.

Back to your test patch, it's in cxf-testutils folder but there's no pom.xml so it can't get build, how you generate the patch? With eclipse? I suggest you use ""svn diff ..."" CLI , please take a look at [1],  the ""How to submit patch"" chapter to get more details.
Basically, if you need cxf-codegen-plugin to auto-generate code from the wsdl, you can put the wsdl in testutils module, otherwise you can just put the wsdl in systests/jaxws module, in the same module with the test you added.

Could you please revise accordingly and  re-append the patch? You can put all necessary changes in one patch file.

[1]http://cxf.apache.org/getting-involved.html

Freeman","10/Jan/13 06:38;irisding;HI Freeman,

I have revised the test patch according to your comments. Also thanks a lot for your points for the env issues. Can you please help review again?

Best Regards,

Iris Ding","10/Jan/13 07:07;ffang;Hi Iris,

You didn't really run the test using ""mvn clean install"", even in systests/jaxws module where the testcase was added,  right?

With your latest test patch, I get compilation error like
{code}
error: duplicate class: org.apache.cxf.systest.jaxws.AddNumbersImplPartial1
{code}
that's because except the AddNumbersImplPartial1.java you added, there's another AddNumbersImplPartial1.java generated by the cxf-codegen-plugin.  Don't put AddNumbersImplPartial*.wsdl in wsdl_systest_jaxw(as cxf-codegen-plugin will scan that folder) folder can resolve it.

Could you change your patch accordingly?

Please please run the test before you submit any patch!

Thanks
Freeman","10/Jan/13 08:53;irisding;Hi Freeman，

yes.. because I think it is just a small change so just run it from my eclipse. I really need to set up on Linux and I will work on this soon. Sorry for this :(

Iris Ding","10/Jan/13 09:05;ffang;Hi Iris,

No problem.  Yeah, set up an efficient machine is the first thing to do, you can benefit more from this investment, :-)
Also using ""mvn install"" will take you some time to download all dependencies if you first time run it on your machine, so there's no rush, take your time.

Thanks for the contribution so far.

Freeman","11/Jan/13 02:29;irisding;Hi Freeman,

I am working to set up a new Linux env now. In the meanwhile, I have tried to run the test in my old env and seems there is no issues for the new patch. So would you please help to review again? Thanks a lot!

Iris Ding","14/Jan/13 04:31;ffang;We probably should let rt/bindings/soap/ module to reuse SOAPBindingUtil from rt/core, anyway as this can change api so I will let the patch in for now and take care of that change later on.","14/Jan/13 06:32;ffang;apply patch on behalf of Iris Ding with thanks
http://svn.apache.org/viewvc?rev=1432798&view=rev for trunk
http://svn.apache.org/viewvc?rev=1432800&view=rev for 2.7.x branch
http://svn.apache.org/viewvc?rev=1432803&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1432811&view=rev for 2.5.x branch","19/Feb/13 19:33;owulff;I've raised issue CXF-4839 to address the issue that a WSDLException is ignored with the impact that the service model is built based on the annotations instead of the wsdl.
try {
   definition = getBus().getExtension(WSDLManager.class).getDefinition(wsdlUrl);
} catch (WSDLException e) {
   return true;
}
",,,,,,,,,,,,
[OAuth2] securityContext problem on createSubject,CXF-4666,12618187,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,tippettssh,tippettssh,29/Nov/12 17:40,19/Dec/12 14:38,14/Mar/19 02:30,30/Nov/12 13:09,2.7,,,,,,,2.6.4,2.7.1,,,JAX-RS Security,,,,0,,,,,,,,"This is probably just ignorance on my part, but when I override the createSubject method in the RedirecationBasedGrantService.java file, the securityContext parameter that is passed in is of type AbstractHTTPDestination$2. This parameter contains my authentication token, but I don't know how to get at it, so I'm having to go to the SecurityContextHolder to get the context instead of just using the parameter.

I'm just using standard Spring authentication, so it seems like many other people would also have AbstractHTTPDestination$2 as the security type, which causes roles to be missed in the OAuthUtils.createSubject method.

I'm sure I missed some details so please let know your questions and thanks for your help.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-29 18:54:04.668,,,no_permission,,Unknown,,,,,,,,,,,292809,,,Fri Nov 30 13:09:44 UTC 2012,,,,,,0|i0seg7:,163817,,,,,,,,"29/Nov/12 18:54;sergey_beryozkin;To be honest I'm not sure we can do anything about it and as such I would not treat it as a bug. 

How about the following (Christian suggested something like that awhile back): 

Postpone using Spring security at the servlet level and use CXF JAASLoginInterceptor instead, or may be for JAX-RS - org.apache.cxf.jaxrs.security.JAASAuthenticationFilter. It is very easy to use - just let it know the jaas context name and that is it.
Effectively it simply postpones the servlet-level authentication till later, once the call reaches CXF chain.

It will return org.apache.cxf.security.LoginSecurityContext - this is what the default UserSubject creation checks.
You can also check for some other Subject properties with LoginSecurityContext.

Next you can map LoginSecurityContext to Spring Security specific context and let it proceed...

That is the only I can suggest to be honest - would it work for you ?

By the way, as far as CXF-4656 is concerned, what other properties, apart from the principal name and its roles you are interested ?


  

 



","30/Nov/12 00:38;tippettssh;Thanks for the info. I'll look into the CXF JAAS approach in the future, but for now I'll just get the context from ContextSecurityHolder.

Regarding CXF-4656, the additional properties I'm interested in are: account id, surname, and given name.","30/Nov/12 13:07;sergey_beryozkin;I've made the method where UserSubject is created protected and also updated it to check for UserSubject which may've already been created from filters/interceptors, so you can say register a custom RequestHandler filter, create UserSubject and do ""message.setContent(UserSubject.class, mySubject);"" - this may be simpler than extending the class...

""the additional properties I'm interested in are: account id, surname, and given name."" - OK, thanks, I thought may be I can get away with extending UserSubject :-)",30/Nov/12 13:09;sergey_beryozkin;see r1415609,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-utils.js missing from release zip file,CXF-4665,12618180,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,gmazza,trudrung,trudrung,29/Nov/12 16:47,19/Dec/12 14:41,14/Mar/19 02:30,30/Nov/12 18:55,2.5.6,2.6.3,2.7,,,,,2.5.7,2.6.4,2.7.1,,Dynamic Languages,,,,0,,,,,,,,"I downloaded apache-cxf-2.5.0.zip many moons ago. It had cxf-utils.js available in the 'etc' directory as advertised on http://cxf.apache.org/docs/javascript-client-code.html. Version 2.5.0 is no longer available from http://cxf.apache.org/download.html. Version 2.5.6 is the latest 2.5.x release available for download. Version 2.5.6 does not have etc/cxf-utils.js. I need cxf-utils.js. I found cxf-utils.js in the source code distribution but cxf-utils.js should be available in the binary distribution.

I think cxf-utils.js is missing from the 2.6.x and 2.7.x releases as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-29 21:18:25.54,,,no_permission,,Unknown,,,,,,,,,,,292802,,,Fri Nov 30 18:55:13 UTC 2012,,,,,,0|i0seen:,163810,,,,,,,,"29/Nov/12 21:11;trudrung;It appears that the <directory> entry used in distribution/src/main/assembly/bin.xml is incorrect.

It currently is:
        <fileSet>
            <directory>../rt/javascript/src/main/resources/org/apache/cxf/javascript</directory>
            <outputDirectory>apache-cxf-${cxf.version}/etc</outputDirectory>
            <includes>
                <include>cxf-utils.js</include>
            </includes>
        </fileSet>

The <directory> entry is incorrect and probably should be:
            <directory>../rt/javascript-rt/src/main/resources/org/apache/cxf/javascript</directory>

","29/Nov/12 21:18;gmazza;Incidentally, older releases are always downloadable here: http://archive.apache.org/dist/cxf/ (link on the download page you gave earlier.)  Still, the problem you've given needs to get fixed.","30/Nov/12 18:55;gmazza;Fixed on all three branches, you'll see it in the next release--thanks for researching the problem for us!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jaxb data binding jaxb.scanPackages does not support Boolean object,CXF-4662,12618063,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,pellcorp,jpell,jpell,28/Nov/12 21:20,19/Dec/12 14:41,14/Mar/19 02:30,28/Nov/12 22:10,2.7,,,,,,,2.7.1,,,,JAXB Databinding,,,,0,,,,,,,,The patch to support this in 2.7.0 only supported providing a string property.  This makes it inelegant to configure as most everything else supports either a Boolean object or the string equivalent.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,292669,,,2012-11-28 21:20:49.0,,,,,,0|i0sb6v:,163289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Policy configuration in spring cause SAXParseException if no internet connection available,CXF-4659,12617970,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,amarkevich,amarkevich,28/Nov/12 12:15,19/Dec/12 14:41,14/Mar/19 02:30,28/Nov/12 20:39,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,JAX-WS Runtime,,,,0,,,,,,,,"Sample project [1] with sts profile: after CRMService deployment the service not available; after about 20 secs there is exception in log [2] and service started successfuly.



1. https://github.com/Talend/tesb-rt-se/tree/master/examples/tesb/rent-a-car

2. 15:02:39,828 | INFO  | container/deploy | ?                                   ? | 6 - org.apache.felix.fileinstall - 3.2.4 | Started bundle: file:/D:/Talend-ESB-V5.2.1-SNAPSHOT/container/deploy/crmservice-service-endpoint-sts-5.2.1-SNAPSHOT.jar
15:02:39,828 | INFO  | xtenderThread-13 | tory.xml.XmlBeanDefinitionReader  315 | 84 - org.springframework.beans - 3.0.7.RELEASE | Loading XML bean definitions from URL [bundleentry://226.fwk572511714/META-INF/spring/beans.xml]
15:03:00,796 | WARN  | xtenderThread-13 | k.util.xml.SimpleSaxErrorHandler   47 | 84 - org.springframework.beans - 3.0.7.RELEASE | Ignored XML validation warning
org.xml.sax.SAXParseException: schema_reference.4: Failed to read schema document 'http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not <xsd:schema>.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:96)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:380)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaErr(XSDHandler.java:2537)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaWarning(XSDHandler.java:2532)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:1836)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.resolveSchema(XSDHandler.java:1757)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.constructTrees(XSDHandler.java:909)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.constructTrees(XSDHandler.java:1002)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:569)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:556)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2443)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1788)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:731)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:377)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2756)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:647)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:232)[:1.6.0_37]
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)[:1.6.0_37]
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)[84:org.springframework.beans:3.0.7.RELEASE]
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)[84:org.springframework.beans:3.0.7.RELEASE]
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)[84:org.springframework.beans:3.0.7.RELEASE]
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)[84:org.springframework.beans:3.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)[84:org.springframework.beans:3.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)[84:org.springframework.beans:3.0.7.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)[84:org.springframework.beans:3.0.7.RELEASE]
	at org.springframework.osgi.context.support.OsgiBundleXmlApplicationContext.loadBeanDefinitions(OsgiBundleXmlApplicationContext.java:164)[90:org.springframework.osgi.core:1.2.1]
	at org.springframework.osgi.context.support.OsgiBundleXmlApplicationContext.loadBeanDefinitions(OsgiBundleXmlApplicationContext.java:136)[90:org.springframework.osgi.core:1.2.1]
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)[86:org.springframework.context:3.0.7.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)[86:org.springframework.context:3.0.7.RELEASE]
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.access$800(AbstractDelegatedExecutionApplicationContext.java:69)[90:org.springframework.osgi.core:1.2.1]
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$3.run(AbstractDelegatedExecutionApplicationContext.java:269)[90:org.springframework.osgi.core:1.2.1]
	at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)[90:org.springframework.osgi.core:1.2.1]
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.startRefresh(AbstractDelegatedExecutionApplicationContext.java:247)[90:org.springframework.osgi.core:1.2.1]
	at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.stageOne(DependencyWaiterApplicationContextExecutor.java:214)[91:org.springframework.osgi.extender:1.2.1]
	at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.refresh(DependencyWaiterApplicationContextExecutor.java:169)[91:org.springframework.osgi.extender:1.2.1]
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.refresh(AbstractDelegatedExecutionApplicationContext.java:175)[90:org.springframework.osgi.core:1.2.1]
	at org.springframework.osgi.extender.internal.activator.ContextLoaderListener$2.run(ContextLoaderListener.java:716)[91:org.springframework.osgi.extender:1.2.1]
	at java.lang.Thread.run(Thread.java:662)[:1.6.0_37]
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,292568,,,2012-11-28 12:15:04.0,,,,,,0|i0s93r:,162951,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF continuations portability issue,CXF-4653,12617747,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,opalka,opalka,27/Nov/12 09:23,19/Dec/12 14:38,14/Mar/19 02:30,27/Nov/12 12:12,,,,,,,,2.7.1,,,,Transports,,,,0,,,,,,,,According to our discussion on CXF dev list I verified that Dan's suggestion works on top of JBoss Web.,,,,,,,,,,,,,,,,,,,,27/Nov/12 09:24;opalka;CXF4653.patch;https://issues.apache.org/jira/secure/attachment/12554980/CXF4653.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-11-27 12:12:27.61,,,no_permission,,Unknown,,,,,,,,,,,292263,,,Tue Nov 27 12:12:27 UTC 2012,,,,,,0|i0rswn:,160327,,,,,,,,27/Nov/12 09:24;opalka;Attaching patch proposal,"27/Nov/12 12:12;sergey_beryozkin;Patch has been applied, thanks Richard, one more patch point :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Additional namespace is added when web service provider implements Provider<DOMSource>,CXF-4652,12617566,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,hanhongfang,hanhongfang,26/Nov/12 05:57,16/Jul/13 19:28,14/Mar/19 02:30,26/Nov/12 09:13,2.6.2,,,,,,,2.5.7,2.6.4,2.7.1,,,,,,0,,,,,,,,"In the invoke method of web service provider which implements Provider<DOMSource>, using the following code to return a response DOMSource,

    DOMSource response = new DOMSource();
    DocumentBuilderFactory documentFacory = DocumentBuilderFactory.newInstance();
    DocumentBuilder documentBuilder = null;
    try {
    documentBuilder = documentFacory.newDocumentBuilder();
    } catch (ParserConfigurationException e) {
        throw new RuntimeException(e);
    }
    Document doc;
    try {
        doc = documentBuilder.parse(new InputSource(
        new ByteArrayInputStream(message.getBytes(""UTF-8""))));
    } catch (Exception e) {
        throw new RuntimeException(""error parse: "" + str, e);
    }
    response.setNode(doc);

In above code, if message string is:

 ""<ns2:echoResponse xmlns:ns2=""annotations.webserviceprovider.fq""><return>Hello world</return></ns2:echoResponse>"", 

but the soapMessage body will be:

 ""<ns2:echoResponse xmlns:ns2=""annotations.webserviceprovider.fq"" xmlns=""annotations.webserviceprovider.fq""><return>Hello world</return></ns2:echoResponse>""

Additional attribute xmlns=""annotations.webserviceprovider.fq"" is added by cxf. This additional attribute causes the unmarshal issue at client side.",win7 + oracle jdk 1.6.0_29-b11,,,,,,,,,,,,,,,,,,,26/Nov/12 06:08;hanhongfang;W3CDOMStreamReader.java.patch;https://issues.apache.org/jira/secure/attachment/12554821/W3CDOMStreamReader.java.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-11-26 09:13:08.495,,,no_permission,,Unknown,,,,,,,,,,,292066,,,Tue Nov 27 06:57:09 UTC 2012,,,,,,0|i0rrcn:,160075,,,,,,,,"26/Nov/12 06:08;hanhongfang;Patch is attached, please help to review. Thanks in advance.",26/Nov/12 09:13;ffang;apply patch on behalf of Han Hong Fang with thanks,"26/Nov/12 12:44;dkulp;
While I don't object to the patch, I do want to point out that the bug is really in your code, not CXF.   You are not setting the DocumentBuilder to be namespace aware.   Thus, the resulting DOM doesn't have the namespaces properly parsed and processed.   Most likely, if you add documentFactory.setNamespaceAware(true) it would work for you as the DOM would be properly constructed.","27/Nov/12 06:57;hanhongfang;Yes, cxf can correctly deal with the DOMSource when documentFactory.setNamespaceAware(true) is configured. The patch is to tolerate the DOMSource if namespaceAware is not set.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A wrong soap action when using ws-addressing may lead to an empty response or the fault with the wrong action,CXF-4647,12617362,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,22/Nov/12 17:10,19/Dec/12 14:38,14/Mar/19 02:30,28/Nov/12 17:31,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,WS-* Components,,,,0,,,,,,,,"This issue was reported in users@cxf
http://cxf.547215.n5.nabble.com/SOAPAction-tc5718944.html

When the soap action value does not match the ws-addressing's action or that action is not supported by the endpoint, an exception is raised and an appropriate SOAP fault message must be returned, which is specified in
http://www.w3.org/TR/2006/REC-ws-addr-soap-20060509/#soapfaults

Currently, there are two issues:

1. the soap fault code is correctly set but the soap action value is not correctly set to http://www.w3.org/2005/08/addressing/fault.

2. if the endpoint defines a fault type that has no message part, an NPE is thrown and this can lead to an empty response instead of a fault response.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,259579,,,2012-11-22 17:10:03.0,,,,,,0|i0lrvr:,125168,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AsyncHTTPConduit does not re-use NTLM authenticated connections,CXF-4645,12617310,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,oysteingr,oysteingr,22/Nov/12 10:11,19/Dec/12 14:38,14/Mar/19 02:30,26/Nov/12 18:25,2.7,,,,,,,2.7.1,,,,Transports,,,,0,,,,,,,,"I´ve started using AsyncHTTPConduit with NTLM, and have seen that connections are never re-used over consecutive requests.

I have debugged the entire stack, and found that the pooling mechanism in apache http client async is using the ""http.user-token"" (ClientContext.USER_TOKEN) property to find existing connections for re-use.

I managed to patch the AsyncHTTPConduit (from 2.7.0 tag) so that it actually does re-use connections with NTLM. However, I´m not very familiar with the cfx code base and do not know the side-effects of this change.

{code:java}
protected void connect(boolean output) throws IOException {
...
if (tlsClientParameters != null && tlsClientParameters.hashCode() == lastTlsHash && sslState != null) {
                ctx.setAttribute(ClientContext.USER_TOKEN , sslState);
            } else if (client.getCredentialsProvider().getCredentials(AuthScope.ANY) != null) {
                ctx.setAttribute(ClientContext.USER_TOKEN, client.getCredentialsProvider()
                    .getCredentials(AuthScope.ANY).getUserPrincipal());
            }
...
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-26 18:25:04.74,,,no_permission,,Unknown,,,,,,,,,,,259523,,,Tue Nov 27 08:53:33 UTC 2012,,,,,,0|i0lq9z:,124908,,,,,,,,"26/Nov/12 18:25;dkulp;
Had to modify the patch a bit as the client may not be created yet at that point, but basic idea applied.   Would appreciate it if you could give tomorrows snapshots a quick spin to test out.","27/Nov/12 08:53;oysteingr;I´ve switched from using my self-built version of http-hc to 2.7.1-SNAPSHOT. The problems I saw with 2.7.0 seems to be fixed with your commit :)

Appreciate your quick response to this issue :)

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
shouldn't have dependency='true' for saaj-impl bundle ,CXF-4644,12617276,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,22/Nov/12 07:14,19/Dec/12 14:38,14/Mar/19 02:30,22/Nov/12 07:39,,,,,,,,2.6.4,2.7.1,,,,,,,0,,,,,,,,"When use  OBR  resolver, bundles have dependency='true' will be used to resolve constraints from other bundles without dependency='true', which  means that if there's no dependencies(Import Package) on such a bundle, it won't be installed.
saaj-impl is in this case, as no other bundles in cxf features explicitly depend on(Import package from saaj-impl bundle) it, hence saaj-impl bundle can't get installed by default.
But we wanna saaj-impl bundle get installed anyway in wss4j feaure",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,259488,,,Thu Nov 22 07:39:35 UTC 2012,,,,,,0|i0lpzz:,124863,,,,,,,,"22/Nov/12 07:39;ffang;commit fix
http://svn.apache.org/viewvc?rev=1412437&view=rev for trunk
http://svn.apache.org/viewvc?rev=1412440&view=rev for 2.6.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Initial non-GET request returns 404 if it has query parameters,CXF-4643,12617157,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jasong35,jasong35,21/Nov/12 18:50,19/Dec/12 14:38,14/Mar/19 02:30,29/Nov/12 16:04,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,,,,,0,,,,,,,,"Hello, I ran into a weird case where an initial HTTP non-GET request returns 404 if there happens to be query parameters in it. Basically, you can take the code below, start up a servlet container, and do the following curl commands:

> curl -v -X PUT http://localhost:8080/cxf-test/woot?foo=bar -d ""Name""
404
> curl -v http://localhost:8080/cxf-test/woot
200
> curl -v -X PUT http://localhost:8080/cxf-test/woot?foo=bar -d ""Name""
204

I tracked the problem down to ServletController:184 (in the 2.7.0 sources). I don't know why ""updateDestination"" is invoked only for GET, but this case works fine if it is invoked regardless of the method. Is there perhaps a problem in my configuration?



RestService
-----------
@Service(""theRestService"")
@Path(""/"")
public class TheRestService {
    
    @PUT
    public void putHello(@QueryParam(""foo"") String foo, String name) {
        System.out.println(""Hello "" + name);
    }
    
    @GET 
    public String getHello() {
        return ""foo"";
    }

}


web.xml
-------
<web-app>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:/META-INF/spring/spring.xml
		</param-value>
	</context-param>
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
    <servlet>
        <servlet-name>TheServlet</servlet-name>
        <display-name>The Servlet</display-name>
        <servlet-class>
            org.apache.cxf.transport.servlet.CXFServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>	
    <servlet-mapping>
        <servlet-name>TheServlet</servlet-name>
        <url-pattern>/woot/*</url-pattern>
    </servlet-mapping>	

</web-app>


spring.xml
----------
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:aop=""http://www.springframework.org/schema/aop""
	xmlns:jee=""http://www.springframework.org/schema/jee"" xmlns:lang=""http://www.springframework.org/schema/lang""
	xmlns:tx=""http://www.springframework.org/schema/tx"" xmlns:util=""http://www.springframework.org/schema/util""
	xmlns:p=""http://www.springframework.org/schema/p"" xmlns:jaxrs=""http://cxf.apache.org/jaxrs""
	xmlns:context=""http://www.springframework.org/schema/context""
	xmlns:cxf=""http://cxf.apache.org/core""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd          
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
       http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd       
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd                 
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd"">

    <import resource=""classpath:META-INF/cxf/cxf.xml"" />
    <import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" /> 

	<!-- Spring Bean Setup -->
	<context:annotation-config />
	<context:component-scan base-package=""test.cxf"" />
    
    <jaxrs:server id=""theServer"" address=""/"">
        <jaxrs:serviceBeans>
            <ref bean=""theRestService"" />              
        </jaxrs:serviceBeans>
    </jaxrs:server>
       	
</beans>
",Jetty Maven Plugin (default version) ,,,,,,,,,,,,,,,,,,,26/Nov/12 17:37;jasong35;cxf-test.tar.gz;https://issues.apache.org/jira/secure/attachment/12554885/cxf-test.tar.gz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-11-21 22:59:27.481,,,no_permission,,Unknown,,,,,,,,,,,259358,,,Thu Nov 29 17:38:49 UTC 2012,,,,,,0|i0lokn:,124631,,,,,,,,"21/Nov/12 22:59;sergey_beryozkin;This is a strange one indeed. I've just played with few of the tests in systest/jaxrs/.../JAXRSClientServerBookTest, adding query parameters to POST & PUT requests and running them individually and it all works fine...Jetty server is used internally.

Can you please experiment a bit with different plugin versions ? I'll try a default one tomorrow 


","22/Nov/12 16:16;sergey_beryozkin;FYI, I've created a simple test resource with the following method:
{code:java}

@PUT
    @Path(""/simpleput"")
    @Produces(""text/plain"")
    public String simplePut() {
        return ""simplePut"";
    }

{code}

and I've accessed from curl:

""curl -H 'Accept: text/plain' -X PUT http://localhost:8080/services/personservice/search/simpleput?x=b""

and I've got ""simplePut"" back.

I've done ""mvn jetty:run"" with the default plugin.

It appears something is interfering in you case.
Can you provide a test Maven project by any chance ? 
","26/Nov/12 17:37;jasong35;Try this out. It was build with maven 3. After you execute 'mvn jetty:run,' try the commands I listed before.","28/Nov/12 17:38;sergey_beryozkin;Ouch, reproduced it...Very strange, will investigate, thanks",29/Nov/12 15:55;sergey_beryozkin;ServletController QueryHandler branch catches all HTTP methods and this causes this issue,29/Nov/12 17:38;jasong35;Awesome. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF feature can not be installed on Karaf 3 as it requires jetty to be below version 8,CXF-4642,12616952,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,20/Nov/12 15:46,19/Dec/12 14:38,14/Mar/19 02:30,27/Nov/12 08:26,2.7,,,,,,,2.7.1,,,,OSGi,,,,0,,,,,,,,"How to reproduce:
Extract and start karaf 3 snapshot
feature:repo-add cxf 2.7.0
feature:install -v cxf

Installing feature cxf-http-jetty 2.7.0
Error executing command: No feature named 'jetty' with version '[7,8)' available

Seems like we specified the incorrect version range for the jetty feature",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,258843,,,Fri Nov 23 09:48:23 UTC 2012,,,,,,0|i0l4t3:,121429,,,,,,,,"23/Nov/12 09:48;chris@die-schneider.net;Fixed on trunk

1411708 20.11.2012 16:48:27, by cschneider
CXF-4642 Fixing version range for jetty feature
M /cxf/trunk/osgi/karaf/features/src/main/resources/features.xml ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@PostConstruct methods invoked twice in Spring projects when using OSGi even with fix for CXF-3959,CXF-4640,12616452,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,will_lauer@comcast.net,will_lauer@comcast.net,16/Nov/12 18:27,19/Dec/12 14:38,14/Mar/19 02:30,19/Nov/12 06:55,2.6.3,,,,,,,2.5.7,2.6.4,2.7.1,,JAX-WS Runtime,,,,0,,,,,,,,"Even with the fixes for CXF-3959, methods annotated with @PostConstruct appear to be called twice when creating a jaxws endpoint from within a Spring-based bundle when invoked inside an OSGi environment. It appears that the fix for CXF-3959 tries to determine if Spring is being used by looking up the class org.springframework.context.annotation.CommonAnnotationBeanPostProcessor in EndpointDefinitionParser. While this will work in a normal java environment, it fails in the current OSGi enabled CXF bundles because the cxf-rt-frontend-jaxws bundle does not import the package org.springframework.context.annotation. Because of this, the class lookup will always fail.","Karaf 2.3.0, Equinox 2.6.0, Spring 3.0.7.RELEASE",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-19 05:07:32.546,,,no_permission,,Unknown,,,,,,,,,,,258294,,,Mon Nov 19 05:07:32 UTC 2012,,,,,,0|i0kr73:,119223,,,,,,,,"19/Nov/12 05:07;ffang;package org.springframework.context.annotation is from spring-context bundle and cxf-rt-frontend-jaxws already have spring-context dependency, so we can explicitly use org.springframework.context.annotation.CommonAnnotationBeanPostProcessor  class in EndpointDefinitionParser so that maven-bundle-plugin can detect it and generate a proper optional package import entry automatically",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception when validating access token on a resource server (OAuth2),CXF-4637,12616332,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,sergey_beryozkin,tippettssh,tippettssh,15/Nov/12 23:19,19/Dec/12 14:38,14/Mar/19 02:30,16/Nov/12 11:15,2.6.2,,,,,,,2.6.4,2.7.1,,,JAX-RS Security,,,,0,,,,,,,,"When I set scopes and subject on a ServerAccessToken in getAccessToken on the OAuth2 server, I get an exception on the resource server when it tries to validate the token in AccessTokenValidatorClient at validateAccessToken.

Here is a snippet of code in the getAccessToken method:

1 List<OAuthPermission> scopes = new ArrayList<OAuthPermission>();
2 OAuthPermission p = new OAuthPermission();
3 List<String> v = new ArrayList<String>();
4 v.add(""GET"");
5 p.setHttpVerbs(v);
6 p.setPermission(""read_test_info"");
7 scopes.add(p);
8 token.setScopes(scopes);

If I comment line 5, then the exception doesn't happen.

Here is the exception:

[12/11/15 15:40:21:777] 0000000c Wr AbstractJAXBProvider: java.lang.UnsupportedOperationException
	at java.util.AbstractList.add(AbstractList.java:131)
	at java.util.AbstractList.add(AbstractList.java:91)
	at com.sun.xml.internal.bind.v2.runtime.reflect.Lister$CollectionLister.addToPack(Lister.java:290)
	at com.sun.xml.internal.bind.v2.runtime.reflect.Lister$CollectionLister.addToPack(Lister.java:254)
	at com.sun.xml.internal.bind.v2.runtime.unmarshaller.Scope.add(Scope.java:106)
	at com.sun.xml.internal.bind.v2.runtime.property.ArrayERProperty$ReceiverImpl.receive(ArrayERProperty.java:195)
	at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContext.endElement(UnmarshallingContext.java:524)
	at com.sun.xml.internal.bind.v2.runtime.unmarshaller.InterningXmlVisitor.endElement(InterningXmlVisitor.java:66)
	at com.sun.xml.internal.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleEndElement(StAXStreamConnector.java:206)
	at com.sun.xml.internal.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:170)
	at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:351)
	at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:323)
	at org.apache.cxf.jaxrs.provider.JAXBElementProvider.unmarshalFromInputStream(JAXBElementProvider.java:257)
	at org.apache.cxf.jaxrs.provider.JAXBElementProvider.doUnmarshal(JAXBElementProvider.java:214)
	at org.apache.cxf.jaxrs.provider.JAXBElementProvider.readFrom(JAXBElementProvider.java:181)
	at org.apache.cxf.jaxrs.client.AbstractClient.readBody(AbstractClient.java:445)
	at org.apache.cxf.jaxrs.client.WebClient.handleResponse(WebClient.java:832)
	at org.apache.cxf.jaxrs.client.WebClient.doChainedInvocation(WebClient.java:816)
	at org.apache.cxf.jaxrs.client.WebClient.doInvoke(WebClient.java:743)
	at org.apache.cxf.jaxrs.client.WebClient.doInvoke(WebClient.java:717)
	at org.apache.cxf.jaxrs.client.WebClient.invoke(WebClient.java:344)
	at org.apache.cxf.jaxrs.client.WebClient.get(WebClient.java:469)
	at edu.byu.mtc.servicelayer.service.AccessTokenValidatorClient.validateAccessToken(AccessTokenValidatorClient.java:25)
	at edu.byu.mtc.servicelayer.service.AbstractAccessTokenValidator.getAccessTokenValidation(AbstractAccessTokenValidator.java:84)
	at edu.byu.mtc.servicelayer.service.OAuthRequestFilter.handleRequest(OAuthRequestFilter.java:34)

The problem is that the AbstractList trying to add to an empty collection, which I believe is from line 35 in OAuthPermission.java:

    private List<String> httpVerbs = Collections.emptyList();

If I change that line to this then the exception goes away:

    private List<String> httpVerbs = new ArrayList<String>();

This same fix needs to be made to line 36 in OAuthPermission.java for uris and to line 34 in UserSubject.java for roles.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,258094,,,2012-11-15 23:19:06.0,,,,,,0|i0kmtz:,118516,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in FIQL search query documentation,CXF-4635,12616199,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,sergey_beryozkin,jan4talend,jan4talend,15/Nov/12 08:03,05/Dec/13 19:09,14/Mar/19 02:30,18/Mar/13 18:11,,,,,,,,,,,,Documentation,,,,0,,,,,,,,"Samples under [1] use "","" to demonstrate OR operator, but the table as well as the following text say that another character  ""'"" should be used for OR operations. Which one is correct?

Quote:

// Find all employees younger than 25 or older than 35 living in London
/employees?_s=(age=lt=25,age=gt=35);city==London

. . .

The last two operators, ""'""(OR) and "";""(AND) are used to ...


[1] http://cxf.apache.org/docs/jax-rs-advanced-features.html#JAX-RSAdvancedFeatures-FIQLsearchqueries
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-15 09:56:39.271,,,no_permission,,Novice,,,,,,,,,,,257948,,,Tue Nov 27 12:32:33 UTC 2012,,,,,,0|i0klbj:,118271,,,,,,,,"15/Nov/12 09:56;sergey_beryozkin;I've got it fixed, thanks:
https://cwiki.apache.org/confluence/display/CXF20DOC/JAX-RS+Advanced+Features#JAX-RSAdvancedFeatures-Introduction

Will keep this JIRA open for a bit longer in case you spot some other doc issues ","16/Nov/12 11:17;sergey_beryozkin;Resolving for now, please reopen if you see some other search doc issues","27/Nov/12 10:26;jan4talend;I found another TYPO:

http://cxf.apache.org/docs/jax-rs-advanced-features.html#JAX-RSAdvancedFeatures-SearchBean

If I understand this sample correctly, the following line 
  fieldMap.put(""level"", ""LEVEL_FIELD"");
should be changed to
  fieldMap.put(""level"", ""LEVEL_COLUMN"");","27/Nov/12 12:32;sergey_beryozkin;Hi Jan, thanks for spotting it, fixed:
https://cwiki.apache.org/confluence/display/CXF20DOC/JAX-RS+Advanced+Features#JAX-RSAdvancedFeatures-FIQLsearchqueries",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redirection based OAuth services need to return an error directly to the end user,CXF-4633,12615917,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,13/Nov/12 16:57,19/Dec/12 14:38,14/Mar/19 02:30,20/Nov/12 10:10,2.6.3,2.7,,,,,,2.6.4,2.7.1,,,JAX-RS,JAX-RS Security,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,257497,,,Tue Nov 13 16:58:52 UTC 2012,,,,,,0|i0k2uf:,115278,,,,,,,,"13/Nov/12 16:58;sergey_beryozkin;More specifically, if the end user has been redirected to the service by the illegal client then the end user must not be redirected back to the illegal client web application but be presented with the error description.

In fact this is how it already works but JSON media type is enforced too early",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpUtils.toAbsoluteUri should use request.getServerPort() instead of request.getLocalPort(),CXF-4631,12615870,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,jboch,jboch,13/Nov/12 11:24,19/Dec/12 14:41,14/Mar/19 02:30,13/Nov/12 13:46,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,JAX-RS,,,,0,,,,,,,,"I believe the toAbsoluteUri() helper method should use the getServerPort() method of HttpServletRequest.

The host name is already taken from the Host header, so it's inconsistent to return the port number of the interface on which the request was received, instead of the port value contained in the Host header.

Anyhow I'd presume that the client would expect to receive an URL based on the address it used.

I run into this when I put an SSH tunnel to a server where the CXF-based 
application was running:
{{ssh -L 5555:localhost:80 myappserver}}
Although I send requests to:
 {{http://myapp:5555/path}}
the returned URLs are like:
 {{http://myapp/path2}}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,257355,,,2012-11-13 11:24:18.0,,,,,,0|i0jy1r:,114448,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"local part cannot be ""null"" when creating a QName",CXF-4630,12615852,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,tsc,tsc,13/Nov/12 08:03,19/Dec/12 14:38,14/Mar/19 02:30,13/Nov/12 19:08,2.4.7,,,,,,,2.5.7,2.6.4,2.7.1,,OtherDatabindings,,,,0,,,,,,,,"We have a webservice using xmlbeans for the databinding. The webservice has a method taking the xml document generated by xmlbeans. It works fine with version 2.2.11 and 2.3.9.
Now, we would like to migrate this to the new version 2.7.0, but the webservice can't be created anymore due to this exception:
{noformat}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'localWebServiceClient': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalArgumentException: local part cannot be ""null"" when creating a QName
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:149)
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:102)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1440)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:247)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:192)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:848)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:790)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:707)
        at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:480)
        ... 32 more
Caused by: java.lang.IllegalArgumentException: local part cannot be ""null"" when creating a QName
        at javax.xml.namespace.QName.<init>(QName.java:246)
        at javax.xml.namespace.QName.<init>(QName.java:190)
        at org.apache.ws.commons.schema.utils.XmlSchemaNamedWithFormImpl.setName(XmlSchemaNamedWithFormImpl.java:87)
        at org.apache.ws.commons.schema.XmlSchemaElement$2.run(XmlSchemaElement.java:230)
        at org.apache.ws.commons.schema.utils.CollectionFactory.withSchemaModifiable(CollectionFactory.java:123)
        at org.apache.ws.commons.schema.XmlSchemaElement.setName(XmlSchemaElement.java:225)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.createWrappedMessageSchema(ReflectionServiceFactoryBean.java:1306)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.createWrappedSchema(ReflectionServiceFactoryBean.java:1136)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeWrappedSchema(ReflectionServiceFactoryBean.java:1034)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:478)
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:690)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:536)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:248)
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:205)
        at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
        at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:90)
        at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:156)
        at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:156)
        at org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean.create(JaxWsProxyFactoryBeanDefinitionParser.java:79)
        at org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean.getObject(JaxWsProxyFactoryBeanDefinitionParser.java:83)
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:142)
        ... 40 more
{noformat}

I will attach a maven project reproducing the problem. Just change the cxf version in the pom.xml to 2.3.9 to make it working...",,,,,,,,,,,,,,,,,,,,13/Nov/12 08:04;tsc;ws-test.zip;https://issues.apache.org/jira/secure/attachment/12553284/ws-test.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,257337,,,2012-11-13 08:03:06.0,,,,,,0|i0jxvr:,114421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Security issue with GET methods: WSS4JInInterceptor always allows HTTP Get requests from browser,CXF-4629,12615806,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,soulkeeper,soulkeeper,12/Nov/12 21:47,19/Dec/12 14:38,14/Mar/19 02:30,26/Nov/12 18:04,2.6.3,2.7,,,,,,2.5.7,2.6.4,2.7.1,,WS-* Components,,,,0,,,,,,,,"Hello All,

We are running CFX web services with the following configuration:

web.xml
{noformat}
    <servlet>
        <servlet-name>cxf</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>cxf</servlet-name>
        <url-pattern>/ls/*</url-pattern>
    </servlet-mapping>
{noformat}

spring config:
{noformat}
    <!-- ######################################### -->
    <beans:import resource=""classpath:META-INF/cxf/cxf.xml"" />
    <beans:import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />
    <beans:import resource=""classpath:META-INF/cxf/cxf-extension-soap.xml"" />

    <jaxws:endpoint id=""lsWebEndpoint""
        implementor=""${our endpoint class}""
        address=""/api"" >

        <jaxws:inInterceptors>
            <bean class=""org.apache.cxf.binding.soap.saaj.SAAJInInterceptor"" />
            <bean class=""org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"">
                <constructor-arg>
                    <map>
                        <entry key=""action"" value=""UsernameToken""/>
                        <entry key=""passwordType"" value=""PasswordText""/>
                        <entry key=""passwordCallbackClass"" value=""${our password callback impl}""/>
                    </map>
                </constructor-arg>
            </bean>
        </jaxws:inInterceptors>

    </jaxws:endpoint>
{noformat}

And we discovered that all our web services are accessible via browser (HTTP Get) without any authentication. 
For instance:
{noformat}
http://localhost:8181/ls/api/test?a=10&b=20
{noformat}
{noformat}
@WebService
public class WSEndpoint {

    @WebMethod
    public int test(@WebParam(name = ""a"") int a,
                    @WebParam(name = ""b"") int b) {
        return a + b;
    }
}
{noformat}
returns
{noformat}
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
<soap:Body>
<ns2:testResponse xmlns:ns2=""${our namespace}"">
<return>30</return>
</ns2:testResponse>
</soap:Body>
</soap:Envelope>
{noformat}

The reason is the following code in WSS4JInInterceptor:
{noformat}
    public final boolean isGET(SoapMessage message) {
        String method = (String)message.get(SoapMessage.HTTP_REQUEST_METHOD);
        return ""GET"".equals(method) && message.getContent(XMLStreamReader.class) == null;
    }
    
    public void handleMessage(SoapMessage msg) throws Fault {
        if (msg.containsKey(SECURITY_PROCESSED) || isGET(msg)) {
            return;
        }:
    ...
{noformat}

I was not able to find anything specific on google why GET methods are always allowed.

However it's somehow related to CXF-3170:
Please see http://cxf.547215.n5.nabble.com/svn-commit-r1062014-in-cxf-branches-2-3-x-fixes-rt-ws-security-src-main-java-org-apache-cxf-ws-secura-tt3352201.html#none

Also i found the following thread on StackOverflow without answer:
http://stackoverflow.com/questions/7933293/why-does-apache-cxf-ws-security-implementation-ignore-get-requests

Please advice on this this issue.

Regards,
Oleh.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-13 01:22:23.763,,,no_permission,,Moderate,,,,,,,,,,,257285,,,Tue Nov 13 23:10:43 UTC 2012,,,,,,0|i0jxin:,114360,,,,,,,,"13/Nov/12 01:22;ffang;Hi,

WSS4JInInterceptor is used for ws-security, and ws-security is based on soap message. IIRC, all soap message is carried via POST, but not GET. Honestly I'm  a little bit surprised this GET request could pass through all other interceptors and invoke the method, could you please post the on-wire request message?

Freeman","13/Nov/12 19:40;soulkeeper;Freeman,

I don't get what do you mean by *the on-wire request message*.

I just start browser, write
{noformat}http://localhost:8181/ls/api/test?a=10&b=20{noformat}
press enter and get result from web service.

Anyway, to fix the problem we introduced our custom interceptor.

{noformat}
<jaxws:inInterceptors>
            <bean class=""com.ourpackage.RequestFilterInterceptor"" />         <---- This one
            <bean class=""org.apache.cxf.binding.soap.saaj.SAAJInInterceptor"" />
            <bean class=""org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"">
{noformat}



{noformat}
/**
 * @author Aquanox
 * @date 13.11.2012 14:46
 */
public class RequestFilterInterceptor extends AbstractWSS4JInterceptor {

    public RequestFilterInterceptor() {
        super();
        setPhase(Phase.PRE_PROTOCOL);
    }

    @Override
    public void handleMessage(SoapMessage message) throws Fault {
        if (message.getContent(SOAPMessage.class) == null) {
            throw createSoapFault(message.getVersion(), new WSSecurityException(WSSecurityException.INVALID_SECURITY));
        }
    }

    /**
     * Create a SoapFault from a WSSecurityException, following the SOAP Message Security
     * 1.1 specification, chapter 12 ""Error Handling"".
     *
     * When the Soap version is 1.1 then set the Fault/Code/Value from the fault code
     * specified in the WSSecurityException (if it exists).
     *
     * Otherwise set the Fault/Code/Value to env:Sender and the Fault/Code/Subcode/Value
     * as the fault code from the WSSecurityException.
     */
    private SoapFault createSoapFault(SoapVersion version, WSSecurityException e) {
        SoapFault fault;
        javax.xml.namespace.QName faultCode = e.getFaultCode();
        if (version.getVersion() == 1.1 && faultCode != null) {
            fault = new SoapFault(e.getMessage(), e, faultCode);
        } else {
            fault = new SoapFault(e.getMessage(), e, version.getSender());
            if (version.getVersion() != 1.1 && faultCode != null) {
                fault.setSubCode(faultCode);
            }
        }
        return fault;
    }
}
{noformat}","13/Nov/12 20:31;dkulp;
This is due to the URIMappingInterceptor.  

As a bit of history: this interceptor was added a very very long time ago to enable some basic ""rest style"" access to various SOAP services.   This pretty much predates all the ""real"" attempts of rest within CXF, even the old http-binding that has now been removed.  With JAX-RS, there is less value of this interceptor.  That said, I know it's used as we did provide fixes to it last year. CXF-3499  CXF-3480   CXF-2697

What I'd like to do to fix this is:

1) In WSS4JInInterceptor, set a flag to make sure the URIInInterceptor is bypassed (or remove the URIInInterceptor off the chain).   Port this back to 2.5/2.6

2) For 2.7.1/trunk, remove the URIInInterceptor off the default chain.  Leave the class in the codebase so a user could configure it in if they require it, marked @Deprecated.

3) At some point in the future, completely remove it.  With the JAX-RS support, we now have MUCH MUCH better ways of handling REST, even in conjunction with the SOAP endpoints.

Any concerns or other ideas?
","13/Nov/12 23:10;ffang;Thanks Dan for this clarification, I think you mean the URIMappingInterceptor.
And +1 for your suggestion.

Freeman

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Marshalling Error during asynchronous service invocation when adding a soap header using a SOAPHandler,CXF-4623,12615302,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,ffang,ralf.brese,ralf.brese,08/Nov/12 08:38,16/Jul/13 19:28,14/Mar/19 02:30,14/Nov/12 01:55,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,Core,,,,0,,,,,,,,"I am currently migrating a SOAP based client implementation from the JAX WS implementation included in Java 6 (Metro) to Apache CXF i.e. with Java 6 the code is fully functional but causes the described problem with Apache CXF 2.7.0.

The client uses asynchronous invocation of the WSDL services. When using synchronous invocation the code works fine.
The client uses a SOAPHandler to add a SOAP Header which contains some specific authentication information that is handled by the service.

The problem seems to be in the SoapOutInterceptor or at least in the handling of the SOAP header elements and the handling of the objects of the invocation.
In the method handleHeaderPart the SoapOutInterceptor retrieves a list of objects:
206: MessageContentsList objs = MessageContentsList.getContentsList(message);

This object list contains the parameter for the service call and in case of asynchronous invocation it contains also the callback object.
Afterwards when processing the headers in a loop the following check is done:
221: if (part.getIndex() >= objs.size()) {
222:  // The optional out of band header is not a part of parameters of the method
223:  continue;
224: }

The index of the header that has been added is 1. In case of the synchronous invocation the continue statement is executed because the objs variable only contains the one object that has been passed to the method. But in case of the asynchronous invocation the objs also contains the callback object and hence the continue statement is not executed but the SoapOutInterceptor tries to marshal the callback object which of cause fails.

Since my Client needs to use asynchronous message invocation for scalability reasons this problem is a blocking point for me and it would be of great help if even a workaround is available.




Here is the complete Exception stack:

08.11.2012 09:07:49 org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNUNG: Interceptor for {http://symphonia.siemens.com/contactservice/generated/interf}Contactservice_Service#{http://symphonia.siemens.com/contactservice/generated/interf}findContactByName has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Marshalling Error: com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler is not known to this context
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:263)
	at org.apache.cxf.jaxb.io.DataWriterImpl.write(DataWriterImpl.java:168)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleHeaderPart(SoapOutInterceptor.java:242)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.writeSoapEnvelopeStart(SoapOutInterceptor.java:164)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:81)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:61)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:531)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:457)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:435)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invokeAsync(JaxWsClientProxy.java:267)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:132)
	at $Proxy33.findContactByNameAsync(Unknown Source)
	at com.siemens.ucsolutions.ucsoapsdk.ContactServiceDelegate.findContactByNameAsync(ContactServiceDelegate.java:483)
	at com.siemens.ucsolutions.ucsoapsdk.ContactServiceDelegateTest.testFindContactByNameAsync(ContactServiceDelegateTest.java:515)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: javax.xml.bind.MarshalException
 - with linked exception:
[javax.xml.bind.JAXBException: com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler is not known to this context]
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:317)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:161)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.writeObject(JAXBEncoderDecoder.java:595)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:238)
	... 30 more
Caused by: javax.xml.bind.JAXBException: com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler is not known to this context
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.reportError(XMLSerializer.java:214)
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.reportError(XMLSerializer.java:229)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:133)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:116)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl.serializeBody(ElementBeanInfoImpl.java:304)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:311)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:61)
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:462)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:314)
	... 33 more
Caused by: javax.xml.bind.JAXBException: com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler is not known to this context
	at com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl.getBeanInfo(JAXBContextImpl.java:585)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:130)
	... 39 more
09:07:49,694 ERROR [ContactServiceDelegateTest] handleResponse() Exception
java.util.concurrent.ExecutionException: org.apache.cxf.interceptor.Fault: Marshalling Error: com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler is not known to this context
	at org.apache.cxf.jaxws.JaxwsClientCallback$2.get(JaxwsClientCallback.java:99)
	at com.siemens.ucsolutions.ucsoapsdk.ContactServiceDelegateTest$3.handleResponse(ContactServiceDelegateTest.java:521)
	at com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler.handleResponse(BaseDelegateAsyncHandler.java:62)
	at org.apache.cxf.jaxws.JaxwsClientCallback.handleException(JaxwsClientCallback.java:87)
	at org.apache.cxf.interceptor.ClientOutFaultObserver.onMessage(ClientOutFaultObserver.java:59)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:331)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:531)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:457)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:435)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invokeAsync(JaxWsClientProxy.java:267)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:132)
	at $Proxy33.findContactByNameAsync(Unknown Source)
	at com.siemens.ucsolutions.ucsoapsdk.ContactServiceDelegate.findContactByNameAsync(ContactServiceDelegate.java:483)
	at com.siemens.ucsolutions.ucsoapsdk.ContactServiceDelegateTest.testFindContactByNameAsync(ContactServiceDelegateTest.java:515)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.apache.cxf.interceptor.Fault: Marshalling Error: com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler is not known to this context
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:263)
	at org.apache.cxf.jaxb.io.DataWriterImpl.write(DataWriterImpl.java:168)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleHeaderPart(SoapOutInterceptor.java:242)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.writeSoapEnvelopeStart(SoapOutInterceptor.java:164)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:81)
	at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:61)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	... 24 more
Caused by: javax.xml.bind.MarshalException
 - with linked exception:
[javax.xml.bind.JAXBException: com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler is not known to this context]
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:317)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:161)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.writeObject(JAXBEncoderDecoder.java:595)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:238)
	... 30 more
Caused by: javax.xml.bind.JAXBException: com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler is not known to this context
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.reportError(XMLSerializer.java:214)
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.reportError(XMLSerializer.java:229)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:133)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:116)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl.serializeBody(ElementBeanInfoImpl.java:304)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:311)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:61)
	at com.sun.xml.internal.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:462)
	at com.sun.xml.internal.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:314)
	... 33 more
Caused by: javax.xml.bind.JAXBException: com.siemens.ucsolutions.ucsoapsdk.BaseDelegateAsyncHandler is not known to this context
	at com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl.getBeanInfo(JAXBContextImpl.java:585)
	at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:130)
	... 39 more
",Tested in Eclipse Helios on Win 7,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-13 07:23:50.596,,,no_permission,,Unknown,,,,,,,,,,,255914,,,Tue Nov 13 07:52:31 UTC 2012,,,,,,0|i0fvt3:,90751,,,,,,,,"13/Nov/12 07:23;ffang;Hi,

You can only encounter this issue when use bare mode, that said, you have multiple parameters, the last one is the AsyncHandler.

The work around is to use wrapped mode, which means you only has one wrapped input parameter and won't see the AsyncHandler marshall issue.

I'm also working on the fix, should be coming soon...

Freeman","13/Nov/12 07:52;ffang;commit fix 
http://svn.apache.org/viewvc?rev=1408627&view=rev for trunk

@Ralf, 
You can try tomorrow's snapshot to verify this fix",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception at compilation when a 'space' character is present in maven local repository path,CXF-4620,12615200,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,hervbarr,hervbarr,07/Nov/12 17:41,19/Dec/12 14:41,14/Mar/19 02:30,08/Nov/12 09:17,2.5.4,2.7,,,,,,2.5.7,2.6.4,2.7.1,,,,,,0,,,,,,,,"I had the following error when my maven local repository path contains a 'space' character (this is the case in Documents and Settings):

org.apache.cxf.tools.common.ToolException: org.apache.cxf.bus.extension.ExtensionException: Could not create object of extension class org.apache.cxf.catalog.OASISCatalogManager.
	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:308)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
	at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:113)
	at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:86)
	at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.generate(WSDL2JavaMojo.java:380)
	at org.apache.cxf.maven_plugin.AbstractCodegenMoho.execute(AbstractCodegenMoho.java:257)
	at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.execute(WSDL2JavaMojo.java:477)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.cxf.bus.extension.ExtensionException: Could not create object of extension class org.apache.cxf.catalog.OASISCatalogManager.
	at org.apache.cxf.bus.extension.Extension.load(Extension.java:222)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.loadAndRegister(ExtensionManagerImpl.java:199)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.getBeansOfType(ExtensionManagerImpl.java:303)
	at org.apache.cxf.bus.CXFBusImpl.getExtension(CXFBusImpl.java:99)
	at org.apache.cxf.tools.common.toolspec.AbstractToolContainer.getBus(AbstractToolContainer.java:191)
	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.processWsdl(WSDLToJavaContainer.java:173)
	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:142)
	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:300)
	... 25 more
Caused by: java.lang.IllegalArgumentException
	at java.net.URI.create(URI.java:841)
	at org.apache.cxf.catalog.OASISCatalogManager.loadCatalogs(OASISCatalogManager.java:147)
	at org.apache.cxf.catalog.OASISCatalogManager.loadContextCatalogs(OASISCatalogManager.java:133)
	at org.apache.cxf.catalog.OASISCatalogManager.<init>(OASISCatalogManager.java:73)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.apache.cxf.bus.extension.Extension.load(Extension.java:199)
	... 32 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:/D:/Documents and Settings/####/.m2/repository/org/apache/cxf/cxf-tools-wsdlto-frontend-jaxws/2.7.0/cxf-tools-wsdlto-frontend-jaxws-2.7.0.jar!/META-INF/jax-ws-catalog.xml
	at java.net.URI$Parser.fail(URI.java:2810)
	at java.net.URI$Parser.checkChars(URI.java:2983)
	at java.net.URI$Parser.parse(URI.java:3020)
	at java.net.URI.<init>(URI.java:577)
	at java.net.URI.create(URI.java:839)
	... 40 more",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-08 09:17:41.28,,,no_permission,,Unknown,,,,,,,,,,,255798,,,Thu Nov 08 09:17:41 UTC 2012,,,,,,0|i0fuzj:,90618,,,,,,,,"08/Nov/12 09:17;ffang;commit fix
http://svn.apache.org/viewvc?rev=1406958&view=rev for trunk
http://svn.apache.org/viewvc?rev=1406962&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1406970&view=rev for 2.5.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataSourceProvider is not closing inputstream acquired from DataSource,CXF-4618,12615015,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,shodecker,shodecker,06/Nov/12 19:39,19/Dec/12 14:38,14/Mar/19 02:30,08/Nov/12 17:13,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,JAX-RS,,,,0,,,,,,,,"When a REST method returns a DataSource, e.g.:

@GET
public DataSource getFile() { ...

...the CXF JAX-RS framework obtains an inputstream from the datasource but does  close the stream after use.  This is noticeable on windows environments for the case of a provided FileDataSource, since the underlying file cannot be deleted while this file handle remains open.

I've tracked down the problem to the writeTo() method of org.apache.cxf.jaxrs.provider.DataSourceProvider and will attach a proposed patch.



",Windows,,,,,,,,,,,,,,,,,,,06/Nov/12 19:40;shodecker;DataSourceProvider.java.patch;https://issues.apache.org/jira/secure/attachment/12552328/DataSourceProvider.java.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,255558,,,Tue Nov 06 19:40:10 UTC 2012,,,,,,0|i0fran:,90019,,,,,,,,06/Nov/12 19:40;shodecker;Proposed patch attached.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When creating DataContentHandler, defaultCommandMap should be considered.",CXF-4616,12614915,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ivywjhua,ivywjhua,06/Nov/12 07:57,19/Dec/12 14:38,14/Mar/19 02:30,12/Nov/12 20:01,2.6.3,,,,,,,2.6.4,2.7.1,,,,,,,0,,,,,,,,"When creating DataContentHandler, null may be returned from CXF's static CommandMap. DefaultCommandMap from *CommandMap.getDefaultCommandMap()* could also be used to create DataContentHandler. 
Because in RI implementation,xxx.*saaj.soap.AttachmentPartImpl*, 
Some static statement would add specific content handler to default CommandMap.
{code}
CommandMap localCommandMap = CommandMap.getDefaultCommandMap();
localMailcapCommandMap.addMailcap(""text/xml"" + str + ""xxx.saaj.soap.XmlDataContentHandler"");
{code}",,,,,,,,,,,,,,,,,,,,06/Nov/12 07:59;ivywjhua;AttachmentUtil.java.patch;https://issues.apache.org/jira/secure/attachment/12552236/AttachmentUtil.java.patch,09/Nov/12 06:42;ivywjhua;AttachmentUtilTest.java;https://issues.apache.org/jira/secure/attachment/12552781/AttachmentUtilTest.java,09/Nov/12 06:42;ivywjhua;AttachmentUtilWithoutAttachmentPartTest.java;https://issues.apache.org/jira/secure/attachment/12552782/AttachmentUtilWithoutAttachmentPartTest.java,12/Nov/12 08:27;ivywjhua;CommandMapImpactTest.java;https://issues.apache.org/jira/secure/attachment/12553087/CommandMapImpactTest.java,09/Nov/12 06:42;ivywjhua;EnhancedMailcapCommandMap.java;https://issues.apache.org/jira/secure/attachment/12552780/EnhancedMailcapCommandMap.java,,,5.0,,,,,,,,,,,,,,,,,,,,2012-11-07 21:45:34.093,,,no_permission,,Unknown,,,,,,,,,,,255427,,,Mon Nov 12 18:16:20 UTC 2012,,,,,,0|i0ervr:,84281,,,,,,,,"07/Nov/12 21:45;dkulp;Are you sure this will do what you need?

In my testing with the CXF test suite and a few other tests, the call to:

{code}
DataContentHandler dch = super.createDataContentHandler(mimeType);
{code}

in your patch never once returned null.  Especially for text/xml, text/plain, etc....  Thus, the default map would never have been consulted.    If I do:

{code}
        for (String mt : COMMAND_MAP.getMimeTypes()) {
            System.out.println(mt);
            for (CommandInfo ci : COMMAND_MAP.getAllCommands(mt)) {
                System.out.println(""  "" + ci.getCommandName() + ""  "" + ci.getCommandClass());
            }
        }  
{code}
I get:
{code}
image/*
  content-handler  org.apache.cxf.attachment.ImageDataContentHandler
message/rfc822
  content-handler  com.sun.mail.handlers.message_rfc822
multipart/*
  content-handler  com.sun.mail.handlers.multipart_mixed
text/plain
  content-handler  com.sun.mail.handlers.text_plain
  view  com.sun.activation.viewers.TextViewer
  edit  com.sun.activation.viewers.TextEditor
text/xml
  content-handler  com.sun.mail.handlers.text_xml
  view  com.sun.activation.viewers.TextViewer
  edit  com.sun.activation.viewers.TextEditor
text/html
  content-handler  com.sun.mail.handlers.text_html
  view  com.sun.activation.viewers.TextViewer
  edit  com.sun.activation.viewers.TextEditor
image/jpeg
  content-handler  org.apache.cxf.attachment.ImageDataContentHandler
  view  com.sun.activation.viewers.ImageViewer
image/gif
  content-handler  org.apache.cxf.attachment.ImageDataContentHandler
  view  com.sun.activation.viewers.ImageViewer
text/*
  view  com.sun.activation.viewers.TextViewer
  edit  com.sun.activation.viewers.TextEditor
{code}

which shows a content-handler for text/xml.   This is with the sun mail.jar on the classpath.  With the geronimo mail.jar, you get a similar map, but with geronimo class names.


In addition, if you are adding things into default map in a static initializer, you could just call AttachmentUtil.getCommandMap() and add things in there as well.


","08/Nov/12 08:38;ivywjhua;Thank you Daniel.

# When constructing MailcapCommandMap or its subclass, constructor would load resources from ""META-INF/mailcap"" which can be found from mail.jar. Therefore when mail.jar on the classpath, specific content-handlers are found and printed.If without mail.jar on the classpath, those content-handlers printed out cannot be found.
# There are different dataContentHandler implementations, such as
|RI|no config/static initializer from AttachmentPartImpl|
|javamail|load config from meta/mailcap|
|geronimo-mail|load config from meta/mailcap|
If without javamail or geronimo on classpath, there is only ImageDataContentHandler provided by cxf.
Content-handler provided by RI is preferred when mail.jar is not on the classpath.
Therefore, a new subclass of MailcapCommandMap is created to get defaultCommadMap configurations which have been filled by a static initializer in RI.
# There is a sequence issue between static initializer and adding things to AttachmentUtil.getCommandMap().
#* As it is a static initializer in RI(AttachmentPartImpl), static initializer is invoked by JVM and out of our control.
#* That is before static initializer execution, there is nothing in defaultCommandMap. And there is nothing to be added to AttachmentUtil.getCommandMap().
# Update EnhancedMailcapCommandMap and add two CommandMap test in attachments.
EnhancedMailcapCommandMap overrides getAllCommands(), getCommand(), getMimeTypes methods.

Please help to review my thoughts and code.







","09/Nov/12 16:20;dkulp;
Can I ask one more question for you to investigate:

CXF attachment support requires that the class javax.mail.internet.InternetHeaders is found on the classpath.  Without a mail jar (geronimo or the oracle version), any idea where that class is coming from in your case?

In our WHICH-JARS file, we specifically state that geronimo-javamail (or sun equivalent) is a REQUIRED jar.   I'm mostly curious where the InternetHeaders class is coming from if there isn't a mail jar there.  

","12/Nov/12 08:31;ivywjhua;Hi, Danidel, the whole application is running in OSGi environment, and those mail classes are imported. Due to well known issue for exposing META-INF directories in OSGi, those mailcap files are not discovered, then we add the hook to expose those files. The bad thing is that, the javamail version we used has some issues for handling the text/xml messages. 

After some investigation, I found that the RI SAAJ impl also tries to register the correct handlers in the default map explicitly (Not via expose mailcap files). In the current CXF codes, it will create a new map for the DataHandler (by default, the Default Map will be used), I am thinking that CXF may need to consider this situation. Let's say, some third-party (e.g. SAAI RI) will register their own handlers programmically, and CXF changed the handler map explicitly, it somewhat will ignore those handlers in the default map. That is why I would suggest to create an enhanced map for this, and it will be more compatibile in those application environments.

CommandMapImpactTest as attached is created under ""/cxf-api/src/test/java/org/apache/cxf/attachment/"" and CommandMap impact has been tested.
{code}

java mail on classpath 	jar:file:/D:/appdata/m2repo/org/apache/geronimo/specs/geronimo-javamail_1.4_spec/1.7.1/geronimo-javamail_1.4_spec-1.7.1.jar!/META-INF/mailcap
NewCommandMap:		content type is class java.lang.String
NewCommandMap:		dataContentHanlder type is class org.apache.geronimo.mail.handlers.XMLHandler

java mail on classpath 	jar:file:/D:/appdata/m2repo/org/apache/geronimo/specs/geronimo-javamail_1.4_spec/1.7.1/geronimo-javamail_1.4_spec-1.7.1.jar!/META-INF/mailcap
Default CommandMap:	content type is class javax.xml.transform.stream.StreamSource
Default CommandMap:	dataContentHanlder type is class com.sun.xml.internal.messaging.saaj.soap.XmlDataContentHandler

java mail on classpath 	jar:file:/D:/appdata/m2repo/org/apache/geronimo/specs/geronimo-javamail_1.4_spec/1.7.1/geronimo-javamail_1.4_spec-1.7.1.jar!/META-INF/mailcap
No explicit CommandMap:	content type is class javax.xml.transform.stream.StreamSource
No explicit CommandMap	dataContentHanlder type is class com.sun.xml.internal.messaging.saaj.soap.XmlDataContentHandler

{code}


","12/Nov/12 18:16;dkulp;
Ah.  OSGi....  that certainly explains a lot.  :-)   Sometimes I really find OSGi (and the differences between it an non-osgi runtimes) annoying.

Anyway, that analysis makes sense within OSGi when using some mail providers.  I'd likely want to check the servicemix specs version of the mail bundle to see if it handles the mailcaps better.   But that's just an aside.  

Thanks for the extra information.  Definitely helps understand the environment that is causing the issues.  


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuthRequestFilter.java should ignore HTTP OPTIONS verb,CXF-4615,12614860,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,tippettssh,tippettssh,05/Nov/12 22:13,10/Apr/17 19:07,14/Mar/19 02:30,16/Nov/12 09:50,2.6.2,2.7,,,,,,,,,,JAX-RS Security,,,,0,,,,,,,,"In handleRequest of OAuthRequestFilter.java at line 54 something similar to the following should be added:

if (((String)m.get(Message.HTTP_REQUEST_METHOD)).equals(""OPTIONS"")) return null;

This will skip any HTTP OPTIONS verb requests. I'm getting the OPTIONS verb request when using an OAuth 2 javascript client.

I haven't found a way in the configuration to specify that OPTIONS requests should skip this filter.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-05 22:23:04.284,,,no_permission,,Unknown,,,,,,,,,,,255358,,,Fri Nov 16 09:50:12 UTC 2012,,,,,,0|i0era7:,84182,,,,,,,,"05/Nov/12 22:23;sergey_beryozkin;Hmm, should CORS filter be sitting in front of OAuthFilter and managing OPTIONS ?

http://cxf.apache.org/docs/jax-rs-cors.html","06/Nov/12 12:01;sergey_beryozkin;The only current limitation of using CrossOriginResourceSharingFilter with OAuth filter is that CORS filter will let the local preflight requests through, example, in cases when a service resource method is annotated with @Options and @LocalPreflight, but this still will be blocked by OAuth filter. 

I've updated the oauth filter to let OPTIONS request pass through only if it is a local preflight request:

http://svn.apache.org/viewvc?rev=1406106&view=rev

Can you please experiment with the latest code ?
      ",06/Nov/12 17:34;tippettssh;It looks like the fix works only when the CORS filter is used with the OAuth filter. Will the CORS filter be required now to use OAuth or are you planning an additional fix that works without the CORS filter?,"06/Nov/12 17:47;sergey_beryozkin;If OPTIONS request is not part of the browser doing CORS preflight then the filter can not just get OPTIONS pass by, right ? It could be an actual OAuth client trying to use OPTIONS and I guess we may have a case of a rogue client trying to use OPTIONS and the fact the JAX-RS are required to return a list of supported HTTP verbs in response to OPTIONS, thus, unless it is a local preflight, the filter has to block it, unless it is actually issued by a client whose access token can be validated.

If no CORS support is required (as in say with authorization code flow) then no CORS filter will be needed.

You do not have to use CORS filter at all if it seems like an extra headache :-), simply extend OAuthRequestFiler and override its handleRequest() and let the request proceed for OPTIONS, but if this OPTIONS is indeed part of CORS preflight then using the CORS filter is better because it will take care of preparing a proper preflight response, and generally speaking will not interfere with the actual OAuth flow.

Does it help ? 

","06/Nov/12 18:33;tippettssh;Thank you for your feedback. In order to make the CXF OAuth solution simple, I think you'll need to have a fix to this that doesn't involve the CORS filter or extending OAuthRequestFilter. Here's why I think this. My client is javascript in the browser and uses jQuery $.ajax to make the call to the OAuth resource server. The client provides the $.ajax call with the Authorization header information that includes the bearer token; however, for some reason jQuery first sends the OPTIONS request but without including the Authorization header. I'm guessing that this will be a problem for anyone using a javascript client.","06/Nov/12 18:40;sergey_beryozkin;> however, for some reason jQuery first sends the OPTIONS request but without including the Authorization header

AFAIK this is CORS preflight request. What do you expect to happen if OAuth filter will pass it through ? I think it will fail because no proper CORS response will be returned to the browser, or does it work if you modify the filter as you suggested ?","06/Nov/12 19:08;tippettssh;It does work when I modify the filter as suggested.  That said, I do have a filter in the chain that does the following:

public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    HttpServletRequest httpServletRequest = (HttpServletRequest) request;
    ((HttpServletResponse)response).addHeader(""Access-Control-Allow-Origin"", ""*"");
    ((HttpServletResponse)response).addHeader(""Access-Control-Allow-Methods"", ""PUT,POST,GET,OPTIONS"");
    ((HttpServletResponse)response).addHeader(""Access-Control-Allow-Headers"", ""Content-Type, Authorization"");
    chain.doFilter(request,response);
}

It is now occurring to me that this may be similar to what the CORS filter is doing. If so, then I just need to switch to it.
","06/Nov/12 21:35;sergey_beryozkin;OK, that explains it.

Please try CORS filter and see how it works for you (list it before OAuth one). IMHO using the filter may be a better option, it is expected to be CORS spec compliant, can be configured to manage preflights and is more effective in the case of OPTIONS. At the moment, what happens after the OAuth filter passes OPTIONS through, the runtime will try to find the resource method supporting OPTIONS, and because it is not there, it will attempt to build ""Allow"" headers from the internal info, and will return, and in fact this 'Allow' won't be of use because Access-Control-Allow-Methods is expected instead.





",06/Nov/12 22:33;tippettssh;Sorry for my ignorance. Thank you for your help. I'll add the CORS filter and remove the other and test your changes.,"12/Nov/12 13:09;sergey_beryozkin;Hi Steven, no problems at all, note that you can also have:

{code:java}
@OPTIONS
@LocalPreflight
public Response handlePreflightRequest() {
} 
{code}

if preferred. This code will specifically deal with analyzing the CORS OPTIONS request and preparing the response. This is a bit intrusive for the application code but allows to do the more sophisticated CORS Preflight processing which may not be possible by using the CORS filter only. Note I've updated OAuth filter to support the code above after you opened this JIRA.

Can I resolve it as Won't Fix or Not a Problem now ?
","15/Nov/12 22:51;tippettssh;Yes, go ahead and resolve it. Please note that I added the CORS filter without updating to your new code and my issue went away. In other words, I didn't test your new code. Sorry.","16/Nov/12 09:48;sergey_beryozkin;OK. Regarding the local preflight pass-through code in OAuth2 filter: I'll keep it there for a bit, may get rid of it in the future if the feedback from users will show that a local preflight mode is used rarely, thanks",16/Nov/12 09:50;sergey_beryozkin;I'm resolving it as Fixed due to a minor update I did to OAuth filter to let the local-preflight requests pass through,,,,,,,,,,,,,,,,,,,,,,,
"Error using role, tokenService and ValidationService when initialize client AccessTokenValidation.",CXF-4614,12614820,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,gbarthe,gbarthe,05/Nov/12 16:04,19/Dec/12 14:38,14/Mar/19 02:30,05/Nov/12 21:06,2.7,,,,,,,2.6.4,2.7.1,,,JAX-RS,,,,0,,,,,,,,"Hi,
We use AccessTokenService with validation. We use a validation service. If we add roles in UserSubject, when we create the object AccessTokenValidation.class whith AccessTokenValidatorClient, we have an exception when create the roles list.
We think it's because the POJO UserSubject is initialize with private List<String> roles = Collections.emptyList();

What do you think about this ?

Think
Guillaume","Linux 64 bits, java 7_u5 64 bits",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-05 16:11:33.249,,,no_permission,,Moderate,,,,,,,,,,,255294,,,Mon Nov 05 21:05:45 UTC 2012,,,,,,0|i0eqr3:,84096,,,,,,,,"05/Nov/12 16:11;sergey_beryozkin;Hi, can you please provide more info about the exception, thanks","05/Nov/12 16:39;sergey_beryozkin;OK, I've replaced ""Collections.emptyList()"" with ""new LinkedList()"" in UserSubject initialization code. Give it a try please when a new snapshot is available, thanks  ","05/Nov/12 17:21;gbarthe;I try with an ArrayList and LinkedList in the client validation side, it works.
Thanks for fixing. 

Do you know schedule for 2.7.1 ?

Guillaume

Jaxb vesion 2.2.5

This the stack trace before fixing :

nov. 05, 2012 5:11:05 PM org.apache.cxf.jaxrs.provider.JAXBElementProvider readFrom
Avertissement: java.lang.UnsupportedOperationException
	at java.util.AbstractList.add(AbstractList.java:148)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.sun.xml.bind.v2.runtime.reflect.Lister$CollectionLister.addToPack(Lister.java:305)
	at com.sun.xml.bind.v2.runtime.reflect.Lister$CollectionLister.addToPack(Lister.java:269)
	at com.sun.xml.bind.v2.runtime.unmarshaller.Scope.add(Scope.java:121)
	at com.sun.xml.bind.v2.runtime.property.ArrayERProperty$ReceiverImpl.receive(ArrayERProperty.java:213)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.endElement(UnmarshallingContext.java:538)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleEndElement(StAXStreamConnector.java:221)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:185)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:370)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:342)
	at org.apache.cxf.jaxrs.provider.JAXBElementProvider.unmarshalFromInputStream(JAXBElementProvider.java:248)
	at org.apache.cxf.jaxrs.provider.JAXBElementProvider.doUnmarshal(JAXBElementProvider.java:205)
	at org.apache.cxf.jaxrs.provider.JAXBElementProvider.readFrom(JAXBElementProvider.java:172)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBodyReader(JAXRSUtils.java:1141)
	at org.apache.cxf.jaxrs.client.AbstractClient.readBody(AbstractClient.java:470)
	at org.apache.cxf.jaxrs.client.WebClient.handleResponse(WebClient.java:960)
	at org.apache.cxf.jaxrs.client.WebClient.doResponse(WebClient.java:944)
	at org.apache.cxf.jaxrs.client.WebClient.doChainedInvocation(WebClient.java:894)
	at org.apache.cxf.jaxrs.client.WebClient.doInvoke(WebClient.java:761)
	at org.apache.cxf.jaxrs.client.WebClient.doInvoke(WebClient.java:748)
	at org.apache.cxf.jaxrs.client.WebClient.invoke(WebClient.java:355)
	at org.apache.cxf.jaxrs.client.WebClient.get(WebClient.java:490)
	at org.apache.cxf.rs.security.oauth2.filters.AccessTokenValidatorClient.validateAccessToken(AccessTokenValidatorClient.java:47)
	at org.apache.cxf.rs.security.oauth2.services.AbstractAccessTokenValidator.getAccessTokenValidation(AbstractAccessTokenValidator.java:106)
	at org.apache.cxf.rs.security.oauth2.filters.OAuthRequestFilter.handleRequest(OAuthRequestFilter.java:55)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:187)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:94)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:238)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:222)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:163)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:158)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:239)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:164)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:215)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:928)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:539)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:298)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)","05/Nov/12 21:05;sergey_beryozkin;Thanks for the confirmation, I'm resolving this JIRA then given that this is what I did, added LinkedList instead.
2.7.1 is probably few weeks away...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Token URI is missing ampersands,CXF-4613,12614814,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,tippettssh,tippettssh,05/Nov/12 15:38,19/Dec/12 14:38,14/Mar/19 02:30,05/Nov/12 16:01,2.6.2,2.7,,,,,,2.6.4,2.7.1,,,JAX-RS Security,,,,0,,,,,,,,"In ImplicitGrantService line 75 and 76 need to be changed from:
        sb.append(OAuthConstants.ACCESS_TOKEN).append(""="").append(token.getTokenKey());
        sb.append(OAuthConstants.ACCESS_TOKEN_TYPE).append(""="").append(token.getTokenType());

to:
        sb.append(""&"").append(OAuthConstants.ACCESS_TOKEN).append(""="").append(token.getTokenKey());
        sb.append(""&"").append(OAuthConstants.ACCESS_TOKEN_TYPE).append(""="").append(token.getTokenType());

in order to have a properly formed URI.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,255268,,,2012-11-05 15:38:39.0,,,,,,0|i0eqgv:,84050,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SAML assertion element is not imported into SecurityHeader document,CXF-4612,12614779,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,andreas_triebel,andreas_triebel,05/Nov/12 12:08,19/Dec/12 14:38,14/Mar/19 02:30,05/Nov/12 17:21,2.5.6,2.6.3,2.7,,,,,2.5.7,2.6.4,2.7.1,,JAX-WS Runtime,,,,0,patch,security,,,,,,"If org.apache.ws.security.saml.ext.SAMLCallback.setAssertionElement() is used to set the assertion element a DOMException exception is thrown in the policy handler using the assertion element.
This is due to a missing import of the SAML assertion into the SecurityHeader in org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder.addSignatureParts().

Stacktrace:
Caused by: org.w3c.dom.DOMException: WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
    at org.apache.xerces.dom.ParentNode.internalInsertBefore(ParentNode.java:351)
    at org.apache.xerces.dom.ParentNode.insertBefore(ParentNode.java:283)
    at org.apache.xerces.dom.NodeImpl.appendChild(NodeImpl.java:236)
    at org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder.insertAfter(AbstractBindingBuilder.java:190)
    at org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder.addSupportingElement(AbstractBindingBuilder.java:232)
    at org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder.addSignatureParts(AbstractBindingBuilder.java:698)
    at org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder.addSupportingTokens(AbstractBindingBuilder.java:2126)
    at org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler.doSignBeforeEncrypt(AsymmetricBindingHandler.java:144)
    at org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler.handleBinding(AsymmetricBindingHandler.java:98)
    at org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal.handleMessage(PolicyBasedWSS4JOutInterceptor.java:165)
    at org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal.handleMessage(PolicyBasedWSS4JOutInterceptor.java:89)
    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
    at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:531)
    at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:464)
    at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:367)
    at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:320)
    at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:89)
    at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134
    ... 18 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,255234,,,2012-11-05 12:08:37.0,,,,,,0|i0eq8v:,84014,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set jaxws.provider.interpretNullAsOneway as true by default,CXF-4611,12614764,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,viola.lu,viola.lu,05/Nov/12 09:44,19/Dec/12 14:41,14/Mar/19 02:30,08/Nov/12 20:53,2.6.2,2.7,,,,,,2.7.1,,,,JAX-WS Runtime,,,,0,,,,,,,,"Discussion about this jira in cxf user list: 
http://cxf.547215.n5.nabble.com/Re-Get-a-null-pointer-if-provider-returns-null-response-in-payload-message-mode-td5717406.html#a5717410
Now jaxws.provider.interpretNullAsOneway is set as false, this will result in null pointer exception if provider return null response. 
According to JAXWS spec :

5.1.1 Invocation
A Provider based service instance’s invoke method is called for each message received for the service.
When an invoke method returns null, it is considered that no response needs to be sent by service.

No response should be sent. 

So by default set it as true",,,,,,,,,,,,,,,,,,,,07/Nov/12 09:53;viola.lu;CXF4611.patch;https://issues.apache.org/jira/secure/attachment/12552448/CXF4611.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,255219,,,Wed Nov 07 09:53:45 UTC 2012,,,,,,0|i0eq4v:,83996,,,,,,,,"07/Nov/12 09:53;viola.lu;Here is the patch, pls review",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DOMSource is returned rather than StAXSource,CXF-4608,12614403,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,shawkins,shawkins,01/Nov/12 17:31,19/Dec/12 14:38,14/Mar/19 02:30,01/Nov/12 20:42,2.4.2,,,,,,,2.5.7,2.6.4,2.7.1,,Services,,,,0,,,,,,,,"A Service created from a WSDL that has doc literal wrapped operations will always return DOMSource regardless of the source type requested by the Dispatch.invoke method.

For example using a WSDL such as: http://www.xignite.com/xQuotes.asmx?WSDL, the following code highlights the issue with a class cast exception on the last line:

{code}
Service service = Service.create(wsdl, new QName(""http://www.xignite.com/services/"", ""XigniteQuotes""));
Dispatch<T> dispatch = wsdlService.createDispatch(new QName(""http://www.xignite.com/services/"", ""XigniteQuotesSoap""), StAXSource.class, Service.Mode.PAYLOAD);
QName opQName = new QName(""http://www.xignite.com/services/"", ""GetFundQuote"");
dispatch.getRequestContext().put(MessageContext.WSDL_OPERATION, opQName); 
StAXSource result = dispatch.invoke(someDoc);
{code}

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-01 18:48:36.183,,,no_permission,,Unknown,,,,,,,,,,,253727,,,Fri Nov 02 13:08:32 UTC 2012,,,,,,0|i0e4u7:,80546,,,,,,,,"01/Nov/12 18:48;dkulp;Can you try with a newer version of CXF?

I just added a system test to our test suite:

http://svn.apache.org/viewvc/cxf/trunk/systests/jaxws/src/test/java/org/apache/cxf/systest/dispatch/DispatchClientServerTest.java?r1=1404719&r2=1404718&pathrev=1404719

to test the StAXSource with the Dispatch and it works perfectly.   The returned value is a proper StAXSource.

",01/Nov/12 19:20;shawkins;This still failed for me when I updated to 2.7.0.  Does it matter that I'm using javax.xml.ws.Service.create vs. the unit test using new SoapService?,"01/Nov/12 19:36;dkulp;
Updated the test for that:

http://svn.apache.org/viewvc/cxf/trunk/systests/jaxws/src/test/java/org/apache/cxf/systest/dispatch/DispatchClientServerTest.java?r1=1404730&r2=1404731

and it still works fine.   Any chance you can create a full small testcase?  Preferably maven based.   I'm really not sure what would be causing any difference at this point.  :-(","01/Nov/12 19:43;dkulp;
Actually, was just able to reproduce it....  digging in.","01/Nov/12 19:46;dkulp;
It something in the code around setting the operation name.  If you instead do:

{code}
        dispatch.getRequestContext().put(""SOAPAction"",
                                         ""http://www.xignite.com/services/GetFundQuote"");
{code}

then it does work.    Still digging, but found a workaround.
","01/Nov/12 20:05;shawkins;It's the setting of the WSDL_OPERATION that seems to be causing the issue. On 2.4.6 and 2.7.0 even if I set the soapaction, as long as the wsdl_operation is set then I'll get the wrong result.","01/Nov/12 20:42;dkulp;
Fixes committed to the various branches.",01/Nov/12 22:22;shawkins;Thanks for the fix.  Is specifying just the soap action a suitable workaround for 2.4?,"02/Nov/12 13:08;dkulp;
It kind of depends on what you need from the WSDL.   If you just need the SOAPAction, then the action fix is definitely usable.   If you need more than that (primarily would be things like WS-Security Policy fragments or similar), then a deeper workaround would be needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-codegen-plugin doesn't works if Maven repository's path contain spaces,CXF-4606,12614055,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,ffang,beppegg,beppegg,30/Oct/12 17:36,19/Dec/12 14:38,14/Mar/19 02:30,08/Nov/12 09:17,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,Tooling,,,,0,maven,,,,,,,"I keep my Maven repository in its default location, C:/Users/Giuseppe Guarnieri/.m2/repository

I've set up a simple CXF-enabled project for building a demo client, copying the configuration directly from cxf site. In particular, I've configured the plugin as follows:

{code:xml}
<plugin>
   <groupId>org.apache.cxf</groupId>
   <artifactId>cxf-codegen-plugin</artifactId>
   <version>${cxf.version}</version>
   <executions>
      <execution>
         <id>generate-sources</id>
         <phase>generate-sources</phase>
         <configuration>
            <sourceRoot>${project.build.directory}/generated/cxf</sourceRoot>
            <wsdlOptions>
               <wsdlOption>
                    <wsdl>${basedir}/src/main/resources/wsdl/myservice.wsdl</wsdl>
               </wsdlOption>
            </wsdlOptions>
         </configuration>
         <goals>
            <goal>wsdl2java</goal>
         </goals>
      </execution>
   </executions>
</plugin>
{code}

but when I run ""mvn generate-sources"", I get:

{noformat}
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] org.apache.cxf.bus.extension.ExtensionException: Could not create object
of extension class org.apache.cxf.catalog.OASISCatalogManager.
Illegal character in opaque part at index 27: jar:file:/C:/Users/Giuseppe Guarni
eri/.m2/repository/org/apache/cxf/cxf-tools-wsdlto-frontend-jaxws/2.7.1-SNAPSHOT
/cxf-tools-wsdlto-frontend-jaxws-2.7.1-SNAPSHOT.jar!/META-INF/jax-ws-catalog.xml

[INFO] ------------------------------------------------------------------------
.....
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part
at index 27: jar:file:/C:/Users/Giuseppe Guarnieri/.m2/repository/org/apache/cxf
/cxf-tools-wsdlto-frontend-jaxws/2.7.1-SNAPSHOT/cxf-tools-wsdlto-frontend-jaxws-
2.7.1-SNAPSHOT.jar!/META-INF/jax-ws-catalog.xml
{noformat}

I think the culprit is the space in ""jar:file:/C:/Users/Giuseppe Guarnieri/...""","Windows 7 74bit, Maven 2.2.1, jvm 1.7.0_01",,,,,,,,,,,CXF-4620,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-30 19:46:54.348,,,no_permission,,Unknown,,,,,,,,,,,253180,,,Tue Nov 06 19:46:34 UTC 2012,,,,,,0|i0dc9j:,75916,,,,,,,,"30/Oct/12 19:46;gmazza;Hopefully this would be a minor fix (others would know better than I), but calling this a blocker is a bit much, and I suspect trying to fix this would raise other problems in CXF and/or libraries outside of CXF's control.

Why not join the overwhelming majority of us who don't put spaces in our user IDs, or failing that, reconfiguring your Maven repository to a non-default spaceless location?  If you keep spaces in your Maven repo location I think you're going to get headaches in many other Mavenized projects anyway, no matter what we do.

If I understand this bug report, you're saying that CXF and Maven should be able to work with any file path that is deemed valid by any operating system that supports Java, including directory paths that may have spaces, quotes, colons, commas, etc., in them.  Perhaps, but given the amount of effort that might take at the expense of other functionality (i.e., opportunity cost), and the user community that that would benefit (those who are contractually required to have spaces in their Maven repo path, i.e., probably nobody), I'm not sure it would be worth it.  But again, hopefully it might be a simple fix.","30/Oct/12 21:24;beppegg;Hi, sorry for miscategorization: I intended ""Blocker"" in the literal meaning, i.e. ""functionality unavailable"" - Code generation is impossible in such situation. I didn't mean that's a major fault in the application as a whole.

Again, I apologize. It's a minor glitch for sure. Neverthless, I've thought it could be useful to report it, in order to achieve an even better code quality in this excellent project

I indeed moved my repository to a non-spaced location, but I had to do that for the first time I've found such error, so it seemed to me it deserved to report. When I'm on a linux system I actually avoid spaces for my own, but company configured laptops don't always allows an high degree of configurability! :P

Thank you for your support!","31/Oct/12 03:54;ffang;If you can append full stack here, we probably can do a quick fix, that said, replace the space with something like ""%20"" , though not sure if the fix could be in CXF code base.

And yeah, I'm with Glen here, don't use space in the file path, as lots of software can't handle it well, and most of it can't be fixed inside CXF. So why not follow some best practice?","01/Nov/12 19:03;dkulp;As Freeman stated, we need the full stack trace (run mvn with -X -e flags to get all the information).   I tried reproducing it here with a space in my repo directory, but it worked fine.    I added:
{code:xml}
<localRepository>/Users/dkulp/.m2/repo w spaces</localRepository>
{code}

to my ~/.m2/settings.xml   and ran some projects and they all worked fine. ",06/Nov/12 13:21;lanx;I had the same problem when my repo was in user catalog under default windows directory C:/Documents and Settings/userName/.m2/repository,"06/Nov/12 15:11;beppegg;I moved my repository to a non-spaced path, built the project, then moved my repo back  to its previous location in order to generate a detailed log for attaching, but this time the compilation went fine.

I suppose it's an error that occurs just the first time you try to use CXF in such conditions...",06/Nov/12 19:46;lanx;Possibly but it is necesseary to check when spaces are in the directory name.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SortedMap is not returned when another unrelated method exists in the interface,CXF-4605,12613644,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,vasvir,vasvir,26/Oct/12 12:23,19/Dec/12 14:38,14/Mar/19 02:30,13/Nov/12 19:08,2.7,,,,,,,2.7.1,,,,Aegis Databinding,,,,0,,,,,,,," During testing of bug 4534 I stumbled upon the following behavior. Subsets of tests were passing when run standalone but failing when run in the full test suite.

So I have narrowed it down to one method that fails when another is uncommented in the interface.

Interface:
    // uncomment this for the next method to fail
    // public Map<String, Map<Integer, Integer>> testDirectComplexMapResult();

    // fail -- puts data into a hashmap instead of a SortedMap if the above is uncommented
    public Map<String, SortedMap<Integer, Integer>> testDirectComplexTreeMapResult();

Implementation:
    //@Override
    public Map<String, Map<Integer, Integer>> testDirectComplexMapResult() {
        final Map<String, Map<Integer, Integer>> result = new HashMap<String, Map<Integer, Integer>>();
        final TreeMap<Integer, Integer> map1 = new TreeMap<Integer, Integer>();
        map1.put(1, 3);
        result.put(""key1"", map1);
        return result;
    }

    @Override
    public Map<String, SortedMap<Integer, Integer>> testDirectComplexTreeMapResult() {
        final Map<String, SortedMap<Integer, Integer>> result = new HashMap<String, SortedMap<Integer, Integer>>();
        final TreeMap<Integer, Integer> map1 = new TreeMap<Integer, Integer>();
        map1.put(1, 3);
        map1.put(0, 2);
        result.put(""key1"", map1);
        return result;
    }

Client:
    @Test
    public void testDirectComplexTreeMapResult() {
        final Map map = TestServiceFactory.getService()
                .testDirectComplexTreeMapResult();
        log.info(map);
        for (final Object vmap : map.values()) {
            Assert.assertTrue(vmap instanceof SortedMap);
        }
    }
",Debian unstable / tomcat7 / opennjdk7,,,,,,,,,,,,,,,,,,,08/Nov/12 14:17;vasvir;ws-test-issue-4605.tgz;https://issues.apache.org/jira/secure/attachment/12552660/ws-test-issue-4605.tgz,26/Oct/12 13:00;vasvir;ws-test-issue-4605.tgz;https://issues.apache.org/jira/secure/attachment/12550959/ws-test-issue-4605.tgz,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-11-02 20:36:53.308,,,no_permission,,Unknown,,,,,,,,,,,251242,,,Wed Dec 05 13:41:46 UTC 2012,,,,,,0|i0baef:,63797,,,,,,,,26/Oct/12 13:00;vasvir;The attached project demonstrates the problem if you uncomment the other method in the interface,"02/Nov/12 20:36;dkulp;
This changes the generated schema a bit so likely not going to merge back","05/Nov/12 10:00;vasvir;Daniel,

Thanks again for the quick fix.

I can see that there is a apache-cxf-2.7.1-20121105.071034-21.tar.gz pre-release and the patch is 2 of November so I will try to test it later today...

One question: These schema changes you mentioned what implications do they have for older versions? For example what happens if I mix 2.7.1 server with 2.6.x clients. In that case I don't mind about SortedMap but I do care about plain maps behavior...

  Vassilis","05/Nov/12 16:09;dkulp;
If using Aegis on both sides, it really won't matter as Aegis doesn't actually use the schema.   The issue is if you have a client that has taken the WSDL and generated JAXWS/JAXB code based on the WSDL.  With the new code, a separate type is generated for the sorted maps compared to the non-sorted (and a couple others).   HOWEVER, this is likely not an issue as the schema for the old case was actually invalid.   It was generating two ""int2intMap"" types into the schema.  Two types, same name.   Not valid.  It would now have an int2intMap (for the non-sorted case) and an int2intSortedMap to differentiate them.
","08/Nov/12 13:36;vasvir;Thanks a bunch as usual,

I tested it with 2.7.1 snapshot 20121107 and it passes the provided test. However it still fails our internal test-suite. The only reason I bringing it up here and not another bug is that the one failure is a regression. If you want me to open it as new issue please tell me so.

So the purpose of the tests is to test inheritance of complex maps. So here are the objects we are trying pass through...

    public class ComplexMapResult extends
            HashMap<String, Map<Integer, Integer>> {
    }


 public class ComplexTreeMapResult extends
            HashMap<String, TreeMap<Integer, Integer>> {
    }


The interface is 
    // fail returns null map value in cxf-2.3.3
    // works in cxf-2.6.2
    // fails with exceptions in 2.7.1
    public ComplexMapResult testComplexMapResult();

    // this was always failing...
    public ComplexTreeMapResult testComplexTreeMapResult();

The server side code (implementation) is

    @Override
    public ComplexMapResult testComplexMapResult() {
        final ComplexMapResult result = new ComplexMapResult();
        final Map<Integer, Integer> map1 = new HashMap<Integer, Integer>();
        map1.put(1, 3);
        result.put(""key1"", map1);
        return result;
    }

    @Override
    public ComplexTreeMapResult testComplexTreeMapResult() {
        final ComplexTreeMapResult result = new ComplexTreeMapResult();
        final TreeMap<Integer, Integer> map1 = new TreeMap<Integer, Integer>();
        map1.put(1, 3);
        map1.put(0, 2);
        result.put(""key1"", map1);
        return result;
    }

The client side code is:

    @Test
    public void testComplexMapResult() {
        log.info(TestServiceFactory.getService().testComplexMapResult());
    }

    @Test
    public void testComplexTreeMapResult() {
        final Map map = TestServiceFactory.getService()
                .testComplexTreeMapResult();
        log.info(map);
        for (final Object vmap : map.values()) {
            Assert.assertTrue(vmap instanceof SortedMap);
        }
    }

I will update the test case...

           Vassilis","08/Nov/12 14:13;vasvir;Here are the exceptions I get

WARNING: Interceptor for {http://iface/}TestInterface#{http://iface/}testComplexMapResult has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Could not determine how to read type: {http://iface/}anyType2anyTypeHashMap
	at org.apache.cxf.aegis.databinding.XMLStreamDataReader.read(XMLStreamDataReader.java:58)
	at org.apache.cxf.aegis.databinding.XMLStreamDataReader.read(XMLStreamDataReader.java:36)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.getPara(DocLiteralInInterceptor.java:303)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:127)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:801)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1590)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1488)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1307)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:622)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:531)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:464)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:367)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:320)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:89)
	at org.apache.cxf.frontend.ClientProxy.invoke(ClientProxy.java:81)
	at $Proxy21.testComplexMapResult(Unknown Source)
	at client.TestClient.testComplexMapResult(TestClient.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.apache.cxf.aegis.DatabindingException: Could not determine how to read type: {http://iface/}anyType2anyTypeHashMap
	at org.apache.cxf.aegis.type.basic.ObjectType.readObject(ObjectType.java:125)
	at org.apache.cxf.aegis.type.basic.ObjectType.readObject(ObjectType.java:141)
	at org.apache.cxf.aegis.type.collection.MapType.readObject(MapType.java:92)
	at org.apache.cxf.aegis.AegisXMLStreamDataReader.read(AegisXMLStreamDataReader.java:83)
	at org.apache.cxf.aegis.databinding.XMLStreamDataReader.read(XMLStreamDataReader.java:51)
	... 43 more

INFO: client.TestClient.testDirectComplexMapResult(TestClient.java:55): {key1={1=3}}
INFO: client.TestClient.testSortedMapResult(TestClient.java:70): {0=2, 1=3}

and

WARNING: Interceptor for {http://iface/}TestInterface#{http://iface/}testComplexTreeMapResult has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Could not determine how to read type: {http://iface/}anyType2anyTypeTreeMap
	at org.apache.cxf.aegis.databinding.XMLStreamDataReader.read(XMLStreamDataReader.java:58)
	at org.apache.cxf.aegis.databinding.XMLStreamDataReader.read(XMLStreamDataReader.java:36)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.getPara(DocLiteralInInterceptor.java:303)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:127)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:801)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1590)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1488)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1307)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:622)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:531)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:464)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:367)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:320)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:89)
	at org.apache.cxf.frontend.ClientProxy.invoke(ClientProxy.java:81)
	at $Proxy21.testComplexTreeMapResult(Unknown Source)
	at client.TestClient.testComplexTreeMapResult(TestClient.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.apache.cxf.aegis.DatabindingException: Could not determine how to read type: {http://iface/}anyType2anyTypeTreeMap
	at org.apache.cxf.aegis.type.basic.ObjectType.readObject(ObjectType.java:125)
	at org.apache.cxf.aegis.type.basic.ObjectType.readObject(ObjectType.java:141)
	at org.apache.cxf.aegis.type.collection.MapType.readObject(MapType.java:92)
	at org.apache.cxf.aegis.AegisXMLStreamDataReader.read(AegisXMLStreamDataReader.java:83)
	at org.apache.cxf.aegis.databinding.XMLStreamDataReader.read(XMLStreamDataReader.java:51)
	... 43 more
","08/Nov/12 14:17;vasvir;I cannot reproduce the exceptions with the update test case I attached but the results are still wrong. It returns null instead of the value map. Hope that helps

   Vassilis","12/Nov/12 22:35;dkulp;Just committed some more fixes for this.  I'd appreciate you testing tomorrows snapshots with it.

That said, you are rapidly getting out of our ""this is supported"" areas of Aegis.   Nothing in Aegis really is accounting for custom subclasses of the java Collections.   Passing the Generics through the various subclasses and interfaces is very complex and error prone so not something we really support.   Direct instances of the various collections that have their types directly declared there should be fine.   

That said, my commit MAY allow a lot more strange cases of Maps and such to work.  ","13/Nov/12 09:24;vasvir;Daniel,

Thanks a lot for your work on this. For sure I will test and report.

I understand the ""No this is not supported"" answer. What I am saying and have said in other bug reports and in the mailing is that Aegis can:

1) work ok (as you are trying to do)
2) complain (even at run time, better in deploy time) that this is not supported
3) fail silently by corrupting data (returning HashMap instead of SortedMap) or by returning null

What I am saying behavior #3 must be treated as a bug. Behavior #1, #2 are acceptable.

       Vassilis

","13/Nov/12 18:01;dkulp;
The problem is whether due to TypeErasure of the generics can we even detect #2 or not.   In your test case, CXF was detecting it to be a map of Object -> Object due to the erasure.   That IS ""supported"" as it is treated as an ""xsd:anyType"" and the value mapped to a DOM object.  Mostly what I'm trying to do is to traverse the various generics information that is available to see if we can determine the actual type or whether the actual type isn't available and we just get ""Object"" for the type.

I've just committed a couple more changes that will try and detect if the type erasure is resulting in ""Object"" (as opposed to just being ""Object"" to begin with) and log a warning.  ","05/Dec/12 13:41;vasvir;Hi there,

I finally find the time to test with the apache-cxf-2.7.1-20121204.070440-41.tar.gz. All our internal tests are passing now...

Thank you so much...

    Vassilis Virvilis",,,,,,,,,,,,,,,,,,,,,,,,,
Digital Signature using CXF 2.6.1 on Websphere 7,CXF-4603,12613577,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,ojas11,ojas11,25/Oct/12 22:06,07/Jun/16 23:57,14/Mar/19 02:30,22/Nov/12 14:37,2.6.1,,,,,,,2.5.7,2.6.4,2.7.1,,,,,,0,,,,,,,,"I am developing web service client and service with digital signature to sign soap message on Wesbphere 7 using CXF 2.6.1.

I have folllowed the instruction to make CXF working on Websphere by following link:
http://cxf.apache.org/docs/application-server-specific-configuration-guide.html#ApplicationServerSpecificConfigurationGuide-ForWebSphere6.1.0.29%2CV7andV8

The web service/client works fine without digital signature.

When I add settings related to digital signature in cxf-servlet.xml and cxf.xml and along with crypto properties the client fails with follwoing error. I also added all required jars for security:

Caused by: java.lang.ClassCastException: com.ibm.xml.crypto.dsig.dom.FactoryImpl incompatible with javax.xml.crypto.dsig.XMLSignatureFactory
	at javax.xml.crypto.dsig.XMLSignatureFactory.findInstance(XMLSignatureFactory.java:202)
	at javax.xml.crypto.dsig.XMLSignatureFactory.getInstance(XMLSignatureFactory.java:186)
	at org.apache.ws.security.message.WSSecSignature.init(WSSecSignature.java:128)
	at org.apache.ws.security.message.WSSecSignature.<init>(WSSecSignature.java:119)
	at org.apache.ws.security.action.SignatureAction.execute(SignatureAction.java:38)
	at org.apache.ws.security.handler.WSHandler.doSenderAction(WSHandler.java:205)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor.access$200(WSS4JOutInterceptor.java:52)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal.handleMessage(WSS4JOutInterceptor.java:260)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal.handleMessage(WSS4JOutInterceptor.java:136)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:532)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:464)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:367)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:320)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:89)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)
	... 39 more

Any idea why this error occurs when adding WS Security? Is there any work around for this issue?

Thanks,
Ojas
","Windows Websphere 7, CXF 2.6.1",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,Blocked on External,,,2012-10-26 12:52:24.704,,,no_permission,,Unknown,,,,,,,,,,,251133,,,Tue Jun 07 23:57:44 UTC 2016,,,,,,0|i0b4zj:,62920,,,,,,,,"26/Oct/12 12:52;gmazza;The CXF User's list instead of JIRA is the preferred place to ask questions.  Did you do this part: ""As described in the PDF, you'll need to change the Classloader order to ""Classes loaded with local class loader first (parent last)"" and to disable the IBM web services engine, either for the JVM as a whole or for the particular module""?  (It looks like CXF is being fed the wrong libraries.)  Are you using the Oracle or IBM JDK? (I don't know if Websphere allows the former) You might want to try deploying your web service on Tomcat (http://www.jroller.com/gmazza/entry/web_service_tutorial) to rule out the problem being with the web service itself.  ","26/Oct/12 13:36;dkulp;This might be slightly different.  The crypto things have a ""global"" registry which seems to cause issues with the IBM JDK.  You may need to stick the xmlsec library that CXF ships into the ""endorsed"" dir and remove it from your war/ear.   That would make sure the crypto providers that xmlsec provides are using the same classloader and other resources as the rest of the javax.xml.crypto systems. 

","26/Oct/12 15:25;ojas11;Glen,

I followed all the steps with classloader parent last and everything... The web service/client works fine without security... the issue is with WS-Security.

Daniel,
the global registry is java.security file under jre/lib folder. The IBM JRE loads 'com.ibm.xml.crypto.IBMXMLCryptoProvider' for DSIG. What is the CXF/WSS4J crypto provider? So that I can plug it in java.security file.

There is no endorsed folder in Websphere JRE but created one and placed the xmlsec.jar in it but still the same exception.
","30/Oct/12 10:04;coheigea;
This will be fixed in WSS4J 1.6.7 (WSS-410). You will have to call the static method WSSConfig.setAddJceProviders(false); before WSS4J gets initialized.

Colm.","03/Jun/16 13:01;nagarajchinni;Hi,
Is this issue resolved? We still see this error in WSSJ 1.6.19 version.",03/Jun/16 13:07;coheigea;Are you calling the static method WSSConfig.setAddJceProviders(false); before WSS4J gets initialized?,"03/Jun/16 13:38;nagarajchinni;yes. Tried that.
I created another issue for this as I thought issue 4603 is pretty old and is closed. 
New issue number: CXF-6931 (https://issues.apache.org/jira/browse/CXF-6931)  ","07/Jun/16 23:57;nagarajchinni;Colm, we solved this issue. Root cause was xmlsec jars had javax classes.  We used the xmlsec-2.0.0 jars and it worked.
We got the hint from the Santuario xmlsec jar issue https://issues.apache.org/jira/browse/SANTUARIO-358. I also noticed that latest CXF version 3.1.6 contains xmlsec-2.0.6.jar which doesn't contain the javax packages which is the real solution to this problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
An invalid WS-RM message to a robust WS-RM endpoint may lead to NPE,CXF-4601,12613469,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,25/Oct/12 10:28,19/Dec/12 14:41,14/Mar/19 02:30,25/Oct/12 12:27,2.6.3,,,,,,,2.5.7,2.6.4,2.7.1,,WS-* Components,,,,0,,,,,,,,"A WS-RM inbound configuration using the robust-oneway mode runs some fault handling code in its handleFault method. The change made by CXF-4505 that rejects invalid WS-RM messages will interfere with this current fault processing that does not ignore invalid WS-RM messages.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,251007,,,2012-10-25 10:28:30.0,,,,,,0|i0b37r:,62633,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Async HTTP may fail for large data due to a file caching issue,CXF-4599,12613258,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,24/Oct/12 09:22,19/Dec/12 14:38,14/Mar/19 02:30,24/Oct/12 10:36,2.7,,,,,,,2.7.1,,,,Transports,,,,0,,,,,,,,"This is an issue discovered while testing all the tests with the file caching option enforced. The read operation from the channel in CXFHttpAsyncRequestProducer is not filling the buffer correctly. As a result, it generates a corrupted output.

It relates to CXF-4592 but as this is unique to the async feature of 2.7.x, it is tracked separately in this ticket.",,,,,,,,,,,,,,CXF-4592,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,250716,,,2012-10-24 09:22:20.0,,,,,,0|i0b0db:,62170,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error resolving inline schema references ,CXF-4598,12613241,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,deki,deki,24/Oct/12 07:26,19/Dec/12 14:38,14/Mar/19 02:30,24/Oct/12 16:47,2.6.3,2.7,,,,,,2.6.4,2.7.1,,,Tooling,,,,0,,,,,,,,"This issue is similar to CXF-4487.

There were no problems or warnings generating the sources for the attached project with 2.5.6.

Warnings appear using 2.6.2:
{code}
[WARNING] C:\dev\cxf-4487\src\main\resources\wsdl\MyService.wsdl [10:13]: src-resolve.4.2: Error resolving component 'tld:PriceDocument'. It was detected that 'tld:PriceDocument' is in namespace 'http://cxf4487.dekies.de/david/tld', but components from this namespace are not referenceable from schema document 'file:/C:/dev/cxf-4487/src/main/resources/wsdl/MyService.wsdl#types1'. If this is the incorrect namespace, perhaps the prefix of 'tld:PriceDocument' needs to be changed. If this is the correct namespace, then an appropriate 'import' tag should be added to 'file:/C:/dev/cxf-4487/src/main/resources/wsdl/MyService.wsdl#types1'.
org.xml.sax.SAXParseException: src-resolve.4.2: Error resolving component 'tld:PriceDocument'. It was detected that 'tld:PriceDocument' is in namespace 'http://cxf4487.dekies.de/david/tld', but components from this namespace are not referenceable from schema document 'file:/C:/dev/cxf-4487/src/main/resources/wsdl/MyService.wsdl#types1'. If
this is the incorrect namespace, perhaps the prefix of 'tld:PriceDocument' needs to be changed. If this is the correct namespace, then an appropriate 'import' tag should be added to 'file:/C:/dev/cxf-4487/src/main/resources/wsdl/MyService.wsdl#types1'.
{code}

Starting with 2.6.3/ 2.7.0 the generation breaks the build:
{code}
[ERROR] Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.7.0:wsdl2java (wsdl-MyService.wsdl) on project generated-server: Execution wsdl-MyService.wsdl of goal org.apache.cxf:cxf-codegen-plugin:2.7.0:wsdl2java failed: Schema Error : src-resolve: Cannot resolve the name 'tld:PriceDocument' to a(n) 'element declaration' component. -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.7.0:wsdl2java (wsdl-MyService.wsdl) on project generated-server: Execution wsdl-MyService.wsdl of goal org.apache.cxf:cxf-codegen-plugin:2.7.0:wsdl2java failed: Schema Error : src-resolve: Cannot resolve the name 'tld:PriceDocument' to a(n) 'element declaration' component.
{code}","Windows 7, JDK 1.6",,,,,,,,,,,,,CXF-4487,,,,,,24/Oct/12 07:27;deki;cxf-4598-sampleproject.zip;https://issues.apache.org/jira/secure/attachment/12550597/cxf-4598-sampleproject.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-24 14:25:52.768,,,no_permission,,Unknown,,,,,,,,,,,250697,,,Wed Oct 24 14:25:52 UTC 2012,,,,,,0|i0b08n:,62149,,,,,,,,"24/Oct/12 14:25;dkulp;Seems to be an issue with the -validate flag.   Remove that and the build will pass.    It's still a bug, but that's at least a workaround.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequireClientCertificate is not validated,CXF-4595,12613089,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pellcorp,pellcorp,23/Oct/12 02:19,19/Dec/12 14:38,14/Mar/19 02:30,24/Oct/12 18:17,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,WS-* Components,,,,0,,,,,,,,"I can execute a web service which has a RequireClientCertificate=""true"" policy in the transport binding, the problem is that my client is not providing a certificate.",,,,,,,,,,,,,,,,,,,,23/Oct/12 02:39;pellcorp;PolicySample.tar.gz;https://issues.apache.org/jira/secure/attachment/12550403/PolicySample.tar.gz,23/Oct/12 23:53;pellcorp;patch.txt;https://issues.apache.org/jira/secure/attachment/12550554/patch.txt,23/Oct/12 07:36;pellcorp;patch.txt;https://issues.apache.org/jira/secure/attachment/12550420/patch.txt,,,,,3.0,,,,,,,,,,,,,,,,,,,,2012-10-23 08:25:08.881,,,no_permission,,Unknown,,,,,,,,,,,250489,,,Tue Oct 23 23:53:16 UTC 2012,,,,,,0|i0ayvj:,61923,,,,,,,,"23/Oct/12 02:39;pellcorp;Run the test case SecurityServiceTest, the test fails because no Policy Exception is returned even though i do have a RequireClientCertificate=""true""

","23/Oct/12 02:41;pellcorp;Related email trail

http://cxf.547215.n5.nabble.com/RequireClientCertificate-confusion-td5717199.html

I am happy to contribute a patch as discussed in the email, but I need some advice from the devs as to why the code is in TransportBindingPolicyValidator","23/Oct/12 04:54;pellcorp;The HttpsTokenInInterceptor is PRE-STREAM
The PolicyBasedWSS4JInInterceptor is PRE-PROTOCOL

So according to http://cxf.apache.org/docs/interceptors.html, the HttpsTokenInInterceptor executes first.  So TransportBindingPolicyValidator is definately
overriding what has already been set in HttpsTokenInInterceptor.

Should it not be ignoring anything that has already been checked by HttpsTokenInInterceptor?

In fact should the following code:

if (binding.getTransportToken() != null) {
                assertPolicy(aim, binding.getTransportToken());
                assertPolicy(aim, binding.getTransportToken().getToken());
            }

be removed from TransportBindingPolicyValidator????",23/Oct/12 06:05;pellcorp;To provide further clarification.  The binding.getTransportToken().getToken() returns the HttpsToken,"23/Oct/12 06:29;pellcorp;This is the code in HttpsTokenInInterceptor that does actually check for the client certificate.  And in my case, my debugging tells me that the setAsserted is false, which is a good thing, but then gets overriden.


TLSSessionInfo tlsInfo = message.get(TLSSessionInfo.class);                
                if (tlsInfo != null) {
                    if (token.isRequireClientCertificate()
                        && (tlsInfo.getPeerCertificates() == null 
                            || tlsInfo.getPeerCertificates().length == 0)) {
                        asserted = false;
                    }
                } else {
                    asserted = false;
                } 

                ai.setAsserted(asserted);

","23/Oct/12 07:15;pellcorp;I can see that the HttpsTokenOutInterceptor actually throwns an exception upon a policy error.  So should this bit of code be at the bottom of the the assertHttps in HttpsTokenInInterceptor?

if (!ai.isAsserted()) {
    throw new PolicyException(ai);
}


","23/Oct/12 07:36;pellcorp;proposed patch to HttpsTokenInInterceptor to behave like the HttpsTokenOutInterceptor.

I will add test cases around this patch if it is acceptable.  No point doing that until developers indicate the approach is ok.","23/Oct/12 08:25;coheigea;Hi Jason,

I don't like the approach you've taken in the patch - the HttpsTokenInInterceptor should not throw an exception in case there are other policy alternatives that may work.

I think the best approach is just to remove the assertPolicy(aim, binding.getTransportToken().getToken()); line from the TransportBindingPolicyValidator.

Colm.",23/Oct/12 08:35;pellcorp;cool i will provide patch and test cases for option you have indicated,23/Oct/12 23:53;pellcorp;Patch based on Colm feedback plus system test,,,,,,,,,,,,,,,,,,,,,,,,,,
Incompatible fault type is generated in the wsdl if no setter method in Exception,CXF-4594,12613088,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,irisding,irisding,23/Oct/12 02:12,19/Dec/12 14:38,14/Mar/19 02:30,16/Nov/12 09:01,2.7,,,,,,,2.5.7,2.6.4,2.7.1,,JAXB Databinding,,,,0,patch,,,,,,," with the exception class below , it only has a get*** method for the
info property.

@WebFault
public TestException extends Exception {
     private String message = null;

    public TestException () {
    }

    public TestException (String message) {
        this.message = message;
    }

    public String getInfo() {
        return message;
    }

}

With the RI wsgen command, the generated schema type is :
RI:
<xs:complexType name=""TestException"">
    <xs:sequence>
      <xs:element name=""info"" type=""xs:string"" minOccurs=""0""/>
      <xs:element name=""message"" type=""xs:string"" minOccurs=""0""/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>

If using CXF tool or on the CXF runtime, the generated schema type for the
exception is :

<xs:element name=""TestException"" type=""tns:TestException""/>
<xs:complexType name=""TestException"">
<xs:sequence/>
</xs:complexType>

With the JaxWS spec, 3.7 Service Specific Exception, considering that no
getFaultInfo or faultBean in WebFault annotation is provided, the
special algorithm will be used to map the exception to jaxb bean, one of
the steps write below:

For each getter in the exception and its superclasses, a property of the
same type and name is added to
the bean. All the getter methods except
getMessagefromjava.lang.Throwabletype hierarchy
are excluded from the list of getters to be mapped.

Seems that only getter method is required, with the current codes in static
boolean JAXBContextInitializer.isMethodAccepted, it will check whether the
setter exists. I am thinking that this is not required for this scenario,
as we only need to read the information from the user exception.

The patch will return true is the  getter method has no corresponding setter method to let CXF comply with the jax-ws 2.2 spec:
For each getter in the exception and its superclasses, a property of the
same type and name is added to
the bean. All the getter methods except
getMessagefromjava.lang.Throwabletype hierarchy
are excluded from the list of getters to be mapped.",,,,,,,,,,,,,,,,,,,,13/Nov/12 09:19;ffang;CXF-4594-test.patch;https://issues.apache.org/jira/secure/attachment/12553289/CXF-4594-test.patch,15/Nov/12 02:46;irisding;CXF-4594-testnew.patch;https://issues.apache.org/jira/secure/attachment/12553608/CXF-4594-testnew.patch,14/Nov/12 06:36;irisding;CXF-4594.patch;https://issues.apache.org/jira/secure/attachment/12553462/CXF-4594.patch,,,,,3.0,,,,,,,,,,,,,,,,,,,,2012-10-23 03:39:08.358,,,no_permission,,Unknown,,,,,,,,,,,250488,,,Fri Nov 16 09:01:02 UTC 2012,,,,,,0|i0ayvb:,61922,,,,,,,,23/Oct/12 02:13;irisding;Patch,"23/Oct/12 03:39;ffang;Hi,

Thanks for the patch.
A couple of quick issues I found so far, 
1. the patch break several checkstyle and PMD rules, 
2. moreover, it at least break org.apache.cxf.systest.ws.addr_fromjava.WSAFromJavaTest.

A patch shouldn't break any test and also should follow CXF checkstyle and PMD rules.
You generally should ensure have ""mvn clean install"" run successfully from the root pom

Freeman","23/Oct/12 04:10;ffang;Hi,

Take a close look at the logic from your patch, it doesn't follow what you wanna here.

Some outstanding issue, from your logic
1. any method without a counterpart setter would be accepted Method, like the java.lang.Object.wait
2. some special get method like java.lang.Object.getClass would be accepted Method
both are incorrect...

Freeman

","23/Oct/12 08:20;irisding;HI,Freeman,

Thanks a lot for your comments!
1. Need to fix this and I will provide a new patch later.
2. some special get method like java.lang.Object.getClass would be accepted Method --This should be there because per jax-ws 2.2 spec:
For each getter in the exception and its superclasses, a property of the same type and name is added to the bean. All the getter methods except getMessage from java.lang.Throwabletype hierarchy are excluded from the list of getters to be mapped.

we should have all getMethod mapped to bean, no matter it is defined in super class or not.


","23/Oct/12 08:40;ffang;Hi Iris, 

Most likely your jax-ws spec document isn't the latest one, what I read from this part is
For each getter in the exception and its superclasses, a property of the same type and name is added to the bean. The getCause, getLocalizedMessage and getStackTrace getters from java.lang.Throwable and the getClass getter from java.lang.Object are excluded from the list of getters to be mapped.

Obviously java.lang.Object.getClass() shouldn't get mapped.

FYI,  you can download the latest JAXWS 2.2 spec from here[1], it's Maintenance Release 3 
[1]http://download.oracle.com/otndocs/jcp/jaxws-2.2-mrel3-full-oth-JSpec/

Freeman","25/Oct/12 08:18;irisding;Hi Freeman,

Thanks a lot for your review and comments!

The new patch is read now. Pls help to review , Thanks a lot!

Iris Ding","29/Oct/12 02:09;irisding;Hi Freeman,

Would you please let me know whether there are any problems in the new patch? Thanks a lot for your time and review!

Iris Ding","29/Oct/12 02:38;ffang;Hi Iris,

Sorry I'm busy in other stuff.
I hope I can find some time to review it this week.
Thanks for this patch.

Freeman","29/Oct/12 06:00;ffang;Hi Iris,

Still another issue,  per the spec,
 The getCause, getLocalizedMessage and getStackTrace getters from java.lang.Throwable should be excluded from map, but your patch didn't match it, could you please revise your patch accordingly?

Thanks
Freeman","30/Oct/12 02:31;irisding;Hi Freeman,

The getCause, getLocalizedMessage and getStackTrace getters from java.lang.Throwable has already been excluded in the original logic of the method:

if (Modifier.isStatic(method.getModifiers()) 
             || method.isAnnotationPresent(XmlTransient.class)
-            || !Modifier.isPublic(method.getModifiers())) {
+            || !Modifier.isPublic(method.getModifiers())
+            || ""getClass"".equals(method.getName())) {
             return false;
         }
 
@@ -455,7 +456,14 @@
             || method.getDeclaringClass().equals(Throwable.class)) {
             return false;
         }

So we do not need to exclude them any more in the patch. 

Thanks a lot for your review!

Iris Ding

","30/Oct/12 04:33;ffang;Hi Iris,

Ah, I missed that part, sorry.

Take a closer look at this patch and more thoughts.
Your patch simply ignore the setter method, it might work for your case, which will generate expected schema in wsdl.
However, if do unmarsell when received message, missing a setter will cause problem.

Per jaxws spec 3.7, the related part is

For exceptions that do not match the pattern described in section 2.5, JAX-WS maps those exceptions to Java beans and then uses those Java beans as input to the JAXB mapping. The following algorithm is used to map non-matching exception classes to the corresponding Java beans for use with JAXB:
1. In the absence of customizations, the name of the bean is the same as the name of the Exception suffixed with “Bean”.
2. In the absence of customizations, the package of the bean is a generated jaxws subpackage of the SEI package. E.g. if the SEI package is com.example.stockquote then the package of the bean would be com.example.stockquote.jaxws.
3. For each getter in the exception and its superclasses, a property of the same type and name is added to the bean. The getCause, getLocalizedMessage and getStackTrace getters from java- .lang.Throwable and the getClass getter from java.lang.Object are excluded from the list of getters to be mapped.
4. The bean is annotated with a JAXB @XmlType annotation. If the exception class has a @XmlType annotation, then it is used for the fault bean’s @XmlType annotation. Otherwise, the fault bean’s @XmlType annotation is computed with name property set to the name of the exception and the namespace property set to the target namespace of the corresponding portType. Additionally, the @XmlType annotation has a propOrder property whose value is an array containing the names of all the properties of the exception class that were mapped in the previous bullet point, sorted lexico- graphically according to the Unicode value of each of their characters (i.e. using the same algorithm that the int java.lang.String.compareTo(String) method uses).
5. The bean is annotated with a JAXB @XmlRootElement annotation whose name property is set, in the absence of customizations, to the name of the exception.

So IMO Per the spec, need generate this java bean on the fly which is input to the JAXB mapping, this java bean will gather getters from customer exception and add setters accordingly, and this java bean is used for JAXB to do marshal/unmarsel.

Currently CXF in code first way, just use the custom exception as input to the JAXB maping, not generate the java bean on the fly, that's why setters can't be ignored. So if you wanna follow the JAXWS spec 3.7 exactly, you must create that java bean on the fly yourself.


Thanks
Freeman","12/Nov/12 02:25;irisding;Hi Freeman,

Thanks a lot for your review and comments. 

I have a look for the problem again and found if we used wsdl2java to generate client club classes, it works well. 
There will be issue if we use dynamic client which means we do not create any client stub classes before hand. In such case, in JAXBEncoderDecoder.unmarshallException() method it will fail because it will call the setter method to set the related valued for the Exception.
In such case, as client is only aware of the original Exception class so generating faultbean on the fly by ourself does not work. I propose below solution for this problem, would you please help to give your valuable comments for this?

In JAXBEncoderDecoder.unmarshallException() when there is no corresponding setter method: try to see whether the Exception class has related filed defined and if so, set the value of the field directly. If not, then just catch NoSuchMethodException and do nothing with the it--just ignore it.

Thanks & Best Regards,

Iris Ding
","12/Nov/12 04:22;ffang;Hi Iris,

Thanks for the patch.

However, first of all, what we're talking about here is code-first way, jaxws spec 3.x is all about code first way, what this issue try to resolve here is the code first fault bean problem.
And what I suggested is using the auto-generated java-bean both on client and server side, both for marshal and unmarshal.

What your suggest here might work, though not exactly follow the spec 3.7.
But, from your new patch I can't see any change related to JAXBEncoderDecoder you suggested here, did you miss it?

Freeman","13/Nov/12 01:31;irisding;Hi Freeman,

Thanks for your review. I just uploaded the patch for JAXBEncoderDecoder. Would you please give your comments for it. Thank you very much~


Iris Ding","13/Nov/12 02:14;ffang;Hi Iris,

Could you please create your patch against the latest trunk code, it's more easy for me to review and apply the patch? Also you can use something like
svn diff > CXF-4594.patch

to generate the patch, it's  useful when your patch include multiple files  and you can only append one patch file here.
Thanks
Freeman
","13/Nov/12 03:49;irisding;Hi Freeman,

Thanks a lot for your guidance. I have re-uploaded the patch: CXF-4594.patch. It is against 2.7 stream. Thanks!

Iris Ding","13/Nov/12 04:13;ffang;Hi,

No, your patch isn't against the latest trunk. With latest trunk code you should have
Utils.setMethodValue(m, m2, obj, o);
but not
setMethodValue(m, m2, obj, o);

You may need use ""svn update"" (or ""git fecth|git pull"" if you use git) to grasp the latest code.

Freeman",13/Nov/12 06:36;irisding;Patch,"13/Nov/12 06:37;irisding;Hi Freeman,

sorry for the inconvenience. patch is ready now. Thanks a lot for your review!

Iris Ding","13/Nov/12 09:10;ffang;Hi Iris,

Thanks for the patch, we can make further progress.
However, this patch still have issues, at least it doesn't marshall the property ""message"" in exception, so client catch the exception but use getInfo() can only return null.

As this jira is trying to resolve an issue which IMO isn't that straightforward, we'd better have a testcase to demonstrate this scenario and ensure everything works well.

I will attach a patch which include a testcase exactly describe the scenario tracked by this issue. And your patch should make the testcase I appended here pass.

Regards
Freeman

","13/Nov/12 09:19;ffang;Hi Iris,

Attached CXF-4594-test.patch.
You should ensure new added CodeFirstTest.testException() pass with your patch.

Freeman","13/Nov/12 13:29;irisding;Hi Freeman,

Thanks for your test patch and review.

The AddNumbersException does not follow javabean specification. Basically I just want to deal with the sitution that the getter method in Exception class has related private/protected/public field defined in the class.--follow javabean standard. For other cases, we just ignore it. If we want to extend the scope, it has so many situations:
1. the Exception does not have default non-arg construtor or String-arg constructor.
2. The getter method just return some systemp roperty such as system time which has no related field defined.
..

Our patch will have below benefits:
1. The generated WSDL is correct and will make all wsdl2java client works fine.
2. It has not decreased any current CXF fault processing function.

Thanks & Best Regards,

Iris Ding



 ","13/Nov/12 13:55;ffang;Hi Iris,

I'm a little bit confused, I just copy AddNumbersException as your TestException here which you described in this issue
{code}
@WebFault
public TestException extends Exception {
private String message = null;

public TestException () {
}

public TestException (String message) { this.message = message; }

public String getInfo() { return message; }

}
{code}

It should be exactly what you want, then please tell me what's the exception in your mind with this issue, show me the code please.

I hope this issue can really resolve the code first customer exception issue(some properties only have get but no set) during runtime, not only generate the wsdl you want. Moreover, we really can't apply a patch that can generate the a desired wsdl but the runtime actually doesn't work at all, that means the interface description and behavior isn't consistent.

If you are more care about the wsdl, you can simply add
@XmlAccessorType(XmlAccessType.FIELD)
for your exception class, actually this can also resolve the property marshall problem.

Freeman","13/Nov/12 14:33;irisding;Hi Freeman,

One typical scenario we want to support through this patch is as below, which has a private field and getter method defined but no setter method. And no related annotation defined(@XmlAccessorType(XmlAccessType.FIELD)).

@WebFault
public TestException extends Exception {
private String info = null;

public TestException () {
}

public TestException (String info) { this.info= info; }

public String getInfo() { return info; }

}

Sorry for the confusion and many thanks for your valuable time and review on this issue!

Iris Ding.","13/Nov/12 23:03;ffang;Hi Iris,

No, it still doesn't work, the property ""info"" can't get marshalled.
You can change my test patch and revise the Exception class whatever you want then run CodeFirstTest.testException(), you can see this problem.

We really need the test pass as it basically ensure the runtime works well.

Freeman","14/Nov/12 06:34;irisding;Hi Freeman,

It seems latest code has big change as I tested out on 2.6.2, both the marshal and unmarshal works fine and the test patch you provied works fine on 2.6.2 but does not work in 2.7. I have revised accordingly and the test patch and other test passed in latest code. I am now attaching the new patch. Thanks a lot for your review and time!

Iris Ding
","14/Nov/12 07:56;ffang;Hi Iris,

Thanks for the new patch.
Unfortunately your new change in org.apache.cxf.jaxb.Utils breaks the org.apache.cxf.systest.ws.addr_fromjava.WSAFromJavaTest in systests/ws-specs module,
Do you mind take another look?

Thanks
Freeman","14/Nov/12 08:29;irisding;Hi Freeman,

I have run all tests under systests\ws-specs and all 67 cases passed. How can we move on under such situation?  Thanks a lot!


Iris Ding


","14/Nov/12 08:50;ffang;Hi Iris,

I'd ask you run tests in eclipse or using mvn in command line?
I also encounter that in eclipse the test pass but actually not, because when run into ""assert false;"" , eclipse just ignore this error. But if you set break point in WSAFromJavaTest.testAddNumbersFault(), you can see what I mean.

If use mvn in command line, then what's your jdk version?
my env is
Apache Maven 3.0.4 (r1232337; 2012-01-17 16:44:56+0800)
Maven home: /Users/ffang/apache-maven-3.0.4
Java version: 1.7.0_07, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.7.0_07.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""mac os x"", version: ""10.7.4"", arch: ""x86_64"", family: ""mac""

I can get error like
Failed tests:   testAddNumbersFault(org.apache.cxf.systest.ws.addr_fromjava.WSAFromJavaTest)
  testAddNumbers3Fault(org.apache.cxf.systest.ws.addr_fromjava.WSAFromJavaTest)
And I also get same test failure with jdk6

Freeman
","14/Nov/12 09:42;irisding;Hi Freeman,

Thanks! I am running test in Eclipse and according to your guidance I can see the error now.

The error is because the case is have a 'detail' field and using our patch it will conflict with the built-in 'detail' element in soap response:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>Negative numbers can't be added!</faultstring><detail><ns1:AddNumbersException xmlns:ns1=""http://server.addr_fromjava.ws.systest.cxf.apache.org/""><detail xmlns:ns2=""http://server.addr_fromjava.ws.systest.cxf.apache.org/"">Numbers: -1, -1</detail></ns1:AddNumbersException></detail></soap:Fault></soap:Body></soap:Envelope>

so unmarshal fails for this situation. Can we think it is a bug for com.sun.xml.bind.v2.runtime.unmarshaller? Can we just modify our test case? 

Thanks a lot!

Iris Ding
","14/Nov/12 10:39;ffang;Hi Iris,

Good catch!

 But it's not bug in com.sun.xml.bind.v2.runtime.unmarshaller, it's the fact that client and server in WSAFromJavaTest.testAddNumbersFault() are using different Exception.
On client side, it use org.apache.cxf.systest.ws.addr_fromjava.client.AddNumbersException, which is generated from wsdl
{code}
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""AddNumbersException"")
@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2012-11-14T05:45:44+08:00"", comments = ""JAXB RI v2.2.6"")
public class AddNumbersException {
}
{code}
but on server side, it use org.apache.cxf.systest.ws.addr_fromjava.server.AddNumbersException, which is
{code}
public class AddNumbersException extends Exception {
    private static final long serialVersionUID = 4629689348515005826L;
    String detail;

    public AddNumbersException(String message, String detail) {
        super(message);
        this.detail = detail;
    }

    public String getDetail() {
        return detail;
    }
}
{code}
So on client side, it won't expect a detail element in AddNumbersException during unmarshalling.
We can't see this issue without your patch because before the ""detail"" property of org.apache.cxf.systest.ws.addr_fromjava.server.AddNumbersException can't get marshalled at all on server side.
Yeah, it's your patch reveal this issue. And I'd say change WSAFromJavaTest.testAddNumbersFault() to make client and server see same service model.

Thanks
Freeman","15/Nov/12 02:45;irisding;Hi Freeman,

Thanks a lot! I have modified org.apache.cxf.systest.ws.addr_fromjava.server.AddNumbersException to ignore detail and getDetail() method. 
I have attached the new test patch now. The WSAFromJavaTest.testAddNumbersFault() passed.

Iris Ding","15/Nov/12 05:45;ffang;Hi Iris,

Thanks for the patch.
But I'd like to fix WSAFromJavaTest in another way, that said, change wsdl which generate org.apache.cxf.systest.ws.addr_fromjava.client.AddNumbersException to add detail property, so that client and server see same service module.
I'll take care of it and will apply the patch soon.

Freeman","15/Nov/12 06:10;irisding;Hi Freeman,

Many Thanks! Very nice experience working with you and in my open source journey. 

Iris Ding","15/Nov/12 06:40;ffang;Iris,

No problem. Welcome to open source world!

Freeman",16/Nov/12 09:01;ffang;patch applied on behalf of Iris Ding with thanks
Some tests fail when CachedOutputStream's file caching is enforced,CXF-4592,12612929,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,22/Oct/12 09:06,19/Dec/12 14:38,14/Mar/19 02:30,24/Oct/12 09:25,,,,,,,,2.5.7,2.6.4,2.7.1,,Core,JAX-RS,Transports,,0,,,,,,,,"When the entire CXF build is executed with the CachedOutputStream's file caching mode practically enforeced (using -Dorg.apache.cxf.io.CachedOutputStream.Threahold=8), there are test errors in

rt/transport/local
systests/ws-rm
systests/transports
systests/jaxrs

",,,,,,,,,,,,,,CXF-4599,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,250255,,,Wed Oct 24 09:24:39 UTC 2012,,,,,,0|i0awlj:,61554,,,,,,,,24/Oct/12 09:24;ay;The async http specific issue is tracked separately in this ticket.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix @XmlTransient handling for exception types,CXF-4591,12612915,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,opalka,opalka,22/Oct/12 06:42,02/May/13 02:29,14/Mar/19 02:30,04/Dec/12 21:22,2.4.10,2.5.6,2.6.3,2.7,,,,2.5.7,2.6.4,2.7.1,,JAXB Databinding,,,,0,,,,,,,,"See JAXB 2.2 specification, Chapter 8.7.3 @XmlTransient",,,,,,,,,,,,,,,,,,,,04/Dec/12 10:36;opalka;CXF4591-rollback.patch;https://issues.apache.org/jira/secure/attachment/12555913/CXF4591-rollback.patch,22/Oct/12 06:43;opalka;CXF4591.patch;https://issues.apache.org/jira/secure/attachment/12550250/CXF4591.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,250239,,,Tue Dec 04 10:36:42 UTC 2012,,,,,,0|i0awgf:,61531,,,,,,,,"22/Oct/12 06:43;opalka;Proposed patch against

http://svn.apache.org/repos/asf/cxf/trunk@1400692
",04/Dec/12 09:24;opalka;I'm sorry but my previous patch was completely wrong. I interpreted XmlTransient handling the wrong way. Going to provide patch to remove this broken staff. Luckily this was not released in CXF yet :),04/Dec/12 10:36;opalka;Providing rollback patch. JAXB is responsible for @XmlTransient handling. CXF reuses JAXB RI.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-codegen-plugin: Error resolving component,CXF-4588,12612778,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,fastnsilver,fastnsilver,19/Oct/12 20:59,19/Dec/12 14:38,14/Mar/19 02:30,24/Oct/12 19:04,2.7,,,,,,,2.6.4,2.7.1,,,Tooling,,,,0,,,,,,,,"While it appeared that a fix was in place (as in CXF-4487), I am still having trouble generating classes from schema that have relative links in (e.g., <import schemaLocation=""../common/common_v1_0.xsd""). I get an exception, like this:

""Schema Error : src-resolve: Cannot resolve the name"".","Windows 7 x64, Maven 3.0.4, CXF 2.7.0, JDK 7",,,,,,,,,,,,,,,,,,,19/Oct/12 21:42;fastnsilver;spp-im-mui-ws-api.zip;https://issues.apache.org/jira/secure/attachment/12550087/spp-im-mui-ws-api.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,250038,,,Fri Oct 19 21:42:13 UTC 2012,,,,,,0|i0anyf:,60154,,,,,,,,19/Oct/12 21:28;fastnsilver;Attaching a simple project which is capable of reproducing the exception.  It is a Maven 3 project.,"19/Oct/12 21:30;fastnsilver;This is what I observe in a Windows cmd shell...

D:\workspaces\other\spp-im-mui-ws-api>mvn clean install
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building Example web service API 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
Downloading: http://maven.springframework.org/release/joda-time/joda-time/2.1/joda-time-2.1.pom
Downloading: http://gwtquery-plugins.googlecode.com/svn/mavenrepo/joda-time/joda-time/2.1/joda-time-2.1.pom
Downloading: http://csvjdbc.sourceforge.net/maven2/joda-time/joda-time/2.1/joda-time-2.1.pom
Downloading: http://mvp4g.googlecode.com/svn/maven2/releases/joda-time/joda-time/2.1/joda-time-2.1.pom
Downloading: http://maven.nuxeo.org/nexus/content/groups/public/joda-time/joda-time/2.1/joda-time-2.1.pom
Downloaded: http://maven.nuxeo.org/nexus/content/groups/public/joda-time/joda-time/2.1/joda-time-2.1.pom (16 KB at 5.2 KB/sec)
Downloading: http://maven.springframework.org/release/joda-time/joda-time/2.1/joda-time-2.1.jar
Downloading: http://gwtquery-plugins.googlecode.com/svn/mavenrepo/joda-time/joda-time/2.1/joda-time-2.1.jar
Downloading: http://csvjdbc.sourceforge.net/maven2/joda-time/joda-time/2.1/joda-time-2.1.jar
Downloading: http://mvp4g.googlecode.com/svn/maven2/releases/joda-time/joda-time/2.1/joda-time-2.1.jar
Downloading: http://maven.nuxeo.org/nexus/content/groups/public/joda-time/joda-time/2.1/joda-time-2.1.jar
Downloaded: http://maven.nuxeo.org/nexus/content/groups/public/joda-time/joda-time/2.1/joda-time-2.1.jar (558 KB at 117.5 KB/sec)
[INFO]
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ ws-api ---
[INFO]
[INFO] --- cxf-codegen-plugin:2.7.0:wsdl2java (default) @ ws-api ---
Loading FrontEnd jaxws ...
Loading DataBinding jaxb ...
wsdl2java -d D:\workspaces\other\spp-im-mui-ws-api\target\generated-sources\java -b file:/D:/workspaces/other/spp-im-mui-ws-api/build/wsdl/jaxb-bindings.xml -validate -impl -verbos
e file:/D:/workspaces/other/spp-im-mui-ws-api/build/wsdl/virtual_v1_0.wsdl
wsdl2java - Apache CXF 2.7.0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 18.491s
[INFO] Finished at: Fri Oct 19 14:27:33 PDT 2012
[INFO] Final Memory: 13M/256M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.7.0:wsdl2java (default) on project ws-api: Execution default of goal org.apache.cxf:cxf-codegen-plugin:2.7.0:wsdl
2java failed: Schema Error : src-resolve: Cannot resolve the name 'cmn:AssetOwnerNameType' to a(n) 'type definition' component. -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException
D:\workspaces\other\spp-im-mui-ws-api>","19/Oct/12 21:32;fastnsilver;One more comment.  If you fallback to CXF 2.6.2 in the attached project source, Maven will compile it successfully, albeit with warnings (and ugly stack traces).",19/Oct/12 21:42;fastnsilver;Updated,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signature Confirmation does not work with TransportBinding and EndorsingSupportingToken,CXF-4587,12612760,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,subapat,subapat,19/Oct/12 19:19,19/Dec/12 14:41,14/Mar/19 02:30,22/Oct/12 10:30,2.5.6,2.6.2,2.7,,,,,2.5.7,2.6.4,2.7.1,,WS-* Components,,,,0,,,,,,,,"This is based on the discussion in http://cxf.547215.n5.nabble.com/TransportBinding-and-SignatureConfirmation-td5715655.html. 

Signature Confirmation does not work on the client side, when the web service is secured by TransportBinding with EndorsingSupportingToken. 
The response from the server contains a Signature Confirmation element, and the response fails with the error:
Received a SignatureConfirmation element, but there are no stored signature values

Debugging through the CXF code, here's what is happening:

- After configuring the client, the WSS11Builder calls setRequireSignatureConfirmation(true) based on the policy (<sp:RequireSignatureConfirmation/>).

- In the constructor of AbstractBindingBuilder, it initializes the signatures array property with an empty array, and puts it in the message as follows:
message.getExchange().put(WSHandlerConstants.SEND_SIGV, signatures)

- In the TransportBindingHandler.handleEndorsingToken (line 300), it calls addSig, which eventually calls the doSignature. However, the signature is never added to the signatures array. (SymmetricBindingHandler and AsymmetricBindingHandler do a signatures.add)

- As a result when the service response comes to the WSS4JInInterceptor, it calls checkSignatureConfirmation in WSHandler, which retrieves the savedSignatures using
List<byte[]> savedSignatures = 
            (List<byte[]>) getProperty(reqData.getMsgContext(), WSHandlerConstants.SEND_SIGV);

- This array is empty, since the signature was never added by TransportBindingHandler. Therefore it throws the above exception.
",,,,,,,,,,,,,,,,,,,,19/Oct/12 19:23;subapat;patch.txt;https://issues.apache.org/jira/secure/attachment/12550060/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Advanced,,,,,,,,,,,250017,,,Fri Oct 19 19:23:15 UTC 2012,,,,,,0|i0ansv:,60129,,,,,,,,19/Oct/12 19:23;subapat;Patch is attached.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.w3c.dom.DOMException when sending soap11 request and returning soap12 response,CXF-4584,12612527,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,hanhongfang,hanhongfang,19/Oct/12 03:30,16/Jul/13 19:28,14/Mar/19 02:30,19/Oct/12 07:27,2.6.2,,,,,,,2.5.7,2.6.4,2.7.1,,,,,,0,,,,,,,,"I encoutered the following exception when sending soap11 request, and returning soap12 repsonse in Message mode:

org.w3c.dom.DOMException: HIERARCHY_REQUEST_ERR: An attempt was made to
insert a node where it is not permitted.",Windows 7 + Oracle jdk 1.6.0_29,,,,,,,,,,,,,,,,,,,19/Oct/12 03:39;hanhongfang;CXF-4584.patch;https://issues.apache.org/jira/secure/attachment/12549800/CXF-4584.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-19 07:27:34.494,,,no_permission,,Unknown,,,,,,,,,,,249712,,,Fri Oct 19 07:27:34 UTC 2012,,,,,,0|i0agmn:,58967,,,,,,,,"19/Oct/12 03:38;hanhongfang;I searched the mailing list and found similar issue and discussion here: http://comments.gmane.org/gmane.comp.apache.cxf.devel/4815

I'm migrating a app from axis2, and wish the app would work on cxf without modification. Thus I modified cxf class as Daniel Kulp's suggestion. The patch is attached, please help to review. Thanks in advance.","19/Oct/12 07:27;ffang;apply patch on behalf of Han Hong Fang with thanks
http://svn.apache.org/viewvc?rev=1399983&view=rev for trunk
http://svn.apache.org/viewvc?rev=1399985&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1399987&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1399988&view=rev for 2.4.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When the logical handler return false processing the outbound message, the SoapMessage's body is always empty.",CXF-4583,12612523,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,john xiao,john xiao,19/Oct/12 02:25,19/Dec/12 14:38,14/Mar/19 02:30,05/Dec/12 15:59,2.6.2,,,,,,,2.5.7,2.6.4,2.7.1,,JAX-WS Runtime,,,,0,handler,,,,,,,"According to the spec, when return false:
Normal message processing stops, close is called on each previously invoked handler in the chain, the message is dispatched.

So the message returned by endpoint should be dispatched to client, not always the empty body element.

In my case, the endpoint has built the soapMessage:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Header/>
  <soap:Body>
    <ns2:celsiusToFahrenheitResponse xmlns:ns2=""http://jaxws.samples.ibm.com/"">
      <return>116</return>
    </ns2:celsiusToFahrenheitResponse>
  </soap:Body>
</soap:Envelope>

but the client receives：
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Header/>
  <soap:Body/>
</soap:Envelope>

I find the LogicalHandlerOutInterceptor does not set the SoapMessage correct when the logicalHandler return false.
",,,,,,,,,,,,,,,,,,,,19/Oct/12 02:28;john xiao;CXF-4853.patch;https://issues.apache.org/jira/secure/attachment/12549795/CXF-4853.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-22 08:44:32.53,,,no_permission,,Unknown,,,,,,,,,,,249707,,,Mon Oct 22 15:58:05 UTC 2012,,,,,,0|i0aglj:,58962,,,,,,,,"19/Oct/12 02:28;john xiao;I also provide the patch for the issue,
Could you please review the patch?
Thanks a lot :)",22/Oct/12 03:00;john xiao;Could someone take a look at the issue and review the patch? Thank you very much.,"22/Oct/12 08:44;njiang;Hi Xiao Yi,

Thanks for reporting it and providing the patch.
I did some changed on the patch and also added an unit test to verify the patch.

Please try out the latest SNAPSHOT for verification.

Willem
","22/Oct/12 15:58;john xiao;Hi Willem, I verify the path, it works fine.
Thanks very much.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"cxf-codegen-plugin tries to generate code during m2e ""configuration"" build",CXF-4581,12612277,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,joshbeitelspacher,joshbeitelspacher,17/Oct/12 18:38,19/Dec/12 14:38,14/Mar/19 02:30,01/Nov/12 15:46,,,,,,,,2.6.4,2.7.1,,,Tooling,,,,0,,,,,,,,"In order to configure the workspace, m2e runs a ""configuration"" build prior to any actual builds. During a ""configuration"" build plugins should only setup their additional source and resources directories and should not attempt to read or write any files in the workspace.

In many cases it is not a problem that code generation runs too soon, but if any input files to the code generation process are not available then the code generation will fail, the target/generated-sources/cxf directory will not be created, and the generated-sources directory won't be added to Eclipse classpath.",,,,,,,,,,,,,,,,,,,,31/Oct/12 20:41;joshbeitelspacher;0001-CXF-4581-Prevent-code-generation-during-m2e-incremen.patch;https://issues.apache.org/jira/secure/attachment/12551623/0001-CXF-4581-Prevent-code-generation-during-m2e-incremen.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-31 20:53:23.698,,,no_permission,,Unknown,,,,,,,,,,,249362,,,Thu Nov 01 15:46:51 UTC 2012,,,,,,0|i0a74v:,57429,,,,,,,,"17/Oct/12 18:43;joshbeitelspacher;As a workaround, it would be helpful to move the calls to MavenProject.addCompileSourceRoot() and MavenProject.addTestCompileSourceRoot() to the start of the Mojo's execute() method. This would ensure that the generated source directories are added to the Eclipse classpath.

I also opened an issue against m2e (https://bugs.eclipse.org/bugs/show_bug.cgi?id=392211), because plugins really need a way to be able to determine the difference between ""configuration"" builds and normal builds in order to ""do the right thing.""","31/Oct/12 20:41;joshbeitelspacher;The attached patch resolves the issue by adding the generated sources to the classpath first and then aborting the build if no deltas are detected in the project.

m2e-compatible Maven plugins should really only operate on files within the project, but the CXF codegen plugin is capable of pulling files from arbitrary URLs (including classpath and http URLs). In this scenario ensuring that the build will be triggered at the appropriate times is not possible unless you write an m2e connector. This patch just stops the build from running at inappropriate times, but doesn't address the root problem.

However, I believe this patch should work well enough to satisfy most users. Users that configure CXF to use external resources just need to be aware that the codegen plugin will only be executed when a file within the project is updated or an Eclipse clean is run.","31/Oct/12 20:53;gmazza;quote: ""Users that configure CXF to use external resources just need to be aware that the codegen plugin will only be executed when a file within the project is updated or an Eclipse clean is run.""

The codegen plugin should be IDE-independent, so I think you mean an ""mvn clean"", not an ""mvn eclipse:clean"", right?  But the limitation that ""the codegen plugin will only be executed when a file within the project is updated"" seems too strict, because what if one of the externally referenced files change?  I would think Codegen should be detecting that and regenerating artifacts as a result.
","01/Nov/12 02:56;joshbeitelspacher;I should have been more clear in my comment. This change only affects incremental builds inside Eclipse. When building from the command line cxf-codegen-plugin will continue to check for changes in externally referenced files during every build.

When the cxf-codegen-plugin is called during an Eclipse incremental build, the cxf-codegen-plugin will also check for changes in externally referenced files. The problem is that changing one of the externally referenced files inside Eclipse won't actually trigger an increment build. The user has to touch a file or run ""Project -> Clean..."" in Eclipse to trigger a clean (which will immediately be followed by an automatic rebuild). The attached patch doesn't address this problem because there is no easy way to solve it. Instead of mentioning this issue in the comments I should probably have opened a new issue for it.

All the attached patch does is prevent the cxf-codegen-plugin from trying to generate code during the m2e configuration build. It shouldn't have any impact at all when mvn is run from the command line.",01/Nov/12 15:46;dkulp;Patch applied.  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InjectionUtils can not handle boolean properties with getters starting from 'is',CXF-4580,12612258,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,17/Oct/12 16:47,19/Dec/12 14:41,14/Mar/19 02:30,17/Oct/12 17:23,,,,,,,,2.5.7,2.6.4,2.7.1,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,249338,,,2012-10-17 16:47:13.0,,,,,,0|i0a6zb:,57404,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Exchange's out message is not set for recovered outbound WS-RM messages,CXF-4579,12612245,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,17/Oct/12 15:41,19/Dec/12 14:41,14/Mar/19 02:30,17/Oct/12 18:40,2.6.3,,,,,,,2.5.7,2.6.4,2.7.1,,WS-* Components,,,,0,,,,,,,,"When recovering outbound WS-RM messages from the storage for retransmission, the associated exchange object's outbound message is not set. This may result in NPE in some scenarios.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,249320,,,2012-10-17 15:41:30.0,,,,,,0|i0a6v3:,57385,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WADL to Java generator loses the namespace info for types from imported schemas,CXF-4573,12612046,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,16/Oct/12 14:52,08/Nov/12 17:14,14/Mar/19 02:30,17/Oct/12 09:59,,,,,,,,2.5.7,2.6,2.7.1,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,249006,,,2012-10-16 14:52:52.0,,,,,,0|i0a3g7:,56832,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GZIPOutInterceptor not negotiating first without compressing,CXF-4572,12612036,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,gmazza,gmazza,16/Oct/12 13:57,19/Dec/12 14:41,14/Mar/19 02:30,01/Nov/12 18:23,2.7,,,,,,,2.6.4,2.7.1,,,JAX-WS Runtime,,,,0,,,,,,,,"The GZIPOutInterceptor, like the Fast Infoset out interceptor, is supposed to negotiate first with the server prior to sending a compressed message as stated in the docs (http://cxf.apache.org/docs/annotations.html#Annotations-GZIP).  I.e. the first SOAP request, while containing the ""Accept-Encoding: gzip"" HTTP header, should still be uncompressed (only subsequent calls compressed) but it is still compressing the message with the first soap request.  This results in servers not configured for GZIP to raise can't parse errors.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-16 14:08:13.894,,,no_permission,,Unknown,,,,,,,,,,,248989,,,Wed Oct 17 14:43:43 UTC 2012,,,,,,0|i0a3br:,56812,,,,,,,,"16/Oct/12 14:08;sergey_beryozkin;This will also affect JAX-RS proxies.
The question is, if some payload is submitted with POST, how do we know if the intention is not to actually gzip the outgoing payload ?
Should we introduce a contextual property so that GZIP can also affect the original outgoing payload ?

","16/Oct/12 14:11;gmazza;Perhaps we can put in a ""force"" attribute similar to the FI interceptor that JAX-RS can use by default while allowing the negotiation to still occur with JAX-WS.",16/Oct/12 14:15;sergey_beryozkin;+1 to adding 'force',"17/Oct/12 14:43;gmazza;A simple test case can be made by taking the Double It tutorial[1], replacing two classes with those here[2], and then running mvn clean install tomcat:redeploy to deploy the server and mvn exec:exec from the client subdirectory to activate the SOAP client.  Wireshark will show the results.

[1] https://github.com/gmazza/blog-samples/tree/master/web_service_tutorial
[2] https://github.com/gmazza/blog-samples/tree/master/compressing_soap_messages/cxf-gzip
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.ws.rs.WebApplicationException when creating jaxrs:server under OSGi Blueprint,CXF-4571,12611998,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,ceefour,ceefour,16/Oct/12 09:11,09/Mar/13 13:25,14/Mar/19 02:30,23/Nov/12 15:38,2.7,,,,,,,2.7.1,,,,JAX-RS,OSGi,,,1,,,,,,,,"A relatively straightforward server:
{code}
<jaxrs:server id=""requireServer"" address=""/require"">
	<jaxrs:serviceBeans>
		<bean class=""org.soluvas.web.backbone.RequireResource"">
			<argument ref=""jsModules""/>
			<argument ref=""jsShims""/>
		</bean>
	</jaxrs:serviceBeans>
</jaxrs:server>
{code}

throws error like below.

Sample stacktrace:
{code}
2012-10-16 16:06:19,498 | ERROR | rint Extender: 2 | BlueprintContainerImpl           | container.BlueprintContainerImpl  375 | 7 - org.apache.aries.blueprint.core - 1.0.1 | Unable to start blueprint container for bundle org.soluvas.web.backbone
org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to intialize bean requireServer
        at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:714)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:824)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)[7:org.apache.aries.blueprint.core:1.0.1]
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_07]
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_07]
        at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:245)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:183)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:646)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:353)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:252)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.utils.threading.impl.DiscardableRunnable.run(DiscardableRunnable.java:48)[7:org.apache.aries.blueprint.core:1.0.1]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)[:1.7.0_07]
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_07]
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_07]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)[:1.7.0_07]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)[:1.7.0_07]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)[:1.7.0_07]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)[:1.7.0_07]
        at java.lang.Thread.run(Thread.java:722)[:1.7.0_07]
Caused by: org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.init(JAXRSServerFactoryBean.java:131)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.7.0_07]
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)[:1.7.0_07]
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.7.0_07]
        at java.lang.reflect.Method.invoke(Method.java:601)[:1.7.0_07]
        at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:297)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.invoke(BeanRecipe.java:958)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:712)[7:org.apache.aries.blueprint.core:1.0.1]
        ... 20 more
Caused by: javax.ws.rs.WebApplicationException
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)
        ... 28 more
{code}

Another error stacktrace:

{code}
2012-10-16 15:59:01,064 | ERROR | rint Extender: 3 | BlueprintContainerImpl           | container.BlueprintContainerImpl  375 | 7 - org.apache.aries.blueprint.core - 1.0.1 | Unable to start blueprint container for bundle id.co.bippo.app
org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to intialize bean .component-2
        at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:714)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:824)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)[7:org.apache.aries.blueprint.core:1.0.1]
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_07]
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_07]
        at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:245)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:183)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:646)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:353)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:252)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.utils.threading.impl.DiscardableRunnable.run(DiscardableRunnable.java:48)[7:org.apache.aries.blueprint.core:1.0.1]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)[:1.7.0_07]
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_07]
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_07]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)[:1.7.0_07]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)[:1.7.0_07]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)[:1.7.0_07]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)[:1.7.0_07]
        at java.lang.Thread.run(Thread.java:722)[:1.7.0_07]
Caused by: org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:66)
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:92)
        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:932)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:317)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:261)[karaf.jar:2.3.0]
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.7.0_07]
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)[:1.7.0_07]
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.7.0_07]
        at java.lang.reflect.Method.invoke(Method.java:601)[:1.7.0_07]
        at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:297)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.invoke(BeanRecipe.java:958)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:712)[7:org.apache.aries.blueprint.core:1.0.1]
        ... 20 more
Caused by: javax.ws.rs.WebApplicationException
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)
        ... 35 more

{code}

This error didn't happen in 2.6.2. Or at least didn't happen often.

All CXF bundles are active:

{code}
[2017] [Active     ] [Created     ] [       ] [   40] Apache CXF API (2.7.0)
[2018] [Active     ] [Created     ] [       ] [   40] Apache CXF Runtime Core (2.7.0)
[2019] [Active     ] [            ] [       ] [   40] Apache CXF Runtime Management (2.7.0)
[2020] [Active     ] [Created     ] [       ] [   40] Apache CXF Karaf Commands (2.7.0)
[2021] [Active     ] [Created     ] [       ] [   40] Apache CXF Runtime HTTP Transport (2.7.0)
[2133] [Active     ] [            ] [       ] [   40] Apache CXF Runtime XML Binding (2.7.0)
[2134] [Active     ] [            ] [       ] [   40] Apache CXF JAX-RS Extensions: Providers (2.7.0)
[2135] [Active     ] [            ] [       ] [   40] Apache CXF JAX-RS Extensions: Search (2.7.0)
[2136] [Active     ] [Created     ] [       ] [   40] Apache CXF Runtime JAX-RS Frontend (2.7.0)
[2138] [Active     ] [            ] [       ] [   40] Apache CXF Runtime JAXB DataBinding (2.7.0)
{code}","Karaf
  Karaf version               2.3.0
  Karaf home                  /home/ceefour/git/bippo-commerce5/karaf
  Karaf base                  /home/ceefour/git/bippo-commerce5/karaf
  OSGi Framework              org.apache.felix.framework - 4.0.3

JVM
  Java Virtual Machine        OpenJDK 64-Bit Server VM version 23.2-b09
  Version                     1.7.0_07
  Vendor                      Oracle Corporation
  Uptime                      8 minutes
  Total compile time          21.924 seconds
Threads
  Live threads                74
  Daemon threads              60
  Peak                        108
  Total started               205
Memory
  Current heap size           84,771 kbytes
  Maximum heap size           466,048 kbytes
  Committed heap size         263,360 kbytes
  Pending objects             0
  Garbage collector           Name = 'PS Scavenge', Collections = 43, Time = 0.272 seconds
  Garbage collector           Name = 'PS MarkSweep', Collections = 2, Time = 0.220 seconds
Classes
  Current classes loaded      8,882
  Total classes loaded        8,883
  Total classes unloaded      1
Operating system
  Name                        Linux version 3.2.0-31-generic
  Architecture                amd64
  Processors                  8
",,,,,,,,,,,,,CXF-4887,SMX4-1280,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-16 09:26:57.38,,,no_permission,,Unknown,,,,,,,,,,,248939,,,Fri Nov 23 15:38:20 UTC 2012,,,,,,0|i0a2lz:,56696,,,,,,,,"16/Oct/12 09:26;sergey_beryozkin;Can you replace servicemix jsr311 bundle with

{code:xml}
<dependency>
    <groupId>org.apache.servicemix.specs</groupId>
    <artifactId>org.apache.servicemix.specs.jsr339-api-m10</artifactId>
    <version>2.1.0</version>
</dependency>
{code}

and retry ?
","16/Oct/12 09:59;ceefour;I just tried with CXF 2.6.3 and it's working normally.

{code}
[2092] [Active     ] [Created     ] [       ] [   80] Soluvas.com CXF (1.0.0.SNAPSHOT)
[2168] [Active     ] [Created     ] [       ] [   40] Apache CXF API (2.6.3)
[2169] [Active     ] [Created     ] [       ] [   40] Apache CXF Runtime Core (2.6.3)
[2170] [Active     ] [            ] [       ] [   40] Apache CXF Runtime Management (2.6.3)
[2171] [Active     ] [Created     ] [       ] [   40] Apache CXF Karaf Commands (2.6.3)
[2172] [Active     ] [Created     ] [       ] [   40] Apache CXF Runtime HTTP Transport (2.6.3)
[2174] [Active     ] [            ] [       ] [   40] Apache CXF Runtime XML Binding (2.6.3)
[2175] [Active     ] [            ] [       ] [   40] Apache CXF JAX-RS Extensions: Providers (2.6.3)
[2176] [Active     ] [            ] [       ] [   40] Apache CXF JAX-RS Extensions: Search (2.6.3)
[2177] [Active     ] [Created     ] [       ] [   40] Apache CXF Runtime JAX-RS Frontend (2.6.3)
[2178] [Active     ] [            ] [       ] [   40] Apache CXF Runtime JAXB DataBinding (2.6.3)
{code}

my JAX-RS server:

{code}
[2052] [Active     ] [Created     ] [       ] [   80] Soluvas Web Backbone (1.0.0.SNAPSHOT)
{code}

Will try Sergey's suggestion in a minute...","16/Oct/12 10:08;ceefour;Sergey, it seems the bundle is already the version you suggested :

{code}
karaf@root> list -t 0 -l | grep org.apache.servicemix.specs.jsr339
[2186] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jsr339-api-m10/2.1.0
{code}
","16/Oct/12 10:11;ceefour;More complete cxf and servicemix bundles used by 2.7.0 configuration :

{code}
karaf@root> list -t 0 -s | grep -i cxf
[2196] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-api (2.7.0)
[2197] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-core (2.7.0)
[2198] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-management (2.7.0)
[2199] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.karaf.cxf-karaf-commands (2.7.0)
[2200] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-transports-http (2.7.0)
[2202] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-bindings-xml (2.7.0)
[2203] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-rs-extension-providers (2.7.0)
[2204] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-rs-extension-search (2.7.0)
[2205] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-frontend-jaxrs (2.7.0)
[2206] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-databinding-jaxb (2.7.0)
karaf@root> list -t 0 -s | grep -i servicemix
[  57] [Active     ] [            ] [       ] [   30] org.apache.servicemix.specs.activation-api-1.1 (2.1.0)
[1782] [Active     ] [            ] [       ] [   50] org.apache.servicemix.specs.jsr311-api-1.1.1 (2.0.0)
[1847] [Active     ] [            ] [       ] [   40] org.apache.servicemix.bundles.antlr-runtime (3.4.0.2)
[1848] [Active     ] [            ] [       ] [   40] org.apache.servicemix.bundles.stringtemplate (4.0.2.1)
[1850] [Active     ] [            ] [       ] [   50] org.apache.servicemix.bundles.antlr (2.7.7.5)
[1897] [Active     ] [            ] [       ] [   50] org.apache.servicemix.bundles.serp (1.13.1.4)
[1975] [Active     ] [            ] [       ] [   40] org.apache.servicemix.bundles.xpp3 (1.1.0.4c_6)
[1976] [Active     ] [            ] [       ] [   40] org.apache.servicemix.bundles.xstream (1.4.1.1)
[1984] [Active     ] [            ] [       ] [   40] org.apache.servicemix.bundles.commons-beanutils (1.8.3.1)
[1985] [Active     ] [            ] [       ] [   30] org.apache.servicemix.bundles.cglib (2.1.0.3_7)
[2035] [Active     ] [            ] [       ] [   30] org.apache.servicemix.bundles.aopalliance (1.0.0.6)
[2046] [Active     ] [            ] [       ] [   30] org.apache.servicemix.bundles.cglib (2.2.2.1)
[2182] [Active     ] [            ] [       ] [   10] org.apache.servicemix.specs.stax-api-1.0 (2.1.0)
[2183] [Active     ] [            ] [       ] [   10] org.apache.servicemix.specs.jaxb-api-2.2 (2.1.0)
[2184] [Active     ] [            ] [       ] [   10] org.apache.servicemix.specs.jaxws-api-2.2 (2.1.0)
[2185] [Active     ] [            ] [       ] [   10] org.apache.servicemix.specs.saaj-api-1.3 (2.1.0)
[2186] [Active     ] [            ] [       ] [   10] org.apache.servicemix.specs.jsr339-api-m10 (2.1.0)
[2190] [Active     ] [            ] [       ] [   20] org.apache.servicemix.bundles.jaxb-impl (2.2.1.1_2)
[2191] [Active     ] [            ] [       ] [   20] org.apache.servicemix.bundles.jaxb-xjc (2.2.1.1_2)
[2193] [Active     ] [            ] [       ] [   30] org.apache.servicemix.bundles.wsdl4j (1.6.2.6)
[2194] [Active     ] [            ] [       ] [   30] org.apache.servicemix.bundles.xmlresolver (1.2.0.5)
[2195] [Active     ] [            ] [       ] [   30] org.apache.servicemix.bundles.fastinfoset (1.2.7.4)
{code}

Similar config in CXF 2.6.2 & 2.6.3 is working perfectly, but throws exception in 2.7.0.","16/Oct/12 10:25;sergey_beryozkin;We have plenty of JAX-RS demos working in Talend distro with CXF 2.7.0, but that does not mean there has not been a regression which your bundle may be exposing...Can you please create a sample bundle that I can try in our distro ?

thanks

","06/Nov/12 13:51;sergey_beryozkin;Hi, have you had any progress on this issue ? I'd like to make sure the regression if any is found before 2.7.1 is out but I may need you helping me on it a bit, cheers","06/Nov/12 14:50;ceefour;We've been using 2.6.3. So haven't used CXF 2.7 at all.
","06/Nov/12 14:58;sergey_beryozkin;The only reason for a possible regression in 2.7.0 I'm aware of is the problem with CXF WS-Discovery server which does not accept JAX-RS registrations, that has been fixed on the trunk. Try 2.7.x when you get a chance - what I'm concerned about is that I do not know what the issue is in your case so it may persist. If you can reproduce the issue with some basic test bundle without having to share the actual application bundles then it would help...  ","06/Nov/12 17:13;ceefour;trying to reproduce the bug at :

https://github.com/ceefour/cxf-4571-bug

while doing this I noticed this:

{code}
karaf@root> start 105
Error executing command: Error starting bundles:
        Unable to start bundle 105: Uses constraint violation. Unable to resolve bundle revision com.hendyirawan.cxf4571bug.app [105.0] because it is exposed to package 'javax.ws.rs' from bundle revisions org.apache.servicemix.specs.jsr339-api-m10 [62.0] and org.apache.servicemix.specs.jsr311-api-1.1.1 [133.0] via two dependency chains.

Chain 1:
  com.hendyirawan.cxf4571bug.app [105.0]
    import: (&(osgi.wiring.package=javax.ws.rs)(version>=2.0.0)(!(version>=3.0.0)))
     |
    export: osgi.wiring.package=javax.ws.rs
  org.apache.servicemix.specs.jsr339-api-m10 [62.0]

Chain 2:
  com.hendyirawan.cxf4571bug.app [105.0]
    import: (osgi.wiring.package=org.soluvas.jaxrs)
     |
    export: osgi.wiring.package=org.soluvas.jaxrs; uses:=javax.ws.rs
  soluvas-jaxrs [132.0]
    import: (&(osgi.wiring.package=javax.ws.rs)(version>=1.1.0)(!(version>=2.0.0)))
     |
    export: osgi.wiring.package=javax.ws.rs
  org.apache.servicemix.specs.jsr311-api-1.1.1 [133.0]
{code}

Is it possible that jsr339-api-m10 conflicts with...?

org.apache.servicemix.specs.jsr311-api-1.1.1
","06/Nov/12 17:14;ceefour;the test app isn't running yet, the list of bundles so far:

{code}
karaf@root> list -s -t 0
START LEVEL 100 , List Threshold: 0
   ID   State         Blueprint      Level  Symbolic name
[   0] [Active     ] [            ] [    0] org.apache.felix.framework (4.0.3)
[   1] [Active     ] [            ] [    5] org.ops4j.pax.url.mvn (1.3.5)
[   2] [Active     ] [            ] [    5] org.ops4j.pax.url.wrap (1.3.5)
[   3] [Active     ] [            ] [    8] org.ops4j.pax.logging.pax-logging-service (1.7.0)
[   4] [Active     ] [            ] [    8] org.ops4j.pax.logging.pax-logging-api (1.7.0)
[   5] [Active     ] [            ] [   10] org.apache.felix.configadmin (1.4.0)
[   6] [Active     ] [            ] [   11] org.apache.felix.fileinstall (3.2.6)
[   7] [Active     ] [Created     ] [   20] org.apache.aries.blueprint.core (1.0.1)
[   8] [Active     ] [            ] [   20] org.apache.aries.util (1.0.0)
[   9] [Active     ] [            ] [   20] org.apache.aries.proxy.api (1.0.0)
[  10] [Active     ] [            ] [   20] org.objectweb.asm.all (4.0)
[  11] [Active     ] [            ] [   20] org.apache.aries.blueprint.api (1.0.0)
[  12] [Active     ] [            ] [   20] org.apache.aries.proxy.impl (1.0.0)
[  13] [Active     ] [Created     ] [   20] org.apache.aries.blueprint.cm (1.0.0)
[  14] [Active     ] [Created     ] [   25] org.apache.karaf.shell.console (2.3.0)
[  15] [Active     ] [Created     ] [   28] org.apache.karaf.deployer.blueprint (2.3.0)
[  16] [Active     ] [Created     ] [   28] org.apache.karaf.deployer.spring (2.3.0)
[  17] [Active     ] [Created     ] [   30] org.apache.karaf.shell.ssh (2.3.0)
[  18] [Active     ] [Created     ] [   30] org.apache.karaf.management.server (2.3.0)
[  19] [Active     ] [Created     ] [   30] org.apache.karaf.shell.commands (2.3.0)
[  20] [Active     ] [Created     ] [   30] org.apache.karaf.features.core (2.3.0)
[  21] [Active     ] [Created     ] [   30] org.apache.karaf.shell.log (2.3.0)
[  22] [Active     ] [Created     ] [   30] org.apache.karaf.features.command (2.3.0)
[  23] [Active     ] [Created     ] [   30] org.apache.karaf.diagnostic.management (2.3.0)
[  24] [Active     ] [            ] [   30] org.apache.sshd.core (0.8.0)
[  25] [Active     ] [Created     ] [   30] org.apache.karaf.deployer.wrap (2.3.0)
[  26] [Active     ] [            ] [   30] org.apache.mina.core (2.0.7)
[  27] [Active     ] [Created     ] [   30] org.apache.karaf.admin.command (2.3.0)
[  28] [Active     ] [Created     ] [   30] org.apache.karaf.diagnostic.command (2.3.0)
[  29] [Active     ] [            ] [   30] org.apache.aries.jmx.core (1.0.1)
[  30] [Active     ] [            ] [   30] org.apache.karaf.diagnostic.core (2.3.0)
[  31] [Active     ] [Created     ] [   30] org.apache.karaf.admin.management (2.3.0)
[  32] [Active     ] [            ] [   30] org.apache.aries.jmx.api (1.0.0)
[  33] [Active     ] [Created     ] [   30] org.apache.karaf.diagnostic.common (2.3.0)
[  34] [Active     ] [Created     ] [   30] org.apache.karaf.shell.dev (2.3.0)
[  35] [Active     ] [Created     ] [   30] org.apache.karaf.deployer.features (2.3.0)
[  36] [Active     ] [            ] [   30] org.apache.aries.jmx.blueprint.api (1.0.0)
[  37] [Active     ] [Created     ] [   30] org.apache.karaf.jaas.command (2.3.0)
[  38] [Active     ] [Created     ] [   30] org.apache.karaf.jaas.modules (2.3.0)
[  39] [Active     ] [Created     ] [   30] org.apache.karaf.shell.osgi (2.3.0)
[  40] [Active     ] [Created     ] [   30] org.apache.karaf.features.management (2.3.0)
[  41] [Active     ] [Created     ] [   30] org.apache.karaf.shell.packages (2.3.0)
[  42] [Active     ] [            ] [   30] org.apache.aries.jmx.blueprint.core (1.0.1)
[  43] [Active     ] [Created     ] [   30] org.apache.karaf.admin.core (2.3.0)
[  44] [Active     ] [Created     ] [   30] org.apache.karaf.deployer.kar (2.3.0)
[  45] [Active     ] [Created     ] [   30] org.apache.karaf.jaas.config (2.3.0)
[  46] [Active     ] [Created     ] [   30] org.apache.karaf.shell.config (2.3.0)
[  47] [Active     ] [Created     ] [   30] org.apache.karaf.management.mbeans.system (2.3.0)
[  48] [Active     ] [Created     ] [   30] org.apache.karaf.management.mbeans.bundles (2.3.0)
[  49] [Active     ] [Created     ] [   30] org.apache.karaf.management.mbeans.services (2.3.0)
[  50] [Active     ] [Created     ] [   30] org.apache.karaf.management.mbeans.config (2.3.0)
[  51] [Active     ] [Created     ] [   30] org.apache.karaf.management.mbeans.log (2.3.0)
[  52] [Active     ] [Created     ] [   30] org.apache.karaf.management.mbeans.packages (2.3.0)
[  53] [Active     ] [Created     ] [   30] org.apache.karaf.management.mbeans.dev (2.3.0)
[  54] [Active     ] [            ] [    9] org.apache.geronimo.specs.geronimo-osgi-registry (1.1)
[  55] [Active     ] [            ] [   10] org.apache.servicemix.specs.activation-api-1.1 (2.1.0)
[  56] [Active     ] [            ] [   10] org.apache.geronimo.specs.geronimo-annotation_1.0_spec (1.1.1)
[  57] [Active     ] [            ] [   10] org.apache.geronimo.specs.geronimo-ws-metadata_2.0_spec (1.1.3)
[  58] [Active     ] [            ] [   10] org.apache.servicemix.specs.stax-api-1.0 (2.1.0)
[  59] [Active     ] [            ] [   10] org.apache.servicemix.specs.jaxb-api-2.2 (2.1.0)
[  60] [Active     ] [            ] [   10] org.apache.servicemix.specs.jaxws-api-2.2 (2.1.0)
[  61] [Active     ] [            ] [   10] org.apache.servicemix.specs.saaj-api-1.3 (2.1.0)
[  62] [Active     ] [            ] [   10] org.apache.servicemix.specs.jsr339-api-m10 (2.1.0)
[  63] [Active     ] [            ] [   10] javax.mail (1.4.4)
[  64] [Active     ] [            ] [   20] stax2-api (3.1.1)
[  65] [Active     ] [            ] [   20] woodstox-core-asl (4.1.4)
[  66] [Active     ] [            ] [   20] org.apache.servicemix.bundles.jaxb-impl (2.2.1.1_2)
[  67] [Active     ] [            ] [   20] org.apache.servicemix.bundles.jaxb-xjc (2.2.1.1_2)
[  68] [Active     ] [            ] [   30] org.apache.ws.xmlschema.core (2.0.3)
[  69] [Active     ] [            ] [   30] org.apache.servicemix.bundles.wsdl4j (1.6.2.6)
[  70] [Active     ] [            ] [   30] org.apache.servicemix.bundles.xmlresolver (1.2.0.5)
[  71] [Active     ] [            ] [   30] org.apache.servicemix.bundles.fastinfoset (1.2.7.4)
[  72] [Active     ] [Created     ] [   40] org.apache.cxf.cxf-api (2.7.0)
[  73] [Active     ] [Created     ] [   40] org.apache.cxf.cxf-rt-core (2.7.0)
[  74] [Active     ] [            ] [   40] org.apache.cxf.cxf-rt-management (2.7.0)
[  75] [Active     ] [Created     ] [   40] org.apache.cxf.karaf.cxf-karaf-commands (2.7.0)
[  76] [Active     ] [            ] [   30] org.apache.geronimo.specs.geronimo-servlet_2.5_spec (1.1.2)
[  77] [Active     ] [            ] [   30] javax.mail (1.4.5)
[  78] [Active     ] [            ] [   30] org.apache.geronimo.specs.geronimo-jta_1.1_spec (1.1.1)
[  79] [Active     ] [            ] [   30] org.eclipse.jetty.util (7.6.7.v20120910)
[  80] [Active     ] [            ] [   30] org.eclipse.jetty.io (7.6.7.v20120910)
[  81] [Active     ] [            ] [   30] org.eclipse.jetty.http (7.6.7.v20120910)
[  82] [Active     ] [            ] [   30] org.eclipse.jetty.client (7.6.7.v20120910)
[  83] [Active     ] [            ] [   30] org.eclipse.jetty.continuation (7.6.7.v20120910)
[  84] [Active     ] [            ] [   30] org.eclipse.jetty.jmx (7.6.7.v20120910)
[  85] [Active     ] [            ] [   30] org.eclipse.jetty.server (7.6.7.v20120910)
[  86] [Active     ] [            ] [   30] org.eclipse.jetty.security (7.6.7.v20120910)
[  87] [Active     ] [            ] [   30] org.eclipse.jetty.servlet (7.6.7.v20120910)
[  88] [Active     ] [            ] [   30] org.eclipse.jetty.servlets (7.6.7.v20120910)
[  89] [Active     ] [            ] [   30] org.eclipse.jetty.xml (7.6.7.v20120910)
[  90] [Active     ] [            ] [   30] org.eclipse.jetty.webapp (7.6.7.v20120910)
[  91] [Active     ] [            ] [   30] org.eclipse.jetty.jndi (7.6.7.v20120910)
[  92] [Active     ] [            ] [   30] org.eclipse.jetty.plus (7.6.7.v20120910)
[  93] [Active     ] [            ] [   30] org.eclipse.jetty.websocket (7.6.7.v20120910)
[  94] [Active     ] [            ] [   30] org.ops4j.pax.web.pax-web-api (1.1.3)
[  95] [Active     ] [            ] [   30] org.ops4j.pax.web.pax-web-spi (1.1.3)
[  96] [Active     ] [            ] [   30] org.ops4j.pax.web.pax-web-runtime (1.1.3)
[  97] [Active     ] [            ] [   30] org.ops4j.pax.web.pax-web-jetty (1.1.3)
[  98] [Active     ] [            ] [   30] org.ops4j.pax.web.pax-web-extender-whiteboard (1.1.3)
[  99] [Active     ] [Created     ] [   40] org.apache.cxf.cxf-rt-transports-http (2.7.0)
[ 100] [Active     ] [            ] [   30] org.codehaus.jettison.jettison (1.3.2)
[ 101] [Active     ] [            ] [   40] org.apache.cxf.cxf-rt-bindings-xml (2.7.0)
[ 102] [Active     ] [            ] [   40] org.apache.cxf.cxf-rt-rs-extension-providers (2.7.0)
[ 103] [Active     ] [            ] [   40] org.apache.cxf.cxf-rt-rs-extension-search (2.7.0)
[ 104] [Active     ] [Created     ] [   40] org.apache.cxf.cxf-rt-frontend-jaxrs (2.7.0)
[ 105] [Installed  ] [            ] [   80] com.hendyirawan.cxf4571bug.app (1.0.0.SNAPSHOT)
[ 106] [Active     ] [            ] [   80] org.apache.geronimo.specs.geronimo-annotation_1.1_spec (1.0.1)
[ 107] [Active     ] [            ] [   80] com.google.guava (13.0.1)
[ 108] [Active     ] [            ] [   80] org.apache.commons.io (2.4.0)
[ 109] [Active     ] [            ] [   80] org.apache.commons.lang3 (3.1.0)
[ 110] [Active     ] [            ] [   80] org.apache.commons.codec (1.7.0)
[ 111] [Active     ] [            ] [   80] org.apache.servicemix.bundles.xpp3 (1.1.0.4c_6)
[ 112] [Active     ] [            ] [   80] org.apache.servicemix.bundles.xstream (1.4.1.1)
[ 113] [Active     ] [            ] [   80] com.fasterxml.jackson.core.jackson-core (2.1.0)
[ 114] [Active     ] [            ] [   80] com.fasterxml.jackson.core.jackson-annotations (2.1.0)
[ 115] [Active     ] [            ] [   80] com.fasterxml.jackson.core.jackson-databind (2.1.0)
[ 116] [Active     ] [            ] [   80] joda-time (2.1)
[ 117] [Active     ] [            ] [   80] org.joda.money (0.6)
[ 118] [Active     ] [            ] [   80] com.fasterxml.jackson.datatype.jackson-datatype-joda (2.1.0)
[ 119] [Active     ] [            ] [   80] com.fasterxml.jackson.datatype.jackson-datatype-guava (2.1.0)
[ 120] [Active     ] [            ] [   80] org.apache.servicemix.bundles.commons-beanutils (1.8.3.1)
[ 121] [Active     ] [            ] [   80] org.apache.servicemix.bundles.cglib (2.1.0.3_7)
[ 122] [Active     ] [            ] [   40] org.apache.cxf.cxf-rt-databinding-jaxb (2.7.0)
[ 123] [Active     ] [            ] [   80] com.fasterxml.jackson.jaxrs.jackson-jaxrs-json-provider (2.1.0)
[ 131] [Active     ] [Created     ] [   80] soluvas-json (1.1.0.SNAPSHOT)
[ 132] [Active     ] [            ] [   80] soluvas-jaxrs (1.1.0.SNAPSHOT)
[ 133] [Active     ] [            ] [   80] org.apache.servicemix.specs.jsr311-api-1.1.1 (2.0.0)
[ 134] [Active     ] [            ] [   80] jackson-core-asl (1.9.9)
[ 135] [Active     ] [            ] [   80] jackson-mapper-asl (1.9.9)
[ 136] [Active     ] [Created     ] [   80] soluvas-multitenant (1.1.0.SNAPSHOT)
{code}","06/Nov/12 17:31;ceefour;nope, uninstall jsr311 bundle doesn't make the problem go away...

btw, this is the log with 'grep cxf', from the moment of Karaf start until it ""stabilizes"" :

{code}
2012-11-07 00:30:27,606 | INFO  | FelixStartLevel  | CXFActivator                     | .osgi.CXFExtensionBundleListener   88 | 3006 - org.apache.cxf.cxf-rt-core - 2.7.0 | Adding the extensions from bundle org.apache.cxf.cxf-rt-management (3007) [org.apache.cxf.management.InstrumentationManager]
2012-11-07 00:30:27,635 | INFO  | FelixStartLevel  | CXFActivator                     | .osgi.CXFExtensionBundleListener   88 | 3006 - org.apache.cxf.cxf-rt-core - 2.7.0 | Adding the extensions from bundle org.apache.cxf.cxf-rt-transports-http (3009) [org.apache.cxf.transport.http.HTTPTransportFactory, org.apache.cxf.transport.http.HTTPWSDLExtensionLoader, org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder, org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder, org.apache.cxf.transport.http.policy.NoOpPolicyInterceptorProvider]
2012-11-07 00:30:27,657 | INFO  | FelixStartLevel  | CXFActivator                     | .osgi.CXFExtensionBundleListener   88 | 3006 - org.apache.cxf.cxf-rt-core - 2.7.0 | Adding the extensions from bundle org.apache.cxf.cxf-rt-bindings-xml (3011) [org.apache.cxf.binding.xml.XMLBindingFactory, org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader]
2012-11-07 00:30:27,696 | INFO  | rint Extender: 1 | HttpServiceFactoryImpl           | .internal.HttpServiceFactoryImpl   33 | 78 - org.ops4j.pax.web.pax-web-runtime - 1.1.3 | Binding bundle: [org.apache.cxf.cxf-rt-transports-http [3009]] to http service
2012-11-07 00:30:27,698 | INFO  | rint Extender: 1 | ContextHandler                   | lipse.jetty.util.log.JavaUtilLog   75 | 61 - org.eclipse.jetty.util - 7.6.7.v20120910 | started HttpServiceContext{httpContext=DefaultHttpContext{bundle=org.apache.cxf.cxf-rt-transports-http [3009]}}
2012-11-07 00:30:29,979 | DEBUG | lixDispatchQueue | cxf                              | ?                                   ? | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | BundleEvent RESOLVED - com.soluvas.cxf
2012-11-07 00:30:29,981 | DEBUG | lixDispatchQueue | cxf                              | ?                                   ? | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | BundleEvent STARTED - com.soluvas.cxf
2012-11-07 00:30:29,983 | INFO  | ce5/karaf/deploy | fileinstall                      | ?                                   ? | 6 - org.apache.felix.fileinstall - 3.2.6 | Started bundle: jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.cxf
2012-11-07 00:30:30,015 | DEBUG | rint Extender: 3 | cxf                              | ?                                   ? | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | ServiceEvent REGISTERED - [org.apache.karaf.shell.console.CompletableFunction, org.apache.felix.service.command.Function] - com.soluvas.cxf
2012-11-07 00:30:30,017 | DEBUG | rint Extender: 3 | cxf                              | ?                                   ? | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | ServiceEvent REGISTERED - [org.osgi.service.blueprint.container.BlueprintContainer] - com.soluvas.cxf
2012-11-07 00:30:35,268 | INFO  | rint Extender: 2 | XmiObjectLoader                  | .soluvas.commons.XmiObjectLoader  101 | 2882 - org.soluvas.commons - 2.0.0.SNAPSHOT | Loaded org.soluvas.web.site.webaddress.impl.WebAddressImpl@2c896c2b (baseUri: http://localhost:8181/commerce5/, basePath: /commerce5/, apiPath: /cxf/api/berbatik_dev/, imagesUri: http://localhost:8181/static/images/, skinUri: http://localhost:8181/static/skin/, jsUri: http://localhost:8181/static/js/, secureBaseUri: null, secureImagesUri: null, secureSkinUri: null, secureJsUri: null) from bundle://2973.6:1/org/soluvas/web/site/default.WebAddress.xmi
2012-11-07 00:30:35,846 | WARN  | rint Extender: 2 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager   66 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | No JAX-RS resources found, not starting server
2012-11-07 00:30:35,848 | DEBUG | rint Extender: 2 | app                              | ?                                   ? | 2792 - id.co.bippo.app - 5.0.0.SNAPSHOT | ServiceEvent REGISTERED - [org.osgi.util.tracker.ServiceTrackerCustomizer, com.soluvas.cxf.JaxrsManager] - id.co.bippo.app
2012-11-07 00:30:35,982 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  329 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registering MBean org.apache.cxf:bus.id=id.co.bippo.app-cxf1437127048,type=Bus,instance.id=1437127048: org.apache.cxf.bus.ManagedBus@3e5463a7
2012-11-07 00:30:36,008 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  329 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registering MBean org.apache.cxf:bus.id=id.co.bippo.app-cxf1437127048,type=Bus,instance.id=1437127048: javax.management.modelmbean.RequiredModelMBean@26a2bdba
2012-11-07 00:30:36,009 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  195 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registered org.apache.cxf:bus.id=id.co.bippo.app-cxf1437127048,type=Bus,instance.id=1437127048
2012-11-07 00:30:36,020 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  329 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registering MBean org.apache.cxf:bus.id=id.co.bippo.app-cxf1437127048,WorkQueueManager=Bus.WorkQueueManager,type=WorkQueueManager,instance.id=1894659009: org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper@2687fdd3
2012-11-07 00:30:36,023 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  329 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registering MBean org.apache.cxf:bus.id=id.co.bippo.app-cxf1437127048,WorkQueueManager=Bus.WorkQueueManager,type=WorkQueueManager,instance.id=1894659009: javax.management.modelmbean.RequiredModelMBean@36c234ae
2012-11-07 00:30:36,029 | DEBUG | rint Extender: 2 | app                              | ?                                   ? | 2792 - id.co.bippo.app - 5.0.0.SNAPSHOT | ServiceEvent REGISTERED - [org.apache.cxf.Bus] - id.co.bippo.app
2012-11-07 00:30:37,099 | INFO  | rint Extender: 2 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager  105 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Adding 3 new JAX-RS resources: [id.co.bippo.story.rs.hand.ProductStoryResource@54bc2bb8, id.co.bippo.story.rs.hand.PersonStoryResource@dda687e, id.co.bippo.story.rs.hand.ShopStoryResource@7e022f4c]
2012-11-07 00:30:37,099 | INFO  | rint Extender: 2 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager   68 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Starting JAX-RS server with 3 resources: [id.co.bippo.story.rs.hand.ProductStoryResource@54bc2bb8, id.co.bippo.story.rs.hand.PersonStoryResource@dda687e, id.co.bippo.story.rs.hand.ShopStoryResource@7e022f4c]
2012-11-07 00:30:37,157 | WARN  | rint Extender: 2 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.story.rs.hand.ProductStoryResource
2012-11-07 00:30:37,158 | WARN  | rint Extender: 2 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.story.rs.hand.PersonStoryResource
2012-11-07 00:30:37,159 | WARN  | rint Extender: 2 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.story.rs.hand.ShopStoryResource
2012-11-07 00:30:37,175 | ERROR | rint Extender: 2 | AbstractJAXRSFactoryBean         | f.jaxrs.AbstractJAXRSFactoryBean  314 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource classes found
2012-11-07 00:30:37,202 | DEBUG | rint Extender: 2 | app                              | ?                                   ? | 2792 - id.co.bippo.app - 5.0.0.SNAPSHOT | ServiceEvent UNREGISTERING - [org.osgi.util.tracker.ServiceTrackerCustomizer, com.soluvas.cxf.JaxrsManager] - id.co.bippo.app
2012-11-07 00:30:37,323 | DEBUG | rint Extender: 2 | app                              | ?                                   ? | 2792 - id.co.bippo.app - 5.0.0.SNAPSHOT | ServiceEvent UNREGISTERING - [org.apache.cxf.Bus] - id.co.bippo.app
Caused by: org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:74)
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:107)
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)
2012-11-07 00:30:37,399 | INFO  | rint Extender: 2 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager  105 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Adding 1 new JAX-RS resources: [org.soluvas.web.backbone.RequireResource@350cab89]
2012-11-07 00:30:37,400 | INFO  | rint Extender: 2 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager   68 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Starting JAX-RS server with 1 resources: [org.soluvas.web.backbone.RequireResource@350cab89]
2012-11-07 00:30:37,422 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  329 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registering MBean org.apache.cxf:bus.id=cxf1730434892,type=Bus,instance.id=1730434892: org.apache.cxf.bus.ManagedBus@2df737b
2012-11-07 00:30:37,423 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  329 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registering MBean org.apache.cxf:bus.id=cxf1730434892,type=Bus,instance.id=1730434892: javax.management.modelmbean.RequiredModelMBean@1c1691b6
2012-11-07 00:30:37,423 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  195 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registered org.apache.cxf:bus.id=cxf1730434892,type=Bus,instance.id=1730434892
2012-11-07 00:30:37,425 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  329 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registering MBean org.apache.cxf:bus.id=cxf1730434892,WorkQueueManager=Bus.WorkQueueManager,type=WorkQueueManager,instance.id=2052336948: org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper@2c63efaa
2012-11-07 00:30:37,426 | INFO  | rint Extender: 2 | InstrumentationManagerImpl       | t.jmx.InstrumentationManagerImpl  329 | 3007 - org.apache.cxf.cxf-rt-management - 2.7.0 | registering MBean org.apache.cxf:bus.id=cxf1730434892,WorkQueueManager=Bus.WorkQueueManager,type=WorkQueueManager,instance.id=2052336948: javax.management.modelmbean.RequiredModelMBean@550b98aa
2012-11-07 00:30:37,432 | WARN  | rint Extender: 2 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class org.soluvas.web.backbone.RequireResource
2012-11-07 00:30:37,437 | ERROR | rint Extender: 2 | AbstractJAXRSFactoryBean         | f.jaxrs.AbstractJAXRSFactoryBean  314 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource classes found
org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:74)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:107)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
2012-11-07 00:30:37,637 | INFO  | rint Extender: 1 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager  105 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Adding 1 new JAX-RS resources: [id.co.bippo.comment.rs.hand.ProductCommentResource@228f46b3]
2012-11-07 00:30:37,638 | INFO  | rint Extender: 1 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager   68 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Starting JAX-RS server with 2 resources: [org.soluvas.web.backbone.RequireResource@350cab89, id.co.bippo.comment.rs.hand.ProductCommentResource@228f46b3]
2012-11-07 00:30:37,643 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class org.soluvas.web.backbone.RequireResource
2012-11-07 00:30:37,656 | INFO  | rint Extender: 3 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager  105 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Adding 1 new JAX-RS resources: [id.co.bippo.wink.rs.hand.ProductWinkResource@2c5e155e]
2012-11-07 00:30:37,657 | INFO  | rint Extender: 3 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager   68 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Starting JAX-RS server with 3 resources: [org.soluvas.web.backbone.RequireResource@350cab89, id.co.bippo.comment.rs.hand.ProductCommentResource@228f46b3, id.co.bippo.wink.rs.hand.ProductWinkResource@2c5e155e]
2012-11-07 00:30:37,659 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.ProductCommentResource
2012-11-07 00:30:37,660 | WARN  | rint Extender: 3 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class org.soluvas.web.backbone.RequireResource
2012-11-07 00:30:37,663 | WARN  | rint Extender: 3 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.ProductCommentResource
2012-11-07 00:30:37,664 | ERROR | rint Extender: 1 | AbstractJAXRSFactoryBean         | f.jaxrs.AbstractJAXRSFactoryBean  314 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource classes found
2012-11-07 00:30:37,668 | WARN  | rint Extender: 3 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.wink.rs.hand.ProductWinkResource
2012-11-07 00:30:37,671 | ERROR | rint Extender: 3 | AbstractJAXRSFactoryBean         | f.jaxrs.AbstractJAXRSFactoryBean  314 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource classes found
org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:74)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:107)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
2012-11-07 00:30:37,682 | INFO  | rint Extender: 1 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager  105 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Adding 1 new JAX-RS resources: [id.co.bippo.comment.rs.hand.PersonCommentResource@5f07fbc1]
2012-11-07 00:30:37,683 | INFO  | rint Extender: 1 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager   68 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Starting JAX-RS server with 4 resources: [org.soluvas.web.backbone.RequireResource@350cab89, id.co.bippo.comment.rs.hand.ProductCommentResource@228f46b3, id.co.bippo.wink.rs.hand.ProductWinkResource@2c5e155e, id.co.bippo.comment.rs.hand.PersonCommentResource@5f07fbc1]
org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:74)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:107)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
2012-11-07 00:30:37,685 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class org.soluvas.web.backbone.RequireResource
2012-11-07 00:30:37,690 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.ProductCommentResource
2012-11-07 00:30:37,692 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.wink.rs.hand.ProductWinkResource
2012-11-07 00:30:37,693 | INFO  | rint Extender: 2 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager  105 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Adding 1 new JAX-RS resources: [id.co.bippo.like.rs.hand.ProductLikeResource@5a9ad3aa]
2012-11-07 00:30:37,694 | INFO  | rint Extender: 2 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager   68 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Starting JAX-RS server with 5 resources: [org.soluvas.web.backbone.RequireResource@350cab89, id.co.bippo.comment.rs.hand.ProductCommentResource@228f46b3, id.co.bippo.wink.rs.hand.ProductWinkResource@2c5e155e, id.co.bippo.comment.rs.hand.PersonCommentResource@5f07fbc1, id.co.bippo.like.rs.hand.ProductLikeResource@5a9ad3aa]
2012-11-07 00:30:37,694 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.PersonCommentResource
2012-11-07 00:30:37,696 | WARN  | rint Extender: 2 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class org.soluvas.web.backbone.RequireResource
2012-11-07 00:30:37,697 | ERROR | rint Extender: 1 | AbstractJAXRSFactoryBean         | f.jaxrs.AbstractJAXRSFactoryBean  314 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource classes found
2012-11-07 00:30:37,699 | WARN  | rint Extender: 2 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.ProductCommentResource
2012-11-07 00:30:37,701 | WARN  | rint Extender: 2 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.wink.rs.hand.ProductWinkResource
2012-11-07 00:30:37,704 | WARN  | rint Extender: 2 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.PersonCommentResource
org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:74)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:107)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
2012-11-07 00:30:37,708 | WARN  | rint Extender: 2 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.like.rs.hand.ProductLikeResource
2012-11-07 00:30:37,711 | ERROR | rint Extender: 2 | AbstractJAXRSFactoryBean         | f.jaxrs.AbstractJAXRSFactoryBean  314 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource classes found
2012-11-07 00:30:37,716 | INFO  | rint Extender: 1 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager  105 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Adding 1 new JAX-RS resources: [id.co.bippo.comment.rs.hand.ShopCommentResource@32836935]
2012-11-07 00:30:37,716 | INFO  | rint Extender: 1 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager   68 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Starting JAX-RS server with 6 resources: [org.soluvas.web.backbone.RequireResource@350cab89, id.co.bippo.comment.rs.hand.ProductCommentResource@228f46b3, id.co.bippo.wink.rs.hand.ProductWinkResource@2c5e155e, id.co.bippo.comment.rs.hand.PersonCommentResource@5f07fbc1, id.co.bippo.like.rs.hand.ProductLikeResource@5a9ad3aa, id.co.bippo.comment.rs.hand.ShopCommentResource@32836935]
2012-11-07 00:30:37,718 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class org.soluvas.web.backbone.RequireResource
org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:74)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:107)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
2012-11-07 00:30:37,721 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.ProductCommentResource
2012-11-07 00:30:37,726 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.wink.rs.hand.ProductWinkResource
2012-11-07 00:30:37,727 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.PersonCommentResource
2012-11-07 00:30:37,730 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.like.rs.hand.ProductLikeResource
2012-11-07 00:30:37,731 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.ShopCommentResource
2012-11-07 00:30:37,734 | ERROR | rint Extender: 1 | AbstractJAXRSFactoryBean         | f.jaxrs.AbstractJAXRSFactoryBean  314 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource classes found
org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:74)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:107)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
2012-11-07 00:30:38,673 | INFO  | rint Extender: 1 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager  105 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Adding 1 new JAX-RS resources: [id.co.bippo.booking.rs.hand.ProductBookingResource@332a9b15]
2012-11-07 00:30:38,673 | INFO  | rint Extender: 1 | DynamicJaxrsManager              | .soluvas.cxf.DynamicJaxrsManager   68 | 2630 - com.soluvas.cxf - 1.0.0.SNAPSHOT | Starting JAX-RS server with 7 resources: [org.soluvas.web.backbone.RequireResource@350cab89, id.co.bippo.comment.rs.hand.ProductCommentResource@228f46b3, id.co.bippo.wink.rs.hand.ProductWinkResource@2c5e155e, id.co.bippo.comment.rs.hand.PersonCommentResource@5f07fbc1, id.co.bippo.like.rs.hand.ProductLikeResource@5a9ad3aa, id.co.bippo.comment.rs.hand.ShopCommentResource@32836935, id.co.bippo.booking.rs.hand.ProductBookingResource@332a9b15]
2012-11-07 00:30:38,674 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class org.soluvas.web.backbone.RequireResource
2012-11-07 00:30:38,676 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.ProductCommentResource
2012-11-07 00:30:38,676 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.wink.rs.hand.ProductWinkResource
2012-11-07 00:30:38,677 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.PersonCommentResource
2012-11-07 00:30:38,678 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.like.rs.hand.ProductLikeResource
2012-11-07 00:30:38,679 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.comment.rs.hand.ShopCommentResource
2012-11-07 00:30:38,679 | WARN  | rint Extender: 1 | ResourceUtils                    | he.cxf.jaxrs.utils.ResourceUtils  373 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource methods have been found for resource class id.co.bippo.booking.rs.hand.ProductBookingResource
2012-11-07 00:30:38,680 | ERROR | rint Extender: 1 | AbstractJAXRSFactoryBean         | f.jaxrs.AbstractJAXRSFactoryBean  314 | 3014 - org.apache.cxf.cxf-rt-frontend-jaxrs - 2.7.0 | No resource classes found
org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:74)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:107)[2630:com.soluvas.cxf:1.0.0.SNAPSHOT]
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)[3014:org.apache.cxf.cxf-rt-frontend-jaxrs:2.7.0]
{code}","06/Nov/12 17:33;sergey_beryozkin;I guess you should restrict the version which can be imported into your own bundle if you have both JAX-RS 2.0 and 1.1.1 bundles loaded ?
FYI, jsr339-m10 bundle exports with version ""2.0.0.m10"", which I reckon now is not quite good, given that once th;ve final jsr339 spec bundle is out the custom bundle import will have to be updated - but it will become an extra migration headache if one has both JAX-RS 2.0 and 1.1.1 spec bundles loaded    

","06/Nov/12 17:36;sergey_beryozkin;Right, can you try clear the cache and start without jsr311-1.1.1 ? I guess if that still does not solve the problem (if it is what you meant with the last comment) then I have ""https://github.com/ceefour/cxf-4571-bug"" to help me to reproduce the issue :-).

FYI, I'm off for the next few days so will look into it next week, thanks","06/Nov/12 18:00;ceefour;Yes, removing jsr311-1.1.1 does not solve the problem.. So I believe it is not the issue.","07/Nov/12 02:04;ceefour;I realized that the app probably also needs to be built against CXF 2.6 in order for it to work with the rest of the system, due to the Import-Package.

The bundles built with CXF 2.7 will Import-Package 2.0, while bundles built with CXF 2.6 or jsr311-api 1.1.1 will Import-Package [1.1,2.0). If those bundles depends on each other, then there will be conflict.

I'm starting to think of CXF 2.7 as actually 3.0... regardless of the status of this bug, the jaxrs 2.0 versioning is a major change.","07/Nov/12 02:18;ceefour;Thank God, I seem to be able to reproduce it using my test project :

{code}
ERROR: Bundle com.hendyirawan.cxf4571bug.app [105] EventDispatcher: Error during dispatch. (org.apache.cxf.service.factory.ServiceConstructionException)
org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:74)
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:107)
        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:932)
        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)
        at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)
        at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:229)
        at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:894)
        at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:932)
        at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:793)
        at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:543)
        at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:4260)
        at org.apache.felix.framework.Felix.registerService(Felix.java:3275)
        at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:346)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.registerService(BlueprintContainerImpl.java:421)
        at org.apache.aries.blueprint.container.ServiceRecipe.register(ServiceRecipe.java:191)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.registerServices(BlueprintContainerImpl.java:668)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:352)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:252)
        at org.apache.aries.blueprint.utils.threading.impl.DiscardableRunnable.run(DiscardableRunnable.java:48)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:722)
Caused by: javax.ws.rs.WebApplicationException
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)
        ... 27 more
{code}","07/Nov/12 02:20;ceefour;This is what the sample project bundle list look like :

Status of app is Created but actually the CXF 2.7.0 failed.

{code}
karaf@root> list -s
START LEVEL 100 , List Threshold: 50
   ID   State         Blueprint      Level  Symbolic name
[ 105] [Active     ] [Created     ] [   80] com.hendyirawan.cxf4571bug.app (1.0.0.SNAPSHOT)
[ 106] [Active     ] [            ] [   80] org.apache.geronimo.specs.geronimo-annotation_1.1_spec (1.0.1)
[ 107] [Active     ] [            ] [   80] com.google.guava (13.0.1)
[ 108] [Active     ] [            ] [   80] org.apache.commons.io (2.4.0)
[ 109] [Active     ] [            ] [   80] org.apache.commons.lang3 (3.1.0)
[ 110] [Active     ] [            ] [   80] org.apache.commons.codec (1.7.0)
[ 111] [Active     ] [            ] [   80] org.apache.servicemix.bundles.xpp3 (1.1.0.4c_6)
[ 112] [Active     ] [            ] [   80] org.apache.servicemix.bundles.xstream (1.4.1.1)
[ 113] [Active     ] [            ] [   80] com.fasterxml.jackson.core.jackson-core (2.1.0)
[ 114] [Active     ] [            ] [   80] com.fasterxml.jackson.core.jackson-annotations (2.1.0)
[ 115] [Active     ] [            ] [   80] com.fasterxml.jackson.core.jackson-databind (2.1.0)
[ 116] [Active     ] [            ] [   80] joda-time (2.1)
[ 117] [Active     ] [            ] [   80] org.joda.money (0.6)
[ 118] [Active     ] [            ] [   80] com.fasterxml.jackson.datatype.jackson-datatype-joda (2.1.0)
[ 119] [Active     ] [            ] [   80] com.fasterxml.jackson.datatype.jackson-datatype-guava (2.1.0)
[ 120] [Active     ] [            ] [   80] org.apache.servicemix.bundles.commons-beanutils (1.8.3.1)
[ 121] [Active     ] [            ] [   80] org.apache.servicemix.bundles.cglib (2.1.0.3_7)
[ 123] [Active     ] [            ] [   80] com.fasterxml.jackson.jaxrs.jackson-jaxrs-json-provider (2.1.0)
[ 131] [Active     ] [Created     ] [   80] soluvas-json (1.1.0.SNAPSHOT)
[ 132] [Active     ] [            ] [   80] soluvas-jaxrs (1.1.0.SNAPSHOT)
[ 133] [Active     ] [            ] [   80] org.apache.servicemix.specs.jsr311-api-1.1.1 (2.0.0)
[ 134] [Active     ] [            ] [   80] jackson-core-asl (1.9.9)
[ 135] [Active     ] [            ] [   80] jackson-mapper-asl (1.9.9)
[ 136] [Active     ] [Created     ] [   80] soluvas-multitenant (1.1.0.SNAPSHOT)
[ 137] [Active     ] [Created     ] [   80] com.hendyirawan.cxf4571bug.rs (1.0.0.SNAPSHOT)
{code}","07/Nov/12 02:40;ceefour;I've completed the test case here : https://github.com/ceefour/cxf-4571-bug

Works under 2.6.3, fails in 2.7.0.

Let me know if you have troubles running the testcase.","07/Nov/12 22:42;dkulp;
Wondering if the jsr339 api jar should export the packages as:

{code}
javax.ws.rs; version=1.1.1              
javax.ws.rs.ext; version=1.1.1          
javax.ws.rs.core; version=1.1.1
{code}

in addition to the 2.0.0.m10 version numbers it's currently using.   Obviously the new packages (container and client) would only be exported as 2.0.0.   I'd need to check how ""compatible"" those three packages may be.
","07/Nov/12 22:52;dkulp;
If the imports of soluvas-jaxrs are updated to [1.1,3), does the example work?
","19/Nov/12 10:16;sergey_beryozkin;Hi, I believe that either updating the spec bundle to export 1.1 & 2.0 versions of the packages available in both jsr311 & jsr339 or having the custom bundle to relax the import range, all options suggested by Dan, will fix the issue. I'll experiment this week ","19/Nov/12 13:47;sergey_beryozkin;where is patched org.joda/joda-money/0.6.soluvas1 available ?

thanks ","19/Nov/12 13:55;sergey_beryozkin;Found it, never mind","19/Nov/12 17:20;sergey_beryozkin;After playing with modifying export packages of the spec bundle it appears to me that the only way forward (in case when users do not want to recompile the existing jsr311 apps against jsr339 API) is to increase the upper range in pom.xml as suggested by Dan in his last comment. 

Can you please experiment with this approach on your end ?

","19/Nov/12 18:10;sergey_beryozkin;Dan also updated jsr339 spec bundle to export both 1.1 & 2.0.0.m10 versions of the packages found both in jsr311 and jsr339, this should also work given that jsr339 keeps the backward compatibility for those packages AFAIK.

Can you try jsr339-api-m10-2.2-SNAPSHOT spec bundle, while still deploying the custom bundles built against jsr311 ? 
thanks
 ","20/Nov/12 02:52;ceefour;Unfortunately it doesn't seem to work: :-( (I'm using org.apache.servicemix.specs.jsr339-api-m10-2.2-20121120.023909-11.jar, and no jsr311)

{code}
2012-11-20 09:50:00,572 | ERROR | rint Extender: 3 | BlueprintContainerImpl           | container.BlueprintContainerImpl  375 | 7 - org.apache.aries.blueprint.core - 1.0.1 | Unable to start blueprint container for bundle berbatik_rs.xml
org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to intialize bean .component-2
        at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:714)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:824)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)[7:org.apache.aries.blueprint.core:1.0.1]
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_07]
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_07]
        at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:247)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:183)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:646)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:353)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:252)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.utils.threading.impl.DiscardableRunnable.run(DiscardableRunnable.java:48)[7:org.apache.aries.blueprint.core:1.0.1]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)[:1.7.0_07]
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_07]
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_07]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)[:1.7.0_07]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)[:1.7.0_07]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)[:1.7.0_07]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)[:1.7.0_07]
        at java.lang.Thread.run(Thread.java:722)[:1.7.0_07]
Caused by: org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:201)
        at com.soluvas.cxf.DynamicJaxrsManager.createServer(DynamicJaxrsManager.java:77)
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:110)
        at com.soluvas.cxf.DynamicJaxrsManager.addingService(DynamicJaxrsManager.java:1)
        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:932)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:1)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:317)[karaf.jar:2.3.0]
        at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:261)[karaf.jar:2.3.0]
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.7.0_07]
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)[:1.7.0_07]
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.7.0_07]
        at java.lang.reflect.Method.invoke(Method.java:601)[:1.7.0_07]
        at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:297)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.invoke(BeanRecipe.java:958)[7:org.apache.aries.blueprint.core:1.0.1]
        at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:712)[7:org.apache.aries.blueprint.core:1.0.1]
        ... 20 more
Caused by: javax.ws.rs.WebApplicationException
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.checkResources(AbstractJAXRSFactoryBean.java:315)
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:148)
        ... 36 more
{code}

Bundles:

{code}
START LEVEL 100 , List Threshold: 0
   ID   State         Blueprint      Spring    Level  Location
[   0] [Active     ] [            ] [       ] [    0] System Bundle
[   1] [Active     ] [            ] [       ] [    5] mvn:org.ops4j.pax.url/pax-url-mvn/1.3.5
[   2] [Active     ] [            ] [       ] [    5] mvn:org.ops4j.pax.url/pax-url-wrap/1.3.5
[   3] [Active     ] [            ] [       ] [    8] mvn:org.ops4j.pax.logging/pax-logging-service/1.7.0
[   4] [Active     ] [            ] [       ] [    8] mvn:org.ops4j.pax.logging/pax-logging-api/1.7.0
[   5] [Active     ] [            ] [       ] [   10] mvn:org.apache.felix/org.apache.felix.configadmin/1.4.0
[   6] [Active     ] [            ] [       ] [   11] mvn:org.apache.felix/org.apache.felix.fileinstall/3.2.6
[   7] [Active     ] [Created     ] [       ] [   20] mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.core/1.0.1
[   8] [Active     ] [            ] [       ] [   20] mvn:org.apache.aries/org.apache.aries.util/1.0.0
[   9] [Active     ] [            ] [       ] [   20] mvn:org.apache.aries.proxy/org.apache.aries.proxy.api/1.0.0
[  10] [Active     ] [            ] [       ] [   20] mvn:org.ow2.asm/asm-all/4.0
[  11] [Active     ] [            ] [       ] [   20] mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.api/1.0.0
[  12] [Active     ] [            ] [       ] [   20] mvn:org.apache.aries.proxy/org.apache.aries.proxy.impl/1.0.0
[  13] [Active     ] [Created     ] [       ] [   20] mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.cm/1.0.0
[  14] [Active     ] [Created     ] [       ] [   25] mvn:org.apache.karaf.shell/org.apache.karaf.shell.console/2.3.0
[  15] [Active     ] [Created     ] [       ] [   28] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.blueprint/2.3.0
[  16] [Active     ] [Created     ] [       ] [   28] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.spring/2.3.0
[  17] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.ssh/2.3.0
[  18] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management/org.apache.karaf.management.server/2.3.0
[  19] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.commands/2.3.0
[  20] [Active     ] [GracePeriod ] [       ] [   30] mvn:org.apache.karaf.features/org.apache.karaf.features.core/2.3.0
[  21] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.log/2.3.0
[  22] [Active     ] [GracePeriod ] [       ] [   30] mvn:org.apache.karaf.features/org.apache.karaf.features.command/2.3.0
[  23] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.diagnostic/org.apache.karaf.diagnostic.management/2.3.0
[  24] [Active     ] [            ] [       ] [   30] mvn:org.apache.sshd/sshd-core/0.8.0
[  25] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.wrap/2.3.0
[  26] [Active     ] [            ] [       ] [   30] mvn:org.apache.mina/mina-core/2.0.7
[  27] [Active     ] [GracePeriod ] [       ] [   30] mvn:org.apache.karaf.admin/org.apache.karaf.admin.command/2.3.0
[  28] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.diagnostic/org.apache.karaf.diagnostic.command/2.3.0
[  29] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jmx/org.apache.aries.jmx.core/1.0.1
[  30] [Active     ] [            ] [       ] [   30] mvn:org.apache.karaf.diagnostic/org.apache.karaf.diagnostic.core/2.3.0
[  31] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.admin/org.apache.karaf.admin.management/2.3.0
[  32] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jmx/org.apache.aries.jmx.api/1.0.0
[  33] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.diagnostic/org.apache.karaf.diagnostic.common/2.3.0
[  34] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.dev/2.3.0
[  35] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.features/2.3.0
[  36] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jmx/org.apache.aries.jmx.blueprint.api/1.0.0
[  37] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.jaas/org.apache.karaf.jaas.command/2.3.0
[  38] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.jaas/org.apache.karaf.jaas.modules/2.3.0
[  39] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.osgi/2.3.0
[  40] [Active     ] [GracePeriod ] [       ] [   30] mvn:org.apache.karaf.features/org.apache.karaf.features.management/2.3.0
[  41] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.packages/2.3.0
[  42] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jmx/org.apache.aries.jmx.blueprint.core/1.0.1
[  43] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.admin/org.apache.karaf.admin.core/2.3.0
[  44] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.kar/2.3.0
[  45] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.jaas/org.apache.karaf.jaas.config/2.3.0
[  46] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.config/2.3.0
[  47] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.system/2.3.0
[  48] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.bundles/2.3.0
[  49] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.services/2.3.0
[  50] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.config/2.3.0
[  51] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.log/2.3.0
[  52] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.packages/2.3.0
[  53] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.dev/2.3.0
[  57] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/2.1.0
[  58] [Active     ] [            ] [       ] [   30] mvn:org.apache.geronimo.specs/geronimo-servlet_2.5_spec/1.1.2
[  59] [Active     ] [            ] [       ] [   30] mvn:javax.mail/mail/1.4.5
[  60] [Active     ] [            ] [       ] [   30] mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1
[  61] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-util/7.6.7.v20120910
[  62] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-io/7.6.7.v20120910
[  63] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-http/7.6.7.v20120910
[  64] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-client/7.6.7.v20120910
[  65] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-continuation/7.6.7.v20120910
[  66] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-jmx/7.6.7.v20120910
[  67] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-server/7.6.7.v20120910
[  68] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-security/7.6.7.v20120910
[  69] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-servlet/7.6.7.v20120910
[  70] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-servlets/7.6.7.v20120910
[  71] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-xml/7.6.7.v20120910
[  72] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-webapp/7.6.7.v20120910
[  73] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-jndi/7.6.7.v20120910
[  74] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-plus/7.6.7.v20120910
[  75] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-websocket/7.6.7.v20120910
[  76] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-api/1.1.3
[  77] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-spi/1.1.3
[  78] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-runtime/1.1.3
[  79] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-jetty/1.1.3
[  80] [Active     ] [            ] [       ] [   30] mvn:org.apache.felix/org.apache.felix.metatype/1.0.4
[  81] [Resolved   ] [            ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.branding/2.3.0
                                       Hosts: 82
[  82] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.console/2.3.0
                                       Fragments: 81
[  83] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.admin/2.3.0
[  84] [Active     ] [GracePeriod ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.features/2.3.0
[  85] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.gogo/2.3.0
[  86] [Active     ] [            ] [       ] [   30] mvn:org.apache.felix/org.apache.felix.webconsole.plugins.event/1.0.2
[  87] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-extender-whiteboard/1.1.3
[  88] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.web/2.3.0
[  89] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.web/2.3.0
[  90] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-jsp/1.1.3
[  91] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-extender-war/1.1.3
[  92] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-deployer/1.1.3
[  93] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.url/pax-url-war/1.3.5
[1767] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-atinject_1.0_spec/1.0
[1768] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-el_2.2_spec/1.0.3
[1770] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-interceptor_3.0_spec/1.0.1
[1771] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-jcdi_1.0_spec/1.0
[1780] [Active     ] [            ] [       ] [   50] mvn:com.rabbitmq/amqp-client/2.8.5
[1831] [Active     ] [            ] [       ] [   50] mvn:org.apache.httpcomponents/httpcore-osgi/4.2.1
[1832] [Active     ] [            ] [       ] [   50] mvn:org.apache.httpcomponents/httpclient-osgi/4.2.1
[1836] [Active     ] [            ] [       ] [   30] mvn:org.apache.geronimo.specs/geronimo-jpa_2.0_spec/1.1
[1837] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jpa/org.apache.aries.jpa.api/1.0.0
[1838] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.aries.jpa/org.apache.aries.jpa.blueprint.aries/1.0.0
[1839] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jpa/org.apache.aries.jpa.container/1.0.0
[1840] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jpa/org.apache.aries.jpa.container.context/1.0.1
[1847] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.antlr-runtime/3.4_2
[1848] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.stringtemplate/4.0.2_1
[1849] [Active     ] [            ] [       ] [   50] mvn:commons-pool/commons-pool/1.6
[1850] [Active     ] [            ] [       ] [   50] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.antlr/2.7.7_5
[1851] [Active     ] [            ] [       ] [   50] mvn:commons-collections/commons-collections/3.2.1
[1852] [Active     ] [            ] [       ] [   50] mvn:commons-lang/commons-lang/2.6
[1853] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-client-api/1.0.0-M13
[1854] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-asn1-api/1.0.0-M13
[1855] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-asn1-ber/1.0.0-M13
[1856] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-i18n/1.0.0-M13
[1857] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-util/1.0.0-M13
[1858] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-codec-core/1.0.0-M13
[1859] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-net-mina/1.0.0-M13
[1860] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-model/1.0.0-M13
[1861] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-schema-data/1.0.0-M13
[1862] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-extras-aci/1.0.0-M13
[1864] [Active     ] [            ] [       ] [   50] wrap:mvn:com.google.protobuf/protobuf-java/2.4.1$Export-Package=*;version=2.4.1
[1866] [Active     ] [            ] [       ] [   50] wrap:mvn:com.sun.istack/istack-commons-runtime/2.12$Export-Package=*;version=2.12.0
[1872] [Active     ] [            ] [       ] [   50] mvn:com.sun.jersey/jersey-core/1.14
[1873] [Active     ] [            ] [       ] [   50] mvn:com.sun.jersey/jersey-client/1.14
[1874] [Active     ] [            ] [       ] [   50] wrap:mvn:org.scala-lang/scala-library/2.9.2
[1875] [Active     ] [Failure     ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-kernel/1.7.2$Export-Package=org.neo4j.unsafe.batchinsert;neo4j-kernel;=split,*
[1876] [Active     ] [Created     ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-lucene-index/1.7.2$Export-Package=org.neo4j.unsafe.batchinsert;neo4j-lucene-index;=split,*
[1877] [Active     ] [            ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-graph-matching/1.7.2
[1878] [Active     ] [            ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-cypher/1.7.2$DynamicImport-Package=*
[1879] [Active     ] [            ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-rest-graphdb/1.7$Import-Package=org.neo4j.*,org.neo4j.server.plugins;resolution:=optional,javax.transaction.*,org.codehaus.*&Require-Bundle=com.sun.jersey.core,com.sun.jersey.client
[1880] [Active     ] [            ] [       ] [   50] wrap:mvn:com.tinkerpop.blueprints/blueprints-core/1.2
[1881] [Active     ] [            ] [       ] [   50] wrap:mvn:com.tinkerpop.blueprints/blueprints-neo4j-graph/1.2
[1882] [Active     ] [            ] [       ] [   50] wrap:mvn:com.tinkerpop/frames/0.7$Import-Package=com.tinkerpop.blueprints.pgm,*;resolution:=optional
[1883] [Active     ] [            ] [       ] [   50] wrap:mvn:net.coobird/thumbnailator/0.4.1
[1885] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-validation_1.0_spec/1.1
[1886] [Active     ] [            ] [       ] [   50] wrap:mvn:org.picketlink.idm/picketlink-idm-common/1.5.0.Alpha02$Export-Package=*;version=1.5.0.Alpha02
[1887] [Active     ] [            ] [       ] [   50] wrap:mvn:org.picketlink.idm/picketlink-idm-api/1.5.0.Alpha02$Export-Package=*;version=1.5.0.Alpha02
[1889] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.api/1.0.0
[1890] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.core/1.0.0
[1891] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.rmi/1.0.0
[1892] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.url/1.0.0
[1893] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.legacy.support/1.0.0
[1894] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.aries.transaction/org.apache.aries.transaction.blueprint/1.0.0
[1895] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.transaction/org.apache.aries.transaction.manager/1.0.1
[1896] [Active     ] [            ] [       ] [   50] mvn:commons-dbcp/commons-dbcp/1.4
[1897] [Active     ] [            ] [       ] [   50] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.serp/1.13.1_4
[1986] [Active     ] [            ] [       ] [   50] mvn:org.codehaus.jackson/jackson-core-asl/1.9.9
[1987] [Active     ] [            ] [       ] [   50] mvn:org.codehaus.jackson/jackson-mapper-asl/1.9.9
[1988] [Active     ] [            ] [       ] [   50] mvn:joda-time/joda-time/1.6.2
[1989] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-ejb_3.1_spec/1.0.2
[1990] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-jaxrpc_1.1_spec/2.0.0
[1991] [Active     ] [            ] [       ] [   50] mvn:javax.cache/cache-api/0.4
[1992] [Active     ] [            ] [       ] [   50] wrap:mvn:com.github.spullara.mustache.java/compiler/0.8.2
[1993] [Active     ] [            ] [       ] [   50] mvn:org.mongodb/mongo-java-driver/2.9.1
[1995] [Active     ] [            ] [       ] [   50] wrap:mvn:com.google.code.morphia/morphia-logging-slf4j/0.99
[1997] [Active     ] [            ] [       ] [   50] wrap:mvn:com.restfb/restfb/1.6.9
[1998] [Active     ] [            ] [       ] [   50] mvn:org.apache.commons/commons-email/1.2
[2003] [Active     ] [            ] [       ] [   50] wrap:mvn:net.sf.opencsv/opencsv/2.3
[2028] [Active     ] [            ] [       ] [   80] mvn:com.fasterxml.jackson.jaxrs/jackson-jaxrs-json-provider/2.1.0
[2033] [Active     ] [            ] [       ] [   30] mvn:org.apache.felix/org.apache.felix.eventadmin/1.3.0
[2035] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.aopalliance/1.0_6
[2036] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-core/3.0.7.RELEASE
[2037] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-asm/3.0.7.RELEASE
[2038] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-expression/3.0.7.RELEASE
[2039] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-beans/3.0.7.RELEASE
[2040] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-aop/3.0.7.RELEASE
[2041] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-context/3.0.7.RELEASE
[2043] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-context-support/3.0.7.RELEASE
[2046] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.cglib/2.2.2_1
[2047] [Active     ] [            ] [       ] [   30] mvn:org.springframework.osgi/spring-osgi-io/1.2.1
[2048] [Active     ] [            ] [       ] [   30] mvn:org.springframework.osgi/spring-osgi-core/1.2.1
[2049] [Active     ] [            ] [       ] [   30] mvn:org.springframework.osgi/spring-osgi-extender/1.2.1
[2050] [Active     ] [            ] [       ] [   30] mvn:org.springframework.osgi/spring-osgi-annotation/1.2.1
[2215] [Active     ] [            ] [       ] [    9] mvn:org.apache.geronimo.specs/geronimo-osgi-registry/1.1
[2216] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/1.9.0
[2217] [Active     ] [            ] [       ] [   10] mvn:org.apache.geronimo.specs/geronimo-annotation_1.0_spec/1.1.1
[2218] [Active     ] [            ] [       ] [   10] mvn:org.apache.geronimo.specs/geronimo-ws-metadata_2.0_spec/1.1.3
[2219] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.0/1.9.0
[2220] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.2/1.9.0
[2221] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxws-api-2.2/1.9.0
[2222] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.saaj-api-1.3/1.9.0
[2223] [Active     ] [            ] [       ] [   10] mvn:javax.mail/mail/1.4.4
[2225] [Active     ] [            ] [       ] [   20] mvn:org.codehaus.woodstox/stax2-api/3.1.1
[2226] [Active     ] [            ] [       ] [   20] mvn:org.codehaus.woodstox/woodstox-core-asl/4.1.4
[2227] [Active     ] [            ] [       ] [   20] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/2.2.1.1_2
[2228] [Active     ] [            ] [       ] [   20] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-xjc/2.2.1.1_2
[2315] [Active     ] [            ] [       ] [   50] mvn:org.eclipse.emf/org.eclipse.emf.common/2.8.0.v20120911-0500/jar/osgi
[2316] [Active     ] [            ] [       ] [   50] mvn:org.eclipse.emf/org.eclipse.emf.ecore/2.8.1.v20120911-0500/jar/osgi
[2317] [Active     ] [            ] [       ] [   50] mvn:org.eclipse.emf/org.eclipse.emf.ecore.xmi/2.8.0.v20120911-0500/jar/osgi
[2475] [Active     ] [            ] [       ] [   50] wrap:mvn:org.apache.jena/jena-iri/0.9.4
[2476] [Active     ] [            ] [       ] [   50] wrap:mvn:org.apache.jena/jena-core/2.7.4
[2477] [Active     ] [            ] [       ] [   50] wrap:mvn:org.apache.jena/jena-arq/2.9.4
[2482] [Active     ] [            ] [       ] [   40] mvn:org.apache.geronimo.specs/geronimo-annotation_1.1_spec/1.0.1
[2483] [Active     ] [            ] [       ] [   40] mvn:com.google.guava/guava/13.0.1
[2484] [Active     ] [            ] [       ] [   40] mvn:commons-io/commons-io/2.4
[2485] [Active     ] [            ] [       ] [   40] mvn:org.apache.commons/commons-lang3/3.1
[2486] [Active     ] [            ] [       ] [   40] mvn:commons-codec/commons-codec/1.7
[2487] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xpp3/1.1.4c_6
[2488] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xstream/1.4.1_1
[2489] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.core/jackson-core/2.1.0
[2490] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.core/jackson-annotations/2.1.0
[2491] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.core/jackson-databind/2.1.0
[2492] [Active     ] [            ] [       ] [   40] mvn:joda-time/joda-time/2.1
[2493] [Active     ] [            ] [       ] [   40] mvn:org.joda/joda-money/0.6.soluvas1
[2494] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.datatype/jackson-datatype-joda/2.1.0
[2495] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.datatype/jackson-datatype-guava/2.1.0
[2496] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.commons-beanutils/1.8.3_1
[2497] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.cglib/2.1_3_7
[2498] [Active     ] [            ] [       ] [   50] mvn:org.apache.httpcomponents/httpcore-osgi/4.2.2
[2511] [Active     ] [            ] [       ] [   50] mvn:org.apache.httpcomponents/httpclient-osgi/4.2.2
[2584] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.image.shell
[2590] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.salesorder.rs
[2592] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web.mall
[2593] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.salesorder
[2596] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.stomp
[2598] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.data.shell
[2605] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.nav.ui
[2608] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.nav
[2611] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.data
[2613] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.jqueryui
[2614] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web.sys
[2615] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.berbatik.product
[2616] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.berbatik.common
[2618] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shipping.shell
[2623] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web
[2630] [Active     ] [GracePeriod ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.cxf
[2631] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shipping.jne
[2633] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.nav.shell
[2634] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.jquery
[2640] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.salesorder.shell
[2641] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.multitenant.shell
[2664] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.banner
[2665] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.backbone
[2698] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.like
[2699] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop
[2700] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person
[2702] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.story
[2703] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.comment
[2705] [Resolved   ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.wink
[2714] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product
[2728] [Resolved   ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.wink.rs
[2729] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.shell
[2734] [Active     ] [Created     ] [       ] [   80] mvn:org.ops4j.pax.wicket/org.ops4j.pax.wicket.service/1.1.1
[2775] [Active     ] [            ] [       ] [   80] mvn:org.apache.shiro/shiro-core/1.2.1
[2776] [Active     ] [            ] [       ] [   80] mvn:org.apache.shiro/shiro-web/1.2.1
[2797] [Active     ] [            ] [       ] [   80] mvn:org.apache.shiro/shiro-spring/1.2.1
[2803] [Active     ] [            ] [       ] [   80] wrap:mvn:org.wicketstuff/wicketstuff-shiro/1.5.8
[2818] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.common
[2840] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web.shop
[2842] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.web.shop
[2849] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.login
[2852] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.follow
[2874] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.data
[2875] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.security
[2877] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.like.shell
[2878] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.rs
[2880] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.cdi
[2881] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.push
[2882] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.commons
[2883] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.ldap
[2884] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.async
[2886] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.image
[2887] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.json
[2889] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.mongo
[2890] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.facebook
[2901] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.salesorder.web
[2904] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.like.rs
[2906] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.comment.rs
[2959] [Active     ] [            ] [       ] [   50] mvn:com.mysema.commons/mysema-commons-lang/0.2.4
[2960] [Active     ] [            ] [       ] [   50] mvn:com.mysema.querydsl/querydsl-core/2.8.2
[2967] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.jaxrs
[2973] [Active     ] [Created     ] [       ] [   60] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.site
[2994] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.web.shop
[2995] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.rs
[3229] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.web.pub
[3400] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.jquerynotify
[3423] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.berbatik.web
[3476] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.wink.web
[3489] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.bootstrap
[3514] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.web.pub
[3626] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_story.xml
[3636] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_comment.xml
[3637] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_backbone.xml
[3638] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_app.xml
[3654] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_web.xml
[3655] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_salesorder.xml
[3657] [Active     ] [Failure     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_rs.xml
[3658] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_shop.xml
[3659] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_wink.xml
[3668] [Active     ] [Failure     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_shop.rs.xml
[3669] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_like.rs.xml
[3670] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_person.rs.xml
[3671] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_graphdb.xml
[3673] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_story.rs.xml
[3674] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_wink.rs.xml
[3675] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_commons.xml
[3676] [Active     ] [GracePeriod ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_product.rs.xml
[3677] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_salesorder.rs.xml
[3678] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_follow.xml
[3679] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_product.xml
[3680] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_ldap.xml
[3681] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_comment.rs.xml
[3682] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_security.xml
[3683] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_person.xml
[3685] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_like.xml
[3686] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_image.xml
[3831] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.cart.shell
[3832] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.cart
[3840] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_cart.xml
[3862] [Active     ] [            ] [       ] [   40] wrap:mvn:org.jscience/jscience/4.3.1$Export-Package=*;version=4.3.1
[3887] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.story.web
[3888] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.comment.web
[3889] [Active     ] [            ] [       ] [   80] feature:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/commerce-features.xml
[3899] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.story.rs
[3900] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.shell
[3902] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.rs
[3903] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.follow.rs
[3905] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.web.sys
[3908] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.web.mall
[3910] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web.pub
[3911] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.web.pub
[3912] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.like.web
[3913] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.follow.web
[3967] [Active     ] [            ] [       ] [   80] mvn:com.google.code.morphia/morphia/0.99.1-SNAPSHOT
[3995] [Installed  ] [            ] [       ] [   50] mvn:mysql/mysql-connector-java/5.1.21
[3996] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.web.sys
[3997] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.shell
[3998] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.web.mall
[3999] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.web.sys
[4000] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.web.shop
[4001] [Resolved   ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.app
[4002] [Installed  ] [            ] [       ] [   80] mvn:org.apache.openjpa/openjpa/2.2.0
[4010] [Installed  ] [            ] [       ] [   80] wrap:mvn:org.neo4j/neo4j-kernel/1.8$Export-Package=org.neo4j.unsafe.batchinsert;neo4j-kernel;=split,*
[4011] [Installed  ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.0/2.1.0
[4012] [Installed  ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.2/2.1.0
[4013] [Installed  ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxws-api-2.2/2.1.0
[4014] [Installed  ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.saaj-api-1.3/2.1.0
[4016] [Resolved   ] [            ] [       ] [   30] mvn:org.apache.ws.xmlschema/xmlschema-core/2.0.3
[4017] [Resolved   ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.wsdl4j/1.6.2_6
[4018] [Resolved   ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlresolver/1.2_5
[4019] [Resolved   ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.fastinfoset/1.2.7_4
[4020] [Resolved   ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-api/2.7.0
[4021] [Resolved   ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-core/2.7.0
[4022] [Installed  ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-management/2.7.0
[4023] [Installed  ] [            ] [       ] [   40] mvn:org.apache.cxf.karaf/cxf-karaf-commands/2.7.0
[4024] [Resolved   ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-transports-http/2.7.0
[4025] [Active     ] [            ] [       ] [   30] mvn:org.codehaus.jettison/jettison/1.3.2
[4026] [Active     ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-bindings-xml/2.7.0
[4027] [Active     ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-rs-extension-providers/2.7.0
[4028] [Active     ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-rs-extension-search/2.7.0
[4029] [Active     ] [Created     ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-frontend-jaxrs/2.7.0
[4030] [Active     ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-databinding-jaxb/2.7.0
[4031] [Active     ] [            ] [       ] [   80] https://repository.apache.org/content/groups/snapshots/org/apache/servicemix/specs/org.apache.servicemix.specs.jsr339-api-m10/2.2-SNAPSHOT/org.apache.servicemix.specs.jsr339-api-m10-2.2-20121120.023909-11.jar
{code}

Karaf:

{code}
Karaf
  Karaf version               2.3.0
  Karaf home                  /home/ceefour/git/bippo-commerce5/karaf
  Karaf base                  /home/ceefour/git/bippo-commerce5/karaf
  OSGi Framework              org.apache.felix.framework - 4.0.3

JVM
  Java Virtual Machine        OpenJDK 64-Bit Server VM version 23.2-b09
  Version                     1.7.0_07
  Vendor                      Oracle Corporation
  Uptime                      3 minutes
  Total compile time          18.953 seconds
Threads
  Live threads                94
  Daemon threads              79
  Peak                        128
  Total started               177
Memory
  Current heap size           95,993 kbytes
  Maximum heap size           466,048 kbytes
  Committed heap size         173,568 kbytes
  Pending objects             0
  Garbage collector           Name = 'PS Scavenge', Collections = 25, Time = 0.208 seconds
  Garbage collector           Name = 'PS MarkSweep', Collections = 0, Time = 0.000 seconds
Classes
  Current classes loaded      8,771
  Total classes loaded        8,771
  Total classes unloaded      0
Operating system
  Name                        Linux version 3.2.0-32-generic
  Architecture                amd64
  Processors                  8
{code}","20/Nov/12 02:57;ceefour;Interestingly, CXF 2.6.3 works fine with org.apache.servicemix.specs.jsr339-api-m10-2.2-20121120.023909-11.jar (replacing jsr311) :

{code}
START LEVEL 100 , List Threshold: 0
   ID   State         Blueprint      Spring    Level  Location
[   0] [Active     ] [            ] [       ] [    0] System Bundle
[   1] [Active     ] [            ] [       ] [    5] mvn:org.ops4j.pax.url/pax-url-mvn/1.3.5
[   2] [Active     ] [            ] [       ] [    5] mvn:org.ops4j.pax.url/pax-url-wrap/1.3.5
[   3] [Active     ] [            ] [       ] [    8] mvn:org.ops4j.pax.logging/pax-logging-service/1.7.0
[   4] [Active     ] [            ] [       ] [    8] mvn:org.ops4j.pax.logging/pax-logging-api/1.7.0
[   5] [Active     ] [            ] [       ] [   10] mvn:org.apache.felix/org.apache.felix.configadmin/1.4.0
[   6] [Active     ] [            ] [       ] [   11] mvn:org.apache.felix/org.apache.felix.fileinstall/3.2.6
[   7] [Active     ] [Created     ] [       ] [   20] mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.core/1.0.1
[   8] [Active     ] [            ] [       ] [   20] mvn:org.apache.aries/org.apache.aries.util/1.0.0
[   9] [Active     ] [            ] [       ] [   20] mvn:org.apache.aries.proxy/org.apache.aries.proxy.api/1.0.0
[  10] [Active     ] [            ] [       ] [   20] mvn:org.ow2.asm/asm-all/4.0
[  11] [Active     ] [            ] [       ] [   20] mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.api/1.0.0
[  12] [Active     ] [            ] [       ] [   20] mvn:org.apache.aries.proxy/org.apache.aries.proxy.impl/1.0.0
[  13] [Active     ] [Created     ] [       ] [   20] mvn:org.apache.aries.blueprint/org.apache.aries.blueprint.cm/1.0.0
[  14] [Active     ] [Created     ] [       ] [   25] mvn:org.apache.karaf.shell/org.apache.karaf.shell.console/2.3.0
[  15] [Active     ] [Created     ] [       ] [   28] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.blueprint/2.3.0
[  16] [Active     ] [Created     ] [       ] [   28] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.spring/2.3.0
[  17] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.ssh/2.3.0
[  18] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management/org.apache.karaf.management.server/2.3.0
[  19] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.commands/2.3.0
[  20] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.features/org.apache.karaf.features.core/2.3.0
[  21] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.log/2.3.0
[  22] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.features/org.apache.karaf.features.command/2.3.0
[  23] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.diagnostic/org.apache.karaf.diagnostic.management/2.3.0
[  24] [Active     ] [            ] [       ] [   30] mvn:org.apache.sshd/sshd-core/0.8.0
[  25] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.wrap/2.3.0
[  26] [Active     ] [            ] [       ] [   30] mvn:org.apache.mina/mina-core/2.0.7
[  27] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.admin/org.apache.karaf.admin.command/2.3.0
[  28] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.diagnostic/org.apache.karaf.diagnostic.command/2.3.0
[  29] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jmx/org.apache.aries.jmx.core/1.0.1
[  30] [Active     ] [            ] [       ] [   30] mvn:org.apache.karaf.diagnostic/org.apache.karaf.diagnostic.core/2.3.0
[  31] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.admin/org.apache.karaf.admin.management/2.3.0
[  32] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jmx/org.apache.aries.jmx.api/1.0.0
[  33] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.diagnostic/org.apache.karaf.diagnostic.common/2.3.0
[  34] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.dev/2.3.0
[  35] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.features/2.3.0
[  36] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jmx/org.apache.aries.jmx.blueprint.api/1.0.0
[  37] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.jaas/org.apache.karaf.jaas.command/2.3.0
[  38] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.jaas/org.apache.karaf.jaas.modules/2.3.0
[  39] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.osgi/2.3.0
[  40] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.features/org.apache.karaf.features.management/2.3.0
[  41] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.packages/2.3.0
[  42] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jmx/org.apache.aries.jmx.blueprint.core/1.0.1
[  43] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.admin/org.apache.karaf.admin.core/2.3.0
[  44] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.kar/2.3.0
[  45] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.jaas/org.apache.karaf.jaas.config/2.3.0
[  46] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.config/2.3.0
[  47] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.system/2.3.0
[  48] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.bundles/2.3.0
[  49] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.services/2.3.0
[  50] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.config/2.3.0
[  51] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.log/2.3.0
[  52] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.packages/2.3.0
[  53] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.dev/2.3.0
[  57] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/2.1.0
[  58] [Active     ] [            ] [       ] [   30] mvn:org.apache.geronimo.specs/geronimo-servlet_2.5_spec/1.1.2
[  59] [Active     ] [            ] [       ] [   30] mvn:javax.mail/mail/1.4.5
[  60] [Active     ] [            ] [       ] [   30] mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1
[  61] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-util/7.6.7.v20120910
[  62] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-io/7.6.7.v20120910
[  63] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-http/7.6.7.v20120910
[  64] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-client/7.6.7.v20120910
[  65] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-continuation/7.6.7.v20120910
[  66] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-jmx/7.6.7.v20120910
[  67] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-server/7.6.7.v20120910
[  68] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-security/7.6.7.v20120910
[  69] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-servlet/7.6.7.v20120910
[  70] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-servlets/7.6.7.v20120910
[  71] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-xml/7.6.7.v20120910
[  72] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-webapp/7.6.7.v20120910
[  73] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-jndi/7.6.7.v20120910
[  74] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-plus/7.6.7.v20120910
[  75] [Active     ] [            ] [       ] [   30] mvn:org.eclipse.jetty/jetty-websocket/7.6.7.v20120910
[  76] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-api/1.1.3
[  77] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-spi/1.1.3
[  78] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-runtime/1.1.3
[  79] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-jetty/1.1.3
[  80] [Active     ] [            ] [       ] [   30] mvn:org.apache.felix/org.apache.felix.metatype/1.0.4
[  81] [Resolved   ] [            ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.branding/2.3.0
                                       Hosts: 82
[  82] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.console/2.3.0
                                       Fragments: 81
[  83] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.admin/2.3.0
[  84] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.features/2.3.0
[  85] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.webconsole/org.apache.karaf.webconsole.gogo/2.3.0
[  86] [Active     ] [            ] [       ] [   30] mvn:org.apache.felix/org.apache.felix.webconsole.plugins.event/1.0.2
[  87] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-extender-whiteboard/1.1.3
[  88] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.shell/org.apache.karaf.shell.web/2.3.0
[  89] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.karaf.management.mbeans/org.apache.karaf.management.mbeans.web/2.3.0
[  90] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-jsp/1.1.3
[  91] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-extender-war/1.1.3
[  92] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.web/pax-web-deployer/1.1.3
[  93] [Active     ] [            ] [       ] [   30] mvn:org.ops4j.pax.url/pax-url-war/1.3.5
[1767] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-atinject_1.0_spec/1.0
[1768] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-el_2.2_spec/1.0.3
[1770] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-interceptor_3.0_spec/1.0.1
[1771] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-jcdi_1.0_spec/1.0
[1780] [Active     ] [            ] [       ] [   50] mvn:com.rabbitmq/amqp-client/2.8.5
[1831] [Active     ] [            ] [       ] [   50] mvn:org.apache.httpcomponents/httpcore-osgi/4.2.1
[1832] [Active     ] [            ] [       ] [   50] mvn:org.apache.httpcomponents/httpclient-osgi/4.2.1
[1836] [Active     ] [            ] [       ] [   30] mvn:org.apache.geronimo.specs/geronimo-jpa_2.0_spec/1.1
[1837] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jpa/org.apache.aries.jpa.api/1.0.0
[1838] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.aries.jpa/org.apache.aries.jpa.blueprint.aries/1.0.0
[1839] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jpa/org.apache.aries.jpa.container/1.0.0
[1840] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jpa/org.apache.aries.jpa.container.context/1.0.1
[1847] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.antlr-runtime/3.4_2
[1848] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.stringtemplate/4.0.2_1
[1849] [Active     ] [            ] [       ] [   50] mvn:commons-pool/commons-pool/1.6
[1850] [Active     ] [            ] [       ] [   50] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.antlr/2.7.7_5
[1851] [Active     ] [            ] [       ] [   50] mvn:commons-collections/commons-collections/3.2.1
[1852] [Active     ] [            ] [       ] [   50] mvn:commons-lang/commons-lang/2.6
[1853] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-client-api/1.0.0-M13
[1854] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-asn1-api/1.0.0-M13
[1855] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-asn1-ber/1.0.0-M13
[1856] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-i18n/1.0.0-M13
[1857] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-util/1.0.0-M13
[1858] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-codec-core/1.0.0-M13
[1859] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-net-mina/1.0.0-M13
[1860] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-model/1.0.0-M13
[1861] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-schema-data/1.0.0-M13
[1862] [Active     ] [            ] [       ] [   50] mvn:org.apache.directory.shared/shared-ldap-extras-aci/1.0.0-M13
[1864] [Active     ] [            ] [       ] [   50] wrap:mvn:com.google.protobuf/protobuf-java/2.4.1$Export-Package=*;version=2.4.1
[1866] [Active     ] [            ] [       ] [   50] wrap:mvn:com.sun.istack/istack-commons-runtime/2.12$Export-Package=*;version=2.12.0
[1872] [Active     ] [            ] [       ] [   50] mvn:com.sun.jersey/jersey-core/1.14
[1873] [Active     ] [            ] [       ] [   50] mvn:com.sun.jersey/jersey-client/1.14
[1874] [Active     ] [            ] [       ] [   50] wrap:mvn:org.scala-lang/scala-library/2.9.2
[1875] [Active     ] [Failure     ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-kernel/1.7.2$Export-Package=org.neo4j.unsafe.batchinsert;neo4j-kernel;=split,*
[1876] [Active     ] [Created     ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-lucene-index/1.7.2$Export-Package=org.neo4j.unsafe.batchinsert;neo4j-lucene-index;=split,*
[1877] [Active     ] [            ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-graph-matching/1.7.2
[1878] [Active     ] [            ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-cypher/1.7.2$DynamicImport-Package=*
[1879] [Active     ] [            ] [       ] [   50] wrap:mvn:org.neo4j/neo4j-rest-graphdb/1.7$Import-Package=org.neo4j.*,org.neo4j.server.plugins;resolution:=optional,javax.transaction.*,org.codehaus.*&Require-Bundle=com.sun.jersey.core,com.sun.jersey.client
[1880] [Active     ] [            ] [       ] [   50] wrap:mvn:com.tinkerpop.blueprints/blueprints-core/1.2
[1881] [Active     ] [            ] [       ] [   50] wrap:mvn:com.tinkerpop.blueprints/blueprints-neo4j-graph/1.2
[1882] [Active     ] [            ] [       ] [   50] wrap:mvn:com.tinkerpop/frames/0.7$Import-Package=com.tinkerpop.blueprints.pgm,*;resolution:=optional
[1883] [Active     ] [            ] [       ] [   50] wrap:mvn:net.coobird/thumbnailator/0.4.1
[1885] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-validation_1.0_spec/1.1
[1886] [Active     ] [            ] [       ] [   50] wrap:mvn:org.picketlink.idm/picketlink-idm-common/1.5.0.Alpha02$Export-Package=*;version=1.5.0.Alpha02
[1887] [Active     ] [            ] [       ] [   50] wrap:mvn:org.picketlink.idm/picketlink-idm-api/1.5.0.Alpha02$Export-Package=*;version=1.5.0.Alpha02
[1889] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.api/1.0.0
[1890] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.core/1.0.0
[1891] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.rmi/1.0.0
[1892] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.url/1.0.0
[1893] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.jndi/org.apache.aries.jndi.legacy.support/1.0.0
[1894] [Active     ] [Created     ] [       ] [   30] mvn:org.apache.aries.transaction/org.apache.aries.transaction.blueprint/1.0.0
[1895] [Active     ] [            ] [       ] [   30] mvn:org.apache.aries.transaction/org.apache.aries.transaction.manager/1.0.1
[1896] [Active     ] [            ] [       ] [   50] mvn:commons-dbcp/commons-dbcp/1.4
[1897] [Active     ] [            ] [       ] [   50] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.serp/1.13.1_4
[1986] [Active     ] [            ] [       ] [   50] mvn:org.codehaus.jackson/jackson-core-asl/1.9.9
[1987] [Active     ] [            ] [       ] [   50] mvn:org.codehaus.jackson/jackson-mapper-asl/1.9.9
[1988] [Active     ] [            ] [       ] [   50] mvn:joda-time/joda-time/1.6.2
[1989] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-ejb_3.1_spec/1.0.2
[1990] [Active     ] [            ] [       ] [   50] mvn:org.apache.geronimo.specs/geronimo-jaxrpc_1.1_spec/2.0.0
[1991] [Active     ] [            ] [       ] [   50] mvn:javax.cache/cache-api/0.4
[1992] [Active     ] [            ] [       ] [   50] wrap:mvn:com.github.spullara.mustache.java/compiler/0.8.2
[1993] [Active     ] [            ] [       ] [   50] mvn:org.mongodb/mongo-java-driver/2.9.1
[1995] [Active     ] [            ] [       ] [   50] wrap:mvn:com.google.code.morphia/morphia-logging-slf4j/0.99
[1997] [Active     ] [            ] [       ] [   50] wrap:mvn:com.restfb/restfb/1.6.9
[1998] [Active     ] [            ] [       ] [   50] mvn:org.apache.commons/commons-email/1.2
[2003] [Active     ] [            ] [       ] [   50] wrap:mvn:net.sf.opencsv/opencsv/2.3
[2028] [Active     ] [            ] [       ] [   80] mvn:com.fasterxml.jackson.jaxrs/jackson-jaxrs-json-provider/2.1.0
[2033] [Active     ] [            ] [       ] [   30] mvn:org.apache.felix/org.apache.felix.eventadmin/1.3.0
[2035] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.aopalliance/1.0_6
[2036] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-core/3.0.7.RELEASE
[2037] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-asm/3.0.7.RELEASE
[2038] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-expression/3.0.7.RELEASE
[2039] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-beans/3.0.7.RELEASE
[2040] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-aop/3.0.7.RELEASE
[2041] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-context/3.0.7.RELEASE
[2043] [Active     ] [            ] [       ] [   30] mvn:org.springframework/spring-context-support/3.0.7.RELEASE
[2046] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.cglib/2.2.2_1
[2047] [Active     ] [            ] [       ] [   30] mvn:org.springframework.osgi/spring-osgi-io/1.2.1
[2048] [Active     ] [            ] [       ] [   30] mvn:org.springframework.osgi/spring-osgi-core/1.2.1
[2049] [Active     ] [            ] [       ] [   30] mvn:org.springframework.osgi/spring-osgi-extender/1.2.1
[2050] [Active     ] [            ] [       ] [   30] mvn:org.springframework.osgi/spring-osgi-annotation/1.2.1
[2216] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/1.9.0
[2219] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.0/1.9.0
[2220] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.2/1.9.0
[2221] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxws-api-2.2/1.9.0
[2222] [Active     ] [            ] [       ] [   10] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.saaj-api-1.3/1.9.0
[2228] [Active     ] [            ] [       ] [   20] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-xjc/2.2.1.1_2
[2315] [Active     ] [            ] [       ] [   50] mvn:org.eclipse.emf/org.eclipse.emf.common/2.8.0.v20120911-0500/jar/osgi
[2316] [Active     ] [            ] [       ] [   50] mvn:org.eclipse.emf/org.eclipse.emf.ecore/2.8.1.v20120911-0500/jar/osgi
[2317] [Active     ] [            ] [       ] [   50] mvn:org.eclipse.emf/org.eclipse.emf.ecore.xmi/2.8.0.v20120911-0500/jar/osgi
[2475] [Active     ] [            ] [       ] [   50] wrap:mvn:org.apache.jena/jena-iri/0.9.4
[2476] [Active     ] [            ] [       ] [   50] wrap:mvn:org.apache.jena/jena-core/2.7.4
[2477] [Active     ] [            ] [       ] [   50] wrap:mvn:org.apache.jena/jena-arq/2.9.4
[2482] [Active     ] [            ] [       ] [   40] mvn:org.apache.geronimo.specs/geronimo-annotation_1.1_spec/1.0.1
[2483] [Active     ] [            ] [       ] [   40] mvn:com.google.guava/guava/13.0.1
[2484] [Active     ] [            ] [       ] [   40] mvn:commons-io/commons-io/2.4
[2485] [Active     ] [            ] [       ] [   40] mvn:org.apache.commons/commons-lang3/3.1
[2486] [Active     ] [            ] [       ] [   40] mvn:commons-codec/commons-codec/1.7
[2487] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xpp3/1.1.4c_6
[2488] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xstream/1.4.1_1
[2489] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.core/jackson-core/2.1.0
[2490] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.core/jackson-annotations/2.1.0
[2491] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.core/jackson-databind/2.1.0
[2492] [Active     ] [            ] [       ] [   40] mvn:joda-time/joda-time/2.1
[2493] [Active     ] [            ] [       ] [   40] mvn:org.joda/joda-money/0.6.soluvas1
[2494] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.datatype/jackson-datatype-joda/2.1.0
[2495] [Active     ] [            ] [       ] [   40] mvn:com.fasterxml.jackson.datatype/jackson-datatype-guava/2.1.0
[2496] [Active     ] [            ] [       ] [   40] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.commons-beanutils/1.8.3_1
[2497] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.cglib/2.1_3_7
[2498] [Active     ] [            ] [       ] [   50] mvn:org.apache.httpcomponents/httpcore-osgi/4.2.2
[2511] [Active     ] [            ] [       ] [   50] mvn:org.apache.httpcomponents/httpclient-osgi/4.2.2
[2584] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.image.shell
[2590] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.salesorder.rs
[2592] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web.mall
[2593] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.salesorder
[2596] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.stomp
[2598] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.data.shell
[2605] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.nav.ui
[2608] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.nav
[2611] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.data
[2613] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.jqueryui
[2614] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web.sys
[2615] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.berbatik.product
[2616] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.berbatik.common
[2618] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shipping.shell
[2623] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web
[2630] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.cxf
[2631] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shipping.jne
[2633] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.nav.shell
[2634] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.jquery
[2640] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.salesorder.shell
[2641] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.soluvas.multitenant.shell
[2664] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.banner
[2665] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.backbone
[2698] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.like
[2699] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop
[2700] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person
[2702] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.story
[2703] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.comment
[2705] [Resolved   ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.wink
[2714] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product
[2728] [Resolved   ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.wink.rs
[2729] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.shell
[2734] [Active     ] [Created     ] [       ] [   80] mvn:org.ops4j.pax.wicket/org.ops4j.pax.wicket.service/1.1.1
[2775] [Active     ] [            ] [       ] [   80] mvn:org.apache.shiro/shiro-core/1.2.1
[2776] [Active     ] [            ] [       ] [   80] mvn:org.apache.shiro/shiro-web/1.2.1
[2797] [Active     ] [            ] [       ] [   80] mvn:org.apache.shiro/shiro-spring/1.2.1
[2803] [Active     ] [            ] [       ] [   80] wrap:mvn:org.wicketstuff/wicketstuff-shiro/1.5.8
[2818] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.common
[2840] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web.shop
[2842] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.web.shop
[2849] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.login
[2852] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.follow
[2874] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.data
[2875] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.security
[2877] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.like.shell
[2878] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.rs
[2880] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.cdi
[2881] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.push
[2882] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.commons
[2883] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.ldap
[2884] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.async
[2886] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.image
[2887] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.json
[2889] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.mongo
[2890] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.facebook
[2901] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.salesorder.web
[2904] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.like.rs
[2906] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.comment.rs
[2959] [Active     ] [            ] [       ] [   50] mvn:com.mysema.commons/mysema-commons-lang/0.2.4
[2960] [Active     ] [            ] [       ] [   50] mvn:com.mysema.querydsl/querydsl-core/2.8.2
[2967] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.jaxrs
[2973] [Active     ] [Created     ] [       ] [   60] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.site
[2994] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.web.shop
[2995] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.rs
[3229] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.web.pub
[3400] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.jquerynotify
[3423] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/com.berbatik.web
[3476] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.wink.web
[3489] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/org.soluvas.web.bootstrap
[3514] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.web.pub
[3626] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_story.xml
[3636] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_comment.xml
[3637] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_backbone.xml
[3638] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_app.xml
[3654] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_web.xml
[3655] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_salesorder.xml
[3657] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_rs.xml
[3658] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_shop.xml
[3659] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_wink.xml
[3668] [Active     ] [Failure     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_shop.rs.xml
[3669] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_like.rs.xml
[3670] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_person.rs.xml
[3671] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_graphdb.xml
[3673] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_story.rs.xml
[3674] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_wink.rs.xml
[3675] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_commons.xml
[3676] [Active     ] [GracePeriod ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_product.rs.xml
[3677] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_salesorder.rs.xml
[3678] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_follow.xml
[3679] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_product.xml
[3680] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_ldap.xml
[3681] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_comment.rs.xml
[3682] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_security.xml
[3683] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_person.xml
[3685] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_like.xml
[3686] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_image.xml
[3831] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.cart.shell
[3832] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.cart
[3840] [Active     ] [Created     ] [       ] [   80] blueprint:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/berbatik_cart.xml
[3862] [Active     ] [            ] [       ] [   40] wrap:mvn:org.jscience/jscience/4.3.1$Export-Package=*;version=4.3.1
[3887] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.story.web
[3888] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.comment.web
[3889] [Active     ] [            ] [       ] [   80] feature:file:/home/ceefour/git/bippo-commerce5/karaf/deploy/commerce-features.xml
[3899] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.story.rs
[3900] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.shell
[3902] [Active     ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.rs
[3903] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.follow.rs
[3905] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.web.sys
[3908] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.product.web.mall
[3910] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.web.pub
[3911] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.web.pub
[3912] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.like.web
[3913] [Active     ] [Created     ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.follow.web
[3967] [Active     ] [            ] [       ] [   80] mvn:com.google.code.morphia/morphia/0.99.1-SNAPSHOT
[3995] [Installed  ] [            ] [       ] [   50] mvn:mysql/mysql-connector-java/5.1.21
[3996] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.web.sys
[3997] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.shell
[3998] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.web.mall
[3999] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.shop.web.sys
[4000] [Installed  ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.person.web.shop
[4001] [Resolved   ] [            ] [       ] [   80] jardir:/home/ceefour/git/bippo-commerce5/karaf/deploy/id.co.bippo.app
[4002] [Installed  ] [            ] [       ] [   80] mvn:org.apache.openjpa/openjpa/2.2.0
[4010] [Installed  ] [            ] [       ] [   80] wrap:mvn:org.neo4j/neo4j-kernel/1.8$Export-Package=org.neo4j.unsafe.batchinsert;neo4j-kernel;=split,*
[4031] [Active     ] [            ] [       ] [   80] https://repository.apache.org/content/groups/snapshots/org/apache/servicemix/specs/org.apache.servicemix.specs.jsr339-api-m10/2.2-SNAPSHOT/org.apache.servicemix.specs.jsr339-api-m10-2.2-20121120.023909-11.jar
[4032] [Active     ] [            ] [       ] [    9] mvn:org.apache.geronimo.specs/geronimo-osgi-registry/1.1
[4033] [Active     ] [            ] [       ] [   10] mvn:org.apache.geronimo.specs/geronimo-annotation_1.0_spec/1.1.1
[4034] [Active     ] [            ] [       ] [   10] mvn:org.apache.geronimo.specs/geronimo-ws-metadata_2.0_spec/1.1.3
[4035] [Active     ] [            ] [       ] [   10] mvn:javax.mail/mail/1.4.4
[4037] [Active     ] [            ] [       ] [   20] mvn:org.codehaus.woodstox/stax2-api/3.1.1
[4038] [Active     ] [            ] [       ] [   20] mvn:org.codehaus.woodstox/woodstox-core-asl/4.1.4
[4039] [Active     ] [            ] [       ] [   20] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/2.2.1.1_2
[4040] [Active     ] [            ] [       ] [   30] mvn:org.apache.ws.xmlschema/xmlschema-core/2.0.3
[4041] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.wsdl4j/1.6.2_6
[4042] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlresolver/1.2_5
[4043] [Active     ] [            ] [       ] [   30] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.fastinfoset/1.2.7_4
[4044] [Active     ] [Created     ] [       ] [   40] mvn:org.apache.cxf/cxf-api/2.6.3
[4045] [Active     ] [Created     ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-core/2.6.3
[4046] [Active     ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-management/2.6.3
[4047] [Active     ] [Created     ] [       ] [   40] mvn:org.apache.cxf.karaf/cxf-karaf-commands/2.6.3
[4048] [Active     ] [Created     ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-transports-http/2.6.3
[4049] [Active     ] [            ] [       ] [   30] mvn:org.codehaus.jettison/jettison/1.3.2
[4050] [Active     ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-bindings-xml/2.6.3
[4051] [Active     ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-rs-extension-providers/2.6.3
[4052] [Active     ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-rs-extension-search/2.6.3
[4053] [Active     ] [Created     ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-frontend-jaxrs/2.6.3
[4054] [Active     ] [            ] [       ] [   40] mvn:org.apache.cxf/cxf-rt-databinding-jaxb/2.6.3
{code}","21/Nov/12 15:54;sergey_beryozkin;Can you confirm please that either relaxing the upper range or using the snapshot spec bundle available at
https://repository.apache.org/content/groups/snapshots/org/apache/servicemix/specs/org.apache.servicemix.specs.jsr339-api-m10/2.2-SNAPSHOT/org.apache.servicemix.specs.jsr339-api-m10-2.2-20121119.181454-10.jar

fixes the migration issue (assuming the re-compilation against jsr339-api is not an option) ?

I hope we can close the issue asap :-), but would like to get your confirmation first
Thanks","23/Nov/12 15:38;sergey_beryozkin;CXF 2.7.0 Migration Guide has been updated with the conclusions from this thread, so I'm considering this thread being resolved.
Let us know please if you have any concerns",,,,,,,
Attachment Header Content-ID conversion,CXF-4570,12611957,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ivywjhua,ivywjhua,16/Oct/12 03:42,19/Dec/12 14:38,14/Mar/19 02:30,17/Oct/12 15:51,,,,,,,,2.5.7,2.6.4,2.7.1,,JAX-WS Runtime,,,,0,,,,,,,,"I have a migrating problem for headers in attachment. 
For example, the message sent out contains Content-ID:<foo>,
Content-ID header value is ""<foo>"" instead of ""foo"" at server side.

When creating attachment of the following code:
org.apache.cxf.attachment.AttachmentUtil.createAttachment(InputStream, InternetHeaders)
There's a id conversion at first. But in the following header processing, there's no id conversion for Content-ID.

Since Content-ID conversion is needed for id(""new AttachmentImpl(id)""), I think it is also useful for headers.
",,,,,,,,,,,,,,,,,,,,17/Oct/12 11:09;ivywjhua;04.png;https://issues.apache.org/jira/secure/attachment/12549487/04.png,16/Oct/12 03:43;ivywjhua;AttachmentUtil.java.patch;https://issues.apache.org/jira/secure/attachment/12549251/AttachmentUtil.java.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-10-16 17:50:09.107,,,no_permission,,Unknown,,,,,,,,,,,248894,,,Wed Oct 17 15:51:00 UTC 2012,,,,,,0|i0a2bj:,56649,,,,,,,,"16/Oct/12 17:50;dkulp;

Personally, I'm against this change.   Per various specs (such as SAAJ), the Headers map for the attachment should be the exact headers that are passing in the mime part on the wire.  ","17/Oct/12 00:12;ffang;OK, as this behavior is from spec, we need keep it as is.
","17/Oct/12 05:51;ivywjhua;Hello
If keep the exact headers, we will get two header named ""Content-ID"" with different values.
For example, the message contains ""Content-ID:<foo>""
headers in jdk Attachment object is
{code}
Content-ID:foo
Content-ID:<foo>
{code}

It is caused by the following code:
method: *org.apache.cxf.binding.soap.saaj.SAAJInInterceptor.handleMessage(SoapMessage)*
{code}
AttachmentPart ap = soapMessage.createAttachmentPart(a.getDataHandler());
ap.setContentId(a.getId());	// 1. jdk invoke setMimeHeader(""Content-ID"", paramString);
Iterator<String> i = a.getHeaderNames();
while (i != null && i.hasNext()) {
	String h = i.next();
	String val = a.getHeader(h);
	ap.addMimeHeader(h, val);	// 2. jdk invoke headers.addHeader(paramString1, paramString2);
}
soapMessage.addAttachmentPart(ap);
{code}
""*ap.setContentId(a.getId())*"" set ""Content-ID"" header with ""foo"".
""*ap.addMimeHeader(h, val)*""  add ""Content-ID"" header with ""<foo>""

It is confused to get headers with the same header name but different header values.
I think there is somtehing wrong in *create attachment for cxf* or *copy header to jdk attachment*.
","17/Oct/12 06:20;ivywjhua;Snippet code for copying attachment from cxf to jdk simulation.
{code}
import java.util.Iterator;

import javax.xml.soap.AttachmentPart;
import javax.xml.soap.MessageFactory;
import javax.xml.soap.MimeHeader;
import javax.xml.soap.SOAPMessage;

public class JDKAttachmentTest {

	private static final String STR_CONTENT_ID = ""Content-ID"";

	public static void main(String[] args) throws Exception {
		MessageFactory messageFactory = MessageFactory.newInstance();
		SOAPMessage soapMessage = messageFactory.createMessage();
		AttachmentPart attachmentPart = soapMessage.createAttachmentPart();
		attachmentPart.setContentId(""foo"");
		attachmentPart.addMimeHeader(STR_CONTENT_ID, ""<foo>"");
		soapMessage.addAttachmentPart(attachmentPart);
		
		Iterator<?> attIterator = soapMessage.getAttachments();
		while(attIterator.hasNext()){
			AttachmentPart att = (AttachmentPart)attIterator.next();
			Iterator<?> headerIterator = att.getAllMimeHeaders();
			while(headerIterator.hasNext()){
				MimeHeader header = (MimeHeader)headerIterator.next();
				System.out.println(header.getName() + "":"" + header.getValue());
			}
		}
	}
}
{code}

output:
{code}
Content-ID:foo
Content-ID:<foo>
{code}","17/Oct/12 10:17;ay;org.apache.cxf.attachment.AttachmentDeserializerTest's testDeserializerSwA uses this create attachment method and this is not getting any issue (only the bracketed id is placed in the headers and when this message is reserialized, you see only the bracketed content id). So, I don't know why you are getting the unbracketed one. So, I am not sure if AttachmentUtil itself really has some issue.
","17/Oct/12 11:06;ivywjhua;There are two attachment implementation classes, one is from cxf framework and another if from jdk. ""Content-ID"" is stored in *id* field in cxf implementation. On the contrary ""Content-ID"" is stroed in ""headers"" in jdk implementation.
*org.apache.cxf.attachment.AttachmentImpl*(cxf framework)
{code}
private String id;
private Map<String, String> headers = new HashMap<String, String>();
{code}

*com.sun.xml.internal.messaging.saaj.soap.AttachmentPartImpl*
{code}
private final MimeHeaders headers;
public void setMimeHeader(String paramString1, String paramString2) {
    this.headers.setHeader(paramString1, paramString2);
  }

  public void addMimeHeader(String paramString1, String paramString2) {
    this.headers.addHeader(paramString1, paramString2);
  }
{code}
*javax.xml.soap.MimeHeaders*
{code}
private Vector headers;
{code}

When copying content from cxf attachment to jdk attachment, both ""Content-ID"" values are copied to *Vector headers*.

",17/Oct/12 11:09;ivywjhua;Attachment *04.png* is for org.apache.cxf.attachment.AttachmentImpl instance when running test org.apache.cxf.attachment.AttachmentDeserializerTest.testDeserializerSwA(),"17/Oct/12 15:51;dkulp;
Cleaned up the SAAJIn/Out stuff a little to only call the setContentID if a getContentID call returns null after setting all the headers.   Thus, this should fix the double header issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-services-wsn-core doesn't support to be installed with other verion of CXF,CXF-4569,12611942,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,16/Oct/12 01:18,19/Dec/12 14:38,14/Mar/19 02:30,16/Oct/12 02:52,2.5.6,2.6.3,2.7,,,,,2.5.7,2.6.4,2.7.1,,Services,,,,0,,,,,,,,"As WSN services is using JAX-WS API, it should not dependent on specification of CXF.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,248870,,,Tue Oct 16 02:52:18 UTC 2012,,,,,,0|i0a25j:,56622,,,,,,,,"16/Oct/12 02:52;njiang;Applied the patch into trunk, 2.6.x-fixes and 2.5.x-fixes branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Couple error messages did not get moved to managers properties file,CXF-4567,12611877,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,15/Oct/12 18:44,19/Dec/12 14:38,14/Mar/19 02:30,20/Nov/12 20:16,2.6.3,2.7,,,,,,2.6.4,2.7.1,,,Core,,,,0,,,,,,,,"
When several of the managers were moved to org/apache/cxf/bus/managers/, their error messages that were in their previos package Messages.properties were not moved with them.  For example:  NO_BINDING_FACTORY_EXC",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,248787,,,Mon Oct 15 18:49:00 UTC 2012,,,,,,0|i09zyv:,56268,,,,,,,,"15/Oct/12 18:49;dkulp;Actually, just the BindingFactoryManagerImpl
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StaxTransformFeature outTransformElements does not work when converting namespaces,CXF-4566,12611859,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,15/Oct/12 17:21,19/Dec/12 14:38,14/Mar/19 02:30,17/Oct/12 18:32,2.6.3,,,,,,,2.5.7,2.6.4,2.7.1,,Core,,,,0,,,,,,,,"When replacing a namespace with another namespace, if some elements belonging to that namespace must retain that namespace, the transformation will result with the undeclared namespace for those elements.

http://cxf.547215.n5.nabble.com/StaxTransformFeature-outTransformElements-problem-tc5716579.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,248766,,,2012-10-15 17:21:58.0,,,,,,0|i09zt3:,56242,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The message flow is not correct when handler throw ProtocolException outbound,CXF-4565,12611844,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,john xiao,john xiao,15/Oct/12 15:05,16/Jul/13 19:28,14/Mar/19 02:30,16/Oct/12 04:14,,,,,,,,2.5.7,2.6.4,2.7.1,,JAX-WS Runtime,,,,0,handler,,,,,,,"The scenario is using two SoapHandler and one LogicalHandler to intercept the message from client, and when LogicalHandler at server side handle the outbound message, it throws a ProtocolException.

Now, the message flow at server side in CXF is:

Server_SOAPHandler1_handleMessage_Inbound:
Server_SOAPHandler2_handleMessage_Inbound:
Server_LogicalHandler_handleMessage_Inbound:
Server_countString:
Server_LogicalHandler_handleMessage_Outbound:
Server_LogicalHandler_handleFault_Outbound: // All of the three
Server_SOAPHandler2_handleFault_Outbound:   // handlerFault methods
Server_SOAPHandler1_handleFault_Outbound:   // are invoked
Server_LogicalHandler_close:
Server_SOAPHandler2_close:
Server_SOAPHandler1_close:

But according to jsr224 9.3.2.1

Throw ProtocolException or a subclass This indicates that normal message processing should cease.
Subsequent actions depend on whether the MEP in use requires a response to the message currently being processed or not:

No response Normal message processing stops, close is called on each previously invoked handler in the chain, the exception is dispatched (see section 9.1.2.3).

I also test the same case in WebSphere8.5 and Glassfish3.1.2.2, the message flow is:
Server_SOAPHandler1_handleMessage_Inbound:
Server_SOAPHandler2_handleMessage_Inbound:
Server_LogicalHandler_handleMessage_Inbound:
Server_countString:
Server_LogicalHandler_handleMessage_Outbound:
Server_LogicalHandler_close:
Server_SOAPHandler2_close:
Server_SOAPHandler1_close:

The handleFault methods are not called, and the close methods are called directly, I think it matches the spec better.

I also provide a patch for the issue.",,,,,,,,,,,,,,,,,,,,15/Oct/12 15:09;john xiao;cxf-4565.patch;https://issues.apache.org/jira/secure/attachment/12549151/cxf-4565.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-16 04:14:19.951,,,no_permission,,Unknown,,,,,,,,,,,248719,,,Tue Oct 16 04:23:16 UTC 2012,,,,,,0|i09xzr:,55948,,,,,,,,15/Oct/12 15:09;john xiao;Could some one review the patch? thank you very much :),"16/Oct/12 04:14;ffang;apply patch on behalf of Yi Xiao with thanks
http://svn.apache.org/viewvc?rev=1398629&view=rev for trunk
http://svn.apache.org/viewvc?rev=1398632&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1398633&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1398636&view=rev for 2.4.x branch",16/Oct/12 04:23;john xiao;You are welcome.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in MavenToolErrorListener during wsdl2java code generation,CXF-4564,12611841,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,deki,deki,15/Oct/12 14:52,19/Dec/12 14:38,14/Mar/19 02:30,23/Oct/12 20:22,2.6.3,,,,,,,2.6.4,2.7.1,,,Tooling,,,,0,,,,,,,,"Running wsdl2java with 2.6.3 on JDK 7 causes an NPE. Everything is fine JDK 6.

{code}
[ERROR] Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.6.3:wsdl2java (wsdl-MyService.wsdl) on project my-maven-module: Execution wsdl-MyService.wsdl of goal org.apache.cxf:cxf-codegen-plugin:2.6.3:wsdl2java failed: java.lang.NullPointerException -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.6.3:wsdl2java (wsdl-MyService.wsdl) on project MyProject: Execution wsdl-MyService.wsdl of goal org.apache.cxf:cxf-codegen-plugin:2.6.3:wsdl2java failed: java.lang.NullPointerException
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:225)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.maven.plugin.PluginExecutionException: Execution wsdl-MyService.wsdl of goal org.apache.cxf:cxf-codegen-plugin:2.6.3:wsdl2java failed: java.lang.NullPointerException
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:110)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
        ... 19 more
Caused by: org.apache.cxf.tools.common.ToolException: java.lang.NullPointerException
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:308)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:113)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:86)
        at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.generate(WSDL2JavaMojo.java:380)
        at org.apache.cxf.maven_plugin.AbstractCodegenMoho.execute(AbstractCodegenMoho.java:257)
        at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.execute(WSDL2JavaMojo.java:477)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
        ... 20 more
Caused by: java.lang.NullPointerException
        at java.io.File.<init>(File.java:251)
        at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo$MavenToolErrorListener$1.<init>(WSDL2JavaMojo.java:76)
        at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo$MavenToolErrorListener.addError(WSDL2JavaMojo.java:74)
        at org.apache.cxf.tools.wsdlto.databinding.jaxb.JAXBBindErrorListener.error(JAXBBindErrorListener.java:40)
        at com.sun.tools.xjc.api.impl.s2j.SchemaCompilerImpl.error(SchemaCompilerImpl.java:316)
        at com.sun.tools.xjc.ErrorReceiver.error(ErrorReceiver.java:94)
        at com.sun.tools.xjc.reader.internalizer.DOMForest.parse(DOMForest.java:405)
        at com.sun.tools.xjc.reader.internalizer.DOMForest.parse(DOMForest.java:304)
        at com.sun.tools.xjc.reader.internalizer.AbstractReferenceFinderImpl.startElement(AbstractReferenceFinderImpl.java:115)
        at com.sun.istack.XMLStreamReaderToContentHandler.handleStartElement(XMLStreamReaderToContentHandler.java:304)
        at com.sun.istack.XMLStreamReaderToContentHandler.bridge(XMLStreamReaderToContentHandler.java:149)
        at com.sun.tools.xjc.reader.internalizer.DOMForest.parse(DOMForest.java:426)
        at com.sun.tools.xjc.api.impl.s2j.SchemaCompilerImpl.parseSchema(SchemaCompilerImpl.java:173)
        at org.apache.cxf.tools.wsdlto.databinding.jaxb.JAXBDataBinding.addSchemas(JAXBDataBinding.java:627)
        at org.apache.cxf.tools.wsdlto.databinding.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:392)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.generateTypes(WSDLToJavaContainer.java:603)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.processWsdl(WSDLToJavaContainer.java:248)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:142)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:300)
{code}",JDK 7,,,,,,,,,,,,,,,,,,,23/Oct/12 09:29;deki;cxf-4564-sampleproject.zip;https://issues.apache.org/jira/secure/attachment/12550431/cxf-4564-sampleproject.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-23 01:19:02.698,,,no_permission,,Unknown,,,,,,,,,,,248716,,,Tue Oct 23 20:22:38 UTC 2012,,,,,,0|i09xyv:,55944,,,,,,,,"23/Oct/12 01:19;ffang;Hi,

Could you please please append a maven project which we can reproduce this issue?
Especially the wsdl-MyService.wsdl you used here.

Thanks
Freeman",23/Oct/12 09:29;deki;I've attached a sample project.,"23/Oct/12 18:30;dkulp;
This is due to http://java.net/jira/browse/JAXB-925

Trying to see if there is anything we can easily do to handle this....
","23/Oct/12 20:22;dkulp;
Specific test case fixed, but there is definitely a bug in JAXB that we cannot work around that could still cause issues.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Empty XML or JSON responses are not processed correctly on the client side,CXF-4563,12611835,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergeyb,sergey_beryozkin,sergey_beryozkin,15/Oct/12 14:08,19/Dec/12 14:38,14/Mar/19 02:30,16/Oct/12 16:48,,,,,,,,2.5.7,2.6.4,2.7.1,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,248710,,,2012-10-15 14:08:37.0,,,,,,0|i09xxj:,55938,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Soap Fault fields precedence is incorrect,CXF-4562,12611782,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,hanhongfang,hanhongfang,15/Oct/12 05:24,16/Jul/13 19:28,14/Mar/19 02:30,15/Oct/12 08:33,2.6.2,,,,,,,2.5.7,2.6.4,2.7.1,,Soap Binding,,,,0,,,,,,,,"According to JSR224 spec chapter 10.2.2.3, the the fields of the fault message are populated according to the following rules of precedence:
- faultcode
- faultstring
- faultactor (role in SOAP 1.2)
- detail

But in current impl of cxf 2.6.2, detail is before faultactor(role in SOAP 1.2).",Window 7 + sun jdk 1.6.0_29,,,,,,,,,,,,,,,,,,,15/Oct/12 05:25;hanhongfang;Soap12FaultOutInterceptor.patch;https://issues.apache.org/jira/secure/attachment/12549108/Soap12FaultOutInterceptor.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-15 08:33:46.556,,,no_permission,,Unknown,,,,,,,,,,,248616,,,Mon Oct 15 08:33:46 UTC 2012,,,,,,0|i09wpb:,55739,,,,,,,,"15/Oct/12 05:25;hanhongfang;Patch is attached, please help to review.","15/Oct/12 08:33;ffang;apply patch on behalf of Han Hong Fang with thanks
http://svn.apache.org/viewvc?rev=1398207&view=rev for trunk
http://svn.apache.org/viewvc?rev=1398209&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1398211&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1398213&view=rev for 2.4.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default JAX-RS SAML Claim NameFormat is incorrect,CXF-4560,12611546,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,12/Oct/12 15:59,19/Dec/12 14:38,14/Mar/19 02:30,15/Oct/12 09:59,2.5.6,2.6.3,2.7,,,,,2.7.1,,,,JAX-RS Security,,,,0,,,,,,,,"The default JAX-RS Claim NameFormat is incorrect. Instead of ""http://schemas.xmlsoap.org/ws/2005/05/identity/claims"" it should be ""urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"".

I will fix this on trunk only (i.e. for CXF 2.7.1) for backwards compatibility reasons.",,,,,,,,,,,,,,CXF-4484,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,247992,,,2012-10-12 15:59:15.0,,,,,,0|i0965r:,51430,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
More unclosed XMLStreamReader/Writer - CXF-4523,CXF-4557,12611483,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,zhangpsh,zhangpsh,12/Oct/12 05:17,19/Dec/12 14:38,14/Mar/19 02:30,12/Oct/12 18:27,2.6.2,,,,,,,2.5.7,2.6.4,2.7.1,,,,,,0,,,,,,,,"Beside what is fixed in CXF-4523, we found more code with unclosed XMLStreamReader/Writer which may affect the performance of cxf. 
We have made a patch to close them. Please check the attached patch file.",,,,,,,,,,,,,,,,,,,,12/Oct/12 05:19;zhangpsh;CXF-4557.patch;https://issues.apache.org/jira/secure/attachment/12548857/CXF-4557.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-12 18:27:55.939,,,no_permission,,Unknown,,,,,,,,,,,247857,,,Fri Oct 12 18:27:55 UTC 2012,,,,,,0|i08qcv:,48870,,,,,,,,12/Oct/12 05:19;zhangpsh;close XMLStreamReader/Writer,12/Oct/12 18:27;dkulp;Slightly modified patch applied.  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS SAML TLS HolderOfKey check does not work,CXF-4556,12611375,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,11/Oct/12 15:54,19/Dec/12 14:38,14/Mar/19 02:30,11/Oct/12 16:49,2.5.6,2.6.3,2.7,,,,,2.5.7,2.6.4,2.7.1,,JAX-RS Security,,,,0,,,,,,,,"
The HolderOfKey check that is done when a SAML Assertion is received via a JAX-RS SAML interceptor does not work when TLS is used. This is due to the following check:

if (tlsCerts == null || sig == null)

""sig"" will always be  null for the TLS case.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,247651,,,2012-10-11 15:54:28.0,,,,,,0|i08mxz:,48316,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
" ""http://schemas.xmlsoap.org/soap/http/"" should not be in the SoapTransportFactory active namespaces list",CXF-4554,12611170,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,10/Oct/12 13:27,19/Dec/12 14:38,14/Mar/19 02:30,15/Oct/12 08:07,2.4.9,2.5.5,2.6.2,,,,,2.5.7,2.6.4,2.7.1,,,,,,0,,,,,,,,"""http://schemas.xmlsoap.org/soap/http/"" is not a validate namespace for SOAP http binding, we need to remove it to avoid the stack over follow exception.  Here is the mail thread[1] which discusses about it
[1]http://camel.465427.n5.nabble.com/Camel-CXF-web-services-are-not-available-tp5720790p5720845.html",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,246975,,,Mon Oct 15 08:07:15 UTC 2012,,,,,,0|i07xj3:,44199,,,,,,,,"15/Oct/12 08:07;njiang;Applied the patch into trunk, cxf-2.6.x-fixes and cxf-2.5.x-fixes branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
typical HTML form payload does not seem to work when HTML form is used,CXF-4552,12610976,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,imitenmehta,imitenmehta,09/Oct/12 12:26,08/Nov/12 17:14,14/Mar/19 02:30,02/Nov/12 10:42,2.5.2,,,,,,,2.5.6,2.6.3,2.7.1,,JAX-RS,,,,0,,,,,,,,"I am using HTML form below to upload files using jax-rs but the attachments parameter is null.    

The code and error are shown:

form:
<html>
<head>
<meta http-equiv=""pragma"" content=""no-cache"" />
</head>
<body> 
<FORM action=""/jax_rs_basic/cxf/files/upload""
       enctype=""multipart/form-data""
       method=""post"">
   <P>
   What is your name? <INPUT type=""text"" name=""submit-name""><BR>
   What files are you sending? <INPUT id=""files"" type=""file"" name=""files""><BR>
   
   <INPUT type=""submit"" value=""Send""> <INPUT type=""reset"">
 </FORM>
</body>
</html>



code:
package demo.jaxrs.server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

import org.apache.cxf.jaxrs.ext.multipart.Multipart;
import org.apache.cxf.message.Attachment;

@Path(""/files/"")
public class MultipartService {
	
	@Path(""/upload"")
	@Consumes(""multipart/form-data"")
	@Produces(""text/html"")
	@POST
	public Response addAttachments(@Multipart(""submit-name"") String submitName, 
			@Multipart(""files"") List<Attachment> files) {
		
		System.out.println(submitName);
		System.out.println(files);
		for(Attachment a:files) {
			System.out.println(a.getId());
			InputStream is;
			try {
				is = a.getDataHandler().getInputStream();
				BufferedReader r = new BufferedReader(new InputStreamReader(is));
				System.out.println(r.readLine());
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		
		return Response.ok(""<html><body>Files Saved</body></html>"").type(""text/html"").build();

	}
}

beans.xml:
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xmlns:jaxrs=""http://cxf.apache.org/jaxrs""
  xsi:schemaLocation=""
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://cxf.apache.org/jaxrs
http://cxf.apache.org/schemas/jaxrs.xsd"">

  <!-- do not use import statements if CXFServlet init parameters link to this beans.xml --> 

  <import resource=""classpath:META-INF/cxf/cxf.xml"" />
  <import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />

  <bean id=""MyInterceptor"" class=""org.apache.cxf.interceptor.LoggingInInterceptor""/>
  	
  <jaxrs:server id=""customerService"" address=""/"">
  <jaxrs:inInterceptors><ref bean=""MyInterceptor""/></jaxrs:inInterceptors>
    <jaxrs:serviceBeans>
      <!--  ref bean=""customerBean"" /-->
      <ref bean=""filesBean"" />
    </jaxrs:serviceBeans>
  </jaxrs:server>

  <bean id=""customerBean"" class=""demo.jaxrs.server.CustomerService"" />
  <bean id=""filesBean"" class=""demo.jaxrs.server.MultipartService"" />
</beans>


error log:
17:10:58 INFO  context.ContextLoader - Root WebApplicationContext: initialization completed in 1422 ms
17:10:58 DEBUG support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'cxf'
Oct 09, 2012 5:02:09 PM org.apache.cxf.interceptor.LoggingInInterceptor
INFO: Inbound Message
----------------------------
ID: 1
Address: http://pinkydebian:8080/jax_rs_basic/cxf/files/upload
Encoding: ISO-8859-1
Http-Method: POST
Content-Type: multipart/form-data; boundary=---------------------------222852432428027
Headers: {Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8], accept-encoding=[gzip, deflate], accept-language=[en-us,en;q=0.5], connection=[keep-alive], Content-Length=[469], content-type=[multipart/form-data; boundary=---------------------------222852432428027], host=[pinkydebian:8080], referer=[http://pinkydebian:8080/jax_rs_basic/multipart.html], user-agent=[Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1]}
Payload: -----------------------------222852432428027
Content-Disposition: form-data; name=""submit-name""

Miten
-----------------------------222852432428027
Content-Disposition: form-data; name=""files""; filename=""kingfisher.txt""
Content-Type: text/plain

Service Temporarily Unavailable

The server is temporarily unable to service your request due to maintenance downtime or capacity problems. Please try again later.
-----------------------------222852432428027--

--------------------------------------
Miten
null
Oct 09, 2012 5:02:09 PM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Application {http://server.jaxrs.demo/}MultipartService has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault
	at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:162)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:128)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:167)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:94)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:107)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:122)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:207)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:213)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:154)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:126)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:185)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:108)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:641)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.NullPointerException
	at demo.jaxrs.server.MultipartService.addAttachments(MultipartService.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)
	... 34 more

Oct 09, 2012 5:02:09 PM org.apache.cxf.phase.PhaseInterceptorChain unwind
WARNING: Exception in handleFault on interceptor org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor@8dae83
org.apache.cxf.interceptor.Fault
	at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:162)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:128)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:167)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:94)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:107)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:122)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:207)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:213)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:154)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:126)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:185)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:108)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:641)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.NullPointerException
	at demo.jaxrs.server.MultipartService.addAttachments(MultipartService.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)
	... 34 more

Oct 09, 2012 5:02:09 PM org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver onMessage
SEVERE: Error occurred during error handling, give up!
org.apache.cxf.interceptor.Fault
	at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:162)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:128)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:167)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:94)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:107)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:122)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:207)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:213)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:154)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:126)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:185)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:108)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:641)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.NullPointerException
	at demo.jaxrs.server.MultipartService.addAttachments(MultipartService.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)
	... 34 more




Regards,

Miten
imiten@yahoo.com","mitenm@pinkydebian:~$ uname -a; java -version
Linux pinkydebian 2.6.32-5-686 #1 SMP Sun May 6 04:01:19 UTC 2012 i686 GNU/Linux
java version ""1.7.0_04""
Java(TM) SE Runtime Environment (build 1.7.0_04-b20)
Java HotSpot(TM) Client VM (build 23.0-b21, mixed mode)
mitenm@pinkydebian:~$",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-10 12:27:58.615,,,no_permission,,Unknown,,,,,,,,,,,246005,,,Sun Nov 04 13:48:11 UTC 2012,,,,,,0|i07fuf:,41333,,,,,,,,"09/Oct/12 12:38;imitenmehta;Have tried using Attachment import as below too but still same result of NullPointerException.

import org.apache.cxf.message.Attachment;
replaced with
import org.apache.cxf.jaxrs.ext.multipart.Attachment;

","10/Oct/12 12:27;sergey_beryozkin;There was an issue with processing List parameters annotated with @Multipart annotation. In a 'plain' multipart payload it is not possible to have different parts with the same content id / name hence this combination was only supported for form data payloads with multiple files submitted, where a given top-level part has embedded parts, one per each file.

However when a single file is submitted only then the part with a given id does not have the embedded parts of its own and hence ""@Multipart(""files"") List"" was not processed. ","11/Oct/12 05:38;imitenmehta;I am unable to understand your comment.  could you elaborate with code snippets.
what is 'plain' multipart payload and form-data payload and whats the difference ? 
I am using HTML form with multipart/form-data encoding.  can you refer in reference to it ?

different parts with same name/id ? 
In HTML form to upload multiple files if I use same name/id is that incorrect ? 

 <INPUT id=""files"" type=""file"" name=""files""><BR>
 <INPUT id=""files"" type=""file"" name=""files""><BR>

I am hoping that for two files I can use above html in form and then I can grab the two as list by @Multipart(""files"") List<Attachment>.

When single file is submitted meaning single file upload tag in html form as below
 <INPUT id=""files"" type=""file"" name=""files""><BR>

the parameter should not be List then what should it be ?
@Multipart(""files"") Attachment files ?

The ticket shows fix versions 2.5.6 etc.  is it immediately available from the CXF download link ? 2.5.2 is not being applied fix ? 

how can I refer to files changed in the releases for this ticket ? I was hoping to see some link in ticket referring to change list committed in version control system.
",11/Oct/12 09:00;sergey_beryozkin;Can you try the latest 2.5.x or 2.6.x snapshot ?,11/Oct/12 12:11;sergey_beryozkin;More enhancement for supporting multiple parts with the same name may need to be coded given that not all form data payloads containing multiple files are 'well-formed',02/Nov/12 10:42;sergey_beryozkin;mapping multiple parts with the same content id to a collection parameter bound to that content id with Multipart annotation is also supported ,"02/Nov/12 16:45;imitenmehta;Hi Sergey,

Thanks for patch.  Please update documentation with two liner example !

Regards,

Miten.




","02/Nov/12 17:28;sergey_beryozkin;Nothing changes at the code level, what will happen now that is irrespectively of how multipart/form-data payload containing multiple files is structured (exactly as in HTMLForm document or with every file part having the same name such as ""files""), this code which is already on the wiki will work:

{code:java}

POST
public void upload(@Multipart(""name"") String name, @Multipart(""files"") List<Attachment> files) {...}


{code}

As a side note, please review 

http://cxf.apache.org/docs/jax-rs-redirection.html#JAX-RSRedirection-WithRequestDispatcherProvider 

(check the info re enums)","04/Nov/12 13:48;imitenmehta;H Sergey,

Nice addition for enum.  It will make things convenient now for navigation view configuration.  Also I am able to follow your one liner about multipart files with same name.

Regards,

Miten.




",,,,,,,,,,,,,,,,,,,,,,,,,,,
MTOM + SchemaValidation results in empty input stream from data handler,CXF-4551,12610972,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pellcorp,pellcorp,09/Oct/12 11:59,19/Dec/12 14:38,14/Mar/19 02:30,11/Oct/12 20:27,2.7,,,,,,,2.6.4,2.7.1,,,JAX-WS Runtime,,,,0,,,,,,,,"Even with a 1k file uploaded I cannot read its content in my web service implementation when I have schema validation enabled.

The interesting thing is if I enable ws-policy security I can upload up to a 100k file, and 1 byte above that falls over again.

http://cxf.547215.n5.nabble.com/Help-Schema-Validation-ON-MTOM-Large-Files-Empty-DataSource-input-stream-td5716122.html",,,,,,,,,,CXF-3813,,,,,,,,,,09/Oct/12 12:04;pellcorp;MtomSchemaValidationBug-jaxws21.tar.gz;https://issues.apache.org/jira/secure/attachment/12548394/MtomSchemaValidationBug-jaxws21.tar.gz,09/Oct/12 12:00;pellcorp;MtomSchemaValidationBug.tar.gz;https://issues.apache.org/jira/secure/attachment/12548393/MtomSchemaValidationBug.tar.gz,10/Oct/12 08:39;pellcorp;patch.txt;https://issues.apache.org/jira/secure/attachment/12548540/patch.txt,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,246000,,,Thu Oct 11 12:07:03 UTC 2012,,,,,,0|i07ftb:,41328,,,,,,,,09/Oct/12 12:04;pellcorp;further test to ensure its not a jaxws version problem.  Reverted back to jaxws 2.1 still same issue.,"09/Oct/12 12:05;pellcorp;In order to see this issue you need to force SoapUI to always use MTOM.  the src/test/resources soapui project does that.
",09/Oct/12 12:30;pellcorp;This problem occurs only when using IN or BOTH.  If you use 'true' the problem does not occur.  Its a regression caused by the enhancement,"09/Oct/12 12:35;pellcorp;I am not sure whether 3813 should be re-opened and listed as incomplete or if the patch to fix the regression should be provided against this issue.

Some advice from devs would be good","09/Oct/12 12:44;pellcorp;I will review the following classes to see if they need to be updated to use the ServiceUtils.getSchemaValidationType

find . -name ""*.java"" -exec grep -l ""schema-validation-enabled"" {} \; 

./api/src/main/java/org/apache/cxf/message/Message.java
./systests/jaxws/src/test/java/org/apache/cxf/systest/jaxws/ClientServerRPCLitTest.java
./systests/jaxws/src/test/java/org/apache/cxf/systest/jaxws/SchemaValidationClientServerTest.java
./systests/jaxws/src/test/java/org/apache/cxf/systest/provider/XMLServer.java
./systests/ws-rm/src/test/java/org/apache/cxf/systest/ws/rm/AbstractClientPersistenceTest.java
./systests/ws-rm/src/test/java/org/apache/cxf/systest/ws/rm/DecoupledClientServerTest.java
./systests/ws-rm/src/test/java/org/apache/cxf/systest/ws/rm/DecoupledBareTest.java
./systests/uncategorized/src/test/java/org/apache/cxf/systest/mtom/ClientMtomXopTest.java


jason@jason-Latitude-E6400:~/Development/cxf-trunk$ find . -name ""*.java"" -exec grep -l ""SCHEMA_VALIDATION_ENABLED"" {} \;
./rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/databinding/AegisSchemaValidationInInterceptor.java
./rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/integration/SchemaValidationTest.java
./rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/attachment/JAXBAttachmentSchemaValidationHack.java
./rt/ws/rm/src/test/java/org/apache/cxf/ws/rm/soap/RMSoapInterceptorTest.java
./rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/JavascriptRhinoTest.java
./rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/interceptors/WrapperClassOutInterceptor.java
./rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ConfiguredEndpointTest.java
./rt/bindings/soap/src/main/java/org/apache/cxf/binding/soap/interceptor/ReadHeadersInterceptor.java
./rt/bindings/soap/src/main/java/org/apache/cxf/binding/soap/interceptor/SoapHeaderInterceptor.java
./rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/ReadHeaderInterceptorTest.java
./rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/RPCInInterceptorTest.java
./rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/RPCOutInterceptorTest.java
./rt/core/src/main/java/org/apache/cxf/service/factory/AnnotationsFactoryBeanListener.java
./rt/core/src/test/java/org/apache/cxf/interceptor/DocLiteralInInterceptorTest.java
./systests/ws-security/src/test/java/org/apache/cxf/systest/ws/security/SecurityPolicyTest.java
./systests/uncategorized/src/test/java/org/apache/cxf/systest/schema_validation/ValidationClientServerTest.java

","10/Oct/12 05:09;pellcorp;As part of the patch I have updated the test cases that referenced ""schema-validation-enabled"" with Message.SCHEMA_VALIDATION_ENABLED.    This just makes the code consistent.","10/Oct/12 08:39;pellcorp;completed patch
code changes + tests
full build passes successfully
","11/Oct/12 12:07;pellcorp;was wondering if I could get some feedback on this patch.  Happy to do additional work for it to be acceptable.  I am blocked on this as I would like to make use of the changes in my project and do not want to maintain a local fork of cxf, but happy to depend on a 2.7.1-SNAPSHOT for a few months.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wsdl2Java fails if tmp folder contains spaces,CXF-4550,12610951,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,artemsh,artemsh,09/Oct/12 08:39,19/Dec/12 14:38,14/Mar/19 02:30,01/Nov/12 15:49,2.6.2,,,,,,,2.5.7,2.6.4,2.7.1,,Tooling,,,,0,codegen,quotes,wsdl2java,,,,,"I am conscious having spaces in tmp path is wrong.

Caused by the unquoted jar path argument.
AbstractCodegenMoho.java:462
cmd.getShell().setQuotedArgumentsEnabled(false); // for JVM args


            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <configuration>
                            <fork>once</fork>
                            <sourceRoot>target/generated-sources/cxf</sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>src/main/resources/wsdl/ScenarioDefinitionService.wsdl</wsdl>
                                    <extraargs>
                                        <extraarg>-xjc-Xts</extraarg>
                                    </extraargs>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.cxf.xjcplugins</groupId>
                        <artifactId>cxf-xjc-ts</artifactId>
                        <version>${cxf-xjc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

			
[INFO] Running code generation in fork mode...
[DEBUG] Running code generation in fork mode with args [C:\Program Files (x86)\cygwin\tmp\cxf-tmp-612466\cxf-w2j2754183499503103694args]
[INFO] Building jar: C:\Program Files (x86)\cygwin\tmp\cxf-tmp-612466\cxf-codegen3769733772993116138.jar
[WARNING] Unable to access jarfile C:\Program
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO]
Exit code: 1
Command line was: C:\java\jrockit-jdk1.6.0\jre\bin\java.exe -jar ""C:\Program Files (x86)\cygwin\tmp\cxf-tmp-612466\cxf-codegen3769733772993116138.jar"" ""C:\Program Files (x86)\cyg
n\tmp\cxf-tmp-612466\cxf-w2j2754183499503103694args""


[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException:
Exit code: 1
Command line was: C:\java\jrockit-jdk1.6.0\jre\bin\java.exe -jar ""C:\Program Files (x86)\cygwin\tmp\cxf-tmp-612466\cxf-codegen3769733772993116138.jar"" ""C:\Program Files (x86)\cyg
n\tmp\cxf-tmp-612466\cxf-w2j2754183499503103694args""


        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:719)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:181)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:376)
Caused by: org.apache.maven.plugin.MojoExecutionException:
Exit code: 1
Command line was: C:\java\jrockit-jdk1.6.0\jre\bin\java.exe -jar ""C:\Program Files (x86)\cygwin\tmp\cxf-tmp-612466\cxf-codegen3769733772993116138.jar"" ""C:\Program Files (x86)\cyg
n\tmp\cxf-tmp-612466\cxf-w2j2754183499503103694args""


        at org.apache.cxf.maven_plugin.AbstractCodegenMoho.runForked(AbstractCodegenMoho.java:537)
        at org.apache.cxf.maven_plugin.AbstractCodegenMoho.forkOnce(AbstractCodegenMoho.java:412)
        at org.apache.cxf.maven_plugin.AbstractCodegenMoho.execute(AbstractCodegenMoho.java:254)
        at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.execute(WSDL2JavaMojo.java:378)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        ... 17 more",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-01 15:49:14.192,,,no_permission,,Unknown,,,,,,,,,,,245939,,,Thu Nov 01 15:49:14 UTC 2012,,,,,,0|i07ebr:,41087,,,,,,,,"01/Nov/12 15:49;dkulp;
I flipped that flag to true on all the calls.  Hopefully that will fix it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java first externalAttachment wsdl enhancements,CXF-4547,12610784,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pellcorp,pellcorp,08/Oct/12 02:04,19/Dec/12 14:38,14/Mar/19 02:30,11/Oct/12 20:04,2.6.2,2.6.3,2.7,,,,,2.7.1,,,,WS-* Components,,,,0,,,,,,,,"When I define a <p:externalAttachment location=""classpath:SslWithUsernamePasswordToken.xml""/>

I expect to see the associated Policies directly underneath the wsdl:definitions, just like how PolicyAnnotationListener does it.

i would also expect the generated wsdl to correctly reflect if I am associating a policy with just a message rather than an operation as a whole.  ",,,,,,,,,,,,,,,,,,,,09/Oct/12 02:23;pellcorp;patch.txt;https://issues.apache.org/jira/secure/attachment/12548350/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,245008,,,Thu Oct 11 12:08:00 UTC 2012,,,,,,0|i05xjr:,32534,,,,,,,,"08/Oct/12 03:36;pellcorp;This patch updates the Ws-Policy namespaces to the default.

Ensures that the generated policy elements include a Id with a namespace prefix.

Added support for attaching policy references to messages instead of just operations.

Added test cases for all of these.",09/Oct/12 00:09;pellcorp;I am glad this patch did not make it into the release.  I have noticed some subtle problems with it and need to spend some time trying to understand them before I can offer another patch which fixes them.  The first problem I noticed is that I am getting policy violations when this patch is enabled that I do not get when its disabled.  I am not sure why.,"09/Oct/12 02:23;pellcorp;Updated patch which uses the external policy ws-policy namespace for the policy reference instead of a hard coded namespace that might be different.

Updated the test case to test this scenario.

This patch is now considered complete awaiting review and hopefully inclusion into 2.7.1 / 2.6.4


","11/Oct/12 12:08;pellcorp;was wondering if I could get some feedback on this patch. Happy to do additional work for it to be acceptable. 

I am blocked on this as I need the changes in my project and do not want to maintain a local fork of cxf, but happy to depend on a 2.7.1-SNAPSHOT for a few months.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@XMLInstruction,CXF-4546,12610591,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,gmazza,gmazza,05/Oct/12 16:01,19/Dec/12 14:41,14/Mar/19 02:30,30/Nov/12 17:09,2.6.2,,,,,,,2.6.4,2.7.1,,,JAX-RS,,,,0,,,,,,,,"org.apache.cxf.jaxrs.ext.xml.XMLInstruction doesn't seem to handle stray white space particularly well:

@XMLInstruction(""<?xml-stylesheet type='text/xsl' href='foobar.xsl'?>"")
works fine (outputs as <?xml-stylesheet type='text/xsl' href='http://localhost:9998/foobar.xsl'?>), but:

@XMLInstruction(""<?xml-stylesheet type='text/xsl' href='foobar.xsl' ?>"")
(w/stray space between ending apostrophe and ending ?)
outputs as:
<?xml-stylesheet type='text/xsl' href='http://localhost:9998/foobar.xsl''?>
(erroneous double apostrophe at the very end).
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-30 17:07:32.102,,,no_permission,,Unknown,,,,,,,,,,,243611,,,Fri Nov 30 17:07:32 UTC 2012,,,,,,0|i04et3:,23664,,,,,,,,"05/Oct/12 16:06;gmazza;Also consider providing an ability to suppress expansion of the href attribute, i.e., not adding the http://xxx part.",30/Nov/12 17:07;sergey_beryozkin;Will deal with the parsing issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ut_sign + sign_enc samples broken in last releases,CXF-4545,12610578,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,05/Oct/12 14:56,08/Nov/12 17:14,14/Mar/19 02:30,05/Oct/12 15:29,2.4.9,2.5.5,2.6.2,,,,,2.4.10,2.5.6,2.6.3,,,,,,0,,,,,,,,"
The ut_sign + sign_enc samples are broken in the last releases (2.4.9, 2.5.5 and 2.6.2). The reason is that the DefaultCryptoCoverageChecker has been added, and it throws an exception as the wsa:ReplyTo header has not been signed.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,243536,,,2012-10-05 14:56:09.0,,,,,,0|i03m6v:,19028,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@XmlJavaTypeAdapter ignored on exception classes ,CXF-4542,12610222,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,opalka,opalka,04/Oct/12 11:14,08/Jan/13 14:59,14/Mar/19 02:30,04/Oct/12 19:12,2.3.10,2.4.9,2.5.5,2.6.2,,,,2.4.10,2.5.6,2.6.3,2.7,JAXB Databinding,,,,0,,,,,,,,"The following commit

https://svn.apache.org/repos/asf/incubator/cxf/trunk@641581

causes @XmlJavaTypeAdapter is completely ignored on fields & methods.
",,,,,,,,,,,,,,CXF-4735,CXF-4591,,,,,04/Oct/12 12:45;opalka;CXF4542.patch;https://issues.apache.org/jira/secure/attachment/12547722/CXF4542.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-04 19:12:58.537,,,no_permission,,Unknown,,,,,,,,,,,239826,,,Thu Oct 04 19:12:58 UTC 2012,,,,,,0|i00u7z:,2828,,,,,,,,"04/Oct/12 11:16;opalka;Proposed patch against 

http://svn.apache.org/repos/asf/cxf/trunk@1393983",04/Oct/12 19:12;dkulp;Patch applied,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl not finding properly scoped structure elements,CXF-4541,12610116,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,03/Oct/12 18:14,08/Nov/12 17:14,14/Mar/19 02:30,03/Oct/12 18:25,2.4.9,2.5.5,2.6.2,,,,,2.4.10,2.5.6,2.6.3,,Tooling,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239827,,,2012-10-03 18:14:28.0,,,,,,0|i00u87:,2829,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Colon character in the password is not hanled properly in AbstractHTTPDestination class,CXF-4540,12610079,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,boris_iv,boris_iv,03/Oct/12 14:33,08/Nov/12 17:14,14/Mar/19 02:30,03/Oct/12 15:45,,,,,,,,2.4.10,2.5.6,2.6.3,,Transports,,,,0,,,,,,,,"If the user password contains colon character then the org.apache.cxf.configuration.security.AuthorizationPolicy.getPassword() method returns only the substring before the colon character.

The issue is in the following class: org.apache.cxf.transport.http.AbstractHTTPDestination

In method getAuthorizationPolicyFromMessage(String credentials) the credentials are split by colon. Then only the second element of the array is set as password, but in this case the elements are more then two.

Example of credentials:
""Aladin:Test:1234""




",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239828,,,2012-10-03 14:33:32.0,,,,,,0|i00u8f:,2830,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Security inbound performance regression,CXF-4539,12610054,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,03/Oct/12 09:10,08/Nov/12 17:14,14/Mar/19 02:30,03/Oct/12 09:51,2.4.9,2.5.5,2.6.2,,,,,2.4.10,2.5.6,2.6.3,,WS-* Components,,,,0,,,,,,,,"
There is a significant performance regression in inbound WS-Security in CXF due to CXF-4052:

https://issues.apache.org/jira/browse/CXF-4052

On each invocation, a URL is resolved corresponding to the path of the properties file for the signature verification or decryption Crypto. This carries a performance penalty due to the CXF ResourceManager being involved, even though the Crypto object itself is actually cached.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239829,,,2012-10-03 09:10:24.0,,,,,,0|i00u8n:,2831,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XmlAdapter Not Being Used,CXF-4537,12609940,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,achang,achang,02/Oct/12 17:15,08/Nov/12 17:14,14/Mar/19 02:30,02/Oct/12 20:10,,,,,,,,2.5.6,2.6.3,2.7,,JAXB Databinding,,,,0,,,,,,,,"XmlAdapter is not being used for marshalling/unmarshalling in a JAX-WS service with the following conditions:

-XmlAdapter is being hooked up with @XmlJavaTypeAdapters in package-info.java
-Class that XmlAdapter handles (bound type) has a no-arg constructor

If the no-arg constructor is removed from the bound type, the XmlAdapter is correctly used.

For more info, please see:
http://stackoverflow.com/questions/12684103/xmladapter-not-being-used-in-cxf

In attached sample maven project, the main method is in com.internal.SomeService. Running it should throw an exception with the following cause:

Caused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions
java.util.Currency does not have a no-arg default constructor.
	this problem is related to the following location:
		at java.util.Currency
		at public java.util.Currency com.external.Money.getCurrency()
		at com.external.Money",,,,,,,,,,,,,,,,,,,,02/Oct/12 17:15;achang;cxf.zip;https://issues.apache.org/jira/secure/attachment/12547406/cxf.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239831,,,Tue Oct 02 17:15:49 UTC 2012,,,,,,0|i00u93:,2833,,,,,,,,02/Oct/12 17:15;achang;Attaching sample maven project.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP fault XML is invalid when a details element exists,CXF-4535,12609911,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,garydgregory,garydgregory,02/Oct/12 13:12,08/Nov/12 17:14,14/Mar/19 02:30,02/Oct/12 20:11,2.6.2,,,,,,,2.4.10,2.5.6,2.6.3,2.7,,,,,1,,,,,,,,"If you add a details element to a SOAP fault, you will get invalid XML.

For example, this code:
{code:java}
final SoapFault fault = new SoapFault(shortMessage, Soap11.getInstance().getReceiver());
fault.setRole(operationName);
final org.w3c.dom.Element detailElt = fault.getOrCreateDetail();
final Document ownerDocument = detailElt.getOwnerDocument();
final org.w3c.dom.Element longDescElt = ownerDocument.createElementNS(_TARGET_NAMESPACE, ""longDescription"");
final org.w3c.dom.Element errorCodeElt = ownerDocument.createElementNS(_TARGET_NAMESPACE, ""ErrorCode"");
            longDescElt.setTextContent(longMessage);
{code}

Produces XML like:
{code:xml}
<?xml version='1.0' encoding='UTF-8'?>
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Header>
    <ais:requestID xmlns:ais=""http://com.seagullsw.appinterface/AppInterfaceServer"">{c0a80102-00ce16ad0000010e75da25398002}</ais:requestID>
  </soap:Header>
  <soap:Body>
    <soap:Fault>
      <faultcode>soap:Server</faultcode>
      <faultstring>blah.</faultstring>
      <detail>
        <longDescription xmlns=""http://com.seagullsw.appinterface/AppInterfaceServer"">blah blah.</longDescription>
        <ErrorCode xmlns=""http://com.seagullsw.appinterface/AppInterfaceServer"">-7</ErrorCode>
      </detail>
      <faultactor>test.exception</faultactor>
    </soap:Fault>
  </soap:Body>
</soap:Envelope>
{code}

Instead of:

{code:xml}
<?xml version='1.0' encoding='UTF-8'?>
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Header>
    <ais:requestID xmlns:ais=""http://com.seagullsw.appinterface/AppInterfaceServer"">{c0a80102-00ce16ad0000010e75da25398002}</ais:requestID>
  </soap:Header>
  <soap:Body>
    <soap:Fault>
      <faultcode>soap:Server</faultcode>
      <faultstring>blah.</faultstring>
      <faultactor>test.exception</faultactor>
      <detail>
        <longDescription xmlns=""http://com.seagullsw.appinterface/AppInterfaceServer"">blah blah.</longDescription>
        <ErrorCode xmlns=""http://com.seagullsw.appinterface/AppInterfaceServer"">-7</ErrorCode>
      </detail>
    </soap:Fault>
  </soap:Body>
</soap:Envelope>
{code}
The {{detail}} element MUST be last.","Apache Maven 3.0.4 (r1232337; 2012-01-17 03:44:56-0500)
Maven home: C:\Java\apache-maven-3.0.4\bin\..
Java version: 1.6.0_35, vendor: Sun Microsystems Inc.
Java home: C:\Program Files\Java\jdk1.6.0_35\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows 7"", version: ""6.1"", arch: ""amd64"", family: ""windows""",,,,,,,,,,,,,,,,,,,02/Oct/12 13:13;garydgregory;fix-invalid-soap-fault.diff;https://issues.apache.org/jira/secure/attachment/12547383/fix-invalid-soap-fault.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-02 20:11:00.784,,,no_permission,,Unknown,,,,,,,,,,,239833,,,Tue Oct 02 20:11:00 UTC 2012,,,,,,0|i00u9j:,2835,,,,,,,,02/Oct/12 13:13;garydgregory;Patch to 2.6 branch.,"02/Oct/12 20:11;dkulp;
Patch applied",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SortedMap is returned as HashMap,CXF-4534,12609894,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,vasvir,vasvir,02/Oct/12 10:31,08/Nov/12 17:15,14/Mar/19 02:30,24/Oct/12 19:39,2.6.2,2.7,,,,,,2.6.3,2.7,,,Aegis Databinding,,,,0,,,,,,,,"We have recently upgraded to 2.6.2 and revisit our test suite. Looks like all bugs submitted by use have been fixed. Very impressive, thanks a lot.

In our test suite there is a bug that has not been submitted in JIRA. A discussion about that bug can be found at

http://comments.gmane.org/gmane.comp.apache.cxf.user/12388

I decided to submit this bug anyway for documentation purposes.

The problem:
------------

The problem is when the interface declares a SortedMap as an argument or as a returned value. Here is the relevant snippets.

Interface
---------
{code:java}
    // fail -- throws exception in the server
    public boolean testSortedMapArgument(SortedMap<Integer, Integer> map);

    // fail -- puts data into a hashmap instead of a SortedMap
    public SortedMap<Integer, Integer> testSortedMapResult();

    // fail -- puts data into a hashmap instead of a SortedMap
    public Map<String, SortedMap<Integer, Integer>> testDirectComplexTreeMapResult();
{code}

Implementation
--------------
{code:java}
    @Override
    public boolean testSortedMapArgument(SortedMap<Integer, Integer> map) {
        final Class map_class = map.getClass();
        final Collection<Class> klasses = Arrays.asList(map_class.getClasses());
        log.info(String.format(""Classes of %s are %s"", map_class, klasses));
        return klasses.contains(SortedMap.class);
    }

    @Override
    public SortedMap<Integer, Integer> testSortedMapResult() {
        final SortedMap<Integer, Integer> result = new TreeMap<Integer, Integer>();
        result.put(1, 3);
        result.put(0, 2);
        return result;
    }

    @Override
    public Map<String, SortedMap<Integer, Integer>> testDirectComplexTreeMapResult() {
        final Map<String, SortedMap<Integer, Integer>> result = new HashMap<String, SortedMap<Integer, Integer>>();
        final TreeMap<Integer, Integer> map1 = new TreeMap<Integer, Integer>();
        map1.put(1, 3);
        map1.put(0, 2);
        result.put(""key1"", map1);
        return result;
    }
{code}

Test Client:
------------
{code:java}
    @Test
    public void testSortedMapArgument() {
        final SortedMap<Integer, Integer> map = new TreeMap<Integer, Integer>();
        map.put(1, 3);
        map.put(0, 2);
        Assert.assertTrue(TestServiceFactory.getService()
                .testSortedMapArgument(map));
    }

    @Test
    public void testSortedMapResult() {
        final Class map_class = ((Object) TestServiceFactory.getService()
                .testDirectComplexTreeMapResult()).getClass();
        final Collection<Class> klasses = Arrays.asList(map_class.getClasses());
        log.info(String.format(""Classes of %s are %s"", map_class, klasses));
        Assert.assertTrue(klasses.contains(SortedMap.class));
    }

    @Test
    public void testDirectComplexTreeMapResult() {
        final Class map_class = ((Object) TestServiceFactory.getService()
                .testDirectComplexTreeMapResult().get(""key1"")).getClass();
        final Collection<Class> klasses = Arrays.asList(map_class.getClasses());
        log.info(String.format(""Classes of %s are %s"", map_class, klasses));
        Assert.assertTrue(klasses.contains(SortedMap.class));
    }
{code}

The result:
-----------

In cases 2 and 3 I get a hashmap instead of a SortedMap. This is very dangerous since it changes program semantics in a very subtle way.

In case 1 I get an exception. Here is the server side part:
{code}
WARNING: Application {http://iface/}TestInterface#{http://iface/}testSortedMapArgument has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: argument type mismatch while invoking public abstract boolean iface.TestInterface.testSortedMapArgument(java.util.SortedMap) with params [{0=2, 1=3}].
        at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:166)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:140)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)
        at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:107)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
        at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:211)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:213)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:193)
        at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:130)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:221)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:141)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:641)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:197)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:225)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1001)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:579)
        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.IllegalArgumentException: argument type mismatch
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)
        ... 33 more
{code}


Expected result:
----------------

To safely transfer a SortedMap both ways.

I would understand if due to WSDL  constraints reliably transferring a sortedMap is not possible. What it would be nice is at least during the deploy time an error / warning is issued stating that fact.

Right now we are getting incorrect results in a silent way or a the best case an exception at run time.
","debian wheezy/testing, unstable",,,,,,,,,,,,,,,,,,,16/Oct/12 12:10;vasvir;ws-test-issue-4534.tgz;https://issues.apache.org/jira/secure/attachment/12549296/ws-test-issue-4534.tgz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-04 19:37:27.307,,,no_permission,,Unknown,,,,,,,,,,,239834,,,Fri Oct 26 12:10:24 UTC 2012,,,,,,0|i00u9r:,2836,,,,,,,,"04/Oct/12 19:37;dkulp;
This should now be fixed.  It would be great if you could verify with tomorrows snapshots.","08/Oct/12 14:09;vasvir;I tried with apache-cxf-2.6.3-20121005.080754-29.tar.gz and all 3 problems persist.

Should I try with 2.7.0 snapshot?

   Vassilis","10/Oct/12 07:23;vasvir;The fix is supposed to be applied at 2.6.3 but it still does not work for me. Tested with apache-cxf-2.6.3-20121005.080754-29.tar.gz in both server and client.

Hence I am reopening the bug...

If I shouldn't do this please let me know since I am not fully familiarized with CXF bug-etiquette.

Could you also please tell us what is the expected behaviour? Normal transmission of SortedMap or some kind of error / warning? Anyway I didn't get any errors warnings during deploy...


Thanks
","10/Oct/12 07:24;vasvir;The fix is supposed to be applied at 2.6.3 but it still does not work for me. Tested with apache-cxf-2.6.3-20121005.080754-29.tar.gz in both server and client.

Hence I am reopening the bug...

If I shouldn't do this please let me know since I am not fully familiarized with CXF bug-etiquette.

Could you also please tell us what is the expected behaviour? Normal transmission of SortedMap or some kind of error / warning? Anyway I didn't get any errors warnings during deploy...

Thanks
",12/Oct/12 08:13;vasvir;I also tested it with 2.7.0,"12/Oct/12 20:00;dkulp;Any chance you can create a simple and small complete test case?
","16/Oct/12 12:10;vasvir;Sure why not? Here is the test case. I have not included necessary third party libraries. The project requires

cxf-libraries
log4j
commons-logging
junit

After that you do
  ant war
and the war will be created.

The TestClient will try to connect at localhost:8080 by default

Thanks
","24/Oct/12 19:38;dkulp;
The testcase is not valid.  The call to cls.getClasses() is returning the internal classes, not the interfaces and such.   If you actually look at the output, you see:

{code}
Classes of class java.util.TreeMap are [class java.util.AbstractMap$SimpleImmutableEntry, class java.util.AbstractMap$SimpleEntry]
{code}

so it is indeed creating a TreeMap (which implements SortedMap).   If you just take the return maps and do a:

{code}
Assert.assertTrue(ret instanceof SortedMap);
{code}

then you would see that the values really are the sorted maps that are expected.
","26/Oct/12 12:10;vasvir;Aah. I agree. I was fooled by my own tests.

I can confirm that the mini test case now works.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Encoding error in CachedOutputStream when double-byte char is on 1024 byte boundary,CXF-4533,12609886,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,larsve,larsve,02/Oct/12 08:50,08/Nov/12 17:14,14/Mar/19 02:30,02/Oct/12 20:12,2.3,2.6.2,,,,,,2.4.10,2.5.6,2.6.3,2.7,,,,,0,,,,,,,,"Hi,

We experience occasional encoding errors where a small number of two-byte chars get encoded wrong in an otherwise correct encoded message. I have traced the problem to the writeCacheTo method of CachedOutputStream where the temp cached file is read as 1024 bytes at the time which are then converted to a String before getting appended to the StringBuilder. If the 1024 byte boundary falls right between the two bytes of a two byte char the encoding fails.


public void writeCacheTo(StringBuilder out, String charsetName) throws IOException {
   flush();
   if (inmem) {
      if (currentStream instanceof ByteArrayOutputStream) {
         byte[] bytes = ((ByteArrayOutputStream)currentStream).toByteArray();
         out.append(IOUtils.newStringFromBytes(bytes, charsetName));
      } else {
         throw new IOException(""Unknown format of currentStream"");
      }
   } else {
      // read the file
      FileInputStream fin = new FileInputStream(tempFile);
      byte bytes[] = new byte[1024];
      int x = fin.read(bytes);
      while (x != -1) {
         out.append(IOUtils.newStringFromBytes(bytes, charsetName, 0, x));
         x = fin.read(bytes);
      }
      fin.close();
   }
}


Below is a couple of lines from the hex-dump of the cache-file where you can see that the second o-slash in the file fall on a 1024 byte boundary and therefore gets corrupted in the outgoing message:

0001fbe0:  66 66 65 6e 74 6c 69 67 20 66 c3 b8 72 74 69 64 73 70 65 6e 73 69 6f 6e 2c 20 73 6f 6d 20 66 c3  ffentlig førtidspension, som f?
0001fc00:  b8 72 65 72 20 74 69 6c 2c 20 61 74 20 6d 65 64 6c 65 6d 3c 2f 70 67 66 3a 52 65 70 75 72 63 68  ?rer til, at medlem</pgf:Repurch


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239835,,,2012-10-02 08:50:42.0,,,,,,0|i00u9z:,2837,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Checkstyle 5.6 no longer supports the DoubleCheckedLocking ,CXF-4530,12609733,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pellcorp,pellcorp,01/Oct/12 10:46,19/Dec/12 14:38,14/Mar/19 02:30,29/Nov/12 15:05,2.6.2,2.7,,,,,,2.7.1,,,,Build system,,,,0,,,,,,,,"Checkstyle 5.6 no longer supports the DoubleCheckedLocking 

http://checkstyle.2069334.n4.nabble.com/checkstyle-Bugs-3571442-Regression-in-Eclipse-plugin-5-6-td4654136.html

http://sourceforge.net/tracker/?func=detail&atid=397078&aid=3571442&group_id=29721

So latest version of the checkstyle plugin throws an on import of maven projects with m2eclipse.

The quickest solution is to remove the DoubleCheckedLocking from 

http://svn.apache.org/repos/asf/cxf/build-utils/trunk/buildtools/src/main/resources/cxf-checkstyle.xml



","maven 3
eclipse 4.2.1 /3.7.2 with checkstyle 5.6",,,,,,,,,,,,,,,,,,,03/Nov/12 08:58;pellcorp;DoubleCheckedLocikcingEclipseError.png;https://issues.apache.org/jira/secure/attachment/12551975/DoubleCheckedLocikcingEclipseError.png,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-11-29 15:05:16.318,,,no_permission,,Unknown,,,,,,,,,,,239838,,,Thu Nov 29 15:05:16 UTC 2012,,,,,,0|i00uan:,2840,,,,,,,,"03/Nov/12 08:56;pellcorp;see attachment for error text from eclipse.  This does go away if I downgrade to checkstyle 5.5, but its not the default plugin available from the eclipse update site.","03/Nov/12 09:27;pellcorp;So the cxf build tools is at 2.4.2-SNAPSHOT, so perhaps this fix could be released against 2.4.2 of the tools and 2.7.1-SNAPSHOT could be updated to depend on 2.4.2-SNAPSHOT?","03/Nov/12 09:34;pellcorp;Workaround is to install the old version of the update site can be used

http://sourceforge.net/projects/eclipse-cs/files/updatesite/5.5.0/

","29/Nov/12 15:05;dkulp;
New buildutils now being voted on that we'll pick up.  Should work perfect with the new Checkstyle eclipse plugin.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PermGen Leak for CXFAuthenticator (WS Client Configuration),CXF-4529,12609717,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,holger.sunke@bodo-peters.de,holger.sunke@bodo-peters.de,01/Oct/12 06:59,11/Oct/13 06:48,14/Mar/19 02:30,19/Nov/12 21:10,2.6.1,,,,,,,2.7.1,,,,Configuration,JAX-WS Runtime,,,0,leak,permgen,,,,,,"Hello,

seemes to me there is a memory leak with the CXFAuthenticator. There is a static reference to it in java.net.Authenticator.theAuthenticator .
This prevents the GC from collecting the WebappClassLoader on hot undeployment.

I helped myself by doing 

java.net.Authenticator.setDefault(null);

on contextDestroy().

Our web application uses CXF as a jasWS client configured with Spring 3.0.5.","Apache Tomcat 7, Windows 7 32bit",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-11 09:42:08.684,,,no_permission,,Unknown,,,,,,,,,,,239839,,,Fri Oct 11 06:48:14 UTC 2013,,,,,,0|i00uav:,2841,,,,,,,,"11/Oct/12 09:42;ffang;Hi,

In my option it's not a memory leak,  per the code in
java.net.Authenticator
// The system-wide authenticator object.  See setDefault().
    private static Authenticator theAuthenticator;
It's system-wide object, so it's intended behavior to not gc, and this code is out of CXF code base, CXF can't change this behavior.
BTW, when you use 
java.net.Authenticator.setDefault(null);
it cause system-wide effect so it may affect other module which need use this  theAuthenticator.

Anyway, it shouldn't be a CXF issue

Freeman","16/Oct/12 06:02;jurna;This is defenitely a classloader leak. CXFAuthenticator is loaded by webapp classloader and reference of this object is set to java system class, which is loaded by system classloader. So when application is unloaded, webapp classloader cannot be garbage collected, because CXFAuthenticator is referenced from java.net.Authenticator. This creates PermGen leak.
This issue must be reopened.",22/Oct/12 15:12;pnidl;I agree with Danielius. This is definitely a classloader leak. Although it is caused by design of java.net.Authenticator class the problem comes from CXF that either should not rely on java.net.Authenticator or should come with solution that allows its correct cleanup. Also the workaround mentioned by Freeman (java.net.Authenticator.setDefault(null)) will not work correctly because it can wipe out all authenticators possibly registered by other (still running) applications.,"16/Nov/12 07:41;pnidl;And there is another problem related to this one. When you have two (or more) applications deployed to application server, each of them using CXFAuthenticator, and you stop one of them, the alive one will fail to proceed with authentication task because the still registered CXFAuthenticator fails to load its necessary classes because is classloader is already marked as stopped. On Tomcat this looks like this:
{code}
Nov 15, 2012 9:24:19 PM org.apache.catalina.loader.WebappClassLoader loadClass
INFO: Illegal access: this web application instance has been stopped already.  Could not load org.apache.cxf.message.MessageImpl.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException

	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1597)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1556)
	at org.apache.cxf.endpoint.ClientImpl.getConduit(ClientImpl.java:835)
	at org.apache.cxf.endpoint.ClientImpl.destroy(ClientImpl.java:206)
	at org.apache.cxf.frontend.ClientProxy.finalize(ClientProxy.java:94)
	at java.lang.ref.Finalizer.invokeFinalizeMethod(Native Method)
	at java.lang.ref.Finalizer.runFinalizer(Finalizer.java:83)
	at java.lang.ref.Finalizer.access$100(Finalizer.java:14)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:160)
{code}
But I suppose that this problem really is unresolvable and the solution is to use Commons HTTPClient for HTTP Conduit (CXF-291)","19/Nov/12 21:10;dkulp;
I've attempted to create a fix for this that won't lock up the classloaders.   Basically, it creates a new URLClassloader (so no deps to CXF) and uses the byte[] for a class that doesn't have any other CXF deps defined there to create a class to set into the Authenticator.   That class uses a SoftReference to the ""real"" CXFAuthenticator.  I hope that will allow the CXF stuff to be completely collected.   I'd appreciate it if someone could try tonights 2.7.1-SNAPSHOTS to see if that really helps or not.
","29/Jan/13 11:00;gediminas.rimsa;This is still an issue in parallel deployment setup (when there are multiple versions of the same application running at times). When a new instance of application calls CXFAuthenticator.addAuthenticator(), it wraps the ReferencingAuthenticator from the previous application instance, thus preventing its classloader from being garbage collected later.

After a few such deployments, the GC roots of the first undeployed application classloader (which should be garbage collected) look like this:
{noformat}
this     - value: org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader #7
 <- classloader     - class: java.security.ProtectionDomain, value: org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader #7
  <- [3]     - class: java.security.ProtectionDomain[], value: java.security.ProtectionDomain #575
   <- context     - class: java.security.AccessControlContext, value: java.security.ProtectionDomain[] #8 (21 items)
    <- acc     - class: java.net.URLClassLoader, value: java.security.AccessControlContext #11
     <- <classLoader>     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: java.net.URLClassLoader #4
      <- <class>     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator class ReferencingAuthenticator
       <- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
        <- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
         <- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
          <- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
           <- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
            <- theAuthenticator     - class: java.net.Authenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
             <- [14507]     - class: java.lang.Object[], value: java.net.Authenticator class Authenticator
              <- elementData     - class: java.util.Vector, value: java.lang.Object[] #196029 (20 480 items)
               <- classes     - class: org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader, value: java.util.Vector #15121
                <- contextClassLoader (thread object)     - class: java.lang.Thread, value: org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader #1
{noformat}

Edit for workaround when CXFAuthenticator is not required:
We overcame this issue by simply setting CXFAuthenticator#setup field to true on application startup.",04/Apr/13 11:15;jurna;Is this issue going to be reopened any time? It is clearly not fixed.,"04/Apr/13 13:25;dkulp;The ReferencingAuthenticator is not loaded from the same classloader as the rest of CXF, its now from a ClassLoader which uses the system classloader as the parent.  Thus, the ""leak"" is very minimal (single byte[] class) as it doesn't hold onto all the CXF classes.  Also, once the real authenticator (CXFAuthenticator class) is gc'd, a call into the system authenticator may start a process of removing themselves (although that process looks slightly wrong.  (need to double check that).
 
In anycase, as far as we're concerned, it's ""fixed"" as well as we can.   If someone has a patch that can provide a better solution, feel free to submit it and we'll consider it.
","11/Oct/13 06:48;nihongye;but in CXFAuthenticator 
{code}
 Class<?> cls = loader.loadClass(ReferencingAuthenticator.class.getName());
                Authenticator auth = (Authenticator)cls.getConstructor(Authenticator.class, Authenticator.class)
                    .newInstance(instance, wrapped);
{code}
“newInstance(instance, wrapped)” param instance is load by webappclassloader,so the webappclassloader is refence from the system classloader",,,,,,,,,,,,,,,,,,,,,,,,,,,
WebApplicationExceptionMapper is too shy,CXF-4528,12609687,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,30/Sep/12 13:44,08/Nov/12 17:14,14/Mar/19 02:30,30/Sep/12 14:18,2.6.2,,,,,,,2.6.3,2.7,,,JAX-RS,,,,0,,,,,,,,"When an application installs a FaultListener, and the FaultListener requests logging, the logging should be INFO or WARN, not DEBUG. Further, the 'printStackTrace' feature should apply only to the non-Listener case, as the listener can perfectly well log stack traces if it likes.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239840,,,Sun Sep 30 14:18:55 UTC 2012,,,,,,0|i00ub3:,2842,,,,,,,,30/Sep/12 14:18;bmargulies;fixed in trunk in 1392027.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The import org.apache.cxf.ws.addressing.EndpointReferenceType cannot be resolved,CXF-4527,12609601,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,selliott,selliott,28/Sep/12 21:45,10/Apr/17 19:07,14/Mar/19 02:30,29/Sep/12 22:15,2.7,,,,,,,,,,,Core,,,,0,,,,,,,,"I'm getting the following at runtime:

{noformat}
java.lang.Error: Unresolved compilation problems: 
	The import org.apache.cxf.ws.addressing.EndpointReferenceType cannot be resolved
	EndpointReferenceType cannot be resolved to a type
	EndpointReferenceType cannot be resolved to a type
	EndpointReferenceType cannot be resolved to a type

	at org.apache.cxf.endpoint.AbstractEndpointFactory.<init>(AbstractEndpointFactory.java:44)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.<init>(AbstractWSDLBasedEndpointFactory.java:58)
	at org.apache.cxf.frontend.ClientFactoryBean.<init>(ClientFactoryBean.java:44)
	at org.apache.cxf.jaxws.JaxWsClientFactoryBean.<init>(JaxWsClientFactoryBean.java:38)
	at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.<init>(JaxWsProxyFactoryBean.java:68)
{noformat}

This makes no sense to me, as the class is clearly on my path. Here are my cxf maven dependencies:

{code}
	<properties>
		<cxf.version>2.7.0-SNAPSHOT</cxf.version>
	</properties>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-core</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-hc</artifactId>
			<version>${cxf.version}</version>
		</dependency>		
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>${cxf.version}</version>
		</dependency>
{code}","{noformat}
Apache Maven 3.0.3 (r1075438; 2011-02-28 09:31:09-0800)
Maven home: C:\Program Files\apache-maven-3.0.3\bin\..
Java version: 1.6.0_29, vendor: Sun Microsystems Inc.
Java home: C:\Program Files (x86)\Java\jdk1.6.0_29\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows 7"", version: ""6.1"", arch: ""x86"", family: ""windows""
Eclipse IDE for Java Developers
Version: Juno Release
Build id: 20120614-1722
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-09-29 05:54:54.654,,,no_permission,,Unknown,,,,,,,,,,,239841,,,Sat Sep 29 22:15:07 UTC 2012,,,,,,0|i00ubb:,2843,,,,,,,,"29/Sep/12 05:54;ffang;Hi,

Hmm, it's really weird,  could you please append a maven project which we can reproduce it?

Or you can remove cxf-api-2.7.0-SNAPSHOT.jar from your local repo and rebuild it to see if it helps, it somehow might be corrupt.

Freeman
","29/Sep/12 12:06;dkulp;
You wouldn't have had an Eclipse workspace setup with 2.7.0-SNAPSHOT that had some errors in it, did you?  I know you built 2.7.0-SNAPSHOT to look at the async http stuff so it may be the version of the snapshot jars on your machine.   Try a ""mvn clean install -Pfastinstall"" in your CXF workspace first.
","29/Sep/12 15:52;selliott;I was not able to get the build to succeed, so I don't think it ended up in my local repository. Nonetheless, I will nuke what I do have from local and rebuild as @Freeman suggested. If that does not work, then I'll try and reproduce it and attach the project.",29/Sep/12 22:15;selliott;After clearing the cxf artifacts from my local repo and restarting Eclipse this went away.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PolicyAnnotationListener throws NPE in jar,CXF-4526,12609598,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,ebergner,ebergner,28/Sep/12 21:25,08/Nov/12 17:15,14/Mar/19 02:30,03/Oct/12 16:09,2.6.2,,,,,,,2.5.6,2.6.3,,,WS-* Components,,,,0,bug,jar,maven,policy,,,,"I've attached a security policy to my service using:

@Policy(uri = ""classpath:some-security-policy.xml"", placement = Policy.Placement.DEFAULT)

Everything works fine inside Eclipse. But an NPE is thrown in PolicyAnnotationListener on line 348 when I run the executable jar that I build with maven-shade-plugin:

Exception in thread ""main"" javax.xml.ws.WebServiceException: java.lang.NullPointerException
        at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:357)
        at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:246)
        at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:525)
        at com.reverb.ison.ws.InteliSonServer.publish(InteliSonServer.java:21)
        at com.reverb.ison.ws.InteliSonServer.main(InteliSonServer.java:15)
Caused by: java.lang.NullPointerException
        at org.apache.cxf.ws.policy.PolicyAnnotationListener.addPolicy(PolicyAnnotationListener.java:348)
        at org.apache.cxf.ws.policy.PolicyAnnotationListener.addPolicy(PolicyAnnotationListener.java:328)
        at org.apache.cxf.ws.policy.PolicyAnnotationListener.addPolicies(PolicyAnnotationListener.java:249)
        at org.apache.cxf.ws.policy.PolicyAnnotationListener.addPolicies(PolicyAnnotationListener.java:165)
        at org.apache.cxf.ws.policy.PolicyAnnotationListener.handleEvent(PolicyAnnotationListener.java:77)
        at org.apache.cxf.service.factory.AbstractServiceFactoryBean.sendEvent(AbstractServiceFactoryBean.java:72)
        at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:200)
        at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:159)
        at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:211)
        at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:442)
        at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:329)
        ... 4 more


Looks like the issue is:

cls.getResource(""/"").toString()

which will return null when the class is inside a jar.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-03 16:09:05.901,,,no_permission,,Novice,,,,,,,,,,,239842,,,Fri Oct 05 13:57:51 UTC 2012,,,,,,0|i00ubj:,2844,,,,,,,,"03/Oct/12 16:09;dkulp;
I put a guard around this into the code which should prevent the NPE.  However, I'm not sure they result is 100% correct as without a base URI, I'm not sure if it will have other issues.  Any chance you can test?","05/Oct/12 13:57;ebergner;Daniel, I can confirm that it's working now (at least with my setup). Many thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unclosed XMLStreamReader/Writer causes leaking,CXF-4523,12609393,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,xuhaihong,xuhaihong,27/Sep/12 14:03,10/Dec/12 12:33,14/Mar/19 02:30,27/Sep/12 17:36,2.6.2,,,,,,,2.5.6,2.6.3,,,,,,,0,,,,,,,,"I created some wrapper classes for those XMLStreamReader created in StaxUtils, and found that the one created with the stack below will not invoke the close() method, which will cause some leaking 

ava.lang.Throwable
at org.apache.cxf.staxutils.XXMLStreamReader.<init>(XXMLStreamReader.java:29)
at org.apache.cxf.staxutils.XXMLInputFactory.createXMLStreamReader(XXMLInputFactory.java:136)
at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:1280)
at org.apache.cxf.interceptor.StaxInInterceptor.handleMessage(StaxInInterceptor.java:111)
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
......


java.lang.Throwable
at org.apache.cxf.staxutils.XXMLStreamReader.<init>(XXMLStreamReader.java:29)
at org.apache.cxf.staxutils.XXMLInputFactory.createXMLStreamReader(XXMLInputFactory.java:169)
at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:1363)
at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:1247)
at org.apache.cxf.wsdl11.WSDLManagerImpl.loadDefinition(WSDLManagerImpl.java:231)
at org.apache.cxf.wsdl11.WSDLManagerImpl.getDefinition(WSDLManagerImpl.java:191)
......

http://cxf.547215.n5.nabble.com/XMLStreamReader-is-never-closed-td5714822.html",,,,,,,,,,,,,,,,,,,,27/Sep/12 14:05;xuhaihong;CXF-4523.patch;https://issues.apache.org/jira/secure/attachment/12546863/CXF-4523.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-09-27 17:36:04.703,,,no_permission,,Unknown,,,,,,,,,,,239845,,,Thu Sep 27 17:36:04 UTC 2012,,,,,,0|i00uc7:,2847,,,,,,,,"27/Sep/12 14:05;xuhaihong;Create a patch file based on Daniel's suggestion, two interceptors are created for close the created reader.

I am not quite sure about the PHASE, now I use the POST_INVOKE.","27/Sep/12 17:36;dkulp;
Slightly modified patch applied.   Had to hack around some issues in the JAX-RS frontend that will need to be refactored later.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The logicalHandler could not modify the soap:body content if provider uses the SOAPMessage,CXF-4522,12609174,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,john xiao,john xiao,26/Sep/12 05:14,08/Nov/12 17:14,14/Mar/19 02:30,07/Oct/12 13:28,2.6.2,,,,,,,2.6.3,,,,JAX-WS Runtime,,,,0,logicalHandler,,,,,,,"The logical handler does not add the approperiate content in the soap11 message's soap:body if the provider consumes the SOAPMessage.

I attache a sample to reproduce the issue, also supply a patch(include some format :)).",,,,,,,,,,,,,,,,,,,,26/Sep/12 05:16;john xiao;jaxws-handlerdeploy.war;https://issues.apache.org/jira/secure/attachment/12546642/jaxws-handlerdeploy.war,29/Sep/12 15:31;john xiao;logicalHandlerDoesnotWork_final.patch;https://issues.apache.org/jira/secure/attachment/12547116/logicalHandlerDoesnotWork_final.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-09-26 13:23:48.14,,,no_permission,,Unknown,,,,,,,,,,,239846,,,Sun Oct 07 13:27:33 UTC 2012,,,,,,0|i00ucf:,2848,,,,,,,,26/Sep/12 05:17;john xiao;The patch include some format.,26/Sep/12 05:19;john xiao;Any idea about the issue? thanks very much,"26/Sep/12 13:23;dkulp;
There are 25 test failures in systests/jaxws with this patch.  Thus, it's definitely not usable as is.  With all the white space formatting changes, it's also hard to see the ""real"" changes to see what you are trying to do.   I'll try and look at it more later, but I don't have time right now.
","26/Sep/12 14:01;john xiao;Hi Daniel,
I upload the patch without format. It's more clear about my intention :)
Could you please take a look at it? thank you very much.
I will also run the test cases to see why there are so many failures.","29/Sep/12 15:31;john xiao;Hi Daniel,
I've test the new patch, all the systests/jaxws tests are passed. Please review it when free.
Thank you very much :)

I also plan to add some tests to guarantee no regression in future.","01/Oct/12 20:35;dkulp;
Thanks for the new patch.  I can at least see what was going on and what you were trying to do.   I just committed something to trunk that I *hope* will work but works quite a bit differently.   There is actually a comment in LogicalMessageImpl about this so I tried to implement it.  Can you give that a quick test to see. Thanks!","07/Oct/12 13:27;john xiao;Daniel,

Thanks very much for your commitment, it works fine!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XMLStreamException about namespace has not been bound to a prefix with other stax implemenation,CXF-4520,12609070,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,xuhaihong,xuhaihong,25/Sep/12 15:42,08/Nov/12 17:14,14/Mar/19 02:30,25/Sep/12 19:32,2.6.2,,,,,,,2.4.10,2.5.6,2.6.3,,Core,,,,0,,,,,,,,"While using CXF with other stax implementation, I got the exception below
javax.xml.stream.XMLStreamException: The namespace URI ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" has not been bound to a prefix.

With the investigation, I found that, it is because that, StaxUtils does not write those namespace before other attributes. e.g. for the element below
wsp:Policy wsu:Id=""ImageServiceImplServiceSoapBinding_WSAM_Addressing_Policy"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">-<wsam:Addressing wsp:Optional=""true""><wsp:Policy/></wsam:Addressing></wsp:Policy>

The writeElement method will write the attribute wsu:Id first, which causes issue as the prefix wsu has not be declared. Seems that woodstox is more tolerant for those things. ",,,,,,,,,,,,,,,,,,,,25/Sep/12 15:45;xuhaihong;CXF-4520.patch;https://issues.apache.org/jira/secure/attachment/12546533/CXF-4520.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239848,,,Tue Sep 25 15:45:19 UTC 2012,,,,,,0|i00ucv:,2850,,,,,,,,"25/Sep/12 15:45;xuhaihong;It may be better to sort those attributes firstly, so that StaxUtils could always write those namespace firstly, then write those real attributes.
Also, we may use the writer.getNamespaceContext().getNamespaceURI(attrPrefix) instead of DOMUtils.getNamespace method, with that, no need to iteration the current element and its parents each time.

A patch file is attached, please help to take a look, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CXF bundle jax-ws-catalog.xml doesn't include mapping of ""http://www.w3.org/2006/03/addressing"" ",CXF-4518,12608819,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,24/Sep/12 06:56,08/Nov/12 17:14,14/Mar/19 02:30,26/Sep/12 13:25,2.4.9,2.5.5,2.6.2,,,,,2.4.10,2.5.6,2.6.3,2.7,OSGi,,,,0,,,,,,,,"Current cxf bundle's jax-ws-catalog.xml only has one mapping of ""http://www.w3.org/2005/08/addressing"", we need to add ""http://www.w3.org/2006/03/addressing"" to avoid downloading the address schema from the internet.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239850,,,2012-09-24 06:56:46.0,,,,,,0|i00udb:,2852,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in WS-RM when RMP 200702  assertions are used,CXF-4517,12608766,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,22/Sep/12 21:52,08/Nov/12 17:14,14/Mar/19 02:30,26/Sep/12 13:26,2.6.2,,,,,,,2.5.6,2.6.3,,,WS-* Components,,,,0,,,,,,,,"RM11AssertionBuilder needs to be included in the bus extension of cxf-rt-ws-rm.

Without this assertion builder, RM assertions of QName {http://docs.oasis-open.org/ws-rx/wsrmp/200702}RMAssertion are not instantiated correctly and this may lead to ClassCastException in some places where the assertions are retrieved.

java.lang.ClassCastException: org.apache.neethi.builders.PolicyContainingPrimitiveAssertion cannot be cast to org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion
	at org.apache.cxf.ws.rm.policy.RM10PolicyUtils.getAssertion(RM10PolicyUtils.java:227) ~[na:na]
	at org.apache.cxf.ws.rm.policy.RM10PolicyUtils.getRMAssertion(RM10PolicyUtils.java:81) ~[na:na]
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate.<init>(RetransmissionQueueImpl.java:492) ~[na:na]
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl.cacheUnacknowledged(RetransmissionQueueImpl.java:299) ~[na:na]
	at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl.addUnacknowledged(RetransmissionQueueImpl.java:105) ~[na:na]

So, we need to add this builder in the bus extension and also need to change RM10PolicyUtils  so that it does not try to class-cast the 200702 assertion to the 200502 assertion.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239851,,,2012-09-22 21:52:01.0,,,,,,0|i00udj:,2853,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS client ignores enum properties when populating request URI from beans,CXF-4514,12608488,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/Sep/12 16:14,08/Nov/12 17:15,14/Mar/19 02:30,20/Sep/12 16:33,,,,,,,,2.4.10,2.5.6,2.6.3,2.7,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239854,,,2012-09-20 16:14:38.0,,,,,,0|i00ue7:,2856,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AtomPojoProvider should use MBR Class parameter when checking for custom writers and builders,CXF-4512,12608422,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/Sep/12 10:39,28/Feb/13 17:27,14/Mar/19 02:30,19/Dec/12 16:37,,,,,,,,2.6.4,2.7.1,,,JAX-RS,,,,0,,,,,,,,"If a JAX-RS resource method returns say 'Resource' interface class but at the runtime it happens to be ResourceImpl then AtomPojoProvider is not capable to find the registered custom writers/readers or builders. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239856,,,2012-09-20 10:39:40.0,,,,,,0|i00uen:,2858,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM Sequence header should have mustUnderstand attribute,CXF-4511,12608368,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,20/Sep/12 02:07,15/Jan/13 13:51,14/Mar/19 02:30,20/Sep/12 03:05,,,,,,,,2.4.10,2.5.6,2.6.3,2.7,,,,,0,,,,,,,,"per the WS-RM spec 2005 Feb

<wsrm:Sequence> element MUST have a mustUnderstand attribute from the namespace corresponding to the version of SOAP to which the <wsrm:Sequence> SOAP header block is bound.

Currently CXF WS-RM implementation don't have this mustUnderstand attribute for Sequence, hence can cause issues when talk to other WS-RM implementations which has strict check",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-01-15 10:50:48.332,,,no_permission,,Unknown,,,,,,,,,,,239857,,,Tue Jan 15 13:51:23 UTC 2013,,,,,,0|i00uev:,2859,,,,,,,,"20/Sep/12 03:05;ffang;commit fix
http://svn.apache.org/viewvc?rev=1387842&view=rev for trunk
http://svn.apache.org/viewvc?rev=1387843&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1387844&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1387845&view=rev for 2.4.x branch","15/Jan/13 10:50;ay;Hi Freeman,
I'll slightly modify the test so that the original fault message check is also retained.
regards, aki","15/Jan/13 13:51;ffang;Hi Aki,

Sure, thanks.
Freeman",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@Context fails to inject SearchContext into JAX-RS resource bean,CXF-4508,12608139,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,topping,topping,18/Sep/12 21:23,08/Nov/12 17:14,14/Mar/19 02:30,21/Sep/12 14:36,2.6.2,,,,,,,2.6.3,2.7,,,Core,JAX-RS,,,0,,,,,,,,"In an attempt to use the FIQL query parser functionality using the docs at http://cxf.apache.org/docs/jax-rs-advanced-features.html#JAX-RSAdvancedFeatures-FIQLsearchqueries, it's clear there's a problem with the packaging such that the SearchContext cannot be injected into a JAX-RS resource installed under Karaf.  The problem is with org.apache.cxf.jaxrs.utils.InjectionUtils#createThreadLocalProxy, which returns the following exception:

{code}

java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.aries.blueprint.utils.ReflectionUtils$MethodPropertyDescriptor.internalSet(ReflectionUtils.java:568)
	at org.apache.aries.blueprint.utils.ReflectionUtils$PropertyDescriptor.set(ReflectionUtils.java:319)
	at org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:935)
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:903)
	at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:884)
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:816)
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:783)
	at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)
	at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:245)
	at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:183)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:648)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:340)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:242)
	at org.apache.aries.blueprint.container.BlueprintExtender.checkBundle(BlueprintExtender.java:315)
	at org.apache.aries.blueprint.container.BlueprintExtender.bundleChanged(BlueprintExtender.java:235)
	at org.apache.aries.blueprint.container.BlueprintExtender$BlueprintBundleTrackerCustomizer.modifiedBundle(BlueprintExtender.java:434)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:198)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:128)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:468)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:161)
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:117)
	at org.apache.felix.framework.util.SecureAction.invokeBundleEventHook(SecureAction.java:1103)
	at org.apache.felix.framework.util.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:695)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:483)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4244)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1923)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:944)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:931)
	at org.apache.karaf.bundle.command.Restart.doExecute(Restart.java:48)
	at org.apache.karaf.bundle.command.BundlesCommand.doExecute(BundlesCommand.java:50)
	at org.apache.karaf.bundle.command.BundlesCommandWithConfirmation.doExecute(BundlesCommandWithConfirmation.java:41)
	at org.apache.karaf.shell.console.AbstractAction.execute(AbstractAction.java:33)
	at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:39)
	at org.apache.karaf.shell.commands.basic.AbstractCommand.execute(AbstractCommand.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)
	at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)
	at org.apache.karaf.shell.console.commands.$BlueprintCommand2076750611.execute(Unknown Source)
	at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)
	at org.apache.karaf.shell.console.impl.jline.ConsoleImpl.run(ConsoleImpl.java:179)
	at java.lang.Thread.run(Thread.java:680)
	at org.apache.karaf.shell.console.impl.jline.ConsoleFactoryService$3.doRun(ConsoleFactoryService.java:103)
	at org.apache.karaf.shell.console.impl.jline.ConsoleFactoryService$3$1.run(ConsoleFactoryService.java:94)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:337)
	at org.apache.karaf.shell.console.impl.jline.ConsoleFactoryService$3.run(ConsoleFactoryService.java:92)
Caused by: java.lang.IllegalArgumentException: interface org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy is not visible from class loader
	at java.lang.reflect.Proxy.getProxyClass(Proxy.java:353)
	at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:581)
	at org.apache.cxf.jaxrs.utils.InjectionUtils.createThreadLocalProxy(InjectionUtils.java:874)
	at org.apache.cxf.jaxrs.model.AbstractResourceInfo.addContextMethod(AbstractResourceInfo.java:163)
	at org.apache.cxf.jaxrs.model.AbstractResourceInfo.checkContextMethod(AbstractResourceInfo.java:146)
	at org.apache.cxf.jaxrs.model.AbstractResourceInfo.findContextSetterMethods(AbstractResourceInfo.java:132)
	at org.apache.cxf.jaxrs.model.AbstractResourceInfo.findContextSetterMethods(AbstractResourceInfo.java:139)
	at org.apache.cxf.jaxrs.model.AbstractResourceInfo.<init>(AbstractResourceInfo.java:65)
	at org.apache.cxf.jaxrs.model.ClassResourceInfo.<init>(ClassResourceInfo.java:80)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createClassResourceInfo(ResourceUtils.java:218)
	at org.apache.cxf.jaxrs.JAXRSServiceFactoryBean.setResourceClassesFromBeans(JAXRSServiceFactoryBean.java:232)
	at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.setServiceBeans(JAXRSServerFactoryBean.java:295)
	... 62 more
{code}

I'm trying to get this working with the cxf-bundle packaging but there's just too many missing dependencies for this to be practical for the average user.  Will keep poking around to see if I can figure out what the proper packaging is and provide a patch.",Mac OS 10.8.1 JDK 1.6.0_35,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-09-19 08:49:44.68,,,no_permission,,Unknown,,,,,,,,,,,239860,,,Fri Sep 21 14:44:54 UTC 2012,,,,,,0|i00ufj:,2862,,,,,,,,"19/Sep/12 08:49;sergey_beryozkin;Interesting, I have not seen any issues with this interface being not visible before - I'll experiment with out blueprint demo too.
Workaround: get SearchContext injected as a resource method parameter (with @Context annotation), thanks","19/Sep/12 09:25;topping;Hi Sergey, thanks for the quick response, I really appreciate it.  I should have mentioned that I did try injecting with the method as well (for instance finding that the setter must be named setSearchContext or the method is silently ignored) as the field.  Both code paths eventually lead to org.apache.cxf.jaxrs.utils.InjectionUtils#createThreadLocalProxy.  

After failing last night with trying to use the bundle-all jar due to dependencies, I am going to try seeing if I can inject directly with Blueprint, without the @Context annotation to get a manual injection.  

I looked around for the blueprint demo but couldn't find it, is it in the source tree?  Will probably be easiest for me to look for the namespace handler next as well to see what my options are.

Thanks again, and if I can do anything to assist or you have other paths for me to help you with, please don't hesitate to reach out!  :-)  ","19/Sep/12 09:41;sergey_beryozkin;Hi Brian,

> I should have mentioned that I did try injecting with the method as well 

For singletons it has the same effect of getting a thread-local proxy injected, but I actually meant adding it as a parameter to the JAX-RS resource method, say

{code:java}
public class RootResource {
@GET
public MyData find(@Context SearchContext) {}
}
{code} 

One thing I'll focus myself after CXF 2.7.0 is out is on providing more useful converters, there are many query languages there and I think FIQL has a capability to act as a light-weight unifying query language, so what I'm hoping to do is to get say Lucene, Casandra (and may be HBase), LDAP query converters added, to make FIQL more visible in the Apache land... May be working on one of these converters could be of interest to you :-)

Thanks  

","19/Sep/12 17:05;topping;Hi Sergey,

Thanks for helping me unwind this!  That did get me a SearchContext injected, all good!

Yes, that would really be great to help out actually!  I do have some needs for a map-reduce style database after October 15, it would be a pleasure to contribute in that way.

Thanks, ttys.  Brian","21/Sep/12 14:36;sergey_beryozkin;Hi Brian, I had to add an explicit import to the search module and that seemed to resolve the issue (I was able to reproduce it initially). I may need to work on simplifying the thread local support, the fact the import is needed kind of suggests something has to be simplified there...

Having FIQL converters which would simplify searching various non SQL stores would be great, lets work on them :-)

Cheers, Sergey

 ","21/Sep/12 14:44;sergey_beryozkin;btw, for completeness, one more workaround for issue with injecting a thread-local SearchContext, inject CXF MessageContext and then do context.getContext(SearchContext.class) - may be handy if adding SearchContext parameter to the resource method affects the interface signature, etc...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bug in SchemaJavascriptBuilder while deserializing an Array,CXF-4507,12608013,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,karianpour,karianpour,18/Sep/12 06:54,08/Nov/12 17:14,14/Mar/19 02:30,25/Sep/12 19:33,2.6.2,,,,,,,2.4.10,2.5.6,2.6.3,,JavaScript Client,,,,0,javascript,,,,,,,"SchemaJavascriptBuilder.java creates a JavaScript for a service, while deserializing an array it uses a variable named ""arrayItem"" with no value on definition.

The Problem : if an item in the array is set to null on server, the deserializer on client side set the item to the value set for the latest value set.

Here you can find the solution :

SchemaJavascriptBuilder.java line 556 : (org\apache\cxf\javascript\types)

    utils.appendLine(""var arrayItem;"");//****************

should be read as 

    utils.appendLine(""var arrayItem = null;"");//****************

sample produced code : 

function services_sal_ngs__rspPayCheque_deserialize (cxfjsutils, element) {
...
     do  {
      var arrayItem;//*******************************
      var value = null;
      if (!cxfjsutils.isElementNil(curElement)) {
       value = cxfjsutils.getNodeText(curElement);
       arrayItem = value;
      }
      item.push(arrayItem);
      curElement = cxfjsutils.getNextElementSibling(curElement);
     }
...
    return newobject;
}


the corrected version should be :

function services_sal_ngs__rspPayCheque_deserialize (cxfjsutils, element) {
...
     do  {
      var arrayItem = null;//*******************************
      var value = null;
      if (!cxfjsutils.isElementNil(curElement)) {
       value = cxfjsutils.getNodeText(curElement);
       arrayItem = value;
      }
      item.push(arrayItem);
      curElement = cxfjsutils.getNextElementSibling(curElement);
     }
...
    return newobject;
}
",FireFox,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,239861,,,2012-09-18 06:54:26.0,,,,,,0|i00ufr:,2863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid WS-RM messages may not be correctly rejected by WS-RM destination,CXF-4505,12607673,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,14/Sep/12 16:46,08/Nov/12 17:14,14/Mar/19 02:30,18/Sep/12 13:10,2.5.5,,,,,,,2.5.6,2.6.3,2.7,,WS-* Components,,,,0,,,,,,,,"In the server side, certain invalid WS-RM messages in terms of the wrong WS-A or WS-RM namespaces are not correctly rejected or in some cases, rejected but through getting an NPE.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239863,,,2012-09-14 16:46:50.0,,,,,,0|i00ug7:,2865,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransformOutInterceptor may lose namespace declarations in some elements,CXF-4503,12607476,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,13/Sep/12 15:08,08/Nov/12 17:14,14/Mar/19 02:30,16/Sep/12 13:01,2.6.2,,,,,,,2.5.6,2.6.3,2.7,,Core,,,,0,,,,,,,,"When TransformOutputInterceptor is used to process a list of elements with the same namespace that is declared locally, some namespace declarations may not be correctly seriazlied.

Given the input message
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Header>
    <Action xmlns=""http://schemas.xmlsoap.org/ws/2004/08/addressing"">http://cxf.apache.org/greeter_control/Greeter/greetMeRequest</Action>
    <MessageID xmlns=""http://schemas.xmlsoap.org/ws/2004/08/addressing"">urn:uuid:fac787f8-db6e-4606-a76c-c45ed3bbba4d</MessageID>
    ...


and transforming the namespace from ""http://schemas.xmlsoap.org/ws/2004/08/addressing"" to ""http://www.w3.org/2005/08/addressing"" may lose the namespace declaration in the second element as in:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Header>
    <Action xmlns=""http://www.w3.org/2005/08/addressing"">http://cxf.apache.org/greeter_control/Greeter/greetMeRequest</Action>
    <MessageID>urn:uuid:fac787f8-db6e-4606-a76c-c45ed3bbba4d</MessageID>
    ...

The correct output message should carry the namespace declaration as in

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Header>
    <Action xmlns=""http://www.w3.org/2005/08/addressing"">http://cxf.apache.org/greeter_control/Greeter/greetMeRequest</Action>
    <MessageID xmlns=""http://www.w3.org/2005/08/addressing"">urn:uuid:fac787f8-db6e-4606-a76c-c45ed3bbba4d</MessageID>
    ...
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239865,,,2012-09-13 15:08:12.0,,,,,,0|i00ugn:,2867,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Evaluate jaxrs:schemaLocations after jaxrs:providers,CXF-4500,12606423,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,marko voss,marko voss,06/Sep/12 15:58,08/Nov/12 17:14,14/Mar/19 02:30,20/Sep/12 21:45,2.6.2,,,,,,,2.6.3,2.7,,,JAX-RS,,,,0,,,,,,,,"If you set the XML catalog to the JAXBElementProvider using the new attribute 'catalogLocation' and setup the jaxrs:schemaLocations in jaxrs:server bean before setting up the jaxrs:providers including the JAXBElementProvider the evaluation of the schemaLocations in org.apache.cxf.jaxrs.utils.schemas.SchemaHandler#createSchema line 81+ will not use the catalogLocation because of it is null.

Workaround: First, setup the jaxrs:providers, then setup the jaxrs:schemaLocations. So the order of the elements is important.

Proposal: Evaluate the providers element before evaluating the schemaLocations element.","CXF, Spring",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-09-06 16:38:14.7,,,no_permission,,Unknown,,,,,,,,,,,239868,,,Thu Sep 06 16:38:14 UTC 2012,,,,,,0|i00uhb:,2870,,,,,,,,06/Sep/12 16:38;sergey_beryozkin;OK; another option is also set schema locations directly on the provider itself,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wrong charset encoding in FormEncodingProvider ,CXF-4499,12606396,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,farmer1992,farmer1992,06/Sep/12 12:54,08/Nov/12 17:14,14/Mar/19 02:30,07/Sep/12 20:26,2.2.12,,,,,,,2.4.10,2.5.6,2.6.3,2.7,Core,,,,0,,,,,,,,"org.apache.cxf.jaxrs.provider.FormEncodingProvider


{code}
	public void writeTo(Object obj, Class<?> c, Type t, Annotation[] anns,
			MediaType mt, MultivaluedMap<String, Object> headers,
			OutputStream os) throws IOException, WebApplicationException {




// ....... else .....

		
        MultivaluedMap<String, String> map = (MultivaluedMap<String, String>)obj;
        boolean encoded = AnnotationUtils.getAnnotation(anns, Encoded.class) != null;
        
        String encoding = HttpUtils.getSetEncoding(mt, headers, ""UTF-8"");  
        
        for (Iterator<Map.Entry<String, List<String>>> it = map.entrySet().iterator(); it.hasNext();) {
            Map.Entry<String, List<String>> entry = it.next();
            for (Iterator<String> entryIterator = entry.getValue().iterator(); entryIterator.hasNext();) {
                String value = entryIterator.next();
                os.write(entry.getKey().getBytes(encoding));
                os.write('=');
                String data = encoded ? value : urlEncode(value); // <--- here urlEncode always use utf-8 ,  encoding get losted here
                os.write(data.getBytes(encoding));
                if (entryIterator.hasNext() || it.hasNext()) {
                    os.write('&');
                }
            }

        }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239869,,,2012-09-06 12:54:20.0,,,,,,0|i00uhj:,2871,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
find of ResponseExceptionMapper do not handle runtime exceptions,CXF-4496,12606015,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,n0rad,n0rad,03/Sep/12 17:22,23/Mar/13 07:59,14/Mar/19 02:30,28/Sep/12 11:02,2.6.2,,,,,,,2.6.3,2.7,,,JAX-RS,,,,1,,,,,,,,"In org.apache.cxf.jaxrs.client.ClientProxyImpl.findExceptionMapper(Method, Message)

The responseExceptionMapper is selected based on exception defined in the resource method signature but this method may have thrown a RuntimeException :

{code:java} 
@Path(""/"")
public interface RestMcuBoardResource {
    @GET
    public RestMcuBoard getBoard();
}
{code} 

does not work where this one work

{code:java} 
@Path(""/"")
public interface RestMcuBoardResource {
    @GET
    public RestMcuBoard getBoard() throws runtimeException;
}
{code}

a fix could be :

{code:java} 
    private static ResponseExceptionMapper<?> findExceptionMapper(Method m, Message message) {
        ProviderFactory pf = ProviderFactory.getInstance(message);
        for (Class<?> exType : m.getExceptionTypes()) {
            ResponseExceptionMapper<?> mapper = pf.createResponseExceptionMapper(exType);
            if (mapper != null) {
                return mapper;
            }
        }
+        return pf.createResponseExceptionMapper(RuntimeException.class);
-        return null; 
    }

{code} 
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-09-04 10:10:30.217,,,no_permission,,Novice,,,,,,,,,,,239872,,,Sat Mar 23 06:57:53 UTC 2013,,,,,,0|i00ui7:,2874,,,,,,,,04/Sep/12 10:10;sergey_beryozkin;If no mapper is available then ServerWebApplicationException mapper gets thrown which is an instance of RuntimeException,"04/Sep/12 10:29;n0rad;but if the ExceptionMapper store the real class into the payload (for example SecurityException)

The client side should be able to reconstruct this Exception, and its working if you add throws RuntimeException into the signature.","04/Sep/12 10:32;n0rad;Example that store any kind of runtime and rebuild it on client side : 

{code:java}
public class AjslRuntimeExceptionMapper implements ExceptionMapper<RuntimeException> {

    private Logger log = LoggerFactory.getLogger(this.getClass());

    @Override
    public Response toResponse(RuntimeException exception) {
        log.warn(""Uncaught RuntimeException"", exception);

        Error error = new Error();
        error.setMessage(exception.getMessage());
        error.setErrorClass(exception.getClass());
        return Response.status(500).entity(error).build();
    }
}

public class AjslResponseExceptionMapper implements ResponseExceptionMapper<Exception> {

    @Override
    public Exception fromResponse(Response r) {
        Error error = findError(r);
        Exception exception;
        if (error.getErrorClass() != null) {
            try {
                exception = error.getErrorClass().getConstructor(String.class)
                        .newInstance(Strings.nullToEmpty(error.getMessage()));
            } catch (Exception e) {
                throw new RuntimeException(""Cannot Create Exception from Error : "" + error, e);
            }
        } else {
            exception = new RuntimeException(error.getMessage());
        }
        return exception;
    }
}

{code}","26/Sep/12 18:25;exabrial;This is a fairly simple fix, any chance this could be included in the next release?","26/Sep/12 21:43;sergey_beryozkin;I'm not really sure this is the right thing to do though.

I guess what might be done is add a check for JAX-RS 2.0 ClientException mapper (CXF 2.7.0), or, on CXF 2.6.2: ServerWebApplicationException
","26/Sep/12 21:58;n0rad;If the user has registered a ResponseExceptionMapper for this RuntimeException class (or super), it will use it (exactly the same system as checked exception)

If the user has not registered a ResponseExceptionMapper for this class it will not found it, will return null and the caller function that is checkResponse() will build the ServerWebApplicationException.

It doesn't change the way its actually working until the user register an exceptionMapper for runtimes.

",26/Sep/12 22:01;sergey_beryozkin;The point is that bare RuntimeException is not what the client runtime returns if no exception mapper has been found,"26/Sep/12 22:12;n0rad;That's what I'm saying, maybe my example with RuntimeException is not a good one, it could be a responseExceptionMapper for SecurityException for example.

And if the user has not registered a ResponseExceptionMapper for SecurityException, it will throw the ServerWebApplicationException as expected. ","26/Sep/12 22:23;n0rad;Hum, I forget that you cannot know the specific RuntimeException so you can only handle RuntimeException globally (but still if the user has registered one).
","27/Sep/12 09:21;sergey_beryozkin;The client runtime guarantees (unless some bug is there) that it will throw ClientException (JAX-RS 2.0) or ServerWebApplicationExxception representing the remote service failure. To be honest I have doubts ResponseExceptionMapper has to be checked when proxies have no exception classes in the signature, however, at the same time, I guess proxies should be given a chance to 'pre-process' unchecked exceptions.

If you have a catch statement expecting RuntimeException, then with ResponseExceptionMapper<ClientException> (assuming it is CXF 2.7.0) the catch will work. However I also think that a catch expecting ClientException should also work, *irrespectively* of whether one has ResponseExceptionMapper or not. 
","27/Sep/12 09:33;sergey_beryozkin;I meant ClientErrorException (in case of JAX-RS 2.0): http://jax-rs-spec.java.net/nonav/2.0-SNAPSHOT/apidocs/javax/ws/rs/ClientErrorException.html, it has a constructor which accepts a status code and Throwable - the latter will be available at the RuntimeException catch block
","28/Sep/12 11:02;sergey_beryozkin;in CXF 2.6.3 it is ServerWebApplicationException and in 2.7.0: WebApplicationException. ResponseExceptionMapper<WebApplicationException> will work in 2.6.3 and 2.7.0, and similarly - RuntimeException catch block will be executed","23/Mar/13 06:57;parwiz;actually the bigger issue is that it always picks the first exception mapper based on method signature.

https://issues.apache.org/jira/browse/CXF-4912

what's happening right now is if you say have two different exception in your throws method
myMethod() throws Exception2, Exception1;  

and mappers for both of those exceptions on server side and client side (maybe you are doing different
things.. so yes i know you can have one super class if they are both checked exceptions.. let's say 
you have a legacy exception and you don't have source for it.. and a new exception you created for something else)

now the client code is blind and picks the first mapper when a fault occurs so in this it will always
default to Exception2ResponeMapper on client side.. even if in the method you happen to throw Exception1
this is incorrect..

please take a look again as this is a big issue if you have multiple mappers and a method that
throws more than one exception in its signature (be it checked or runtime or multiple checked exceptions)... 
it will pick the first mapper for the first exception listed after throws keyword.. not 
actually match based on actual exception type and mappers available.

maybe allow the response to have a header of some sort that contains the exception name/class
and in the findExceptionMapper() use that header to know exactly what exception occurred and go
find a mapper based on that type instead of picking the first exception after the throws clause 
aka         Class<?>[] exTypes = m.getExceptionTypes(); <-- the mapper is selected based on the order returned by this 

",,,,,,,,,,,,,,,,,,,,,,,
JMSDestination need set binary mode if server send MTOM message back,CXF-4494,12605953,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,03/Sep/12 03:34,08/Nov/12 17:14,14/Mar/19 02:30,04/Sep/12 04:56,,,,,,,,2.4.10,2.5.6,2.6.3,2.7,,,,,0,,,,,,,,"related discussion from mailling list is
http://cxf.547215.n5.nabble.com/CXF-ActiveMQ-MTOM-Problem-td5713418.html",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239874,,,Tue Sep 04 04:56:47 UTC 2012,,,,,,0|i00uin:,2876,,,,,,,,"04/Sep/12 04:56;ffang;commit fix
http://svn.apache.org/viewvc?rev=1380176&view=rev for trunk
http://svn.apache.org/viewvc?rev=1380191&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1380446&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1380449&view=rev for 2.4.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
If javax.jws.Oneway annotation is specified for a SOAP interface method a NPE occurs,CXF-4493,12605893,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,th0rb3n,th0rb3n,02/Sep/12 12:04,08/Nov/12 17:15,14/Mar/19 02:30,03/Sep/12 13:12,2.6.2,,,,,,,2.4.10,2.5.6,2.6.3,2.7,WS-* Components,,,,0,,,,,,,,"If javax.jws.Oneway annotation is specified for a SOAP interface method a NPE occurs. The passed OperationInfo ""faults"" member is left to null and thus causes a NPE by calling:
faultInfo.addExtensionAttribute(JAXWSAConstants.WSAW_ACTION_QNAME, faultAction.value());

If javax.jws.Oneway annotation is removed the endpoint gets registered without problems.

java.lang.NullPointerException
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildWSAActions(JaxWsServiceFactoryBean.java:578)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.createOperation(JaxWsServiceFactoryBean.java:625)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.createInterface(ReflectionServiceFactoryBean.java:955)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:465)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:685)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:536)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:248)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:205)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:159)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:207)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:442)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:329)
	... 42 more",,,,,,,,,,,,,,,,,,,,03/Sep/12 07:33;th0rb3n;reseller.wsdl.txt;https://issues.apache.org/jira/secure/attachment/12543518/reseller.wsdl.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-09-03 02:31:46.786,,,no_permission,,Novice,,,,,,,,,,,239875,,,Mon Sep 03 13:54:44 UTC 2012,,,,,,0|i00uiv:,2877,,,,,,,,"03/Sep/12 02:31;ffang;Hi,

Per JAXWS spec, if it's a oneway operaiton, it shouldn't throw any fault. So if your operation have oneway and faults at the same time, basically it's invalid interface per JAXWS spec.

Took a close look, the NPE come from when compute wsam:action, so similarly with the fix of CXF-3560, add a NPE guard to ignore the faultAction annotation if it's oneway.

Freeman","03/Sep/12 06:44;th0rb3n;Ah, ok. Thanks for revise. The SOAP interface class has been created by CXF's wsdl2java, so I assume you mean it is wrong in WSDL spec.

What do you mean by ""add a NPE guard""? Am I supposed to change CXF sources and re-compile?","03/Sep/12 07:13;ffang;It's not something wrong in WSDL spec, it could be something wrong in your wsdl,  or something wrong in CXF wsdl2java. I'm curious how a oneway operation could have @FaultAction, Could you append your wsdl?

And the NPE guard fix is already in, so you can check out the source and build yourself or just wait for tomorrow's snapshot.

Freeman",03/Sep/12 07:33;th0rb3n;The associated WSDL. Please be polite... Formerly generated via Axis2 ;),"03/Sep/12 08:39;ffang;Hi,

Thanks for the wsdl. 

Seems CXF wsdl-first and code-first use different way to process the oneway, I think we should unify both.

Freeman

","03/Sep/12 13:10;ffang;Hi,

This wsdl is a invalid wsdl per WSDL 1, operations without an output cannot throw faults.

If you enable -validate flag with cxf wsdl2java you can see
WSDLToJava Error: 
line 535 column 126 of file:/Users/ffang/apache-cxf-2.6.1/bin/reseller.wsdl: cvc-complex-type.2.4.a: Invalid content was found starting with element 'wsdl:fault'. One of '{""http://schemas.xmlsoap.org/wsdl/"":output}' is expected.

By default CXF wsdl2java only do very basic WSI-BasicProfile validation and use -validate flag is highly recommended.

So add a NPE guard is enough for this issue.

Freeman","03/Sep/12 13:12;ffang;commit fix
http://svn.apache.org/viewvc?rev=1380132&view=rev for trunk
http://svn.apache.org/viewvc?rev=1380133&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1380134&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1380136&view=rev for 2.4.x branch","03/Sep/12 13:54;th0rb3n;Perfect, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Attribute localPreflight is undefined for the annotation type CrossOriginResourceSharing,CXF-4492,12605863,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,aster.anto,aster.anto,01/Sep/12 18:37,10/Apr/17 19:06,14/Mar/19 02:30,03/Sep/12 10:11,2.6.1,,,,,,,,,,,Documentation,JAX-RS Security,,,0,,,,,,,,"Referring to http://cxf.apache.org/docs/jax-rs-cors.html, http://svn.apache.org/repos/asf/cxf/trunk/rt/rs/security/cors/src/main/java/org/apache/cxf/rs/security/cors/CrossOriginResourceSharingFilter.java

Attribute localPreflight is undefined for the annotation type CrossOriginResourceSharing. However, we can use @LocalPreflight or 'defaultOptionsMethodsHandlePreflight' to deal with Preflight requests.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-09-03 10:11:31.816,,,no_permission,,Unknown,,,,,,,,,,,239876,,,Mon Sep 03 10:11:31 UTC 2012,,,,,,0|i00uj3:,2878,,,,,,,,"03/Sep/12 10:11;sergey_beryozkin;I fixed the documentation, 'localPreflight' property was removed and @LocalPreflight was introduced instead, but I did not update the docs at a time. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-A FaultTo sending incoming headers to faultTo,CXF-4491,12605751,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,31/Aug/12 16:13,08/Nov/12 17:14,14/Mar/19 02:30,04/Oct/12 19:50,,,,,,,,2.7,,,,WS-* Components,,,,0,,,,,,,,"
This stems from CXF-4382

If a faultTo is set, the DecoupledFaultHandler uses the incoming message as a base for the outgoing.   This has two affects:

1) The protocol headers on the incoming message are then resent to the fault endpoint which is confusing and definitely should not be sent.

2) For some reason, the fault is then ALSO returned on the original HTTP connection instead of a partial response.  Need to verify what is really needed here.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239877,,,2012-08-31 16:13:13.0,,,,,,0|i00ujb:,2879,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-codegen-plugin: Error resolving component warnings for imported types,CXF-4487,12604913,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,gertdriesen,gertdriesen,24/Aug/12 19:29,08/Nov/12 17:14,14/Mar/19 02:30,28/Aug/12 20:22,2.6.2,,,,,,,2.6.3,,,,Tooling,,,,1,,,,,,,,"As of CXF 2.6.2 (not sure about 2.6.1)), I get warnings for several types that have been imported from an XSD.

For example:
WARNING: C:\cxf-plugin-issue\src\main\resources\Private\Acquittal\NisseAcquittal_V1.wsdl [23,7]: src-resolve.4.2: Error resolving component 'meta:ApplHeaderStruct'. It was detected that 'meta:ApplHeaderStruct' is in namespace 'http://www.rsvz-inasti.fgov.be/PrivateWS/schema/MetaInfo/V1', but components from this namespace are not referenceable from schema document 'file:/C:/cxf-plugin-issue/src/main/resources/Private/Acquittal/NisseAcquittal_V1.wsdl#types1'. If this is the incorrect namespace, perhaps the prefix of 'meta:ApplHeaderStruct' needs to be changed. If this is the correct namespace, then an appropriate 'import' tag should be added to 'file:/C:/cxf-plugin-issue/src/main/resources/Private/Acquittal/NisseAcquittal_V1.wsdl#types1'.

I get none of these warning when using CXF 2.5.4, and the WSDL and XSD are all valid.

I'll attach a repro for this issue, and a log file (taken with level FINE).
Just search for ""src-resolve.4.2"".

Just use ""mvn clean install"" to reproduce the issue.",Windows 7 x64,,,,,,,,,,,,,,,,,,,24/Aug/12 19:33;gertdriesen;cxf-4487.zip;https://issues.apache.org/jira/secure/attachment/12542320/cxf-4487.zip,24/Aug/12 19:31;gertdriesen;cxf-codegen-plugin.log;https://issues.apache.org/jira/secure/attachment/12542319/cxf-codegen-plugin.log,24/Aug/12 21:53;chrismathews;example.zip;https://issues.apache.org/jira/secure/attachment/12542348/example.zip,,,,,3.0,,,,,,,,,,,,,,,,,,,,2012-08-24 21:53:52.901,,,no_permission,,Unknown,,,,,,,,,,,239881,,,Mon Oct 22 12:57:28 UTC 2012,,,,,,0|i00uk7:,2883,,,,,,,,24/Aug/12 19:31;gertdriesen;Log file showing the warnings when running cxf-codegen-plugin.,"24/Aug/12 19:33;gertdriesen;Zip file containing WSDLs, XSDs, and maven build script to reproduce issue.","24/Aug/12 21:53;chrismathews;I hit this also with 2.6.2.  Attached a very simple example project (example.zip) that should demonstrate the warning.  Works fine with 2.6.1 but spews out a WARNING in 2.6.2.

Other useful information...

OS: Windows 7
JDK: 1.6.0_32
Maven: 2.2.1","28/Aug/12 15:49;dkulp;
I'll try and take a look shortly, but as an FYI:

With <=2.6.1 ALL warnings from JAXB pretty much were sent directly to /dev/null (no listener for warnings registered) which is why the older versions didn't display anything.   For the m2e integration, we tried to get more of the information out of JAXB so that m2e can properly flag them.  Getting the warnings was part of that.
","28/Aug/12 19:33;dkulp;
Another note:  if I run wsimport from the JDK on the wsdl, I get:

{code}
dkulp@macbook ~/tmp/t2/example $ wsimport -d target/foo src/main/resources/echo.wsdl 
parsing WSDL...


[WARNING] src-resolve: Cannot resolve the name 'header:AbstractRequestType' to a(n) 'type definition' component.
  line 12 of file:/Users/dkulp/tmp/t2/example/src/main/resources/echo.wsdl#types?schema1

[WARNING] src-resolve: Cannot resolve the name 'header:AbstractRequestType' to a(n) 'type definition' component.
  line 12 of file:/Users/dkulp/tmp/t2/example/src/main/resources/echo.wsdl#types?schema1

generating code...


compiling code...
{code}","28/Aug/12 20:33;chrismathews;That is interesting.  If I run wsimport locally I get:

{code}
c:\ds\workspaces\fusion-sample\example>c:\ds\ds_env\tools\jdk-1.6.0_32\bin\wsimport.exe -version
JAX-WS RI 2.1.6 in JDK 6

c:\ds\workspaces\fusion-sample\example>c:\ds\ds_env\tools\jdk-1.6.0_32\bin\wsimport.exe -d target\foo src\main\resources\echo.wsdl
parsing WSDL...


generating code...


compiling code...
{code}

What version of wsimport are you running?  This remains a mystery because as far as I can tell the wsdl is correct and I am not getting any issues importing into a variety of clients... just waiting for someone to point out my stupidity. ;)","28/Aug/12 22:20;chrismathews;So this is quite frustrating... I can find a bunch of people with a similar issue across a number of different areas (JAX-WS RI, JAXB, JAXP).  The thing that I find baffling is that it generates proper classes so this warning doesn't appear to be all that important and most people just recommend ignoring it.  Unfortunately, my OCD makes ignoring a big honking stacktrace dumped in the middle of my build quite difficult.

Dan, any thoughts about just not attaching the Throwable to the message in WSDL2JavaMojo?  You can still communicate the warning to m2e and maven... it just wouldn't dump what amounts to useless information (at least useless in this case) to the output. If you don't have any objections I can throw together a patch.  Even with my rudimentary knowledge of the CXF plugins I might be able to make that 1 line change without breaking something. ;)","28/Aug/12 23:40;dkulp;Chris,  

This issue should now be fixed on trunk 2.6.x-fixes.  Basically, JAXB feeds the schemas into a javax.xml.validation.SchemaFactory, but in a very raw form that doesn't really work well.   However, it's smart enough to add an error handler to the SchemaFactory that maps all the errors to warnings.  (for better or for worse).   It then validates the schemas, but just raising warnings, then generates the code off of it's copies.

I found 2 ways around it:

1) Set the system property of:  SchemaCompilerImpl.class.getName()+"".noCorrectnessCheck""   to true which turns off JAXB's schema validation

2) In the CXF warning method, I check the call stack and look for the ""DowngradingErrorHandler"" class that it uses and just ignore any warnings from there.   Likely not ideal, but it works for this.

Anyway, can you retry with tomorrows snapshots? (or build from latest sources and try?)

","29/Aug/12 13:51;chrismathews;Tested a number of different wsdls with 2.6.3-SNAPSHOT and it works perfectly. Awesome responsiveness, thanks Dan!","15/Oct/12 14:08;deki;I also get several warnings with 2.6.2:
{code}
[WARNING] C:\path\project\src\main\resources\wsdl\MyService.wsdl [19:13]: src-resolve.4.2: ...
        at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
        at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source)
        at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
        at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDHandler.reportSchemaError(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDHandler.getGlobalDecl(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDElementTraverser.traverseLocal(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDHandler.traverseLocalElements(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDHandler.parseSchema(Unknown Source)
        at org.apache.xerces.impl.xs.XMLSchemaLoader.loadSchema(Unknown Source)
        at org.apache.xerces.impl.xs.XMLSchemaLoader.loadGrammar(Unknown Source)
        at org.apache.xerces.impl.xs.XMLSchemaLoader.loadGrammar(Unknown Source)
        at org.apache.xerces.jaxp.validation.XMLSchemaFactory.newSchema(Unknown Source)
        at com.sun.tools.xjc.reader.internalizer.DOMForest.weakSchemaCorrectnessCheck(DOMForest.java:486)
        at com.sun.tools.xjc.api.impl.s2j.SchemaCompilerImpl.bind(SchemaCompilerImpl.java:227)
        at com.sun.tools.xjc.api.impl.s2j.SchemaCompilerImpl.bind(SchemaCompilerImpl.java:85)
        at org.apache.cxf.tools.wsdlto.databinding.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:411)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.generateTypes(WSDLToJavaContainer.java:603)
{code}

After updating to 2.6.3 I also get errors for other imported types:
{code}
[ERROR] Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.6.3:wsdl2java (generate-wsdl2java) on project ...
Caused by: org.apache.cxf.tools.common.ToolException: Schema Error : src-resolve: Cannot resolve the name 'xxx:YYY' to a(n) 'element declaration' component.
        at org.apache.cxf.tools.wsdlto.databinding.jaxb.JAXBDataBinding.validateSchema(JAXBDataBinding.java:914)
        at org.apache.cxf.tools.wsdlto.databinding.jaxb.JAXBDataBinding.addSchemas(JAXBDataBinding.java:655)
        at org.apache.cxf.tools.wsdlto.databinding.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:392)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.generateTypes(WSDLToJavaContainer.java:603)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.processWsdl(WSDLToJavaContainer.java:248)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:142)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:300)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:113)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:86)
        at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.generate(WSDL2JavaMojo.java:380)
        at org.apache.cxf.maven_plugin.AbstractCodegenMoho.execute(AbstractCodegenMoho.java:257)
        at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.execute(WSDL2JavaMojo.java:477)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
        ... 20 more
Caused by: org.xml.sax.SAXParseException: src-resolve: Cannot resolve the name 'xxx:YYY' to a(n) 'element declaration' component.
        at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
        at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source)
        at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
        at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
        at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDHandler.reportSchemaError(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDHandler.getGlobalDecl(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDElementTraverser.traverseLocal(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDHandler.traverseLocalElements(Unknown Source)
        at org.apache.xerces.impl.xs.traversers.XSDHandler.parseSchema(Unknown Source)
        at org.apache.xerces.impl.xs.XMLSchemaLoader.loadSchema(Unknown Source)
        at org.apache.xerces.impl.xs.XMLSchemaLoader.loadGrammar(Unknown Source)
        at org.apache.xerces.impl.xs.XMLSchemaLoader.loadGrammar(Unknown Source)
        at org.apache.xerces.jaxp.validation.XMLSchemaFactory.newSchema(Unknown Source)
        at javax.xml.validation.SchemaFactory.newSchema(SchemaFactory.java:594)
        at org.apache.cxf.tools.wsdlto.databinding.jaxb.JAXBDataBinding.validateSchema(JAXBDataBinding.java:909)
        ... 33 more
{code}

Should I also use one of your two ways around it to fix this?","18/Oct/12 13:03;chrismathews;The problem identified in this issue was fixed by Dan as part of the CXF 2.6.3/2.7.0 release.  It looks like you are hitting a different problem.

It isn't clear from your comment:
* Does your wsdl work with previous CXF releaes (2.6.0/2.6.1)?
* Does your wsdl work with wsimport (ships with JDK)?

If so... it probably makes sense to put together a simple test wsdl that demonstrates the issue you are hitting and open a new JIRA.

","22/Oct/12 12:57;deki;Yes, it works with previous CXF releases and wsimport. I'll try to create a simple testcase...",,,,,,,,,,,,,,,,,,,,,,,,
Claims to SAML attribute encoding wrong,CXF-4484,12604622,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,owulff,owulff,23/Aug/12 15:09,08/Nov/12 17:14,14/Mar/19 02:30,07/Sep/12 18:48,2.6.2,,,,,,,2.5.6,2.6.3,2.7,,Services,,,,0,,,,,,,,"The ClaimsAttributeStatementProvider is responsible to transform the claims to a SAML attribute.

SAML 1.1 provides an AttributeName and AttributeNamespace to name a SAML attribute. The AttributeName is a local name and the AttributeNamespace the namespace. Both values form a qualified name (uri).

SAML 2.0 has only the Name attribute and a NameFormat whereas the latter says what kind of format the value is of the Name attribute like uri, basic, unspecified or custom.

The current encoding in the ClaimsAttributeStatementProvider is not aligned with the above.

SAML 2.0
--------

Now:
                     <saml2:Attribute Name=""emailaddress"" NameFormat=""http://schemas.xmlsoap.org/ws/2005/05/identity/claims"">
                        <saml2:AttributeValue xsi:type=""xs:string"">owulff@apache.org</saml2:AttributeValue>
                     </saml2:Attribute>
                     <saml2:Attribute Name=""http://schemas.mycompany.com/claims/language"" NameFormat=""http://schemas.xmlsoap.org/ws/2005/05/identity/claims"">
                        <saml2:AttributeValue xsi:type=""xs:string"">de</saml2:AttributeValue>
                     </saml2:Attribute>

Issue:

- If attibute is part of http://schemas.xmlsoap.org/ws/2005/05/identity/claims schema then the name of the SAML attribute is simple like ""givenname"" instead of fully qualified.
- The NameFormat should not be http://schemas.xmlsoap.org/ws/2005/05/identity/claims.

Proposal:

                     <saml2:Attribute Name=""http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"" NameFormat=""urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"">
                        <saml2:AttributeValue xsi:type=""xs:string"">owulff@apache.org</saml2:AttributeValue>
                     </saml2:Attribute>
                     <saml2:Attribute Name=""http://schemas.mycompany.com/claims/language"" NameFormat=""urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"">
                        <saml2:AttributeValue xsi:type=""xs:string"">de</saml2:AttributeValue>
                     </saml2:Attribute>

You can configure which NameFormat should be used like uri or unspecified (Microsoft uses unspecified, Shibboleth uri). Default stays for backwards compatibilty in 2.6 but would like to change the default to ""unspecified"" for 2.7.

SAML 1.1
--------

Now:

                     <saml1:Attribute AttributeName=""emailaddress"" AttributeNamespace=""http://schemas.xmlsoap.org/ws/2005/05/identity/claims"">
                        <saml1:AttributeValue xsi:type=""xs:string"">owulff@apache.org</saml1:AttributeValue>
                     </saml1:Attribute>
                     <saml1:Attribute AttributeName=""http://schemas.mycompany.com/claims/language"" AttributeNamespace=""http://schemas.xmlsoap.org/ws/2005/05/identity/claims"">
                        <saml1:AttributeValue xsi:type=""xs:string"">de</saml1:AttributeValue>
                     </saml1:Attribute>

Issue:

- If attribute is not part of the http://schemas.xmlsoap.org/ws/2005/05/identity/claims the AttributeName is fully qualified (which it shouldn't) and the AttributeNamespace is again http://schemas.xmlsoap.org/ws/2005/05/identity/claims.

Proposal:

                     <saml1:Attribute AttributeName=""emailaddress"" AttributeNamespace=""http://schemas.xmlsoap.org/ws/2005/05/identity/claims"">
                        <saml1:AttributeValue xsi:type=""xs:string"">owulff@apache.org</saml1:AttributeValue>
                     </saml1:Attribute>
                     <saml1:Attribute AttributeName=""language"" AttributeNamespace=""http://schemas.mycompany.com/claims"">
                        <saml1:AttributeValue xsi:type=""xs:string"">de</saml1:AttributeValue>
                     </saml1:Attribute>

",,,,,,,,,,,,,,,,,,,,07/Sep/12 13:04;coheigea;cxf-4484.patch;https://issues.apache.org/jira/secure/attachment/12544212/cxf-4484.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-09-07 13:04:12.2,,,no_permission,,Unknown,,,,,,,,,,,239884,,,Fri Sep 07 18:48:21 UTC 2012,,,,,,0|i00ukv:,2886,,,,,,,,"07/Sep/12 13:04;coheigea;Hi Oli,

Could you review the attached patch? It fixes all three issues on trunk. 

The ""namespace"" property of the ""Claim"" class now only applies to SAML 1.1 Assertions, and is null by default. If null then the namespace is extracted from the claimType URI. If non-null, then the claimType is normalized against it as before.

The Claim class now has a nameFormat property which is used for SAML 2.0 Assertions - the default is to use ""unspecified"".

For earlier branches I will just add the changed AttributeProvider to source so users can use that instead and @deprecate the other implementation.

Colm.","07/Sep/12 14:48;owulff;Hi Colm

The nameFormat property is token specific and should be in ClaimsAttributeStatementProvider instead of the token agnostic Claim class.

Oli","07/Sep/12 18:48;coheigea;
Note that 2.6.x and 2.5.x retain the old behaviour for backwards compatibility. It is necessary to explicitly plug in the CorrectedClaimsAttributeStatementProvider to the SAMLTokenProvider to get the correct formatting.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
apache-cxf feature has a merge conflict,CXF-4483,12604379,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,22/Aug/12 13:03,08/Nov/12 17:14,14/Mar/19 02:30,22/Aug/12 13:05,2.5.5,,,,,,,2.5.6,,,,OSGi,,,,0,,,,,,,,"There is merge conflict which is introduced by a cherry-pick method ago in the apache-cxf features.xml.

   Merged revisions 1363941 via  git cherry-pick from
    https://svn.apache.org/repos/asf/cxf/branches/2.6.x-fixes",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239885,,,Wed Aug 22 13:05:05 UTC 2012,,,,,,0|i00ul3:,2887,,,,,,,,"22/Aug/12 13:05;njiang;The patch is applied into cxf-2.5.x branch in reversion 1376006[1]
[1]http://svn.apache.org/viewvc?rev=1376006&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AttachmentSerializer puts an extra new line,CXF-4482,12604332,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,lsassexe,lsassexe,22/Aug/12 06:23,04/Feb/15 05:45,14/Mar/19 02:30,20/Nov/12 07:03,2.6.1,,,,,,,2.5.7,2.6.4,2.7.1,,,,,,0,,,,,,,,"_AttachmentSerializer_ always puts an extra new line before writing the root attachment boundary and headers. Because of that the HTTP request which contains only attachments has two line breaks after request headers. That is not understood by some service providers and they do not process the request.

For example:

{code}
...
Pragma: no-cache
Connection: keep-alive
Content-Length: 92010
<new line>
<another new line>
--uuid:467a6f94-55c4-43fe-9e4a-09d63b0bc589
Content-Type: application/xml
...
{code}",,,,,,,,,,,,,,,,,,,,20/Nov/12 07:56;lsassexe;crlf.jpg;https://issues.apache.org/jira/secure/attachment/12554303/crlf.jpg,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-08-23 03:58:28.688,,,no_permission,,Unknown,,,,,,,,,,,239886,,,Wed Feb 04 05:45:55 UTC 2015,,,,,,0|i00ulb:,2888,,,,,,,,"23/Aug/12 03:58;ffang;commit fix
http://svn.apache.org/viewvc?rev=1375972&view=rev for trunk
http://svn.apache.org/viewvc?rev=1375978&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1376357&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1376358&view=rev for 2.4.x branch","19/Nov/12 19:20;hraab;This fix introduces a new problem. The LF (w/o CR) leads to problems with .NET SOAP clients (talking to CXF servers with with fix). .NET refuses the SOAP message. I think it's because the lonely LF. (tested with MTOM, SOAP12 binding)

I also think that replacing a CRLF by LF in the header is not valid HTTP. 
","20/Nov/12 01:11;ffang;Hi,

Thanks for pointing out this issue.

This is caused by different platform interpret CRLF with different way, on windows, it need both \r\n.
Anyway we can use System.lineSeparator() method which will returns the system-dependent line separator string.
On UNIX systems, it returns \n, on Microsoft Windows systems it returns \r\n


Freeman","20/Nov/12 01:17;ffang;As System.lineSeparator() method get introduced since JDK7, we need use some more general way like
lineSeparator = java.security.AccessController.doPrivileged(
            new sun.security.action.GetPropertyAction(""line.separator""));
ensure it works with JDK6(even JDK5)","20/Nov/12 07:55;lsassexe;Hi,

I think we should definitely use CRLFCRLF to separate HTTP headers and a body. What took place before the fix, was actually THREE line breaks after HTTP headers (CRLFCRLFCRLF). Maybe the most reasonable fix is to just remove the last CRLF? I've attached a screenshot.

","20/Nov/12 08:58;ffang;Hi,

Yeah, what we've done is remove the latest two CRLF.
You can try the latest snapshot tomorrow.

Freeman","20/Nov/12 09:01;ay;Hi Freeman,
could the problem be in the code that is reading the data back?
In the wire-format, we should be using CRLF for each line-break independently of the platform.
http://www.rfc-editor.org/rfc/rfc1521.txt
So, I think the writing part is correct.
regards, aki","20/Nov/12 09:14;ffang;Hi Aki,

Thanks for the link. And you're right, we should have CRLF.
Actually after discussed with Dan, I realized that AttachmentSerializer.writeProlog() method is used to write the very first boundary and headers which means the underlying HTTP transport already has output the CRLF after the HTTP header. 
So we needn't have any other one.

Freeman","20/Nov/12 10:58;akiy;Hi Freeman,
good to hear the root cause has been identified and fixed.
:-)
regards, aki

","03/Feb/15 17:51;ashwin74268;Hi Freeman,
The AttachmentSerializer.java in 2.4.3-fuse-04-16 still shows ""\n"" line #125. We are using cxf-bundle 2.4.3-fuse-04-16 which does not have this fix. Can we please have a new version of cxf-bundle for 2.4.3-fuse with latest code?

Thanks,
Ashwin Sharma ","04/Feb/15 05:34;ffang;Hi, 

As you are talking about the fuse version so please use fuse channel to ask for help.

Thanks
Freeman","04/Feb/15 05:45;ashwin74268;Thanks Freeman, I posted on Jboss.org as well.

Link: https://developer.jboss.org/thread/252082?start=0&tstart=0

Thanks,
Ashwin",,,,,,,,,,,,,,,,,,,,,,,,
unable to generate WADL to java ,CXF-4481,12604330,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,ybaba,ybaba,22/Aug/12 06:21,08/Nov/12 17:15,14/Mar/19 02:30,23/Aug/12 10:29,,,,,,,,2.5.6,2.6.3,2.7,,JAX-RS,Tooling,,,0,,,,,,,,"i succeeded to created rest with CXF,all good except that i get error when generating WADL2java. 
i use the following configuration: 
<plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-wadl2java-plugin</artifactId>
                <version>2.6.1</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceRoot>${basedir}/target/generated/src/main/java</sourceRoot>
                            <wadlOptions>
                                <wadlOption>
                                    <wadl>http://localhost:8080/apache-cxf-rest-test?_wadl</wadl>
                                    <impl>true</impl>
                                    <interface>true</interface>
                                    <packagename>org.apache.cxf.systest.jaxrs.codegen.service</packagename>
                                    <schemaPackagenames>
                                        <schemaPackagename>http://superbooks=org.apache.cxf.systest.jaxrs.codegen.schema</schemaPackagename>
                                    </schemaPackagenames>

                                </wadlOption>
                            </wadlOptions>
                        </configuration>
                        <goals>
                            <goal>wadl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


stack error: 
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.3.2:compile (default-compile) on project wad: Compilation failure: Compilation failure: 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResourceImpl.java:[11,27] error: ';' expected 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResourceImpl.java:[11,28] error: not a statement 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResourceImpl.java:[11,30] error: ';' expected 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResourceImpl.java:[11,31] error: illegal start of type 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResourceImpl.java:[11,32] error: ';' expected 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResourceImpl.java:[11,41] error: <identifier> expected 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResource.java:[18,20] error: = expected 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResource.java:[18,23] error: <identifier> expected 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResource.java:[18,24] error: ';' expected 
[ERROR] \DEV\wad\target\generated\src\main\java\org\apache\cxf\systest\jaxrs\codegen\service\ServiceResource.java:[18,51] error: = expected 



wadl:
<application xmlns=""http://wadl.dev.java.net/2009/02"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""><grammars><xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"" attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"">
    <xs:element name=""user"" type=""user""/>
    <xs:element name=""userCollection"" type=""userCollection""/>
    <xs:complexType name=""user"">
        <xs:sequence>
            <xs:element minOccurs=""0"" name=""id"" type=""xs:int""/>
            <xs:element minOccurs=""0"" name=""name"" type=""xs:string""/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name=""userCollection"">
        <xs:sequence>
            <xs:element minOccurs=""0"" name=""users"">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs=""unbounded"" minOccurs=""0"" ref=""user""/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
</grammars><resources base=""http://127.0.0.1:8080/apache-cxf-rest-test/""><resource path=""/service/""><resource path=""user/{id}""><param name=""id"" style=""template"" type=""xs:int""/><method name=""GET""><request></request><response><representation mediaType=""application/xml""/></response></method></resource><resource path=""users""><method name=""GET""><response><representation mediaType=""application/xml""/></response></method></resource><resource path=""users/bad""><method name=""GET""><response><representation mediaType=""application/xml""/></response></method></resource></resource></resources></application>


please help ","cxf version 2.6.1
apache-maven-3.0.4
java 1.7",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-08-22 11:03:02.927,,,no_permission,,Unknown,,,,,,,,,,,239887,,,Wed Aug 22 11:03:02 UTC 2012,,,,,,0|i00ulj:,2889,,,,,,,,22/Aug/12 11:03;sergey_beryozkin;http://fisheye6.atlassian.com/changelog/cxf?cs=1375672,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[WADL2JAVA] Generate incorrect primitive parameter type ,CXF-4477,12603945,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,hoanvuphan,hoanvuphan,18/Aug/12 06:25,08/Nov/12 17:14,14/Mar/19 02:30,23/Aug/12 10:30,2.6.1,,,,,,,2.5.6,2.6.3,2.7,,JAX-RS,Tooling,,,0,,,,,,,,"In org.apache.cxf.tools.wadlto.jaxrs.SourceGenerator we have the code like this:

XSD_SPECIFIC_TYPE_MAP = new HashMap<String, String>();
XSD_SPECIFIC_TYPE_MAP.put(""string"", ""String"");
XSD_SPECIFIC_TYPE_MAP.put(""decimal"", ""java.math.BigInteger"");
XSD_SPECIFIC_TYPE_MAP.put(""integer"", ""long"");

If we have a wadl like this:
<param name=""param1"" required=""true"" style=""query"" type=""xs:int"" />
<param name=""param2"" required=""true"" style=""query"" type=""xs:long"" />

it's always generate (String param1) and (String param2)
So far as I know, xs:int and xs:long beside xs:string are the most usage type in WADL. But now it can not work any more!!!!



I think this is a regression bug from

**********************************************************
sergeyb  08.05.12 19:25:44
[CXF-4292] Defaulting to String when WADL Generator can not determine a class name of the primitive type
**********************************************************


For the solution, I think we can expand XSD_SPECIFIC_TYPE_MAP which the exactly mapping as a standard:
http://en.wikipedia.org/wiki/Java_Architecture_for_XML_Binding

Could you please have a look on this issue.
Many many many thanks :)


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-08-21 13:35:18.004,,,no_permission,,Unknown,,,,,,,,,,,239891,,,Wed Aug 22 14:38:33 UTC 2012,,,,,,0|i00umf:,2893,,,,,,,,"21/Aug/12 08:19;hoanvuphan;Special thanks to Sergeyb for very fast response :)
But it still does not work for my case :(
In case of form submit, for example:

<representation mediaType=""application/x-www-form-urlencoded"">
    <param name=""param1"" required=""false"" style=""query"" type=""xs:long"" />
</representation>

It generates:

@FormParam(""param1"") long param1

But it should be:
@FormParam(""param1"") Long param1

I found in org.apache.cxf.tools.wadlto.jaxrs.SourceGenerator

String type = enumCreated ? getTypicalClassName(name) : getPrimitiveType(paramEl, info, imports);
if (paramAnn == QueryParam.class 
    && (isRepeating || !Boolean.valueOf(paramEl.getAttribute(""required"")))    
    && AUTOBOXED_PRIMITIVES_MAP.containsKey(type)) {
         type = AUTOBOXED_PRIMITIVES_MAP.get(type);
}

We have a check (paramAnn == QueryParam.class) that ignore FormParam case. Am i right? Is there any reason here?
Besides, I saw in your commit, we have a check like that:

if (schemaTypesMap.containsKey(value)) {
    return schemaTypesMap.get(value);
}

It means, user can defined a customize map types. But it will ignore the name space??? Maybe we will some type conflict between difference name spaces? It's not my case, but just for you information.

Best regards.



","21/Aug/12 13:35;sergey_beryozkin;Thanks for the quick test on your end.

I've updated the generator to autobox when needed all the optional parameters (form, header, param, query).

As far as 'schemaTypesMap' is concerned I thought I would reuse it for 2 purposes, first one for mapping between the default Java types allocated to either parameter and representation types and the preferred types (we've had only a case of W3C EPR so far) and overriding the default primitive mappings (ex, xs:date -> java.util.Date by default in the generator to say Calendar) but now I've decided to use it for java to java mappings only, to avoid any ambiguities. So if say you'd like to restore a default (JAXB) mapping between 'xs:date' and Calendar then you'd use a 'java.util.Date -> Calendar' mapping. If really needed I'd then add another property for customizing the mapping between schema types and java classes

","22/Aug/12 07:02;hoanvuphan;It's clear to me, and it's really nice Sergey :)
I think, we don't need to have a mapping between schema types and java classes because it is jaxb bindings work.
We just need a mapping between primitive types for the interface generating.

Now, I work perfectly :)

Thanks for your commitment.
Best regards.


","22/Aug/12 14:38;sergey_beryozkin;After thinking again about, I decided to restore schemaTypeMap, the keys are expanded qnames, that can help to customize the default mappings for primitive types but also, what is more interesting is to avoid generating the schema classes in cases when we say have Atom service description and still map representation element references to classes like Abdera Feed, etc",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Content-Disposition header may be incorrectly set in MTOM under windows ,CXF-4476,12603657,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,15/Aug/12 22:36,08/Nov/12 17:14,14/Mar/19 02:30,16/Sep/12 13:00,2.6.1,,,,,,,2.4.10,2.5.6,2.6.3,2.7,Core,,,,0,,,,,,,,"This problem can be seen in the following test case when it is executed under windows.

Failed tests:   testMtomWithFileName(org.apache.cxf.systest.mtom.ClientMtomXopTest): can't get file name expected:<return detail + []me.bmp> but was:<return detail + [/C:/repos/cxf/trunk/systests/uncategorized/target/test-classes/]me.bmp>

The problem is the way how the file name is extracted in AttachmentUtils.createMtomAttachmentFromDH. Concretely, this method extracts the part of the data handler's URL string after the last File.separator, where this string is given as the standard URL syntax which does not contains the windows' File.separator.
",windows,,,,,,,,,,,,,CXF-4420,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239892,,,2012-08-15 22:36:05.0,,,,,,0|i00umn:,2894,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LoggingInInterceptor throws when pretty printing MTOM messages,CXF-4475,12603514,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,piepera,piepera,14/Aug/12 21:51,08/Nov/12 17:14,14/Mar/19 02:30,17/Aug/12 01:21,2.6.1,,,,,,,2.4.10,2.5.6,2.6.3,2.7,Core,,,,0,logging,xml,,,,,,"I'm using CXF to implement some SOAP web services. I've added a LoggingInInterceptor to my interceptor chain through an XML configuration file so that incoming SOAP messages will be logged. My configuration file looks like this:

--------------------
  <jaxws:endpoint id=""foo"" implementor=""#fooServiceImpl"" address=""/FOO"">
    <!-- snip... -->
    <jaxws:inInterceptors>
      <ref bean=""loggingInInterceptor""/>
    <!-- snip... -->
  </jaxws:endpoint>
  
  <bean id=""loggingInInterceptor"" class=""org.apache.cxf.interceptor.LoggingInInterceptor"">
    <property name=""prettyLogging"" value=""true""/>
  </bean>
--------------------

This logging setup works OK for non-MTOM messages. But when an incoming message uses MTOM, I get an error:

--------------------
org.xml.sax.SAXParseException: Content is not allowed in prolog.
        at net.sf.saxon.event.Sender.sendSAXSource(Sender.java:425)
        at net.sf.saxon.event.Sender.send(Sender.java:178)
        at net.sf.saxon.IdentityTransformer.transform(IdentityTransformer.java:39)
        at org.apache.cxf.interceptor.AbstractLoggingInterceptor.writePayload(AbstractLoggingInterceptor.java:158)
        at org.apache.cxf.interceptor.LoggingInInterceptor.logging(LoggingInInterceptor.java:152)
--------------------

The pretty-printing logic in AbstractLoggingInterceptor requires the message to be well-formed XML, but MTOM messages have various non-XML headers and boundaries. The ""content not allowed in prolog"" comes from AbstractLoggingInterceptor trying to parse one of these boundaries as XML.

I've been able to work around this problem by disabling pretty printing.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-08-17 01:21:12.418,,,no_permission,,Unknown,,,,,,,,,,,239893,,,Fri Aug 17 01:21:12 UTC 2012,,,,,,0|i00umv:,2895,,,,,,,,"17/Aug/12 01:21;ffang;commit fix 
http://svn.apache.org/viewvc?rev=1373240&view=rev for trunk
http://svn.apache.org/viewvc?rev=1373704&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1373720&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1373720&view=rev for 2.4.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to configure cxf:bus with Spring 2.5.6-SEC03,CXF-4470,12603332,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,rnideffer,rnideffer,13/Aug/12 21:30,28/Aug/12 17:44,14/Mar/19 02:30,14/Aug/12 15:46,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,,Bus,,,,0,,,,,,,,"Spring bean initialization fails to create the 'cxf' bean when configuring the cxf bus as documented in tutorials. To reproduce, configure a bare-bones webapp in Apache Tomcat using Spring 2.5.6-SEC03 libraries, along with CXF 2.6.1. Here is the web.xml I used:

{noformat}
<?xml version=""1.0"" encoding=""ISO-8859-1""?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the ""License""); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an ""AS IS"" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<web-app xmlns=""http://java.sun.com/xml/ns/javaee""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
   version=""2.5"">

  <display-name>Welcome to Tomcat</display-name>
  <description>
     Welcome to Tomcat
  </description>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:com/awarepoint/ws/services.xml
        </param-value>
    </context-param>

    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>


    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <display-name>CXF Servlet</display-name>
        <servlet-class>
           org.apache.cxf.transport.servlet.CXFServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>

</web-app>
{noformat}

And the contents of the spring config:
{noformat}
<beans xmlns=""http://www.springframework.org/schema/beans""
      xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
      xmlns:cxf=""http://cxf.apache.org/core""
      xmlns:jaxws=""http://cxf.apache.org/jaxws""
      xmlns:jaxrs=""http://cxf.apache.org/jaxrs""
      xsi:schemaLocation=""
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
         http://cxf.apache.org/core
         http://cxf.apache.org/schemas/core.xsd
         http://cxf.apache.org/jaxws
         http://cxf.apache.org/schemas/jaxws.xsd
         http://cxf.apache.org/jaxrs
         http://cxf.apache.org/schemas/jaxrs.xsd"">

    <import resource=""classpath:META-INF/cxf/cxf.xml""/>

    <bean id=""logOutbound"" class=""org.apache.cxf.interceptor.LoggingOutInterceptor""/>

    <cxf:bus>
        <cxf:outInterceptors>
            <ref bean=""logOutbound""/>
        </cxf:outInterceptors>
    </cxf:bus>

</beans>
{noformat}

Here is the resulting stacktrace:

{noformat}
INFO: Bean factory for application context [org.springframework.web.context.support.XmlWebApplicationContext@344e17f9]: org.springframework.beans.factory.support.DefaultListableBeanFactory@6b11ae04
Aug 13, 2012 2:25:23 PM org.springframework.beans.factory.support.DefaultSingletonBeanRegistry destroySingletons
INFO: Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6b11ae04: defining beans [cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,logOutbound,cxf.config0]; root of factory hierarchy
Aug 13, 2012 2:25:23 PM org.springframework.web.context.ContextLoader initWebApplicationContext
SEVERE: Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cxf' defined in class path resource [META-INF/cxf/cxf.xml]: Initialization of bean failed; nested exception is java.lang.reflect.MalformedParameterizedTypeException
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:480)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:308)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:947)
	at org.springframework.context.support.AbstractApplicationContext.registerListeners(AbstractApplicationContext.java:701)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:377)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:255)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:799)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:779)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:601)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1079)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1002)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:506)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1317)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:324)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:142)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1065)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)
	at org.apache.catalina.core.StandardService.start(StandardService.java:525)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:754)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:595)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)
Caused by: java.lang.reflect.MalformedParameterizedTypeException
	at sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.validateConstructorArguments(ParameterizedTypeImpl.java:42)
	at sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.<init>(ParameterizedTypeImpl.java:35)
	at sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.make(ParameterizedTypeImpl.java:77)
	at sun.reflect.generics.factory.CoreReflectionFactory.makeParameterizedType(CoreReflectionFactory.java:86)
	at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:122)
	at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:31)
	at sun.reflect.generics.repository.ClassRepository.getSuperInterfaces(ClassRepository.java:82)
	at java.lang.Class.getGenericInterfaces(Class.java:794)
	at org.springframework.core.GenericTypeResolver.getTypeVariableMap(GenericTypeResolver.java:154)
	at org.springframework.core.GenericTypeResolver.resolveReturnType(GenericTypeResolver.java:101)
	at org.springframework.beans.GenericTypeAwarePropertyDescriptor.getPropertyType(GenericTypeAwarePropertyDescriptor.java:88)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:138)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:386)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1250)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
	... 39 more
Aug 13, 2012 2:25:23 PM org.apache.catalina.core.StandardContext start
SEVERE: Error listenerStart
Aug 13, 2012 2:25:23 PM org.apache.catalina.core.StandardContext start
SEVERE: Context [] startup failed due to previous errors
{noformat}","Ubuntu Linux 12.04, Oracle Java 6 1.6.0_30, apache-tomcat-6.0.35, spring-2.5.6-SEC03, apache-cxf-2.6.1",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-08-14 01:20:52.339,,,no_permission,,Unknown,,,,,,,,,,,239898,,,Tue Aug 14 02:30:11 UTC 2012,,,,,,0|i00unz:,2900,,,,,,,,"14/Aug/12 01:20;gmazza;I'm unsure why this is a ""bug"" in CXF; CXF is shipped with Spring 3.0 and AFAIK makes no claim to support earlier versions of Spring.
","14/Aug/12 02:30;rnideffer;From what I read on the CXF site, there is not a requirement as to the minimum version of Spring that is supported. Spring 2.5.6 is older version of Spring, but it is stable and likely in wide use across many organizations. CXF has been a very useful library for my company, and we use it conjunction with Spring. I'd like to make use of the enhancements in the current version of CXF, but unfortunately I'm not able to also upgrade to Spring 3 at this time. Mailing list responses by Daniel Kulp indicate that theres no explicit reason older versions of Spring can't be used, only that Spring 3 is the version CXF is tested and developed against. I've attempted trace the creation of the 'cxf' bean through the Spring framework, and I'm currently stumped as to why its failing. I created this bug after posting to the mailing list in hopes that someone more familiar with the Spring wiring within CXF would have an idea about why it is not working.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2.6.x rt-ws-security bundle is requiring opensaml,CXF-4469,12603240,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,13/Aug/12 13:58,28/Aug/12 17:44,14/Mar/19 02:30,14/Aug/12 15:53,2.6.1,,,,,,,2.6.2,2.7,,,WS-* Components,,,,0,,,,,,,,"The CXF's 2.6.x's rt-ws-security bundle is requiring opensaml, although opensaml is supposed to be optional.

The cxf all bundle declares opensaml* as optional and not requiring them.

The rt-ws-security's pom also needs this optional import declaration.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-08-13 14:16:20.208,,,no_permission,,Unknown,,,,,,,,,,,239899,,,Tue Aug 14 14:38:33 UTC 2012,,,,,,0|i00uo7:,2901,,,,,,,,"13/Aug/12 14:16;coheigea;Hi Aki,

Opensaml is not supposed to be optional any more since we moved to use WSS4J 1.6.0.

Colm.","13/Aug/12 17:33;ay;Hi Colm,
Okay. Thanks.

I looked at manifest in the wss4j.1.6.6.jar bundle and I saw the org.opensaml* stuff with optional resolution. So, I thought opensaml is still optional. But I saw they are referenced in rt-ws-security's WSS4JInInterceptor, so they seem to be required.

But I am still wondering if opensaml is declared as optional in wss4j 1.6.6, some ws security functionality may be provided without opensaml?

Regards, Aki","14/Aug/12 09:35;coheigea;Hi Aki,

Yes, all non-SAML WS-Security functionality in WSS4J is available without Opensaml. That is not the case though when you use WS-Security via the cxf-rt-ws-security module. We could possibly refactor the code such that a non-SAML use-case would work without having Opensaml available. What would be the point though?

Colm.","14/Aug/12 14:21;ay;Hi Colm,
as discussed on #cxf, I simply moved the parseRolesInAssertion methods to an internal utility class and added a method that takes the assertion wrapper and returns the list of roles in this class.

alternatively, we could have added another method getAssertion(Object assertionWrapper) in the utility class to get the assertion first and then call the parseRolesInAssertion(Object assertion, ...). In that case, we could have kept the replacement for those protected methods by adding protected parseRolesInAssertion(Object assertion, ...) in WSS4JInInterceptor that calls this utility method.

thanks.
regards, aki
","14/Aug/12 14:38;coheigea;Hi Aki,

Either solution is fine with me.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Port the fix for faultTo request is not correctly transmitted to the specified address,CXF-4468,12603216,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,13/Aug/12 10:22,28/Aug/12 17:44,14/Mar/19 02:30,13/Aug/12 11:06,2.4.8,,,,,,,2.4.9,,,,WS-* Components,,,,0,,,,,,,,Port fix for CXF-4382 and CXF-4405 in 2.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239900,,,2012-08-13 10:22:18.0,,,,,,0|i00uof:,2902,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSSE KeyManagers and TrustManager XML configurations are ignored if they contain no keystore element.,CXF-4454,12601389,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,sstaible,sstaible,03/Aug/12 15:57,28/Aug/12 17:44,14/Mar/19 02:30,08/Aug/12 15:07,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,2.7,Configuration,,,,0,,,,,,,,"The XSD for JSSE KeyManagers and TrustManagers allows them to not include a keystore (or certstore) element (which is correct). However the configured key and trust manager configurations are ignored and not applied if they contain no keystore configuration element (see TLSParameterJaxBUtils.java:239 and TLSParameterJaxBUtils.java:275).

For a Trust- or KeyManager to not require a keystore configuration is a valid scenario. I'm currently using a JCE provider that does not require a keystore. With the current implementation I can not use this provider with the XML configuration feature. If I set the key and trust managers of this provider manually in the TLSClientParametersConfig using java code it works as expected.",all,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239911,,,2012-08-03 15:57:53.0,,,,,,0|i00uqv:,2913,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when trying to customize the package name for a service definition without customizing the class name.,CXF-4452,12601132,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,sandyperez,sandyperez,01/Aug/12 21:52,28/Aug/12 17:44,14/Mar/19 02:30,09/Aug/12 06:30,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,2.7,Tooling,,,,0,,,,,,,,"Hello

When I try to use jax-ws customization to customize the package name without customizing the class name, for example using the following XML code 

<bindings wsdlLocation=""myService.wsdl"" xmlns=""http://java.sun.com/xml/ns/jaxws"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
	<bindings node=""wsdl:definitions/wsdl:service[@name='MyService_V1']"">
		<package name=""com.acme.myservice.v1.wsdl""/>
	</bindings>
</bindings>

I get the following exception:

[WARNING] WSDLToJava Error: java.lang.NullPointerException
[WARNING] 
[WARNING] org.apache.cxf.tools.common.ToolException: java.lang.NullPointerException
[WARNING] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:294)
[WARNING] 	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
[WARNING] 	at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:113)
[WARNING] 	at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:86)
[WARNING] 	at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:184)
[WARNING] Caused by: java.lang.NullPointerException
[WARNING] 	at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.ServiceProcessor.processService(ServiceProcessor.java:207)
[WARNING] 	at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.ServiceProcessor.process(ServiceProcessor.java:100)
[WARNING] 	at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.WSDLToJavaProcessor.wsdlDefinitionToJavaModel(WSDLToJavaProcessor.java:91)
[WARNING] 	at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.WSDLToJavaProcessor.process(WSDLToJavaProcessor.java:60)
[WARNING] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.processWsdl(WSDLToJavaContainer.java:253)
[WARNING] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:139)
[WARNING] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:286)
[WARNING] 	... 4 more

The problem is in the class named ‘org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal. ServiceProcessor’ in line 207:

if (serviceBinding2.getJaxwsClass().getComments() != null) {
	…
}

If you don’t customize the class name, serviceBinding2.getJaxwsClass() will returns null so calling getComments() results in a NullPointerException .

A possible quick solution could be to change the condition as follows:

if (serviceBinding2.getJaxwsClass() != null && serviceBinding2.getJaxwsClass().getComments() != null) {
	…
}

On the other hand, a possible workaround is to customize the class name. For example, the following XML code will work fine.

<bindings wsdlLocation=""myService.wsdl"" xmlns=""http://java.sun.com/xml/ns/jaxws"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
	<bindings node=""wsdl:definitions/wsdl:service[@name='MyService_V1']"">
		<package name=""com.acme.myservice.v1.wsdl""/>
		<class name=""MyServiceV1"" />
	</bindings>
</bindings>

Best regards,
 ----
Sandy Pérez González
Indaba Consultores S.L.
http://www.indaba.es/","JDK v1.7
Maven v3.0.4
cxf-codegen-plugin v2.6.1",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-08-09 06:30:41.403,,,no_permission,,Unknown,,,,,,,,,,,239913,,,Thu Aug 09 06:30:41 UTC 2012,,,,,,0|i00urb:,2915,,,,,,,,"09/Aug/12 06:30;ffang;commit fix 
http://svn.apache.org/viewvc?rev=1370687&view=rev for trunk
http://svn.apache.org/viewvc?rev=1370704&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1371023&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1371025&view=rev for 2.4.x branch

@Sandy,
Thanks for pointing out this issue!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STSClient doesn't consider the wsam:Action when looking up Operations...,CXF-4450,12601085,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,01/Aug/12 15:57,28/Aug/12 17:44,14/Mar/19 02:30,01/Aug/12 18:31,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,,WS-* Components,,,,0,,,,,,,,"
The STSClient.findOperation method tries to match the suffix to an OperationInfo.  It currently only checks the SOAPAction for the match.  However, it should also check the wsam:Action in the input message.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239915,,,2012-08-01 15:57:25.0,,,,,,0|i00urr:,2917,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XMLBinding generates different messages if code first or wsdl first,CXF-4449,12601075,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,01/Aug/12 15:04,28/Aug/12 17:44,14/Mar/19 02:30,01/Aug/12 18:32,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,,JAX-WS Runtime,,,,0,,,,,,,,"
The XML binding, when using a ""build from class"", always (properly) expects qualified root elements.   However, when from wsdl, if the part is defined by type, it generates and expects unqualified elements.   It should be updated to make sure the root elements are always qualified.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239916,,,2012-08-01 15:04:01.0,,,,,,0|i00urz:,2918,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DocLitBare with @XMLList generating invalid SOAP messages,CXF-4448,12601074,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,01/Aug/12 15:01,28/Aug/12 17:44,14/Mar/19 02:30,01/Aug/12 18:32,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,,JAXB Databinding,,,,0,,,,,,,,"
If using a method like:
{code}
    @XmlList
    @WebResult(name = ""Items"", targetNamespace = ""http://namespace/result"", partName = ""parameter"")
    @WebMethod
    java.math.BigInteger[] sayTest(
        @WebParam(partName = ""parameter"", name = ""SayTestRequest"", targetNamespace = ""http://www.tum.de/test"")
        SayTestRequest parameter
    );
{code}

(which is exactly from one of our own testcases), the resulting response SOAP message is invalid.  The ""Item"" element is unqualified when it needs to be qualified.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239917,,,2012-08-01 15:01:35.0,,,,,,0|i00us7:,2919,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javascript client outputting invalid and wrong soapaction,CXF-4447,12600875,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,31/Jul/12 15:49,28/Aug/12 17:44,14/Mar/19 02:30,31/Jul/12 16:27,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,,JavaScript Client,,,,0,,,,,,,,"
The javascript client is always calling setRequestHeader(""SOAPAction"", ...) twice. This results in an action of one of:

SOAPAction: ,

(in the case of no action set in the wsdl)
or 

SOAPAction: MyAction,

(in the case where there is a setting of ""MyAction"")
Neither of which are correct.   It should be either:

SOAPAction: """"

or 

SOAPAction: ""MyAction""




",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239918,,,2012-07-31 15:49:59.0,,,,,,0|i00usf:,2920,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFNonSpringJaxrsServlet and initialization jaxrs.providers,CXF-4445,12600502,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,stephanejeandeaux,stephanejeandeaux,27/Jul/12 19:09,28/Aug/12 17:44,14/Mar/19 02:30,28/Jul/12 19:07,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,2.7,JAX-RS,,,,0,,,,,,,,"If i want initialize my provider, i use web.xml. 
But in code, you use the same splitter  (space) for class and properties. 

For example i write org.apache.cxf.jaxrs.provider.json.JSONProvider(dropRootElement=false attributesToElements=true). 
The servlet take ""org.apache.cxf.jaxrs.provider.json.JSONProvider(dropRootElement=false"" like Class to load. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-28 19:07:10.301,,,no_permission,,Novice,,,,,,,,,,,239920,,,Sat Jul 28 19:07:10 UTC 2012,,,,,,0|i00usv:,2922,,,,,,,,"28/Jul/12 19:07;sergey_beryozkin;"","" is now a default separator for splitting the complete sequence, ex,
""org.bar.MyProvider(a=b c=d), org.bar.MyProvider2(a=b c=d)""

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Injecting object with @Resource with no specified name attribute is not working,CXF-4444,12600420,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,mveitas,mveitas,27/Jul/12 03:57,28/Aug/12 17:44,14/Mar/19 02:30,27/Jul/12 16:16,2.6.1,,,,,,,2.5.5,2.6.2,2.7,,Core,JAX-RS,,,0,,,,,,,,"Created a JAX-RS service and the implementation is attempting to inject a resource by type as seen in the example below. The ApplicationSettings bean is confirmed to be defined in the root Spring context as I can explicitly retrieve the bean from the ApplicationContext in the LoginResourceImpl. I am aware that the beans defined in the serviceBeans are created for each request and that Spring does not do the DI, but rather CXF code handles this.

The issue stems from how it performs a lookup for the injected resource. If no name attribute is defined on the @Resource, it should perform the lookup for that object by type.

The ResourceInjector class has a visitField method that will retrieve the name of the resource along with the class type. In our case the first resolveResource attempt will fail since there is nothing found with the name/type combination. The second case should attempt to perform a lookup with just the type of the resource to be injected.

When the BusApplicationContextResourceResolver attempts to resolve the value the 2nd try with a null name, the resolve method will ALWAYS return null instead of attempting to do a lookup using ""context.getBean(resourceType)"".

{code:title=ResourceInjector.java}
String name = getFieldNameForResource(res, field);
        Class<?> type = getResourceType(res, field); 
        
        Object resource = resolveResource(name, type);
        if (resource == null
            && """".equals(res.name())) {
            resource = resolveResource(null, type);
        }
{code}

{code:title=BusApplicationContextResourceResolver.java}
public <T> T resolve(String resourceName, Class<T> resourceType) {
        if (resourceName == null) {
            return null;
        }   
        try {
            return resourceType.cast(context.getBean(resourceName, resourceType));
        } catch (NoSuchBeanDefinitionException def) {
            //ignore
        }
    ....
    ....
{code}


{code:xml}
<jaxrs:server id=""jaxrsRestService"" address=""/"">
    <jaxrs:serviceBeans>
      <bean class=""LoginResourceImpl"" />
    </jaxrs:serviceBeans>
{code}

{code:title=LoginResource.java}
public class LoginResource {
   @GET
   @Path(""/login/captchakey"")
   public String retrieveCaptchaKey();
}
{code}

{code:title=LoginResourceImpl.java}
public class LoginResourceImpl implements LoginResource {

   // This is the resource we are attempting to inject
   @Resource
   ApplicationSettings applicationSettings; 

   public String retrieveCaptchaKey() {
      return applicationSettings.getSettting(""captchakey"");
   }
}
{code}

{code:title=Possible fix in BusApplicationContextResourceResolver.java}
public <T> T resolve(String resourceName, Class<T> resourceType) {
try {
            T resource = null;

            if (resourceName == null) {
                // Perofmrm the lookup of the resource using just the type
                resource = resourceType.cast(context.getBean(resourceType));
            } else {
                resource = resourceType.cast(context.getBean(resourceName, resourceType));
            }

            return resource;
        } catch (NoSuchBeanDefinitionException def) {
            //ignore
        }
   ...
   ...
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-27 16:16:17.75,,,no_permission,,Novice,,,,,,,,,,,239921,,,Fri Jul 27 16:16:17 UTC 2012,,,,,,0|i00ut3:,2923,,,,,,,,27/Jul/12 15:20;mveitas;A work around for this is to ensure that all injected items have a name specified,27/Jul/12 16:16;sergey_beryozkin;Thanks for the proposed fix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MediaType handler is too strict when processing types without subtypes,CXF-4443,12600151,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,25/Jul/12 11:47,28/Aug/12 17:44,14/Mar/19 02:30,25/Jul/12 12:35,,,,,,,,2.4.9,2.5.5,2.6.2,2.7,JAX-RS,,,,0,,,,,,,,"What happens now and then is that browsers or legacy services set a media type which is not technically correct, example, '*', 'text', etc. The media type handler needs to be more tolerable, but also able to strictly enforce the rules",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239922,,,2012-07-25 11:47:01.0,,,,,,0|i00utb:,2924,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stack Overflow exception in org.apache.cxf.endpoint.ClientImpl when logging set to FINE,CXF-4437,12599579,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,pellcorp,pellcorp,20/Jul/12 05:19,28/Aug/12 17:44,14/Mar/19 02:30,27/Jul/12 09:24,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,2.7,Core,,,,0,,,,,,,,"Hi,

I can reproduce the issue in our code, but will probably struggle to
create a test case.  

I have narrowed down the culprit (in 2.6.1) to org.apache.cxf.endpoint.ClientImpl line 636

The method protected Object[] processResult(Message message,
                                   Exchange exchange,
                                   BindingOperationInfo oi,
                                   Map<String, Object> resContext)
throws Exception {

And the code:

if (LOG.isLoggable(Level.FINE)) {
                    LOG.fine(""set responseContext to be"" + resContext);
                }


The code to add all the properties from the message to resContext, creates a recursive reference, because the message already has a reference to resContext.  This causes the logging to fail as when it tries to serialise the content of the map, it gets a stack overflow.

The org.apache.cxf.invocation.context contains the ResponseContext and
the ResponseContext contains the org.apache.cxf.invocation.context

To prove my hypothesis I added the following code to replace the log call:

HashMap contextMap = (HashMap)
resContext.get(""org.apache.cxf.invocation.context"");
                        HashMap responseContextMap = (HashMap)
contextMap.get(""ResponseContext"");
                        HashMap secondContextMap = (HashMap)
responseContextMap.get(""org.apache.cxf.invocation.context"");
                        if (secondContextMap != null) {
                                System.out.println(""Oh boy here is the error!"");
                        }

And I got the Oh boy here is the error! message back.

The original stack trace is:


java.lang.StackOverflowError
        at java.util.HashMap$EntrySet.iterator(HashMap.java:950)
        at java.util.AbstractMap.toString(AbstractMap.java:478)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)

<snip>",JDK 1.6.0_32,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-23 10:22:35.228,,,no_permission,,Unknown,,,,,,,,,,,244763,,,Fri Jul 27 09:24:24 UTC 2012,,,,,,0|i05ton:,31906,,,,,,,,"20/Jul/12 05:21;pellcorp;In addition in the same code I think the setContext method is not
actually logging what is expected.

Should it be adding all the request context info to the message or vice versa?

Should it be:
   message.putAll(ctx);

Or:
ctx.putAll(message);

As for the processResult logging?","23/Jul/12 10:22;ay;Hi Jason,
I think we can guard against this situation by not allowing the invocation context to be put into the response context but I am wondering how the invocation context was inserted into the response context in your case. 

Are you doing something particular in your code? For instance, copying the request message to the response message?
Thanks.
regards, aki","23/Jul/12 12:34;dkulp;
I'm also wondering if it would make sense to just log the keySet instead of the whole map.... The values can contain things like passwords, credentials for security keysets, etc...   Maybe ""FINEST"" log everything.  Not really sure, but its a thought.
","23/Jul/12 22:32;pellcorp;Hi,

Thanks for your comments. The problem occurs when we abort the outgoing chain and 
Call the onMessage on the Message Observer. What we are not doing is creating a new Response message which. I guess is pretty stupid. I will change our code to do this and see if the issue goes away.","24/Jul/12 08:50;ay;Hi Jason,
that explains the reason. The request message contains the invocation context, whereas the response message does not. So, the current code that copies the response message properties into the response context should not create a recursive reference. However, if the request message is directly used as the response message, there will be a recursive reference.

So, if you are not using the request message directly as the response message, this problem should not occur.

@Dan,
to be on the protected side, we should change the code to not put the invocation context into the response context.
In addition, should we even get rid of this log line or log only the keys? I don't know if it is okay to log the context properties from the security point of view even if the level is set to FINEST. 

regards, aki
","27/Jul/12 09:24;ay;Removed the invocation context from the response context if present to protect against this kind of issue.

Additionally, removed the code for logging the response context to avoid revealing potentially sensitive information.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EncryptionProperties.keyWrapAlgorithm is not used when issuing a Symmetric HOK SAML Assertion,CXF-4436,12599484,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,19/Jul/12 15:51,28/Aug/12 17:44,14/Mar/19 02:30,03/Aug/12 18:51,2.5.4,2.6.1,,,,,,2.5.5,2.6.2,,,Services,,,,0,,,,,,,,"
EncryptionProperties.keyWrapAlgorithm is not used when issuing a Symmetric HOK SAML Assertion. RSA 1.5 is always used as it is the default algorithm.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244764,,,2012-07-19 15:51:01.0,,,,,,0|i05tov:,31907,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CounterRepository bean not registering to the bus in blueprint configuration,CXF-4435,12599471,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,19/Jul/12 14:24,28/Aug/12 17:44,14/Mar/19 02:30,19/Jul/12 16:31,2.5.4,,,,,,,2.4.9,2.5.5,2.6.2,2.7,Management,,,,0,,,,,,,,"CounterRepository does not register to the bus when it is configured in blueprint in the same way it is configured in spring, as 

  <bean id=""cr"" class=""org.apache.cxf.management.counters.CounterRepository"">
    <property name=""bus"" ref=""mybus"" />
  </bean>

The cause of this issue is that spring invokes CounterRepository's PostConst non-public method registerToBus, whereas blueprint can't.

To make both work without any change to the configuration, we should remove the annotation and simply call this register method from the setBus method.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244765,,,2012-07-19 14:24:15.0,,,,,,0|i05tp3:,31908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SecurityConstants.TIMESTAMP_TTL property is not parsed,CXF-4434,12599464,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,19/Jul/12 13:45,28/Aug/12 17:44,14/Mar/19 02:30,19/Jul/12 14:47,2.4.8,2.5.4,2.6.1,,,,,2.4.9,2.5.5,2.6.2,,,,,,0,,,,,,,,"
The SecurityConstants.TIMESTAMP_TTL property (ws-security.timestamp.timeToLive"") is not parsed, and hence a default value of 300 seconds is always used.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244766,,,2012-07-19 13:45:29.0,,,,,,0|i05tpb:,31909,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CrossOriginResourceSharingFilter ignores allowCredentials from annotation,CXF-4433,12599418,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,jonfreedman,jonfreedman,19/Jul/12 07:57,28/Aug/12 17:44,14/Mar/19 02:30,19/Jul/12 17:30,2.6.1,,,,,,,2.6.2,2.7,,,JAX-RS Security,,,,0,,,,,,,,The value of allowCredentials is set on the org.apache.cxf.message.Exchange in #commmonRequestProcessing but then #handleResponse ignores this and sets the value based on the filter itself.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,244767,,,2012-07-19 07:57:11.0,,,,,,0|i05tpj:,31910,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[OAuth1.0] oob callback is not supported,CXF-4432,12599221,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,evgeni_kisel,evgeni_kisel,18/Jul/12 05:39,28/Aug/12 17:44,14/Mar/19 02:30,18/Jul/12 23:17,2.6.1,,,,,,,2.6.2,2.7,,,JAX-RS,JAX-RS Security,,,0,,,,,,,,"OAuth spec says:
oauth_callback: An absolute URI back to which the server will
redirect the resource owner when the Resource Owner
Authorization step (Section 2.2) is completed. If
the client is unable to receive callbacks or a
callback URI has been established via other means,
the parameter value MUST be set to ""oob"" (case
sensitive), to indicate an out-of-band
configuration.


But it's not supported.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-18 23:17:15.646,,,no_permission,,Unknown,,,,,,,,,,,244768,,,Wed Jul 18 23:17:15 UTC 2012,,,,,,0|i05tpr:,31911,,,,,,,,"18/Jul/12 23:17;sergey_beryozkin;Some support for 'oob' was originally available in the code contribued by Lukash, but I do not recall now why I dropped it.

In case of 'oob' AuthorizationRequestService will return JAX-RS Response with the type set to ""text/html"" and the entity to the instance of the newly introduced OOBAuthorizatonResponse:

http://svn.apache.org/repos/asf/cxf/trunk/rt/rs/security/oauth-parent/oauth/src/main/java/org/apache/cxf/rs/security/oauth/services/OOBAuthorizationResponse.java

RequestDispatcherProvider will need to be used to redirect the response to JSP or other view handler for OOBAuthorizatonResponse properties to be converted to the HTML page to be presented to the user.

The restriction: the client needs to preregister a callback URI as 'oob'.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect response check ,CXF-4429,12599113,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jordi,jordi,17/Jul/12 13:03,28/Aug/12 17:44,14/Mar/19 02:30,17/Jul/12 23:03,2.7,,,,,,,2.6.2,2.7,,,JAX-RS Security,,,,0,oauth2,,,,,,,"When an access token response is processed inside OAuthClientUtils class (method getAccessToken), the code checks if the key ""OAuthConstants.ERROR_KEY"" is present in the returned entity map, but the map's method used is ""containsValue()"" instead of ""containsKey()"":

source line:

 } else if (400 == response.getStatus() && map.containsValue(OAuthConstants.ERROR_KEY)) {


should be:


 } else if (400 == response.getStatus() && map.containsKey(OAuthConstants.ERROR_KEY)) {

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-17 23:03:50.113,,,no_permission,,Novice,,,,,,,,,,,244770,,,Tue Jul 17 23:03:50 UTC 2012,,,,,,0|i05tq7:,31913,,,,,,,,17/Jul/12 23:03;sergey_beryozkin;thanks for catching it,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error details are discarded and never sent to the client,CXF-4427,12598989,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jordi,jordi,16/Jul/12 16:21,28/Aug/12 17:44,14/Mar/19 02:30,17/Jul/12 11:30,2.7,,,,,,,2.6.2,2.7,,,JAX-RS Security,,,,0,oauth2,,,,,,,"Current AccessTokenService implementation catches all OAuthServiceExceptions and returns a generic error response discarding all the exception details:

        ServerAccessToken serverToken = null;
        try {
            serverToken = handler.createAccessToken(client, params);
        } catch (OAuthServiceException ex) {
            // the error response is to be returned next
        }
        if (serverToken == null) {
            return createErrorResponse(params, OAuthConstants.INVALID_GRANT);
        }

I think it would be more useful to create the OAuthError object to return using the exception's message, in order to receive the error code/details at the client layer",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-16 16:48:46.597,,,no_permission,,Novice,,,,,,,,,,,244772,,,Tue Jul 17 11:26:24 UTC 2012,,,,,,0|i05tqn:,31915,,,,,,,,"16/Jul/12 16:48;dkulp;This would likely need to be completely optional and turned OFF by default.  Any details about errors surrounding security issue should not be sent back to the client by default to avoid sending information that can help create new attack vectors.
","17/Jul/12 08:56;jordi;Daniel, I agree with you that a lot of details could become a security risk, but on the other hand a ""server_error"" code for all situations is quite useless in order to manage error conditions, isn't it? 

We're trying to implement a set of abstract, ""high-level"" OAuth 2 services, based on CXF, and with the current version we're unable to create more user-centric error messages. I accept this functionality has to be considered completely optional: in some ""special"" cases it could be desirable, while in the majority of cases it will be not wanted :)

 ","17/Jul/12 11:23;sergey_beryozkin;Hi Dan, the spec says about reporting the optional error details, however I'm also adding a 'writeCustomErrors' flag (default is true) which can be used to block the token handlers from reporting the extra info, when the stricter policies are in place","17/Jul/12 11:26;sergey_beryozkin;actually, I see Dan and Jordi agreeing it has to be off by default, fine with me too, will be consistent with the way other security-related exceptions are handled across CXF",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to Render JSON Content using CXF version 2.6.1 - XML content gets rendered properly,CXF-4426,12598975,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,neo,neo,16/Jul/12 14:53,28/Aug/12 17:44,14/Mar/19 02:30,17/Jul/12 10:48,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,2.7,JAX-RS,,,,0,,,,,,,,"I am trying to generate a JAX-RS webservice which takes an Interface as an Input and renders an Interface as an output.These interfaces are handled with the @XmlJavaTypeAdapter annotation

I used CXF version 2.6.1 to generate my service. When I deployed my service to Tomcat6. I was able to access the service. I used SOAPUI/browser to get my application/xml response. I was successful with it.

But when I requested the browser the application/json response (using the _type=json) , it gave me an Illegal Annotation exception. The detailed exception was - JAXB cannot handle interfaces.

I switched the CXF jar version to 2.6.0 , rebuilt the war, redeployed the application. I was able to render the XML as well as the JSON content.

I will provide the two separate WAR files and also the code behind it.
The only difference would be the CXF version property in the POM file.

Can someone please help with this ?

Cheers,
Sree","Windows 7 , 64 Bit,Tomcat 6 Server",,,,,,,,,,,,,,,,,,,16/Jul/12 15:01;neo;CXF26-JSON-RESPONSE.JPG;https://issues.apache.org/jira/secure/attachment/12536642/CXF26-JSON-RESPONSE.JPG,16/Jul/12 15:01;neo;CXF261-JSON-RESPONSE.JPG;https://issues.apache.org/jira/secure/attachment/12536643/CXF261-JSON-RESPONSE.JPG,16/Jul/12 14:56;neo;InterfaceWS.zip;https://issues.apache.org/jira/secure/attachment/12536641/InterfaceWS.zip,,,,,3.0,,,,,,,,,,,,,,,,,,,,2012-07-17 10:48:30.02,,,no_permission,,Unknown,,,,,,,,,,,244773,,,Tue Jul 17 14:53:57 UTC 2012,,,,,,0|i05tqv:,31916,,,,,,,,"16/Jul/12 14:56;neo;This is the source of the Project I have created to test this bug.

Please change the cxf.version property to 2.6.1 to test and see that JSON content doesnt get rendered.","16/Jul/12 15:01;neo;These are the screen shots for CXF2.6 and CXF 2.6.1.

The same service fails when using 2.6.1","16/Jul/12 15:06;neo;I built the project using the maven clean package command with the profile of dev.
Once the project is built it generates an InterfaceWS.war file in the target folder.

I copied it to the webapp folder of tomcat and started tomcat server.
The log file location would be under tomcat-logs folder.

The end point to test is  http://localhost:<TOMCAT_PORT>/InterfaceWS/HI/sayHi
Please post the following content - Use SOAPUI ot any mechanism that can send a post request to the above URL.

<In>
<inputName>
	<nameValue>sa</nameValue>
</inputName>
</In>

The source provided can be rebuilt with CXF version 2.6.1 and then the above steps are to be redone.
The screen shots are attached which testify the output that I received.

Let me know in case additional clarification is required.

Cheers,
Sree","17/Jul/12 10:48;sergey_beryozkin;There was a dormant bug in JSONProvider which got exposed after the transition to CXF 2.6.2, with the providers now given the class types exactly as they are typed in the signature, as a result the actual class type obtained from the object (returned from the adapter) was lost which is now fixed.
As a side note, few of the adapter classes in the test web app have no public qualifiers, so that was causing the issues too","17/Jul/12 14:08;neo;Sergey,
            So do I have to wait for the 2.6.2 version to get a fix for this issue ?
Please let me know if I have to wait for it - in such a  case I will push my code to QA with the 2.6.0 version ( since that version doesn't break the jSON).

Thanks for that public qualifiers hint , I will fix that and see if it works with 2.6.1.

Thank you very much for taking a look at this on a short notice - I really appreciate your help !!

Let me know !!

Cheers,
Sathish","17/Jul/12 14:53;sergey_beryozkin;> So do I have to wait for the 2.6.2 version to get a fix for this issue ?
Yes. Alternatively, register a custom JSONProvider which overrides writeTo method and delegates to the super class except that it uses 'object.getClass()' as a second parameter, where 'object' is the name of the first parameter",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuth 1.0 timestamp and nonces are not validated and the validation can not be customized,CXF-4425,12598963,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,evgeni_kisel,evgeni_kisel,16/Jul/12 13:27,28/Aug/12 17:44,14/Mar/19 02:30,25/Jul/12 12:22,2.6.1,,,,,,,2.5.5,2.6.2,2.7,,JAX-RS,JAX-RS Security,,,0,,,,,,,,"It's possible to send multiple request with the same header. Actually it's a security violation.

Specifically, the default OAuthValidator is created per-request - this is OK for validating that a given OAuth message contains the expected parameters and that the signature is correct, but the default nonces cache is lost after the validation is done. Additionally, it is not possible to customize the validation process",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-16 13:39:46.617,,,no_permission,,Unknown,,,,,,,,,,,244774,,,Wed Jul 25 12:22:10 UTC 2012,,,,,,0|i05tr3:,31917,,,,,,,,"16/Jul/12 13:39;sergey_beryozkin;Can you clarify please ? Also, is it to do with OAuth 1.0 or 2.0 support ?","16/Jul/12 13:43;evgeni_kisel;OAuth 1.0


1. I send the request to Service Provider and also sniffer it (get all authorization data from header element)
2. Send another request with the same data (nonce, timestamp and so on).



Best Regards,
Evgeni","16/Jul/12 13:58;sergey_beryozkin;> 1. I send the request to Service Provider and also sniffer it (get all authorization data from header element)

You mean you can sniffer it over HTTP ? This in not something CXF can prevent, so please use HTTPS for example.
The only thing that OAuth 1.0 can do is to provide the signature which is indeed provided and validated on the server.
Or do you mean something else ?
 
> 2. Send another request with the same data (nonce, timestamp and so on).

AFAIK, the client code will create a new nonce and timestamp per every request. I guess the timestamp might be the same across 
a couple of requests going immediately one after another, but the nonce should be per-request specific



","16/Jul/12 14:02;evgeni_kisel;1. It's a service provider security violation. 
2. OAuth specification (http://oauth.net/core/1.0/#nonce) : The nonce allows the Service Provider to verify that a request has never been made before and helps prevent replay attacks when requests are made over a non-secure channel (such as HTTP). 

But there are no such verification.","16/Jul/12 14:26;sergey_beryozkin;Right, so the issue is about nonces being not validated. This is not something CXF will do by default but I'll check if the default validator can be configured to validate them, and possibly reintroduce OAuth validator interface for users to customize the validation process which was originally available in the oauth 10 contribution","16/Jul/12 16:34;sergey_beryozkin;Evgeni, indeed, there was a bug to do with the per-request instantiation of the default validators, thanks for catching it.

I believe that it has been fixed now, see 
http://svn.apache.org/viewvc?rev=1362114&view=rev (trunk)
http://svn.apache.org/viewvc?rev=1362118&view=rev (2.6.x)

Note that the way nonces are kept/managed can be customized by extending CXF DefaultOAuthValidator (or net.oauth.SimpleOAuthValidator) and overriding its ""validateNonce(OAuthMessage message, long timestamp, long currentTimeMsec)"" method. RequestTokenService, AccessTokenService and OAuthRequestFilter all have a 'setValidator' method now that can be used to inject a custom validator

Can you experiment with the updated source (snapshots should be ready shortly - check the timestamps just in case, or building from the source) ?






","17/Jul/12 05:07;evgeni_kisel;I'm apologize for my impudence but could you send me a built jar for experiments, please? 

Also could you clarify which release the fix will be included in, please?","17/Jul/12 09:27;sergey_beryozkin;Fix will be available in CXF 2.6.2 and 2.7.0
Keep an eye on the following build, the last one hanged:
https://builds.apache.org/job/CXF-2.6-deploy/

You can also build by checking out the source, and doing 'mvn -Pfastinstall' in the trunk and then building the trunk/distribution, there's a profile for building it all in one go too. It will take 15 mins for the whole process to complete.
","23/Jul/12 14:03;evgeni_kisel;I've made a quick look, seem it's fixed. Waiting for new release. ","25/Jul/12 12:22;sergey_beryozkin;OK, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,
Async calls may be silently discarded,CXF-4417,12598375,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,dkulp,dkulp,11/Jul/12 13:52,28/Aug/12 17:44,14/Mar/19 02:30,11/Jul/12 14:33,2.4.8,2.5.4,2.6.1,,,,,2.4.9,2.5.5,2.6.2,,Core,,,,0,,,,,,,,"
When performing a significant number of async calls from the client, if the workqueue completely fills up, additional requests are silently discarded.  It should warn and then execute on the current thread.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244779,,,2012-07-11 13:52:52.0,,,,,,0|i05ts7:,31922,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SecurityPolicy validation fails when a KeyValue is used as an EndorsingSupportingToken,CXF-4414,12598153,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,10/Jul/12 09:55,28/Aug/12 17:44,14/Mar/19 02:30,10/Jul/12 10:54,2.4.8,2.5.4,2.6.1,,,,,2.4.9,2.5.5,2.6.2,,,,,,0,,,,,,,,"
WS-SecuirtyPolicy validation fails on the receiving side when a token uses a KeyValue to represent the PublicKey used to endorse a message part.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244781,,,2012-07-10 09:55:38.0,,,,,,0|i05tsn:,31924,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven plugin fails wsdl2java execution with concurrent modification exception,CXF-4411,12598014,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jeroen.benckhuijsen,jeroen.benckhuijsen,09/Jul/12 11:09,31/Mar/17 19:38,14/Mar/19 02:30,22/Mar/17 18:05,2.6.1,,,,,,,2.7.3,,,,,,,,0,,,,,,,,"We're getting a concurrent modification exception while running a parallel build (-T C5) using Maven 3. Reproducability is low, so it seems to be some race condition. Stack trace:

build	06-Jul-2012 16:42:33	org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.6.1:wsdl2java (generate-sources-task-callback) on project gps-wps-process-client-takp: java.util.ConcurrentModificationException
build	06-Jul-2012 16:42:33		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:217)
build	06-Jul-2012 16:42:33		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
build	06-Jul-2012 16:42:33		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
build	06-Jul-2012 16:42:33		at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
build	06-Jul-2012 16:42:33		at org.apache.maven.lifecycle.internal.LifecycleThreadedBuilder$1.call(LifecycleThreadedBuilder.java:167)
build	06-Jul-2012 16:42:33		at org.apache.maven.lifecycle.internal.LifecycleThreadedBuilder$1.call(LifecycleThreadedBuilder.java:163)
build	06-Jul-2012 16:42:33		at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:315)
build	06-Jul-2012 16:42:33		at java.util.concurrent.FutureTask.run(FutureTask.java:150)
build	06-Jul-2012 16:42:33		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:453)
build	06-Jul-2012 16:42:33		at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:315)
build	06-Jul-2012 16:42:33		at java.util.concurrent.FutureTask.run(FutureTask.java:150)
build	06-Jul-2012 16:42:33		at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:898)
build	06-Jul-2012 16:42:33		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:920)
build	06-Jul-2012 16:42:33		at java.lang.Thread.run(Thread.java:736)
build	06-Jul-2012 16:42:33	Caused by: org.apache.maven.plugin.MojoExecutionException: java.util.ConcurrentModificationException
build	06-Jul-2012 16:42:33		at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.generate(WSDL2JavaMojo.java:234)
build	06-Jul-2012 16:42:33		at org.apache.cxf.maven_plugin.AbstractCodegenMoho.execute(AbstractCodegenMoho.java:250)
build	06-Jul-2012 16:42:33		at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.execute(WSDL2JavaMojo.java:308)
build	06-Jul-2012 16:42:33		at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
build	06-Jul-2012 16:42:33		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
build	06-Jul-2012 16:42:33		... 13 more
build	06-Jul-2012 16:42:33	Caused by: org.apache.cxf.tools.common.ToolException: java.util.ConcurrentModificationException
build	06-Jul-2012 16:42:33		at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:294)
build	06-Jul-2012 16:42:33		at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
build	06-Jul-2012 16:42:33		at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:113)
build	06-Jul-2012 16:42:33		at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:86)
build	06-Jul-2012 16:42:33		at org.apache.cxf.maven_plugin.wsdl2java.WSDL2JavaMojo.generate(WSDL2JavaMojo.java:231)
build	06-Jul-2012 16:42:33		... 17 more
build	06-Jul-2012 16:42:33	Caused by: java.util.ConcurrentModificationException
build	06-Jul-2012 16:42:33		at java.util.LinkedHashMap$AbstractMapIterator.checkConcurrentMod(LinkedHashMap.java:136)
build	06-Jul-2012 16:42:33		at java.util.LinkedHashMap$AbstractMapIterator.makeNext(LinkedHashMap.java:141)
build	06-Jul-2012 16:42:33		at java.util.LinkedHashMap$ValueIterator.next(LinkedHashMap.java:214)
build	06-Jul-2012 16:42:33		at org.apache.cxf.bus.extension.ExtensionManagerImpl.getBeansOfType(ExtensionManagerImpl.java:299)
build	06-Jul-2012 16:42:33		at org.apache.cxf.bus.CXFBusImpl.getExtension(CXFBusImpl.java:99)
build	06-Jul-2012 16:42:33		at org.apache.cxf.tools.common.toolspec.AbstractToolContainer.getBus(AbstractToolContainer.java:191)
build	06-Jul-2012 16:42:33		at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.processWsdl(WSDLToJavaContainer.java:167)
build	06-Jul-2012 16:42:33		at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:139)
build	06-Jul-2012 16:42:33		at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:286)
build	06-Jul-2012 16:42:33		... 21 more","Linux, IBM JVM 1.6, Builder is Atlassian Bamboo 2.7.6, Maven 3.0.4",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-09 12:19:48.237,,,no_permission,,Unknown,,,,,,,,,,,251235,,,Wed Mar 22 18:05:37 UTC 2017,,,,,,0|i0b65r:,63110,,,,,,,,"09/Jul/12 12:19;gmazza;I'm not sure if wsdl2java is expected to be thread-safe, or even if it can be, especially in cases where the same output files are being generated from the same WSDL in multiple places.  Are you (A) generating from the same WSDL into the same output folders from multiple POMs, or are you (B) calling wsdl2java in multiple places with different WSDLs & different output folders, or are you (C) simply just calling wsdl2java once but the splitting up of it into multiple threads is what's causing the concurrent modification exception?","09/Jul/12 14:23;jeroen.benckhuijsen;Hi Glen, the right answer seems to be (B), wsdl2java is called from multiple poms (and thus different WSDLs/output folders). 

I' ve been checking the code of ExtensionManagerImpl (https://fisheye6.atlassian.com/browse/cxf/trunk/rt/core/src/main/java/org/apache/cxf/bus/extension/ExtensionManagerImpl.java?r=1230569). The cause seems to be a modification on the all field. There are a number of methods which are synchronized, but a number (load, destroy) which are not...","11/Jul/12 04:10;ffang;Hi,

Yeah, we need 

option1.  add synchronized for these methods(add, load, destory) to avoid the ConcurrentModificationException.
Or 
option2. we can change variable ""all"" as ConcurrentHashMap and remove most the synchronized from methods to get a better performance, but we way lose some concurrent map update in this case. 

I'm going to change using option1

Freeman","11/Jul/12 06:33;ffang;commit fix
http://svn.apache.org/viewvc?rev=1360007&view=rev for trunk
http://svn.apache.org/viewvc?rev=1360015&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1360022&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1360032&view=rev for 2.4.x branch","12/Jul/12 11:42;jeroen.benckhuijsen;Thanks for the quick response, just wondering: is this gonna fix it: I.e. if there are two concurrent threads accessing this map, and one does a destroy(), some beans will probably not be found. Won't this cause another issue? (I.e. is the multi threaded design correct)","12/Jul/12 13:06;dkulp;
Jeroen,

Yes, this is a bigger issue.   Each time the tool runs, it SHOULD create a new Bus and set the Thread default bus to that bus.   Then tear it down at the end.   Right now, it's just calling getDefaultBus which is then allowing a shared bus across all the threads.   When one calls shutdown, that can affect everything.
","12/Jul/12 13:12;ffang;Hi,

The ExtensionManagerImpl is per bus,  when ExtensionManagerImpl.destroyBeans() get invoked it means the bus is shutdown, so everything associated with the bus would have gone anyway.

Freeman ","17/Dec/12 13:17;jeroen.benckhuijsen;Any progress on this issue? Or any pointers where to start. I can spent some time from my employer on this issue, though not indefinitely, so any hints would be welcome to get up and running ","24/Apr/13 08:05;jeroen.benckhuijsen;Running in fork mode seems to fix this issue, however, there are occasionally concurrentmodificationexceptions in CommandLineUtils",22/Mar/17 18:05;dkulp;This should have been fixed in nov 2013 when the extensions were stored into concurrent maps/types.,,,,,,,,,,,,,,,,,,,,,,,,,,
sp:EncryptSignature policy validation should only check to see if the primary signature is encrypted,CXF-4410,12598009,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,09/Jul/12 10:24,28/Aug/12 17:44,14/Mar/19 02:30,09/Jul/12 11:20,2.4.8,2.5.4,2.6.1,,,,,2.4.9,2.5.5,2.6.2,,,,,,0,,,,,,,,"
sp:EncryptSignature policy validation should only check to see if the primary signature is encrypted. Currently it checks to see if all signatures were encrypted. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244783,,,2012-07-09 10:24:11.0,,,,,,0|i05tt3:,31926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proxy-based Client use Multipart getting NullPointerException,CXF-4409,12597741,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,xcooper,xcooper,06/Jul/12 10:48,28/Aug/12 17:44,14/Mar/19 02:30,09/Jul/12 17:50,2.6,,,,,,,2.4.9,2.5.5,2.6.2,2.7,JAX-RS,,,,0,,,,,,,,"It's all about the client, when use Proxy-based client API

Failed method signature of client restful interface as below:
	@POST
	@Path(""/findEmployeePagingResults"")
	@Consumes(MediaType.MULTIPART_FORM_DATA)
	@Produces(MediaType.APPLICATION_JSON)
	List<Employee> findEmployeePagingResults(
			@Multipart(value=""condition"", type=MediaType.APPLICATION_JSON) EmployeeCondition condition,
			@Multipart(value=""firstResult"") int firstResult,
			@Multipart(value=""maxResults"") int maxResults);
-------------------------------------------------------------------------
After try...
Success method signature is
	@POST
	@Path(""/findEmployeePagingResults"")
	@Consumes(MediaType.MULTIPART_FORM_DATA)
	@Produces(MediaType.APPLICATION_JSON)
	List<Employee> findEmployeePagingResults(
			@Multipart(value=""condition"", type=MediaType.APPLICATION_JSON) EmployeeCondition condition,
			@Multipart(value=""firstResult"", type=MediaType.TEXT_PLAIN) int firstResult,
			@Multipart(value=""maxResults"", type=MediaType.TEXT_PLAIN) int maxResults);
---------------------------------------------------------------------------

This problem occur cuz:
MultipartProvider.java: line 369
MessageBodyWriter<T> r = mc.getProviders().getMessageBodyWriter(cls, genericType, anns, mt);

""mc.getProviders()"" returns NULL when CXF try to get MessageBodyWriter for maxResults(that's the 3rd time this method called)

",win32;x86_64;java 1.7.0_05-b05,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,244784,,,2012-07-06 10:48:06.0,,,,,,0|i05ttb:,31927,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in DOMUtils when soap header contains null namespace element,CXF-4408,12597694,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,06/Jul/12 05:22,28/Aug/12 17:44,14/Mar/19 02:30,06/Jul/12 05:24,,,,,,,,2.4.9,2.5.5,2.6.2,2.7,,,,,0,,,,,,,,"When ReadHeaderInterceptor process the follow inbound soap message , DOMUtils throws NPE for the null namespace ""Header"" element:
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:foo=""http://cxf.apache.org/foo""
xmlns:bar=""http://cxf.apache.org/bar"">
   <soapenv:Header>
      <foo:myheader>
         <Header>
            <bar:type>mytype</head:type>
         </Header>
      </foo:myheader>
   </soapenv:Header>

A NPE guard is needed. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-06 08:06:50.024,,,no_permission,,Unknown,,,,,,,,,,,244785,,,Fri Jul 06 08:06:50 UTC 2012,,,,,,0|i05ttj:,31928,,,,,,,,06/Jul/12 08:06;asoldano;http://svn.apache.org/viewvc?view=revision&revision=1358045,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Server.start() doesn't work after the Server.stop() is called when using Servlet transport,CXF-4407,12597518,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,05/Jul/12 03:19,16/Jul/13 19:28,14/Mar/19 02:30,13/Jul/12 09:01,2.3.11,2.4.8,2.5.4,2.6.1,,,,2.4.9,2.5.5,2.6.2,,Core,,,,0,,,,,,,,"As the getDestination().shutdown() is called when the server.stop() is called, the ServletDestination will remove the itself from the destination registry. It makes the server.start() will not work as we expected.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-08-13 12:55:15.768,,,no_permission,,Unknown,,,,,,,,,,,244786,,,Mon Aug 13 12:55:15 UTC 2012,,,,,,0|i05ttr:,31929,,,,,,,,"13/Aug/12 12:55;coheigea;
This appears to have caused a problem on the 2.4.x-fixes branch in systests/transports:

java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372)
	at java.util.AbstractList$Itr.next(AbstractList.java:343)
	at org.apache.cxf.systest.servlet.NoSpringServletClientTest.startServer(NoSpringServletClientTest.java:121)
	at org.apache.cxf.systest.servlet.NoSpringServletClientTest.testStartAndStopServer(NoSpringServletClientTest.java:106)

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OneWay faultTo request is not correctly transmitted to the specified address ,CXF-4405,12597402,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,04/Jul/12 05:53,28/Aug/12 17:44,14/Mar/19 02:30,04/Jul/12 06:04,,,,,,,,2.6.2,2.7,,,,,,,0,,,,,,,,"The faultTo request path is appended with the To address path, for example:
Client To          :      http://localhost:8080/jaxws/add
Client set FaultTo :      http://localhost:9999/faultTo
The actual request path sent to Faulto endpoint is : http://localhost:9999/faultTo/jaxws/add",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244787,,,2012-07-04 05:53:41.0,,,,,,0|i05ttz:,31930,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
atomicity violation bugs because of misusing concurrent collections,CXF-4404,12596841,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,jacklondongood,jacklondongood,02/Jul/12 22:54,28/Aug/12 17:44,14/Mar/19 02:30,06/Jul/12 06:22,2.6.1,,,,,,,2.6.2,2.7,,,,,,,0,patch,,,,,,,"My name is Yu Lin. I'm a Ph.D. student in the CS department at
UIUC. I'm currently doing research on mining Java concurrent library
misusages. I found some misusages of ConcurrentHashMap in CXF 2.6.1,
which may result in potential atomicity violation bugs or harm the
performance.

The code below is a snapshot of the code in file
api/src/main/java/org/apache/cxf/common/util/ASMHelper.java from line
306 to 327.

L306        public synchronized Class<?> defineClass(String name, byte bytes[]) {
L307            Class<?> ret = defined.get(name.replace('/', '.'));
L308            if (ret != null) {
L309                return ret;
L310            }
L311            if (name.endsWith(""package-info"")) {
                    ...
L323            }
L324            
L325            ret = super.defineClass(name.replace('/', '.'), bytes, 0, bytes.length);
L326            defined.put(name.replace('/', '.'), ret);
L327            return ret;

In the code above, the synchronized key word at line 306 can be
removed if we use putIfAbsent at line 326. If we remove the
synchronized without using putIfAbsent, an atomicity violation may
occur between lines <310 and 326>: Suppose a thread T1 executes line
307 and finds out the concurrent hashmap dose not contain the key
""name.replace('/','.')"". Before it gets to execute line 326, another
thread T2 puts a pair <name.replace('/','.'), v> in the concurrent
hashmap ""defined"". Now thread T1 resumes execution and it will
overwrite the value written by thread T2. Thus, the code no longer
preserves the ""put-if-absent"" semantics. However, such atomicity
violation bug can be eliminated by using putIfAbsent at line 326 (see
the patch).

I found some similar misusages in other files:

In
api/src/main/java/org/apache/cxf/configuration/spring/AbstractSpringBeanMap.java,
synchronized key word at line 67 can be removed by using putIfAbsent
at line 71. Also, atomicity violations may occur when T2 removes key
""key"" from the concurrent hashmap ""putStore"" before T1 executes line
155; or T2 puts a pair <(X)key, v> to ""putStore"" before T1 executes
line 158.

In api/src/main/java/org/apache/cxf/endpoint/ClientImpl.java, an
atomicity violation may occur when thread T2 removes key
""THREAD_LOCAL_REQUEST_CONTEXT"" from the concurrent hashmap
""currentRequestContext"" before thread T1 executes line 303.

In api/src/main/java/org/apache/cxf/helpers/HttpHeaderHelper.java, an
atomicity violation may occur when thread T2 puts a pair <enc, v> to
concurrent hashmap ""encodings"" before T1 executes line 127.

In
rt/core/src/main/java/org/apache/cxf/bus/osgi/CXFExtensionBundleListener.java,
an atomicity violation may occur when thread T2 puts a pair
<bundle.getBundleId(), v> to concurrent hashmap ""extensions"" before T1
executes line 93.

In
rt/features/clustering/src/main/java/org/apache/cxf/clustering/FailoverTargetSelector.java,
synchronized key word at line 76 can be removed by using putIfAbsent
at line 91.

In
rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/model/ClassResourceInfo.java,
if another thread T2 puts a pair <key, v> into concurrent hashmap
""subResources"" before thread T1 executes line 136, the ""cri"" in T1
won't be put into ""subResources"" at line 136. In this case, the
""getSubResource"" method returns the wrong ""cri"".

In
rt/rs/extensions/providers/src/main/java/org/apache/cxf/jaxrs/provider/json/JSONProvider.java,
an atomicity violation may occur when thread T2 removes key
""qname.getNamespaceURI()"" from the concurrent hashmap ""namespaceMap""
before thread T1 executes line 405. Another atomicity violation is
when thread T2 puts a pair <namespace, v> to concurrent hashmap
""namespaceMap"" before T1 executes line 530.

In
rt/transports/http-jetty/src/main/java/org/apache/cxf/transport/http_jetty/JettyHTTPServerEngineFactory.java,
synchronized key word at line 107 can be removed by using putIfAbsent
at line 118.

In
rt/transports/local/src/main/java/org/apache/cxf/transport/local/LocalTransportFactory.java,
an atomicity violation may occur when thread T2 puts a pair <addr, v>
to concurrent hashmap ""destinations"" before T1 executes line 128.
",,1814400,1814400,,0%,1814400,1814400,,,,,,,,,,,,,02/Jul/12 22:58;jacklondongood;cxf-2.6.1.patch;https://issues.apache.org/jira/secure/attachment/12534473/cxf-2.6.1.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-07-03 04:11:35.513,,,no_permission,,Moderate,,,,,,,,,,,244788,,,Fri Jul 06 06:22:36 UTC 2012,,,,,,0|i05tu7:,31931,,,,,,,,02/Jul/12 22:58;jacklondongood;This is a patch that fixes the atomicity violation problem.,"03/Jul/12 04:11;ffang;Hi,

Just one issue, the rt/core/src/main/java/org/apache/cxf/bus/osgi/CXFExtensionBundleListener.java change should be
{code}
@@ -90,7 +90,10 @@
         List<Extension> list = extensions.get(bundle.getBundleId());
         if (list == null) {
             list = new CopyOnWriteArrayList<Extension>();
-            extensions.put(bundle.getBundleId(), list);
+            List<Extension> preList = extensions.putIfAbsent(bundle.getBundleId(), list);
+            if (preList != null) {
+                list = preList;
+            }
         }

{code}
to ensure we won't lost extensions in a pre-saved list

Also correct checkstyle.
Thanks for the patch
Freeman",06/Jul/12 06:22;ffang;Apply patch on behalf of Yu Lin with thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When using a binding file, location information for errors is lost",CXF-4403,12596691,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,02/Jul/12 18:20,28/Aug/12 17:44,14/Mar/19 02:30,02/Jul/12 18:25,2.6.1,,,,,,,2.6.2,,,,Tooling,,,,0,,,,,,,,"When using a binding file, all location information is discarded so errors all are reported at line,col 0,0. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244789,,,2012-07-02 18:20:08.0,,,,,,0|i05tuf:,31932,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove http-whiteboard feature from cxf features.xml,CXF-4402,12596553,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,01/Jul/12 22:54,28/Aug/12 17:44,14/Mar/19 02:30,02/Jul/12 00:07,,,,,,,,2.4.9,2.5.5,2.6.2,2.7,,,,,0,,,,,,,,"as discussedd here[1]

[1]http://cxf.547215.n5.nabble.com/DISCUSSION-remove-http-whiteboard-feature-from-cxf-features-xml-td5710452.html",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244790,,,Mon Jul 02 00:07:09 UTC 2012,,,,,,0|i05tun:,31933,,,,,,,,"02/Jul/12 00:07;ffang;commit fix
http://svn.apache.org/viewvc?rev=1356043&view=rev for trunk
http://svn.apache.org/viewvc?rev=1356046&view=rev for 2.6.x branch
http://svn.apache.org/viewvc?rev=1356049&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1356051&view=rev for 2.4.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XMLStreamDataReader does not close the original input stream when it is to be closed,CXF-4401,12596404,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,29/Jun/12 13:50,28/Aug/12 17:44,14/Mar/19 02:30,02/Jul/12 08:54,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,2.7,Core,,,,0,,,,,,,,"When XMLStreamDataReader is used to instantiate a stream reader from the original input stream held in the message, closing the reader does not close the original input stream. 

As the input stream object is removed from the message during this process, the input stream object cannot be closed by another component (e.g., AbstractHTTPDestination).

The symptom of this problem will appear when large messages are processed, as temp files generated by CachedOutputStream are not deleted because of the missing close() call.


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244791,,,2012-06-29 13:50:47.0,,,,,,0|i05tuv:,31934,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UriInfo does not report correct base address for URI with port,CXF-4396,12596038,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,hlang,hlang,27/Jun/12 07:08,28/Aug/12 17:44,14/Mar/19 02:30,27/Jun/12 11:54,2.6.1,,,,,,,2.4.9,2.5,2.6.2,2.7,,,,,0,,,,,,,,"When an address like ""http://0.0.0.0:9000/path"" is used, UriInfo returns ""http://0.0.0.0:9000:9000"" as base-address.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244795,,,2012-06-27 07:08:23.0,,,,,,0|i05tvr:,31938,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB providers do not recognize custom catalogs when creating Schemas,CXF-4393,12595606,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,22/Jun/12 16:45,26/Nov/13 17:40,14/Mar/19 02:30,22/Nov/13 17:17,,,,,,,,2.7,,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,245928,,,2012-06-22 16:45:10.0,,,,,,0|i07e8v:,41074,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.configuration.spring.ConfigurerImpl.initWildcardDefinitionMap does not fail silently when bean names containing certain characters do not parse as a regex,CXF-4391,12595435,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,zootalures,zootalures,21/Jun/12 14:37,19/Dec/12 14:41,14/Mar/19 02:30,12/Oct/12 20:02,2.6.1,,,,,,,2.5.7,2.6.4,2.7.1,,Core,,,,1,,,,,,,,"When ConfigurerImpl.initWildcardDefinitionMap scans bean names for wildcard matches it  assumes that all bean definition names  containing ""*,?,(.+)"" are wildcard beans. 


When using Spring integration it is possible in certain places to refer to bean names via a SPeL expression (e.g referencing channels defined as constants),: 

i.e.
{code} 
<int:transformer input-channel=""#{T(foo.bar.Channels).DEFINED_CHANEL}"">
...
{code} 

When CXF initialises it tries to parse the uninterpolated value as a regex: 

{code}
Caused by: java.util.regex.PatternSyntaxException: Illegal repetition near index 0
#{T(foo.bar.Channels).DEFINED_CHANEL}
^
        at java.util.regex.Pattern.error(Pattern.java:1713)
        at java.util.regex.Pattern.closure(Pattern.java:2775)
        at java.util.regex.Pattern.sequence(Pattern.java:1889)
        at java.util.regex.Pattern.expr(Pattern.java:1752)
        at java.util.regex.Pattern.compile(Pattern.java:1460)
        at java.util.regex.Pattern.<init>(Pattern.java:1133)
        at java.util.regex.Pattern.compile(Pattern.java:823)
        at org.apache.cxf.configuration.spring.ConfigurerImpl.initWildcardDefinitionMap(ConfigurerImpl.java:93)
        at org.apache.cxf.configuration.spring.ConfigurerImpl.addApplicationContext(ConfigurerImpl.java:245)
        at org.apache.cxf.configuration.spring.ConfigurerImpl.setApplicationContext(ConfigurerImpl.java:225)
        at org.apache.cxf.configuration.spring.ConfigurerImpl.<init>(ConfigurerImpl.java:75)
        at org.apache.cxf.bus.spring.SpringBus.setApplicationContext(SpringBus.java:90)
        at org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor.getBusForName(BusWiringBeanFactoryPostProcessor.java:73)
        at org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor.addDefaultBus(BusWiringBeanFactoryPostProcessor.java:189)
        at org.apache.cxf.jaxws22.spring.JAXWS22SpringEndpointImpl.setApplicationContext(JAXWS22SpringEndpointImpl.java:53)
        at org.springframework.context.support.ApplicationContextAwareProcessor.invokeAwareInterfaces(ApplicationContextAwareProcessor.java:106)
        at org.springframework.context.support.ApplicationContextAwareProcessor.postProcessBeforeInitialization(ApplicationContextAwareProcessor.java:85)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:394)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1413)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
{code}

While this is slightly unusual it may also occur elsewhere that SPeL is used - the context will fail to load whenver CXF does not like the bean name.  

I think the default behaviour here should be to catch the Regex Exception and silently (or log) proceed to the next bean.  


",Spring 3.0.5 App using Spring integration and SpEL expressions,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-09 15:24:48.088,,,no_permission,,Unknown,,,,,,,,,,,246171,,,Fri Oct 12 20:13:20 UTC 2012,,,,,,0|i07hwn:,41668,,,,,,,,"09/Oct/12 15:24;eugene.scripnik;I've recently got into the same issue. If you try to configure HTTP Conduit using property file you will get an exception. I think CXF should support SpEl for these fields.

Sample configuration:
{code}
<http-conf:conduit name=""${soap.address.prefix}.*"" />
{code}

And the exception:
{code}
Caused by: java.util.regex.PatternSyntaxException: Illegal repetition near index
 0
${soap.address.prefix}.*
^
        at java.util.regex.Pattern.error(Pattern.java:1713)
        at java.util.regex.Pattern.closure(Pattern.java:2775)
        at java.util.regex.Pattern.sequence(Pattern.java:1889)
        at java.util.regex.Pattern.expr(Pattern.java:1752)
        at java.util.regex.Pattern.compile(Pattern.java:1460)
        at java.util.regex.Pattern.<init>(Pattern.java:1133)
        at java.util.regex.Pattern.compile(Pattern.java:823)
        at org.apache.cxf.configuration.spring.ConfigurerImpl.initWildcardDefinitionMap(ConfigurerImpl.java:93)
        at org.apache.cxf.configuration.spring.ConfigurerImpl.addApplicationContext(ConfigurerImpl.java:245)
        at org.apache.cxf.configuration.spring.ConfigurerImpl.setApplicationContext(ConfigurerImpl.java:225)
        at org.apache.cxf.configuration.spring.ConfigurerImpl.<init>(ConfigurerImpl.java:75)
        at org.apache.cxf.bus.spring.SpringBus.setApplicationContext(SpringBus.java:90)
        at org.springframework.context.support.ApplicationContextAwareProcessor.invokeAwareInterfaces(ApplicationContextAwareProcessor.java:117)
{code}",12/Oct/12 20:13;eugene.scripnik;Do I understand correctly that this fix will not work for my problem?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using wsdl2java maven goal with <wsdl> and <wsdlArtifact> in the same pom fails,CXF-4388,12595071,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,andersolsson,andersolsson,19/Jun/12 09:09,08/Nov/12 17:14,14/Mar/19 02:30,28/Aug/12 17:56,2.4.8,,,,,,,2.4.9,2.5.5,2.6.2,,Tooling,,,,1,,,,,,,,"I have configured the wsdl2java goal to use wsdl-files from both local sources, using the <wsdl> element, and from maven artifacts, using the <wsdlArtifact> element. This fails unless I put the <wsdl> as the last <wsldOption>.

I have created a minimal testcase for this, unzip it and execute

{noformat}
$ mvn install:install-file -Dfile=greeter.wsdl -DgroupId=greeter -DartifactId=wsdl -Dversion=1.0 -Dpackaging=wsdl -DgeneratePom=true
{noformat}
 
to install the wsdl, then execute

{noformat}
$ mvn -e generate-sources
{noformat}

and it should fail. Then try reordering the wsdlOptions in the pom and it will not fail.",,,,,,,,,,,,,,,,,,,,19/Jun/12 09:12;andersolsson;greeter.log;https://issues.apache.org/jira/secure/attachment/12532519/greeter.log,19/Jun/12 09:11;andersolsson;greeter.zip;https://issues.apache.org/jira/secure/attachment/12532518/greeter.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-08-20 14:36:08.842,,,no_permission,,Unknown,,,,,,,,,,,244801,,,Mon Aug 20 14:36:08 UTC 2012,,,,,,0|i05tx3:,31944,,,,,,,,19/Jun/12 09:11;andersolsson;Minimal test case.,19/Jun/12 09:12;andersolsson;Maven output with stacktrace.,20/Aug/12 14:36;pdecat;Confirmed with {{org.apache.cxf:cxf-codegen-plugin:2.5.0}}.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"when I run a ""webapp"" of CXF in weblogic9.2, it has some errors.",CXF-4387,12595061,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,wanghuanqiu@neusoft.com,wanghuanqiu@neusoft.com,19/Jun/12 07:12,28/Aug/12 17:44,14/Mar/19 02:30,21/Jun/12 01:16,2.2.12,,,,,,,2.4.9,2.5.5,2.6.2,2.7,JAX-WS Runtime,,,,0,api-change,,,,,,,"I have found the reason of the problem and I hope you can correct it.
It's my Code;

        JaxWsDynamicClientFactory dcf = JaxWsDynamicClientFactory.newInstance();
        Client client = factory.createClient(""wsdl"");

[error]:IOException during exec() of compiler ""javac"". Check your path environment       variable
javax.xml.bind.JAXBException: """" doesnt contain ObjectFactory.class or index 

The errors are result from code that is "" p = Runtime.getRuntime().exec(cmdArray)"" in the class of ""compiler.class"" whose method is ""internalCompile "";
 
The real reason is the commond ---""cmdArray"" is so long.

when the commond is in Windows xp ,the length of bat commond is limited.
so when it executes the commond ,the commond is not integrated.

I hope you can issue the ""-classpath"" in ""cmdArray"" ,it's too long.

Other Environment work well.

In weblogic the classpath of weblogic is big ,it results in ""cmdArray"" that is long.

I am sorry that my English is not well.

Thank you 

","windows xp , weblogic9.2",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-06-20 07:52:23.475,,,no_permission,,Advanced,,,,,,,,,,,244802,,,Thu Jun 21 02:10:24 UTC 2012,,,,,,0|i05txb:,31945,,,,,,,,"20/Jun/12 07:52;ffang;Hi,

I think we can use javac @argfiles also for classpath if classpath is too long, currently we use this mechanism for java source files list already.

Freeman","20/Jun/12 08:07;wanghuanqiu@neusoft.com;Hi,
I think it's good idea,But the jars in weblogic are in different files.","21/Jun/12 01:25;wanghuanqiu@neusoft.com;Thank you very much

","21/Jun/12 01:56;wanghuanqiu@neusoft.com;where are the correct versions that I can download?

 http://cxf.apache.org/download.html

I can't find the version above the url.
","21/Jun/12 02:06;ffang;The fix would be in next round of release.

Or you can download the snapshot artifacts once CI build is done, it will take a while so may be try it tomorrow.
Or you can just grab the changes of this fix and build src yourself.

Freeman",21/Jun/12 02:10;wanghuanqiu@neusoft.com;OK，thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix the apache-cxf feature issue,CXF-4386,12595059,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,19/Jun/12 06:58,28/Aug/12 17:44,14/Mar/19 02:30,19/Jun/12 07:10,,,,,,,,2.6.2,2.7,,,OSGi,,,,0,,,,,,,,"I just found some minior issue when using the new karaf-feature plugin to validate the feature.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244803,,,Tue Jun 19 07:10:34 UTC 2012,,,,,,0|i05txj:,31946,,,,,,,,19/Jun/12 07:10;njiang;Applied the patch into trunk and 2.6.x-fixes branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some temporary files are not deleted after WS-RM scenarios,CXF-4383,12560774,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,15/Jun/12 13:55,28/Aug/12 17:44,14/Mar/19 02:30,25/Jun/12 11:23,2.4.8,2.5.4,2.6.1,,,,,2.4.9,2.5.5,2.6.2,,WS-* Components,,,,0,,,,,,,,"Some of the temporary files created by CachedOuputStream in WS-RM scenarios are not deleted and remain on the file system even under a normal completion of the scenario (i.e., a successful transmission or a normal endpoint shutdown).
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244805,,,2012-06-15 13:55:56.0,,,,,,0|i05txz:,31948,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fault message is not transmitted to decoupled faultTo endpoint if error occurs from a two way operation,CXF-4382,12560709,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,15/Jun/12 03:24,23/Oct/13 02:22,14/Mar/19 02:30,20/Jun/12 04:56,2.6.1,,,,,,,2.6.2,2.7,,,WS-* Components,,,,0,,,,,,,,,,,,,,,,,,,,,,CXF-5354,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244806,,,2012-06-15 03:24:48.0,,,,,,0|i05ty7:,31949,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXBElementProvider is calling wrong method for classes extending JAXBElement,CXF-4380,12560655,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,marko voss,marko voss,14/Jun/12 15:02,28/Aug/12 17:44,14/Mar/19 02:30,19/Jun/12 12:09,2.6.1,,,,,,,2.4.9,2.5.5,2.6.2,2.7,JAX-RS,,,,0,,,,,,,,"JAXBElementProvider line 170 - 176:

This piece of code performs a special handling for classes, which extends JAXBElement but it calls the wrong unmarshal method.

Unmarshaller.unmarshal(Source source, Class<?> declaredType)
Unmarshaller.unmarshal(XMLStreamReader reader, Class<?> declaredType)
Unmarshaller.unmarshal(XMLEventReader reader, Class<?> declaredType)
Unmarshaller.unmarshal(Node node, Class<?> declaredType)

These methods are not able to deal with classes, which extend JAXBElement, because they explicitly check, if the declaredType is part of the known classes of the JAXBContext. This is not the case.

Please use the other methods instead.

Suggested solution: Change

{code}
response = unmarshaller.unmarshal(TransformUtils.createNewReaderIfNeeded(reader, is), theType);
{code}

to

{code}
response = unmarshaller.unmarshal(TransformUtils.createNewReaderIfNeeded(reader, is));
{code}",,,,,,,,,,,,,,,,,,,,19/Jun/12 10:46;marko voss;FilterTypeTO.java;https://issues.apache.org/jira/secure/attachment/12532526/FilterTypeTO.java,19/Jun/12 10:46;marko voss;ObjectFactory.java;https://issues.apache.org/jira/secure/attachment/12532528/ObjectFactory.java,19/Jun/12 10:46;marko voss;ParamTypeTO.java;https://issues.apache.org/jira/secure/attachment/12532525/ParamTypeTO.java,19/Jun/12 10:46;marko voss;RevokeGrantsTaskParamTO.java;https://issues.apache.org/jira/secure/attachment/12532524/RevokeGrantsTaskParamTO.java,19/Jun/12 10:46;marko voss;package-info.java;https://issues.apache.org/jira/secure/attachment/12532527/package-info.java,,,5.0,,,,,,,,,,,,,,,,,,,,2012-06-19 09:15:51.237,,,no_permission,,Unknown,,,,,,,,,,,244808,,,Tue Jun 19 14:28:50 UTC 2012,,,,,,0|i05tyn:,31951,,,,,,,,"19/Jun/12 09:15;sergey_beryozkin;Marko, I'm waiting for a sample generated FooType class as I can not reproduce the failure you are seeing with the test class I've coded myself.
Can you attach it please ?",19/Jun/12 14:28;marko voss;Thank you! :),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InjectionUtils failes to convert path-value to class annotated with XmlJavaTypeAdapter,CXF-4379,12560608,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,erling,erling,14/Jun/12 08:52,28/Aug/12 17:44,14/Mar/19 02:30,27/Jun/12 11:56,2.5.4,2.6.1,,,,,,2.4.9,2.5.5,2.6.2,2.7,JAX-RS,,,,0,,,,,,,,"{code:java}
package no.nrk.panorama.serum;

import static org.fest.assertions.Assertions.assertThat;

import java.lang.annotation.Annotation;

import javax.xml.bind.annotation.adapters.XmlAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.apache.cxf.jaxrs.model.ParameterType;
import org.apache.cxf.jaxrs.utils.InjectionUtils;
import org.apache.cxf.message.MessageImpl;
import org.junit.Test;

public class CXFInjectionUtilsJUnitTest {

	public static class Adapter extends XmlAdapter<String, Id> {

		@Override
		public String marshal(final Id id) throws Exception {
			return id.getId();
		}

		@Override
		public Id unmarshal(final String idStr) throws Exception {
			Id id = new DelegatingId();
			id.setId(idStr);
			return id;
		}
	}

	@XmlJavaTypeAdapter(Adapter.class)
	public interface Id {
		public String getId();

		public void setId(String id);
	}

	public static class DelegatingId implements Id {

		private String id;

		public String getId() {
			return this.id;
		}

		public void setId(String id) {
			this.id = id;
		}

	}

	@Test
	public void handleParameter_givenValidInput_shouldReturnIdWithCorrectValue() throws Exception {
		// Arrange
		String value = ""1.1"";

		// Act
		Object id = InjectionUtils.handleParameter(value, true, Id.class, new Annotation[] {}, ParameterType.PATH,
		      new MessageImpl());

		// Assert
		assertThat(id).isInstanceOf(Id.class);
		assertThat(((Id)id).getId()).isEqualTo(value);
	}

}

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244809,,,2012-06-14 08:52:42.0,,,,,,0|i05tyv:,31952,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STS encryptIssuedToken with the SymmetricKey KeyType does not work,CXF-4376,12560499,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,13/Jun/12 13:10,28/Aug/12 17:44,14/Mar/19 02:30,13/Jun/12 13:49,2.5.4,2.6.1,,,,,,2.5.5,2.6.2,,,Services,,,,0,,,,,,,,"
The scenario where the STS is configured to encrypt an IssuedToken does not work when the client sends a SymmetricKey KeyType request. This is because the STS encrypts the entropy to the service provider, and the STSClient can't decrypt them as a result. This task also involves a system test for this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244810,,,2012-06-13 13:10:02.0,,,,,,0|i05tz3:,31953,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSONProvider blocks namespace prefixes set in package-info.java,CXF-4374,12560471,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,13/Jun/12 09:56,28/Aug/12 17:44,14/Mar/19 02:30,13/Jun/12 10:36,,,,,,,,2.5.5,2.6.2,2.7,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244811,,,2012-06-13 09:56:20.0,,,,,,0|i05tzb:,31954,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB and XSLT providers should not end the documents on writers when used in non JAX-RS contexts,CXF-4373,12560340,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,12/Jun/12 12:48,28/Aug/12 17:44,14/Mar/19 02:30,12/Jun/12 13:51,,,,,,,,2.5.5,2.6.2,2.7,,JAX-RS,,,,0,,,,,,,,"When XML JAXB providers are reused in JAX-WS contexts, they should not end the documents, StaxOutInterceptor will do it",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244812,,,2012-06-12 12:48:21.0,,,,,,0|i05tzj:,31955,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP OutputStreams block flush(),CXF-4371,12560239,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,11/Jun/12 21:08,28/Aug/12 17:44,14/Mar/19 02:30,11/Jun/12 21:25,2.6.1,,,,,,,2.6.2,,,,Transports,,,,0,,,,,,,,"
The HTTP output streams block the flush calls to prevent unwanted chunks and network packets with poorly behaving Stax writers.  However, this prevents streaming content back in pre-defined chunks by the JAX-RS providers.   It would be better to just block the flushs from the StaxOutInterceptor so the non-stax cases can have closer to raw access to the stream.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244813,,,2012-06-11 21:08:37.0,,,,,,0|i05tzr:,31956,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If not use WS-SecPolicy, ehcache caches not cleaned up",CXF-4366,12559726,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,07/Jun/12 17:32,28/Aug/12 17:44,14/Mar/19 02:30,08/Jun/12 18:33,2.4.8,2.5.4,2.6.1,,,,,2.4.9,2.5.5,2.6.2,,WS-* Components,,,,0,,,,,,,,"
When using the ehcache based stores with manually configured WSS4J*Interceptors instead of WS-Policy based, the listeners that ""close"" the stores may not be registered and thus the stores will not get properly cleaned up locking the cache manager and consuming threads.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244815,,,2012-06-07 17:32:22.0,,,,,,0|i05u07:,31958,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SAML SSO does not set Destination attribute when creating a signed AuthnRequest,CXF-4365,12559709,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,07/Jun/12 16:03,28/Aug/12 17:44,14/Mar/19 02:30,07/Jun/12 16:09,2.6.1,,,,,,,2.6.2,,,,JAX-RS Security,,,,0,,,,,,,,"
SAML SSO does not set the Destination attribute when creating a signed AuthnRequest, as required by the spec.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244816,,,2012-06-07 16:03:29.0,,,,,,0|i05u0f:,31959,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Keep TokenStore and ReplayCache instances per-endpoint instead of per-bus,CXF-4364,12559547,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,06/Jun/12 15:15,28/Aug/12 17:44,14/Mar/19 02:30,06/Jun/12 15:53,2.4.8,2.5.4,2.6.1,,,,,2.4.9,2.5.5,2.6.2,,WS-* Components,,,,0,,,,,,,,"
This task is to store TokenStore and ReplayCache instances per-endpoint instead of per-bus. The EhCache CacheManager is a singleton and so it was keeping cache instances per-bus.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244817,,,2012-06-06 15:15:28.0,,,,,,0|i05u0n:,31960,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in the TransportBindingHandler,CXF-4357,12559248,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,coheigea,gchoi,gchoi,04/Jun/12 18:59,28/Aug/12 17:44,14/Mar/19 02:30,05/Jun/12 11:39,2.4.8,2.5.4,2.6,,,,,2.4.9,2.5.5,2.6.2,,Core,,,,0,,,,,,,,"I have WSP, WSC and STS(ADFS2.0) environment.
1. WSP:
Use SymmetricBinding and ProtectionToken is IssuedToken
2. STS: ADFS2.0
use TransportBinding and client authentication is done via UT

When I run client, I am getting following NPE. For details, please reference CXF-USER thread http://cxf.547215.n5.nabble.com/Proglem-with-loading-Apache-CXF-STS-with-UT-authentication-td5708523.html. If you need further information please reach me at ginachoi88@gmail.com

Caused by: java.lang.NullPointerException
        at org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler.doIssuedTokenSignature(TransportBindingHandler.java:429)
        at org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler.handleEndorsingToken(TransportBindingHandler.java:283)
        at org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler.handleEndorsingSupportingTokens(TransportBindingHandler.java:240)
        at org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler.handleBinding(TransportBindingHandler.java:147)
        at org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal.handleMessage(PolicyBasedWSS4JOutInterceptor.java:159)
        at org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal.handleMessage(PolicyBasedWSS4JOutInterceptor.java:89)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
        at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:532)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:464)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:367)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:320)
        at org.apache.cxf.ws.security.trust.STSClient.requestSecurityToken(STSClient.java:722)
        at org.apache.cxf.ws.security.trust.STSClient.requestSecurityToken(STSClient.java:602)
        at org.apache.cxf.ws.security.trust.STSClient.requestSecurityToken(STSClient.java:594)
        at org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor.getTokenFromSTS(IssuedTokenInterceptorProvider.java:404)
        at org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor.handleMessage(IssuedTokenInterceptorProvider.java:188)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
        at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:532)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:464)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:367)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:320)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:89)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)","Tomcat7.0.27, Apache CXF2.6.0, ADFS2.0 as STS",,,,,,,,,,,,,,,,,,,04/Jun/12 19:01;gchoi;DoubleIt.wsdl;https://issues.apache.org/jira/secure/attachment/12530839/DoubleIt.wsdl,04/Jun/12 19:00;gchoi;adfs_new_simple.wsdl;https://issues.apache.org/jira/secure/attachment/12530837/adfs_new_simple.wsdl,04/Jun/12 19:01;gchoi;cxf.xml;https://issues.apache.org/jira/secure/attachment/12530838/cxf.xml,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244823,,,Wed Jun 06 15:05:08 UTC 2012,,,,,,0|i05u1z:,31966,,,,,,,,04/Jun/12 19:00;gchoi;STS wsdl file.,"04/Jun/12 19:02;gchoi;Attached STS wsdl file, client configuration file and web service wsdl file.","04/Jun/12 19:04;gchoi;I debugged my client to check following error messages that I am receiving 
when I run client. I found cause for NPE. In 
org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler.java, 
we have  doIssuedTokenSignature( Token token, SignedEncryptedParts 
signdParts, TokenWrapper wrapper) method. 

In line 403, getSecurityToken() is allowed to return null and in my case 
value of secTok is null. 

SecurityToken secTok = getSecurityToken(); 



    protected SecurityToken getSecurityToken() { 
        SecurityToken st = 
(SecurityToken)message.getContextualProperty(SecurityConstants.TOKEN); 
        if (st == null) { 
            String id = 
(String)message.getContextualProperty(SecurityConstants.TOKEN_ID); 
            if (id != null) { 
                st = getTokenStore().getToken(id); 
            } 
        } 
        if (st != null) { 
            getTokenStore().add(st); 
            return st; 
        } 
        return null; 
    } 



Following is content from  line 424 to 441. 
in line 429, secTok.getX509Certificate() is called without checking value 
of secTok is null or not. This throws NPE in my case. Condition should be 
checked. On the other hand, I might need to find way to avoid having null 
value for SecurityToken . 

        if (signdParts != null) { 
            if (signdParts.isBody()) { 
                WSEncryptionPart bodyPart = 
convertToEncryptionPart(SAAJUtils.getBody(saaj)); 
                sigParts.add(bodyPart); 
            } 
429:            if (secTok.getX509Certificate() != null) { 
                //the ""getX509Certificate"" this is to workaround an issue 
in WCF 
                //In WCF, for TransportBinding, in most cases, it doesn't 
want any of 
                //the headers signed even if the policy says so.   HOWEVER, 
for KeyValue 
                //IssuedTokens, it DOES want them signed 
                for (Header header : signdParts.getHeaders()) { 
                    WSEncryptionPart wep = new 
WSEncryptionPart(header.getName(), 
                            header.getNamespace(), 
                            ""Content""); 
                    sigParts.add(wep); 
                } 
            } 
        } 
",06/Jun/12 15:05;gchoi;Fix verified. Now client able to send RST to STS. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temp file deleted before returning the stream in CachedOutputStream,CXF-4356,12559171,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,goncalo,goncalo,04/Jun/12 11:47,28/Aug/12 17:44,14/Mar/19 02:30,17/Jul/12 14:43,2.5,2.6,,,,,,2.4.9,2.5.5,2.6.2,,,,,,2,,,,,,,,"I’m implementing a web service to upload files (from 120 Kb to 1 Mb). Most of the time everything works fine, but sometimes (randomly) the uploaded file is empty (size == 0) in the target platform. 

After some debugging I found that the problem comes from the temp file created by the {{CachedOutputStream}} that is deleted during the process of getting the cached stream. In fact, {{maybeDeleteTempFile}} is called before {{getInputStream}} which returns an empty {{LoadingByteArrayOutputStream}}. The {{finalize}} method of {{FileInputStream}} calls its {{close}} method which is overridden in {{CachedOutputStream#getInputStream}} to delete the temp file.

I tried to synchronize all the methods dealing with {{tempFile}} but it didn’t resolve my problem.

The stack: 

{code}
Daemon System Thread [Finalizer] (Suspended (breakpoint at line 490 in CachedOutputStream))	
	CachedOutputStream.maybeDeleteTempFile(Object) line: 490	
	CachedOutputStream.access$000(CachedOutputStream, Object) line: 43	
	CachedOutputStream$1.close() line: 469	
	CachedOutputStream$1(FileInputStream).finalize() line: 381	
	Finalizer.invokeFinalizeMethod(Object) line: not available [native method]	
	Finalizer.runFinalizer() line: 83	
	Finalizer.access$100(Finalizer) line: 14	
	Finalizer$FinalizerThread.run() line: 160	
{code} 

The {{getInputStream}} method: 

{code:java}
public InputStream getInputStream() throws IOException {
	flush();
	if (inmem) {
		if (currentStream instanceof LoadingByteArrayOutputStream) {
			return ((LoadingByteArrayOutputStream) currentStream).createInputStream();
		} else if (currentStream instanceof ByteArrayOutputStream) {
			return new ByteArrayInputStream(((ByteArrayOutputStream) currentStream).toByteArray());
		} else if (currentStream instanceof PipedOutputStream) {
			return new PipedInputStream((PipedOutputStream) currentStream);
		} else {
			return null;
		}
	} else {
		try {
			FileInputStream fileInputStream = new FileInputStream(tempFile) {
				public void close() throws IOException {
					super.close();
					maybeDeleteTempFile(this);
				}
			};
			streamList.add(fileInputStream);
			return fileInputStream;
		} catch (FileNotFoundException e) {
			throw new IOException(""Cached file was deleted, "" + e.toString());
		}
	}
}
{code} 


The {{maybeDeleteTempFile}} method: 

{code:java}
private void maybeDeleteTempFile(Object stream) {
	streamList.remove(stream);
	if (!inmem && tempFile != null && streamList.isEmpty() && allowDeleteOfFile) {
		if (currentStream != null) {
			try {
				currentStream.close();
				postClose();
			} catch (Exception e) {
				//ignore
			}
		}
		tempFile.delete();
		tempFile = null;
		currentStream = new LoadingByteArrayOutputStream(1024);
		inmem = true;
	}
}
{code} ",,,,,,,,,,,,,,,,,,,,13/Jul/12 07:43;goncalo;cxf-4356-reproducer.zip;https://issues.apache.org/jira/secure/attachment/12536349/cxf-4356-reproducer.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-06-06 16:08:11.959,,,no_permission,,Unknown,,,,,,,,,,,244824,,,Tue Jul 17 07:57:30 UTC 2012,,,,,,0|i05u27:,31967,,,,,,,,"04/Jun/12 13:24;goncalo;When I remove the {{close}} overriding everything works fine. 

Replacing:
{code:java}
FileInputStream fileInputStream = new FileInputStream(tempFile) {
	public void close() throws IOException {
		super.close();
		maybeDeleteTempFile(this);
	}
};
{code} 

By:
{code:java}
FileInputStream fileInputStream = new FileInputStream(tempFile);
{code} 

But obviously the temp file is never deleted which is not correct!","05/Jun/12 15:16;goncalo;I found a workaround. If we keep the instance of the created {{FileInputStream}} in {{CachedOutputStream#getInputStream()}}, it prevents the GC to collect the {{FileInputStream}} instance too early and therefore to delete the temp file.

The temp file is still deleted but ""later"".

The {{CachedOutputStream}} (v.2.6) code change:
{code:java}
private FileInputStream fileInputStream; // <-- The instance we keep

public InputStream getInputStream() throws IOException {
    flush();
    if (inmem) {
        if (currentStream instanceof LoadingByteArrayOutputStream) {
            return ((LoadingByteArrayOutputStream) currentStream).createInputStream();
        } else if (currentStream instanceof ByteArrayOutputStream) {
            return new ByteArrayInputStream(((ByteArrayOutputStream) currentStream).toByteArray());
        } else if (currentStream instanceof PipedOutputStream) {
            return new PipedInputStream((PipedOutputStream) currentStream);
        } else {
            return null;
        }
    } else {
        try {
            fileInputStream = new FileInputStream(tempFile) { // <-- The instance we keep
                public void close() throws IOException {
                    super.close();
                    maybeDeleteTempFile(this);
                }
            };
            streamList.add(fileInputStream);
            return fileInputStream;
        } catch (FileNotFoundException e) {
            throw new IOException(""Cached file was deleted, "" + e.toString());
        }
    }
}
{code} ","06/Jun/12 16:08;dkulp;
Hold on... who is calling getInputStream() in this case?   The CachedOutputStream is specifically designed so that the caller of the getInputStream is supposed to hold onto it (or close it).   Thus, it shouldn't be garbage collected.  ","06/Jun/12 18:08;goncalo;Daniel,

It is the {{javax.activation.DataHandler}} that calls the {{CachedOutputStream#getInputStream()}} through its datasource ({{AttachmentDatasource}} actually). The {{DataHandler}} is the data holder in my generated stub (request param).

The stream is already empty when I get it from the request param in my web service implementation class.","13/Jul/12 07:43;goncalo;I’ve attached a maven project that reproduces the described problem.

This project is composed of two web services:

* {{UploadService}} which has two operations ({{uploadFile}} and {{uploadFileWsCall}}) that do the same thing, they read an incoming file stream and return its size. The only difference between both operations is that the second one calls the {{call}} operation of other web service ({{DummyService}}) before reading the stream.
* {{DummyService}} which does nothing, it was made to be called from the {{uploadFileWsCall}} operation of {{UploadService}}.

The project has also two unit tests (integration tests in fact), to test both operations of the {{UploadService}}. The test consist on sending 10,000 times (1,000 times for the {{UploadFileAfterWsCallTest}}) the same file to the {{UploadService}} operation and check that the returning size match the real file size (130,700 bytes).

As we experienced, the {{UploadFileAfterWsCallTest}} fail after a few iterations. The returning file size is 0 (as the {{DataHandler}} gives an empty 	{{LoadingByteArrayOutputStream}} as {{InputStream}} implementation instead of the overrided {{FileInputStream}} from {{CachedOutputStream}}).

The {{UploadFileTest}} doesn't fail often but when it fails, it has the same symptoms as above.

This problem only occurs when MTOM is enabled.

To run the tests you only have to call ""{{mvn clean test}}"" – (make sure port 8080 is free as the tests start jetty on this port).
","17/Jul/12 03:04;dkulp;I believe a simple patch of:

{code}
--- a/api/src/main/java/org/apache/cxf/io/CachedOutputStream.java
+++ b/api/src/main/java/org/apache/cxf/io/CachedOutputStream.java
@@ -464,9 +464,13 @@ public class CachedOutputStream extends OutputStream {
         } else {
             try {
                 FileInputStream fileInputStream = new FileInputStream(tempFile) {
+                    boolean closed;
                     public void close() throws IOException {
-                        super.close();
-                        maybeDeleteTempFile(this);
+                        if (!closed) {
+                            super.close();
+                            maybeDeleteTempFile(this);
+                        }
+                        closed = true;
                     }
                 };
                 streamList.add(fileInputStream);
{code}

will fix this.  I need to test this more though.  

Apparently, the FileInputStream.finalize method calls close a second time which, if not guarded as above, could cause the maybeDeleteTempFile to be called again and delete the file prematurely.",17/Jul/12 07:57;goncalo;I just tried your patch and it seems to fix the problem.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RMTxStore should explicitly close ResultSet objects,CXF-4354,12558965,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,01/Jun/12 15:15,28/Aug/12 17:44,14/Mar/19 02:30,25/Jun/12 11:37,,,,,,,,2.4.9,2.5.5,2.6.2,,WS-* Components,,,,0,,,,,,,,"RMTxStore should explicitly close the ResultSet objects to avoid any potential memory issue.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244825,,,2012-06-01 15:15:29.0,,,,,,0|i05u2f:,31968,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DigestAuth sends Proxy-Auth headers even when not requested,CXF-4353,12558853,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,31/May/12 20:06,28/Aug/12 17:44,14/Mar/19 02:30,08/Jun/12 18:36,2.5.4,2.6.1,,,,,,2.5.5,2.6.2,,,Transports,,,,0,,,,,,,,"
When using DigestAuth, after the initial challenge/response, any additional requests start computing and sending Proxy-Authorization headers even when no proxy policies are set.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244826,,,2012-05-31 20:06:44.0,,,,,,0|i05u2n:,31969,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SAML Web SSO processing error when receiving a signed Assertion,CXF-4352,12558783,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,31/May/12 13:39,28/Aug/12 17:44,14/Mar/19 02:30,31/May/12 13:53,2.6.1,,,,,,,2.6.2,,,,JAX-RS Security,,,,0,,,,,,,,"
When the RequestAssertionConsumerService (for SAML Web SSO) receives a signed SAML Assertion embedded in a SAMLP Response, there is a bug when it marshalls it to DOM, in that it tries to re-sign the Assertion.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,244827,,,2012-05-31 13:39:36.0,,,,,,0|i05u2v:,31970,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No JSON output under OSGi because cxf-rt-frontend-jaxrs is missing Import-Package for org.apache.cxf.jaxrs.provider.json,CXF-4351,12558681,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,cdolan,cdolan,30/May/12 22:09,28/Aug/12 17:44,14/Mar/19 02:30,18/Jun/12 16:27,2.6,,,,,,,2.6.1,,,,JAX-RS,,,,0,,,,,,,,"I use CXF via the features.xml inside of Apache Karaf. I use the umbrella feature ""cxf"" to pull in most of the CXF bundles.

When upgrading from CXF 2.5.0 to 2.6.0, I started getting errors like the following when my Accepts header is application/json:

{noformat}
2012-05-30 16:43:55,979 WARN  [JAXRSOutInterceptor.java:401] No message body writer has been found for response class HealthItemCollection. - o.a.c.j.i.JAXRSOutInterceptor
{noformat}

I put a breakpoint in org.apache.cxf.jaxrs.provider.ProviderFactory and found this:

{noformat}
java.lang.ClassNotFoundException: org.apache.cxf.jaxrs.provider.json.JSONProvider
{noformat}

Then I looked at the manifest for cxf-rt-frontend-jaxrs and noticed that the Import-Packages line lacks a reference to org.apache.cxf.jaxrs.provider.json and other providers that were moved to the new cxf-rt-rs-extension-providers bundle for 2.6.0.

I think the solution is to simply add an import for org.apache.cxf.jaxrs.provider.json to the manifest of cxf-rt-frontend-jaxrs","OSGi 4.2, Apache Karaf 2.2.7, Equinox",,,,,,,,,,,,,,,,,,,31/May/12 20:32;cdolan;CXF-4351.patch;https://issues.apache.org/jira/secure/attachment/12530448/CXF-4351.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-05-31 07:50:04.659,,,no_permission,,Unknown,,,,,,,,,,,247243,,,Mon Jul 16 20:15:47 UTC 2012,,,,,,0|i088xz:,46048,,,,,,,,"30/May/12 22:24;cdolan;Workaround: simply add ""new JSONProvider()"" to my application via JAXRSServerFactoryBean.setProviders()","31/May/12 07:50;sergey_beryozkin;Yes, we have a couple of demos actually producing JSON in OSGI but JSONProvider is explicitly registered there.","31/May/12 13:45;dkulp;
This may actually be fixed with 2.6.1.  Any chance you could test it?   

All the Class.forName things take place from cxf-api and I added a dynamic import org.apache.cxf.* there to resolve some issues with the JAXB databinding and stuff.   It may actually fix this issue as well.","31/May/12 15:36;sergey_beryozkin;I deployed a bundle into Karaf with all the individual cxf 2.6.0 modules and ProviderFactory is capable of loading the default provider.
I think Chris may be using an all-bundle, and looks like it may need an optional import","31/May/12 16:16;sergey_beryozkin;Hi Chris, can you provide more details please, when does this exception occur, when the client bundle making an invocation, or when the server one processes the request/response ? ","31/May/12 16:25;sergey_beryozkin;Also, do you use Require-Bundle ? If yes, which modules does it list","31/May/12 20:31;cdolan;
Sergey: no, I don't use Require-Bundle anywhere. I have a few DynamicImport-Package statements, but none related to CXF. I load CXF via the karaf features.xml. My custom features.xml loads the following via Karaf's featuresBoot:

{code}
<feature name=""my-project"" version=""${project.version}"" resolver=""(obr)"">
    <feature version=""${cxf.version}"">cxf</feature>
    <feature version=""${activemq.version}"">activemq</feature>
    ...
</feature>
{code}

The CXF part of my Import-Package looks like this (generated by maven-bundle-plugin; most of this is due to custom auth interceptors and my jax-rs client):

{code}
org.apache.cxf.binding.soap;version=""[2.6,3)"",
org.apache.cxf.binding.soap.interceptor;version=""[2.6,3)"",
org.apache.cxf.binding.soap.saaj;version=""[2.6,3)"",
org.apache.cxf.configuration.jsse;version=""[2.6,3)"",
org.apache.cxf.endpoint;version=""[2.6,3)"",
org.apache.cxf.headers;version=""[2.6,3)"",
org.apache.cxf.interceptor;version=""[2.6,3)"",
org.apache.cxf.interceptor.security;version=""[2.6,3)"",
org.apache.cxf.jaxrs;version=""[2.6,3)"",
org.apache.cxf.jaxrs.client;version=""[2.6,3)"",
org.apache.cxf.jaxrs.ext;version=""[2.6,3)"",
org.apache.cxf.jaxrs.impl;version=""[2.6,3)"",
org.apache.cxf.jaxrs.model;version=""[2.6,3)"",
org.apache.cxf.jaxrs.utils;version=""[2.6,3)"",
org.apache.cxf.message;version=""[2.6,3)"",
org.apache.cxf.phase;version=""[2.6,3)"",
org.apache.cxf.security;version=""[2.6,3)"",
org.apache.cxf.service;version=""[2.6,3)"",
org.apache.cxf.service.invoker;version=""[2.6,3)"",
org.apache.cxf.service.model;version=""[2.6,3)"",
org.apache.cxf.transport;version=""[2.6,3)"",
org.apache.cxf.transport.http;version=""[2.6,3)""
{code}

And my bundles via the Karaf shell:

{noformat}
list -s -t 0 | grep cxf
[ 149] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-api (2.6.0)
[ 150] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-core (2.6.0)
[ 151] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-management (2.6.0)
[ 152] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.karaf.cxf-karaf-commands (2.6.0)
[ 153] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-databinding-jaxb (2.6.0)
[ 154] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-bindings-xml (2.6.0)
[ 155] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-bindings-soap (2.6.0)
[ 156] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-transports-http (2.6.0)
[ 157] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-frontend-simple (2.6.0)
[ 158] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-frontend-jaxws (2.6.0)
[ 160] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-rs-extension-providers (2.6.0)
[ 161] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-rs-extension-search (2.6.0)
[ 162] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-frontend-jaxrs (2.6.0)
[ 163] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-databinding-aegis (2.6.0)
[ 165] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-databinding-xmlbeans (2.6.0)
[ 166] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-bindings-corba (2.6.0)
[ 167] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-bindings-coloc (2.6.0)
[ 168] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-bindings-object (2.6.0)
[ 169] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-transports-http-jetty (2.6.0)
[ 170] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-transports-local (2.6.0)
[ 171] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-transports-jms (2.6.0)
[ 173] [Active     ] [            ] [       ] [   40] org.apache.cxf.xjc-utils.cxf-xjc-runtime (2.6.0)
[ 175] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-ws-policy (2.6.0)
[ 184] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-ws-addr (2.6.0)
[ 186] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-ws-security (2.6.0)
[ 187] [Active     ] [Created     ] [       ] [   40] org.apache.cxf.cxf-rt-ws-rm (2.6.0)
[ 188] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-ws-mex (2.6.0)
[ 189] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-javascript (2.6.0)
[ 191] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-frontend-js (2.6.0)
[ 192] [Active     ] [            ] [       ] [   40] org.apache.cxf.cxf-rt-features-clustering (2.6.0)
[ 193] [Active     ] [            ] [       ] [   50] org.apache.cxf.bundle (2.6.0)
{noformat}
",31/May/12 20:32;cdolan;*untested* one-line patch to add json import to jaxrs manifest,"31/May/12 20:41;cdolan;Daniel: yes, today's 2.6.1-SNAPSHOT works. I tried it back-to-back with 2.6.0 to ensure that I had turned off my workaround. I still think this is worth patching because the patch is so simple and it saves one ClassNotFoundException in the provider factory.","31/May/12 20:50;dkulp;
The problem is that it won't work.  You end up with circular imports where the cxf-rt-frontend-jaxrs imports stuff from cxf-rt-rs-extension-providers, but cxf-rt-rs-extension-providers imports stuff from cxf-rt-frontend-jaxrs.   I'm pretty sure OSGi doesn't allow that.

In anycase, with 2.6.1 working, I'm happy with that.","31/May/12 21:37;cdolan;I'm willing to let this go with your Dynamic-Import solution. Thanks.

But I feel the need to say: my solution should work because of the "";resolution:=optional"" as long as cxf-rt-rs-extension-providers.jar is loaded before the ProviderFactory is invoked, which should be always unless a bundle watcher gets in between them...

Yet another solution would be to make cxf-rt-rs-extension-providers a Fragment of cxf-rt-frontend-jaxrs. I'm not sure that would be a good idea, but it would solve the problem too.","18/Jun/12 16:27;sergey_beryozkin;OK, I'm just resolving this JIRA given that it works for 2.6.1 :-)","16/Jul/12 02:42;neo;Hi All,
             I was using the latest 2.6.1 Jars in a standalone web application. I am using the JAX-RS module to develop services. 

I got the same exception - No message body writer has been found for response class ...
This is with the 2.6.1 Jar files.
I had to include the JSON Provider just like Chris Dolan mentioned above. I also had to add the Jettison 1.3.1 Jar file  because it also complained about the TypeConverter.

After all these modifications - I get an Illegal Annotation Exception. 

I change my CXF bundle version to 2.6.0 with Jettison jars Included and the JSON Provider included in the <jax-rs:providers> </jax-rs:providers> - I get back my JSON content.

I can provide additional data for clarification purposes , incase you would need it. 

Can someone please look into this ?
Let me know if I need to add this as a new Issue.

Cheers,
Sree.","16/Jul/12 10:52;sergey_beryozkin;> After all these modifications - I get an Illegal Annotation Exception. 

Which annotation is reported to be illegal ? May be you can open a new JIRA with a sample war or maven-based test project attached ?

thanks, Sergey","16/Jul/12 14:10;neo;Sergey,
              Thanks for your response. I will open up a JIRA for this. To be specific the annotation - @XmlJavaTypeAdapter is giving a problem.

Will create a JIRA issue and will follow it up thanks.And BTW , why is Jettison jar file needed in 2.6.0 and 2.6.1.
The standalone application complains about a TypeConverter when the jar file is not present.

I will do the needful - thanks once again !!

Cheers,
Sathish.","16/Jul/12 14:23;sergey_beryozkin;> To be specific the annotation - @XmlJavaTypeAdapter is giving a problem.

I think it is to do with the missing JAXB dependencies in your project.

> why is Jettison jar file needed in 2.6.0 and 2.6.1.
it is an optional dependency now, so a jettison jar has to be explicitly included


","16/Jul/12 15:10;neo;Sergey,
           I have created a JIRA 4426 for this issue as per your request.

What do you mean by the following ?

                  >I think it is to do with the missing JAXB dependencies in your project.
What would be the dependencies (if any ) , my other point being this service delivers the JSON content as expected with CXF 2.6.0.

Can you please help ?

Cheers,
Sree","16/Jul/12 15:21;neo;Added to that , the XML content gets generated when using CXF 2.6.1.
So if there were to be additional dependencies then why would they not affect the XML generation using JAXB ?

I am trying to understand what you just mentioned , Sergey.

Cheers,
Sree",16/Jul/12 15:41;sergey_beryozkin;I'll have a look asap,"16/Jul/12 20:15;neo;Hi Sergey,
                    Any updates on this ?? Did you get any time to look at the 4426 JIRA issue ?
I am trying to understand if you need any additional data , that's all.

Let me know !

Cheers,
Sree.",,,,,,,,,,,,,,,,
JAXRS frontend  should report the actual method request and response types to providers,CXF-4349,12558438,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,29/May/12 15:07,05/Jun/12 13:31,14/Mar/19 02:30,29/May/12 17:31,,,,,,,,2.4.8,2.5.4,2.6.1,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,246959,,,2012-05-29 15:07:38.0,,,,,,0|i07xfb:,44182,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in CachedOutputStream,CXF-4342,12558081,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,szhemzhitsky,szhemzhitsky,25/May/12 11:01,05/Jun/12 13:31,14/Mar/19 02:30,25/May/12 15:48,2.4.2,,,,,,,2.3.11,2.4.8,2.5.4,2.6.1,,,,,0,,,,,,,,"The following error occurs from time to time in the CachedOutputStream

{code}
java.lang.NullPointerException
        at org.apache.cxf.io.CachedOutputStream.maybeDeleteTempFile(CachedOutputStream.java:487)[85:org.apache.cxf.bundle:2.4.2]
        at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:187)[85:org.apache.cxf.bundle:2.4.2]
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1561)[85:org.apache.cxf.bundle:2.4.2]
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:1494)[85:org.apache.cxf.bundle:2.4.2]
        at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2.run(AutomaticWorkQueueImpl.java:353)[85:org.apache.cxf.bundle:2.4.2]
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)[:1.6.0_29]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)[:1.6.0_29]
        at java.lang.Thread.run(Thread.java:662)[:1.6.0_29]
{code}

The problem is in the following method
{code}
private void maybeDeleteTempFile(Object stream) {
    streamList.remove(stream);
    if (!inmem && tempFile != null && streamList.isEmpty() && allowDeleteOfFile) {
        if (currentStream != null) {
            try {
                currentStream.close();
                postClose();
            } catch (Exception e) {
                //ignore
            }
        }
        tempFile.delete();
        tempFile = null;
        currentStream = new LoadingByteArrayOutputStream(1024);
        inmem = true;
    }
}
{code}

NPE occurs executing the following code *tempFile.delete();*, so we can conclude that exception is connected with multithreading because before deleting the file there is a check *tempFile != null*

",,,,,,,,,,,,,,,,,,,,27/May/12 19:31;szhemzhitsky;CachedOutputStream.java.patch;https://issues.apache.org/jira/secure/attachment/12529902/CachedOutputStream.java.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-05-25 15:48:51.513,,,no_permission,,Unknown,,,,,,,,,,,247247,,,Sun May 27 19:31:20 UTC 2012,,,,,,0|i088yv:,46052,,,,,,,,"25/May/12 15:48;dkulp;
Hope I got this resolved.  Also found a situation where the temp file could be locked and then not deleted.  ","25/May/12 17:37;szhemzhitsky;Hi Daniel,

Thanks a lot. I will give it a try a little bit later.","27/May/12 19:31;szhemzhitsky;Hi Daniel,

As I saw on the trunk only *deleteTempFile* is synchronized.
To be sure that all threads will see the modifications of *tempFile* I suppose all accesses to this field must be synchronized.

I've attached the patch that makes all reads and writes of *tempFile* synchronized.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AccessTokenService does not identify the authentication scheme,CXF-4341,12558072,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jordi,jordi,25/May/12 09:51,05/Jun/12 13:31,14/Mar/19 02:30,25/May/12 11:08,2.6,,,,,,,2.6.1,,,,JAX-RS Security,,,,0,oauth2,,,,,,,"Inside AccessTokenService when checking if the client is authenticated (method authenticateClientIfNeeded), the condition to find out the authentication scheme used by an already authenticated client compares to ""Basic"" and a value as ""BASIC"" evaluates it to false.

In my environment (tomcat 7 + jdk 1.6 + CXF 2.6.1 last snapshot), after SSL activation and added the following security constraint to oauth2 endpoint: 

 <security-constraint>
  <web-resource-collection>
   <web-resource-name>OAuth Services</web-resource-name>
   <url-pattern>/services/oauth2/token</url-pattern>
  </web-resource-collection>
  <auth-constraint>
   <role-name>OAUTH2_USER</role-name>
  </auth-constraint>
 </security-constraint>
 <login-config>
  <auth-method>BASIC</auth-method>
  <realm-name>OAuth services</realm-name>
 </login-config>  

SecurityContext.getAuthenticationScheme() always returns ""BASIC"". Wouldn't be better to ignore upper/lower case?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,247248,,,2012-05-25 09:51:52.0,,,,,,0|i088z3:,46053,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A NullPointerException is thrown during token validation,CXF-4337,12557031,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jordi,jordi,23/May/12 16:59,05/Jun/12 13:31,14/Mar/19 02:30,24/May/12 21:24,2.6,,,,,,,2.6.1,,,,JAX-RS Security,,,,0,oauth2,,,,,,,"If we build a request Authorization header using a renewed token, a NullPointerException can raise (at server tier) when trying to validate it:

java.lang.NullPointerException
	at org.apache.cxf.rs.security.oauth2.common.AccessTokenValidation.<init>(AccessTokenValidation.java:53)
	at org.apache.cxf.rs.security.oauth2.services.AbstractAccessTokenValidator.getAccessTokenValidation(AbstractAccessTokenValidator.java:117)
	
AbstractAccessTokenValidator: if there are no registered handlers to process the token, the code will use the injected dataprovider to get the corresponding token instance, but this returned object can be null (for example if the token has been renewed and the dataprovider has removed all its information), therefore AccessTokenValidation constructor will throw a NullPointerException

    try {
        localAccessToken = dataProvider.getAccessToken(authSchemeData);
        accessTokenV = new AccessTokenValidation(localAccessToken);
    } catch (OAuthServiceException ex) {
        AuthorizationUtils.throwAuthorizationFailure(
            Collections.singleton(authScheme));
    }

So it would be useful to check localAccessToken value before passing it to AccessTokenValidation constructor, for example:

try {
    localAccessToken = dataProvider.getAccessToken(authSchemeData);

    if (localAccessToken == null) {
	AuthorizationUtils.throwAuthorizationFailure(supportedSchemes);
    }
	
    accessTokenV = new AccessTokenValidation(localAccessToken);
} catch (OAuthServiceException ex) {
    AuthorizationUtils.throwAuthorizationFailure(
        Collections.singleton(authScheme));
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-24 21:24:12.634,,,no_permission,,Novice,,,,,,,,,,,247251,,,Fri May 25 09:12:03 UTC 2012,,,,,,0|i088zr:,46056,,,,,,,,"24/May/12 21:24;sergey_beryozkin;Thanks for catching the issue early.
By the way, are you planning to use a refresh_token grant to get a new token for a client ? I added a default handler for that, but I guess a custom handler can also be registered ","25/May/12 09:12;jordi;You're welcome Sergey :)

Yes, I implemented a custom refresh_token grant and I assigned ""OAuthConstants.REFRESH_TOKEN_GRANT"" as its type, so AccessTokenService uses your default handler to process it. For the time being I haven't needed an special handler but having the possibility to register a custom one is a great option.

Thanks & regards",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.bus.blueprint.ConfigurerImpl may get IllegalStateException: Execution container has not been set,CXF-4336,12557013,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,23/May/12 14:42,05/Jun/12 13:31,14/Mar/19 02:30,23/May/12 15:04,2.5.3,,,,,,,2.4.8,2.5.4,2.6.1,,Core,,,,0,,,,,,,,"Using CXF with Aries Blueprint Core 0.3.1 may get the following exception at
org.apache.cxf.bus.blueprint.ConfigurerImpl's configureBean method:

Caused by: java.lang.IllegalStateException: Execution container has not been set
        at org.apache.aries.blueprint.di.ExecutionContext$Holder.getContext(ExecutionContext.java:34)
        at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:52)
        at org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:799)
        at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:773)
        at org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:754)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.cxf.bus.blueprint.ConfigurerImpl.configureBean(ConfigurerImpl.java:139)
        at org.apache.cxf.bus.blueprint.ConfigurerImpl.configureWithWildCard(ConfigurerImpl.java:165)
        at org.apache.cxf.bus.blueprint.ConfigurerImpl.configureBean(ConfigurerImpl.java:111)
        at org.apache.cxf.bus.blueprint.ConfigurerImpl.configureBean(ConfigurerImpl.java:100)
        at org.apache.cxf.transport.http.HTTPTransportFactory.configure(HTTPTransportFactory.java:186)
        at org.apache.cxf.transport.http.HTTPTransportFactory.getConduit(HTTPTransportFactory.java:260)
        at org.apache.cxf.binding.soap.SoapTransportFactory.getConduit(SoapTransportFactory.java:228)
        at org.apache.cxf.binding.soap.SoapTransportFactory.getConduit(SoapTransportFactory.java:235)
...

Note that this problem is caused by an interoperability issue between CXF and Aries Blueprint Core 0.3.1. The problem does not occur with BP 0.3.2 or a newer version.

This patch adds a workaround in CXF to avoid having this problem for those who are using BP 0.3.1.

",Aries Blueprint Core 0.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,247252,,,2012-05-23 14:42:12.0,,,,,,0|i088zz:,46057,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema validation does not validate elements in soap header,CXF-4334,12556859,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,eirbjo,eirbjo,22/May/12 13:34,05/Jun/12 13:31,14/Mar/19 02:30,25/May/12 03:30,,,,,,,,2.3.11,2.4.8,2.5.4,2.6.1,,,,,0,,,,,,,,"
When publishing a JAX-WS service backed by a Java SEI and setting

properties.put(Message.SCHEMA_VALIDATION_ENABLED, Boolean.TRUE.toString());

, then missing / wrong soap header content in the request is detected with a soap:Fault.

However, when the JAX-WS service is backed by a Provider<Source> annotated with @WebServiceProvider, then invalid soap body content is detected, but invalid header content is not.

I would expect that when SCHEMA_VALIDATION_ENABLED is set to true, then invalid content should cause soap:Fault for header and body content, regardless of the service being backed by a Java SEI or a Provider<Source>.

I think this mail thread discusses the same issue:

http://cxf.547215.n5.nabble.com/Schema-validation-is-not-validating-elements-from-SoapHeader-td4705565.html

I'll attach a minimal test case demonstrating the issue.

",,,,,,,,,,,,,,,,,,,,25/May/12 09:32;eirbjo;CXF-4334-header-validation-testcase.zip;https://issues.apache.org/jira/secure/attachment/12529692/CXF-4334-header-validation-testcase.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-05-23 13:01:33.288,,,no_permission,,Unknown,,,,,,,,,,,247254,,,Fri May 25 09:37:55 UTC 2012,,,,,,0|i0890f:,46059,,,,,,,,22/May/12 13:37;eirbjo;Maven project providing a minimal test case in the form of failing unit tests,"23/May/12 11:50;eirbjo;
Additionally, we noticed that the faultcode is soap:Server for invalid content in a soap header, but soap:Client when the body content is invalid.

I'm guessing that soap:Client should be used in both cases, since in both cases it is the client that sends invalid XML.

The attached test case includes a test which fails because soap:Server is used when soap:Client is expected.","23/May/12 13:01;ffang;Yeah, the ReadHeadersInterceptor just read the header in Element without validate it, that's could be the issue when have a invalid header element with Provider, as provider won't unmarshall the parameter. We can validate the header element in ReadHeadersInterceptor against the schema to fix it.","23/May/12 13:38;dkulp;
No, ReadHeaders likely  should not. Most of the headers it reads should not be validated (or would be hard to validate) like the ws-rm/ws-addr/ws-security headers and such.   The SoapHeaderInterceptor likely needs some updating to just validate headers for parts mentioned in the wsdl.   For headers that don't match a message defined part, it needs to skip.
","24/May/12 02:07;ffang;Thanks Dan, yeah the SoapHeaderInterceptor is right place to to param soap header validation.","24/May/12 03:15;ffang;Hi Eirik,

I just commit a fix on trunk, so you can wait some time(probably tomorrow) until the CI build publish 2.6.1-SNAPSHOT artifacts to Apache snapshot repo and run your testcase again, you need edit the pom.xml in your testcase use cxf.version as 2.6.1-SNAPSHOT to pick up this fix.

Btw, if you can re-attach your testcase with ""Grant Apache License"" I think I can bake it into CXF code base.

Freeman","25/May/12 03:30;ffang;commit fix
http://svn.apache.org/viewvc?rev=1342126&view=rev for trunk
http://svn.apache.org/viewvc?rev=1342130&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1342131&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1342134&view=rev for 2.3.x branch",25/May/12 09:32;eirbjo;Reattaching test case for header validation with license granted for inclusion in ASF work,"25/May/12 09:37;eirbjo;Hi Freeman,

I've built trunk locally and verified that the tests are all green when run on 2.6.1-SNAPSHOT.

The testcase ZIP has been reattached. Please not that the WSDL was based on some WSDL helloworld tutorial I found on the web. The rest of the code is all written by me. 

So to be 100% IP clean, you could rewrite a hello world WSDL. Should be pretty basic stuff for someone who's used to working with this :-)

Thanks for your efforts and the quick solution. We're looking forward to 2.6.1",,,,,,,,,,,,,,,,,,,,,,,,,,,
"When using SpringBusFactory within OSGi, namespace handlers cannot be found",CXF-4331,12556734,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,21/May/12 19:07,05/Jun/12 13:31,14/Mar/19 02:30,21/May/12 19:53,2.6,,,,,,,2.6.1,,,,Core,,,,0,,,,,,,,"
When using something like:

{code}
new SpringBusFactory().createBus(configUrl);
{code}

to  programatically create a Bus with a config file within OSGi bundle, namespace handlers cannot be found.   

Honestly, I'm not sure what CAN be done about this, although I have a few things that can help.  I'm going to add a param to the SpringBusFactory that can be used to set the NamespaceHandlerResolver that we'll then use.   Spring-DM maintains a NamespaceHandlerResolver as an OSGi service.  Thus, a user can grab that service from the OSGi service registry and pass that into the SpringBusFactory and we can use it.   Requires some user interaction to wire that in, but minimal.   Ideally, the user should just use spring-dm or blueprint and not do something like this, but at least this should provide a workaround.




",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,247256,,,2012-05-21 19:07:59.0,,,,,,0|i0890v:,46061,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service using simple frontend with JAXB binding causes a ClassNotFoundException when started in Karaf,CXF-4329,12556685,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,zbeothy,zbeothy,21/May/12 13:20,05/Jun/12 13:31,14/Mar/19 02:30,25/May/12 17:43,2.6,,,,,,,2.6.1,,,,JAXB Databinding,Simple Frontend,,,0,,,,,,,,"When I deploy the karaf_cl_issue service attached to this issue into karaf and try to start it causes a ClassNotFoundException (org.apache.cxf.jaxb.JAXBDataBinding not found), see ClassNotFoundException.txt for the full stacktrace. karaf_cl_issue is derived from the java_first_jaxws sample. Instead of the JAX-WS frontend a Simple Frontend is used and build was modified to create a bundle instead of war file.

Using the sample with JAX-WS works fine, also building and deploying the Simple Frontend based service with CXF-2.5.2 works.
","Java 6, Karaf 2.2.7",,,,,,,,,,,,,,,,,,,21/May/12 13:21;zbeothy;ClassNotFoundException.txt;https://issues.apache.org/jira/secure/attachment/12528420/ClassNotFoundException.txt,21/May/12 13:21;zbeothy;karaf_cl_issue.zip;https://issues.apache.org/jira/secure/attachment/12528419/karaf_cl_issue.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-05-21 18:01:00.165,,,no_permission,,Unknown,,,,,,,,,,,247258,,,Tue May 22 12:11:42 UTC 2012,,,,,,0|i0891b:,46063,,,,,,,,21/May/12 18:01;gmazza;What is the bug in Apache CXF?,"21/May/12 18:12;gmazza;The java_first_jaxws sample you're referring to does not use the simple front end.  The simple front end refers to annotation-less web service providers (http://cxf.apache.org/docs/simple-frontend.html), whereas the sample clearly does use the @webservice annotation:  http://svn.apache.org/viewvc/cxf/trunk/distribution/src/main/release/samples/java_first_jaxws/src/main/java/demo/hw/server/HelloWorldImpl.java?revision=1173027&view=markup
","21/May/12 18:26;gmazza;I believe you're complaining that the java_first_jaxws sample does not show OSGi deployment, but OSGi deployment is outside the scope of such an entry-level sample.  Here, we're trying to show newbies how to create a web service using a Java-first approach, and providing both standalone and Tomcat deployment options.  While we should perhaps create separate OSGi samples, I would say those would better be placed within the precise containers (Karaf, Equinox, Felix, ServiceMix) as the associated extra bundles each container needs varies from container to container based on the container's pre-configuration setup.  But there's no bug here with the sample.
",21/May/12 18:30;gmazza;Please re-issue if you can better clarify what is wrong with CXF's java_first_jaxws sample.,"21/May/12 19:53;zbeothy;I think a ClassNotFoundException is a valid issue, especially if it worke with a former version.","21/May/12 19:56;gmazza;Yes, providing the exception was within the java_first_jaxws sample, but it isn't.  The sample works, the fact that your derivation of it no longer does is not a CXF issue.","21/May/12 20:23;zbeothy;So what's wrong with the sample? Just forget for a moment the java_first_jaxws sample and focus on the sample I attached. I am willing to learn, but you have to tell me.","21/May/12 20:37;gmazza;It's best to ask your questions first on the CXF user's list to figure out what tweaking is needed with CXF 2.6 that wasn't needed in previous versions, and if it's determined to be a CXF bug to go the JIRA.  ""My code isn't working!!!"" JIRA tickets usually annoy committers unless that pre-check step on CXF User's was done first.

Of course, I don't think any sample deployed onto Karaf will run OOTB, you must first pre-load CXF libraries/features (http://www.dankulp.com/blog/2011/11/apache-cxf-in-osgi/).  I'm going to be testing first my own Java-first sample on Talend ESB to make sure that works with the latest versions, then look at your (very similar) sample.
","21/May/12 20:57;dkulp;I think the cxf-api module needs an additional Dynamic-Import.  Just not sure what it should be.  The simple idea is to add ""org.apache.cxf.\*"" which would allow it to load any of the CXF classes by name when needed.   The more complete option would be just ""\*"" to make all of that more pluggable so things like the classnames on the @*Interceptors and @Features annotations can be used.  Kind of hate that idea though.  

Will think about it.......","22/May/12 03:46;gmazza;Zsolt, I apologize, your sample was of course using the simple frontend after all.  I had incorrectly thought that the presence of @WebService annotations on the service endpoint implementation must mean the JAX-WS frontend would be in use.  (Sorry, I'm normally just accustomed to WSDL-first development.)

I'm unsure whether we should be supporting the simple frontend over OSGi (I personally wish we could get rid of the simple frontend altogether) but I'll leave that issue to Dan and others and am taking myself off this issue.
","22/May/12 09:59;ulhasbhole;Looks like there are other issues as well.  I tried with Plain Apache karaf 2.2.7 and and apache cxf 2.6.0 and cxf feature install itself failed with conflicting dependency chain. 

karaf@root> features:install cxf
Error executing command: Could not start bundle mvn:org.apache.cxf/cxf-rt-bindings-soap/2.6.0 in feature(s) cxf-bindings-soap-2.6.0: Unable to resolve module org.apache.cxf.cxf-rt-bindings-soap [87.0] because it is exposed to package 'javax.activation' from org.apache.servicemix.specs.activation-api-1.1 [64.0] and org.apache.felix.framework [0] via two dependency chains.

Chain 1:
  org.apache.cxf.cxf-rt-bindings-soap [87.0]
    import: (&(package=javax.activation)(version>=1.1.0)(!(version>=2.0.0)))
     |
    export: package=javax.activation
  org.apache.servicemix.specs.activation-api-1.1 [64.0]

Chain 2:
  org.apache.cxf.cxf-rt-bindings-soap [87.0]
    import: (package=javax.xml.soap)
     |
    export: package=javax.xml.soap; uses:=javax.activation
  org.apache.servicemix.specs.saaj-api-1.3 [70.0]
    import: (package=javax.activation)
     |
    export: package=javax.activation
  org.apache.felix.framework [0]",22/May/12 10:06;ulhasbhole;I think I commented too quickly. I forgot to copy over jre.properties.cxf to jre.properties. Ignore my previous comment. ,"22/May/12 11:44;zbeothy;Glen,
I should have removed the annotations in my samples to make the point clearer, but just overlooked them. BTW removing the jax-ws annotations doesn't change the behaviour of the sample. Personally I am fine to get rid of the Simple Frontend. At least in the example we use in our project we will switch to jax-ws. 
I am more concerned about further ClassNotFoundExceptions that might come up in other components due to breaking the big CXF bundle in smaller ones. ","22/May/12 12:11;gmazza;Yes, when you switch architecture there may be some initial bugs and hiccups like CNFE's in the interim, but initial headaches alone can't be an argument to not change architecture unless the bugs would cause you to switch back to the original architecture (as opposed to fixing them within the new architecture as they occur).
",,,,,,,,,,,,,,,,,,,,,,
NPE in MEXInInterceptor,CXF-4321,12556360,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,opalka,opalka,18/May/12 08:34,05/Jun/12 13:31,14/Mar/19 02:30,18/May/12 14:59,,,,,,,,2.5.4,2.6.1,,,WS-* Components,,,,0,,,,,,,,"09:59:48,358 WARNING [org.apache.cxf.phase.PhaseInterceptorChain] (http-/127.0.0.1:8080-2) Interceptor for {http://example.com}AddNumbersService has thrown exception, unwinding now: java.lang.NullPointerException
	at org.apache.cxf.ws.mex.MEXInInterceptor.handleMessage(MEXInInterceptor.java:64)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:123)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:207)
	at org.jboss.wsf.stack.cxf.RequestHandlerImpl.handleHttpRequest(RequestHandlerImpl.java:91)
	at org.jboss.wsf.stack.cxf.transport.ServletHelper.callRequestHandler(ServletHelper.java:169)
	at org.jboss.wsf.stack.cxf.CXFServletExt.invoke(CXFServletExt.java:87)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:185)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:108)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:754) [jboss-servlet-api_3.0_spec-1.0.1.Final.jar:1.0.1.Final]
	at org.jboss.wsf.stack.cxf.CXFServletExt.service(CXFServletExt.java:135)
	at org.jboss.wsf.spi.deployment.WSFServlet.service(WSFServlet.java:140) [jbossws-spi.jar:2.1.0-SNAPSHOT]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.1.Final.jar:1.0.1.Final]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:329) [jbossweb-7.0.16.Final.jar:]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.16.Final.jar:]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275) [jbossweb-7.0.16.Final.jar:]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) [jbossweb-7.0.16.Final.jar:]
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:153) [jboss-as-web-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:155) [jbossweb-7.0.16.Final.jar:]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [jbossweb-7.0.16.Final.jar:]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [jbossweb-7.0.16.Final.jar:]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:368) [jbossweb-7.0.16.Final.jar:]
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:877) [jbossweb-7.0.16.Final.jar:]
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:679) [jbossweb-7.0.16.Final.jar:]
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:931) [jbossweb-7.0.16.Final.jar:]
	at java.lang.Thread.run(Thread.java:679) [rt.jar:1.6.0_24]
",,,,,,,,,,,,,,,,,,,,18/May/12 08:37;opalka;CXF-4321.patch;https://issues.apache.org/jira/secure/attachment/12528015/CXF-4321.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,247264,,,Fri May 18 08:43:04 UTC 2012,,,,,,0|i0892n:,46069,,,,,,,,18/May/12 08:37;opalka;Attaching fix proposal,18/May/12 08:43;opalka;The patch have to be applied to both trunk & 2.5.x-fixes branch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incoming cookies containing parameters with '$' can not be processed,CXF-4319,12555883,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,15/May/12 20:39,05/Jun/12 13:31,14/Mar/19 02:30,15/May/12 20:40,,,,,,,,2.4.8,2.5,2.6.1,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,247266,,,Tue May 15 20:40:27 UTC 2012,,,,,,0|i08933:,46071,,,,,,,,15/May/12 20:40;sergey_beryozkin;r1338730,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuthRequestFilter generates an empty WWW-Authenticate header,CXF-4318,12555732,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jordi,jordi,15/May/12 15:57,05/Jun/12 13:31,14/Mar/19 02:30,15/May/12 20:37,2.6,,,,,,,2.6.1,,,,JAX-RS Security,,,,0,oauth2,,,,,,,"When using OAuthRequestFilter to protect a resource if we don't set any member for its ""tokenHandlers"" list, a request without an ""Authorization"" header will generate a response like:

Response-Code: 401
Content-Type: text/xml
Headers: {WWW-Authenticate=[], Date=[Tue, 15 May 2012 15:27:43 GMT], Content-Length=[0]}

And when trying to process it at the client layer a ""java.lang.IllegalArgumentException"" will be thrown:

URL uri = new URL(""http://SomeFilteredResource"");
HttpURLConnection conn = (HttpURLConnection)uri.openConnection();
int code = conn.getResponseCode();

Receives:

java.lang.RuntimeException: java.lang.IllegalArgumentException: invalid start or end
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1137)
	at sun.net.www.protocol.http.HttpURLConnection.getHeaderField(HttpURLConnection.java:2338)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:388)
	
I suppose the reason could be the empty ""WWW-Authenticate"" header's value, so the method AuthorizationUtils.throwAuthorizationFailure() should be fixed to avoid this situation

Regards",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-15 20:37:16.225,,,no_permission,,Unknown,,,,,,,,,,,247267,,,Tue May 15 20:37:16 UTC 2012,,,,,,0|i0893b:,46072,,,,,,,,"15/May/12 20:37;sergey_beryozkin;only 401 is returned when no challenges are available, see

http://svn.apache.org/viewvc?rev=1338879&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support EndorsingSupportingToken SignedElements with the Transport binding,CXF-4316,12555309,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,15/May/12 10:03,05/Jun/12 13:31,14/Mar/19 02:30,15/May/12 10:35,2.4.7,2.5.3,2.6,,,,,2.4.8,2.5.4,2.6.1,,WS-* Components,,,,0,,,,,,,,This task is to support EndorsingSupportingToken SignedElements with the Transport binding. Currently only SignedParts are supported.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,247268,,,2012-05-15 10:03:30.0,,,,,,0|i0893j:,46073,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF does not read decoupled destination parameters from a config file,CXF-4315,12555292,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,lsassexe,lsassexe,15/May/12 06:55,05/Jun/12 13:31,14/Mar/19 02:30,25/May/12 14:43,2.6,,,,,,,2.4.8,2.5.4,2.6.1,,,,,,0,,,,,,,,"Hi,

When I try to use WS-RM and put all parameters into the config file, CXF does not set up decoupled destination, although it's specified there:

{code:xml}
<http:conduit name=""{http://someaddr}ServiceName.http-conduit"">
<http:client DecoupledEndpoint=""http://localhost:9015/dec_endpoint""/>
</http:conduit>
{code}

However, when the decoupled destination address is set explicitly in the code, everything works OK:

{code:java}
Client client = ClientProxy.getClient(port);
HTTPConduit conduit = (HTTPConduit) client.getConduit();
HTTPClientPolicy clientPolicy = conduit.getClient();
clientPolicy.setDecoupledEndpoint(""http://localhost:9015/decoupled_endpoint"");
{code}

The problem was exposed after migration from CXF 2.4.1 to CXF 2.6.0, so everything should be alright with the config files. Also, you can look at /samples/ws-rm from the CXF binary distribution. This demo does not fetch the destination address from the config file, since all client messages contain anonymous _ReplyTo_ address:

{code:xml}
<ReplyTo xmlns=""http://schemas.xmlsoap.org/ws/2004/08/addressing"">
<Address>http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous</Address>
</ReplyTo>
{code}

Instead of:

{code:xml}
<ReplyTo xmlns=""http://schemas.xmlsoap.org/ws/2004/08/addressing"">
<Address>http://localhost:9990/decoupled_endpoint</Address>
</ReplyTo>
{code}

Same demo runs fine on CXF 2.4.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,247269,,,2012-05-15 06:55:04.0,,,,,,0|i0893r:,46074,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hourly GC Caused by Framework - Unable to GC tune application if using framework.,CXF-4313,12554952,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,teaandcoffee,teaandcoffee,11/May/12 18:38,05/Jun/12 13:31,14/Mar/19 02:30,25/May/12 17:20,2.5,,,,,,,2.3.11,2.4.8,2.5.4,2.6.1,Core,,,,0,,,,,,,,"After looking into why our application GC tuning wasn't working/taking any effect and full gc continued to occur every hour, and saw from the GC logs that System.GC was being called, traced it down to our use of CXF framework, where we are using it for HTTP WS-SOAP Service calls.

Seems that the following is being set code-ally by the JDKBugHacks, looking through the code history seems this got added on the 28th Feb 2011.

From the comments it seems this has been added due to RMI. Not 100% sure why you're wanting to codally override RMI setting this up (especially as in jdk 6 + it by default is the same value 1 hour) and it is well documented for developers who want to tweek their application (especially if they're on earlier java versions) with regards to GC how to change this setting using the following two jvm switches to change the interval anyhow.
 
-Dsun.rmi.dgc.server.gcInterval
-Dsun.rmi.dgc.client.gcInterval

And can actually turn off completely by setting it to 0x7ffffffffffffffe but that is by the by.


The issues i have is that as a user of the framework,  
a) i am unable to turn off the hard coding by any feature flag, and this affects my gc turning of my application.
b) If a user is using CXF with no RMI why set this up? Only setup if using RMI if it is really need so that it doesnt effect users of the framework using it for http service calls.


I take it that these ""hacks"" are influenced heavily from tomcat,  but this is because of its servlet hot deployable class loading features.  Even so for that tomcat do allow two options to disable this feature if you wish, i.e. u don't want hot deploy to tomcat thus not worried about this leak prevention with the class loader and you want to fine tune your applications gc for the applications requirements and SLA. They provide the following nice features:
 Configure to not add the gcDaemonProtection
<Listener className=""org.apache.catalina.core.JreMemoryLeakPreventionListener"" gcDaemonProtection=""false""/>
 And the ability to Disable the listener altogether




Code in question in the JDKBugHacks class.

               // Several components end up calling:
               // sun.misc.GC.requestLatency(long)
               //
               // Those libraries / components known to trigger memory leaks due to
               // eventual calls to requestLatency(long) are:
               // - javax.management.remote.rmi.RMIConnectorServer.start()
               try {
                   Class<?> clazz = Class.forName(""sun.misc.GC"");
                   Method method = clazz.getDeclaredMethod(""requestLatency"",
                           new Class[] {Long.TYPE});
                   method.invoke(null, Long.valueOf(3600000));
               } catch (Throwable e) {
                   //ignore
               }",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-25 17:20:39.131,,,no_permission,,Unknown,,,,,,,,,,,239205,,,Fri May 25 17:20:39 UTC 2012,,,,,,0|i08947:,46076,,,,,,,,"25/May/12 17:20;dkulp;
Added some flags/hooks in there to be able to turn off each hack (or turn off all of them).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JAX-WS clients set executor to a ""thread per async request"" version",CXF-4312,12554926,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,11/May/12 15:40,05/Jun/12 13:31,14/Mar/19 02:30,11/May/12 17:51,2.3.10,2.4.7,2.5.3,2.6,,,,2.3.11,2.4.8,2.5.4,2.6.1,JAX-WS Runtime,,,,0,,,,,,,,"
The JAX-WS ServiceImpl used on the client side sets the Executor for the client to OneShotAsyncExecutor which creates a thread for each async request.  This doesn't allow transports such as the HTTPConduit to use the configured workqueues and there isn't any control over the number of threads created.   

The TCK does not require the executor.  I also verified that the RI's service.getExecutor returns null if an executor is not set.  Thus, setting this is not required.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239179,,,2012-05-11 15:40:32.0,,,,,,0|i0894f:,46077,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WADLGenerator can not create QName when XMLRootElement has no name attribute and correctly manage schemas with empty namespaces,CXF-4310,12554902,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,11/May/12 13:02,05/Jun/12 13:31,14/Mar/19 02:30,11/May/12 20:52,,,,,,,,2.3.11,2.4.8,2.5,2.6.1,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,239155,,,2012-05-11 13:02:10.0,,,,,,0|i0894v:,46079,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuth2 Access Token Service: returned ClientAccessToken is not JAXB compliant,CXF-4309,12554893,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jordi,jordi,11/May/12 12:14,05/Jun/12 13:31,14/Mar/19 02:30,14/May/12 14:12,2.6,,,,,,,2.6.1,,,,JAX-RS Security,,,,0,jaxb,jax-rs,oauth2,,,,,"The OAuth2 Access Token Service current implementation (class org.apache.cxf.rs.security.oauth2.services.AccessTokenService) processes a request inside ""handleTokenRequest()"" and this method returns the successfully generated token using an instance of ClientAccessToken.

But that class has two problems or limitations:

1) It is not a JAXB-annotated bean so the error ""No message body writer has been found for response class ClientAccessToken"" is raised. This can be solved adding the ""jaxbElementClassMap"" property to the default JSON provider (jettison):

<bean id=""jsonProvider"" class=""org.apache.cxf.jaxrs.provider.json.JSONProvider"">
  <property name=""jaxbElementClassMap"" ref=""myElementClassMap""/>
</bean>

<util:map id=""myElementClassMap"">
  <entry key=""org.apache.cxf.rs.security.oauth2.common.ClientAccessToken"" value=""ClientAccessToken""/>
</util:map>

<jaxrs:server id=""oauth2Server"" address=""/oauth2"">
  <jaxrs:serviceBeans>
    <ref bean=""accessTokenService2""/>
  </jaxrs:serviceBeans>
  <jaxrs:providers>
	<ref bean=""jsonProvider""/>
  </jaxrs:providers>    
</jaxrs:server>

Unluckily, after doing that change we find out the second problem:
 
2) ClientAccessToken does not have a no-arg default constructor, so it's not JAXB compliant, and the default JSON provider is unable to serialize the data:
org.apache.cxf.rs.security.oauth2.common.AccessToken does not have a no-arg default constructor.
	this problem is related to the following location:
		at org.apache.cxf.rs.security.oauth2.common.AccessToken
		at org.apache.cxf.rs.security.oauth2.common.ClientAccessToken
		
The only way I've found to overcome both limitations is changing the JSON provider to Codehaus jackson:

<bean id=""jacksonObjectMapper"" class=""org.codehaus.jackson.map.ObjectMapper""/>
<bean id=""jsonProvider"" class=""org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider"">
  <property name=""mapper"" ref=""jacksonObjectMapper"" />
</bean>

<jaxrs:server id=""oauth2Server"" address=""/oauth2"">
  <jaxrs:serviceBeans>
    <ref bean=""accessTokenService2""/>
  </jaxrs:serviceBeans>
  <jaxrs:providers>
    <ref bean=""jsonProvider""/>
  </jaxrs:providers>    
</jaxrs:server>

Here you can see a response generated using this new provider:

Response-Code: 200
Content-Type: application/json
Headers: {Cache-Control=[no-store], Pragma=[no-cache], Date=[Fri, 11 May 2012 11:11:29 GMT]}
Payload: {""tokenKey"":""e91ffcefb133de5eb7ebd02c25e7886e"",""tokenType"":""bearer"",""parameters"":{},""approvedScope"":null,""refreshToken"":null}

So far all the work is done at the server side, but what about the client side?

If we try to de-serialize an access token response using CXF client capabilities (org.apache.cxf.jaxrs.client.WebClient), we will find the same already known problems: 

a) With jettison: 
No message body reader has been found for class : class org.apache.cxf.rs.security.oauth2.common.ClientAccessToken, ContentType : application/json

Adding the ""jaxbElementClassMap"" property to the provider, will stop us at the no-arg default constructor problem:

JSONProvider<?> provider = new JSONProvider<Object>();
provider.setJaxbElementClassMap(Collections.singletonMap(""org.apache.cxf.rs.security.oauth2.common.ClientAccessToken"", ""ClientAccessToken""));

WebClient client = WebClient.create(""http://localhost:8080/fwmobisecurity2/services/oauth2"", Collections.singletonList(provider));
[...]
ClientAccessToken obj = client.post(formData, ClientAccessToken.class);
	
b) With jackson:
No suitable constructor found for type [simple type, class org.apache.cxf.rs.security.oauth2.common.ClientAccessToken]: can not instantiate from JSON object (need to add/enable type information?)

Luckily, jackson offers ""Mix-in Annotations"" that allow us to define which constructor to use, and its parameter binding:

First we must create a class with the following content:

import org.codehaus.jackson.annotate.JsonCreator;
import org.codehaus.jackson.annotate.JsonProperty;

public abstract class ClientAccessTokenDeserializeInfo {

	@JsonCreator
	ClientAccessTokenDeserializeInfo(
			@JsonProperty(value=""tokenType"") String tokenType, 
			@JsonProperty(value=""tokenKey"") String tokenKey) { }
}

And then we map it to the ClientAccessToken class:

JacksonJsonProvider provider = new JacksonJsonProvider();
ObjectMapper mapper = new ObjectMapper();
mapper.getDeserializationConfig().addMixInAnnotations(ClientAccessToken.class, ClientAccessTokenDeserializeInfo.class);
provider.setMapper(mapper);

WebClient client = WebClient.create(""http://localhost:8080/fwmobisecurity2/services/oauth2"", Collections.singletonList(provider));
[...]
ClientAccessToken obj = client.post(formData, ClientAccessToken.class);

Conclusion: Without changing ClientAccessToken source code, jackson JSON provider MUST be used at server and client sides
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-11 12:37:02.018,,,no_permission,,Unknown,,,,,,,,,,,239146,,,Mon May 14 14:11:45 UTC 2012,,,,,,0|i08953:,46080,,,,,,,,"11/May/12 12:37;sergey_beryozkin;Can you please try org.apache.cxf.rs.security.oauth2.provider.OAuthJSONProvider ?

The problem with using JSONProvider or Jackson dealing with OAuth2 access tokens or errors is that they are represented as flat sequences, and access tokens (thinking of MAC for ex) can have few extra properties, so it it is tricky to figure out where is what when reading with generic providers like JSONProvider/etc
","11/May/12 13:22;jordi;Great!!! With ""org.apache.cxf.rs.security.oauth2.provider.OAuthJSONProvider"" the OAuth2 server serializes ClientAccessToken with no problems (and without any special configuration):
---------------------------
ID: 2
Response-Code: 200
Content-Type: application/json
Headers: {Cache-Control=[no-store], Pragma=[no-cache], Date=[Fri, 11 May 2012 13:10:54 GMT]}
Payload: {""access_token"":""9e2e647541e87dc62778bb9f484db8"",""token_type"":""bearer""}
--------------------------------------
Now, no empty attributes are sent and properties names change: tokenKey->access_token and tokenType->token_type.

But at client side, the following code is still unable to de-serialize the response:

OAuthJSONProvider provider = new OAuthJSONProvider();
WebClient client2 = WebClient.create(""http://localhost:8080/fwmobisecurity2/services/oauth2"", 
	Collections.singletonList(provider));
[...]
ClientAccessToken obj = client2.post(formData, ClientAccessToken.class);

Received error:

May 11, 2012 3:10:54 PM org.apache.cxf.jaxrs.client.AbstractClient reportMessageHandlerProblem
SEVERE: .No message body reader has been found for class : class org.apache.cxf.rs.security.oauth2.common.ClientAccessToken, ContentType : application/json","11/May/12 14:43;sergey_beryozkin;Hi, you need to add .accept(""application/json""), it should do it","11/May/12 15:03;jordi;I'm sorry Sergey but this does not solve the problem. I'm still getting:
org.apache.cxf.jaxrs.client.ClientWebApplicationException: .No message body reader has been found for class : class org.apache.cxf.rs.security.oauth2.common.ClientAccessToken

To run the tests, I use the following code: 

OAuthJSONProvider provider = new OAuthJSONProvider();
WebClient client2 = WebClient.create(""http://localhost:8080/fwmobisecurity2/services/oauth2"", Collections.singletonList(provider));
client2.path(""token"");
client2.type(""application/x-www-form-urlencoded"");
client2.accept(""application/json"");

formData = new Form();
formData.set(OAuthConstants.CLIENT_ID, ""aKey"");
formData.set(OAuthConstants.CLIENT_SECRET, ""aSecret"");			
formData.set(""grant_type"",OAuthConstants.CLIENT_CREDENTIALS_GRANT);
formData.set(""scope"",""read_profile_scope"");
			
ClientAccessToken obj = client2.post(formData, ClientAccessToken.class);

I also tried with:
client2.accept(""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"");

and
client2.accept(""application/json,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"");

but the result is always the same","11/May/12 15:07;sergey_beryozkin;Sorry, it only supports a Map on the read, can use OAuthClientUtils in the oauth2 package for getting the token ?
I'll check if it is possible to enhance the provider a bit","11/May/12 15:33;jordi;OK, I've changed the code to:

OAuthJSONProvider provider = new OAuthJSONProvider();
WebClient client2 = WebClient.create(""http://localhost:8080/fwmobisecurity2/services/oauth2"", Collections.singletonList(provider));
client2.path(""token"");
client2.type(""application/x-www-form-urlencoded"");
client2.accept(""application/json"");

MyClientCredentialsGrant grant = new MyClientCredentialsGrant();
grant.setScope(""read_profile_scope"");

ClientAccessToken obj = OAuthClientUtils.getAccessToken(client2, consumer, grant, false);

and now I can get the token without any problems. Thank you very much for your time and help. You do a great job!!!

Regards","14/May/12 14:11;sergey_beryozkin;I've updated the provider to return a token directly if required. Also, ""scope"", ""expires_in"", ""refresh_token"" and custom token parameters if any will also be reported, but it can be disabled by setting a 'writeOptionalParameters' to 'false' on AccessTokenService",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The inbound Cookie header should be parsed using a semicolon separator by default,CXF-4307,12554699,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,10/May/12 15:18,05/Jun/12 13:31,14/Mar/19 02:30,10/May/12 16:24,,,,,,,,2.4.8,2.5.4,2.6.1,,JAX-RS,,,,0,,,,,,,,"The inbound Cookie header may contain something like this:

Cookie: a=b;d=c

At the moment the JAX-RS runtime assumes by default that this a single Cookie value, with the last name/value pair recognized and the first one dropped.

It appears that browsers would more often than not collapse all the Cookies targeted at the specific endpoint into a single header.
Thus a ';' should be used by default when parsing such headers; this can always be customized... 
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238949,,,2012-05-10 15:18:09.0,,,,,,0|i0895j:,46082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mixing up FormParam and Multipart annotations cause exceptions when some parts contain the binary payload,CXF-4306,12554675,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,10/May/12 13:05,05/Jun/12 13:31,14/Mar/19 02:30,10/May/12 16:25,,,,,,,,2.4.8,2.5.4,2.6.1,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238925,,,2012-05-10 13:05:32.0,,,,,,0|i0895r:,46083,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FIQL only gives nullpointerexception. @Context SearchContext does not seem to work.,CXF-4305,12554666,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,gussoh,gussoh,10/May/12 11:11,05/Jun/12 13:31,14/Mar/19 02:30,10/May/12 16:27,2.5.2,2.5.3,,,,,,2.4.8,2.5.4,2.6.1,,JAX-RS,,,,0,,,,,,,,"I tried using FIQL in version 2.5.2 and 2.5.3. I cant get ""@Context SearchContext searchContext"" to work. It is just null. I tried putting it as instance variable and method parameter with no success. 

I tried different queries, here is one: http://localhost:8080/testFiql/testFiql?_s=name==hello

The exception I get:
org.apache.cxf.interceptor.Fault
        at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:155)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:121)
        at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:167)
        at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:94)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:123)
        at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:207)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:213)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:154)
        at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:128)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:185)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:113)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:164)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NullPointerException
        at com.gustav.test.SearchTestFiql.testFiqlSearch(SearchTestFiql.java:20)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:173)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:89)



testFiql.java:
package com.gustav.test;
import javax.ws.rs.Path;
import javax.ws.rs.core.Context;

import org.apache.cxf.jaxrs.ext.search.SearchCondition;
import org.apache.cxf.jaxrs.ext.search.SearchContext;
import org.springframework.stereotype.Service;

@Service(""testFiql"")
@Path(""/"")
public class SearchTestFiql {
    
//    @Context
//    private SearchContext searchContext;
    
    @Path(""testFiql"")
    public void testFiqlSearch(@Context SearchContext searchContext) {
        System.out.println(""Entering testFiqlSearch"");
        SearchCondition<String> sc = searchContext.getCondition(String.class);
        System.out.println(""Search conditions: "" + sc.getSearchConditions());
        System.out.println(""Exiting testFiqlSearch"");
        
    }
}

Please tell me if I can provide any more information which might help.
I would gladly provide the entire Eclipse Maven project if I knew a way to attach it.

Best regards, 
Gustav
","Tomcat 6.0.30
Spring 3.1.1
Windows Vista
",,,,,,,,,,,,,,,,,,,10/May/12 11:21;gussoh;TestFiql.zip;https://issues.apache.org/jira/secure/attachment/12526331/TestFiql.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-05-10 11:49:05.0,,,no_permission,,Unknown,,,,,,,,,,,238916,,,Mon May 14 10:13:14 UTC 2012,,,,,,0|i0895z:,46084,,,,,,,,10/May/12 11:21;gussoh;Eclipse maven project,10/May/12 11:32;gussoh;I just realized that it is not @Context SearchContext which is not working. It is .getCondition(..) which returns null. Ill try a bit more.,"10/May/12 11:49;sergey_beryozkin;We've confirmed on IRC that SearchContext.getSearchExpression() needs to be used to get the original FIQL expression and that
a SearchContext implementation needs to enforce that a SearchCondition type is not a Primitive one ","14/May/12 10:13;sergey_beryozkin;FYI, a utility catch-all org.apache.cxf.jaxrs.ext.search.SearchBean has been introduced, see
https://issues.apache.org/jira/browse/CXF-4314",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM fails when the GZIP feature is enabled,CXF-4303,12554650,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,10/May/12 08:25,05/Jun/12 13:31,14/Mar/19 02:30,21/May/12 10:27,2.5.3,,,,,,,2.5.4,2.6.1,,,WS-* Components,,,,0,,,,,,,,"When the GZIP feature is enabled for WS-RM, the client (i.e., RMSource) sends a message gzipped for its initial transmission correctly. However, for its retransmission in case some error, it resends the non-gzipped content with the gzip content encoding header. And this will lead to a permanent error for the retransmitted messgaes, as the server fails to find the gzipped content.

The current retransmission mechanism is somewhat limited and simply uses those messages captured by the output filter for retries, instead of rewinding the phase and reprocess some of the interceptor steps (e.g., ws-security) using the earlier representation of the message. Thus, there will be some change in the retransmission implementation in the future.

This patch will fix this particular gzip issue for the current retransmission implementation and include a test case that can validate against the current or a future retransmission mechanism.

Concretely, I am moving the retransmission interceptor forward to capture the gzipped stream if the gzip feature is enabled so that the retransmission can take place directly with the gzipped content.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238900,,,2012-05-10 08:25:46.0,,,,,,0|i0896f:,46086,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
apache-cxf-2.6.0.zip distribution doesn't contain org.springframework.web-3.0.7.RELEASE.jar,CXF-4302,12554517,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,syakovyn,syakovyn,09/May/12 15:49,05/Jun/12 13:31,14/Mar/19 02:30,09/May/12 16:16,2.6,,,,,,,2.6.1,,,,Configuration,,,,0,,,,,,,,"apache-cxf-2.6.0.zip (downloaded from http://apache-mirror.telesys.org.ua/cxf/2.6.0/apache-cxf-2.6.0.zip) package doesn't contain org.springframework.web-3.0.7.RELEASE.jar
This causes an issue when running CXF based Web Services within Eclipse:
""SEVERE: Servlet /WorkdayNotification threw load() exception
java.lang.ClassNotFoundException: org.springframework.web.context.WebApplicationContext""",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-09 16:16:20.916,,,no_permission,,Unknown,,,,,,,,,,,238767,,,Wed May 09 16:16:20 UTC 2012,,,,,,0|i0896n:,46087,,,,,,,,"09/May/12 16:16;dkulp;
Already fixed (in svn revision 1331587) on trunk for the 2.6.1-SNAPSHOTs",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with Implicit Soap Headers and @ResponseWrapper in methods with multiple response attributes: NullPointerException in ReflectionServiceFactoryBean or Response-Marshalling Error,CXF-4301,12554507,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,agudian,agudian,09/May/12 14:48,19/Dec/12 14:38,14/Mar/19 02:30,05/Dec/12 18:38,2.5.3,2.6,,,,,,2.5.7,2.6.4,2.7.1,,JAX-WS Runtime,,,,0,,,,,,,,"(Extended version of the problem described and fixed in CXF-4117)

I have a WSDL that defines an implicit Soap Header for requests and responses. One of the response messages consists of multiple elements with types that map to the same type in Java (String, in that case).

Problem #1: When I generate my Code using the flag {{ExtendedSoapHeaders=true}}, the service can not be published due to the following exception:
{code}
java.lang.NullPointerException
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeParameter(ReflectionServiceFactoryBean.java:827)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeClassInfo(ReflectionServiceFactoryBean.java:748)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperation(JaxWsServiceFactoryBean.java:254)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeWSDLOperations(ReflectionServiceFactoryBean.java:652)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperations(JaxWsServiceFactoryBean.java:292)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:393)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:506)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:242)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:205)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:159)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:207)
{code}

Problem #2: When I generate my Code using the flag {{ExtendedSoapHeaders=false}}, the response message is not marshaled correctly and the schema validation fails (the element from the Soap header is placed in the response body, filled with the value of one of the regular response elements, which then was missing the response).

I will attach an example for both cases.",,,,,,,,,,,,,,,,,,,,09/May/12 14:54;agudian;implicit-header-showcase.zip;https://issues.apache.org/jira/secure/attachment/12526168/implicit-header-showcase.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238757,,,Wed May 09 14:54:35 UTC 2012,,,,,,0|i146tz:,232570,,,,,,,,"09/May/12 14:54;agudian;Attached an example of the error. 

The two WSDL files are 100% equal. Creating a copy was just my workaround to perform the source generation twice within one pom: once with ext. soap headers = true, once with false.

call {{mvn clean test}} to execute all four test cases. Three of them will fail due to the problem described here.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
feature cxf-core does not install on karaf 3 snapshot,CXF-4300,12554449,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,09/May/12 08:42,05/Jun/12 13:31,14/Mar/19 02:30,25/May/12 16:41,,,,,,,,2.5.4,2.6.1,,,OSGi,,,,0,,,,,,,,"The reason is that the cxf karaf commands require the karaf version to be below 3.0.0.

I will increase the import range to [2.2,4). For this to work the linked karaf issue also will have to be solved.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238691,,,2012-05-09 08:42:49.0,,,,,,0|i0896v:,46088,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MTOM-streaming regression: Worked 2.3.1, no longer works 2.6.0.",CXF-4298,12554397,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,andreas.krueger@dv-ratio.com,andreas.krueger@dv-ratio.com,08/May/12 22:19,05/Jun/12 13:31,14/Mar/19 02:30,09/May/12 02:21,2.6,,,,,,,2.5.4,2.6.1,,,JAX-WS Runtime,,,,0,,,,,,,,"A client sends two MTOM-attachments to the server. Assume they are both big, and/or server resources are strained, so we want streaming.

Here, ""streaming"" means the attachments are not stored anywhere. Instead, they are consumed on the server side as they are generated by the client. With streaming, it is theoretically possible to send several attachments in one request, each of which is larger than the combined RAM, swap and hard drive space of both the client and the server machine.

It used to be possible to make this work with Apache CXF 2.3.1. MTOM-streaming no longer works with 2.6.0.

I have set up a Github workspace that can be used to demonstrate the problem,
https://github.com/aknrdureegaesr/CXF-MTOM-streaming-regression .

We think the fix to https://issues.apache.org/jira/browse/CXF-3505 could be responsible for this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238639,,,2012-05-08 22:19:00.0,,,,,,0|i08973:,46089,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM destination should update ack-ranges in RMStore before sending out acks,CXF-4297,12554312,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,08/May/12 12:00,05/Jun/12 13:31,14/Mar/19 02:30,08/May/12 14:03,2.5.3,,,,,,,2.4.8,2.5.4,2.6.1,,WS-* Components,,,,0,,,,,,,,"Currently, the Ack message may be sent out before its sequence's Ack-ranges are updated in the RMStore by RMDestination.

This may lead to a situation where a message is acknowledged to RMSource (therefore no resent is triggered from RMSource) but it is not marked as acknowledged at RMDestination.

The Ack-ranges should be updated in the RMStore (if RMStore is enabled) before the ack message is sent out.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238542,,,2012-05-08 12:00:36.0,,,,,,0|i0897b:,46090,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting a namespaceMap on JSONProvider does not affect the way JAXB generates prefixes ,CXF-4296,12554299,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,08/May/12 09:39,05/Jun/12 13:31,14/Mar/19 02:30,08/May/12 10:35,,,,,,,,2.5.4,2.6.1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-08 13:53:15.92,,,no_permission,,Unknown,,,,,,,,,,,238529,,,Tue May 08 14:15:42 UTC 2012,,,,,,0|i0897j:,46091,,,,,,,,"08/May/12 13:53;govindps;Hi Sergey,


Can you please make this fix in 2.4 version also.

Thanks,
Govind","08/May/12 14:15;sergey_beryozkin;Sure, r1335544.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception Cache ws-security.timestamp.cache.instance already exists or Cache ws-security.nonce.cache.instance already exists,CXF-4294,12554187,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,coheigea,dxmanda,dxmanda,07/May/12 16:50,05/Jun/12 13:31,14/Mar/19 02:30,10/May/12 13:34,2.6,,,,,,,2.4.8,2.5.4,2.6.1,,WS-* Components,,,,0,,,,,,,,"We have upgraded to CXF 2.6.0 and services started fine but getting following exceptions when first client calls are coming 

Exception Cache ws-security.timestamp.cache.instance already exists OR 
Cache ws-security.nonce.cache.instance already exists

Our project has multiple webservice endpoints/services in a single JVM and all of the endpoints may get a client SOAP call at the same time. We have WS Security timestamp, signature and encryption enabled. This exception is coming when all the client calls are coming almost at the same time but if the client calls are sparse over time then everything runs fine. But when the exception occurs that particular client received no data or exception. 

In our analysis, we found that CXF 2.6.0 is trying to add cache instance for nonce and timestamp through net.sf.ehcache.CacheManager: addCache (final Ehcache cache) API call. I am not sure if this cache instance addition happens for all the SOAP calls or once per endpoint but net.sf.ehcache.CacheManager: addCache (final Ehcache cache) has a strict check, if it is already there (may have been created already by another webservice endpoint in the same JVM) it throws an exception.

It appears that CXF should use net.sf.ehcache.CacheManager: addCacheIfAbsent(final Ehcache cache) instead of net.sf.ehcache.CacheManager: addCache (final Ehcache cache). addCacheIfAbsent(...) does not throw exception if the cache instance is already present.

Currently we have made following changes to avoid the exceptions

<jaxws:endpoint id=""...."">
...
                <jaxws:properties>
                                ...            
                                <entry key=""ws-security.enable.nonce.cache"" value=""false"" />
                                <entry key=""ws-security.enable.timestamp.cache"" value=""false"" />
                </jaxws:properties>                       
</jaxws:endpoint>

Please let us know, if this is a bug or are there any other solution such that we do not have to disable nonce and timestamp cache of our own.


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238415,,,2012-05-07 16:50:06.0,,,,,,0|i0897r:,46092,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some WS-RM scenarios may not run when there is no internet connection available,CXF-4293,12554180,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,07/May/12 15:10,05/Jun/12 13:31,14/Mar/19 02:30,07/May/12 21:01,2.5.3,,,,,,,2.5.4,2.6.1,,,WS-* Components,,,,0,,,,,,,,"Some ws-rm scenarios such as those in systests/ws-rm with no RMAssertion reference (e.g., persistent.xml) are failing when there is no internet connection. The exception is shown as:


java.lang.RuntimeException: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 75 in XML document from class path resource [org/apache/cxf/systest/ws/rm/persistent.xml] is invalid; nested exception is org.xml.sax.SAXParseException: src-resolve: Cannot resolve the name 'wsrmp:RMAssertion' to a(n) 'element declaration' component.
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:124)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:97)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:69)
        at org.apache.cxf.systest.ws.rm.ClientPersistenceTest$Server.run(ClientPersistenceTest.java:80)
        at org.apache.cxf.testutil.common.AbstractTestServerBase.start(AbstractTestServerBase.java:68)
        at org.apache.cxf.systest.ws.rm.ClientPersistenceTest$Server.main(ClientPersistenceTest.java:106)
Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 75 in XML document from class path resource [org/apache/cxf/systest/ws/rm/persistent.xml] is invalid; nested exception is org.xml.sax.SAXParseException:src-resolve: Cannot resolve the name 'wsrmp:RMAssertion' to a(n) 'element declaration' component.
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:396)
        at org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader.doLoadBeanDefinitions(ControlledValidationXmlBeanDefinitionReader.java:115)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
        at org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader.internalLoadBeanDefinitions(ControlledValidationXmlBeanDefinitionReader.java:154)
        at org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader.access$0(ControlledValidationXmlBeanDefinitionReader.java:153)
        at org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader$1.run(ControlledValidationXmlBeanDefinitionReader.java:141)
        at org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader$1.run(ControlledValidationXmlBeanDefinitionReader.java:1)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader.loadBeanDefinitions(ControlledValidationXmlBeanDefinitionReader.java:139)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
        at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:122)
        at org.apache.cxf.bus.spring.BusApplicationContext.loadBeanDefinitions(BusApplicationContext.java:309)
        at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)
        at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)
        at org.apache.cxf.bus.spring.BusApplicationContext$1.run(BusApplicationContext.java:101)
        at org.apache.cxf.bus.spring.BusApplicationContext$1.run(BusApplicationContext.java:1)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:99)
        at org.apache.cxf.bus.spring.SpringBusFactory.createApplicationContext(SpringBusFactory.java:130)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:121)
        ... 5 more
Caused by: org.xml.sax.SAXParseException: src-resolve: Cannot resolve the name 'wsrmp:RMAssertion' to a(n) 'element declaration' component.
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:
195)
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaErr(XSDHandler.java:2537)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaError(XSDHandler.java:2528)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getGlobalDecl(XSDHandler.java:1396)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseLocal(XSDElementTraverser.java:160)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.traverseLocalElements(XSDHandler.java:2049)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:582)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:552)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2437)

        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1782)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
        at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:400)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2755)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
        at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:235)
        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)
        at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
        at org.apache.cxf.bus.spring.TunedDocumentLoader.loadDocument(TunedDocumentLoader.java:116)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
        ... 26 more

The import statement in wsrm-manager.xsd currently imports wsrm-policy.xsd from the same relative path, as

<xs:import namespace=""http://schemas.xmlsoap.org/ws/2005/02/rm/policy"" schemaLocation=""wsrm-policy.xsd""/>

which implies wsrm-policy.xsd resides in the same path as in wsrm-manager.xsd, which is located at http://cxf.apache.org/schemas/configuration/. However, this will not match the schema catalog entry for this schema:

http\://schemas.xmlsoap.org/ws/2005/02/rm/wsrm-policy.xsd=schemas/configuration/wsrm-policy.xsd

As wsrm-policy.xsd is a public schema, we should make wsrm-manager.xsd import wsrm-policy.xsd using its public location that matches the catalog file and let the catalog file resolve it to its local copy (so that it will also work without the internet connection).

That means, the import statement should be given as:

<xs:import namespace=""http://schemas.xmlsoap.org/ws/2005/02/rm/policy"" schemaLocation=""http://schemas.xmlsoap.org/ws/2005/02/rm/wsrm-policy.xsd""/>",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238408,,,Mon May 07 21:01:20 UTC 2012,,,,,,0|i0897z:,46093,,,,,,,,"07/May/12 21:01;ay;Fixing wsrm-manager.xsd for 2.6.x and 2.5.x and uploading the schema file to the web.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect code generated with wadl2java tool when use JAXB binding and XML symple type with restriction.,CXF-4292,12554125,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,cromody,cromody,07/May/12 08:34,05/Jun/12 13:31,14/Mar/19 02:30,08/May/12 12:37,,,,,,,,2.5.4,2.6.1,,,JAX-RS,,,,1,,,,,,,,"If we have an XML schema with a simpleType that has a restriction, the tool is not able to determine the basic type of java.


Example:

    <xs:simpleType name=""DetailType"">
        <xs:annotation>
            <xs:documentation>DetailType for WADL is used to indicate the possible values for a WADL Resource parameter. 
                This parameter specifies the desired amount of information to be returned. 
                For example, it is possible to instruct the web service to return only basic information about the maintainable artefact (i.e.: id, agency id, version and name). 
                Most notably, items of item schemes will not be returned (for example, it will not return the codes in a code list query). 
                Possible values are: ""allstubs"" (all artefacts should be returned as stubs ), ""referencestubs"" (referenced artefacts should be returned as stubs ) 
                and full (all available information for all artefacts should be returned ).
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base=""xs:string"">
            <xs:pattern value=""allstubs""/>
            <xs:pattern value=""referencestubs""/>
            <xs:pattern value=""full""/>
        </xs:restriction>
    </xs:simpleType>



And the generated code is:

@Path(""datastructure/{agencyID}/{resourceID}/{version}"")
public interface Datastructure {

    @GET
    @Produces(""application/vnd.sdmx.structure+xml;version=2.1"")
    StructureType MaintainableArtefactQuery(@QueryParam(""detail"") @DefaultValue(""full"") DetailType detail, @QueryParam(""references"") @DefaultValue(""none"") ReferencesType references);

}

But DetailType doen't have JAXB binding because is a simpleType (a String). The the correct code would be:

@Path(""datastructure/{agencyID}/{resourceID}/{version}"")
public interface Datastructure {

    @GET
    @Produces(""application/vnd.sdmx.structure+xml;version=2.1"")
    StructureType MaintainableArtefactQuery(@QueryParam(""detail"") @DefaultValue(""full"") String detail, @QueryParam(""references"") @DefaultValue(""none"") ReferencesType references);

}

Please run the attached code (mvn generate-sources with java parameters -Xms512M -Xmx1024M) to reproduce the issue. Then see for example the class ""Datastructure"".
",,,,,,,,,,,,,,,,,,,,07/May/12 08:35;cromody;cxf_2_6_0_wadl.zip;https://issues.apache.org/jira/secure/attachment/12525815/cxf_2_6_0_wadl.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-05-07 15:17:48.795,,,no_permission,,Unknown,,,,,,,,,,,238350,,,Tue May 08 12:36:25 UTC 2012,,,,,,0|i08987:,46094,,,,,,,,07/May/12 08:35;cromody;Example issue project,"07/May/12 15:17;sergey_beryozkin;I think the bug in 2.6.0 is about the missing java package import as opposed to the wrong code being generated.
In this case JAXB compiler must be generating a DetailType enum class. The fact it does not have JAXB annotations is not important because
it represents a query parameter, not the message payload and hence the processing rules are different.

Can you try 2.6.1-SNAPSHOT please ? You should see the imports section updated and the compilation succeeding
","08/May/12 08:07;cromody;I try with 2.6.1-SNAPSHOT but the issue until exist.

The JAXB Compiler dont generate DetailType class because is not needed. The same for all remaining params in the following example: 


	<resource_type id=""MaintainableArtefact"">
	    	<param name=""agencyID"" type=""types:NCNameIDType"" style=""template"" required=""false"" default=""all""/>
    		<param name=""resourceID"" type=""types:IDType"" style=""template"" required=""false"" default=""all""/> 
    		<param name=""version"" type=""types:VersionType"" style=""template"" required=""false"" default=""latest""/>
		<method name=""GET"" id=""maintainableArtefactQuery""> 
			<request> 
				<param name=""detail"" type=""types:DetailType"" style=""query"" default=""full""/>
				<param name=""references"" type=""types:ReferencesType"" style=""query"" default=""none""/>
			</request> 
			<response status=""200""> 
				<representation mediaType=""application/vnd.sdmx.structure+xml;version=2.1"" element=""message:Structure""/>
			</response> 
			<response status=""400 401 404 413 500 501 503""> 
				<representation mediaType=""application/vnd.sdmx.error+xml;version=2.1"" element=""message:Error""/> 
			</response> 
		</method>
	</resource_type>

Params and types:

agencyID --> types:NCNameIDType
resourceID --> types:IDType
version --> types:VersionType
detail --> types:DetailType
references --> types:ReferencesType

All are xs:simpletype with exensions {xs:union, xs:restriccion},but as we all represent parameters and in this case everyone should be String in JAXB generated code Class

See src/main/resources/wadl/sdmx21rest/SDMXRestTypes.xsd in the original attached. 

And behavior in getPrimitiveType method of cxf-tools-wadlto-jaxrs/org/apache/cxf/tools/wadlto/jaxrs/SourceGenerator.java

For now, a solution for me is omit the ""type"" in the definition of the parameters in the WADL because all my parameters are String.
","08/May/12 12:36;sergey_beryozkin;Yes, I recall now that JAXB will generate a dedicated class if a simpleType restriction offers an enumeration of values. In fact this issue is a regression caused by the code added to reference the generated enum types if any.
So I've updated the code to return 'String' in cases where the class name can not be determined - I guess this is the best that the generator can do...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wadl2java tool executing by cxf-wadl2java-plugin fails if run without tuning JAVA Garbage Collection,CXF-4291,12554116,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,cromody,cromody,07/May/12 07:21,05/Jun/12 13:31,14/Mar/19 02:30,28/May/12 12:19,2.6,,,,,,,2.5.4,2.6.1,,,JAX-RS,Tooling,,,1,,,,,,,,"With several examples tha includes distinct grammars external schemes, the wadl2java tool fails if no executed ""mvn generate-sources"" with memory tunning java params. The error message:
 

[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 8.815s
[INFO] Finished at: Mon May 07 08:13:29 BST 2012
[INFO] Final Memory: 5M/27M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.cxf:cxf-wadl2java-plugin:2.6.0:wadl2java (generate-sources) on project cxf_2_6_0_wadl: java.lang.RuntimeException: No XmlSchema in SchemaInfo -> [Help 1]
[ERROR] 


The problem is the class ""org.apache.cxf.service.model.SchemaInfo"" that uses ""org.apache.cxf.service.model.SoftReference"". This implies that
the garbage collector resets Namespaces declared in a previous import.


Example:

    <grammars>
        <include href=""../sdmx21/SDMXMessage.xsd""/>
    	<include href=""SDMXRestTypes.xsd""/>
    </grammars> 

And the SDMXRestTypes.xsd references SDMXMessage.xsd namespaces.



Executed maven task with for example -Xms512M -Xmx1024M is successful.


",,,,,,,,,,,,,,,,,,,,07/May/12 07:31;cromody;cxf_2_6_0_wadl.zip;https://issues.apache.org/jira/secure/attachment/12525809/cxf_2_6_0_wadl.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-05-07 16:05:09.386,,,no_permission,,Unknown,,,,,,,,,,,238340,,,Mon May 28 12:19:56 UTC 2012,,,,,,0|i0898f:,46095,,,,,,,,07/May/12 07:31;cromody;Example project with bug,"07/May/12 16:05;sergey_beryozkin;I've added the following hint to the WADL-first section:
""Note that the minimum and maximum memory limits may need to be increased when using the plugin to process large WADL documents, for example, add '-Xms512M -Xmx1024M' to the list of Maven options.""

IMHO this would be a good resolution to this issue ?","08/May/12 07:20;cromody;Is a quickly solution, i don't know if is a good resolution. The problem is the error message: ""java.lang.RuntimeException: No XmlSchema in SchemaInfo"", it not leads to the obvious solution to increase the heap space.But reading the doc is a good solution.

Thank you.","08/May/12 13:07;sergey_beryozkin;I agree. I see SourceGenerator does not initialize XmlSchema reference on SchemaInfo, but only its DOM Element representation.
I'll investigate later on what else can be done...","28/May/12 12:19;sergey_beryozkin;Hi, I can not reproduce an actual issue on my laptop, presumably due to it having enough memory for the schema compilation to succeed.

However, I updated the generator to attempt to prevent such issues,
http://svn.apache.org/viewvc?rev=1343210&view=rev

Please try with the snapshots or the soon to be released CXF 2.5.4 or 2.6.1, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SecureAnnotationsInterceptor maps roles only based on method name,CXF-4288,12553969,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,04/May/12 17:36,05/Jun/12 13:31,14/Mar/19 02:30,09/May/12 02:36,2.3.10,2.4.7,2.5.3,2.6,,,,2.3.11,2.4.8,2.5.4,2.6.1,Core,,,,0,,,,,,,,"The SecureAnnotationsInterceptor maps the roles into the method map only based on the method name.  If the class in question is using overloaded methods with different roles for each method, this can result in the wrong roles being applied to the authorization.   The map needs to take into account the params/returns as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,238187,,,2012-05-04 17:36:20.0,,,,,,0|i0898v:,46097,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WADLGenerator ignores header or query parameters when FormParam parameters are available,CXF-4285,12553774,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,03/May/12 15:04,05/Jun/12 13:31,14/Mar/19 02:30,03/May/12 15:40,,,,,,,,2.4.8,2.5.4,2.6.1,,JAX-RS,,,,0,,,,,,,,"Having a signature like this
{code:java}
@POST
@Consumes(@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
void form3(@HeaderParam(""headerId"") String headerId,
           @QueryParam(""queryId"") String queryId,
           @PathParam(""id"") String id, 
           @FormParam(""field1"") String f1);
{code}
will lead to WADLGenerator losing header and query parameters in the generated WADL. Having a query parameter alonside form parameters does not make much sense but is technically possible for POSTs. The loss of the header parameter is more serious",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,237981,,,2012-05-03 15:04:39.0,,,,,,0|i0899b:,46099,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix JAXB-based providers to report 400 for all read-related exceptions,CXF-4284,12553637,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,02/May/12 15:48,05/Jun/12 13:31,14/Mar/19 02:30,03/May/12 12:45,,,,,,,,2.3.11,2.4.8,2.5.4,2.6.1,JAX-RS,,,,0,,,,,,,,"JAXBElementProvider and JSONProvider already report 400 if JAXBException is thrown.
Both should also report 400 in case of the base Exceptions uncaught by earlier blocks, and JSONProvider - also in case of XMLStreamException",,,,,,,,,,,,,,,,,,,,03/May/12 09:42;govindps;AbstractJAXBProvider.java.patch;https://issues.apache.org/jira/secure/attachment/12525423/AbstractJAXBProvider.java.patch,03/May/12 09:42;govindps;JSONProvider.java.patch;https://issues.apache.org/jira/secure/attachment/12525424/JSONProvider.java.patch,03/May/12 09:37;govindps;JSONProviderTest.java.patch;https://issues.apache.org/jira/secure/attachment/12525421/JSONProviderTest.java.patch,,,,,3.0,,,,,,,,,,,,,,,,,,,,2012-05-03 09:37:40.734,,,no_permission,,Unknown,,,,,,,,,,,237828,,,Thu May 03 12:45:48 UTC 2012,,,,,,0|i0899j:,46100,,,,,,,,03/May/12 09:37;govindps;Test case,03/May/12 09:42;govindps;Provide more details about the exception to the client ,03/May/12 12:45;sergey_beryozkin;thanks for the patches,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OAuth 2-leg getAccessToken Error ,CXF-4283,12553625,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jordi,jordi,02/May/12 13:25,05/Jun/12 13:31,14/Mar/19 02:30,02/May/12 14:45,2.6,,,,,,,2.5.4,2.6.1,,,JAX-RS Security,,,,0,oauth,,,,,,,"After the preauthorized request token has been obtained, if we request the access token using org.apache.cxf.rs.security.oauth.client.OAuthClientUtils.getAccessToken() providing a null value for verifier, the following error occurs:

org.apache.cxf.rs.security.oauth.provider.OAuthServiceException: Status : 401
Headers : 
WWW-Authenticate : OAuth realm=""null"", oauth_problem=""verifier_invalid""
Date : Wed, 02 May 2012 13:07:58 GMT
Content-Length : 16
Content-Type : application/x-www-form-urlencoded
Server : Apache-Coyote/1.1

	at org.apache.cxf.rs.security.oauth.client.OAuthClientUtils.getToken(OAuthClientUtils.java:191)
	at org.apache.cxf.rs.security.oauth.client.OAuthClientUtils.getAccessToken(OAuthClientUtils.java:112)
	
 
As you can see, the request OAuth header sent includes an empty ""oauth_verifier"" parameter:

Authorization=[OAuth oauth_signature_method=""HMAC-SHA1"", oauth_consumer_key=""9ab45d4a483b10719b72c73fff513342aa814a9"", oauth_token=""afb0c0d63d948872aa4cfa07b75f6788e4a2a98"", oauth_verifier="""", oauth_timestamp=""1335964079"", oauth_nonce=""1335964079434845000"", oauth_version=""1.0"", oauth_signature=""4drUvMJ4pJm25QJkKIb6bSwKnio%3D""]

So, when processing the message at server side (inside AccessTokenHandler class) a non-null verifier parameter is obtained and its validation always fails:

String oauthVerifier = oAuthMessage.getParameter(OAuth.OAUTH_VERIFIER);
if (oauthVerifier == null) {
    if (requestToken.getSubject() != null && requestToken.isPreAuthorized()) {
        LOG.fine(""Preauthorized request token"");
    } else {
        throw new OAuthProblemException(OAuthConstants.VERIFIER_INVALID);
    }
} else if (!oauthVerifier.equals(requestToken.getVerifier())) {
    throw new OAuthProblemException(OAuthConstants.VERIFIER_INVALID);
}

I suppose changing org.apache.cxf.rs.security.oauth.client.OAuthClientUtils.getAccessToken() from:

Map<String, String> parameters = new HashMap<String, String>();
parameters.put(OAuth.OAUTH_CONSUMER_KEY, consumer.getKey());
parameters.put(OAuth.OAUTH_TOKEN, requestToken.getToken());
parameters.put(OAuth.OAUTH_VERIFIER, verifier);
parameters.put(OAuth.OAUTH_SIGNATURE_METHOD, ""HMAC-SHA1"");

to

Map<String, String> parameters = new HashMap<String, String>();
parameters.put(OAuth.OAUTH_CONSUMER_KEY, consumer.getKey());
parameters.put(OAuth.OAUTH_TOKEN, requestToken.getToken());
if (null!=verifier) parameters.put(OAuth.OAUTH_VERIFIER, verifier);
parameters.put(OAuth.OAUTH_SIGNATURE_METHOD, ""HMAC-SHA1"");

would solve the problem because a null ""oauth_verifier"" parameter wouldn't be sent",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-02 14:45:18.436,,,no_permission,,Novice,,,,,,,,,,,237814,,,Wed May 02 14:45:18 UTC 2012,,,,,,0|i0899r:,46101,,,,,,,,"02/May/12 14:45;sergey_beryozkin;Thanks for finding the cause of the problem. I fixed it at the AccessTokenService level (pre-authorized tokens are checked for missing or empty verifiers), I think it would be a bit safer given that in principle we can expect non CXF clients consuming CXF-based OAuth1.0 endpoints too",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
case insensitive MetadataMap keyset,CXF-4280,12553553,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,romain.manni-bucau,romain.manni-bucau,01/May/12 21:53,05/Jun/12 13:31,14/Mar/19 02:30,03/May/12 22:19,2.5.3,,,,,,,2.3.11,2.4.8,2.5.4,2.6.1,JAX-RS,,,,0,,,,,,,,"while working on TCK for openejb/tomee we needed to do it:

public class PatchedMetadataMap extends MetadataMap<String, String> {
    public PatchedMetadataMap(Map<String, List<String>> store, boolean ro, boolean ci) {
        super(store, ro, ci);
    }

    public Set<String> keySet() {
        Set<String> set = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);
        set.addAll(super.keySet());
        return set;
    }
}

any way to merge it in cxf?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-02 14:16:39.621,,,no_permission,,Unknown,,,,,,,,,,,237720,,,Wed May 02 19:18:12 UTC 2012,,,,,,0|i089a7:,46103,,,,,,,,"02/May/12 14:16;sergey_beryozkin;Hi, sure, can you please type some test code here which exposes the issue this fix will address ?
I'm trying to fail one of the existing MetadataTests by using different map operations and can not :-)

I can only think of the following:
{code:java}
 // create a case-insensitive map
 MetadataMap<String, Object> m = new MetadataMap<String, Object>(false, true);
 m.add(""Baz"", ""bar"");
 assertEquals(""bar"", m.getFirst(""Baz""));
 assertEquals(""bar"", m.getFirst(""baz""));

 // checks the key set itself
 Set<String> keys = m.keySet();
 assertEquals(1, keys.size());
 assertTrue(keys.contains(""Baz""));
 // this one currently fails
 assertTrue(keys.contains(""baz"")); 
{code}

Do you test the key set itself or do you get some application test due to the keySet() not use a case insensitive order on the trunk ?","02/May/12 14:45;romain.manni-bucau;if i remind correctly if the header key is tested in lowercase it fails because it is stored with some upper case (""Content-Type"").","02/May/12 15:13;sergey_beryozkin;Hi Romain, any chance you can offer a link to the code ? I have a couple of tests retrieving HttpHeader parameters in a case-insensitive way and it does seem to work. I think MetadataMap does need to be enhanced but I think it is only required on certain paths and I'm trying identify them with a failing test :-)","02/May/12 19:18;romain.manni-bucau;ok reproduced it your test is good for our failing one. We use keyset().

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Security ehcache things never shutdown,CXF-4279,12553522,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,01/May/12 19:16,05/Jun/12 13:31,14/Mar/19 02:30,09/May/12 16:14,2.5.3,2.6,,,,,,2.4.8,2.5.4,2.6.1,,WS-* Components,,,,0,,,,,,,,"
The two ehcache implementations (TokenStore and ReplayCache) create CacheManager instances.  However, nothing currently calls shutdown on the instances.   Since the cachemanager has a non-daemon thread pool, this blocks things like tomcat from shutting down cleanly. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,237688,,,2012-05-01 19:16:47.0,,,,,,0|i089af:,46104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf features.xml for CXF wants to load EhCache for cxf-sts-ws and cxf-ws-security,CXF-4278,12553367,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,snortasprocket,snortasprocket,30/Apr/12 13:55,05/Jun/12 13:31,14/Mar/19 02:30,07/May/12 07:07,2.6,,,,,,,2.6.1,,,,OSGi,,,,0,,,,,,,,"According to the [migration guide|http://cxf.apache.org/docs/26-migration-guide.html]:
{quote}
EhCache is now a compile time dependency of the cxf-rt-ws-security module to support caching and replay detection. It can be safely excluded downstream, at the expense of weakening the caching support.
{quote}
If that is the case, then why force a user to load a specific version of EhCache in the features.xml file for CXF? This breaks cases where, for instance, a user wants to use an EhCache compatible with old-school Hibernate (3.3.2) which requires net.sf.ehcache;version=[1.2.3, 2.0.0).

Furthermore, it appears that there is no version bounding on the optional import of net.sf.ehcache in cxf-ws-security, so theoretically, my already-loaded version of EhCache should work just fine with CXF. :D

Note: Setting this to a minor issue as it can be worked around by installing the features with {{--no-clean}} in Karaf and then removing the EhCache provided by CXF's features.
",Apache Karaf 2.2.6 + Felix OSGi Container,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-07 06:54:05.376,,,no_permission,,Moderate,,,,,,,,,,,237521,,,Mon May 07 07:25:49 UTC 2012,,,,,,0|i089an:,46105,,,,,,,,"07/May/12 06:54;ffang;Hi Scott,

Just want to clarify, installing higher version of ehcache won't prevent you to install lower version of ehcache. Even though you have ehcache bundle from cxf features, let's say the version is [2.5, ...), you still can install another ehcache bundle which version range meet the Hibernate requirement, multiple version of same lib can co-exist in OSGi container is big benefit by OSGi nature.

Back to this issue, yeah, I think we should remove ehcache bundle from cxf feature as it's compile time necessary only, we may also need add version range for the optional import net.sf.ehcache(likely [2.5.0, 3.0.0) in CXF to prevent it load some incompatible older net.sf.ehcache.

Freeman","07/May/12 07:07;ffang;commit fix
http://svn.apache.org/viewvc?rev=1334891&view=rev","07/May/12 07:18;ffang;Hi Scott,

Re-think about it, we need the ehcache bundle actually, without it, it will weaken the caching support.
I just add the optional import net.sf.ehcache version range. 
As I said before, installing higher version of ehcache won't prevent you to install lower version of ehcache.

Freeman
","07/May/12 07:25;ffang;add the ehcache bundle back
http://svn.apache.org/viewvc?rev=1334892&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STSClient does not use returned KeyInfo size when creating a secret key,CXF-4277,12553358,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,30/Apr/12 12:42,05/Jun/12 13:31,14/Mar/19 02:30,30/Apr/12 13:21,2.4.7,2.5.3,2.6,,,,,2.3.11,2.4.8,2.5.4,2.6.1,WS-* Components,,,,0,,,,,,,,"The STSClient does not use the returned KeyInfo size when creating a secret key. This means that it creates an incorrect secret key in the case where an STS rejects the submitted KeySize, and returns a different KeySize to the client.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,237512,,,2012-04-30 12:42:58.0,,,,,,0|i089av:,46106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sample readme file incorrect,CXF-4275,12553313,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,martin.spamer,martin.spamer,30/Apr/12 07:43,05/Jun/12 13:31,14/Mar/19 02:30,30/Apr/12 08:51,2.5.3,2.6,,,,,,2.4.8,2.5.4,2.6.1,,Samples,,,,0,doc,README,samples,,,,,"The .\samples\README.txt file contains the command

""mvn build install""

however ""build"" is not a valid maven life cycle target.",All,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,237449,,,Mon Apr 30 07:45:28 UTC 2012,,,,,,0|i089bb:,46108,,,,,,,,"30/Apr/12 07:45;martin.spamer;I've made this major because while easily side stepped it would stop a novice, whom would be the target of this README file from building the samples.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebClient.create(proxy) - does not exist,CXF-4273,12553249,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,aster.anto,aster.anto,28/Apr/12 13:21,19/Dec/12 14:43,14/Mar/19 02:30,30/Apr/12 16:39,2.6,,,,,,,,,,,Documentation,,,,0,documentation,,,,,,,"Referring to http://cxf.apache.org/docs/jax-rs-client-api.html

Method matching the following does not exist.

{noformat}WebClient client = WebClient.create(proxy);{noformat}

However, I got a WebClient from proxy by,

{noformat}BookStore proxy = JAXRSClientFactory.create(""http://books"", BookStore.class);
Client client = WebClient.client(proxy);
WebClient webClient = WebClient.fromClient(client);{noformat}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-04-29 15:26:31.476,,,no_permission,,Unknown,,,,,,,,,,,237349,,,Mon Apr 30 16:39:39 UTC 2012,,,,,,0|i0tk5j:,170574,,,,,,,,"29/Apr/12 15:26;sergey_beryozkin;Please see

https://cwiki.apache.org/confluence/display/CXF20DOC/JAX-RS+Client+API","29/Apr/12 19:21;aster.anto;{noformat}WebClient client = WebClient.client(proxy);{noformat}

I fear that is not correct. What ""WebClient.client(proxy)"" returns is a ""Client"" not a ""WebClient"". We cannot cast ""Client"" to ""WebClient"" as well.","30/Apr/12 08:47;sergey_beryozkin;You are right, can you verify the latest update ?

I wonder if WebClient.fromClient(Client) should be updated to WebClient.fromClient(Object) which would internally delegate to WebClient.client(object), to get the proxy to WebClient conversion simpler...  ","30/Apr/12 10:48;aster.anto;Well, site seems to be okay now. I couldn't find any delegation in ""WebClient.fromClient(Client)"" method as you mentioned. Yes, it is been taken to the next method -""WebClient fromClient(Client client, boolean inheritHeaders)"" but then again a new ""WebClient"" is being created there based on the existing client. 

To make proxy to WebClient conversion simpler, May be we can try

{noformat}WebClient webClient =  WebClient.fromClient((Client) proxy);{noformat}  

The only advantage ""WebClient.client(proxy)"" method provides is the instanceof expression, other than that, ""WebClient.client(proxy)"" method is just doing the casting.
Still I feel, its better to keep it the way it is now. Simple and less confusion for an average reader.","30/Apr/12 16:39;sergey_beryozkin;I was referring to the possible improvement, however, I guess it should be left as is at the moment, given that the proxy to/from http client conversions are not the typical operations, having to convert a proxy to the typed Client explicitly and then passing a Client ref to the typed fromClient method seems OK to me...
Btw, I'm resolving this specific documentation issue as fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
net.sf.cglib import version range is wrong,CXF-4271,12553142,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,27/Apr/12 13:59,05/Jun/12 13:31,14/Mar/19 02:30,27/Apr/12 14:02,2.6,,,,,,,2.6.1,,,,Core,,,,0,,,,,,,,"
The import for net.sf.cglib is set to version=""[2.1.3, 2.2.0)"".   However, CXF builds and tests with 2.2_1.   Thus, the range should either be set to [2.2, 2.3) or at least increase the upper bounds.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,237189,,,2012-04-27 13:59:54.0,,,,,,0|i089br:,46110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In some cases, the javascript client will not output the ns declaration for wrapper element of an rpc/lit method",CXF-4269,12553034,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,26/Apr/12 20:53,05/Jun/12 13:31,14/Mar/19 02:30,26/Apr/12 21:09,2.4.7,2.5.3,2.6,,,,,2.3.11,2.4.8,2.5.4,2.6.1,JavaScript Client,,,,0,,,,,,,,"
The javascript generator collects the namespace prefix for the RPC wrapper element AFTER the list of prefixes has been written out.  Thus, if something else hasn't happened to add the namespace to the list, the resulting XML is invalid.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,236896,,,2012-04-26 20:53:10.0,,,,,,0|i089c7:,46112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WADL 2 Java doesn't respect catalogs,CXF-4268,12552874,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,26/Apr/12 16:46,02/May/13 02:29,14/Mar/19 02:30,26/Apr/12 16:57,2.5.3,2.6,,,,,,2.4.8,2.5.4,2.6.1,,Tooling,,,,0,,,,,,,,"
The WADL 2 java tools does not allow use of the catalogs for resolving schemas.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,236798,,,2012-04-26 16:46:11.0,,,,,,0|i089cf:,46113,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A NPE in AttatchmentDataSource could be guarded.,CXF-4267,12552816,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,dkulp,fugu,fugu,26/Apr/12 08:55,05/Jun/12 13:31,14/Mar/19 02:30,26/Apr/12 16:56,2.5.2,,,,,,,2.3.11,2.4.8,2.5.4,2.6.1,JAX-WS Runtime,,,,0,,,,,,,,"If I do a release a hold on a DataSource like this:

void release(DataSource ds) throws IOException {
  AttachmentDataSource ads = getAttachmentDataSource(ds);
  if (ads != null) {
    // tell attachment to hold the temporary file;
    ads.release();
  }
}

and the ads.isCached() is false, I get a NPE. I know that without a hold() there should be no release(), but sometimes it may happen anyway (e.g. in finally blocks), and then it would not be necesarry to check isCahced() before.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,236799,,,Thu Apr 26 17:01:31 UTC 2012,,,,,,0|i089cn:,46114,,,,,,,,"26/Apr/12 17:01;fugu;Boy, are you guys fast! Glad we switched from Axis2 to CXF :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot add CXF Karaf Features due to typo in features.xml,CXF-4266,12552774,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,snortasprocket,snortasprocket,26/Apr/12 01:56,30/Apr/12 13:56,14/Mar/19 02:30,26/Apr/12 07:58,2.6,,,,,,,2.6.1,,,,,,,,0,features,karaf,,,,,,"{noformat}
[INFO] Copying bundle: org.apache.servicemix.bundles:org.apache.servicemix.bundles.oauthprovider:jar:20100527_1
.
.
.
[ERROR] Failed to execute goal org.apache.karaf.tooling:features-maven-plugin:2.2.6:add-features-to-repo (add-features-to-repo) on project com.ateb.myx.kernel: Can't resolve bundle org.apache.servicemix.bundles:org.apache.servicemix.bundles.oauthprovider:jar:20100527_1: Could not find artifact org.apache.servicemix.bundles:org.apache.servicemix.bundles.oauthprovider:jar:20100527_1 in ateb-maven-releases (http://maven.ateb.com/archiva/repository/internal)
{noformat}

I think the correct artifact is [org.apache.servicemix.bundles:org.apache.servicemix.bundles.oauth-provider|http://search.maven.org/#artifactdetails%7Corg.apache.servicemix.bundles%7Corg.apache.servicemix.bundles.oauth-provider%7C20100527_1%7Cbundle].",Building Karaf 2.2.6 derivative with Apache CXF 2.6.0.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-04-26 07:59:00.849,,,no_permission,,Novice,,,,,,,,,,,236800,,,Mon Apr 30 13:56:17 UTC 2012,,,,,,0|i089cv:,46115,,,,,,,,26/Apr/12 07:59;njiang;Just updated the feature file with thanks to ,30/Apr/12 13:56;snortasprocket;Closing as I have verified that this is fixed in the most recent snapshot of CXF.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential NPE when Soap fault has no role,CXF-4265,12552350,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,24/Apr/12 17:42,05/Jun/12 13:31,14/Mar/19 02:30,24/Apr/12 19:06,2.3.10,2.4.7,2.5.3,2.6,,,,2.3.11,2.4.8,2.5.4,2.6.1,JAX-WS Runtime,,,,0,,,,,,,,"
If a SoapFault does not have a ""role"" or ""actor"" defined, the JAX-WS frontend will NPE when converting that to a SOAPFault.

{code}
Exception in thread ""main"" java.lang.NullPointerException
        at
com.sun.xml.messaging.saaj.soap.impl.ElementImpl.addTextNode(ElementImpl.java:454)
        at
com.sun.xml.messaging.saaj.soap.ver1_2.Fault1_2Impl.setFaultRole(Fault1_2Impl.java:338)
        at
com.sun.xml.messaging.saaj.soap.ver1_2.Fault1_2Impl.setFaultActor(Fault1_2Impl.java:574)
        at
org.apache.cxf.jaxws.JaxWsClientProxy.createSoapFault(JaxWsClientProxy.java:219)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,236801,,,2012-04-24 17:42:04.0,,,,,,0|i089d3:,46116,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
oauth sample in 2.5.3 release does not build without POM changes,CXF-4262,12552205,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,jpangburn,jpangburn,23/Apr/12 21:38,05/Jun/12 13:31,14/Mar/19 02:30,01/Jun/12 15:25,2.5.3,,,,,,,2.5.4,2.6.1,,,Samples,,,,0,oauth,samples,,,,,,"Tried building oauth client and server samples in 2.5.3 release using provided instruction:
mvn jetty:run
Also tried:
mvn clean install
These attempts in both client and server fail with the following relevant exception from the stack trace:
*****
Caused by: org.apache.maven.project.ProjectBuildingException: POM 'org.apache.cxf.samples:cxf-samples' not found in repository: Unable to download the artifact from any repository

  org.apache.cxf.samples:cxf-samples:pom:2.5.3-SNAPSHOT
*****

Looking in the pom.xml file for this 2.5.3-SNAPSHOT problem, I find this entry:
<version>2.5.3-SNAPSHOT</version>

Changing it to the following resolves the problem and lets the samples build:
<version>2.5.3</version>

The client now starts with ""mvn jetty:run"", but the server still fails with an apparently unrelated error.  Still, at least it builds with this change.

The server error is:
java.lang.NoSuchMethodError: org.objectweb.asm.ClassWriter.<init>(Z)V

This is apparently due to the use of cglib in the pom.xml.  It can be resolved and let the server start by changing this entry in the pom.xml:
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.1</version>
        </dependency>
to this:
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.1</version>
        </dependency>

After this it is possible to start ""mvn jetty:run"" with no errors, though I don't know enough about the sample to verify its functionality yet.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-04-24 13:05:37.157,,,no_permission,,Unknown,,,,,,,,,,,236804,,,Wed Apr 25 12:27:46 UTC 2012,,,,,,0|i089db:,46117,,,,,,,,24/Apr/12 13:05;sergey_beryozkin;Please check CXF examples at https://github.com/Talend/tesb-rt-se/tree/master/examples/cxf for a more advanced demonstration of the current OAuth support in CXF,"25/Apr/12 01:02;jpangburn;That is a better example in many ways, the only thing I don't like is that both client and server endpoints reside on the same port.  The sample that comes with CXF has them on different ports so it's easy to see what stuff belongs to the client service and what belongs to the server service.

That said, are the examples in the CXF source code not maintained anymore?  Seems like they should at least compile and run, even if they're not the most advanced samples around.

thanks,
Jesse","25/Apr/12 12:27;sergey_beryozkin;> That is a better example in many ways, the only thing I don't like is that both client and server endpoints reside on the same port
Agreed, running the client web application in a different container instance would be better/clearer.
The other enhancement that would need to go into a demo is to with getting the Authorization Service running in its own container too - that will be easier to do once we have some SSO solution in place. We can consider also having a collocated Authorization Service interposing the remote one...

> That said, are the examples in the CXF source code not maintained anymore? Seems like they should at least compile and run, even if they're not the most advanced samples around.

They are, the cglib issue was fixed in 2.6.-SNAPSHOT and Glen and myself tested this very demo. Right now though the oauth demo plus a couple of others, are not referenced from the parent pom, hence the CXF version in the released oauth demo have not been updated both on the trunk & 2.5.x. We'll sort it out in time for the next release 
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Poor recommendations in maven-cxf-codegen-plugin-wsdl-to-java.html,CXF-4260,12552126,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,gmazza,jglick@netbeans.org,jglick@netbeans.org,23/Apr/12 13:00,14/Jun/12 17:54,14/Mar/19 02:30,14/Jun/12 16:52,,,,,,,,,,,,Documentation,,,,0,,,,,,,,"I added a comment https://cwiki.apache.org/confluence/display/CXF20DOC/Maven+cxf-codegen-plugin+%28WSDL+to+Java%29?focusedCommentId=27843292#comment-27843292 hoping it would appear automatically at some point in the published documentation at http://cxf.apache.org/docs/maven-cxf-codegen-plugin-wsdl-to-java.html but it did not.

Also suggest adding a default value for {{testSourceRoot}} of {{$\{project.build.directory}/generated-test-sources/cxf}}.

Background: http://netbeans.org/bugzilla/show_bug.cgi?id=189134",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-06-14 14:28:26.352,,,no_permission,,Unknown,,,,,,,,,,,236806,,,Thu Jun 14 17:54:14 UTC 2012,,,,,,0|i1agnj:,269164,,,,,,,,"14/Jun/12 14:28;gmazza;OK, I've updated the documentation to remove most of the sourceRoot overrides that were falsely implying the need to keep overriding this value, and also added a recommendation to stick with the default.  I'm looking at the generated-test-sources issue now.

",14/Jun/12 16:51;gmazza;The present implementation of the codegen plugin relies on the presence or absence of a value of testSourceRoot to determine whether to generate during the compile or test-compile phase (it presently doesn't have a capability to do both).  So given its present implementation I think we'll need to keep the default for testSourceRoot to null for the time being.,14/Jun/12 16:52;gmazza;Confluence docs updated.,"14/Jun/12 16:53;gmazza;Closing, just a Confluence change so not tied to a source code release.","14/Jun/12 17:54;jglick@netbeans.org;""determine whether to generate during the compile or test-compile phase"" - conventionally I think you would have distinct mojos for these, each specifying its default phase. The existing goal could be kept for compatibility but deprecated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS Set-Cookie handler needs to ignore Expires property,CXF-4259,12552108,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,23/Apr/12 10:28,05/Jun/12 13:31,14/Mar/19 02:30,23/Apr/12 11:12,,,,,,,,2.3.11,2.4.8,2.5.4,2.6.1,JAX-RS,,,,0,,,,,,,,"JAX-RS NewCookie utility class is not ready yet for dealing with the optional Expires property, and the CXF handler needs to be updated to ignore this property for now",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,236807,,,2012-04-23 10:28:20.0,,,,,,0|i089dr:,46119,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in OnlySignEntireHeadersAndBody policy validation when the STR Transform is used,CXF-4254,12551781,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,20/Apr/12 13:16,05/Jun/12 13:31,14/Mar/19 02:30,20/Apr/12 13:16,2.4.7,2.5.3,2.6,,,,,2.4.8,2.5.4,2.6.1,,,,,,0,,,,,,,,"
There is a NPE in OnlySignEntireHeadersAndBody policy validation when the STR Transform is used, and the transformed element is not included in the SOAP request. In this case, the WSDataRef corresponding to the signed reference will have no XPath expression, something that will cause a NPE in CXF.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,236588,,,2012-04-20 13:16:46.0,,,,,,0|i089ef:,46122,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WADL To Java Generator fails to process application level method elements ,CXF-4250,12551685,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,19/Apr/12 21:41,05/Jun/12 13:31,14/Mar/19 02:30,19/Apr/12 21:59,2.5.3,2.6,,,,,,2.5.4,2.6.1,,,JAX-RS,,,,0,,,,,,,,The generator throws a ClassCastException if a WADL method is declared as a child of the wadl:application element,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,236493,,,2012-04-19 21:41:11.0,,,,,,0|i089ev:,46124,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS databinding support for JiBX,CXF-4245,12551373,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,doncorley,doncorley,18/Apr/12 08:11,05/Jun/12 13:31,14/Mar/19 02:30,23/Apr/12 15:17,2.6,,,,,,,2.5.4,2.6.1,,,OtherDatabindings,,,,0,databinding,jax-rs,JiBX,,,,,"Dan,
Thanks again for writing the databinding components for JiBX.
Unfortunately, the JAX-RS component calls empty methods when I try to use this databinding component.
This seems to fix the problem:
---start patch
Index: rt/databinding/jibx/src/main/java/org/apache/cxf/jibx/JibxDataWriter.java
===================================================================
--- rt/databinding/jibx/src/main/java/org/apache/cxf/jibx/JibxDataWriter.java	(revision 1327050)
+++ rt/databinding/jibx/src/main/java/org/apache/cxf/jibx/JibxDataWriter.java	(working copy)
@@ -40,6 +40,15 @@
 public class JibxDataWriter implements DataWriter<XMLStreamWriter> {
 
     public void write(Object obj, XMLStreamWriter output) {
+        try {
+            IBindingFactory factory = BindingDirectory.getFactory(obj.getClass());
+            IMarshallingContext ctx = getMarshallingContext(obj);
+            StAXWriter writer = new StAXWriter(factory.getNamespaces(), output);
+            ctx.setXmlWriter(writer);
+            ((IMarshallable)obj).marshal(ctx);
+        } catch (Exception e) {
+            throw new RuntimeException(e);
+        }
     }
 
     public void write(Object obj, MessagePartInfo part, XMLStreamWriter output) {
Index: rt/databinding/jibx/src/main/java/org/apache/cxf/jibx/JibxDataReader.java
===================================================================
--- rt/databinding/jibx/src/main/java/org/apache/cxf/jibx/JibxDataReader.java	(revision 1327050)
+++ rt/databinding/jibx/src/main/java/org/apache/cxf/jibx/JibxDataReader.java	(working copy)
@@ -62,7 +62,12 @@
     }
 
     public Object read(QName elementQName, XMLStreamReader input, Class<?> type) {
-        throw new UnsupportedOperationException(""Not Implemented"");
+        try {
+            UnmarshallingContext ctx = getUnmarshallingContext(input, type);
+            return ctx.unmarshalElement(type);
+        } catch (JiBXException e) {
+            throw new RuntimeException(e);
+        }
     }
 
     public void setAttachments(Collection<Attachment> attachments) {
--- end patch
I have a sample project at if you want to see a working configuration:
https://github.com/jibx/maven-plugin/tree/master/examples/cxf-jaxrs

Remember to shutdown karaf after install, before start to avoid a karaf wiring bug.

Thanks!
Don",All Environments,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-04-23 15:17:23.81,,,no_permission,,Unknown,,,,,,,,,,,236237,,,Mon Apr 23 15:17:23 UTC 2012,,,,,,0|i089fz:,46129,,,,,,,,"23/Apr/12 15:17;sergey_beryozkin;Patch with an additional test has been applied, thanks.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutTransformWriter's defaultNamespace setting may not replace all default namespace declarations,CXF-4244,12551287,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,17/Apr/12 19:44,05/Jun/12 13:31,14/Mar/19 02:30,17/Apr/12 20:40,2.5.3,,,,,,,2.5.4,2.6.1,,,Core,,,,0,,,,,,,,"With CXF-4176, OutTransformWriter preserves the namespace prefixes except for the empty prefix (i.e., the default namespace) in a special case, namely when OutTransformWriter's defaultNamespace property is set to a non-null string to assign the empty prefix for a different namespace.

Given an input XML:
<test xmlns=""http://bar""><a>1</a></test>

when the defaultNamespace property is set to e.g., """", the output should look like:
<ps1:test xmlns:ps1=""http://bar""><ps1:a>1</ps1:a></ps1:test>

However, the output XML instead resulted as:
<ps1:test xmlns:ps1=""http://bar"" xmlns=""http://bar""><a>1</a></ps1:test>

Logically, this is still valid. However, the intention of this property is lost. Thus, it needs to be corrected to generate the expected output.




",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,236151,,,2012-04-17 19:44:12.0,,,,,,0|i089g7:,46130,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestImpl.selectVariant() using wrong headers,CXF-4243,12551284,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sharathp,sharathp,17/Apr/12 19:13,05/Jun/12 13:31,14/Mar/19 02:30,23/Apr/12 11:13,2.3.1,,,,,,,2.3.11,2.4.8,2.5.4,2.6.1,JAX-RS,,,,0,conneg,cxf-frontend,,,,,,"org.apache.cxf.jaxrs.impl.RequestImpl
******
public Variant selectVariant(List<Variant> vars) throws IllegalArgumentException {
        if (vars == null || vars.isEmpty()) {
            throw new IllegalArgumentException(""List of Variants is either null or empty"");
        }
        MediaType inMediaType = headers.getMediaType();
        Locale inLang = headers.getLanguage();
        String inEnc = headers.getRequestHeaders().getFirst(HttpHeaders.CONTENT_ENCODING);
.....
}
******

In order to select the correct variant (conneg), Accept-* headers should be used, therefore headers.getAcceptableMediaTypes(), headers.getAcceptableLanguages() and headers.getRequestHeaders().getFirst(ACCEPT_ENCODING) should be used instead of headers.getMediaType(), headers.getLanguage() and headers.getRequestHeaders().getFirst(HttpHeaders.CONTENT_ENCODING).



",cxf-rt-frontend-jaxrs-2.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,236148,,,2012-04-17 19:13:02.0,,,,,,0|i089gf:,46131,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF WSN cannot run offline in Karaf,CXF-4240,12551064,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,zbeothy,zbeothy,16/Apr/12 13:47,21/May/17 02:38,14/Mar/19 02:30,24/Apr/12 20:59,2.5.2,2.6,,,,,,2.5.4,2.6.1,,,Services,,,,0,,,,,,,,"I am running cxf within Karaf. If am without connection to Maven Central and try to install and start the feature cxf-wsn I get the following exception:

{noformat}
org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to intialize bean createPullPoint
	at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:638)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:724)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:64)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.di.RefRecipe.internalCreate(RefRecipe.java:60)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:64)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:219)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BlueprintRepository.createInstance(BlueprintRepository.java:198)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BlueprintRepository.create(BlueprintRepository.java:137)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.ServiceRecipe.createRecipe(ServiceRecipe.java:370)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.ServiceRecipe.createService(ServiceRecipe.java:278)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.ServiceRecipe.internalGetService(ServiceRecipe.java:248)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.ServiceRecipe.internalCreate(ServiceRecipe.java:140)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:64)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:219)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:147)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:640)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:331)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:227)[10:org.apache.aries.blueprint:0.3.1]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)[:1.6.0_31]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)[:1.6.0_31]
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)[:1.6.0_31]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)[:1.6.0_31]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:206)[:1.6.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)[:1.6.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)[:1.6.0_31]
	at java.lang.Thread.run(Thread.java:680)[:1.6.0_31]
Caused by: javax.xml.ws.WebServiceException: org.apache.ws.commons.schema.XmlSchemaException: Unable to locate imported document at 'http://www.w3.org/2006/03/addressing/ws-addr.xsd', relative to 'schema4.xsd'.
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:357)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:246)
	at org.apache.cxf.wsn.services.JaxwsEndpointManager.register(JaxwsEndpointManager.java:54)
	at org.apache.cxf.wsn.services.OSGiJaxwsEndpointManager.register(OSGiJaxwsEndpointManager.java:54)
	at org.apache.cxf.wsn.AbstractEndpoint.register(AbstractEndpoint.java:56)
	at org.apache.cxf.wsn.AbstractCreatePullPoint.init(AbstractCreatePullPoint.java:67)
	at org.apache.cxf.wsn.jms.JmsCreatePullPoint.init(JmsCreatePullPoint.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.6.0_31]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)[:1.6.0_31]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)[:1.6.0_31]
	at java.lang.reflect.Method.invoke(Method.java:597)[:1.6.0_31]
	at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:226)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BeanRecipe.invoke(BeanRecipe.java:824)[10:org.apache.aries.blueprint:0.3.1]
	at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:636)[10:org.apache.aries.blueprint:0.3.1]
	... 25 more
Caused by: org.apache.ws.commons.schema.XmlSchemaException: Unable to locate imported document at 'http://www.w3.org/2006/03/addressing/ws-addr.xsd', relative to 'schema4.xsd'.
	at org.apache.cxf.catalog.CatalogXmlSchemaURIResolver.resolveEntity(CatalogXmlSchemaURIResolver.java:76)
	at org.apache.ws.commons.schema.SchemaBuilder.resolveXmlSchema(SchemaBuilder.java:684)
	at org.apache.ws.commons.schema.SchemaBuilder.handleImport(SchemaBuilder.java:538)
	at org.apache.ws.commons.schema.SchemaBuilder.handleSchemaElementChild(SchemaBuilder.java:1513)
	at org.apache.ws.commons.schema.SchemaBuilder.handleXmlSchemaElement(SchemaBuilder.java:659)
	at org.apache.ws.commons.schema.SchemaBuilder.build(SchemaBuilder.java:157)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:497)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:483)
	at org.apache.cxf.common.xmlschema.SchemaCollection.read(SchemaCollection.java:133)
	at org.apache.cxf.databinding.AbstractDataBinding.addSchemaDocument(AbstractDataBinding.java:192)
	at org.apache.cxf.databinding.AbstractDataBinding.addSchemaDocument(AbstractDataBinding.java:95)
	at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:353)
	at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:86)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:474)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:685)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:536)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:248)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:205)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:159)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:207)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:442)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:329)
	... 38 more
{noformat}
","jdk 1.6, Karaf 2.2.5",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-05-21 02:38:57.0,,,no_permission,,Unknown,,,,,,,,,,,235928,,,Sun May 21 02:38:57 UTC 2017,,,,,,0|i089gn:,46132,,,,,,,,21/May/17 02:38;spyhunter99;what was the resolution for this?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring JAXRSClientFactoryBeanDefinitionParser reports a wrong factory bean class,CXF-4238,12550593,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,11/Apr/12 21:50,23/Apr/12 16:45,14/Mar/19 02:30,11/Apr/12 22:08,,,,,,,,2.3.11,2.4.8,2.5.3,2.6,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,235457,,,2012-04-11 21:50:11.0,,,,,,0|i0b68f:,63122,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS JAASAuthenticatingFilter leaks SecurityException,CXF-4234,12550377,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,10/Apr/12 14:09,23/Apr/12 16:45,14/Mar/19 02:30,10/Apr/12 14:10,,,,,,,,2.5.3,2.6,,,,,,,0,,,,,,,,JAASAuthenticatingFilter is a wrapper around JAASLoginInterceptor and is supposed to return 401 in case of the missing HTTP Authorization header or failed logins. At the moment it leaks SecurityException that JAASLoginInterceptor throws in case of missing (Basic) authorization data which results in the browser reporting 500 instead of popping up the Authenticate window,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,235242,,,Tue Apr 10 14:10:18 UTC 2012,,,,,,0|i1agpb:,269172,,,,,,,,"10/Apr/12 14:10;sergey_beryozkin;http://svn.apache.org/viewvc?rev=1311716&view=rev
http://svn.apache.org/viewvc?rev=1311719&view=rev
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Incorrect handling of ""If-None-Match"" and ""If-Modified-Since"" request header combination",CXF-4231,12549791,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jengehau,jengehau,05/Apr/12 20:50,23/Apr/12 16:45,14/Mar/19 02:30,06/Apr/12 09:28,2.5,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,,,,,,,,"I have a case where I set both a (weak) ""ETag"" and a ""Last-Modified"" response header. I noticed
that javax.ws.rs.core.Request.evaluatePreconditions(Date, EntityTag) unexpectedly returns a
response builder with status code 304 when the ETags differ but the last modified dates are
identical. This is because after the failing check against the ETag the current code simply performs
the check against the timestamp. According to RFC 2616, section 14.26 (http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html):
""If none of the entity tags match, then the server MAY perform the requested method as if the If-None-Match header field did not exist, but MUST also ignore any If-Modified-Since header field(s) in the request. That is, if no entity tags match, then the server MUST NOT return a 304 (Not Modified) response.""
This is currently not the case.
 
This code change works for my case, but some deeper thought needs to be given to possible
request header combinations (If-Match/If-None-Match and If-Modified-Since):
 
    public ResponseBuilder evaluatePreconditions(Date lastModified, EntityTag eTag) {
        final ResponseBuilder rb = evaluatePreconditions(eTag);
        if (rb != null) {
            // the ETag conditions match; so now conditions for last modified must match
            return evaluatePreconditions(lastModified);
        } else {
            // the ETag conditions do not match, so last modified should be ignored
            // see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html (section 14.26 for
            // ""If-None-Match"", behavior not specified for ""If-Match"", section 14.24)
            return null;
        }
    }
 
I assume that the most typical behavior for a browser is to send If-None-Match and If-Modified-Since,
and this case is currently not working.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-04-06 09:28:04.544,,,no_permission,,Unknown,,,,,,,,,,,234782,,,Fri Apr 06 15:58:04 UTC 2012,,,,,,0|i0b6a7:,63130,,,,,,,,"06/Apr/12 09:28;sergey_beryozkin;Jan, thanks for the patch, applied to the trunk and all the active branches.","06/Apr/12 10:22;jengehau;Hi Sergey, thanks for putting the patch in. As I said this now works as I expect, but I am not totally sure about other combinations.","06/Apr/12 15:58;sergey_beryozkin;It appears to me that ""the compare the tags first, and check the dates only if the tags match"" is very reasonable and as you said it's the most typical case where the pair of these headers is used, we can definitely enhance the code if there is a more accepted approach toward handling the other combinations :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AttachmentDeserializerTest contains buggy code for reading an InputStream.,CXF-4227,12549558,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,andreas.krueger@dv-ratio.com,andreas.krueger@dv-ratio.com,04/Apr/12 19:47,23/Apr/12 16:45,14/Mar/19 02:30,06/Apr/12 09:49,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,WS-* Components,,,,0,patch,,,,,,,"Browsing through the CXF code, I stumbled over the following in AttachmentDeserializerTest, method testCXF3383():

{code}
for (int x = 1; x < 50; x++) {
    String cid = ""1882f79d-e20a-4b36-a222-7a75518cf395-"" + x + ""@cxf.apache.org"";
    DataSource ds = AttachmentUtil.getAttachmentDataSource(cid, message.getAttachments());
    byte bts[] = new byte[1024];
            
    InputStream ins = ds.getInputStream();
    int count = ins.read(bts, 0, bts.length);
    int sz = ins.read(bts, count, bts.length - count);
    while (sz != -1) {
        sz = ins.read(bts, count, bts.length - count);
    }
    assertEquals(x + 1, count);
}
{code}

I think some ""count += sz"" has been forgotten. Details:

* The while-loop does nothing to change the test result.
* Endless loop, should ""ins"" ever deliver 1025 bytes or more.
* (If ""ins"" is 0 bytes, then count will be -1.)
* The fix is obvious, I'll attach a patch.

The problem does not show as long as ""ins"" contains less than 1024 bytes and all its content is delivered with the first read operation. So no functional impairment, just code hygiene.",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,04/Apr/12 19:51;andreas.krueger@dv-ratio.com;AttachmentDeserializerTest.patch;https://issues.apache.org/jira/secure/attachment/12521377/AttachmentDeserializerTest.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-04-06 09:49:58.959,,,no_permission,,Novice,,,,,,,,,,,234549,,,Fri Apr 06 09:49:58 UTC 2012,,,,,,0|i0b6gf:,63158,,,,,,,,04/Apr/12 19:51;andreas.krueger@dv-ratio.com;The patch I promised.,"06/Apr/12 09:49;ffang;Apply patch on behalf of Andreas Krüger with thanks 
http://svn.apache.org/viewvc?rev=1310200&view=rev for trunk
http://svn.apache.org/viewvc?rev=1310214&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1310216&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1310218&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"@Description on class level not ""inherited""",CXF-4226,12549493,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,jboch,jboch,04/Apr/12 12:34,23/Apr/12 16:45,14/Mar/19 02:30,11/Apr/12 14:40,2.5.3,,,,,,,2.6,,,,,,,,0,,,,,,,,"This is really a minor one: if you define a resource via interface


{code}@Description(title = ""My resource"")
interface AResource {


@GET
@Description(title = ""bar"")
Response foo();

}{code}

and then implement it:

{code}class ResourceImpl implements AResource{

@PathParam(""id"")
protected int id;

@Context
private HttpHeaders httpHeaders;
	
@Context
protected UriInfo uriInfo;

public Response foo(){
 return Response.ok().build();
}

}{code}


Then the generated WADL document will contain the method description (""bar"") but not the resource level description (""My resource"").


Workaround: annotate concrete implementation classes - this is of course rather tedious.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-04-05 14:17:10.83,,,no_permission,,Unknown,,,,,,,,,,,234484,,,Wed Apr 11 14:40:11 UTC 2012,,,,,,0|i0b67b:,63117,,,,,,,,"05/Apr/12 14:17;sergey_beryozkin;Can you confirm please with 2.5.3-SNAPSHOT it is working as expected ?
thanks","10/Apr/12 12:07;jboch;Hi, I tried 20120403.080549 snapshot of 2.5.3 and this still happens (when I move annotation from implementation to interface it's not included in the generated WADL)",10/Apr/12 12:08;jboch;I fixed an error in example (the resource class implements the interface obv.),"10/Apr/12 12:40;jboch;For the record, I also tried specifying the target explicitly, e.g. 
{code}@Description(title = ""My resource"", target = DocTarget.RESOURCE)
interface AResource {{code}","10/Apr/12 15:56;sergey_beryozkin;My tests show it actually works as long as all the JAX-RS annotations are grouped at AInterface.
In JAX-RS the annotations are not supposed to be collected from multiple sources, example, the following won't work:
{code:java}
@Produces(""text/xml"") 
public class ResourceImpl implements Resource {
}

@Path(""bar"")
public interface Resource {
}

{code}

In the above case, the 'bar' will be lost unless it's pushed up or @Produces is pushed down.

Do you have ResourceImpl introducing the annotations of its own ?
If you habe AInterface with many implementations then I guess @Description at the AInterface is not unique enough per every implementation ?
","10/Apr/12 16:06;jboch;The class-level and method-level annotations are only on the interface. 

The implementing class only has some @Context and @PathParam annotations on fields (otherwise it would defy the point of having an interface).

Like I wrote before: the ""bar"" from interface method gets picked up, but not ""My resource"" from the interface, which is a bit weird.

Actually I only have one implementation, but I don't understand why would this matter. 

If this makes a difference: I register the class passing a concrete implementation class to JAXRSServerFactoryBean.setResourceClasses() method (actually I don't see any other way of doing it).

PS. I have enabled static resource resolution - not sure if this makes any difference.",10/Apr/12 16:07;jboch;Updated the example with implementation annotations,"10/Apr/12 16:16;sergey_beryozkin;Actually, it could be that the snapshot does not contain the fix yet, the commit to 2.5.3-SNAPSHOT went on 5 April","11/Apr/12 14:40;sergey_beryozkin;Hi Jakub, I'm resolving this issue for 2.6.0 for now given that it was not easy for you to confirm yet it actually works for you in 2.5.3-SNAPSHOT. Please feel free to re-open if it does not work in 2.5.x after the up to date snapshot, or indeed the release is available ",,,,,,,,,,,,,,,,,,,,,,,,,,,
"After loading XSDs from links in WADL, JAX-RS get all for all resources fail with 400",CXF-4220,12549183,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,joanneli77,joanneli77,02/Apr/12 16:35,06/Apr/12 15:57,14/Mar/19 02:30,06/Apr/12 15:57,2.5.2,,,,,,,2.5.3,2.6,,,,,,,0,,,,,,,,"We use a CustomCXFNonSpringJaxrsServlet with one overriding method in order to use our hand written WADL.
   @Override
   protected void setSchemasLocations(JAXRSServerFactoryBean bean, ServletConfig servletConfig)
   {
      super.setSchemasLocations(bean, servletConfig);
      
      // Set the WADL document location
      if(servletConfig.getInitParameter(JAXRSUtils.DOC_LOCATION) != null)
      {
         bean.setDocLocation(servletConfig.getInitParameter(JAXRSUtils.DOC_LOCATION));
      }
   }

In the web.xml of the user resource, the XSDs are referenced as follows - 
        <init-param>
            <param-name>jaxrs.schemaLocations</param-name>
            <param-value>
                classpath:schemas/xml.xsd
                classpath:schemas/atom.xsd
                classpath:schemas/user.xsd
                classpath:schemas/user-role.xsd
            </param-value>
        </init-param>

In the wadl file, the grammar section is as follows - 
  <grammars>
    <include href=""xml.xsd"" />
    <include href=""atom.xsd"" />
    <include href=""user.xsd"" />
    <include href=""user-role.xsd"" />
  </grammars>

Here are the steps to reproduce the error - 

1. Verify get all and get a single resource work for all resources including user.
2. Access user wadl from https://server:port/api/rest/users?_wadl successfully but the grammar section is changed to -
  <grammars>
    <include href=""https://server:8443/api/rest/users//xml.xsd"" />
    <include href=""https://server:8443/api/rest/users//atom.xsd"" />
    <include href=""https://server:8443/api/rest/users//user.xsd"" />
    <include href=""https://server:8443/api/rest/users//user-role.xsd"" />
  </grammars>
3. Repeat step 1. Result is good.
4. Click the first link and view xml.xsd from a browser. Note xml.xsd is availale from the internet and does not have a schemaLocation tag. 
5. Repeat step 1. Result is good.
6. Click the link to atom.xsd or any of rest of the links and the XSD loads correctly. Note all those XSDs are only available in the classpath of user.war.
   Below is an excerpt of how schema is referenced in the XSD -
   <xs:import namespace=""urn:api:rest:user-role"" schemaLocation=""https://server:8443/api/rest/users//"" />
   <xs:import namespace=""http://www.w3.org/2005/Atom"" schemaLocation=""https://server:8443/api/rest/users//"" />
7. Do a get all request using https://server:8443/api/rest/users and get the following error -
   400: Bad Request
   org.xml.sax.SAXParseException: Premature end of file.
8. Do a get all request to other resources and get the same 400.
9. Restart JBoss and problem goes away.",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-04-03 09:59:11.604,,,no_permission,,Unknown,,,,,,,,,,,234174,,,Fri Apr 06 15:57:08 UTC 2012,,,,,,0|i0b7en:,63312,,,,,,,,"03/Apr/12 09:59;sergey_beryozkin;r1308794 in 2.5.3-SNAPSHOT should fix it. Please verify.

The problem seemed to do with WADLGenerator creating bogus references for empty schemaLocations, now the empty references are ignored.
I also added a ""jaxrs.docLocation"" servlet parameter for you to avoid overriding the CXF servlet


","04/Apr/12 16:30;joanneli77;Thank you. I am eager to test the fix.

But I don't see this defect in the release notes in the latest build at http://repository.apache.org/snapshots/org/apache/cxf/apache-cxf/2.5.3-SNAPSHOT/apache-cxf-2.5.3-20120403.080549-37.zip

Also the timestamp of the latest build Tue Apr 03 09:15:57 UTC 2012 is ealier than your checkin. 
  ","04/Apr/12 19:12;sergey_beryozkin;The release notes will be updated in time for the release, after this JIRA gets resolved.
I've restarted the CXF-2.5-deploy at Jenkins",06/Apr/12 15:57;joanneli77;Verified problems are fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enabling exsh doesn't work in pre 2.5 releases,CXF-4213,12548691,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sslavic,sslavic,29/Mar/12 15:36,28/Aug/12 17:46,14/Mar/19 02:30,06/Apr/12 16:03,2.3.9,2.4.6,,,,,,NeedMoreInfo,,,,,,,,0,,,,,,,,"Try generating java from [this wsdl|https://ws1.webservices.nl/soap_doclit?wsdl] using cxf 2.3.9 or 2.4.6 with exsh set to true - generated code will not have {{@WebParam(header = true)}} parameters.

Using cxf 2.5.2 it works ok, but I can't use anything newer than 2.3.9. Lack of m2e connector for cxf-codegen-plugin 2.3.9+ prevents adopting cxf versions newer than 2.3.9.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-03-29 17:05:30.674,,,no_permission,,Unknown,,,,,,,,,,,233788,,,Fri Apr 06 16:03:03 UTC 2012,,,,,,0|i1agqf:,269177,,,,,,,,"29/Mar/12 17:05;dkulp;It should work fine with 2.3.x (it's been there since 2.1 days, maybe even 2.0).  However, you MAY need to add the cxf-rt-binding-soap dependency to your projects or as a dependency of the plugin.
","06/Apr/12 16:03;dkulp;
Updated the docs to mention the cxf-rt-binding-soap jar is likely needed for this to work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF bundle need to imports the jaas related package,CXF-4203,12548073,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,26/Mar/12 07:21,23/Apr/12 16:45,14/Mar/19 02:30,27/Mar/12 03:48,,,,,,,,2.4.7,2.5.3,,,OSGi,,,,0,,,,,,,,"When I try to publish the JAXRS example with basic http authentication from blueprint, I got the complain that some jaas related packages can not be load by cxf bundle. 
{code}
Caused by: java.lang.ClassNotFoundException: org.apache.karaf.jaas.modules.RolePrincipal not found by org.apache.cxf.bundle [158]
	at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1461)
	at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:73)
	at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1844)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	at org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1745)
	at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:929)
	at org.ops4j.pax.swissbox.core.BundleClassLoader.findClass(BundleClassLoader.java:176)
	at org.ops4j.pax.swissbox.core.BundleClassLoader.loadClass(BundleClassLoader.java:194)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	at org.eclipse.jetty.plus.jaas.JAASLoginService.getGroups(JAASLoginService.java:294)
	... 39 more
{code}

BY adding the packages of ""org.eclipse.jetty.plus.jaas"" and ""org.apache.karaf.jaas.modules"" into the dynamic import section of cxf bundle can fix the issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,233170,,,Tue Mar 27 03:48:33 UTC 2012,,,,,,0|i0b69j:,63127,,,,,,,,"26/Mar/12 15:02;njiang;The issue was introduced by the code change of CXF-4060 to get the user principal first.
","27/Mar/12 03:48;njiang;Applied patch into trunk, 2.5.x-fixes and 2.4.x-fixes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UriInfoImpl.getPathSegments(decode) does not pass 'decode' flag to getPath(),CXF-4200,12547820,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,robth,robth,23/Mar/12 15:45,23/Apr/12 16:45,14/Mar/19 02:30,23/Mar/12 23:04,2.5.2,2.6,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,,,,,,,,"The function 'UriInfoImpl.getPathSegments(boolean decode)' calls 'getPath()' internally. It should call 'getPath(decode)' instead.

As an example, consider the following path: 'a/x%2fy/b' ('%2f' = '/').
When calling 'UriInfoImpl.getPathSegments(true)', four path segments are returned: 'a', 'x', 'y', 'b'. However, when 'UriInfoImpl.getPathSegments(false)' is called, the result is the same. Instead, 'a', 'x%2fy', 'b' is expected.
",,,,,,,,,,,,,,,,,,,,23/Mar/12 15:48;robth;cxf-4200-robth-getpathsegments-decode.patch;https://issues.apache.org/jira/secure/attachment/12519645/cxf-4200-robth-getpathsegments-decode.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-03-23 23:03:02.741,,,no_permission,,Novice,,,,,,,,,,,232917,,,Fri Mar 23 23:03:02 UTC 2012,,,,,,0|i0b68v:,63124,,,,,,,,23/Mar/12 15:48;robth;Attached patch.,"23/Mar/12 23:03;sergey_beryozkin;Thanks for the patch. I ended up always passing 'false' to getPath() within the getPathSegments(boolean decoded) otherwise we have another bug, namely x%2Fy is treated as if it represents two PathSegments due to it containing the encoded '/'. The actual 'decode' flag is passed to the PathSegment implementation.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get the schema validation error when using the simple frontend configuration with blueprint ,CXF-4197,12547771,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,23/Mar/12 09:42,23/Apr/12 16:45,14/Mar/19 02:30,31/Mar/12 05:46,2.4.6,2.5.2,,,,,,2.4.7,2.5.3,,,Simple Frontend,,,,0,,,,,,,,"Here is stack trace, when I want to create a simple server from a blueprint configuration.
{code}
org.xml.sax.SAXParseException: src-resolve.4.2: Error resolving component 'serverType'. It was detected that 'serverType' is in namespace 'http://cxf.apache.org/simple', but components from this namespace are not referenceable from schema document 'bundle://172.0:1/schemas/blueprint/simple.xsd'. If this is the incorrect namespace, perhaps the prefix of 'serverType' needs to be changed. If this is the correct namespace, then an appropriate 'import' tag should be added to 'bundle://172.0:1/schemas/blueprint/simple.xsd'.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)[:]
	at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source)[:]
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)[:]
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,232868,,,Sat Mar 31 05:46:15 UTC 2012,,,,,,0|i0b69z:,63129,,,,,,,,"31/Mar/12 05:46;njiang;Applied the patch into trunk, 2.5.x-fixes and 2.4.x-fixes branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java First Use Schema Imports does not work,CXF-4196,12547736,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pellcorp,pellcorp,23/Mar/12 04:23,23/Apr/12 16:45,14/Mar/19 02:30,31/Mar/12 01:03,2.5.2,,,,,,,2.5.3,,,,JAX-WS Runtime,Simple Frontend,,,0,patch,,,,,,,"Currently the WSDLGetUtils does even support having XSD imports instead of inline.
Even after enabling this in eclipse, there are issues with how ServiceWSDLBuilder actually
handles java first wsdl generation where xsd imports are concerned.

I am working on a patch and test cases to contribute
",,,,,,,,,,,,,,,,,,,,29/Mar/12 09:36;pellcorp;CXF-4196-p2.patch;https://issues.apache.org/jira/secure/attachment/12520398/CXF-4196-p2.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-03-26 16:49:45.822,,,no_permission,,Moderate,,,,,,,,,,,232833,,,Sat Mar 31 01:03:30 UTC 2012,,,,,,0|i0b67z:,63120,,,,,,,,"23/Mar/12 09:07;pellcorp;This is NOT a complete patch, but does work as I wanted.  I need to clean it up and then test thoroughly to make sure it works for both java first and contract first and tools.  I will be modifying these classes further and will submit a diff tar ball with changes once its complete.  You can extract these two files against a 2.5.3 and define a jaxws:property org.apache.cxf.wsdl.create.imports ""true""

Once the changes are finalised I will ensure the license is granted to ASF.","26/Mar/12 16:49;dkulp;Can you also ""undo"" all the reflow changes?   A straight diff is yielding a TON of changes that aren't real changes, just reflow of code.   That's making finding the real changes hard.","26/Mar/12 21:12;pellcorp;Yep no problems, got a lot of cleaning up to do and part of that is minimising the diff. ",28/Mar/12 01:44;pellcorp;Cleaned up patch still without test cases.  I reverted my changes and re-applied them limiting impact to as little as possible.  Hopefully will be ok.  I am now going to work on creating junit test cases for the changes.   ,28/Mar/12 01:56;pellcorp;Re-attach fixed file,"28/Mar/12 08:09;pellcorp;I am continuing to work on the code and test cases hopefully have a 
Patch to review by end of week","28/Mar/12 11:12;pellcorp;Updated patch, with some tests and more cleanup to reduce the potential for regression for the tools wsdl generator.  Still more testing required to ensure this before I will submit it, but would appreciate any comments on what I have so far.","28/Mar/12 23:56;pellcorp;I am preparing the patch to submit for review.  A couple of things to note:

WSDLGetUtils has no state, but it requires construction to use the non static methods, and then inside these methods it does a new WSDLGetUtils().getXXXXXX()

Also since WSDLGetUtils calls ServiceWSDLBuilder directly I am not sure how I would go about creating a test case for WSDLGetUtils without a lot of mocking code.  For the small changes I have made I am not sure its worth it.",29/Mar/12 01:50;pellcorp;Completed patch ready for review.  ,29/Mar/12 09:22;pellcorp;Revised patch to fix issue with namespaces that occur in elements not being included in the streamed xsd.,29/Mar/12 09:36;pellcorp;Additional fix for threading issue in WSDLGetUtils,"31/Mar/12 01:00;dkulp;
The namespace issue you saw is really due to XMLSCHEMA-23 which I just discovered while debugging this.  I'll trying and fix that next week.  However, the call to writeNode does have a ""repairing"" flag that should have repaired this and that isn't working correctly.   I just committed a fix for that as well.  Thus, the XMLSCHEMA fix really isn't needed.

I also added a quick ""system"" test to make sure the import is generated from a real service.   Nothing major.  :-)

","31/Mar/12 01:03;dkulp;
Patch applied with some minor updates and systest added.  Major thanks.



",,,,,,,,,,,,,,,,,,,,,,,
http-config conduit doesn't work on the http conduit for WsdlUrl,CXF-4195,12547734,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,23/Mar/12 03:52,23/Apr/12 16:45,14/Mar/19 02:30,23/Mar/12 08:44,2.3.9,2.4.6,2.5.2,,,,,2.3.10,2.4.7,2.5.3,,Core,Transports,,,0,,,,,,,,"If we want to publish a CXF service which WSDL is get by using http://xxx , we can not configure the http conduit timeout just by using http-conf:conduit element in the Spring configuration file.
After digging the code for a while, I found the HttpConduit which is created by the TransportURIResolver has a beanName with null. That could explain why the http-conf:conduit configuration can not be picked up.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,232831,,,Fri Mar 23 08:44:37 UTC 2012,,,,,,0|i0b69r:,63128,,,,,,,,"23/Mar/12 08:44;njiang;Applied path into trunk, 2.5.x-fixes, 2.4.x-fixes and 2.3.x-fixes branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF logbrowser sample not working in 2.6.0,CXF-4193,12547708,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,gmazza,gmazza,22/Mar/12 23:13,23/Apr/12 16:45,14/Mar/19 02:30,25/Mar/12 16:55,2.6,,,,,,,2.6,,,,Samples,,,,0,,,,,,,,"When following the instructions in the README to add the URL http://localhost:9002/log/logs, the following exception occurs is reported by the server:

   Caused by: org.apache.cxf.interceptor.Fault
	at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:154)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:120)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:167)
	at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:94)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:262)
	... 32 more
   Caused by: java.lang.NullPointerException
	at org.apache.cxf.management.web.logging.atom.AtomPullServer.getCurrentCondition(AtomPullServer.java:277)
	at org.apache.cxf.management.web.logging.atom.AtomPullServer.getXmlFeedWithPage(AtomPullServer.java:165)
	at org.apache.cxf.management.web.logging.atom.AtomPullServer.getXmlFeed(AtomPullServer.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:172)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:88)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-03-25 16:55:59.417,,,no_permission,,Unknown,,,,,,,,,,,232805,,,Sun Mar 25 16:55:59 UTC 2012,,,,,,0|i0b6af:,63131,,,,,,,,24/Mar/12 17:42;gmazza;I can no longer replicate this issue on CXF 2.6.0; Sergey may close this issue when he wishes.,"25/Mar/12 16:55;sergey_beryozkin;I saw the problem at Ubuntu - but given that it works for Glen on Ubuntu I'm closing it for now, will retry the demo after the Ubuntu upgrade",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLValidator doesn't pass the test for WSI-BP-1.0 R2726,CXF-4192,12547706,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,carofe,carofe,22/Mar/12 22:55,23/Apr/12 16:45,14/Mar/19 02:30,23/Mar/12 17:30,2.6,,,,,,,2.3.10,2.4.7,2.5.3,2.6,Tooling,,,,0,patch,test-fail,tools,,,,,"I found that the Command Line Tools Validator module does not pass one test related to the detection of the error WSI-BP-1.0 R2726 because the validator detects another error before (R2205).

The problem is because of the inputted wsdl. The fault messages should be defined with an element instead of a type because their style is ""document"" by default. I fixed that creating another WSDL without that issue and now the test passes and the validator detects the R2726 error successfully. 
Attached you can find the new wsdl and the patch.","Windows 7 64bit, Java 7 64bit, Maven 3.0.4",,,,,,,,,,,,,,,,,,,22/Mar/12 22:59;carofe;patch.diff;https://issues.apache.org/jira/secure/attachment/12519533/patch.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,232803,,,Thu Mar 22 22:59:08 UTC 2012,,,,,,0|i0b68n:,63123,,,,,,,,22/Mar/12 22:59;carofe;The new WSDL and the patch for WSDLValidationTest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RM broken in synchronous Mode,CXF-4191,12547596,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,ay,benpezzei,benpezzei,22/Mar/12 14:06,05/Jun/12 13:31,14/Mar/19 02:30,17/Apr/12 11:09,2.4.6,,,,,,,2.5.4,2.6.1,,,WS-* Components,,,,0,rm,Ws-RM,,,,,,"RM-Setup without a decoupled endpoint (therefore: synchronous modus)

Client is configured with:
includeOffer=true,
SequenceTerminationPolicyType.maxLength=1
AcknowledgementInterval=0

Server accepts Offers, wsrm-policy:AcknowledgementInterval=0

pseudo-Log:
Req 1: createSequence with offer 123 and acksTo:http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous
Res 1: CreateSequenceResponse with seqid 456
Req 2: Sequence with Id 456 & lastMessage-flag & actual content
Res 2: Sequence with Id 123 & lastMessage-flag & SequenceAcknowledgement for Id 456 & actual content
Req 3: TerminateSequence for Id 456
Res 3: standard rm header
Req 4: SequenceAck for 123
Req 5: standard rm header
Res 5: standard rm header

Req 6 from Server: terminateSequence for 123 to w3c.org

There is another ""feature"": When the server PortImpl throws an Exception, Request/Response goes as follows:

Req 1: createSequence with offer 123 and acksTo:http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous
Res 1: CreateSequenceResponse with seqid 456
Req 2: Sequence with Id 456 & lastMessage-flag & actual content
Res 2: Sequence with 456 & lastMessage, Action: NullpointerException, soap:body contains FaulCode & faultstring

After receiving the response, client throws UnknownSequence: The value of wsrm:Identifier is not a known Sequence identifier.

","CXF 2.4.6, Jdk5 (Jrockit), spring 2.5, maven2, eclipse 3.7, Win xp",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-04-16 13:54:56.977,,,no_permission,,Unknown,,,,,,,,,,,232694,,,Tue Apr 17 11:09:17 UTC 2012,,,,,,0|i089gv:,46133,,,,,,,,"16/Apr/12 13:54;ay;I looked into this issue. As I mentioned in my reply mail to Ben on users@cxfOne, it is not so straightforward.

One approach that I tried is is to switch the operation for the partial response part. The original operation is the oneway SequenceAcknowledgement operation acknowledging the last response message for that sequence. To use the standard outbound chain to serialize the soap body, we need to have the appropriate operation. So, we can replace this oneway SeqAck operation with the out-going TerminateSequence operation and also clear the partial response flag. That will let the outbound chain serialize the TerminateSequence element.

I think this is a simpler approach than filling the soap body of the partial response message explicitly at the RM interceptor.

Let me know if someone has a better alternative.

thanks.","17/Apr/12 11:09;ay;Fixed the issue for 2.6.1 and 2.5.4 and added a test case in systests/ws-rm//SequenceTest.

This could be ported down to 2.4.x with some manual adjustment if necessary.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Robust-InOnly processing with WS-RM to perform AtMostOnce delivery assurance check,CXF-4188,12547345,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,21/Mar/12 08:06,23/Apr/12 16:45,14/Mar/19 02:30,27/Mar/12 07:55,2.4.4,2.5.2,,,,,,2.4.7,2.5.3,2.6,,WS-* Components,,,,0,,,,,,,,"In CXF-4146, to support the robust-inonly mode with WS-RM, the acknowledgement step has been moved to the post-service invocation step so that the acknowledgement message is sent back to the client after the service invocation. This change has provided the robust-inonly processing for WS-RM with delivery assurance of AtLeastOnce. 

However, moving the acknowledgement code after the service invocation step also moved the duplicate check, which should actually be performed before the service invocation in order to support the AtMostOnce delivery assurance.

Therefore, the duplicate check code must be moved back to the original position.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,232503,,,2012-03-21 08:06:40.0,,,,,,0|i0b69b:,63126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java_first_jms sample needs a README,CXF-4186,12547267,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,gmazza,gmazza,gmazza,20/Mar/12 20:17,23/Apr/12 16:45,14/Mar/19 02:30,21/Mar/12 21:23,2.4.7,2.5.3,2.6,,,,,2.6,,,,Samples,,,,0,,,,,,,,The java_first_jms sample needs a README.txt file (http://svn.apache.org/viewvc/cxf/trunk/distribution/src/main/release/samples/java_first_jms/) so people know what the sample is about and how to run it.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,232425,,,2012-03-20 20:17:26.0,,,,,,0|i1ags7:,269185,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to access services via browser after installation of war feature in Karaf 2.2.6,CXF-4185,12547172,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,alexander.osadchiy,alexander.osadchiy,20/Mar/12 10:16,23/Apr/12 16:45,14/Mar/19 02:30,20/Mar/12 18:04,2.6,,,,,,,2.5.3,2.6,,,OSGi,Transports,,,0,,,,,,,,"After installation of war feature to the container I can't access http://localhost:8040/services via browser.

HTTP ERROR 500
Problem accessing /services. Reason: 
 Server Error

Caused by:
java.lang.NullPointerException
 at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137)
 at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:127)
 at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:187)
 at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:115)
 at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
 at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:166)
 at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:547)
 at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:480)
 at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)
 at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
 at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:520)
 at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
 at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:941)
 at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:117)
 at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:409)
 at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
 at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:875)
 at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
 at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:72)
 at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
 at org.eclipse.jetty.server.Server.handle(Server.java:349)
 at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
 at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:919)
 at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:582)
 at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:218)
 at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:51)
 at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:586)
 at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:44)
 at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
 at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
 at java.lang.Thread.run(Thread.java:619)

During installation of war feature method CXFNonSpringServlet.init(ServletConfig sc) is called.
During this call fields 'destinationRegistry' and 'bus' are null. 
So, ServletController is created with field destinationRegistry=null after CXFNonSpringServlet.createServletController(ServletConfig servletConfig) call from init method.

After this when I try to access http://localhost:8040/services/ via browser ServletController.invoke(HttpServletRequest request, HttpServletResponse res) is called.
And as destinationRegistry=null, then destinationRegistry.getDestinationForPath(pathInfo, true) call causes NullPointerException.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,232330,,,2012-03-20 10:16:43.0,,,,,,0|i0b6tb:,63216,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP Fault cause NullPointerException,CXF-4183,12546963,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mina,mina,18/Mar/12 18:57,23/Apr/12 16:45,14/Mar/19 02:30,20/Mar/12 18:37,2.5.2,,,,,,,2.4.7,2.5.3,,,Soap Binding,,,,0,soap,,,,,,,"The below exception happens ""sometimes"" I tried to trace the code. it seems like the XMLStreamWriter doesn't have namespace context

(StaxUtils.java:727) String decUri = writer.getNamespaceContext().getNamespaceURI(prefix);


Mar 15, 2012 11:23:14 PM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
INFO: Application {http://example.com/blackboard/kb/}Subscriber#{http://example.com/blackboard/kb/}push has thrown exception, unwinding now: com.example.kb.failure.FeedServiceException: net.organon.platform.channel.ChannelException: java.lang.NullPointerException
Mar 15, 2012 11:23:14 PM org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal handleMessage
INFO: class org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternalapplication/soap+xml
Mar 15, 2012 11:23:14 PM org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal handleMessage
WARNING: Error writing to XMLStreamWriter.
{code}
java.lang.NullPointerException
        at org.apache.cxf.staxutils.StaxUtils.writeElement(StaxUtils.java:727)
        at org.apache.cxf.staxutils.StaxUtils.writeElement(StaxUtils.java:693)
        at org.apache.cxf.staxutils.StaxUtils.writeNode(StaxUtils.java:808)
        at org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal.handleMessage(Soap12FaultOutInterceptor.java:124)
        at org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal.handleMessage(Soap12FaultOutInterceptor.java:56)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:113)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:323)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:123)
        at net.organon.messaging.xmpp.soap.XMPPSOAPTransporter$1.run(XMPPSOAPTransporter.java:238)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:415)
        at net.organon.security.identify.runtime.SSOSubject.doAs(SSOSubject.java:180)
        at net.organon.messaging.xmpp.soap.XMPPSOAPTransporter.handleMessage(XMPPSOAPTransporter.java:234)
        at net.organon.messaging.xmpp.model.stanza.processor.AbstractAgent.execute(AbstractAgent.java:70)
        at net.organon.messaging.xmpp.model.stanza.processor.AbstractComponent.execute(AbstractComponent.java:82)
        at net.organon.messaging.xmpp.runtime.channel.XMPPEventContext.sendUpstream(XMPPEventContext.java:122)
        at net.organon.platform.channel.AbstractChannelEventContext.sendUpstream(AbstractChannelEventContext.java:146)
        at net.organon.platform.channel.UpstreamChannelEventContext.call(UpstreamChannelEventContext.java:43)
        at net.organon.platform.channel.UpstreamChannelEventContext.call(UpstreamChannelEventContext.java:19)
        at net.organon.messaging.xmpp.runtime.channel.AbstractXMPPChannel.writeOperation(AbstractXMPPChannel.java:273)
        at net.organon.messaging.xmpp.runtime.channel.AbstractXMPPChannel.writeOperation(AbstractXMPPChannel.java:263)
        at net.organon.messaging.xmpp.runtime.channel.AbstractXMPPChannel.writeOperation(AbstractXMPPChannel.java:256)
        at net.organon.messaging.xmpp.runtime.channel.AbstractXMPPChannel.writeUpstream(AbstractXMPPChannel.java:230)
        at net.organon.platform.channel.DefaultUpstreamChannel.writeUpstream(DefaultUpstreamChannel.java:35)
        at net.organon.messaging.xmpp.runtime.channel.AbstractXMPPRouterChannel.route(AbstractXMPPRouterChannel.java:273)
        at net.organon.messaging.xmpp.runtime.channel.AbstractXMPPRouterChannel.writeUpstream(AbstractXMPPRouterChannel.java:248)
        at net.organon.messaging.xmpp.runtime.channel.AbstractXMPPChannel.writeUpstream(AbstractXMPPChannel.java:241)
        at net.organon.messaging.xmpp.runtime.channel.AbstractXMPPChannel.writeUpstream(AbstractXMPPChannel.java:232)
        at net.organon.platform.channel.DefaultUpstreamChannel.writeUpstream(DefaultUpstreamChannel.java:35)
        at net.organon.messaging.bus.EventQueue.writeUpstream(EventQueue.java:191)
        at net.organon.platform.channel.DefaultUpstreamChannel.writeUpstream(DefaultUpstreamChannel.java:104)
        at net.organon.platform.channel.DefaultUpstreamChannel.writeUpstream(DefaultUpstreamChannel.java:42)
        at net.organon.platform.channel.DefaultUpstreamChannel.writeUpstream(DefaultUpstreamChannel.java:35)
        at net.organon.messaging.bus.EventQueue.writeDownstream(EventQueue.java:177)
        at net.organon.platform.channel.DefaultChannel.writeDownstream(DefaultChannel.java:104)
        at net.organon.platform.channel.DefaultChannel.writeDownstream(DefaultChannel.java:42)
        at net.organon.messaging.bus.EventFuture$1.run(EventFuture.java:70)
        at net.organon.messaging.bus.EventFuture$1.run(EventFuture.java:65)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:415)
        at net.organon.security.identify.runtime.SSOSubject.doAs(SSOSubject.java:180)
        at net.organon.messaging.bus.EventFuture.run(EventFuture.java:65)
        at net.organon.messaging.bus.EventQueue.execute(EventQueue.java:225)
        at net.organon.messaging.bus.EventQueue$EventQueueProcessor.run(EventQueue.java:235)
        at net.organon.platform.internal.runtime.InternalProcessManager$Worker$1.run(InternalProcessManager.java:190)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:415)
        at net.organon.security.identify.runtime.SSOSubject.doAs(SSOSubject.java:180)
        at net.organon.platform.internal.runtime.InternalProcessManager$Worker.run(InternalProcessManager.java:183)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:722)
{code}

Mar 15, 2012 11:23:14 PM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
INFO: Application {http://example.com/blackboard/kb/}Subscriber#{http://example/blackboard/kb/}push has thrown exception, unwinding now: com.example.blackboard.kb.failure.FeedServiceException: net.organon.platform.channel.ChannelException: java.lang.NullPointerException","Openjdk version ""1.7.0""
OpenJDK Runtime Environment (build 1.7.0-root_2011_07_02_05_19-b00)
OpenJDK Server VM (build 21.0-b17, mixed mode)


FreeBSD localhost 9.0-CURRENT FreeBSD 9.0-CURRENT #8: Thu May  5 16:46:16 UTC 2011 root@localhost:/usr/obj/usr/src/sys/MINA  i386

CXF 2.5.2",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-03-19 15:30:26.691,,,no_permission,,Unknown,,,,,,,,,,,232121,,,Tue Mar 20 16:59:23 UTC 2012,,,,,,0|i0b6hb:,63162,,,,,,,,"19/Mar/12 15:30;dkulp;
If the NamespaceContext is null, that's really bad.  Any chance you could trace into there and figure out the classsname of the writer?   I'd like to know if it's a specific woodstox class, one of our wrappers, etc....   

","19/Mar/12 21:29;mina;I found the problem its in class ""com.sun.xml.internal.stream.writers.XMLDOMWriterImpl"" [1]. I use XMPP transporter and trying to remove some XML overhead by skipping the OutputStream stream and write the SOAP message to XMLStreamWriter using:

{code}
message.put(Document.class, doc);
message.setContent(XMLStreamWriter.class, StaxUtils.createXMLStreamWriter(new DOMResult(doc)));
{code}

The woodstox was not visible to the classpath of the transporter classloader at the runtime! after I added it everything working fine. My bad :)

[1] http://www.grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7-b147/com/sun/xml/internal/stream/writers/XMLDOMWriterImpl.java#XMLDOMWriterImpl","20/Mar/12 01:43;dkulp;Any chance you could replace your call to StaxUtils.createXMLStreamWriter(new DOMResult(doc)) with something like:

{code}
new org.apache.cxf.staxutils.W3CDOMStreamWriter(doc);
{code}

and test that? If that works, I'll update the createXMLStreamWriter(Result) method to check for DOMResult and return that instead.   We already do that for all the createXMLStreamReader calls due to buggy DOM readers, doing that for the writers may make some sense.


  ","20/Mar/12 16:51;mina;Yes, It works. It passes all the tests with almost the same performance. I think this would be a better solution for the DOM case.",20/Mar/12 16:59;dkulp;Re-open since we have a fix for it.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF error when parsing a SOAP 1.2 fault: Invalid QName in mapping,CXF-4181,12546750,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,raph,raph,16/Mar/12 09:30,22/Mar/17 13:12,14/Mar/19 02:30,23/Mar/12 18:32,2.5.2,,,,,,,2.4.7,2.5.3,,,Soap Binding,,,,0,,,,,,,,"When receiving the following SOAP 1.2 fault, a parsing error occurs in Soap12FaultInInterceptor:
<S:Envelope xmlns:S=""http://www.w3.org/2003/05/soap-envelope"" 
	xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" 
	xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" 
	xmlns:wst=""http://schemas.xmlsoap.org/ws/2005/02/trust"" 
	xmlns:psf=""http://schemas.microsoft.com/Passport/SoapServices/SOAPFault"">
  <S:Body>
    <S:Fault>
      <S:Code>
	<S:Value>S:Sender</S:Value>
	<S:Subcode>
	  <S:Value>wst:FailedAuthentication</S:Value>
	</S:Subcode>
      </S:Code>
      <S:Reason>
	<S:Text xml:lang=""en-US"">Authentication Failure</S:Text>
      </S:Reason>
      <S:Detail>
	<psf:error>
	  <psf:value>0x80048821</psf:value>
	  <psf:internalerror>
	    <psf:code>0x80041012</psf:code>
	    <psf:text>The entered and stored passwords do not match.&#x000D;&#x000A;</psf:text>
	  </psf:internalerror>
	</psf:error>
      </S:Detail>
    </S:Fault>
  </S:Body>
</S:Envelope>

Stack trace:
java.lang.RuntimeException: Invalid QName in mapping: wst:FailedAuthentication
	at org.apache.cxf.helpers.XMLUtils.getQName(XMLUtils.java:447)
	at org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor.unmarshalFault(Soap12FaultInInterceptor.java:88)
	at org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor.handleMessage(Soap12FaultInInterceptor.java:59)
	at org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor.handleMessage(Soap12FaultInInterceptor.java:46)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:113)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:69)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:34)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:799)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1627)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1494)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1402)
	at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:195)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:649)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:533)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:463)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:366)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:319)
	at org.apache.cxf.ws.security.trust.STSClient.requestSecurityToken(STSClient.java:708)
	at org.apache.cxf.ws.security.trust.STSClient.requestSecurityToken(STSClient.java:584)
	at org.apache.cxf.ws.security.trust.STSClient.requestSecurityToken(STSClient.java:576)
	at net.entropysoft.eci.sharepoint.webservices.SharepointWebServices.authenticateToSharePointOnline(SharepointWebServices.java:426)

This happens because Soap12FaultInInterceptor creates a new DOM document with the Fault element but omits the namespace declarations on parent nodes (Envelope and Body).

",,,,,,,,,,,,,,,,,,,,23/Mar/12 23:31;carofe;SoapFaultSerializerTest.java.diff;https://issues.apache.org/jira/secure/attachment/12519751/SoapFaultSerializerTest.java.diff,23/Mar/12 13:51;ay;staxdomtest.diff;https://issues.apache.org/jira/secure/attachment/12519622/staxdomtest.diff,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-03-23 13:49:30.451,,,no_permission,,Unknown,,,,,,,,,,,231908,,,Tue Mar 21 09:31:32 UTC 2017,,,,,,0|i0b6p3:,63197,,,,,,,,"23/Mar/12 13:49;ay;This needs some change in the way how the soap fault is built.
I thought we can just get all the bindings from reader.getNamespaceContext() to the root element. But there seems to be no method to get all the bindings.

I am attaching a unit test to demonstrate this problem.
",23/Mar/12 13:51;ay;a unit test annotated with @Ignore for now.,23/Mar/12 23:31;carofe;Fixing test,"21/Mar/17 09:31;mapperCoderZ;Hello I'm a CXF user. I'm encountering the same issue, from a 2.7.3 CXF client (same stacktrace). The Subcode Value namespace prefix is declared on the envelope. This SoapFault is W3C compliant (https://www.w3.org/TR/soap12-part1/#faultcodes). How can we get this soapFault marshalling work ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
