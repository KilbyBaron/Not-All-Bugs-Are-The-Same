Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Description,Environment,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Outward issue link (Cloners),Outward issue link (Duplicate),Outward issue link (Incorporates),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Regression),Outward issue link (dependent),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Existing GitBox Approval),Custom field (External issue URL),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Severity),Custom field (Severity),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Test and Documentation Plan),Custom field (Testcase included),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
"scr- and bundle-plugin in multimodule project fails with goal ""test""",FELIX-2878,12501115,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,kwin,kwin,11/Mar/11 08:18,28/Jul/11 08:54,14/Mar/19 02:45,02/May/11 14:32, maven-scr-plugin-1.6.0,scr generator 1.1.0,,,,,,,,,maven-scr-plugin-1.7.2,scr generator 1.1.2,,,SCR Tooling,,,,,,,1,,,,,,"If I have a multimodule project with several OSGi bundles, which all use the scr plugin, there is an error during ""mvn test"". This is due to the scr plugin being bound to the phase ""generate-resources"" and maven-bundle plugin generating the manifest only in the package phase. If I have modules A and B (both packaging ""bundle""), B depends upon A and building the multimodule with ""mvn test"" there is an error, because during the scr goal of B, it looks for the manifest of A, which is apparently not there, since it is not  constructed with ""test"".
The error message is as follows:
...<during the ""test"" of module B>...
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Compiling 13 source files to<path of module B>\target\classes
[INFO] [scr:scr {execution: generate-scr-descriptor}]
[ERROR] Unable to get manifest from artifact at <path of module A>\target\classes:0
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] SCR Descriptor parsing had failures (see log)
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 44 seconds
[INFO] Finished at: Thu Mar 10 10:43:58 CET 2011
[INFO] Final Memory: 93M/237M
[INFO] ------------------------------------------------------------------------",,,,,,,,,,,,,,,,,,,,11/Mar/11 18:27;kwin;multimoduleosgi.zip;https://issues.apache.org/jira/secure/attachment/12473416/multimoduleosgi.zip,11/Mar/11 18:29;kwin;out.log;https://issues.apache.org/jira/secure/attachment/12473417/out.log,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-03-11 09:07:09.081,,,no_permission,,,,,,,,,,,56101,,,Wed May 11 14:52:27 UTC 2011,,,,,,0|i0kpqv:,118988,,,,,,,,"11/Mar/11 09:07;cziegeler;Could you please run Maven with the -e switch and attach the exception stacktrace to this bug?

Thanks","11/Mar/11 18:27;kwin;Attached is an example multimodule with two OSGi modules, where modulea depends upon moduleb",11/Mar/11 18:29;kwin;Attached is the maven log of mvn clean test -e,"25/Apr/11 13:52;andrei.pozolotin;I have similar symptoms for m2e background build runs (edit/save java file from src/test/java in a project with scr annotations):

4/25/11 8:44:02 AM CDT: [ERROR] Unable to get manifest from artifact at /home/user1/Workspaces/barchart-3.6-work/test-osgi/pom/compiled/osgi-hello-0/target/classes:0
4/25/11 8:44:02 AM CDT: Build errors for osgi-hello-1; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.felix:maven-scr-plugin:1.7.0:scr (generate-scr-scrdescriptor) on project osgi-hello-1: SCR Descriptor parsing had failures (see log)

command line mvn invocations work fine.",02/May/11 14:32;cziegeler;I've applied a fix for this in revision 1098597,11/May/11 04:21;andrei.pozolotin;Carsten: which maven repo do you publish your snapshots to? thanks. Andrei.,"11/May/11 13:21;cziegeler;Hi,

the snapshots should be available from

https://repository.apache.org/content/repositories/snapshots/","11/May/11 14:52;andrei.pozolotin;http://felix.apache.org/site/apache-felix-maven-scr-plugin-use.html

currently does not document this plugin property:

    /**
     * @parameter expression=""${project.build.directory}/scr-plugin-generated""
     * @required
     * @readonly
     */
    private File outputDirectory;
",,,,,,,,,,,,,,,,,,,
<reference> element not generated when name is missing,FELIX-2876,12500852,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,09/Mar/11 08:11,13/Mar/11 12:55,14/Mar/19 02:47,09/Mar/11 13:13, maven-scr-plugin-1.6.0,,,,,,,,,,maven-scr-plugin-1.7.0,scr ant task 1.1.0,scr generator 1.1.0,,SCR Tooling,,,,,,,0,,,,,,"I have the following class:

    @Component(specVersion = ""1.1"")
    @Service(Servlet.class)
    @Reference(referenceInterface = LogService.class, strategy = ReferenceStrategy.LOOKUP)
    public class Test extends HttpServlet {
    }

Running this through the Maven SCR Plugin, I would expect this descriptor:


    <?xml version=""1.0"" encoding=""UTF-8""?>
    <components xmlns:scr=""http://www.osgi.org/xmlns/scr/v1.1.0"">
        <scr:component enabled=""true"" name=""test.Test"">
            <implementation class=""test.Test""/>
            <service servicefactory=""false"">
                <provide interface=""javax.servlet.Servlet""/>
            </service>
            <property name=""service.pid"" value=""test.Test""/>
            <reference interface=""org.osgi.service.log.LogService"" cardinality=""1..1"" policy=""static""/>
        </scr:component>
    </components>

what I get is the following descriptor without the <reference> element

    <?xml version=""1.0"" encoding=""UTF-8""?>
    <components xmlns:scr=""http://www.osgi.org/xmlns/scr/v1.1.0"">
        <scr:component enabled=""true"" name=""test.Test"">
            <implementation class=""test.Test""/>
            <service servicefactory=""false"">
                <provide interface=""javax.servlet.Servlet""/>
            </service>
            <property name=""service.pid"" value=""test.Test""/>
        </scr:component>
    </components>

Adding the ""name"" attribute to the @Reference tag properly generates <reference> element, though.

IMHO this is false in multiple ways:
  * There is no log message indicating this omission
  * According to the DS 1.1 spec, the name attribute is optional; thus a <reference> element without name must be generated
  * If I set specVersion=""1.0"" in the @Component tag, an error should be generated for the missing name tag (because the name tag is required in DS 1.0)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-09 10:03:36.759,,,no_permission,,,,,,,,,,,56103,,,Wed Mar 09 13:13:04 UTC 2011,,,,,,0|i0vy0v:,184485,,,,,,,,09/Mar/11 10:03;cziegeler;References without a name where completly ignored. I've now changed the code according to the description above in revision 1079719,09/Mar/11 10:40;cziegeler;The above commit does not handle bind/unbind method generation and check,09/Mar/11 11:05;cziegeler;Updated the reference validation to check for null name and use the interface class name instead when searching for bind/unbind methods. Revision 1079744,09/Mar/11 13:13;cziegeler;I think everything is working now,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException in gogo runtime,FELIX-2870,12500210,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,02/Mar/11 18:40,17/Mar/15 07:06,14/Mar/19 02:47,02/Mar/11 21:52,gogo.runtime-0.8.0,,,,,,,,,,gogo.runtime-0.10.0,,,,Gogo Runtime,,,,,,,0,,,,,,"java.util.ConcurrentModificationException
       at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
       at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:392)
       at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:391)
       at org.apache.felix.gogo.runtime.CommandProcessorImpl.getCommand(CommandProcessorImpl.java:119)
       at org.apache.felix.gogo.runtime.CommandSessionImpl.get(CommandSessionImpl.java:144)
       at org.apache.felix.gogo.runtime.Closure.get(Closure.java:602)
       at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:438)
       at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:395)
       at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
       at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
       at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
       at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)
       at org.apache.felix.gogo.shell.Activator.run(Activator.java:75)
       at java.lang.Thread.run(Thread.java:680)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56109,,,Wed Mar 02 21:52:51 UTC 2011,,,,,,0|i0vvjb:,184082,,,,,,,,02/Mar/11 21:52;db82407;synchronize access to commands.,,,,,,,,,,,,,,,,,,,,,,,,,,
"Icon only works if absolute path specified, but specification allows for relative urls",FELIX-2868,12500106,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,aradzak,aradzak,01/Mar/11 22:02,20/Nov/12 11:00,14/Mar/19 02:47,22/Oct/11 12:23,metatype-1.0.4,,,,,,,,,, metatype-1.0.6,,,,Metatype Service,,,,,,,0,,,,,,"the icon's ""resource"" attribute only resolves to an icon if the absolute url path is specified, but the specification says ""The base URL is assumed to be the XML file with the definition.  I.e. if the XML is a resource in the JAR file, then this URL can reference another resource in that JAR file using a relative URL."" ",ubuntu 10.04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-10-22 12:23:08.731,,,no_permission,,,,,,,,,,,56111,,,Tue Nov 20 11:00:51 UTC 2012,,,,,,0|i0b21z:,62445,,,,,,,,"01/Mar/11 22:08;aradzak;actually I think it's worse than that.. /OSGI-INF/metatype/icon.png is an absolute path .. OSGI-INF/metatype/icon.png is a relative path.  Both work, but according to the specification, the relative path should use as its base where the ""xml file with the definition"" (aka metatype.xml) is.  As such, OSGI-INF/metatype/icon.png should fail to resolve because it should translate to an absolute path of /OSGI-INF/metatype/OSGI-INF/metatype/icon.png , which does not exist.","22/Oct/11 12:23;fmeschbe;Fixed in Rev. 1187688. Now the icon path is converted into an URL using the
metatype descriptor file referring to it as the base URL (as implied by the spec)",20/Nov/12 11:00;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,
getIcon() in LocalizedObjectClassDefinition keyset iteration incorrect,FELIX-2867,12500100,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,aradzak,aradzak,01/Mar/11 21:29,20/Nov/12 11:00,14/Mar/19 02:47,22/Oct/11 09:44,metatype-1.0.4,,,,,,,,,, metatype-1.0.6,,,,Metatype Service,,,,,,,0,,,,,,"LocalizedObjectClassDefinition:137 attempts to get next iteration element typecast to Map.Entry , which gets a class cast exception most likely because the keys are of type Integer.  The map is keys = integers , values = strings (see OCD.java two levels up).  The code appears to believe that, instead, it's a map of maps.. or something.",ubuntu 10.04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-10-22 09:44:13.265,,,no_permission,,,,,,,,,,,56112,,,Tue Nov 20 11:00:52 UTC 2012,,,,,,0|i0l4c7:,121353,,,,,,,,22/Oct/11 09:44;fmeschbe;Thanks for reporting the bug. I have fixed this in Rev. 1187680,20/Nov/12 11:00;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
getLocales() in DefaultMetaTypeProvider needs to check return of findEntries,FELIX-2860,12499535,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,aradzak,aradzak,23/Feb/11 21:45,20/Nov/12 11:00,14/Mar/19 02:47,24/Feb/11 09:39,metatype-1.0.4,,,,,,,,,, metatype-1.0.6,,,,Metatype Service,,,,,,,0,,,,,,"DefaultMetaTypeProvider:128 does a findEntries call which it then uses at 130 , but assumes that it will always be non-null.  findEntries can, and does, return null.

If it helps, I encountered this problem in felix karaf 2.1.4, when I added a bundle to the system to iterate on MetaType information for all the ManagedService and ManagedServiceFactory bundles in the system, IF they also had an associated configuration (even an empty one should be iterable to a limited extent, aka, recognizing that it has a configuration).  All the bundles successfully iterated except for FileInstall 3.1.10.  This may or may not imply that there is also a bug in FileInstall 3.1.10.",ubuntu 10.04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-24 09:39:43.1,,,no_permission,,,,,,,,,,,40375,,,Tue Nov 20 11:00:51 UTC 2012,,,,,,0|i0apu7:,60459,,,,,,,,"23/Feb/11 23:35;aradzak;regarding my last sentence about possible bug in FileInstall 3.1.10 : it isn't.  FileInstall's metatype.xml doesn't specify a localization entry, which the xml schema in the compendium spec says is fine (aka, it's optional).  As a result, the MetaType service ""guesses"" using Constants.BUNDLE_LOCALIZATION_DEFAULT_BASENAME (OSGI-INF/l10n/bundle), but FileInstall has nothing there either (which is still fine).  So, we arrive back at needing to handle the case where not specifying localization means there really really isn't localization (aka, the null case).","24/Feb/11 09:39;fmeschbe;Thanks for reporting this issue. Good catch !

I have fixed this in Rev. 1074087 guarding against a null enumeration",20/Nov/12 11:00;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,
WebConsole cannot read the list of enabled plugins when using FileInstall,FELIX-2855,12499396,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,krumpi,krumpi,22/Feb/11 20:03,23/Nov/12 06:54,14/Mar/19 02:47,07/Sep/11 13:12,webconsole-3.1.8,,,,,,,,,,webconsole-4.0.0,,,,File Install,Web Console,,,,,,0,,,,,,"This happens when running felix with Apache FileInstall and the Apache WebConsole with a configuration file org.apache.felix.webconsole.internal.servlet.OsgiManager.cfg that contains a plugins entry like:

plugins = [org.apache.felix.webconsole.internal.compendium.ConfigManager, org.apache.felix.webconsole.internal.core.BundlesServlet, org.apache.felix.webconsole.internal.core.ServicesServlet, org.apache.felix.webconsole.internal.misc.ShellServlet, org.apache.felix.webconsole.internal.system.VMStatPlugin]

This is generated with the configuration UI selecting and unselecting a few plugins
The bug is that File Install will save the plugins entry as indicated above but when the WebConsole start is not able to read the plugins entry like above and defaults to all plugins are enabled
",,,86400,86400,,0%,86400,86400,,,,,,,,,,,,22/Feb/11 20:05;krumpi;FELIX-2855.patch;https://issues.apache.org/jira/secure/attachment/12471660/FELIX-2855.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-09-07 13:12:54.822,,,no_permission,,,,,,,,,,,56120,,,Fri Nov 23 06:54:48 UTC 2012,,,,,,0|i0rfjj:,158161,,,,,,,,22/Feb/11 20:05;krumpi;This is a proposed fix for OsgiManager that will read a plugins property as a String and parse it appropriately,07/Sep/11 13:12;v_valchev;Fixed together with https://issues.apache.org/jira/browse/FELIX-2697,23/Nov/12 06:54;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,
Infinite reloading of config file ending with .config,FELIX-2852,12499270,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,gnt,thecarlhall,thecarlhall,21/Feb/11 19:29,17/Mar/15 07:00,14/Mar/19 02:47,15/Mar/12 17:01,fileinstall-3.1.10,,,,,,,,,,fileinstall-3.2.0,,,,File Install,,,,,,,3,,,,,,"When a config file ending with .config is written back to the file system, lastModified is updated even if the file has not changed since it was last written/read. Config files ending with .cfg are not affected by this as lastModified is not updated if the file has not changed.

Workaround: apply the patch from FELIX-2843 and set felix.fileinstall.disableConfigSave=false",,,,,,,,,,,,,,,,,,,,08/Mar/11 06:50;thecarlhall;felix-2852.diff;https://issues.apache.org/jira/secure/attachment/12472917/felix-2852.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-02-21 13:30:39.303,,,no_permission,,,,,,,,,,,56123,,,Tue Feb 21 13:30:39 UTC 2012,,,,,,0|i07gb3:,41408,,,,,,,,21/Feb/11 19:31;thecarlhall;I have a preliminary patch put together to update the .config file's checksum in the scanner but have hardcoded how the scanner is retrieved. I will continue to refine the patch and attach it once I am satisfied with it.,08/Mar/11 06:50;thecarlhall;Attached a patch to manually update a file's checksum after writing a .config file. The checksum is only updated in scanners that have prior knowledge of the file.,"13/Apr/11 02:43;thecarlhall;Bumping up to ""critical"" as infinite loops can get painful. Not a blocker as there is a workaround.","21/Feb/12 13:30;jstrom;~1 year later; is there any update on this bug? I still have this problem running 3.1.10 (as shipped with Apache Karaf 2.2.5). As 3.1.10 is the latest version released, and the workaround doesn't work on the released version, I'd say this is a problem. Patching trunk manually isn't too production-friendly.",,,,,,,,,,,,,,,,,,,,,,,
NPE in ConfigurationManager.java:1003 (static String toString( ServiceReference ref )),FELIX-2847,12498900,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,chomats,chomats,17/Feb/11 15:14,25/Sep/13 14:02,14/Mar/19 02:47,18/Feb/11 13:11, configadmin-1.2.8,,,,,,,,,,configadmin-1.4.0,,,,Configuration Admin,,,,,,,0,,,,,,"When the config admin thread try to log an error (in handleCallBackError), a NPE is raised. May ref.getBundle() is null ?

java.lang.NullPointerException
        at org.apache.felix.cm.impl.ConfigurationManager.toString(ConfigurationManager.java:1003)[3:org.apache.felix.configadmin:1.2.8]
        at org.apache.felix.cm.impl.ConfigurationManager.handleCallBackError(ConfigurationManager.java:1028)[3:org.apache.felix.configadmin:1.2.8]
        at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceUpdate.run(ConfigurationManager.java:1164)[3:org.apache.felix.configadmin:1.2.8]
        at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:104)[3:org.apache.felix.configadmin:1.2.8]
        at java.lang.Thread.run(Thread.java:662)[:1.6.0_23]",window ; cygwin,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-18 11:23:33.569,,,no_permission,,,,,,,,,,,40403,,,Wed Sep 25 14:02:35 UTC 2013,,,,,,0|i0ar0v:,60651,,,,,,,,"18/Feb/11 11:23;fmeschbe;Yes, ServiceReference.getBundle() may be null if the service has been unregistered. This may probably also be the cause for the error to report: The service has been unregistered and thus update fails...

Will fix the toString() method to check for this situation and adapt logging accordingly.",18/Feb/11 13:11;fmeschbe;Fixed in Rev. 1071990.,25/Sep/13 14:02;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,,
ipojo composite references wrong maven-ipojo-plugin version,FELIX-2845,12498764,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,pieber,pieber,16/Feb/11 14:24,04/Feb/13 12:34,14/Mar/19 02:47,16/Feb/11 15:54,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,If you build ipojo with an empty maven repository the problem occurs that some projects still reference maven-ipojo-plugin 1.7.0-SNAPSHOT (1.9.0-SNAPSHOT) instead. Could be easily solved by upgrading to 1.8.0.,,,,,,,,,,,,,,,,,,,,16/Feb/11 14:25;pieber;ipojo-maven-plugin-version.patch;https://issues.apache.org/jira/secure/attachment/12471174/ipojo-maven-plugin-version.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-16 15:54:32.992,,,no_permission,,,,,,,,,,,40402,,,Wed Feb 16 15:54:32 UTC 2011,,,,,,0|i0aqe7:,60549,,,,,,,,16/Feb/11 14:25;pieber;Fix for the problem,"16/Feb/11 15:54;clement.escoffier;I've applied your patch.

Thanks !",,,,,,,,,,,,,,,,,,,,,,,,,
Parsing PID assumes last 4 chars are file extension,FELIX-2843,12498719,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,cziegeler,thecarlhall,thecarlhall,16/Feb/11 05:28,17/Mar/15 07:00,14/Mar/19 02:47,16/Feb/11 16:30,fileinstall-3.1.10,,,,,,,,,,fileinstall-3.2.0,,,,File Install,,,,,,,0,,,,,,"In ConfigInstaller.parsePid(String), to clear off the path extension the following logic is used.

String pid = path.substring(0, path.length() - 4);

This appears to be a leftover from when only .cfg (4 chars) was allowed as a file extension. Since .config is now a valid file extension, the above logic leaves "".co"" on the end of the service pid that is parsed out.

This blocks configuring of services when a configuration file ending with .config is used. .config syntax is required if a property needs to be something like String[].",,,,,,,,,,,,,,,,,,,,16/Feb/11 05:31;thecarlhall;felix-2843.diff;https://issues.apache.org/jira/secure/attachment/12471152/felix-2843.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-16 16:30:00.105,,,no_permission,,,,,,,,,,,40440,,,Wed Feb 16 16:30:00 UTC 2011,,,,,,0|i0aqbj:,60537,,,,,,,,"16/Feb/11 05:31;thecarlhall;Attaching patch of suggested solution. The patch changes the assumption from ""everything before the last 4 chars are the pid"" to ""find the last . and assume everything before that is the pid.""
All files processed will have an extension (.cfg, .config) as checked by the method that calls parsePid, ConfigInstall.setConfig.",16/Feb/11 16:30;cziegeler;Thanks for the patch - I've committed it in revision 1071303,,,,,,,,,,,,,,,,,,,,,,,,,
Async threads should be daemon threads,FELIX-2836,12498264,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,10/Feb/11 16:45,07/Mar/11 12:14,14/Mar/19 02:47,10/Feb/11 16:46,eventadmin-1.2.4,,,,,,,,,,eventadmin-1.2.10,,,,Event Admin,,,,,,,0,,,,,,"While fixing FELIX-2608 unfortunately only the sync threads were changed into daemon threads.

The async ones need to be changed as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40444,,,Thu Feb 10 16:46:11 UTC 2011,,,,,,0|i0aq0f:,60487,,,,,,,,10/Feb/11 16:46;cziegeler;Fixed in revision 1069462,,,,,,,,,,,,,,,,,,,,,,,,,,
"SCR plugin: Parsing of ""options"" for property tag broken for javadoc annotations",FELIX-2835,12498245,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,alexander.klimetschek,alexander.klimetschek,10/Feb/11 13:53,09/May/11 18:14,14/Mar/19 02:47,21/Feb/11 15:48, maven-scr-plugin-1.6.0,scr generator 1.0.0,,,,,,,,,maven-scr-plugin-1.7.0,scr ant task 1.1.0,scr generator 1.1.0,,SCR Tooling,,,,,,,0,,,,,,"A property with options should use the key=value parameters after the ""options"" parameter as name=label for the metatype options:

    @scr.property type=""String"" value=""one"" options one=""One"" two=""Two"" three=""Three""

However, it produces this single option:

            <Option value=""one=One"" label=""three=Three""/>

The problem is that this loop in org.apache.felix.scrplugin.helper.PropertyHandler.processProperty() [0] is inherently broken due to both a ""j++"" in the for loop and a ""j += 2"" at the end, and a parameters[j+2]:

            for (int j=0; j < parameters.length; j++) {
                if (Constants.PROPERTY_OPTIONS.equals(parameters[j])) {
                    options = new LinkedHashMap<String, String>();
                } else if (options != null) {
                    String optionLabel = parameters[j];
                    String optionValue = (j < parameters.length-2) ? parameters[j+2] : null;
                    if (optionValue != null) {
                        options.put(optionLabel, optionValue);
                    }
                    j += 2;
                }
            }

Without having debugged it, I guess it should be parameters[j+1] and j+=1, as you only skip one parameter for reading the label, not two (given that one=""One"" is represented as two parameters ""one"" and ""One"").

[0] http://svn.apache.org/repos/asf/felix/trunk/scrplugin/generator/src/main/java/org/apache/felix/scrplugin/helper/PropertyHandler.java",,,,,,,,,,,,,,,,,FELIX-2945,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-18 17:10:00.13,,,no_permission,,,,,,,,,,,40416,,,Fri Feb 18 17:10:00 UTC 2011,,,,,,0|i0aq2f:,60496,,,,,,,,"18/Feb/11 17:10;cziegeler;Thanks for reporting!

Actually an option one=""One"" is a single parameter.

I fixed this in revision 1072066",,,,,,,,,,,,,,,,,,,,,,,,,,
Tablesorter loses it's styling if placed in JQuery TAB component,FELIX-2830,12497967,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,v_valchev,v_valchev,v_valchev,08/Feb/11 09:02,23/Nov/12 06:54,14/Mar/19 02:47,08/Feb/11 09:06,webconsole-3.1.6,,,,,,,,,,webconsole-4.0.0,,,,Web Console,,,,,,,0,,,,,,"If a sorted table is placed in a tab, then when you click on the table headings to sort the column, the styling is gone and the down/up arrow, showing the sort order is hidden.",,;08/Feb/11 09:06;v_valchev;3600,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,08/Feb/11 09:03;v_valchev;screen002.png;https://issues.apache.org/jira/secure/attachment/12470573/screen002.png,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-11-23 06:54:48.488,,,no_permission,,,,,,,,,,,40398,,,Fri Nov 23 06:54:48 UTC 2012,,,,,,0|i0aq0v:,60489,,,,,,,,08/Feb/11 09:03;v_valchev;the attached image illustrates the problem,08/Feb/11 09:06;v_valchev;Fixed in rev.1068296,23/Nov/12 06:54;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,
The maven-ipojo-plugin archetype descriptor is not conform,FELIX-2829,12497852,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,07/Feb/11 14:52,04/Feb/13 12:33,14/Mar/19 02:47,07/Feb/11 15:56,,,,,,,,,,,maven-ipojo-plugin-1.8.2,,,,iPOJO,,,,,,,0,,,,,,The archetype descriptor provided inside the maven-ipojo-plugin does not follow the schema leading to some issue in m2eclipse.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40439,,,Mon Feb 07 15:56:30 UTC 2011,,,,,,0|i0aqan:,60533,,,,,,,,07/Feb/11 15:56;clement.escoffier;Fixed in trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,
DependencyManager ResourceDependency annotation can't be applied on a class field,FELIX-2828,12497839,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,pderop,pderop,07/Feb/11 12:32,07/Feb/11 12:40,14/Mar/19 02:47,07/Feb/11 12:39,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"When using the Dependency Manager @ResourceDependency annotation, it is not possible to inject the resource on a class fields.
For example, the following code does not work:

@Component
class VideoPlayer
{
    @ResourceDependency(required=true, filter = ""(path=/path/video.mkv)"")
    URL resource;

    void play()
    {
         // this.resource is not injected with the required URL ...
    }
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40406,,,Mon Feb 07 12:39:58 UTC 2011,,,,,,0|i0aqbr:,60538,,,,,,,,07/Feb/11 12:39;pderop;Committed a patch in revision 1067937.,,,,,,,,,,,,,,,,,,,,,,,,,,
The maven-ipojo-plugin does not replace component classes in WAR files,FELIX-2825,12497773,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,dyblast,dyblast,06/Feb/11 00:54,04/Feb/13 12:34,14/Mar/19 02:47,07/Feb/11 15:56,iPOJO-1.8.0,,,,,,,,,,ipojo-manipulator-1.8.2,,,,iPOJO,,,,,,,0,,,,,,"HI,
I have notice a problem with the maven-ipojo-plugin on war package.
The resulting classes are incorrect.
Indeed when i create a war i have this error when i deploy it:
 createInstance -> Cannot invoke the constructor (method not found) :
Now if i create a bundle instead, i take the classes from it and i put it in the former war, the war works

my plugins part of maven:
-------------------------------------------------
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>1.4.3</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                        <configuration>
                            <instructions>
                                <Bundle-ClassPath>
                                    .,
                                    WEB-INF/classes
                                </Bundle-ClassPath>
                                <Embed-Directory>WEB-INF/lib</Embed-Directory>
                                <Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
                                <Embed-Transitive>true</Embed-Transitive>
                                <Web-ContextPath>webapp</Web-ContextPath>
                                <Webapp-Context>webapp</Webapp-Context>
                            </instructions>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-ipojo-plugin</artifactId>
                <version>1.8.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>ipojo-bundle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
-------------------------------------------------------------","Jetty, Windows",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-07 15:56:19.117,,,no_permission,,,,,,,,,,,40407,,,Tue Jan 03 12:09:46 UTC 2012,,,,,,0|i0aq27:,60495,,,,,,,,"06/Feb/11 22:02;dyblast;I have found the issue...
the class is correctly generated but it never inject into the final war...
Indeed
Pojoization.java:382
                // If the class was manipulated, write out the manipulated
                // version of the bytecode
                if (m_classes.containsKey(curEntry.getName())) {
                    JarEntry je = new JarEntry(curEntry.getName());
                    byte[] outClazz = (byte[]) m_classes.get(curEntry.getName());
                    if (outClazz != null && outClazz.length != 0) {
                        jos.putNextEntry(je); // copy the entry header to jos
                        jos.write(outClazz);

So the program check if there is a class corresponding to a directory entry ... for example
m_classes = {com/truc/blabla.class} and curEntry = WEB-INF/classes/com/truc/blabla.class
So the orignal class is copied and not replaced.

Small ugly fix: 
                String classEntry = curEntry.getName().replace(""WEB-INF/classes/"","""");
                if (m_classes.containsKey(classEntry)) {
                    JarEntry je = new JarEntry(curEntry.getName());
                    byte[] outClazz = (byte[]) m_classes.get(classEntry);","07/Feb/11 15:56;clement.escoffier;Fixed in trunk.

I've modified your patch a bit, please check with the manipulator and the maven-ipojo-plugin from the trunk (1.9.0-SNAPSHOT).

Thanks","31/Dec/11 22:41;bob.ziuchkovski@gmail.com;I have run into the same problem.  I checked-out and built the ipojo trunk to test this fix.  Unfortunately, it looks like the code in the externalize() method of src/main/java/org/apache/felix/ipojo/manipulator/store/mapper/WABResourceMapper.java fails via throwing IllegalArgumentException when it encounters any non-class file, such as META-INF/MANIFEST.MF.  If desired, I can craft and upload a simple test maven war project to reproduce the issue.","03/Jan/12 12:09;sauthieg;As you already have the source code of the manipulator, maybe you could add a simple WABResourceMapperTestCase (if not already existing) that reproduce the problem.
",,,,,,,,,,,,,,,,,,,,,,,
Components that have a ConfigurationPolicy value of REQUIRE fail to activate,FELIX-2824,12497691,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,stephen.flynn@jftechnology.com,stephen.flynn@jftechnology.com,04/Feb/11 15:40,20/Nov/12 10:58,14/Mar/19 02:47,04/Feb/11 22:06,scr-1.6.2,,,,,,,,,,scr-1.6.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Components that have a ConfigurationPolicy value of REQUIRE are no longer configured and activated by configuration admin.

This was working fine in scr-1.6.0 and earlier versions.","Felix 3.0.6
Config admin 1.2.8",,,,,,,,,,,,,,,,,,,04/Feb/11 16:44;stephen.flynn@jftechnology.com;policy-required-bug-example-1.0.0-sources.jar;https://issues.apache.org/jira/secure/attachment/12470244/policy-required-bug-example-1.0.0-sources.jar,04/Feb/11 16:44;stephen.flynn@jftechnology.com;policy-required-bug-example-1.0.0.jar;https://issues.apache.org/jira/secure/attachment/12470243/policy-required-bug-example-1.0.0.jar,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-02-04 18:41:56.28,,,no_permission,,,,,,,,,,,40434,,,Tue Nov 20 10:58:16 UTC 2012,,,,,,0|i0aqev:,60552,,,,,,,,"04/Feb/11 16:54;stephen.flynn@jftechnology.com;Attached bundle should demonstrate the issue. SCR-1.6.0 activates 2 components as expected, not so with current SCR-1.6.2 snapshot.",04/Feb/11 18:41;fmeschbe;Thanks for testing trunk and reporting the bug. I will look into it.,"04/Feb/11 22:02;fmeschbe;With the refactoring of FELIX-2578 the new configuration support instance is created upon a Service event received from the Configuration Admin service registration. If the ConfigurationAdmin service is already active before the Declarative Services bundle is started, this service event is never received by the DS bundle and thus the configuration support instance is not created.",04/Feb/11 22:06;fmeschbe;Fixed in Rev. 1067309 by setting up the configuration support instance in case the configuration admin service is already registered when declarative services starts,20/Nov/12 10:58;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,
Uncaught exception in case of circular service reference,FELIX-2823,12497628,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,03/Feb/11 22:15,20/Nov/12 10:58,14/Mar/19 02:47,03/Feb/11 22:30, scr-1.6.0,,,,,,,,,,scr-1.6.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,The DependencyManager.getService(ServiceReference) method catches IllegalStateException possibly thrown from the BundleContext.getService method. Unfortunately this is not the only possible exception thrown from this method. So we have to catch Exception in general and log that situation properly to cope with the situation and help developers/deployers.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40429,,,Tue Nov 20 10:58:18 UTC 2012,,,,,,0|i0aqbb:,60536,,,,,,,,03/Feb/11 22:30;fmeschbe;Fixed in Rev. 1067009 catching and logging Exception instead of just IllegalStateException,20/Nov/12 10:58;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
Component service references not unbound in reverse order (breaks compendium spec 112.5.15),FELIX-2821,12497568,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,stephen.flynn@jftechnology.com,stephen.flynn@jftechnology.com,03/Feb/11 14:54,20/Nov/12 10:58,14/Mar/19 02:47,03/Feb/11 20:32, scr-1.6.0,,,,,,,,,,scr-1.6.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Component references are unbound in the same order in which they were bound. If I have read the spec right it says they should be unbound in the reverse order... 

112.5.15

When unbinding services, the references are processed in the reverse order
in which they are specified in the component description.

The attached bundle demonstrates this

When activating the bind order is correct...

ExampleComponent.bindServiceA() 
ExampleComponent.bindServiceB()  
ExampleComponent.bindServiceC() 
ExampleComponent.activate()

But when deactivating the order is not reversed...

ExampleComponent.deactivate()
ExampleComponent.unbindServiceA()
ExampleComponent.unbindServiceB()
ExampleComponent.unbindServiceC()



","Apache Maven 2.2.1 (r801777; 2009-08-06 20:16:01+0100)
Java version: 1.6.0_16
Default locale: en_GB, platform encoding: Cp1252
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""",,,,,,,,,,,,,,,,,,,03/Feb/11 14:57;stephen.flynn@jftechnology.com;ref-order-bug-example-1.0.0-sources.jar;https://issues.apache.org/jira/secure/attachment/12470147/ref-order-bug-example-1.0.0-sources.jar,03/Feb/11 14:57;stephen.flynn@jftechnology.com;ref-order-bug-example-1.0.0.jar;https://issues.apache.org/jira/secure/attachment/12470146/ref-order-bug-example-1.0.0.jar,03/Feb/11 17:42;stephen.flynn@jftechnology.com;scr-2821-patch.txt;https://issues.apache.org/jira/secure/attachment/12470164/scr-2821-patch.txt,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-02-03 15:57:36.521,,,no_permission,,,,,,,,,,,40443,,,Tue Nov 20 10:58:14 UTC 2012,,,,,,0|i0aqhr:,60565,,,,,,,,03/Feb/11 15:57;fmeschbe;Correct. Thanks for reporting this issue.,03/Feb/11 17:44;stephen.flynn@jftechnology.com;Took a quick look at the source and the attached patch seems to do the trick without breaking existing tests.,"03/Feb/11 20:02;fmeschbe;Thanks for the patch, this is basically the same solution I came up with ;-)",03/Feb/11 20:32;fmeschbe;I have applied the provided patch and added an integration test ensuring correct bind/unbind order in Rev. 1066946.,20/Nov/12 10:58;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,
Provide a default value when using <_wab/>,FELIX-2820,12497486,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,not,not,02/Feb/11 17:38,11/Oct/11 17:09,14/Mar/19 02:47,24/Jun/11 20:55,,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Currently when building a WAB with the maven bundle plugin I have to specify the following:

<wab>src/main/webapp</wab>

to get the web content pulled in. I would like the maven bundle plugin to default <_wab/> to set src/main/webapp.

Thanks
Alasdair",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-24 20:55:59.882,,,no_permission,,,,,,,,,,,56133,,,Fri Jun 24 20:55:59 UTC 2011,,,,,,0|i0vy67:,184509,,,,,,,,24/Jun/11 20:55;mcculls;Fixed in r1139436,,,,,,,,,,,,,,,,,,,,,,,,,,
packageinfo files in src/main/java are ignored,FELIX-2819,12497484,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,not,not,02/Feb/11 17:37,11/Oct/11 17:09,14/Mar/19 02:47,24/Jun/11 18:21,,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,1,,,,,,"The bnd tool can pick up the package version from a packageinfo file if it is stored next to the java files.

The maven-bundle-plugin will only include them in the jar, and make them visible to bnd if they are in the src/main/resources directory. I would like to use these files for specifying versions, rather than putting it in the pom. This allows me to specify the version once in this file even if it is repackaged in a different jar later.

The problem is I have to put the files into src/main/resources which significantly reduces the chance of updating them when a change is made. Could the maven-bundle-plugin be updated to put the packageinfo files from src/main/java into the jar before calling bnd?

Thanks
Alasdair
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-02 19:05:22.922,,,no_permission,,,,,,,,,,,56134,,,Fri Jun 24 18:21:37 UTC 2011,,,,,,0|i0vy93:,184522,,,,,,,,"02/Feb/11 19:05;magnet;This would be nice indeed.

Just for the record (you might find it useful), we use the @Version bnd annotation on the package statement in the package-info.java file to achieve the same, and Maven is happy with this since it's a Java source file.

E.g,

@Version(""1.0.2"")
package com.mycompany.myproject.mypackage

import aQute.bnd.annotation;

One thing nice with this is that it's possible to use a String constant defined in a Java class, for those times when we want to make the version a part of the Java API... And this usage finally makes package-info.java interesting for more than just package javadoc. Drawbacks are that we depend on bnd.annotation's JAR at compile time only for manifest generation, and that no tool that I know of updates these versions when the API evolves.

Hope this helps.","03/Feb/11 13:47;not;I didn't realize the package-info.java would be picked up, but I have some packages which are copied from the OSGi git repo and they use package.html and packageinfo. I don't feel comfortable rewriting these to be package-info.java instead. It is worth considering though.

","04/Feb/11 21:13;magnet;By the way, if you're not doing it already (or for people who might read this issue), here's the cleanest workaround :

{code:XML}
   <project>
	<build>
	        <!-- A lot of stuff may go here-->
		<resources>
	                <!-- You have to keep this only if you want to keep the default Maven layout as well-->                        
                        <resource>
                                <directory>src/main/resources</directory>
                        </resource>

	                <!-- Here's the magic stuff: include everything except Java and hidden files (eg, .svn directories) -->                        
			<resource>
				<directory>${project.build.sourceDirectory}</directory>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>**/.*</exclude>
				</excludes>
			</resource>

	                <!-- Alternatively, you may want to include only packageinfo files (if so, remove the previous
                              <resource/> block that is a superset of this one) -->                        
		        <resource>
			        <directory>${project.build.sourceDirectory}</directory>
				<includes>
					<include>**/packageinfo</include>
				</includes>
			</resource>

		</resources>

                <!-- A lot more stuff, including maven-bundle-plugin if you don't use pluginManagement in a parent POM -->
  	</build>
   </project>
{code}
On our project we put the ""include all resources that are in src/"" rule in a parent POM... Of course, it would still be nice if maven-bundle-plugin would manage bnd-related files out-of-the-box.

Hope this helps,

Simon

Edit: formating is completely messed up... ","04/Feb/11 21:27;not;Words alone cannot express my joy at learning about this workaround. Thank you very much.

Alasdair","04/Feb/11 21:27;not;That said, words is all you'll get, but thanks again.

Alasdair",24/Jun/11 18:21;mcculls;Fixed in r1139399,,,,,,,,,,,,,,,,,,,,,
File Install does not support empty configuration when no configuration already exists,FELIX-2818,12497438,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,02/Feb/11 09:26,17/Mar/15 07:01,14/Mar/19 02:47,02/Feb/11 09:46,fileinstall-3.1.10,,,,,,,,,,fileinstall-3.1.10,,,,File Install,,,,,,,0,,,,,,"If you have an empty cfg (for a ManagedServiceFactory) file in a folder managed by file install, and if this configuration was never pushed, the configuration will never be pushed.

File Install checks if there is an existing configuration, if not create an empty HashTable. As the cfg file is empty, the two Hashtables are equals and so the configuration is not pushed to the configuration admin.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40430,,,Wed Feb 02 09:52:30 UTC 2011,,,,,,0|i0aq9r:,60529,,,,,,,,02/Feb/11 09:46;clement.escoffier;Fixed in trunk.,02/Feb/11 09:52;clement.escoffier;Just update the fix version.,,,,,,,,,,,,,,,,,,,,,,,,,
The maven-bundle-plugin manifest goal should honor the supportedProjectTypes configuration setting.,FELIX-2817,12497383,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,chirino,chirino,chirino,01/Feb/11 20:54,01/Aug/15 11:26,14/Mar/19 02:47,01/Feb/11 20:56,maven-bundle-plugin-2.2.0,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-02 03:55:44.71,,,no_permission,,,,,,,,,,,40438,,,Wed Feb 02 16:06:50 UTC 2011,,,,,,0|i0aq2v:,60498,,,,,,,,01/Feb/11 20:56;chirino;Fixed in rev 1066202,"02/Feb/11 03:55;pieber;Maybe I'm wrong but 2.3 is the wrong target version, since it is already for vote?",02/Feb/11 16:06;chirino;Not sure if 2.3 is going to pass the vote or not.  I'll update the issue if it does pass.,,,,,,,,,,,,,,,,,,,,,,,,
"Difference between ""instance"" and ""provides""",FELIX-2815,12497282,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,drozzy,drozzy,01/Feb/11 04:14,04/Feb/13 12:34,14/Mar/19 02:47,13/Mar/11 18:07,,,,,,,,,,,,,,,iPOJO,,,,,,,0,documentation,"felix,",ipojo,,,"In the documentation on iPOJO Services:
http://felix.apache.org/site/providing-osgi-services.html#ProvidingOSGiservices-Instancereconfiguration

There is no clear explanation of what is the difference between <provides> and <instance>.
It is not clear why ""instance"" is needed at all.

Under the ""Service Properties"" heading on the page, the two are used interchangeably in the examples.

For example, first ""property"" is configured with <provides>:

<component classname=""...FooProviderType1"">
            <provides>
                        <property name=""foo"" field=""m_foo"" value=""Foo""/>
                        <property name=""static"" type=""java.lang.String"" value=""this is a static property""/>
            </provides>
</component>


and then immediately, with no explanation what-so-ever and <intsance> is used, with a tiny explanation that ""The value can be given in the instance configuration"":

<instance component=""...FooProviderType1"">
   <property name=""foo"" value=""My New Foo Value""/>
   <property name=""static"" value=""My Value For Static""/>
</instance>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-01 18:36:03.846,,,no_permission,,,,,,,,,,,56136,,,Mon Feb 07 16:11:21 UTC 2011,,,,,,0|i0vs5r:,183535,,,,,,,,"01/Feb/11 18:36;clement.escoffier;I've updated the page (will be sync soon).
 
I've added an example describing what is instance reconfiguration and how it does impact the published service properties.","07/Feb/11 00:04;drozzy;Sorry, but it is STILL not clear what the ""instance"" is. Why do we need it?

It is first referred to under the section titled ""Service Publication"", as:

""The service is published as long as the instance is valid.""

What instance??? You never introduced the notion of an instance before, and it is confusing.","07/Feb/11 00:16;rickhall;Think of standard Java, you can define a class as implementing some interface. However, this is not sufficient to actually use the class, you need to use ""new"" to create an instance. This is the same with iPOJO components. You define the <component> (i.e., the type) and say that it <provides> some service (i.e., the interfaces it implements) , but this just defines the component type. You still need to create an instance of the component.",07/Feb/11 00:21;rickhall;This distinction is also discussed here: http://felix.apache.org/site/how-to-use-ipojo-factories.html,"07/Feb/11 00:23;drozzy;So  ""defining"" the component not sufficient to say that it ""provides"" some service?
So then the ""instance"" is like registering the service with the central service repository?","07/Feb/11 00:26;drozzy;That is indeed a useful link - and probably should be linked to from this documentation page.
It would be great if the page either had a ""Prerequisites"" section or there was a lead there.

In fact, I am not able to find the ""iPOJO Factories Principles"" from the navigation menu.","07/Feb/11 00:34;rickhall;I'm not sure how else to say it. Defining the component is equivalent to defining a class that implements some interface. Creating and instance of the component is equivalent to doing ""new"" on the a class. Just like a class is not an instance of its implemented interfaces until you actually create an object, neither does a component actually provide its service until it is instantiated. The only difference between the two is that a componen may have dependencies that if not satisfied may prevent the instance from being created, thus preventing its service from being published and this can also change at runtime. Otherwise, the concepts are the same.

To give you an example of why you might want this, imagine you have some class that provides some remote service on a configurable port number. In Java you might do something like this:

    Service s1 = new org.foo.ServiceImpl(6666);
    Service s2 = new org.foo.ServiceImpl(6667);
    Service s2 = new org.foo.ServiceImpl(6668);

In iPOJO you could specify the port as a configurable property in your <component> declaration, then you could do something like this:

    <instance component=""org.foo.ServiceImpl"">
        <property name=""port"" value=""6666""/>
    </instance>
    <instance component=""org.foo.ServiceImpl"">
        <property name=""port"" value=""6667""/>
    </instance>
    <instance component=""org.foo.ServiceImpl"">
        <property name=""port"" value=""6668""/>
    </instance>

So, just like classes and objects separate types and instances in Java, components and component instances provide the same separation in iPOJO.","07/Feb/11 00:35;rickhall;The page is under ""Documentation->User guide->Instances and factories"".","07/Feb/11 00:44;drozzy;Firstly thank you for the explanation.

But, I was referring to the need for the @Provides annotation. I thought it was redundant - but now that I think about it, I see that some components use the @Requires annotation, so we must explicitly say what we want the component to act like.

Regarding my note about being unable to find the page you are referring to, it was more of a complaint about the navigation system of the site, and not really an inquiry of how to find it :-) There are a few problems:

1. Biggest problem is that user is not able to see where they are currently on the site. There is not ""breadcrumbs"", or selected item in the navigation.
2. Next - the name of the pages do not match their name in the Navigation menu. Even in this case the name of the page is ""iPOJO Factories Principles"" while it is called ""Factories and Instances"" in the navigation (note here, that even you got it wrong ;-)

Thank you very much for the help. It is slowly coming together now.","07/Feb/11 00:50;rickhall;Well, I was doing it from memory. :-)

There are lot of concepts, so it is difficult to get everything organized perfectly. In truth, iPOJO is probably our best documented subproject...thanks to Clement! Still, everything can be improved.

Regarding @Provides, yes, you are correct, you must be explicit to say what, if any, services a component provides. Just because a component implements an interface, that doesn't mean that it is necessarily a service. However, the default for @Provides is to assume all implemented interfaces are services, but it also allows you to explicit specify which of the implemented interfaces should be exposed as services.","07/Feb/11 00:53;drozzy;Thank you, this makes it clear.","07/Feb/11 16:11;clement.escoffier;Hi,

I've added a link to the 'factory/instance' page from the {{provides}} page. 

I definitely agree about the navigation, it should be completely redone. Unfortunately, I lack of time. Especially, the content is still on Confluence, and reaching the current state was really not easy (and I still have some issue: modifying the menu force me to edit *all* pages and re-save them, if not the sync do not update them). I've learned that Apache projects are migrating to a CMS, which might make the documentation support easier. ",,,,,,,,,,,,,,,
Spelling Mistake,FELIX-2814,12497281,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,drozzy,drozzy,01/Feb/11 04:06,04/Feb/13 12:34,14/Mar/19 02:47,01/Feb/11 18:16,,,,,,,,,,,,,,,iPOJO,,,,,,,0,documentaion,"felix,","osgi,",,,"Please excuse my spelling bug-reports, but it really bothers me to read this.

On the documentation page:
http://felix.apache.org/site/providing-osgi-services.html#ProvidingOSGiservices-Instancereconfiguration

Under ""Service Publication"" section, first paragraph:
1. ""The provided service handler manages the service publication and providing"". I think ""providing"" is not a correct word to use here.
2.  ""For each declared <provides/>, the handler register a service."". And it should be ""registers"".
3. ""As the @Provides annotation can be used only once, only on service is registered (but publishing all interfaces)."" - There are two mistakes here: first, change ""on"" to ""one"", second - ""but publishing all interfaces"" I think should be changed to ""but all interfaces are published"".

In the second paragraph, last sentence:
1. ""However it is possible to set exposed specifications with the specifications attribute to avoid to expose all collected interfaces"". I think ""to avoid to expose all"" should be changed to ""to avoid exposing all..."". Also - this sentence is very confusing in general - is it possible to simplify it?

Furthermore, following the code sample after this paragraph, the three change notices (blue boxes) are not left-aligned. I don't know if it is like that intentionally or not.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-01 18:16:05.694,,,no_permission,,,,,,,,,,,56137,,,Tue Feb 01 18:16:05 UTC 2011,,,,,,0|i0vudr:,183895,,,,,,,,"01/Feb/11 18:16;clement.escoffier;Richard has fixed the issues. It will be updated during the next sync.

Thanks !

Clement",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in UpdateThread when updating a configuration right after ConfigurationAdmin service starts,FELIX-2813,12497247,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,marrs,marrs,31/Jan/11 19:54,25/Sep/13 14:02,14/Mar/19 02:47,01/Feb/11 12:43,,,,,,,,,,,configadmin-1.4.0,,,,Configuration Admin,,,,,,,0,,,,,,"When you:
1) register as a configuration listener
2) wait for the ConfigurationAdmin service to start
3) upon start, immediately create a new configuration and update its properties

You (sometimes) get a NPE in the UpdateThread because there is a race condition in the codebase:
a) ConfigurationManager.java:1818 will invoke getServiceReference() which uses the service registration to get to the reference
b) ConfigurationManager.java:242 registers the service and assigns the registration to 'configurationAdminRegistration'

First of all, the call to registerService in line 242 will already trigger service listeners and trackers to invoke callbacks before this call returns, so 'configurationAdminRegistration' will still be null. Furthermore, there is no synchronization, the member is not volatile, so we need to make sure this value is really written before any configuration events are created under a) (now the thread doing that is started way before the service is registered).

I will commit a test that shows the exception, but since it happens in a thread I cannot ""catch"" it won't show up as a failed test.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-01 08:32:22.382,,,no_permission,,,,,,,,,,,40426,,,Wed Sep 25 14:02:34 UTC 2013,,,,,,0|i0aqgn:,60560,,,,,,,,"01/Feb/11 08:32;fmeschbe;Thanks for reporting the bug.

First of all declaring the configurationAdminRegistration volatile should help your concerns with the getServiceReference() method; particularly with respect to logging. On the other hand for the getServiceReference() method itself, this is irrelelvant.

Second the other issue is in fact not properly handled but easily fixed: Instead of immediately starting the worker threads for the UpdateQueue instances, we delay the start until after the ConfigurationAdmin service has been fully registered. This allows for events to be queued during the service registration process (by ServiceListeners) and to actually process them after completion of the registration.

This problem has a symmetry in the ConfigurationManager.stop(BundleContext) method: Here the queues should be stopped before unregistering the ConfigurationAdmin service to not get an NPE if a ServiceListener is updating/deleting configuration in the serviceStopped method.","01/Feb/11 08:49;marrs;Take care that the service reference is fetched when an event is created, so even if you delay processing the queue it might be that there's invalid events in there.","01/Feb/11 12:39;fmeschbe;Yes, the ConfigurationEvent is actually generated immediately before sending it out. So just enqueuing the task to send the event is save.","01/Feb/11 12:43;fmeschbe;Committed a fix in Rev. 1066033.

Besides making the service registration field volatile (as proposed) the background threads are started after registering the service (though jobs may be enqueued during the service registration) and are stopped before the service is unregistered.",29/May/12 13:30;glyn.normington;I'm interesting in when this fix will be available for download. Is there a date for configadmin-1.4.0?,30/May/12 07:50;fmeschbe;I am now preparing the release with the released compendium 4.3 libraries,25/Sep/13 14:02;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,
"The <Embed-Dependency> filter can fail if your matching against multiple ""*"" artifact ids.",FELIX-2812,12497116,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,chirino,chirino,chirino,29/Jan/11 01:39,24/Jun/11 12:36,14/Mar/19 02:47,29/Jan/11 02:08,maven-bundle-plugin-2.2.0,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"For example:
<Embed-Dependency>
*;groupId=org.apache.activemq;inline=true;optional=false,
*;groupId=org.yaml;inline=true;optional=false
</Embed-Dependency>

only the first group would match.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40441,,,Sat Jan 29 02:08:20 UTC 2011,,,,,,0|i0aq9z:,60530,,,,,,,,29/Jan/11 02:08;chirino;Fixed in rev r1064938,,,,,,,,,,,,,,,,,,,,,,,,,,
If <Private-Package>!*</Private-Package> is defined the all packages should be exported by {local-packages},FELIX-2811,12497115,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,chirino,chirino,chirino,29/Jan/11 01:22,24/Jun/11 12:36,14/Mar/19 02:47,29/Jan/11 01:26,,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,Maven Bundle Plugin,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40436,,,Sat Jan 29 01:26:57 UTC 2011,,,,,,0|i0aqif:,60568,,,,,,,,"29/Jan/11 01:24;chirino;Right now if you have a bundle with a package called internal, it will not be exported, and since it's not declared private, then it's not included at all in the resulting bundle.",29/Jan/11 01:26;chirino;Fixed in rev 1064937,,,,,,,,,,,,,,,,,,,,,,,,,
maven-bundle-plugin should scan for local packages by looking for *.class files instead of *.java so that all the JVM languages can be supported.,FELIX-2808,12496968,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,chirino,chirino,chirino,27/Jan/11 18:31,24/Jun/11 12:36,14/Mar/19 02:47,27/Jan/11 18:32,,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,Maven Bundle Plugin,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40400,,,Thu Jan 27 18:32:37 UTC 2011,,,,,,0|i0apvr:,60466,,,,,,,,27/Jan/11 18:32;chirino;Fixed in rev 1064245,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix NOTICE files to comply with ASF standards,FELIX-2806,12496776,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,26/Jan/11 08:46,08/Feb/11 09:46,14/Mar/19 02:47,26/Jan/11 09:03,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,The NOTICE files of the Http Service implementation are still formatted according to the old invalid policy. These files must be adapted to the ASF rules and DEPENDENCIES files be added to capture to the old contents of the NOTICE files.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40409,,,Tue Feb 08 09:46:43 UTC 2011,,,,,,0|i0aqq7:,60603,,,,,,,,26/Jan/11 09:03;fmeschbe;Fixed in Rev. 1063635,08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,,,
[Framework] A failed update doesn't rollback properly,FELIX-2802,12496609,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,24/Jan/11 22:11,26/Jan/11 19:50,14/Mar/19 02:47,26/Jan/11 19:50,framework-3.0.7,,,,,,,,,,framework-3.0.8,,,,Framework,,,,,,,0,,,,,,"If an update fails, the rollback doesn't actually remove the module from the global state, which was added before the revise. Worse, it doesn't hold the global lock any longer, which means someone could have started to use the bundle. We need probably do the whole thing with holding the global lock.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40432,,,Wed Jan 26 19:50:31 UTC 2011,,,,,,0|i0aqjr:,60574,,,,,,,,26/Jan/11 19:50;rickhall;Committed a patch for this.,,,,,,,,,,,,,,,,,,,,,,,,,,
Http exports should not use the bundle version,FELIX-2801,12496605,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,24/Jan/11 21:52,08/Feb/11 09:46,14/Mar/19 02:47,25/Jan/11 10:36,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"The http.api bundle exports the API as version ${pom.version}, thus the version of the exported package follows the bundle version, which is completely wrong. Rather the package should be exported with its own version -- starting with 2.0.4 for backwards compatibility with the 2.0.4 release of the API bundle.

Same for the exportet http roxy package.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40387,,,Tue Feb 08 09:46:44 UTC 2011,,,,,,0|i0aq1r:,60493,,,,,,,,"25/Jan/11 10:36;fmeschbe;Export Http Service Extension API at fixed version 2.0.4 (should really be 2.0.0 but has already been exported as 2.0.4 in previous release) and Proxy API as 2.1.0 (has new ProxyListener class).

Fixed in Rev. 1063213",08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,,,
[Framework] Logging will throw an NPE if no bundle is specified,FELIX-2800,12496580,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,24/Jan/11 18:04,26/Jan/11 00:06,14/Mar/19 02:47,24/Jan/11 18:08,framework-3.0.7,,,,,,,,,,framework-3.0.8,,,,Framework,,,,,,,0,,,,,,"The logging code accepts a ServiceReference and a Bundle. It only checks if ServiceReference is null, which means an NPE will result if Bundle is null.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40424,,,Mon Jan 24 18:08:22 UTC 2011,,,,,,0|i0aqdz:,60548,,,,,,,,24/Jan/11 18:08;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall creates multiple configurations for factory configurations on windows,FELIX-2799,12496547,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,24/Jan/11 14:13,17/Mar/15 07:01,14/Mar/19 02:47,24/Jan/11 14:43,,,,,,,,,,,fileinstall-3.1.10,,,,File Install,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40381,,,2011-01-24 14:13:38.0,,,,,,0|i0apwv:,60471,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArtifactListener services are not ordered according to the OSGi ranking,FELIX-2798,12496531,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,24/Jan/11 12:58,17/Mar/15 07:01,14/Mar/19 02:47,24/Jan/11 15:50,,,,,,,,,,,fileinstall-3.1.10,,,,File Install,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40427,,,2011-01-24 12:58:53.0,,,,,,0|i0aq1b:,60491,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parameters are not removed from symbolic name when installing a bundle,FELIX-2795,12496377,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,22/Jan/11 16:51,19/Dec/16 17:23,14/Mar/19 02:47,22/Jan/11 16:54,webconsole-3.1.6,,,,,,,,,,webconsole-3.1.8,,,,,,,,,,,0,,,,,,"If the symbolic name header contains parameters, these are not removed for further processing. Therefore as soon as the header contains a parameter, the update function fails and the bundle ends up installed twice in the framework.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40385,,,Sat Jan 22 16:54:41 UTC 2011,,,,,,0|i0aq4f:,60505,,,,,,,,22/Jan/11 16:54;cziegeler;Fixed in revision 1062196,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugin request is not detected as html request if context path contains a dot,FELIX-2793,12496097,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,20/Jan/11 08:11,19/Dec/16 17:23,14/Mar/19 02:47,20/Jan/11 08:22,webconsole-3.1.6,,,,,,,,,,webconsole-3.1.8,,,,Web Console,,,,,,,0,,,,,,"If the web console is deployed in context path containing a dot like ""/my.context/"" the isHtmlRequest detection in the WebConsolePluginAdapter fails

I think it should rather be checked if an extension is set - checking if there is a dot after the last slash",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40390,,,Thu Jan 20 08:22:23 UTC 2011,,,,,,0|i0apxb:,60473,,,,,,,,20/Jan/11 08:22;cziegeler;Relaxed the check in revision 1061153,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in getStartLevel due to race condition,FELIX-2791,12496021,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,sahoo,sahoo,sahoo,19/Jan/11 16:11,17/Mar/15 07:01,14/Mar/19 02:47,21/Jan/11 01:08,fileinstall-3.1.4,,,,,,,,,,fileinstall-3.1.6,,,,File Install,,,,,,,0,,,,,,"We are using FileInstall 3.1.4 and one of our user is seeing the following exception repeated in the directory watcher main loop continuously:

java.lang.NullPointerException
        at org.apache.felix.fileinstall.internal.FileInstall.getStartLevel(FileInstall.java:283)
        at org.apache.felix.fileinstall.internal.FileInstall.getStartLevel(FileInstall.java:276)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.run(DirectoryWatcher.java:237)
In main loop, we have serious trouble: java.lang.NullPointerException

NPE comes from FileInstall.java:283, which looks like this:
            return (StartLevel) startLevel.waitForService(timeout);

It looks like a concurrency bug to me in FileInstall. The only explanation that I have so far is that in the target environment, code is getting reordered and hence directory watcher thread is spwaned before startLevel is initialzed.. Since startLevel is not declared volatile, nor is it accessed from a synchronized block, DirectoryWatcher thread continues to see the stale value.

So, I suggest we change startLevel to a volatile field. Any comments?
",,,,,,,,,,,,,,,,,,,,20/Jan/11 08:10;sahoo;patch.txt;https://issues.apache.org/jira/secure/attachment/12468836/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-19 20:46:11.858,,,no_permission,,,,,,,,,,,40420,,,Fri Jan 21 01:08:43 UTC 2011,,,,,,0|i0aqc7:,60540,,,,,,,,"19/Jan/11 20:46;gnt;I don't think the code is reordered, but the ConfigAdminSupport  is actually registered before the startLevel service tracker, so if it is called synchronously during the registration , the DirectoryWatcher thread might be started before the tracker is created.

So I'd rather suggest that the trackers are created and started before the ConfigAdmin support, so maybe move the ConfigAdminSupport creation at the end of the FileInstall#start() method.

Could you give that a try and see if it avoids the exception?",20/Jan/11 06:34;sahoo;Assigning to myself,"20/Jan/11 06:37;sahoo;PFA a patch that solves the issue. It introduces a barrier and a flag to make sure watcher threads don't run until fileinstall has finished initialisation. Please review if you want to, as I plan to commit and make a new release of fileinstall ASAP. Thanks.","20/Jan/11 08:10;sahoo;PFA a patch that solves the issue. It introduces a barrier and a flag to make sure watcher threads don't run until fileinstall has finished initialisation. Unlike the previous patch, this one resets the boolean initialised field in stop(). Please review if you want to, as I plan to commit and make a new release of fileinstall ASAP. Thanks. ","20/Jan/11 08:11;sahoo;I now see why the watcher thread can be started because of configuration event. In any case, introducing a barrier is better way to ensure that watcher threads are not active before fileinstall is initialized. So, I am committing the patch.

Sending        fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Sending        fileinstall/src/main/java/org/apache/felix/fileinstall/internal/FileInstall.java
Transmitting file data ..
Committed revision 1061240.
",21/Jan/11 01:08;sahoo;Fixed in 1061240,,,,,,,,,,,,,,,,,,,,,
[Framework] Native library matching is not correctly checking additional extensions,FELIX-2789,12495953,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,19/Jan/11 03:09,26/Jan/11 00:05,14/Mar/19 02:47,19/Jan/11 17:58,framework-3.0.7,,,,,,,,,,framework-3.0.8,,,,Framework,Specification compliance,,,,,,0,,,,,,"It is possible to specify additional native library file extensions using the standard OSGi framework configuration property. The framework currently implements this functionality, but unfortunately it is broken. If a list of N extensions is specified, it will only check the first N-1 extensions, skipping the last one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40442,,,Wed Jan 19 17:58:37 UTC 2011,,,,,,0|i0aq1z:,60494,,,,,,,,19/Jan/11 17:58;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
ServletContextImpl does not propagate context attribute changes to parent context,FELIX-2788,12495937,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,tripod,tripod,18/Jan/11 21:11,08/Feb/11 09:46,14/Mar/19 02:47,24/Jan/11 15:32,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"org.apache.felix.http.base.internal.context.ServletContextImpl does not propagate context attribute changes to parent context.
this is a problem for example when a session event is triggered. then the evt.getSession().getServletContext() is the one of the servlet container and not the felix one, thus the context attributes added prior to the servlet context are not visible.

so either wrap the httpsession in the events with a java proxy for a complete isolation, or delegate all attribute modifications to the parent context.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-24 10:28:53.773,,,no_permission,,,,,,,,,,,40392,,,Tue Feb 08 09:46:43 UTC 2011,,,,,,0|i0aqd3:,60544,,,,,,,,"24/Jan/11 10:28;fmeschbe;More details on the use case: We have a legacy application which stores some application state in a servlet context attribute. When an Http Session is destroyed the state must be updated in the servlet context attribute.

The problem is, that the Http Session provides the ServletContext from the servlet container and the servlet refers to the servlet context from the Http Service implementation. The Http Service implementation creates a ServletContext object for each HttpContext used to register servlets and resources and each ServletContext maintains its own map of context attributes. As a consequence the servlet container's servlet context does not know of the servlet context used by the servlet(s) and thus the attributes are not visible.

To solve this problem in this application, I will extend servlet context attribute handling to optionally share request attributes. If a configuration property is set, servlet context attributes are maintained in the servlet container's servlet context only. Otherwise (and by default) servlet context attributes are maintained in each Servlet Context separately.

Note: Wrapping of the HttpSession object is the subject of another issue: FELIX-2797","24/Jan/11 15:32;fmeschbe;Allow for the configuration of shared ServletContext attributes. Currently configuration is static using a framework property -- org.apache.felix.http.shared_servlet_context_attributes -- which when set to true causes servlet context attributes to be shared amongst all servlet contexts as well as the servlet container's servlet context.

Implemented in Rev. 1062830","24/Jan/11 15:54;fmeschbe;Also updated the Http Service documentation page (added section ""Servlet Context Notes"")",08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,
iPOJO manipulator badly supports custom annotation attributes of type Class,FELIX-2779,12495482,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,pierre.bourret,pierre.bourret,13/Jan/11 12:21,01/Feb/11 16:19,14/Mar/19 02:47,13/Jan/11 17:02,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"I've written a custom handler and its corresponding annotation :
   public @interface Portlet {
      ...
      Class<? extends PortletPresentation> portletClass();
      ...
   }

Then I've defined a component using this annotation :
   @Component
   @Portlet(..., portletClass=DummyComponentPortletImpl.class)
   public class DummyComponentImpl {
      ...
   }

The problem is that the metadata computed by the manipulator doesn't hold the right value for the portletClass attribute :
I got ""Lfr/liglab/adele/icasa/portal/impl/test/DummyComponentPortletImpl;"" instead of ""fr.liglab.adele.icasa.portal.impl.test.DummyComponentPortletImpl"".

Despite it is still possible to deduce the original class name from this strange string, isn't the attribute value supposed to contain the real class name instead of a Java internal type name ?",,,,,,,,,,,,,,,,,,,,13/Jan/11 15:47;pierre.bourret;FixBadClassParameterHandlingInCustomAnnotationVisitor.patch;https://issues.apache.org/jira/secure/attachment/12468259/FixBadClassParameterHandlingInCustomAnnotationVisitor.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-13 17:02:43.952,,,no_permission,,,,,,,,,,,40386,,,Tue Feb 01 16:19:58 UTC 2011,,,,,,0|i0apxj:,60474,,,,,,,,"13/Jan/11 15:47;pierre.bourret;The problem is that the visit(String, Object) method of the CustomAnnotationVisitor is called with a org.objectweb.asm.Type parameter when the annotation attribute type is a Class. The Type.toString() method returns the internal type name, so getClassName() must be used instead.

Here is a patch that solves the problem in my case. It also handles the case of Class[] annotation attribute type.","13/Jan/11 17:02;clement.escoffier;I've applied the patch !

Thanks.

PS: the strange String is the Class internal name.",01/Feb/11 16:19;pierre.bourret;OK : tested with iPOJO-1.8.0,,,,,,,,,,,,,,,,,,,,,,,,
DM compat bundle does not cleanup components when bundle is stopped,FELIX-2778,12495420,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,pderop,pderop,12/Jan/11 21:03,12/Jan/11 21:16,14/Mar/19 02:47,12/Jan/11 21:16,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"The Dependency Manager compatibility bundle has a bug: when the bundle is stopped, all left over Service instances are not stopped propertly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40395,,,Wed Jan 12 21:16:57 UTC 2011,,,,,,0|i0aqhb:,60563,,,,,,,,"12/Jan/11 21:16;pderop;Committed a fix in revision 1058320.

The DependencyActivatorBase.stop(BundleContext ctx) method (in the compatibility bundle) was not invoking the ""cleanup"" method, which stops all active ""Service"" instances.",12/Jan/11 21:16;pderop;fix validated. closing the issue.,,,,,,,,,,,,,,,,,,,,,,,,,
MavenJavaClassDescriptorManager ignores dependencies with system scope,FELIX-2777,12495410,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,mikep,mikep,12/Jan/11 19:52,13/Mar/11 12:56,14/Mar/19 02:47,13/Jan/11 00:46, maven-scr-plugin-1.6.0,,,,,,,,,,maven-scr-plugin-1.7.0,,,,SCR Tooling,,,,,,,0,,,,,,"The getDependencies() method ignores system scope dependencies: 
[...snip...]
if ( Artifact.SCOPE_COMPILE.equals( declared.getScope() )
                    || Artifact.SCOPE_RUNTIME.equals( declared.getScope() )
                    || Artifact.SCOPE_PROVIDED.equals( declared.getScope() ) )
[...snip...]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-13 00:46:37.197,,,no_permission,,,,,,,,,,,40394,,,Thu Jan 13 00:46:37 UTC 2011,,,,,,0|i0aqbz:,60539,,,,,,,,13/Jan/11 00:46;fmeschbe;Added support for system scoped dependencies in Rev. 1058376.,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrent modification exception when installing a deployment package,FELIX-2776,12495379,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,marrs,marrs,12/Jan/11 15:44,01/Apr/14 12:48,14/Mar/19 02:47,12/Jan/11 16:44,,,,,,,,,,,,,,,Deployment Admin,,,,,,,0,,,,,,See ACE-104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40391,,,Wed Jan 12 16:44:02 UTC 2011,,,,,,0|i0aq9b:,60527,,,,,,,,12/Jan/11 16:44;marrs;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP Servlet RequestDispatcher 'forward' has invalid request pathInfo,FELIX-2774,12495299,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,dhay,dhay,11/Jan/11 21:11,13/Jun/14 09:27,14/Mar/19 02:47,12/Feb/14 08:28,http-2.0.4,,,,,,,,,,,,,,HTTP Service,,,,,,,1,,,,,,"I'm trying to have one servlet forward to another servlet.  However, the forwarding doesn't seem to work.

I've set up the proxy servlet in my web.xml as follows (and this is the only servlet...no filters defined)

    <servlet>
        <servlet-name>osgi-servlet-bridge</servlet-name>
        <servlet-class>org.apache.felix.http.proxy.ProxyServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>osgi-servlet-bridge</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>


I then have two bundles, each registers a servlet under a different path (e.g. bundle A registers under alias '/a' and bundle B registers under alias '/b') using the whiteboard pattern.  The implementation of servlet A ends up doing this:

RequestDispatcher rd = request.getRequestDispatcher(""/b/some/path"");
rd.forward(request, response);

This finds the ServletHandler for servlet B just fine, but gets hung up in the 'handle' method. I think this is due to the implementation of the internal RequestWrapper class in the ServletPipeline class.  This implementation overrides the getRequestURI method with the passed in value.  However, ServletHandler.handle passed the result of HttpServletRequest.getPathInfo() to the 'matches' method as a final check to make sure that the servlet should be invoked.  Since the RequestWrapper class does not override getPathInfo, it returns the value from the original request....which is '/a' in my example.
 ",,,,,,,,,,,,,,,,,FELIX-4440,,,24/Jan/11 10:46;fmeschbe;FELIX-2774-simple.patch;https://issues.apache.org/jira/secure/attachment/12469139/FELIX-2774-simple.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-12 04:27:17.209,,,no_permission,,,,,,,,,,,56153,,,Wed Feb 12 08:28:41 UTC 2014,,,,,,0|i1atqf:,271283,,,,,,,,"12/Jan/11 04:27;fmeschbe;Actually, neither forward nor include are really properly implemented in that both do not set the required request attributes.

In addition the forward method to overwrite the getRequestURI method with the forward target looks wrong to me, too, because these methods should always return the same value. It is the request attributes baring the new path strings.

In addtion on forward or include the HttpContext.handleSecurity method is probably not to be called any more ...","12/Jan/11 04:45;fmeschbe;Simple patch against the HTTP Base module:

  - Removes the Request Wrapper overwriting getRequestURI method from the game
  - Adds a ServletHandler.handleInclude method which calls the Servlet's service method
      without the ServletHandlerRequestWrapper (on the grounds that the path related getter
      methods must return the same values)
  - Adds a resetBuffer() call to the forward method

What's still missing is the management of the request attributes mandated by the Servlet API specification

Shall we go this route ? Any takers to hack on the request attribute provisioning ?",24/Jan/11 10:46;fmeschbe;Attaching correct patch this time,"12/Feb/14 08:28;jajans;Stumbled on this while doing some tests with the new Servlet 3.0 API provided by the Jetty 8 upgrade.

Implemented support for proper forward and include requests in Servlets, including some itests to verify this behaviour. Have to take a look at how this works using Filters.

See rev #1567561.",,,,,,,,,,,,,,,,,,,,,,,
Configuration Admin does not work on Foundation 1.2 and Mika,FELIX-2771,12495050,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,clement.escoffier,clement.escoffier,09/Jan/11 10:21,25/Sep/13 14:02,14/Mar/19 02:47,04/Feb/11 11:25, configadmin-1.2.8,,,,,,,,,,configadmin-1.4.0,,,,Configuration Admin,,,,,,,0,,,,,,"The configuration admin implementation uses classes and methods not available in Foundation and/or Mika.

In Foundation:
The method getCause() is undefined for the type PrivilegedActionException
The method valueOf(String) in the type Boolean does not exist for the arguments (boolean)

On Mika, the SecureRandom class is not available:
couldn't find a SecureRandom
	at java.security.SecureRandom.<init>(SecureRandom.java:78)
	at org.apache.felix.cm.impl.ConfigurationManager.createPid(ConfigurationManager.java:870)
	at org.apache.felix.cm.impl.ConfigurationManager.createFactoryConfiguration(ConfigurationManager.java:450)
	at org.apache.felix.cm.impl.ConfigurationAdminImpl.createFactoryConfiguration(ConfigurationAdminImpl.java:84)



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-04 11:25:36.89,,,no_permission,,,,,,,,,,,40447,,,Wed Sep 25 14:02:36 UTC 2013,,,,,,0|i0aqfj:,60555,,,,,,,,"04/Feb/11 11:25;fmeschbe;Thanks for reporting these issues.

I have fixed them in Rev. 1067154 as follows:

   PrivilegedActionException: use getException() instead of getCause()
   Boolean.valueOf(boolean): use boolean ? TRUE : FALSE
   SecureRandom: fall back to Random   ",25/Sep/13 14:02;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,,,
maven-scr-plugin 1.6.0 incompatible with <packaging>pom</packaging> projects,FELIX-2770,12495023,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,benalex,benalex,08/Jan/11 08:20,13/Mar/11 12:56,14/Mar/19 02:47,10/Jan/11 07:35, maven-scr-plugin-1.6.0,,,,,,,,,,maven-scr-plugin-1.7.0,,,,SCR Tooling,,,,,,,0,,,,,,"maven-scr-plugin 1.6.0 when defined in a pom.xml that is of type <packaging>pom</packaging> yields an exception during a Maven 2.2.1 reactor build:

{code}
java.lang.IllegalStateException: basedir /home/balex/projects/roo/osgi-roo-bundle/src/main/java does not exist
	at org.codehaus.plexus.util.DirectoryScanner.scan(DirectoryScanner.java:290)
	at org.apache.felix.scrplugin.mojo.MavenJavaClassDescriptorManager.getSourceFiles(MavenJavaClassDescriptorManager.java:97)
	at org.apache.felix.scrplugin.JavaClassDescriptorManager.getSources(JavaClassDescriptorManager.java:109)
	at org.apache.felix.scrplugin.JavaClassDescriptorManager.getJavaClassesFromSources(JavaClassDescriptorManager.java:446)
	at org.apache.felix.scrplugin.JavaClassDescriptorManager.getSourceDescriptions(JavaClassDescriptorManager.java:362)
	at org.apache.felix.scrplugin.SCRDescriptorGenerator.execute(SCRDescriptorGenerator.java:233)
	at org.apache.felix.scrplugin.mojo.SCRDescriptorMojo.execute(SCRDescriptorMojo.java:184)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
{code}

It is typical to use a <packaging>pom</package> in a parent module in large OSGi systems such as Spring Roo. Such modules don't have src/main/java directories as there is no Java code contained within them.

This bug is not present when using maven-scr-plugin 1.4.4 and below.","Apache Maven 2.2.1 (rdebian-4)
Java version: 1.6.0_22
Java home: /usr/lib/jvm/java-6-sun-1.6.0.22/jre
Default locale: en_AU, platform encoding: UTF-8
OS name: ""linux"" version: ""2.6.35-23-generic"" arch: ""i386"" Family: ""unix""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-09 02:00:01.979,,,no_permission,,,,,,,,,,,40474,,,Sun Jan 09 18:00:47 UTC 2011,,,,,,0|i0apw7:,60468,,,,,,,,"09/Jan/11 02:00;fmeschbe;Hmm, you should typically not run the SCR plugin in parent projects ;-)

I assume you do this for inheritance, right ? We generally do not declare the plugin in the parent pom in the plugins element but inside the pluginManagement element and then redeclare it in each bundle that actually requires it.

But we could probably add some code to prevent the plugin from running in pom projects","09/Jan/11 13:35;benalex;Yes, we are using it for inheritance. I know you can use the technique mentioned, but the problem is we have 52 modules which would then need a <plugin> entry. It is preferable for us to use inheritance and not require the <plugin> entry duplication.","09/Jan/11 18:00;cziegeler;Yes, I think we should check if the dir exists, and skip execution if not",,,,,,,,,,,,,,,,,,,,,,,,
HttpContext.handleSecurity returns SC_FORBIDDEN unless response is comitted,FELIX-2768,12494998,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,db82407,db82407,07/Jan/11 23:00,08/Feb/11 09:46,14/Mar/19 02:47,09/Jan/11 03:25,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"The JavaDoc for HttpContext.handleSecurity states:

	 * If the request requires authentication and the Authorization header in
	 * the request is missing or not acceptable, then this method should set the
	 * WWW-Authenticate header in the response object, set the status in the
	 * response object to Unauthorized(401) and return <code>false</code>

So the following implementation of handleSecurity() should cause an UNAUTHORIZED response:

                response.setHeader(""WWW-Authenticate"", ""BASIC realm=\""Secure Moixa Energy Gateway\"""");
                response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
                return false;

This worked OK in org.apache.felix.http.jetty-1.0.1, but fails in org.apache.felix.http.jetty-2.0.4, by always returning SC_FORBIDDEN.

Examining the implementation: org/apache/felix/http/base/internal/handler/ServletHandler.java:

        if (!getContext().handleSecurity(req, res)) {
            if (!res.isCommitted()) {
                res.sendError(HttpServletResponse.SC_FORBIDDEN);
            }
        } 

which means that SC_FORBIDDEN is always returned, unless the response is committed.
In order to commit the response, response.flushBuffer() must be called in the handleSecurity() implementation after setting the response code to unauthorized. Howver, the JavaDoc for HttpContext does not indicate that it is necessary to commit the response.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-08 00:04:46.095,,,no_permission,,,,,,,,,,,40467,,,Tue Feb 08 09:46:43 UTC 2011,,,,,,0|i0aqhj:,60564,,,,,,,,"08/Jan/11 00:04;fmeschbe;I also ran into this issue a few times ...

I think the problem that the ServletHandler tries to solve is to send back a sensible error instead of a successfull 200 response in case the HttpContext did not send a response.

Maybe doHandle method should be modified like this:

    res.setStatus(HttpServletResponse.SC_FORBIDDEN);
    if (getContext().handleSecurity(req, res)) { 
       res.setStatus(HttpServletResponse.SC_OK); // default back to OK
       servlet.service(...)
    }

This would ensure the request is terminated with 403 unless the handleSecurity method returning false has set a different status.

WDYT ?","08/Jan/11 10:56;db82407;I've only come across this recently (since switching to 2.0.4). Incidentally, it took me a while to find the correct source code, since there's an http.jetty directory under the felix trunk, while the code for http.jetty is just under the http directory.

Yes, it looks like the change you suggest would resolve this problem.



",09/Jan/11 03:25;fmeschbe;Fixed in Rev. 1056878,08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,
Calling update() on a newly created factory configuration causes FileNotFoundException,FELIX-2766,12494911,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,07/Jan/11 05:36,25/Sep/13 14:02,14/Mar/19 02:47,04/Feb/11 20:02, configadmin-1.2.8,,,,,,,,,,configadmin-1.4.0,,,,,,,,,,,0,,,,,,"The following code throws java.io.FileNotFoundException

  Configuration config = configurationAdmin.createFactoryConfiguration(name, null);
  config.update();

because the Configuration is newly created and has never been persisted, but the update() method tries to read the persistence file.

According to a comment by Peter Kriens on the OSGi Dev List [1], the update() method should in this case just assume an empty dictionary and push this past the configuration plugins into the ManagedServiceFactory service.

[1] http://www.mail-archive.com/osgi-dev@mail.osgi.org/msg01773.html",,,,,,,,,,,,,,,,,,,,19/Jan/11 03:42;thecarlhall;felix-2766.diff;https://issues.apache.org/jira/secure/attachment/12468724/felix-2766.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-17 19:48:39.13,,,no_permission,,,,,,,,,,,40421,,,Wed Sep 25 14:02:34 UTC 2013,,,,,,0|i0apy7:,60477,,,,,,,,17/Jan/11 19:48;thecarlhall;I'm working on a patch for this that I should have available in the next couple of days.,19/Jan/11 03:42;thecarlhall;Attaching patch to have the config loading method not try to load a config file when it doesn't exist but return an empty Dictionary (Hashtable).,19/Jan/11 06:16;fmeschbe;Thanks for providing the patch. I will look into it asap.,"04/Feb/11 20:02;fmeschbe;I chose a slightly different approach in that I check for the existence of configuration in the update() method itself and only read if so.

In addition the UpdateTask has a bug with respect to updating newly created configurations: When updating ManagedServiceFactory services nothing is done; when updating ManagedService services a NullPointerException is thrown because there is no guard against no dictionary (as is the case for newly created configurations. To fix this, the UpdateTask assumes an empty dictionary for newly created configurations whose getProperties() method returns null

Fixed in Rev. 1067270",25/Sep/13 14:02;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,
bundle plugin throw IllegalArgumentException while do the install,FELIX-2765,12494811,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,,zenghaojie,zenghaojie,06/Jan/11 07:32,11/Oct/11 17:09,14/Mar/19 02:47,25/Jun/11 20:09,maven-bundle-plugin-2.0.1,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"[ERROR] An internal error occurred
java.lang.IllegalArgumentException: Cannot write resource: res/images/wired.gif aQute.lib.osgi.PreprocessResource@106121 exception: java.io.IOException: Opening
 resource
        at aQute.lib.osgi.Jar.writeResource(Jar.java:302)
        at aQute.lib.osgi.Jar.write(Jar.java:211)
        at aQute.lib.osgi.Jar.write(Jar.java:182)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:313)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:238)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:229)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:195)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:140)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:316)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:153)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:451)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:188)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:134)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)",maven3 on win os,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-05-29 02:10:14.454,,,no_permission,,,,,,,,,,,56155,,,Thu Jun 16 17:30:12 UTC 2011,,,,,,0|i0vwdz:,184220,,,,,,,,"29/May/11 02:10;andrei.pozolotin;I see the same issue

[INFO] --- maven-bundle-plugin:2.3.4:bundle (default-bundle) @ barchart-plugin-media-brand ---
[ERROR] An internal error occurred
java.lang.IllegalArgumentException: Cannot write resource: images/common/download_progress.gif aQute.lib.osgi.PreprocessResource@1687dcd exception: java.io.IOException: Opening resource
	at aQute.lib.osgi.Jar.writeResource(Jar.java:310)
	at aQute.lib.osgi.Jar.write(Jar.java:219)
	at aQute.lib.osgi.Jar.write(Jar.java:187)
	at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:299)
	at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:224)
	at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:215)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)","16/Jun/11 13:27;mcculls;Any chance of getting a test project that recreates the error? Or at least an idea of the project layout / bundle instructions, since I haven't managed to recreate this locally.","16/Jun/11 17:30;andrei.pozolotin;the issue is gone after switch to:

			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr.annotations</artifactId>
				<version>1.5.3-SNAPSHOT</version>
				<optional>true</optional>
			</dependency>

				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-scr-plugin</artifactId>
					<version>1.7.1-SNAPSHOT</version>
				</plugin>

				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.5-SNAPSHOT</version>
					<extensions>true</extensions>
				</plugin>
",,,,,,,,,,,,,,,,,,,,,,,,
[FileInstall] disableConfigSave actually enables configuration save,FELIX-2763,12494645,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,fdiotalevi,fdiotalevi,04/Jan/11 21:35,17/Mar/15 07:00,14/Mar/19 02:47,16/Mar/12 09:23,,,,,,,,,,,fileinstall-3.2.0,,,,File Install,,,,,,,1,,,,,,"Following FELIX-2699 a configuration option called
felix.fileinstall.disableConfigSave
has been introduces to prevent fileinstall to write back configuration changes in the original file.

However the implementation skip this write-back if the value of the parameter is FALSE. Logically, it should be TRUE.

Fix is pretty easy ConfigInstaller.java:109, I'm just not sure whether to introduce it or not, since it'll likely break all the applications using this feature.

I documented anyway the current behaviour in the wiki a https://cwiki.apache.org/confluence/display/FELIX/Apache+Felix+File+Install
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-21 20:17:04.523,,,no_permission,,,,,,,,,,,56156,,,Mon Mar 21 20:17:04 UTC 2011,,,,,,0|i07gsf:,41486,,,,,,,,"21/Mar/11 20:17;arikkfir;I'm usually rooting to change incorrect behavior, but to keep backward compabilitiy, I think this property should be deprecated and a new one should be introduced which enforces the correct behavior (overriding this property if both are specified).",,,,,,,,,,,,,,,,,,,,,,,,,,
Substring parser incorrectly disallowing use of parentheses characters,FELIX-2762,12494628,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,mpetritsch,mpetritsch,04/Jan/11 18:42,30/Aug/11 20:27,14/Mar/19 02:47,30/Aug/11 15:47,framework-3.0.7,,,,,,,,,,framework-4.0.0,,,,Framework,,,,,,,0,,,,,,"When a bundle is trying to load a class with a classname that contains a perenthesis felix is throwing an IllegalArgumentException. Now usually the bundle trying to load the class would catch a ""ClassNotFoundException"". Other classLoaders (or at least sun.misc.Launcher.AppClassLoader) are throwing a ClassNotFoundException if the classname contains a parenthesis.
Even if it's illegal to have parentheses in classnames some bundles still might try to load such classnames (e.g. due to a bug). So they could stop working in felix if they are catching a ClassNotFoundException even though they worked well before with different classloaders.

Here is the stacktrace caused by a bundle that fits the category mentioned above:
java.lang.IllegalArgumentException: Illegal value: Document doc =
element.getOwnerDocument();
    at org.apache.felix.framework.capabilityset.SimpleFilter.parseSubstring(SimpleFilter.java:399)
    at org.apache.felix.framework.util.manifestparser.RequirementImpl.convertToFilter(RequirementImpl.java:162)
    at org.apache.felix.framework.util.manifestparser.RequirementImpl.<init>(RequirementImpl.java:49)
    at org.apache.felix.framework.Felix$FelixResolver.isAllowedDynamicImport(Felix.java:4139)
    at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:4029)
    at org.apache.felix.framework.ModuleImpl.searchDynamicImports(ModuleImpl.java:1367)
    at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:723)
    at org.apache.felix.framework.ModuleImpl.access$200(ModuleImpl.java:73)
    at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1690)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:266)
    at org.apache.felix.framework.ModuleImpl.getClassByDelegation(ModuleImpl.java:634)
    at org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1594)
    at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:887)
    at org.ops4j.pax.swissbox.core.BundleClassLoader.findClass(BundleClassLoader.java:176)
    at org.ops4j.pax.swissbox.core.BundleClassLoader.loadClass(BundleClassLoader.java:194)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:266)
    at org.milyn.util.ClassUtil.forName(ClassUtil.java:82)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-08-30 15:45:06.916,,,no_permission,,,,,,,,,,,56157,,,Tue Aug 30 20:27:33 UTC 2011,,,,,,0|i1atqv:,271285,,,,,,,,"30/Aug/11 15:45;rickhall;After investigating this issue a little more, I realized that the underlying issue is caused by the fact that our substring parsing code is disallowing the use of parentheses characters in its matching patterns. In other words, it was not allowing something like ""foo(*bar"" to be parsed, but there is no reason it shouldn't allow just about any character in the string. I think this is a holdover from when the code was part of the LDAP parser. I've updated the summary of this issue to reflect the this issue.","30/Aug/11 15:47;rickhall;Parentheses characters can now be used in substrings, which should solve this issue since it will no longer throw an IllegalArgumentException, which means the dynamic import will fail due to finding no providers and a CNFE will be thrown.

Please close this issue if you are satisfied. Thanks.","30/Aug/11 20:27;mpetritsch;awesome, thanks.",,,,,,,,,,,,,,,,,,,,,,,,
NPE when loading configurations,FELIX-2756,12494472,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,gnt,gnt,gnt,03/Jan/11 08:28,17/Mar/15 07:01,14/Mar/19 02:47,03/Jan/11 08:31,fileinstall-3.1.2,,,,,,,,,,fileinstall-3.1.4,,,,File Install,,,,,,,0,,,,,,,,,,,,,,,,,,FELIX-2745,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40459,,,2011-01-03 08:28:01.0,,,,,,0|i0aq2n:,60497,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DepencyManager causes IllegalStateException by calling setProperties on unregistered ServiceRegistration,FELIX-2752,12494182,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,bramk,bramk,28/Dec/10 17:07,29/Dec/10 12:13,14/Mar/19 02:47,28/Dec/10 18:53,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"When DependecyManager unBinds a component it calls unregister on the underlying ServiceRegistration but does NOT nullify the m_registration reference to it. When at a later time it binds the component again the reference is overwritten with a new one and all is well. However, when the service implementaion calls setSetserviceProperties(props) on the component during the start callback (and thus before registration) this method will call setProperties on the unregistered m_registration resulting in an IllegalStateException thrown by org.apache.felix.framework.ServiceRegistrationImpl. Below the stacktrace. Simple setting m_registration to null at line 910 seems to resolve the issue.

The service registration is no longer valid.
java.lang.IllegalStateException: The service registration is no longer valid.
        at org.apache.felix.framework.ServiceRegistrationImpl.setProperties(ServiceRegistrationImpl.java:107)
        at org.apache.felix.dm.impl.ServiceRegistrationImpl.setProperties(ServiceRegistrationImpl.java:45)
        at org.apache.felix.dm.impl.ComponentImpl.setServiceProperties(ComponentImpl.java:501)
        at org.amdatu.core.fabrictest.internal.RemotableServiceImpl.start(RemotableServiceImpl.java:33)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.felix.dm.InvocationUtil.invokeMethod(InvocationUtil.java:45)
        at org.apache.felix.dm.InvocationUtil.invokeCallbackMethod(InvocationUtil.java:13)
        at org.apache.felix.dm.impl.ComponentImpl.invokeCallbackMethod(ComponentImpl.java:684)
        at org.apache.felix.dm.impl.ComponentImpl.invoke(ComponentImpl.java:675)
        at org.apache.felix.dm.impl.ComponentImpl.bindService(ComponentImpl.java:620)
        at org.apache.felix.dm.impl.ComponentImpl.access$400(ComponentImpl.java:52)
        at org.apache.felix.dm.impl.ComponentImpl$7.run(ComponentImpl.java:178)
        at org.apache.felix.dm.impl.SerialExecutor$1.run(SerialExecutor.java:47)
        at org.apache.felix.dm.impl.SerialExecutor.scheduleNext(SerialExecutor.java:84)
        at org.apache.felix.dm.impl.SerialExecutor.access$000(SerialExecutor.java:33)
        at org.apache.felix.dm.impl.SerialExecutor$1.run(SerialExecutor.java:50)
        at org.apache.felix.dm.impl.SerialExecutor.scheduleNext(SerialExecutor.java:84)
        at org.apache.felix.dm.impl.SerialExecutor.execute(SerialExecutor.java:68)
        at org.apache.felix.dm.impl.ComponentImpl.calculateStateChanges(ComponentImpl.java:228)
        at org.apache.felix.dm.impl.ComponentImpl.dependencyAvailable(ComponentImpl.java:371)
        at org.apache.felix.dm.impl.dependencies.ServiceDependencyImpl.addedService(ServiceDependencyImpl.java:433)
        at org.apache.felix.dm.tracker.ServiceTracker$Tracked.customizerAdded(ServiceTracker.java:1145)
        at org.apache.felix.dm.tracker.AbstractTracked.trackAdding(AbstractTracked.java:286)
        at org.apache.felix.dm.tracker.AbstractTracked.track(AbstractTracked.java:232)
        at org.apache.felix.dm.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:1026)
        at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:871)
        at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:733)
        at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
        at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3721)
        at org.apache.felix.framework.Felix.access$000(Felix.java:80)
        at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:717)
        at org.apache.felix.framework.ServiceRegistry.registerService(ServiceRegistry.java:107)
        at org.apache.felix.framework.Felix.registerService(Felix.java:2842)
        at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:251)
        at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:229)
        at org.apache.felix.dm.impl.ComponentImpl.registerService(ComponentImpl.java:860)
        at org.apache.felix.dm.impl.ComponentImpl.bindService(ComponentImpl.java:624)
        at org.apache.felix.dm.impl.ComponentImpl.access$400(ComponentImpl.java:52)
        at org.apache.felix.dm.impl.ComponentImpl$7.run(ComponentImpl.java:178)
        at org.apache.felix.dm.impl.SerialExecutor$1.run(SerialExecutor.java:47)
        at org.apache.felix.dm.impl.SerialExecutor.scheduleNext(SerialExecutor.java:84)
        at org.apache.felix.dm.impl.SerialExecutor.access$000(SerialExecutor.java:33)
        at org.apache.felix.dm.impl.SerialExecutor$1.run(SerialExecutor.java:50)
        at org.apache.felix.dm.impl.SerialExecutor.scheduleNext(SerialExecutor.java:84)
        at org.apache.felix.dm.impl.SerialExecutor.access$000(SerialExecutor.java:33)
        at org.apache.felix.dm.impl.SerialExecutor$1.run(SerialExecutor.java:50)
        at org.apache.felix.dm.impl.SerialExecutor.scheduleNext(SerialExecutor.java:84)
        at org.apache.felix.dm.impl.SerialExecutor.execute(SerialExecutor.java:68)
        at org.apache.felix.dm.impl.ComponentImpl.calculateStateChanges(ComponentImpl.java:228)
        at org.apache.felix.dm.impl.ComponentImpl.start(ComponentImpl.java:406)
        at org.apache.felix.dm.DependencyManager.add(DependencyManager.java:81)
        at org.amdatu.core.fabric.service.FabricManagerServiceImpl.createRemote(FabricManagerServiceImpl.java:149)
        at org.amdatu.core.fabrictest.shell.FabricManagerCommand.executeRemoteCreateCommand(FabricManagerCommand.java:260)


",trunk revision: 1053368,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-28 18:53:02.702,,,no_permission,,,,,,,,,,,40470,,,Wed Dec 29 12:13:28 UTC 2010,,,,,,0|i0aq9j:,60528,,,,,,,,"28/Dec/10 18:53;marrs;Fixed. Please close if this resolves your issue, Bram.",29/Dec/10 12:13;bramk;Works for me. Case closed. Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,
New configurations throw NPE,FELIX-2745,12494071,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,,unico@apache.org,unico@apache.org,26/Dec/10 12:36,17/Mar/15 07:01,14/Mar/19 02:47,04/Jan/11 06:20,fileinstall-3.1.2,,,,,,,,,,fileinstall-3.1.4,,,,File Install,,,,,,,0,,,,,,"Line 216:

        Hashtable old = new Hashtable(new DictionaryAsMap(config.getProperties()));

in ConfigInstaller.java causes NPE when the configuration is new because config.getProperties returns null.

I fixed the problem on my local copy by changing the code to:

        Dictionary dict = config.getProperties();
        if (dict == null) dict = new Hashtable();

        Hashtable old = new Hashtable(new DictionaryAsMap(dict));
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56165,,,Fri Dec 31 10:42:52 UTC 2010,,,,,,0|i0vqqn:,183305,,,,,,,,"31/Dec/10 10:42;unico@apache.org;Perhaps my description of the issue was insufficient to convey how critical it is, seeing that no work or comments are logged for it yet. This bug makes FileInstall 3.1.2 simply unusable for people that want to use it for configuration. Also the NPE gets swallowed somewhere and unless you figure out how to set logging to WARNING level (which I can't seem to get working) nothing is reported. I had to run the debugger to find out what was happening.
",,,,,,,,,,,,,,,,,,,,,,,,,,
[Security] Recent framework changes have broken the security provider,FELIX-2739,12493911,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,rickhall,rickhall,22/Dec/10 18:24,26/Dec/10 20:51,14/Mar/19 02:47,26/Dec/10 20:51,framework.security-1.4.0,,,,,,,,,,framework.security-1.4.1,,,,Framework Security,,,,,,,0,,,,,,"Various changes in framework broke the framework security provider, so we need to adapt it to the framework changes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40456,,,Sun Dec 26 20:51:46 UTC 2010,,,,,,0|i0aqzb:,60644,,,,,,,,26/Dec/10 20:51;rickhall;Karl committed a patch.,,,,,,,,,,,,,,,,,,,,,,,,,,
[Framework] DirectoryContent does not handle security correctly,FELIX-2738,12493898,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,22/Dec/10 16:34,22/Dec/10 19:11,14/Mar/19 02:47,22/Dec/10 19:11,framework-3.0.6,,,,,,,,,,framework-3.0.7,,,,Framework,,,,,,,0,,,,,,DirectoryContent does not use SecureAction when performing some sensitive operations.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40457,,,Wed Dec 22 19:11:12 UTC 2010,,,,,,0|i0aq8v:,60525,,,,,,,,22/Dec/10 19:11;rickhall;Committed a patch.,,,,,,,,,,,,,,,,,,,,,,,,,,
[Framework] Resolver is not correctly verifying package space consistency for dynamic imports,FELIX-2736,12493877,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,22/Dec/10 14:50,22/Dec/10 15:06,14/Mar/19 02:47,22/Dec/10 14:53,framework-3.0.6,,,,,,,,,,framework-3.0.7,,,,Framework,Specification compliance,,,,,,0,,,,,,"As part of an optimization to avoid unnecessarily verifying the package space of already resolved bundles, the resolver is also not verifying the package space of bundles performing a dynamic import. The resolver assumes all resolved bundles are consistent, which includes dynamically importing bundles. However, since we are adding an import to the package space of the dynamically importing bundle, we need to special case that situation and re-verify its package space consistency.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40458,,,Wed Dec 22 14:53:31 UTC 2010,,,,,,0|i0aqvz:,60629,,,,,,,,22/Dec/10 14:53;rickhall;Committed a patch.,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in PermissionsConfigurationPrinter,FELIX-2735,12493742,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,21/Dec/10 11:00,19/Dec/16 17:23,14/Mar/19 02:47,21/Dec/10 12:55,webconsole-3.1.6,,,,,,,,,,webconsole-3.1.8,,,,Web Console,,,,,,,0,,,,,,There is a bug in PermissionsConfigurationPrinter that generates class cast exception and prevents permissions from being printed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40435,,,2010-12-21 11:00:38.0,,,,,,0|i0aqkv:,60579,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE while scanning sources with QDox,FELIX-2731,12493190,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,14/Dec/10 15:52,13/Mar/11 12:55,14/Mar/19 02:47,14/Dec/10 16:06, maven-scr-plugin-1.6.0,scr generator 1.0.0,,,,,,,,,maven-scr-plugin-1.7.0,scr ant task 1.1.0,scr generator 1.1.0,,SCR Tooling,,,,,,,0,,,,,,"ava.lang.NullPointerException
at org.apache.felix.scrplugin.tags.qdox.QDoxJavaTag.getSourceLocation(QDoxJavaTag.java:74)
at org.apache.felix.scrplugin.om.AbstractObject.logWarn(AbstractObject.java:37)
at org.apache.felix.scrplugin.om.Reference.validateMethod(Reference.java:259)
at org.apache.felix.scrplugin.om.Reference.validate(Reference.java:214)
at org.apache.felix.scrplugin.om.Component.validate(Component.java:345)
at org.apache.felix.scrplugin.SCRDescriptorGenerator.execute(SCRDescriptorGenerator.java:334)
at org.apache.felix.scrplugin.mojo.SCRDescriptorMojo.execute(SCRDescriptorMojo.java:184)
at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:34
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:32
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:13
at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40525,,,Tue Dec 14 16:06:34 UTC 2010,,,,,,0|i0aq7r:,60520,,,,,,,,"14/Dec/10 16:06;cziegeler;It seems that the old/deprecated API turns null for the parent while the new api works. Just to be sure I've added a null test for the old API and then use the new one. Maybe we could just use the new one.

Fixed in revision 1049139.",,,,,,,,,,,,,,,,,,,,,,,,,,
Webconsole - Configuration fails to print configuration for bundles without MetatypeService config,FELIX-2729,12493124,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,achim_nierbeck,achim_nierbeck,13/Dec/10 21:44,19/Dec/16 17:23,14/Mar/19 02:47,11/Jan/11 19:29,webconsole-3.1.6,,,,,,,,,,webconsole-3.1.8,,,,Web Console,,,,,,,0,,,,,,"Configurations for bundles without a Metatype configuration are not shown. 

this is probably to the fact that even for the configurations collected from the configuration admin in ConfigManager.listConfiguration()
ObjectClassDefinition from MetatypeService are requested. 
For configurations without metatype.xml this doesn't work, therefore it fails to render the available information about
configurations. This used to be possible in a previous version, unsure which one it was so. 
",Karaf 2.0.0 and Karaf 2.1.x,,,,,,,,,,,,,,,,,,,28/Dec/10 22:20;achim_nierbeck;felix-webconsole.patch;https://issues.apache.org/jira/secure/attachment/12467074/felix-webconsole.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40397,,,Tue Dec 28 22:20:57 UTC 2010,,,,,,0|i0aq13:,60490,,,,,,,,28/Dec/10 22:20;achim_nierbeck;This patch fixes the issue,,,,,,,,,,,,,,,,,,,,,,,,,,
WebConsole logs an error not being able to create the DepPackServlet,FELIX-2727,12493085,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,13/Dec/10 15:46,23/Nov/12 06:54,14/Mar/19 02:47,19/May/11 13:03,webconsole-3.1.6,,,,,,,,,,webconsole-4.0.0,,,,Web Console,,,,,,,1,,,,,,"When accessing the Web Console, an error is logged regarding the use of the Deployment Package plugin:

13.12.2010 12:17:05.011 *ERROR* [0:0:0:0:0:0:0:1%0 [1292239024982] GET /system/console/bundles 
HTTP/1.1] org.apache.felix.http.bridge servlet_3: Failed to instantiate plugin 
org.apache.felix.webconsole.internal.deppack.DepPackServlet (java.lang.NoClassDefFoundError: 
org/osgi/service/deploymentadmin/DeploymentException) java.lang.NoClassDefFoundError: 
org/osgi/service/deploymentadmin/DeploymentException

It should be checked whether (a) this can be prevented or (b) this could be downgraded to just an INFO.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-05-03 10:52:57.723,,,no_permission,,,,,,,,,,,56171,,,Fri Nov 23 06:54:46 UTC 2012,,,,,,0|i0rfof:,158183,,,,,,,,"03/May/11 10:52;kwin;This issue also leads to Felix not starting correctly if Sling is used and the bundle directory in launchpad/felix is cleared, which is a quite common practice to reset the OSGi configuration and to redeploy all bundles from JCR.
After the bundle deployment of the bundle which is throwing that error, nothing more is deployed.","04/May/11 22:20;fmeschbe;This almost certainly is not related. This message is logged when the web console is accessed and the web console tries to access the Deployment Admin plugin in case the Deployment Admin API package is not available. This has absolutely no influence on the rest of the operation of the framework.

I suggest you file a Sling bug with respect to your ""quite common practice to reset the OSGi configuration"" such that Sling can investigate what is going on. Thanks.","10/May/11 16:56;kwin;You are right, this is not related. Just FYI: redeployment of all bundles from the JCR does work, if launchpad/felix and launchpad/installer is cleared.","19/May/11 13:01;fmeschbe;This might be a consequence of SLING-2644 where the following line has been added to the PluginHolder.getLocalizedLabelMap method:

       if (!plugin.isEnabled() || null == plugin.getConsolePlugin()) continue;

Plus the deployment admin plugin not being able to cope with missing DeploymentAdmin API.

I cannot tell while the above line came in in the first place, thus aggressively accessing plugins. I think this is wrong and defeats the purpose of lazy pluging loading.","19/May/11 13:03;fmeschbe;Fixed in Rev. 1124728:

  - Changed the check in the getLocalizedLabelMap method to not check for the
     actual existence of the plugin instance any more
  - Changed the Deployment Admin plugin to be able to load it even in the absence
     of the Deployment Admin API",23/Nov/12 06:54;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,
[Framework] Resolver is not correctly calculating exported packages for already resolved modules,FELIX-2725,12493072,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,13/Dec/10 14:33,22/Dec/10 15:06,14/Mar/19 02:47,15/Dec/10 13:59,framework-3.0.0,framework-3.0.1,framework-3.0.2,framework-3.0.3,framework-3.0.4,framework-3.0.5,framework-3.0.6,,,,framework-3.0.7,,,,Framework,Specification compliance,,,,,,0,,,,,,"When calculating the package spaces for modules to check for class space consistency, the resolver algorithm incorrectly assumes that already resolved modules with substitutable exports will be handled in import calculation like they are for resolving modules, but already exported modules do not have entries in the candidate map so this fails. As a result, all substitutable exports are dropped and are not considered at all when it comes to consistency checking. We need to look at the wires to calculate exported packages for already resolved modules.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40522,,,Wed Dec 15 13:59:16 UTC 2010,,,,,,0|i0aqvr:,60628,,,,,,,,15/Dec/10 13:59;rickhall;Patch has been applied.,,,,,,,,,,,,,,,,,,,,,,,,,,
"When the execution of a closure with pipes is interrupted, pipes should be interrupted too",FELIX-2723,12492949,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,10/Dec/10 15:50,17/Mar/15 07:07,14/Mar/19 02:47,10/Dec/10 16:10,,,,,,,,,,,gogo.runtime-0.8.0,,,,Gogo Runtime,,,,,,,0,,,,,,,,,,,,,,,,,,,,,KARAF-316,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40515,,,Fri Dec 10 16:10:39 UTC 2010,,,,,,0|i0aqz3:,60643,,,,,,,,"10/Dec/10 16:10;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Closure.java
Committed r1044415
",,,,,,,,,,,,,,,,,,,,,,,,,,
"With an empty  organization like this <organization/>, maven bundle plugin raises a NPE.",FELIX-2722,12492624,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,chomats,chomats,07/Dec/10 15:06,11/Oct/11 17:09,14/Mar/19 02:47,24/Jun/11 12:46,maven-bundle-plugin-2.1.0,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,1,,,,,,"When the pom contains an empty  organization like this <organization/>, maven bundle plugin raises a NPE.
The pom must have a packaging 'bundle'.

See trace:
[INFO] [bundle:bundle]
[ERROR] An internal error occurred
java.lang.NullPointerException
        at java.util.Hashtable.put(Hashtable.java:394)
        at org.apache.felix.bundleplugin.BundlePlugin.getDefaultProperties(BundlePlugin.java:869)
        at org.apache.felix.bundleplugin.BundlePlugin.buildOSGiBundle(BundlePlugin.java:368)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:284)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:238)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:229)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:483)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:678)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:540)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:519)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:371)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:332)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:181)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:356)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:137)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:356)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)","$ mvn --version
Apache Maven 2.1.0 (r755702; 2009-03-18 20:10:27+0100)
Java version: 1.6.0_21
Java home: D:\java\jdk1.6.0_21\jre
Default locale: fr_FR, platform encoding: Cp1252
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""",,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-24 12:46:00.561,,,no_permission,,,,,,,,,,,56174,,,Fri Jun 24 12:46:00 UTC 2011,,,,,,0|i1att3:,271295,,,,,,,,24/Jun/11 12:46;mcculls;Fixed in r1139278,,,,,,,,,,,,,,,,,,,,,,,,,,
EventHandler are invoked one by one when using the @Subscribe handler,FELIX-2718,12492072,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,sauthieg,sauthieg,04/Dec/10 17:21,03/Feb/13 11:09,14/Mar/19 02:47,11/Dec/10 18:09,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,There is a synchronized block in the subscriber handler that may cause this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-11 18:09:45.586,,,no_permission,,,,,,,,,,,56176,,,Wed Jan 05 10:24:54 UTC 2011,,,,,,0|i0vt67:,183699,,,,,,,,11/Dec/10 18:09;clement.escoffier;Fixed in trunk,"05/Jan/11 09:56;sauthieg;Is this fixed in rev 1044393 ?
","05/Jan/11 10:24;clement.escoffier;AFAIK, It's fixed in 1055392 (current trunk). ",,,,,,,,,,,,,,,,,,,,,,,,
[Framework] Resolver treats multiple exports of same package as conflicting for fragment imports,FELIX-2717,12492006,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,03/Dec/10 17:19,22/Dec/10 20:52,14/Mar/19 02:47,03/Dec/10 17:24,framework-3.0.6,,,,,,,,,,framework-3.0.7,,,,Framework,Specification compliance,,,,,,0,,,,,,"If multiple fragments attached to a given host import the same package and are resolved to different exports of some module exporting the package more than once, then the resolver treats this as a conflict and doesn't allow both fragments to attach. This is technically not a conflict, since the module is masquerading a single set of byte code as two capabilities, which means that the capabilities are compatible with each other. The resolver should check the source module identity and not the capability identity.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40531,,,Fri Dec 03 17:24:22 UTC 2010,,,,,,0|i0aqmn:,60587,,,,,,,,03/Dec/10 17:24;rickhall;Committed a patch.,,,,,,,,,,,,,,,,,,,,,,,,,,
[iPOJO] Failure when creating proxies for classes in java.* packages,FELIX-2716,12491910,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,rickhall,rickhall,02/Dec/10 17:58,04/Feb/13 12:34,14/Mar/19 02:47,04/Dec/10 09:50,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"It appears that iPOJO is no longer able to proxy classes in java.* packages. This used to work, but it seems recent JVM changes no longer allow it. To see an example, refer to the iPOJO example in ch 12 in the OSGi in Action companion code (http://code.google.com/p/osgi-in-action/downloads/list).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-04 09:40:27.962,,,no_permission,,,,,,,,,,,40533,,,Sat Dec 04 09:50:49 UTC 2010,,,,,,0|i0aqmv:,60588,,,,,,,,"04/Dec/10 09:40;clement.escoffier;A recent 'fix' of a JVM bugs as made the defifnition from java.* prohibited. When, iPOJO generates smart proxies it generates a class in the same package as the proxied interface. This is not more possible for interfaces from java.*. 

To turn around this bug, the iPOJO smart proxies package must be changed. If you cannot wait for a new release, just disable the 'proxy' on the dependency (proxy=false), or enable the dynamic proxies (instead of smart proxies).

The fix will arrive soon (really soon :-))",04/Dec/10 09:50;clement.escoffier;Fixed in trunk (will also deploy a snapshot),,,,,,,,,,,,,,,,,,,,,,,,,
Problem in HtmlConfigurationWriter,FELIX-2713,12491742,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,01/Dec/10 07:38,19/Dec/16 17:23,14/Mar/19 02:47,21/Dec/10 12:57,webconsole-3.1.6,,,,,,,,,,webconsole-3.1.8,,,,Web Console,,,,,,,0,,,,,,"With some Skelmir VM and some J9 versions, when switching to the Web Console Configuration Render plugin, an exception will occur and no data will be shown. In some cases, this will even cause the death of the VM process.

The exception is because of different PrintWriter implementation that cases StackOverflowError, caused by an endless loop:
	at java.io.PrintWriter.write(PrintWriter.java:396)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:495)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:541)
	at java.io.PrintWriter.write(PrintWriter.java:396)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:495)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:541)
	at java.io.PrintWriter.write(PrintWriter.java:396)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:495)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:541)
	at java.io.PrintWriter.write(PrintWriter.java:396)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:495)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:541)
	at java.io.PrintWriter.write(PrintWriter.java:396)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:495)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:541)
	at java.io.PrintWriter.write(PrintWriter.java:396)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:483)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:541)
	at java.io.PrintWriter.write(PrintWriter.java:396)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.write(ConfigurationRender.java:513)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender$HtmlConfigurationWriter.println(ConfigurationRender.java:463)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender.printConfigurationPrinter(ConfigurationRender.java:355)
	at org.apache.felix.webconsole.internal.misc.ConfigurationRender.doGet(ConfigurationRender.java:163)


I provide a patch as a solution for the problem.",,,,,,,,,,,,,,,,,,,,01/Dec/10 07:38;v_valchev;stackoverflow.patch;https://issues.apache.org/jira/secure/attachment/12465031/stackoverflow.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40454,,,2010-12-01 07:38:37.0,,,,,,0|i0aq7b:,60518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Webconsole causes NPE in Bundle.getResource(String),FELIX-2708,12480737,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,tdiesler,tdiesler,23/Nov/10 20:59,23/Nov/12 06:54,14/Mar/19 02:47,18/Dec/11 14:07,webconsole-3.1.6,,,,,,,,,,webconsole-4.0.0,,,,Web Console,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-24 16:43:13.551,,,no_permission,,,,,,,,,,,56180,,,Fri Nov 23 06:54:46 UTC 2012,,,,,,0|i0rfmv:,158176,,,,,,,,"23/Nov/10 21:10;tdiesler;Here is the fix

https://github.com/jbosgi/org.apache.felix.webconsole/commit/4bb9a1f0b3b8876689075541a8e6e7b8dfcf7697","24/Nov/10 16:43;fmeschbe;Thanks for the patch. It looks good so far.

May I ask you to attach it as a file to this issue for proper IP transfer ? Thanks.",01/Sep/11 16:43;v_valchev;Patch?,"18/Dec/11 14:06;fmeschbe;The URL is not valid any longer (maybe some repo restructuring).

The point is a potential NPE in the LicenseServlet.sendResource method: if pathInfo.innerJar is null but there is no pathInfo.licenseFile resource in the bundle, the method still tries to get the bundle resource from pathInfo.innerJar, which is null and thus causes the NPE.",18/Dec/11 14:07;fmeschbe;Fixed the potential NPE in Rev. 1220409,23/Nov/12 06:54;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,
Webconsole does not resolve resource bundle properly,FELIX-2707,12480735,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,tdiesler,tdiesler,23/Nov/10 20:47,23/Nov/12 06:54,14/Mar/19 02:47,22/Mar/11 23:05,webconsole-3.1.6,,,,,,,,,,webconsole-4.0.0,,,,Web Console,,,,,,,0,,,,,,"The webconsole seems to assume that the URLs returned by Bundle.findEntries are relative to the bundle root.

The result is that the ResourceBundle is not found and none of the i10n strings are displayed properly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-24 15:39:48.277,,,no_permission,,,,,,,,,,,56181,,,Fri Nov 23 06:54:46 UTC 2012,,,,,,0|i0rfmf:,158174,,,,,,,,"23/Nov/10 20:48;tdiesler;Here is the fix

https://github.com/jbosgi/org.apache.felix.webconsole/commit/a4162131922da6bbe36aa0947c469cfcf3583764","24/Nov/10 15:39;fmeschbe;Thanks for providing the patch; looks reasonable to me.

May I ask you to attach it as a file to this issue for proper IP trasnfer ? Thanks.",22/Mar/11 23:05;fmeschbe;Fixed in Rev. 1084402 by not assuming syntax of the URL path. Rather we assume the last segment in the path is the file name we expect. Thus we ignore everything on the URL path except for the last segment.,23/Nov/12 06:54;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,
"@Property(cardinality=Integer.MAX_Int, ...) causes java.lang.NumberFormatException",FELIX-2704,12480434,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,saml,saml,19/Nov/10 17:41,12/Mar/14 08:55,14/Mar/19 02:47,22/Feb/11 17:02, maven-scr-plugin-1.6.0,scr annotations 1.4.0,scr generator 1.0.0,,,,,,,,maven-scr-plugin-1.7.0,scr annotations 1.5.0,scr ant task 1.1.0,scr generator 1.1.0,SCR Tooling,,,,,,,0,,,,,,"@Property(cardinality=   seems to take the value as String and try to parse it.

I have:

@Property(cardinality=Integer.MAX_INT, label=""hosts"", description=""a list of hosts"", value={})
private static final String PROP_HOSTS = ""com.mycompany.hosts"";

and, mvn clean package gives me:

java.lang.NumberFormatException: For input string: ""Integer.MIN_VALUE""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Integer.parseInt(Integer.java:449)
	at java.lang.Integer.valueOf(Integer.java:554)
	at org.apache.felix.scrplugin.tags.annotation.defaulttag.Util.getIntValue(Util.java:59)
	at org.apache.felix.scrplugin.tags.annotation.defaulttag.PropertyTag$1.cardinality(PropertyTag.java:47)
	at org.apache.felix.scrplugin.tags.annotation.defaulttag.PropertyTag.createNamedParameterMap(PropertyTag.java:237)
	at org.apache.felix.scrplugin.tags.annotation.defaulttag.AbstractTag.getNamedParameterMap(AbstractTag.java:122)
	at org.apache.felix.scrplugin.tags.annotation.defaulttag.AbstractTag.getNamedParameter(AbstractTag.java:54)
	at org.apache.felix.scrplugin.helper.PropertyHandler.getPropertyName(PropertyHandler.java:210)
	at org.apache.felix.scrplugin.helper.PropertyHandler.testProperty(PropertyHandler.java:314)
	at org.apache.felix.scrplugin.helper.PropertyHandler.handleField(PropertyHandler.java:335)
	at org.apache.felix.scrplugin.SCRDescriptorGenerator.createComponent(SCRDescriptorGenerator.java:522)
	at org.apache.felix.scrplugin.SCRDescriptorGenerator.execute(SCRDescriptorGenerator.java:274)
	at org.apache.felix.scrplugin.mojo.SCRDescriptorMojo.execute(SCRDescriptorMojo.java:166)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)",ubuntu 10.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-21 16:05:47.434,,,no_permission,,,,,,,,,,,40401,,,Mon Feb 21 16:05:47 UTC 2011,,,,,,0|i0apwf:,60469,,,,,,,,21/Feb/11 16:05;cziegeler;Fixed in revision 1073041 - Integer.MAX_VALUE and Integer.MIN_VALUE are now both supported,,,,,,,,,,,,,,,,,,,,,,,,,,
Framework uses java.nio package which is not supported by CDC VM,FELIX-2700,12480158,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,jbreich,jbreich,16/Nov/10 22:53,30/Dec/10 22:14,14/Mar/19 02:47,22/Dec/10 20:49,framework-3.0.6,,,,,,,,,,framework-3.0.7,,,,Framework,,,,,,,0,,,,,,Framework 3.0.6 uses java.nio package which is not supported by CDC VM. This prevents felix from starting.,CDC-1.1/Foundation-1.1 VM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-22 20:49:22.327,,,no_permission,,,,,,,,,,,40417,,,Wed Dec 22 20:49:22 UTC 2010,,,,,,0|i0aqnr:,60592,,,,,,,,"22/Dec/10 20:49;rickhall;I've committed a patch that adds a felix.cache.locking configuration property. It is true by default. Set it to false in conf/config.properties to disable cache locking. Please close this issue if you are satisfied, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,
File Install Circular Configuration Update Loop,FELIX-2698,12480153,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,dhay,dhay,16/Nov/10 22:27,17/Mar/15 07:02,14/Mar/19 02:47,30/Nov/10 18:12,fileinstall-3.1.0,,,,,,,,,,fileinstall-3.1.2,,,,File Install,,,,,,,0,,,,,,"Using FileInstall 3.1.0, when I update a .cfg file, the system is sent into an infinite loop of updating the Configuration Admin Service and rewriting the cfg file.  The cycle goes something like this:

1. Updated .cfg file is noticed by File Install DirectoryWatcher
2. The Configuration object is obtained and updated (in ConfigInstaller.setConfig(File))
3. The Configuration Admin Service fires a ConfigurationEvent
4. ConfigInstaller receives the ConfigurationEvent and writes out the new properties to the .cfg
5. Go to step 1

It seems like the ConfigInstaller object should figure out if the ConfigurationEvent is in response to an update to the .cfg file it just loaded.  

One way to do this might be to put a ""special"" value in the Configuration that the ConfigurationListener method could look for.  

Another way would be to compare the configuration in the .cfg file to the properties that would normally be written.  If they're the same, don't write the file.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-17 20:10:17.433,,,no_permission,,,,,,,,,,,40530,,,Wed Nov 17 20:25:04 UTC 2010,,,,,,0|i0aq5z:,60512,,,,,,,,17/Nov/10 20:10;gnt;Do you plan to provide some patches for the 3 issues you raised ? That would be more than welcome !,"17/Nov/10 20:25;dhay;If I have time to look at these issues, I will certainly provide patches.",,,,,,,,,,,,,,,,,,,,,,,,,
Configuration dependencies don't always call updated() on a component with another required dependency,FELIX-2696,12479945,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,marrs,marrs,15/Nov/10 11:46,03/Feb/11 13:33,14/Mar/19 02:47,03/Feb/11 13:33,,,,,,,,,,,,,,,Dependency Manager,,,,,,,1,,,,,,"When you create a component with both a service dependency and some other required dependency and subsequently make that other dependency available, unavailable and available again, the configuration dependency will fail to call updated() on the new instance the second time.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40516,,,Thu Feb 03 13:33:55 UTC 2011,,,,,,0|i0aq7z:,60521,,,,,,,,03/Feb/11 13:33;marrs;Bug fixed and there is a test to make sure it does not resurface.,,,,,,,,,,,,,,,,,,,,,,,,,,
[Distro] Invalid settings in config.properties file,FELIX-2695,12479738,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,rickhall,rickhall,11/Nov/10 18:48,22/Dec/10 19:09,14/Mar/19 02:47,22/Dec/10 19:09,framework-3.0.6,,,,,,,,,,framework-3.0.7,,,,Main Distribution,,,,,,,0,,,,,,"The config.properties file references ${dollar} in some of its commented values, but this is only necessary during build because Maven tries to do property substitution. These values are no longer being substituted, perhaps due to a packaging change, so we should eliminate it and just use $.",,,,,,,,,,,,,,,,,,,,22/Dec/10 15:58;rickhall;FELIX-2695.txt;https://issues.apache.org/jira/secure/attachment/12466815/FELIX-2695.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40449,,,Wed Dec 22 19:09:27 UTC 2010,,,,,,0|i0aqjz:,60575,,,,,,,,"22/Dec/10 15:57;rickhall;Turns out, this is an issue in main.distribution, not in main. I will attach a patch for a proposed fix.","22/Dec/10 19:09;rickhall;Patch appears to be working, so I applied it.",,,,,,,,,,,,,,,,,,,,,,,,,
Instance state not recomputed after reconfiguration when the instance is stopped,FELIX-2694,12479629,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,10/Nov/10 19:03,04/Feb/13 12:33,14/Mar/19 02:47,17/Nov/10 20:16,,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"When a component instance is stopped and reconfigured, the instance state is not recomputed. The instance must be restarted with the new configuration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-16 21:35:38.469,,,no_permission,,,,,,,,,,,40521,,,Mon Nov 22 12:10:14 UTC 2010,,,,,,0|i0aq67:,60513,,,,,,,,10/Nov/10 19:14;clement.escoffier;Fixed in trunk.,12/Nov/10 17:13;clement.escoffier;It seems to not work when using the config admin.,"16/Nov/10 21:35;rodehav;I've tested against trunk again. Turns out that i had tested against 1.5.0-SNAPSHOT (the version of iPOJO parent) and not against 1.7.0-SNAPSHOT (the version of iPOJO core) - I had looked in the wron pom.xml for the version of iPOJO to use. It seems to work now so this issue can be closed.

Sorry for my mistake...","17/Nov/10 10:14;rodehav;Unfortunately there seems to still be some problems regarding this.

Consider this scenario:

1. I create an invalid configuration, that will cause my start() method to throw an exception.
2. iPOJO stops the instance
3. I repair my configuration
4. iPOJO recognizes a configuration change and calls my start() method again
5. At this point, my configuration settings do not seem to be set.

E g I have these configuration settings:

  private String mName;
  private String mPid;
  
  @Property(name = ""name"", mandatory = true)
  public void setName(String theName) {
    mName = theName;
  }

  @Property(name = org.osgi.framework.Constants.SERVICE_PID, mandatory = true)
  public void setPid(String thePid) {
    mPid = thePid;
  }

Normally (when my instance is successfully started the first time), these values are correctly initialised in my start() method. However, in the scenario described above, these values are null. This causes the start() method to fail again.
",17/Nov/10 18:51;clement.escoffier;You're right. Some handlers do not store the configuration. I also need to call configure before start.,"17/Nov/10 20:16;clement.escoffier;In fact, I just forgot to reset the setter invocation flag.
Could you check the trunk?","18/Nov/10 08:03;rodehav;Works perfectly Clement - excellent job!

Now I just have to wait for the next release - any plans?","22/Nov/10 09:12;clement.escoffier;Hi,

The next release will come pretty soon. I just wants to fix 'FELIX-2705 Provide a way to extend the logger strategy' first. It's mostly done (only IT tests to develop before committing).  This will be iPOJO Core 1.6.8. Then, we will switch to the iPOJO 1.8.0 (major release planned for December-January).","22/Nov/10 12:10;rodehav;Sounds really good. Thanks Clement.
",,,,,,,,,,,,,,,,,,
[Framework] Service registry should throw a ServiceException for factories resulting in a cycle,FELIX-2693,12479604,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,10/Nov/10 16:04,22/Dec/10 15:07,14/Mar/19 02:47,10/Nov/10 16:06,framework-3.0.6,,,,,,,,,,framework-3.0.7,,,,Framework,,,,,,,0,,,,,,"When the service registry detects a cycle in a service factory, it throws an IllegalStateException which is ultimately thrown to the caller. I think this should throw a ServiceException which will be caught and logged by the framework with null being returned to the caller.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40513,,,Wed Nov 10 16:06:19 UTC 2010,,,,,,0|i0aqxr:,60637,,,,,,,,10/Nov/10 16:06;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
Apache Felix HTTP service HttpServiceImpl.isNameValid does not match OSGi R4.2 spec?,FELIX-2691,12479516,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,misha680,misha680,09/Nov/10 18:59,08/Feb/11 09:46,14/Mar/19 02:47,08/Jan/11 00:27,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,1,,,,,,"Filing bug per:
http://www.mail-archive.com/dev@felix.apache.org/msg19853.html

The R4.2 enterprise spec from
http://www.osgi.org/Download/File?url=/download/r4v42/r4.enterprise.pdf
on page 48 clearly states:

The name parameter must also not end with slash ('/') with the
exception that a name of the form ""/"" is used to denote the root of
the bundle.


The relevant code, in trunk, is, from
http://svn.apache.org/repos/asf/felix/trunk/http/base/src/main/java/org/apache/felix/http/base/internal/service/HttpServiceImpl.java


 public void registerResources(String alias, String name, HttpContext context)
        throws NamespaceException
    {
        if (!isNameValid(name)) {
            throw new IllegalArgumentException( ""Malformed resource
name ["" + name + ""]"");
        }
...

and


private boolean isNameValid(String name)
    {
        if (name == null) {
            return false;
        }

        if (name.endsWith( ""/"" )) {
            return false;
        }

        return true;
    }


",Not relevant,,1800,1800,,0%,1800,1800,,,,,,,,,,,,09/Nov/10 19:45;misha680;FELIX-2691-HttpServiceImpl-isNameValid-comply-OSGI-R42.patch;https://issues.apache.org/jira/secure/attachment/12459173/FELIX-2691-HttpServiceImpl-isNameValid-comply-OSGI-R42.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-08 00:27:24.086,,,no_permission,,,,,,,,,,,40465,,,Tue Feb 08 09:46:42 UTC 2011,,,,,,0|i0aqpj:,60600,,,,,,,,"09/Nov/10 19:45;misha680;Here is relevant text from spec:

102.10.3.2
org.osgi.service.http
public void registerResources( String alias, String name, HttpContext context ) throws
NamespaceException
alias name in the URI namespace at which the resources are registered
name the base name of the resources that will be registered
context the HttpContext object for the registered resources, or null if a default HttpContext is to be created and
used.
Registers resources into the URI namespace.
The alias is the name in the URI namespace of the Http Service at which the registration will be
mapped. An alias must begin with slash ('/') and must not end with slash ('/'), with the exception that
an alias of the form ""/"" is used to denote the root alias. The name parameter must also not end with
slash ('/') with the exception that a name of the form ""/"" is used to denote the root of the bundle. See
the specification text for details on how HTTP requests are mapped to servlet and resource registra-
tions.
","08/Jan/11 00:27;fmeschbe;Thanks for providing the patch.

Fixed in Rev. 1056570",08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,,
Wrong Element name when XML namespace contains ':',FELIX-2685,12479075,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,sauthieg,sauthieg,04/Nov/10 10:29,10/Nov/10 08:54,14/Mar/19 02:47,09/Nov/10 19:32,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"Here here my metadata.xml

{noformat}
  <session name=""session""
           type=""stateful""
           base=""my-super-base""
           xmlns=""http://jasmine.ow2.org/rules/1.0.0"" />
{noformat}

Notice that the XML namespace is ""http://jasmine.ow2.org/rules/1.0.0"".
When I parse the Element/Attribute structure generated from this XML, i cannot access my ""configuration"" element.

An Element.toString() gives the fiollowing result:
{noformat}
//jasmine.ow2.org/rules/1.0.0:knowledge-base name=""my-super-base""
	//jasmine.ow2.org/rules/1.0.0:configuration
		//jasmine.ow2.org/rules/1.0.0:property name=""drools.multiThreadEvaluation"" value=""true""
		//jasmine.ow2.org/rules/1.0.0:property name=""drools.eventProcessingMode"" value=""stream""
{noformat}

Element name is ""//jasmine.ow2.org/rules/1.0.0:configuration"", not only ""configuration"" :'(

The problem is probably due to a bug in ManifestMetadataParser.parseElements(String), where we considere that the namespace stops at the first ':' character.

The easiest solution will probably to gather the composite element name (namespace+name) completely, and then get the index of the last ':', then split the string.

WDYT ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-06 11:55:19.833,,,no_permission,,,,,,,,,,,40508,,,Wed Nov 10 08:54:57 UTC 2010,,,,,,0|i0aqjb:,60572,,,,,,,,06/Nov/10 11:55;clement.escoffier;Fixed in trunk.,"08/Nov/10 08:34;sauthieg;hmmm

That was not exactly what I was expecting :)
The namespace should ends at the last ':', not the first one

So when I have this in the XML:
<rules:configuration xmlns:rules=""http://jasmine.ow2.org/rules/1.0.0"" />

I have this in the metadata format
http://jasmine.ow2.org/rules/1.0.0:configuration {}

And I expect such an Element:
Element @name=configuration @namespace=http://jasmine.ow2.org/rules/1.0.0

So, just changing from n.indexOf(':') to n.lastIndexOf(':') should do the trick.

Thanks

","08/Nov/10 08:57;clement.escoffier;Oups, sorry. I will fix it later this week.",09/Nov/10 19:32;clement.escoffier;I've updated the trunk to use a lastIndexOf instead of indexOf. It works on your example. Please tell me if you agree with this change.,"10/Nov/10 08:54;sauthieg;It's OK for me.
Thanks",,,,,,,,,,,,,,,,,,,,,,
[Framework] Bundle last modified time is not persisted on deployment,FELIX-2683,12478992,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,03/Nov/10 13:13,03/Nov/10 20:40,14/Mar/19 02:47,03/Nov/10 13:17,framework-3.0.5,,,,,,,,,,framework-3.0.6,,,,Framework,,,,,,,0,,,,,,"Recent changes to the bundle cache resulted in a bug where the initial value for bundle last modified time is not persisted to the disk, so subsequent runs report ""0"" until some other operation is performed that sets the last modified time, which persists the value finally.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40519,,,Wed Nov 03 18:37:44 UTC 2010,,,,,,0|i0aq6f:,60514,,,,,,,,03/Nov/10 13:17;rickhall;Committed a fix.,03/Nov/10 18:37;rickhall;Additional info: https://glassfish.dev.java.net/issues/show_bug.cgi?id=14351,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in assertMinScrAnnotationArtifactVersion when checking min. version of annotations dependency,FELIX-2681,12478913,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,sseifert@pro-vision.de,sseifert@pro-vision.de,02/Nov/10 17:41,13/Mar/11 12:56,14/Mar/19 02:47,02/Nov/10 20:55, maven-scr-plugin-1.6.0,,,,,,,,,,maven-scr-plugin-1.7.0,,,,SCR Tooling,,,,,,,0,,,,,,"i tested the scr plugin 1.6.0 from the staging repository:
https://repository.apache.org/content/repositories/orgapachefelix-010/

with a complex project consisting of mutliple osgi bundles and custom annotation tag providers.

compiling this set of maven projects/osgi bundles fails with this stackstrace:

java.lang.NullPointerException
        at org.apache.maven.artifact.DefaultArtifact.getSelectedVersion(DefaultArtifact.java:621)
        at org.apache.felix.scrplugin.mojo.SCRDescriptorMojo.assertMinScrAnnotationArtifactVersion(SCRDescriptorMojo.java:249)
        at org.apache.felix.scrplugin.mojo.SCRDescriptorMojo.getClassPath(SCRDescriptorMojo.java:216)
        at org.apache.felix.scrplugin.mojo.SCRDescriptorMojo.execute(SCRDescriptorMojo.java:167)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

the annotations dependeny is declared like this:
      <dependency>
        <groupId>org.apache.felix</groupId>
        <artifactId>org.apache.felix.scr.annotations</artifactId>
        <version>1.4.0</version>
        <scope>compile</scope>
      </dependency>

debugging shows that the ""versionrange"" member variable of the artifact is null.

if i change the version declaration to 
        <version>[1.4.0,)</version>

the stacktrace changes:
java.lang.NullPointerException
        at org.apache.maven.artifact.versioning.DefaultArtifactVersion.compareTo(DefaultArtifactVersion.java:54)
        at org.apache.felix.scrplugin.mojo.SCRDescriptorMojo.assertMinScrAnnotationArtifactVersion(SCRDescriptorMojo.java:250)
        at org.apache.felix.scrplugin.mojo.SCRDescriptorMojo.getClassPath(SCRDescriptorMojo.java:216)
        at org.apache.felix.scrplugin.mojo.SCRDescriptorMojo.execute(SCRDescriptorMojo.java:167)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

because the value returned by getSelectedVersion() is null.

please note: the annotation depency is not declared in the project that fails to compile, but in a project the failing project depends upon (transitive dependency).

looking on the documentation of the Artifact interface i'm not sure if the getSelectedVersion() method is really intended to be used by plugins.",windows 7 64bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-02 19:41:10.707,,,no_permission,,,,,,,,,,,40488,,,Tue Nov 02 21:32:12 UTC 2010,,,,,,0|i0aqvj:,60627,,,,,,,,"02/Nov/10 19:41;fmeschbe;This is weird -- I cannot reproduce. What version of Maven are you using ?

Nevertheless, a potential patch could be:

diff --git a/scrplugin/maven-scr-plugin/src/main/java/org/apache/felix/scrplugin/mojo/SCRDescriptorMojo.java b/scrplugin/maven-scr-plugin/src/main/java/org/apache/felix/scrplugin/mojo/SCRDescri
index 8517989..cf412be 100644
--- a/scrplugin/maven-scr-plugin/src/main/java/org/apache/felix/scrplugin/mojo/SCRDescriptorMojo.java
+++ b/scrplugin/maven-scr-plugin/src/main/java/org/apache/felix/scrplugin/mojo/SCRDescriptorMojo.java
@@ -246,7 +246,20 @@ public class SCRDescriptorMojo extends AbstractMojo {
             // compare version number
             try
             {
+                // try to find out the artifact's version
                 ArtifactVersion aVersion = a.getSelectedVersion();
+                if (aVersion == null)
+                {
+                    String version = a.getVersion();
+                    if (version == null)
+                    {
+                        getLog().error(""Cannot find version of "" + a + "", assuming 0.0.0"");
+                        version = ""0.0.0"";
+                    }
+                    aVersion = new DefaultArtifactVersion(version);
+                }
+
+                // assert minimal version
                 if (SCR_ANN_MIN_VERSION.compareTo(aVersion) > 0)
                 {
                     getLog().error(""Project depends on "" + a);

Would you be able to validate this in your environment ? Thanks.",02/Nov/10 20:55;fmeschbe;Applied a much simpler fix in Rev. 1030211: Just us the Artifact.getBaseVersion() which gets the correct version to be compared.,"02/Nov/10 21:32;sseifert@pro-vision.de;i'm using maven version 2.2.1

i've tested it a bit more with our projects, adding an explicit dependency to the failing project is a workaround. strangely enough not all projects with a transient dependency fail, but only one.

upgrading to scrplugin 1.6.1-SNAPSHOT with rev. 1030211 applied solves the problem altogether, so it is solved in the trunk.
thanks!",,,,,,,,,,,,,,,,,,,,,,,,
duplicate entry in pom.xml (dependencymanager and dependencymanager/annotation) for org.apache.maven:maven-plugin-api:jar,FELIX-2677,12478696,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,marrs,mpoehler,mpoehler,29/Oct/10 19:47,29/Nov/10 09:43,14/Mar/19 02:47,28/Nov/10 09:17,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"After checkout http://svn.apache.org/repos/asf/felix/trunk, running ""mvn -Dpackaging=plugins install"" with no problems. But running ""mvn -Dpackaging=bundle install"" causes the following error:

[INFO] Scanning for projects...
[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]   The project org.apache.felix:dependencymanager-reactor:3.0.0-SNAPSHOT (/home/mpoehl01/workspace/trunk/dependencymanager/pom.xml) has 1 error
[ERROR]     'dependencyManagement.dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.apache.maven:maven-plugin-api:jar -> duplicate declaration of version 2.0
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException

There is simply a duplicate entry in dependencymanager/pom.xml, and the same with dependencymanager/annotations/pom.xml. The duplicate entry is:
                        <dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>2.0</version>
			</dependency>
Delete one in both poms and everything will work fine.

",,,1200,1200,,0%,1200,1200,,,,,,,,,,,,29/Oct/10 19:51;mpoehler;dependencymanager_annotation_fix.txt;https://issues.apache.org/jira/secure/attachment/12458445/dependencymanager_annotation_fix.txt,29/Oct/10 19:51;mpoehler;dependencymanager_fix.txt;https://issues.apache.org/jira/secure/attachment/12458446/dependencymanager_fix.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-11-27 23:24:00.143,,,no_permission,,,,,,,,,,,40520,,,Mon Nov 29 09:43:07 UTC 2010,,,,,,0|i0aqpr:,60601,,,,,,,,29/Oct/10 19:51;mpoehler;Patches that fix this,"27/Nov/10 23:24;marrs;Hello Marco, I just tried doing a checkout of the trunk and subsequently doing a ""mvn -Dpackaging=bundle install"" as you mention, but I don't get an error message. Instead the whole build finishes (after some time) succesfully. In case it matters, my maven version:

marrs:felix-trunk marcel$ mvn -version
Apache Maven 2.2.1 (r801777; 2009-08-06 21:16:01+0200)
Java version: 1.6.0_22
Java home: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
Default locale: en_US, platform encoding: MacRoman
OS name: ""mac os x"" version: ""10.6.4"" arch: ""x86_64"" Family: ""mac""

Can anybody else try this?","28/Nov/10 01:42;mpoehler;Hello Marcel, thanks for your reply.

it is a maven problem. It only occurs when using the embedded maven that comes with m2eclipse (3.0-SNAPSHOT). 

I successfully checked the following maven versions on commandline and via m2eclipse: maven-2.2.1, maven-3.0 and maven-3.1

(Important to know: eclipse (Helios SR1) remembers the maven installation selected during launch creation, if you change the default installation later - your prior created launch configuration will use the old maven installation. To be sure what maven version is used, use the debug checkbox)

On commandline you won't see this issue, but with m2eclipse you are unable to build felix as described on http://felix.apache.org/site/building-felix.html",28/Nov/10 09:17;marrs;Applied the patch. Please close the issue if you're happy with it now.,29/Nov/10 09:43;mpoehler;build works now with the embedded version of maven that comes with m2eclipse. thanks Marcel.,,,,,,,,,,,,,,,,,,,,,,
bundlelevel gogo command will never work for modifying bundle level,FELIX-2676,12478478,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,rickhall,arikkfir,arikkfir,27/Oct/10 17:47,11/Jan/11 16:28,14/Mar/19 02:47,27/Oct/10 18:45,gogo-0.6.0,,,,,,,,,,gogo.command-0.8.0,,,,Gogo Command,,,,,,,0,,,,,,"BundleLevel when given a list of bundles for modifying bundle level, checks if the given list if empty, instead of *not* empty.

See line 137 in org.apache.felix.gogo.command.Basic: it checks if the list of bundles IS NOT null AND LENGTH==0  - I think it should be != 0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-27 18:45:56.27,,,no_permission,,,,,,,,,,,40510,,,Fri Oct 29 09:57:39 UTC 2010,,,,,,0|i0aqtj:,60618,,,,,,,,"27/Oct/10 18:45;rickhall;Yep, I think you are correct. Looks like a copy-and-paste bug from setting the initial level. I've commit a fix, please close this issue if you are satisfied.","29/Oct/10 09:57;arikkfir;Yup, seems like the appropriate fix. Closing.",,,,,,,,,,,,,,,,,,,,,,,,,
fileinstall always starts bundle eagerly,FELIX-2675,12478372,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,sahoo,sahoo,26/Oct/10 17:53,17/Mar/15 07:02,14/Mar/19 02:47,30/Nov/10 20:30,fileinstall-3.0.2,,,,,,,,,,fileinstall-3.1.2,,,,File Install,,,,,,,1,,,,,,"While starting bundle, should fileinstall not use bundle.start(START_ACTIVATION_POLICY) so that it allows a bundle to use lazy activation policy if a bundle is configured that way?",,,,,,,,,,,,,,,,,,,,26/Oct/10 17:54;sahoo;FELIX-2675-patch.txt;https://issues.apache.org/jira/secure/attachment/12458086/FELIX-2675-patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-26 18:08:15.206,,,no_permission,,,,,,,,,,,40534,,,Tue Nov 30 20:30:19 UTC 2010,,,,,,0|i0aqn3:,60589,,,,,,,,26/Oct/10 17:54;sahoo;Pl. review the patch so that I can commit soon.,"26/Oct/10 18:08;rickhall;That's certainly the simple way to do it, but shouldn't this be a configuration property per watched directory like many of the other settings?","30/Nov/10 20:30;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r1040763
",,,,,,,,,,,,,,,,,,,,,,,,
[Framework] Implicit boot delegation doesn't delegate for external code in all cases,FELIX-2670,12477888,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,20/Oct/10 17:24,03/Nov/10 20:41,14/Mar/19 02:47,25/Oct/10 20:23,framework-3.0.5,,,,,,,,,,framework-3.0.6,,,,Framework,,,,,,,0,,,,,,"When determining if a class is not from a bundle in ModuleImpl.isClassNotLoadedFromBundle() (terrible method name, by the way), it attempts to ignore all framework classes by checking if the target class' class loader is the same as the framework's class loader. This check is too broad since the framework's class loader is typically the app class loader, which means that any other code on the class path will not trigger implicit boot delegation.

You could argue that implicit boot delegation was intended for JRE code and this is ok. However, just by changing the framework launcher to use a different class loader for the framework, you would get implicit boot delegation for code on the class path, so it seems odd that we trigger it under one situation but not another.

Perhaps the simple solution is to not perform a class loader check, but to compare the package namespace (i.e., use org.apache.felix.framework to determine framework classes).",,,,,,,,,,,,,,,,,,,,21/Oct/10 22:52;rickhall;FELIX-2670.txt;https://issues.apache.org/jira/secure/attachment/12457799/FELIX-2670.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40547,,,Mon Oct 25 20:23:52 UTC 2010,,,,,,0|i0aqs7:,60612,,,,,,,,"21/Oct/10 22:51;rickhall;After some investigation and test case creation, I think the trigger for implicit boot delegation isn't completely correct. We are walking the stack to determine the ultimate originating class that triggered the entire class load request. In reality, I think we only want to find the first external class that called into the framework's class loading infrastructure.

If the immediate trigger class was loaded by a bundle, then OSGi rules apply and there is no implicit boot delegation.

If the immediate trigger class was loaded by an external class loader, then OSGi rules apply if Bundle.loadClass() is being called, but implicit boot delegation should occur if it is delegating to a module class loader.

I am attaching a patch that implements this approach, it simplifies the implicit boot delegation logic quite a bit. Also, it passes all of the tests I've created, although I still need to create a test for proxies. I will shortly apply this to trunk and then we should also try some real-world tests. If everything looks ok, then we will go back to addressing exceptional scenarios as they arise.

I am particularly interested if Guillaume could test his scenario from FELIX-962 to make sure it still works with this patch, since this is where I think we started to make things too complicated.","25/Oct/10 20:23;rickhall;I've applied a patch for this and have created several test cases for it that all pass. I also tested it against the scenario in FELIX-2653. Everything looks good, but it is possible that I'm missing something. We'll just address any regressions as they are discovered.",,,,,,,,,,,,,,,,,,,,,,,,,
getting error about SlingFilterScope not being applicable for <T extends Enum>,FELIX-2665,12477500,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,justinedelson,justinedelson,15/Oct/10 19:54,09/Nov/10 09:43,14/Mar/19 02:47,18/Oct/10 07:18,,,,,,,,,,, maven-scr-plugin-1.6.0,,,,SCR Tooling,,,,,,,0,,,,,,"with a current trunk (r1022936) build of scr annotations (1.3.1-SNAPSHOT) and scr plugin (1.4.5-SNAPSHOT), building Sling errors out with an error about how SlingFilterScope isn't applicable for <T extends Enum>. Sorry - I accidentially closed the window where I'd pasted the error message, will add it in a comment later.","Apache Maven 3.0 (r1004208; 2010-10-04 07:50:56-0400)
Java version: 1.6.0_20
Java home: /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home
Default locale: en_US, platform encoding: MacRoman
OS name: ""mac os x"" version: ""10.6.4"" arch: ""x86_64"" Family: ""mac""

also seen with Maven 2.2.1",,,,,,,,,,,,,,,,,,,15/Oct/10 19:55;justinedelson;ASF.LICENSE.NOT.GRANTED--FELIX-2665.patch;https://issues.apache.org/jira/secure/attachment/12457290/ASF.LICENSE.NOT.GRANTED--FELIX-2665.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-18 07:18:08.909,,,no_permission,,,,,,,,,,,40578,,,Tue Nov 09 09:43:11 UTC 2010,,,,,,0|i0aqlj:,60582,,,,,,,,15/Oct/10 19:55;justinedelson;this patch fixes the problem for me locally,"18/Oct/10 07:18;cziegeler;Thanks, Justin - I've applied your patch with revision 1023666 and deployed a new snapshot",09/Nov/10 09:43;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,
Native methods should not be manipulated,FELIX-2664,12477491,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,15/Oct/10 18:11,04/Feb/13 12:33,14/Mar/19 02:47,15/Oct/10 18:14,,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,The manipulator messes up native method by changing the method name. Native method should not be touched by the manipulator.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40498,,,Fri Oct 15 18:14:48 UTC 2010,,,,,,0|i0aqk7:,60576,,,,,,,,15/Oct/10 18:14;clement.escoffier;Fixed in trunk,,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigurationRender.searchMethod must catch problems more broadly,FELIX-2659,12477317,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,14/Oct/10 06:28,09/Nov/10 09:46,14/Mar/19 02:47,14/Oct/10 10:04,,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"The ConfigurationRender.searchMethod looks up a method by reflection and catches any NoSuchMethodException thrown. There are situations, though, where a ClassDefNotFoundError may be thrown -- noticed in the PermissionAdmin Configuration Printer if the ConfigurationAdmin API is not available - which must also be caught to not break the generation of the configuration status ZIP file.

Proposed solution is to just ignore any Throwable and assume ""method not found and thus ignore""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-14 10:04:51.458,,,no_permission,,,,,,,,,,,40475,,,Tue Nov 09 09:46:56 UTC 2010,,,,,,0|i0ar4f:,60667,,,,,,,,14/Oct/10 10:04;cziegeler;Catching throwable with revision 1022448,09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
Deprecate ConfigurationPrinter.PROPERTY_MODES constant,FELIX-2658,12477316,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,14/Oct/10 06:24,09/Nov/10 09:46,14/Mar/19 02:47,14/Oct/10 09:58,,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"As discussed on the dev list [1] : The ConfigurationPrinter.PROPERTY_MODES should be deprecated (replaced by the WebConsoleConstants.CONFIG_PRINTER_MODES constant.

Still the deprecated constant should be supported as a fallback in case the new constant is not used in the ConfigurationPrinter service registration.

[1] http://markmail.org/message/hruez7l2g5lfasnu",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-14 09:58:21.783,,,no_permission,,,,,,,,,,,40574,,,Tue Nov 09 09:46:56 UTC 2010,,,,,,0|i0ar13:,60652,,,,,,,,14/Oct/10 09:58;cziegeler;Fixed in revision 1022445,09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
Maven-bundle-plugin uses old version of BndLib,FELIX-2657,12477284,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,alex.blewitt,alex.blewitt,13/Oct/10 21:52,24/Jun/11 13:46,14/Mar/19 02:47,24/Jun/11 13:46,maven-bundle-plugin-2.1.0,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Maven-bundle-plugin 2.1.0 refers to bnd 0.0.357. However, bndlib 0.0.401 is available.

http://www.aqute.biz/repo/biz/aQute/bndlib/0.0.401/",,,,,,,,,,,,FELIX-2656,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56194,,,2010-10-13 21:52:52.0,,,,,,0|i1atj3:,271250,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven-bundle-plugin identified as not thread-safe in Maven 3.0,FELIX-2656,12477283,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,alex.blewitt,alex.blewitt,13/Oct/10 21:51,11/Oct/11 17:09,14/Mar/19 02:47,27/Jun/11 22:03,maven-bundle-plugin-2.1.0,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,2,,,,,,"When executing a Maven-3 build with maven-bundle-plugin and set to more than one thread, this error message is shown:



[WARNING] *****************************************************************
[WARNING] * Your build is requesting parallel execution, but project      *
[WARNING] * contains the following plugin(s) that are not marked as       *
[WARNING] * @threadSafe to support parallel building.                     *
[WARNING] * While this /may/ work fine, please look for plugin updates    *
[WARNING] * and/or request plugins be made thread-safe.                   *
[WARNING] * If reporting an issue, report it against the plugin in        *
[WARNING] * question, not against maven-core                              *
[WARNING] *****************************************************************
[WARNING] The following plugins are not marked @threadSafe in com.infoq.minimal:
[WARNING] org.apache.felix:maven-bundle-plugin:2.1.0
[WARNING] *****************************************************************

https://cwiki.apache.org/MAVEN/parallel-builds-in-maven-3.html


mvn -T 4 clean install # Builds with 4 threads

I believe the solution is to add @threadSafe to the maven-bundle-plugin MoJo class (after checking that it is in fact thread-safe :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-27 22:03:02.706,,,no_permission,,,,,,,,,,,56195,,,Mon Jun 27 22:03:02 UTC 2011,,,,,,0|i1atjb:,271251,,,,,,,,27/Jun/11 22:03;mcculls;Fixed in r1140342.,,,,,,,,,,,,,,,,,,,,,,,,,,
[Gogo] MOTD formatting is broken under Windows,FELIX-2651,12477022,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,rickhall,rickhall,11/Oct/10 15:02,11/Jan/11 17:12,14/Mar/19 02:47,11/Jan/11 17:12,gogo-0.6.1,,,,,,,,,,gogo.shell-0.8.0,,,,Gogo Shell,,,,,,,0,,,,,,"It was reported to me that the MOTD looks like this under Windows:

____________________________
                            Welcome to Apache Felix Gogo

                                                        g!

We should probably format the file with Window's line breaks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40461,,,Tue Jan 11 17:12:31 UTC 2011,,,,,,0|i0aq0n:,60488,,,,,,,,11/Jan/11 17:12;rickhall;Added Windows-style line feeds.,,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigurationPrinter with other modes than web should be excluded from web,FELIX-2650,12477020,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,11/Oct/10 14:49,09/Nov/10 09:46,14/Mar/19 02:47,11/Oct/10 14:49,webconsole-3.1.0,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"If a configuration printer is configured for other valid modes than web, like just for zip or txt, it should not be rendered at all in web mode",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-09 09:46:55.755,,,no_permission,,,,,,,,,,,40575,,,Tue Nov 09 09:46:55 UTC 2010,,,,,,0|i0aqu7:,60621,,,,,,,,11/Oct/10 14:49;cziegeler;Fixed in revision 1021362,09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
cannot disable plugin,FELIX-2644,12476832,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,08/Oct/10 07:13,09/Nov/10 09:46,14/Mar/19 02:47,25/Oct/10 11:53,webconsole-3.1.2,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"Something went terribly wrong! I cannot disable a plugin from the configuration.

The reason for this is that the plugins are initialized during startup. In the constructor, the Web Console will lookup the configuration and see if plugin is disable. If so, it will be ignored, otherwise the plugin will be instantiated and ready to use.

However, configuration delivery is asynchronous, so you don't know when the configuration dictionary is delivered and in my case, it is 'updated' a little bit after the initialization. So initially, when the web console is initialized, it has 'null' - default configuration and all plugins are enabled. Then later on, after updating the configuration I disable as example the 'shell' plugin.

Unfortunately, the web console will not check if the plugin is disabled, when the browser is opened and the 'shell' plugin remains visible.

Putting the plugin initialization in the constructor, means, that there is no way to actually disable a plugin and all internal plugin will be instantiate and visible by default, Even if they are not needed, there is no browser request for them or disabled by the configuration.",,,,,,,,,,,,,,,,,,,,20/Oct/10 06:31;v_valchev;internal-plugin-loader.patch;https://issues.apache.org/jira/secure/attachment/12457649/internal-plugin-loader.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-08 12:14:42.824,,,no_permission,,,,,,,,,,,40557,,,Tue Nov 09 09:46:54 UTC 2010,,,,,,0|i0aqnj:,60591,,,,,,,,"08/Oct/10 12:14;fmeschbe;Yes, this is caused by my refactoring of the OSGiManager setup.

Maybe we should enhance the PluginHolder and its internal classes Plugin/ServletPlugin addding an ""enabled"" flag and changing the getPlugins() and getPlugin(String) method to respect this enabled flag.

WDYT ?","08/Oct/10 12:18;fmeschbe;In addition to plugin enablement, we also have an issue with the WebConsoleSecurityProvider.authorize method, which is not used yet. So if we touch the PluginHolder class for the enablement class, it would probably make sense to add support for the authorize() method as well.","11/Oct/10 06:25;v_valchev;And maybe that Plugin can be given a class name, so it can create the ""internal plugin"" instance on demand. Just like the external plugins registered as services.","20/Oct/10 06:31;v_valchev;Attached quick and dirty patch for fixing the problem

Now the internal plugins are created by class-name, so the plugins are instantiated when they are requested.

This theoretically should decrease the startup time of the bundle.

Unfortunately there is a small problem with the metatype - I need to show the titles, but since I don't have the plugin instances I don't know the titles. So I assume, that the title is a resource key which is made as ""<label>.pluginTitle"", which of course is not true ;) And if the title is missing, then the label is used.

","25/Oct/10 07:41;fmeschbe;Patch basically looks good.

Some comments:

  * Can you please commit the ""$NON-NLS-1$"" changes in a separate commit ? (just to keep the history clean ;-) )
  * Instead of making the OsgiManager.enabledPlugins field package private I suggest:
            - to add an OsgiManager.isEnabled(String classNameOrLabel) returning whether the plugin is enabled
  * How about making InternalPlugin.isEnabled() a method of the Plugin class ? This makes all plugins eligible for disablement and allows us to not do stuff like ""if plugin instanceof InternalPlugin""
  * ConfigurationListener2: Currently only built-in plugins support enablement. By movind the isEnabled method to the Plugin class, this class could be extended to go to the registered plugins to extend the list of plugins, which may be enabled/disabled, to the full set of installed plugins.","25/Oct/10 08:47;v_valchev;* agreed fro NON-NLS ;)
* instead of adding new method OsgiManager.isEnabled() refactored a little bit the existing method isPluginDisabled
* agreed for Plugin.isEnabled()
* for the configuration listener, if I extend the list to the list of all available plugins, then the problems is that each newly registered plugin will get 'disabled' by default. Another solution is the configuration value to contain the list of ""disabled"" plugins. Maybe we should have a different issue on that problem.


And some other thing, that I will do for the internal plugins is to make their title look like <label>.pluginTitle.","25/Oct/10 09:24;fmeschbe;Ok, agreed on all. Thanks.

I would assume that changing the ""title"" of the internal plugins to ""<label>.pluginTitle"" will only affect some translations possibly being out there in the wild but not any functionality, right ? I f so, I am ok with this change.","25/Oct/10 11:08;v_valchev;Yes, it is mostly for the properties files, but in some plugins it requires to change a private static field TITLE",25/Oct/10 11:53;v_valchev;fixed in rev. 1027069,09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,
Cannot control the validity of an iPOJO instance using a configuration property,FELIX-2636,12475794,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,rodehav,rodehav,04/Oct/10 19:46,04/Nov/10 08:03,14/Mar/19 02:47,07/Oct/10 18:25,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"Controlling the validity of an iPOJO instance as follows doesn't work:

@Controller
@Property(name = ""connect.enabled"", mandatory = true)
private boolean mValid = false;

When initialising mValid to false (as above), the iPOJO instance becomes invalid even though the configuration property (connect.enabled in this case) is true.

On the other hand, if the following code is used...

@Controller
@Property(name = ""connect.enabled"", mandatory = true)
private boolean mValid = true;

...then the instance becomes valid even though the configuration property is false.

I use Karaf 1.6.0 with file installer 3.0.2 in the scenario above. The problem only occurs when starting Karaf. Subsequent changes of the configuration property will change the validity of the instance correctly. The problem does not show when using iPOJO 1.6.0 but it's still important to make sure that the above described scenario is supported by iPOJO.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-07 18:25:31.332,,,no_permission,,,,,,,,,,,40479,,,Thu Nov 04 08:03:24 UTC 2010,,,,,,0|i0aqo7:,60594,,,,,,,,"07/Oct/10 18:25;clement.escoffier;I think, I've fixed the issue in the trunk.
The controller handler and the configuration handler are now interacting correctly.","07/Oct/10 20:38;rodehav;Great Clement!

I'll try the latest trunk tomorrow.

/Bengt","08/Oct/10 07:41;rodehav;I've tried the latest trunk now. Seems to be 1.7.0-SNAPSHOT and not 1.8.0-SNAPSHOT which this JIRA indicates.

It works! Great job Clement. I still have a couple of questions though:

1. INITIALISATION

I presently use the following code:

@Controller
@Property(name = ""connect.enabled"", mandatory = true)
private boolean mValid = true;

Do I really have to initialise the mValid field? If yes, should I initialise it to true or false?

My reasoning is like this: Since this is a mandatory property, the instance will not be valid until it gets a value from configuration manager. Thus I shouldn't have to initialise it at all. Is this reasoning correct?

2. FILE INSTALL vs BUNDLE CACHE

I use file install to control my configuration. Thus I can change the configuration (the ""connect.enabled"" property) from either file install or directly in configuration manager (using the Webconsole or my own GUI). Which takes precedence on startup?

My tests indicate that what I specify in file install will be used even when configuration manager's cache differ from this value. Is this by accident or is this the way it will always work? I think I can live with either way as long as it's deterministic.

3. RELEASE

When do you think this fix will be available in an iPOJO release. I would like to get it into production as soon as possible since we've had incidents in production regarding this issue.

","08/Oct/10 08:28;clement.escoffier;Hi,

1. No, you don't have to initialized the property because it may conflict with the property value.

2. I've no idea. Could you ask on the mailing list ?

3. ASAP :-) I want to fix FELIX-2594 (also impacting the core). But it should not be long so probably next week.

","08/Oct/10 11:57;rodehav;Thanks a lot Clement.

Yes, you'r right, the FILE INSTALL vs BUNDLE CACHE question is better suited for the mailing list since it's not really connected to this issue (not connected to iPOJO at all probably).

Looking forward to the release.",04/Nov/10 08:03;clement.escoffier;Released in iPOJO Core 1.6.6,,,,,,,,,,,,,,,,,,,,,
PluginHolder.setServletContext() must nullify servlet context after plugins destroying ,FELIX-2635,12475404,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,kapyar,kapyar,29/Sep/10 13:26,09/Nov/10 09:46,14/Mar/19 02:47,29/Sep/10 14:06,webconsole-3.1.2,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"Java Servlet Specification Version 2.5, SRV.15.2.12.1 says: ""All servlets and filters have been destroy()ed before any ServletContextListeners are notified of context destruction"". But current PluginHolder.setServletContext() implementation calls destroy() method of plugins after destroying (nullifying) of ServletContext. This causes NPE in plugins trying to access to ServletContext in their destroy() methods.",,,,,,,,,,,,,,,,,,,,29/Sep/10 13:27;kapyar;webconsole_set_servlet_context.patch;https://issues.apache.org/jira/secure/attachment/12455914/webconsole_set_servlet_context.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-29 14:06:05.422,,,no_permission,,,,,,,,,,,40500,,,Tue Nov 09 09:46:53 UTC 2010,,,,,,0|i0aqzz:,60647,,,,,,,,29/Sep/10 13:27;kapyar;Proposed patch attached.,"29/Sep/10 14:06;fmeschbe;Good catch ! Thanks for providing the patch.

I have applied it in Rev. 1002635 with a minor modification: Instead of assigning the parameter value ""null"" is assigned to make the intent clear and added try-catch around the destroy calls.",09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,
Arch Gogo is not compatible with the new gogo (0.6.1),FELIX-2632,12475313,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,28/Sep/10 16:06,10/Oct/10 16:49,14/Mar/19 02:47,28/Sep/10 16:34,,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,The dependency on gogo must be udpated.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56199,,,Sun Oct 10 16:49:16 UTC 2010,,,,,,0|i0vyq7:,184599,,,,,,,,28/Sep/10 16:35;clement.escoffier;Fixed in trunk,10/Oct/10 16:49;clement.escoffier;Fixed in arch gogo 1.0.1,,,,,,,,,,,,,,,,,,,,,,,,,
[Framework] Module class loader should return an empty enumeration for getResources(),FELIX-2629,12475147,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,26/Sep/10 21:04,28/Sep/10 16:03,14/Mar/19 02:47,26/Sep/10 21:23,framework-3.0.3,,,,,,,,,,framework-3.0.4,,,,Framework,,,,,,,0,,,,,,"The ClassLoader.getResources() method should return an empty enumeration when the requested resource is not found. Currently, it returns null.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40504,,,Sun Sep 26 21:23:01 UTC 2010,,,,,,0|i0aqof:,60595,,,,,,,,26/Sep/10 21:23;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
Junit Runner doesn't run in Mac OSx platforms,FELIX-2628,12475094,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,clement.escoffier,edpichler,edpichler,25/Sep/10 01:44,06/Nov/10 10:36,14/Mar/19 02:47,06/Nov/10 10:01,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"I`m using Junit4SOsgi, an excelent framework. But in Mac Os I'm getting a problem.
The junit runner doesn't work, It freeze when the Equinox envorinment starts. This is normal, under Equinox Swt OSGi environment.

Here is more description about the problem and probably the solution too.",Mac os Leopard and eclipse helios,,86400,86400,,0%,86400,86400,,,,,,,,,,,,18/Oct/10 16:33;edpichler;Screen shot 2010-10-18 at 2.29.48 PM.png;https://issues.apache.org/jira/secure/attachment/12457459/Screen+shot+2010-10-18+at+2.29.48+PM.png,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-25 06:03:10.26,,,no_permission,,,,,,,,,,,56200,,,Sat Nov 06 10:02:00 UTC 2010,,,,,,0|i0vwbr:,184210,,,,,,,,"25/Sep/10 06:03;clement.escoffier;Hi,

Which runner are you using ? The swing runner ?

Clement","25/Sep/10 06:34;clement.escoffier;Here is the configuration, I use on equinox:

osgi> ss

Framework is launched.

id	State       Bundle
0	ACTIVE      org.eclipse.osgi_3.6.1.R36x_v20100806
1	ACTIVE      org.apache.felix.ipojo_1.6.4
2	ACTIVE      org.apache.felix.ipojo.junit4osgi_1.1.0.SNAPSHOT
3	ACTIVE      org.apache.felix.ipojo.junit4osgi.swing-gui_1.1.0.SNAPSHOT
4	ACTIVE      org.apache.felix.ipojo.arch.equinox_1.5.0.SNAPSHOT
5	ACTIVE      org.apache.felix.ipojo.handler.extender_1.5.0.SNAPSHOT

The bundle 4 is optional, it's just used to debug.

Regards,

Clement","26/Sep/10 01:07;edpichler;Yes, I`m using the swing runner. ","26/Sep/10 06:03;clement.escoffier;Could you give me the versions of the bundles you're using ?

Clement","26/Sep/10 19:30;edpichler;I'm just a little busy at this time. Next week I'll send more details about this issue. ok?

But, note that it seems a common problem with swing applications in Eclipse+macintosh. 

I think this problem is not with Junit4osgi, but I'll investigate and send more details. I'll try the solution I posted in this link relating the parameter ""seconthread"" when lauching the equinox.","29/Sep/10 19:47;edpichler;I'm using this OSGi environment.

https://bitbucket.org/pichler/osgi-component-collection","04/Oct/10 18:50;clement.escoffier;I've looked into your environment. Looks ok to me.
Could you try with the trunk version of junit4osgi ?

I can deploy a snapshot if you need one.

Regards,

Clement",06/Oct/10 11:09;edpichler;Ok! I'll try it next days . ,"18/Oct/10 16:33;edpichler;I've put some additional argument to get this working.

Adding the ""--launcher.secondThread"" argument and removing the ""ws"" argument, the Junit runner works perfectly.",06/Nov/10 10:02;clement.escoffier;Reported as fixed.,,,,,,,,,,,,,,,,,
can't install war files via webconsole,FELIX-2627,12475044,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,justinedelson,justinedelson,24/Sep/10 14:54,09/Nov/10 09:46,14/Mar/19 02:47,24/Sep/10 19:04,webconsole-3.1.2,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"You can select a WAR file and click Install or Update, but then you get an error message (see attached). WAR files can be OSGi bundles, so I don't see why this limitation should be in place.",,,,,,,,,,,,,,,,,,,,24/Sep/10 14:54;justinedelson;ASF.LICENSE.NOT.GRANTED--screenshot0.png;https://issues.apache.org/jira/secure/attachment/12455495/ASF.LICENSE.NOT.GRANTED--screenshot0.png,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-24 17:10:41.115,,,no_permission,,,,,,,,,,,40477,,,Tue Nov 09 09:46:53 UTC 2010,,,,,,0|i0aq8f:,60523,,,,,,,,"24/Sep/10 17:10;fmeschbe;I agree, we should probably loosen the check on the file selection here.",24/Sep/10 19:04;fmeschbe;Added support to upload war files from the GUI in Rev. 1001030.,09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,
webconsole has option to change the language but doesn't show the currently selected one,FELIX-2617,12474930,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,23/Sep/10 13:11,09/Nov/10 09:46,14/Mar/19 02:47,23/Sep/10 13:14,webconsole-3.1.2,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"Web console shows a small icon in the top-right corner, that allows the user to choose the language. However it doesn't show the currently selected one.

It's better instead of 'language selection' icon to show the 'currently selected flag'. Then from the list you can choose from *all other* available languages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-09 09:46:52.658,,,no_permission,,,,,,,,,,,40566,,,Tue Nov 09 09:46:52 UTC 2010,,,,,,0|i0aqx3:,60634,,,,,,,,23/Sep/10 13:14;v_valchev;Fixed in rev. 1000453,09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayOutOfBoundsException occurs from maven scr plugin when an empty class is present,FELIX-2615,12474908,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,mccloud35,mccloud35,23/Sep/10 07:37,09/Nov/10 09:43,14/Mar/19 02:47,07/Oct/10 07:18, maven-scr-plugin-1.4.4,,,,,,,,,, maven-scr-plugin-1.6.0,,,,SCR Tooling,,,,,,,0,,,,,,"The following exception occurs through the maven scr plugin when a completely empty class is present in the project.

[INFO] [scr:scr {execution: generate-scr-scrdescriptor}]
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] 0
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.ArrayIndexOutOfBoundsException: 0
	at org.apache.felix.scrplugin.tags.JavaClassDescriptorManager.getSourceDescriptions(JavaClassDescriptorManager.java:344)
	at org.apache.felix.scrplugin.SCRDescriptorMojo.execute(SCRDescriptorMojo.java:110)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:483)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:678)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:540)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:519)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:371)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:332)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:181)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:356)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:137)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:356)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 minutes 46 seconds
[INFO] Finished at: Thu Sep 23 12:44:00 IST 2010
[INFO] Final Memory: 74M/408M
[INFO] ------------------------------------------------------------------------
",,,600,600,,0%,600,600,,,,,,,,,,,,23/Sep/10 07:38;mccloud35;diff.patch;https://issues.apache.org/jira/secure/attachment/12455362/diff.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-07 07:18:43.183,,,no_permission,,,,,,,,,,,40555,,,Tue Nov 09 09:43:10 UTC 2010,,,,,,0|i0aql3:,60580,,,,,,,,23/Sep/10 07:38;mccloud35;Patch is attached that fixes issue. Please verify and resolve.,07/Oct/10 07:18;cziegeler;Thanks for your patch! I've applied it in revision 1005343 - please cross check. Thanks!,09/Nov/10 09:43;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,
[OBR] Doesn't work on Java 1.4 due to use of Boolean.parseBoolean(),FELIX-2612,12474737,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,21/Sep/10 18:40,21/Sep/10 18:41,14/Mar/19 02:47,21/Sep/10 18:41,bundlerepository-1.6.4,,,,,,,,,,bundlerepository-1.6.6,,,,Bundle Repository (OBR),,,,,,,0,,,,,,Should use Boolean.valueOf().booleanValue(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40567,,,Tue Sep 21 18:41:41 UTC 2010,,,,,,0|i0aq3z:,60503,,,,,,,,21/Sep/10 18:41;rickhall;Fixed in trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,
[Utils] Doesn't work on Java 1.4 due to use of String.contains(),FELIX-2611,12474735,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,21/Sep/10 18:35,21/Sep/10 18:43,14/Mar/19 02:47,21/Sep/10 18:43,utils-1.0.0,,,,,,,,,,utils-1.1.0,,,,Utils,,,,,,,0,,,,,,Should use indexOf() instead.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40560,,,Tue Sep 21 18:43:02 UTC 2010,,,,,,0|i0aqfr:,60556,,,,,,,,21/Sep/10 18:43;rickhall;Fixed in trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,
 WebConsole doesn't work with JDK 1.3.1_06 because of problem in MessageFormat,FELIX-2610,12474706,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,21/Sep/10 15:13,09/Nov/10 09:46,14/Mar/19 02:47,23/Sep/10 13:03,webconsole-3.1.2,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"When running webconsole with JDK 1.3.1 it generates internal server error when opened from browser and it is completely unusable. In the logs the following exception is added:

{code}
Exception: java.lang.IllegalArgumentException: argument number too large at
        at java.text.MessageFormat.makeFormat(MessageFormat.java:795)
        at java.text.MessageFormat.applyPattern(MessageFormat.java:318)
        at java.text.MessageFormat.<init>(MessageFormat.java:248)
        at java.text.MessageFormat.format(MessageFormat.java:475)
        at org.apache.felix.webconsole.AbstractWebConsolePlugin.startResponse(AbstractWebConsolePlugin.java:548)
        at org.apache.felix.webconsole.AbstractWebConsolePlugin.doGet(AbstractWebConsolePlugin.java:141)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.doGet(BundlesServlet.java:275)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:702)
{code}

Obviously, older JDK has some problems with MessageFormat. A simple workaround is to use our variable resolver instead of MessageFormat. IMHO using the variable resolver is even better because now we do 2 kinds of pre-processing of the HTML - first via the message formatter and second - with the variable resolver.

So WDYT?
","Sun JDK 1.3.1_06, Windows",,,,,,,,,,,,,,,,,,,21/Sep/10 15:30;v_valchev;varresolver-insteadof-messageformat.patch;https://issues.apache.org/jira/secure/attachment/12455150/varresolver-insteadof-messageformat.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-21 16:30:58.646,,,no_permission,,,,,,,,,,,40539,,,Tue Nov 09 09:46:51 UTC 2010,,,,,,0|i0aqdb:,60545,,,,,,,,21/Sep/10 15:30;v_valchev;patch attached,"21/Sep/10 16:30;fmeschbe;Good idea. Thanks for the patch.

+1 from me ;-)",23/Sep/10 13:03;v_valchev;Fixed in rev.1000446,09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,
WebConsole doesn't work with JDK 1.3.1_06 because of Locale,FELIX-2609,12474704,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,21/Sep/10 15:05,09/Nov/10 09:46,14/Mar/19 02:47,21/Sep/10 15:07,webconsole-3.1.2,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"When creating Locale object, in webconsole we use new Locale(""string""), which is new in JDK 1.4.
If running on JDK 1.3 the following exception occurs:

Exception: java.lang.NoSuchMethodError
        at org.apache.felix.webconsole.internal.i18n.ResourceBundleCache.getParentLocale(ResourceBundleCache.java:172)
        at org.apache.felix.webconsole.internal.i18n.ResourceBundleCache.getResourceBundleInternal(ResourceBundleCache.java:88)
        at org.apache.felix.webconsole.internal.i18n.ResourceBundleCache.getResourceBundle(ResourceBundleCache.java:68)
        at org.apache.felix.webconsole.internal.i18n.ResourceBundleManager.getResourceBundle(ResourceBundleManager.java:85)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.wrapResponse(OsgiManager.java:572)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:426)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:375)
        at com.prosyst.mbs.impl.services.http.ServletProperties.service(ServletProperties.java:108)
        at com.prosyst.mbs.impl.services.http.Response.makeAnswer(Response.java:212)
        at com.prosyst.mbs.impl.services.http.ThreadProcess.run(ThreadProcess.java:102)
        at com.prosyst.util.impl.tpt.threadpool.ExecutorGeneral.run(ExecutorGeneral.java:182)


It can be easily fixed by replacing new Locale(""string"") with new Locale(""string"", """");",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-09 09:46:51.003,,,no_permission,,,,,,,,,,,40561,,,Tue Nov 09 09:46:51 UTC 2010,,,,,,0|i0aqrb:,60608,,,,,,,,21/Sep/10 15:08;v_valchev;Fixed in rev.999455,09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
Threads should be daemon threads,FELIX-2608,12474678,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,21/Sep/10 09:23,28/Jul/11 08:52,14/Mar/19 02:47,21/Sep/10 09:23,eventadmin-1.2.4,,,,,,,,,,eventadmin-1.2.6,,,,Event Admin,,,,,,,0,,,,,,"The threads used to process the events are currently non daemon threads which prevent the vm from shutting down immediately.
This is actually a regression to version 1.0.0 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40558,,,Tue Sep 21 09:23:41 UTC 2010,,,,,,0|i0aqwn:,60632,,,,,,,,21/Sep/10 09:23;cziegeler;Fixed in revision 999287,,,,,,,,,,,,,,,,,,,,,,,,,,
Remote Shell not correctly catching exceptions in TerminalPrintStream,FELIX-2604,12474604,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,20/Sep/10 15:40,20/Sep/10 19:29,14/Mar/19 02:47,20/Sep/10 19:29,shell.remote-1.1.0,,,,,,,,,,shell.remote-1.1.2,,,,Remote Shell,,,,,,,0,,,,,,"In TerminalPrintStream.flush(), the internal call to out.flush() is bracket by a try block catching an IOException, but it appears that out gets set to null at point an the method ends up throwing an NPE. We should probably catch Exception, like the other methods in TerminalPrintStream to avoid this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40544,,,Mon Sep 20 19:29:13 UTC 2010,,,,,,0|i0aqsn:,60614,,,,,,,,20/Sep/10 19:29;rickhall;I've committed a patch that works for now.,,,,,,,,,,,,,,,,,,,,,,,,,,
wrong behavior of InstanceManager.onSet(..) method,FELIX-2603,12474588,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,p.a,p.a,20/Sep/10 13:11,04/Nov/10 08:03,14/Mar/19 02:47,21/Sep/10 08:46,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"Hello,

Clement and I has talked about this issue, and some different point of views are welcome.

Currently, in the InstanceManager.onSet(..) method, the calls to the FieldInterceptor.onSet(..) is conditioned by '!value.equals(objectValue)', the 'value' is the current reference to the intercepted field, 'objectValue' is the reference that is going to be assigned to the intercepted field.
See line 1096 of InstanceManager.java in iPOJO core 1.6.4.
Thus, in my opinion, the semantic of 'onSet' is not really what is described in the iPOJO documentation ""This method is called each time a field of the POJO is assigned"" (see http://felix.apache.org/site/how-to-write-your-own-handler.html#Howtowriteyourownhandler-InteractingwiththePOJO). Its semantic is rather ""this method is called each time a field of the POJO is assigned and the new assigned value is different (in the 'equals(..)' method way) from the current value"".

Moreover, the call to 'equals' method can result in some expensive computations, thus this optimization can be counter productive.

I suggest to remove the condition '!value.equals(objectValue))' in 'InstanceManager.onSet(..)'.
If some external codes rely on the current behavior of onSet(..), rename the 'InstanceManager.onSet(..)' to 'InstanceManager.onModification(..)', add the method onModification(..) in FieldInterceptor interface, and adapt the external codes to use this new 'onModification(..)' method.
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-21 08:48:10.93,,,no_permission,,,,,,,,,,,40559,,,Thu Nov 04 08:03:09 UTC 2010,,,,,,0|i0ar2n:,60659,,,,,,,,"21/Sep/10 08:48;clement.escoffier;Fixed in trunk, I've also deployed a SNAPSHOT versions.

Thanks !",04/Nov/10 08:03;clement.escoffier;Released in iPOJO Core 1.6.6,,,,,,,,,,,,,,,,,,,,,,,,,
DependencyHandler.onObjectCreation throws NPE when bundle is refreshed,FELIX-2596,12473913,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,xeraph,xeraph,11/Sep/10 17:53,12/Sep/10 10:56,14/Mar/19 02:47,12/Sep/10 10:21,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"When I update bundle and refresh using PackageAdmin.refreshPackages(null),  DependencyHandler always throws below exception. It seems work well after bundle refresh. iPOJO 1.4.0 works well with this case.

----
[2010-09-12 02:41:10,500] DEBUG (KrakenLogService) - [ERROR] wc-message-resource-api : null
[2010-09-12 02:41:10,500] DEBUG (KrakenLogService) - [ERROR] iPOJO Instance Creator : A matching factory was found for {component=wc-message-resource-
api, instance.name=wc-message-resource-api-0}, but the instantiation failed : The configuration is not correct for the type wc-message-resource-api :
null
[2010-09-12 02:41:10,514] DEBUG (KrakenLogService) - [ERROR] wc-event-log-api : null
java.lang.NullPointerException
        at org.apache.felix.ipojo.handlers.dependency.Dependency.onObjectCreation(Dependency.java:259)
        at org.apache.felix.ipojo.handlers.dependency.DependencyHandler.__onCreation(DependencyHandler.java:552)
        at org.apache.felix.ipojo.handlers.dependency.DependencyHandler.onCreation(DependencyHandler.java)
        at org.apache.felix.ipojo.HandlerManager.start(HandlerManager.java:132)
        at org.apache.felix.ipojo.InstanceManager.start(InstanceManager.java:303)
        at org.apache.felix.ipojo.ComponentFactory.createInstance(ComponentFactory.java:155)
        at org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:301)
        at org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:238)
        at org.apache.felix.ipojo.InstanceCreator$ManagedInstance.create(InstanceCreator.java:343)
        at org.apache.felix.ipojo.InstanceCreator.onValidation(InstanceCreator.java:202)
        at org.apache.felix.ipojo.InstanceCreator.stateChanged(InstanceCreator.java:243)
        at org.apache.felix.ipojo.IPojoFactory.computeFactoryState(IPojoFactory.java:731)
        at org.apache.felix.ipojo.ComponentFactory.addedService(ComponentFactory.java:358)
        at org.apache.felix.ipojo.util.Tracker$Tracked.trackAdding(Tracker.java:725)
        at org.apache.felix.ipojo.util.Tracker$Tracked.track(Tracker.java:686)
        at org.apache.felix.ipojo.util.Tracker$Tracked.serviceChanged(Tracker.java:642)
        at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:864)
        at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
        at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
        at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3623)
        at org.apache.felix.framework.Felix.access$000(Felix.java:39)
        at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:667)
        at org.apache.felix.framework.ServiceRegistry.registerService(ServiceRegistry.java:97)
        at org.apache.felix.framework.Felix.registerService(Felix.java:2764)
        at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:252)
        at org.apache.felix.ipojo.IPojoFactory.start(IPojoFactory.java:591)
        at org.apache.felix.ipojo.Extender.createAbstractFactory(Extender.java:439)
        at org.apache.felix.ipojo.Extender.parse(Extender.java:264)
        at org.apache.felix.ipojo.Extender.startManagementFor(Extender.java:208)
        at org.apache.felix.ipojo.Extender.access$600(Extender.java:52)
        at org.apache.felix.ipojo.Extender$CreatorThread.run(Extender.java:682)
        at java.lang.Thread.run(Unknown Source)","JRE 1.6.0_21-b07, Windows 7, Felix Framework 2.0.5, iPOJO 1.6.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-12 10:21:13.969,,,no_permission,,,,,,,,,,,40572,,,Sun Sep 12 10:56:45 UTC 2010,,,,,,0|i0aqsv:,60615,,,,,,,,"12/Sep/10 10:21;clement.escoffier;I've tried something in the trunk. Could you check ?
If it's still don't work, could you attach a simple test case.

Thanks",12/Sep/10 10:21;clement.escoffier;Fixed in trunk,"12/Sep/10 10:38;xeraph;Problem fixed in trunk. It works. Thanks~

I guess it can be related with DynamicImport-Package usage. My hibernate wrapper (kraken-jpa) uses dynamic import and it causes restart almost all bundles.","12/Sep/10 10:56;clement.escoffier;Oh right, this may happen if you're using dynamic imports. That's why I was not able to reproduce it (I forgot this case). 

Good to know that it's fixed.

Thanks for reporting.",,,,,,,,,,,,,,,,,,,,,,,
"SecurityException ""SecurityManager already installed"" is thrown when calling Framework.init() multiple times with FRAMEWORK_SECURITY set",FELIX-2589,12473732,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,09/Sep/10 21:00,22/Sep/10 19:48,14/Mar/19 02:47,22/Sep/10 19:48,framework-3.0.2,,,,,,,,,,framework-3.0.3,,,,,,,,,,,0,,,,,,"Framework.init() can be called multiple times but we throw a SecurityException ""SecurityManager already installed"" when calling Framework.init() multiple times with the FRAMEWORK_SECURITY properties set. 

We need to move the check inside Felix.init() done one ""if"" statement so that it is only done when init is called with the framework in the installed or resolved state. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40551,,,2010-09-09 21:00:36.0,,,,,,0|i0aqqf:,60604,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle internal lib dependencies should only be added to dependent projects if they are set in the classpathEntrys,FELIX-2587,12473644,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,09/Sep/10 01:38,09/Sep/10 01:39,14/Mar/19 02:47,09/Sep/10 01:39,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40536,,,2010-09-09 01:38:19.0,,,,,,0|i0aqy7:,60639,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.eclipse.jdt.internal.core.ClasspathEntry$AssertionFailedException if source path for classpath entry includes $VARIABLE,FELIX-2586,12473566,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,08/Sep/10 12:50,08/Sep/10 12:51,14/Mar/19 02:47,08/Sep/10 12:51,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"org.eclipse.jdt.internal.core.ClasspathEntry$AssertionFailedException: Source attachment path 'SOME_VARIABLE/path/to/source.jar' for IClasspathEntry must be absolute
	at org.eclipse.jdt.core.JavaCore.newLibraryEntry(JavaCore.java:4047)
	at org.apache.felix.sigil.eclipse.model.util.JavaHelper.newProjectEntry(JavaHelper.java:454)
	at org.apache.felix.sigil.eclipse.model.util.JavaHelper.buildClassPathEntry(JavaHelper.java:425)
	at org.apache.felix.sigil.eclipse.model.util.JavaHelper.resolveClasspathEntrys(JavaHelper.java:385)
	at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.findExternalClasspath(SigilProject.java:337)
	at org.apache.felix.sigil.eclipse.ui.internal.classpath.SigilClassPathContainer.buildClassPathEntries(SigilClassPathContainer.java:95)
	at org.apache.felix.sigil.eclipse.ui.internal.classpath.SigilClassPathContainer.getClasspathEntries(SigilClassPathContainer.java:54)
	at org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(ClasspathEntry.java:1806)
	at org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(ClasspathEntry.java:1760)
	at org.eclipse.jdt.internal.core.ClasspathValidation.validate(ClasspathValidation.java:68)
	at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:51)
	at org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:110)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1800)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:4759)
	at org.apache.felix.sigil.eclipse.ui.internal.classpath.SigilClasspathContainerInitializer.requestClasspathContainerUpdate(SigilClasspathContainerInitializer.java:63)
	at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.resetClasspath(SigilProject.java:462)
	at org.apache.felix.sigil.eclipse.SigilCore.rebuild(SigilCore.java:471)
	at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.rebuildDependencies(SigilProject.java:162)
	at org.apache.felix.sigil.eclipse.job.ResolveProjectsJob.runInWorkspace(ResolveProjectsJob.java:85)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40556,,,2010-09-08 12:50:09.0,,,,,,0|i0ar2f:,60658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No FrameworkEvent.ERROR on unchecked exception in event listener,FELIX-2584,12473450,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,tsen,tsen,07/Sep/10 13:13,28/Sep/10 16:03,14/Mar/19 02:47,28/Sep/10 14:40,framework-3.0.2,,,,,,,,,,framework-3.0.4,,,,Framework,Specification compliance,,,,,,0,,,,,,"The OSGi-Spec states on page 116:

""The Framework must publish a FrameworkEvent.ERROR if a callback to an event listener generates an unchecked exception - except when the callback happens while delivering a FrameworkEvent.ERROR (to prevent an infinite loop).""

The EventDispatcher, in contrast, just logs those exceptions with no further action taken.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-28 14:40:37.376,,,no_permission,,,,,,,,,,,40499,,,Tue Sep 28 15:33:08 UTC 2010,,,,,,0|i0aq4n:,60506,,,,,,,,"28/Sep/10 14:40;rickhall;Committed a patch to trunk, please close if satisfied. Thanks.","28/Sep/10 15:26;tsen;The code changes seem fine.

I'm not sure about the logging strategy, since FrameworkEvents should be mapped by a logging service.

Thank you for the patch.","28/Sep/10 15:33;rickhall;Not sure what you mean by ""FrameworkEvents should be mapped by a logging service""... If there is no logging service or no framework listeners, then failures would go unlogged. It seems reasonable to log them. The framework has no way of knowing if there is someone out there listening to events and relaying the ERROR events to anyone, so it doesn't make sense just to swallow them.",,,,,,,,,,,,,,,,,,,,,,,,
Using alternate source directory breaks logic in WorkspaceRepository to filter out embedded dependencies,FELIX-2583,12473446,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,07/Sep/10 12:27,07/Sep/10 13:52,14/Mar/19 02:47,07/Sep/10 13:52,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,This is related to FELIX-1502,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56213,,,2010-09-07 12:27:50.0,,,,,,0|i0vxh3:,184396,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Event admin requires config admin packages,FELIX-2582,12473426,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,07/Sep/10 07:19,12/Sep/10 09:39,14/Mar/19 02:47,07/Sep/10 07:32,eventadmin-1.2.2,,,,,,,,,,eventadmin-1.2.4,,,,Event Admin,,,,,,,0,,,,,,"Although the import of the config admin packages is marked as optional, the event admin currentl requires them to start up:

java.lang.NoClassDefFoundError: org/osgi/service/cm/ManagedService
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:676)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56214,,,Tue Sep 07 07:32:32 UTC 2010,,,,,,0|i0vykn:,184574,,,,,,,,"07/Sep/10 07:32;cziegeler;Fixed in revision 993255
Optional imported classes should not be referenced from within the constructor",,,,,,,,,,,,,,,,,,,,,,,,,,
White Board Pattern onActivate called before @Validate,FELIX-2581,12473407,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,guurk,guurk,06/Sep/10 22:12,04/Feb/13 12:34,14/Mar/19 02:47,12/Sep/10 10:15,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,The method specified by the onActivate property of the @Wbp annotation is called before the component's @Validate associated method is called.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-12 10:16:14.721,,,no_permission,,,,,,,,,,,40569,,,Sun Sep 12 10:16:14 UTC 2010,,,,,,0|i0ar3j:,60663,,,,,,,,"12/Sep/10 10:16;clement.escoffier;Fixed in trunk.
The tracker was opened during the instance starting instead of waiting the validation.",,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO failed to create proxies on service which are not interface,FELIX-2580,12473385,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,06/Sep/10 13:56,04/Nov/10 08:02,14/Mar/19 02:47,08/Sep/10 16:45,,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"When an iPOJO component depends on a service specification which is not a java interface, the proxy creation failed. This case should be detected and the proxy injection disabled (and also a nice warning).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40565,,,Thu Nov 04 08:02:49 UTC 2010,,,,,,0|i0aqpb:,60599,,,,,,,,04/Nov/10 08:02;clement.escoffier;Released in iPOJO Core 1.6.6,,,,,,,,,,,,,,,,,,,,,,,,,,
deviceType in desciption of subdevices missing,FELIX-2579,12473374,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,stefano.lenzi,lkimmel,lkimmel,06/Sep/10 10:19,09/Sep/10 12:36,14/Mar/19 02:47,09/Sep/10 12:36,upnp-basedriver-0.8.0,,,,,,,,,,upnp-basedriver-1.0.0 ,,,,UPnP Subproject,,,,,,,0,,,,,,"The desciption lacks of deviceType for subdevices.
It can be pinned down to BuildDevice, where only in the description of the root device the deviceType with the highest supported version is added to the document.

A simple workaround helps by introducing a method
private static void setDeviceTypeWithHighestVersion(Device devUPnP, ServiceReference sr)
made of the code in the build of the root device
and call
setDeviceTypeWithHighestVersion(devUPnP, sr);
in buildRootDeviceNode(..) and buildDevice(..)

This workaround is done in the attached BuildDevice.java.",,,,,,,,,,,,,,,,,,,,06/Sep/10 10:26;lkimmel;BuildDevice.java;https://issues.apache.org/jira/secure/attachment/12453937/BuildDevice.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-09 12:36:20.295,,,no_permission,,,,,,,,,,,40542,,,Thu Sep 09 12:36:20 UTC 2010,,,,,,0|i0aqlr:,60583,,,,,,,,09/Sep/10 12:36;stefano.lenzi;Added the deviceType not only to rootDevice but also to its children,,,,,,,,,,,,,,,,,,,,,,,,,,
Declarative Services bundle does not start without Configuration Admin API wired,FELIX-2578,12473318,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,04/Sep/10 19:06,20/Nov/12 10:58,14/Mar/19 02:47,04/Feb/11 10:56, scr-1.6.0,,,,,,,,,,scr-1.6.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The Declarative Services bundle imports the Configuration Admin package (org.osgi.service.cm) optionally with the intent to be able to operate without the Configuration Admin Service and its API present.

In reality, the bundle does not start without the API being wired with the following exception:

org.osgi.framework.BundleException: Activator start error in bundle org.apache.felix.scr [5].
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1864)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1734)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:905)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:892)
	[...]
Caused by: java.lang.NoClassDefFoundError: org/osgi/service/cm/ConfigurationListener
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:621)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1829)
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:716)
	at org.apache.felix.framework.ModuleImpl.access$200(ModuleImpl.java:73)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1690)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)
	at java.lang.Class.getConstructor0(Class.java:2699)
	at java.lang.Class.newInstance0(Class.java:326)
	at java.lang.Class.newInstance(Class.java:308)
	at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3659)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1812)
	... 31 more
Caused by: java.lang.ClassNotFoundException: org.osgi.service.cm.ConfigurationListener
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:772)
	at org.apache.felix.framework.ModuleImpl.access$200(ModuleImpl.java:73)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1690)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
	... 46 more
",,,,,,,,,,,,,,,,,,,,09/Nov/10 13:21;alex.blewitt;patch;https://issues.apache.org/jira/secure/attachment/12459154/patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-09 13:12:21.532,,,no_permission,,,,,,,,,,,40433,,,Tue Nov 20 10:58:17 UTC 2012,,,,,,0|i035p3:,16356,,,,,,,,"09/Nov/10 13:12;alex.blewitt;I found this as well. The problem is that the Felix-SCR has Import-Package: org.osgi.service.cm;resolution:=optional, but since the Activator implements the ConfigurationListener interface, the Activator can't be resolved (and so the bundle can't be started)","09/Nov/10 13:21;alex.blewitt;Until the code is fixed, the import should be changed from optional to non-optional, so that people know it will work if it resolves.",09/Nov/10 13:23;alex.blewitt;NB this same problem appears for 1.4.0 as well.,23/Dec/10 18:29;fmeschbe;Temporarily marked the Configuration Admin API import required (as proposed) in Rev. 1052351,"04/Feb/11 10:56;fmeschbe;Refactored Configuration Admin Support in Rev. 1067145:

The ConfigurationAdmin (and Metatype) APIs are dynamically bound on demand

The bundle's own configuration is now retrieved using a ManagedService registered as using the ServiceFactory pattern.

The component configuration is refactored in that there is a support class interface between the component registry and Configuration Admin. The support class is only instantiated once the Configuration Admin service is available. Once the service is unregistered the support class is removed again. This support class not only provides initial component configuration but also configuration updates by registering a ConfigurationListener.

I have tested it in a Sling environment and so far all looks good.",20/Nov/12 10:58;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,
switching the console language bugs the jqueryUI datepicker component,FELIX-2573,12473209,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,03/Sep/10 05:56,09/Nov/10 09:46,14/Mar/19 02:47,03/Sep/10 06:00,webconsole-3.1.2,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,"We enabled switching the language of the webconsole but did nothing to ensure that JqueryUI localization will also work correctly. And it doesn't. In my experience when I switched the language, the date-picker component used to show some Chinese symbols.

So, when switching the webconsole language we must make sure to correctly select the JqueryUI locale.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-09 09:46:50.653,,,no_permission,,,,,,,,,,,56219,,,Tue Nov 09 09:46:50 UTC 2010,,,,,,0|i0vysf:,184609,,,,,,,,03/Sep/10 06:00;v_valchev;fixed in rev.992216,09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
"HTML is escaped in ModeAwareConfigurationPrinter when in ""web"" mode",FELIX-2570,12473054,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,justinedelson,justinedelson,01/Sep/10 16:27,09/Nov/10 09:46,14/Mar/19 02:47,28/Oct/10 10:25,webconsole-3.1.2,,,,,,,,,,webconsole-3.1.6,,,,Web Console,,,,,,,0,,,,,,See http://markmail.org/message/ppwjjbc6tayzvcew,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-13 10:01:27.041,,,no_permission,,,,,,,,,,,40476,,,Tue Nov 09 09:46:50 UTC 2010,,,,,,0|i0aqfb:,60554,,,,,,,,"13/Oct/10 10:01;cziegeler;The mail thread above suggests new modes, I'm not sure if this is a good idea.
What about adding a new property: felix.webconsole.configprinter.escapeOutput or something like this - a printer can set this one with value false if it wants to output html","13/Oct/10 13:35;justinedelson;> What about adding a new property: felix.webconsole.configprinter.escapeOutput or something like this - a printer can set this one with value false if it 
> wants to output html
This sounds good to me, although perhaps the property name should have ""web"" in it to indicate that the escaping should be disabled in web mode *only*.","13/Oct/10 13:42;fmeschbe;I am working on a slightly different solution: Adding the ""pseudo-mode"" ""html"" to the registered modes of the ConfigurationPrinter signals, that html output should be passed unfiltered when rendering in the web console. The pseudo-mode only has effect if the configuration printer is registered for ""web"" or ""all""  modes.","13/Oct/10 13:53;justinedelson;Is ""all"" the default? Or would that need to be specified explicitly?

In http://svn.apache.org/repos/asf/sling/trunk/bundles/jcr/webconsole/src/main/java/org/apache/sling/jcr/webconsole/internal/NodeTypeConfigurationPrinter.java (which is where this comes from), I didn't specify a mode property and instead tried (it's commented out now) to output HTML if the mode passed to printConfiguration() is ""web"".

","13/Oct/10 13:57;cziegeler;The default is ""always"" which means in all modes :)","13/Oct/10 14:03;fmeschbe;> The default is ""always""

That's what I wanted to say ;-)

> Is ""all"" the default?

Yes. If just ""html"" is specified it really means ""always"" + ""html""","13/Oct/10 14:37;cziegeler;> Yes. If just ""html"" is specified it really means ""always"" + ""html"" 
Hmm, and how can I say, just ""web"" but html? If I specify the modes ""web"" and ""html""?","13/Oct/10 14:43;fmeschbe;Like this:

  <no property> or empty property --> always; web console output filtered
  ""web""  --> web console only, filtered
  ""web, html"" --> web console only, not-filtered
  ""html"" --> always; web console output not-filtered
  ...","13/Oct/10 14:53;cziegeler;Ok, while this of course works, I'm wondering what the benefit over using a separate property is?","13/Oct/10 17:12;fmeschbe;First I didn't think of adding a property and second I started with the idea of adding a new mode like web+html, which turned out to make things more complicated than need which then resulted in the pseudo mode.

But looking at it again, you are right. It is conceptually cleaner to add a new property for this.

The modes property is called just ""modes"". So we might want to call the new property something short, too.

Proposing ""web.unescaped"" indicating that this is for the ""web"" mode and to allowing for unescaped html output. By default this property is not set thus supporting backwards compatibility by escaping the output. If the property is set to a value which can be converted to a boolean true value (e.g. Boolean.TRUE or the string ""true"") the output is not escaped.","14/Oct/10 13:44;fmeschbe;Committed the changes in Rev. 1022523.

Added a new service registration property

   WebConsoleConstants.CONFIG_PRINTER_WEB_UNESCAPED = ""felix.webconsole.configprinter.web.unescaped"";

If this property is set to true (Boolean true or String ""true"") the output of the respective Configuration Printer service is not escaped when displayed in the web display.

Of course the configuration printer has to take care to not generate HTML when printing status in non-web mode, like text or ZIP.

Does this suit your need ?","28/Oct/10 10:25;fmeschbe;Assuming this is ok, thus resolving",09/Nov/10 09:46;fmeschbe;Close after release,,,,,,,,,,,,,,
Rename Transactionnal to Transactional,FELIX-2568,12473021,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,abx,abx,01/Sep/10 10:54,04/Feb/13 12:34,14/Mar/19 02:47,08/Sep/10 16:24,,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,Transactional is the correct spelling,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-08 16:25:18.786,,,no_permission,,,,,,,,,,,40563,,,Wed Sep 08 16:25:18 UTC 2010,,,,,,0|i0aq73:,60517,,,,,,,,"08/Sep/10 16:25;clement.escoffier;Fixed in trunk !
Thanks for reporting.",,,,,,,,,,,,,,,,,,,,,,,,,,
Properties set as required instead of optional in  the component type descriptions,FELIX-2561,12472777,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,28/Aug/10 13:35,03/Sep/10 11:40,14/Mar/19 02:47,28/Aug/10 14:57,,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"The component type description lists component types properties. However, optional properties without default values are set as 'REQUIRED' instead of optional.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56227,,,Fri Sep 03 11:40:07 UTC 2010,,,,,,0|i0vyiv:,184566,,,,,,,,28/Aug/10 14:57;clement.escoffier;Fixed in the trunk.,03/Sep/10 11:40;clement.escoffier;Included in the 1.6.4 releases,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigurationEvent delivery not building the listener list correctly,FELIX-2557,12472486,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,25/Aug/10 15:13,13/Sep/10 10:20,14/Mar/19 02:47,26/Aug/10 09:28, configadmin-1.2.4,,,,,,,,,, configadmin-1.2.8,,,,Configuration Admin,,,,,,,0,,,,,,"According to the Configuration Admin Specification 1.3, Section 104.8 Configuration Events, the configuration events must be delivered ""the same as described in Delivering Events on
page 116 of the Core specification.""

This means, that :
  - the list of interested ConfigurationListener services must be built at event creation time
  - at event delivery time, all listeners must be called if their providing bundle is still active

It is important to note, that listeners not registered at event creation time but registered at event delivery time must _not_ be called. On the other hand listeners registered at event creation time but unregistered at event delivery time must still be called (unless their providing bundle has been stopped).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56230,,,Mon Sep 13 10:20:18 UTC 2010,,,,,,0|i0vxgn:,184394,,,,,,,,"25/Aug/10 18:16;fmeschbe;Refactored ConfigurationEvent dispatching in Rev 989277:

  * The list of ConfigurationListener services to dispatch the event to is created synchronously with the actual Configuration.update/delete call
  * Event delivery is scheduled synchronously

Thus ConfigurationEvents are scheduled immediately before the configuration update/delete tasks.",26/Aug/10 08:48;fmeschbe;Reopen to further refine configuration event dispatching,"26/Aug/10 08:49;fmeschbe;Further refined configuraiton event dispatching in Rev. 989533: Configuration events and configuration updates are now dispatched in two separate threads (grouped in a daemon ThreadGroup). This allows for quick event delivery to listeners not being ""blocked"" by configuration updates.","26/Aug/10 09:28;fmeschbe;This refactoring now works correclty, CT tests pass as well as our own integration tests.",13/Sep/10 10:20;fmeschbe;Closing issues after Configuration Admin 1.2.8 release,,,,,,,,,,,,,,,,,,,,,,
FileInstall fails to update fragments as it tries to stop them,FELIX-2556,12472484,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,sahoo,sahoo,sahoo,25/Aug/10 14:40,17/Mar/15 07:03,14/Mar/19 02:47,14/Oct/10 20:10,fileinstall-3.0.2,,,,,,,,,,fileinstall-3.1.0,,,,File Install,,,,,,,0,,,,,,"org.osgi.framework.BundleException: Fragment bundles can not be stopped: webapp-fragment [259]|#]

	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2194)|#]

	at org.apache.felix.framework.BundleImpl.stop(BundleImpl.java:941)|#]

	at org.apache.felix.fileinstall.internal.DirectoryWatcher.stopTransient(DirectoryWatcher.java:1091)|#]

	at org.apache.felix.fileinstall.internal.DirectoryWatcher.update(DirectoryWatcher.java:1035)|#]

	at org.apache.felix.fileinstall.internal.DirectoryWatcher.update(DirectoryWatcher.java:826)|#]

	at org.apache.felix.fileinstall.internal.DirectoryWatcher.process(DirectoryWatcher.java:422)|#]

	at org.apache.felix.fileinstall.internal.DirectoryWatcher.run(DirectoryWatcher.java:241)|#]
",,,,,,,,,,,,,,,,,,,,25/Aug/10 15:03;sahoo;patch;https://issues.apache.org/jira/secure/attachment/12453047/patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40535,,,Thu Oct 14 20:10:24 UTC 2010,,,,,,0|i0aqvb:,60626,,,,,,,,25/Aug/10 15:03;sahoo;A simple patch that fixes the issue.,"14/Oct/10 20:10;sahoo;Committed the above patch as revision 1022686.
",,,,,,,,,,,,,,,,,,,,,,,,,
Resolver should use case sensitive indexing for capabilities,FELIX-2548,12472003,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,19/Aug/10 13:55,15/Sep/10 20:18,14/Mar/19 02:47,19/Aug/10 16:24,framework-3.0.2,,,,,,,,,,framework-3.0.3,,,,Framework,,,,,,,0,,,,,,"The resolver uses a CapabilitySet to index package and bundle capabilities. The service registry also uses a CapabilitySet to index services. Since the service registry requires case insensitive indexing, the CapabilitySet was changed to index in a case insensitive way, which ulimately means that the resolver does too as a result of the change. This doesn't really make sense. CapabilitySet should be modified to take a parameter to indicate whether key comparison is case sensitive or not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56235,,,Thu Aug 19 16:24:39 UTC 2010,,,,,,0|i1atmf:,271265,,,,,,,,19/Aug/10 16:24;rickhall;Committed a patch. Passes CT and internal tests.,,,,,,,,,,,,,,,,,,,,,,,,,,
Annotations on methods parameters are not moved on public methods after manipulation,FELIX-2542,12471674,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,nicolas.dumont,nicolas.dumont,16/Aug/10 09:53,03/Sep/10 11:40,14/Mar/19 02:47,22/Aug/10 14:13,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"The iPojo byte code manipulation replace real public method with private one, and annotation on methods are moved to the new public methods. But this behavior is not used for parameters annotations.
For exemple :
public class MyClass {
  @MyAnnotation
  public void myMethod(@MyParameterAnnotation int param) {
     //my code here
 }
}

is transformed into:
public class MyClass {
  @MyAnnotation
  public void myMethod(int param) {
     // iPojo code here
 }
  private void _myMethod(@MyParameterAnnotation int param) {
   // my code here
 }

It should have been transformed into:
public class MyClass {
  @MyAnnotation
  public void myMethod(@MyParameterAnnotation int param) {
     // iPojo code here
 }
  private void _myMethod(int param) {
   // my code here
 }","Win xp, java 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-22 14:13:46.159,,,no_permission,,,,,,,,,,,56240,,,Fri Sep 03 11:40:01 UTC 2010,,,,,,0|i1atmv:,271267,,,,,,,,"22/Aug/10 14:13;clement.escoffier;Fixed in trunk.

Parameter Annotations were not moved to the interceptor method during the annotation processing. This is now fixed.
As for method annotations, only annotation visible at runtime are moved, others are ignored.",03/Sep/10 11:40;clement.escoffier;Included in the 1.6.4 releases,,,,,,,,,,,,,,,,,,,,,,,,,
Cyrillic characters are not displayed properly.,FELIX-2535,12471260,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,11/Aug/10 08:15,16/Aug/10 12:13,14/Mar/19 02:47,11/Aug/10 08:25,webconsole-3.1.0,,,,,,,,,,webconsole-3.1.2,,,,Web Console,,,,,,,0,,,,,,"This issue has been posted in ProSyst JIRA:

Cyrillic characters are not displayed properly. Because the <meta http-equiv=""Content-Type"" content=""text/html; utf-8"" /> is invalid it should be ... content=""text/html;charset=utf-8"" /> also since it is declared XHTML 1.0 Strict the document MUST start with <?xml version=""1.0"" encoding=""utf-8"" ?>.

---
This might be a problem of configuration or browser bug but still a small line can workaround the problem, so I'll add it to the main_header.html template.",gentoo linux amd64 firefox 3.6 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-16 12:13:34.584,,,no_permission,,,,,,,,,,,56247,,,Mon Aug 16 12:13:34 UTC 2010,,,,,,0|i0vxin:,184403,,,,,,,,16/Aug/10 12:13;fmeschbe;Apache Felix Web Console 3.1.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing documentation for 'felix.fileinstall.noInitialDelay' configuration property,FELIX-2531,12471116,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,marrs,stijndewitt,stijndewitt,09/Aug/10 14:28,17/Mar/15 07:03,14/Mar/19 02:47,09/Aug/10 14:42,fileinstall-3.0.0,,,,,,,,,,fileinstall-3.1.0,,,,Documentation,,,,,,,0,,,,,,"File Install accepts a configuration property 'felix.fileinstall.noInitialDelay' that influences whether File Install should have no initial delay before starting bundles. If this property is set to false (default), File Install will, when started, first wait for the amount of milliseconds specified in 'felix.fileinstall.poll' (the poll interval) before starting to install bundles. By setting this property to true, you indicate that you do not want File Install to wait, but instead want it to start installing bundles immediately.

This property is not documented in the documentation for File Install, published at 
http://felix.apache.org/site/apache-felix-file-install.html

The property can be found in the File Install source, specifically in file 
\felix\fileinstall\src\main\java\org\apache\felix\fileinstall\DirectoryWatcher.java

I asked on the mailing list whether this property was not documented on purpose and there they indicated taht I should create an issue for it.

",,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-09 14:42:55.053,,,no_permission,,,,,,,,,,,56251,,,Mon Aug 09 14:42:55 UTC 2010,,,,,,0|i07g5r:,41384,,,,,,,,09/Aug/10 14:42;marrs;Added the property to the documentation. The change to the wiki should propagate to the site soonish.,,,,,,,,,,,,,,,,,,,,,,,,,,
Component must be reactivated even if modified method is declared,FELIX-2523,12470889,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,05/Aug/10 10:01,03/May/14 01:09,14/Mar/19 02:47,05/Aug/10 13:24, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"According to Section 112.7.1, Modified Configuration (OSGi Compendium R4.2), a component must be deactivated if it uses a configuration which has been deleted. This happens regardless of whether a modified method is declared and available to be called or not.

Our current implementation does not care whether a configuration is just updated or actually deleted when trying to call the modified method. This violates the spec in the case of configuration deletion.",,,,,,,,,,,,,,,FELIX-4022,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56259,,,Mon Aug 16 12:11:59 UTC 2010,,,,,,0|i0w1pj:,185082,,,,,,,,"05/Aug/10 13:24;fmeschbe;In Rev. 982606 checking for configuration deletion before trying to call the modified method. Instead of calling the modified method (if declared), the component is reactivated.",05/Aug/10 14:27;fmeschbe;Fixed test case in Rev. 982640 for component reactivation after configuration deletion,16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,
Method call failures not always handled correctly,FELIX-2521,12470884,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,05/Aug/10 09:31,16/Aug/10 12:11,14/Mar/19 02:47,05/Aug/10 13:22, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"Our current Declarative Services implementation abstracts calling declared methods by the BaseMethod.invoke method. This method returns a boolean which is true, iff the method was declared and present and calling it succeeded. False is returned otherwise.

This is problematic in some circumstances, where call failure is ignored but absence of the method is interesting. This is namely the case for the modified method which must be called if delclared and present but success or failure should just be logged, but further be ignored. If the method is not present, the old configuration update way of deactivating and reactivating the method must be chosen.

The current implementation will reactivate the component also when the modified method call failed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56261,,,Mon Aug 16 12:11:59 UTC 2010,,,,,,0|i0vxi7:,184401,,,,,,,,"05/Aug/10 13:22;fmeschbe;Fixed in Rev. 982605. Support separation between ""no method to be called"" and ""method execution failure"" situations to handle according specification:
  - activate method failure is logged and must cause activation failure
  - deactivate method failure is just logged
  - modified method failure is just logged
  - bind method failure is just logged
  - unbind method failure is just logged

Callers of the BaseMethod.invoke method now indicates, whether a failure executing the method should be an invocation failure or just be logged but then assumed to be ok.",16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
Bind method selection must not expect the component's bundle to import the service interface type,FELIX-2520,12470883,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,05/Aug/10 08:40,16/Aug/10 12:11,14/Mar/19 02:47,05/Aug/10 13:31, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"Our Declarative Services implementation tries to load the type of the bound service through the class loader of the component. This has the side-effect of expecting the component's bundle to actually import (and wire to) the package providing the interface.

On the other hand the Declarative Services specification states, that a bind/unbind method is acceptable if ""the type of the argument is assignable from the type specified by the reference's interface attribute"" (OSGi Compendium R4.2, Section 112.3.1, Accessing Services). This does not imply that the component must know the service type but a supertype of the service type.

For example the CT contains a test where the component's bind method expects an Object type parameter (which is certainly assignable from any type) but the component's bundle does not import the actual interface type. Thus with the current implementation the CT test fails.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56262,,,Mon Aug 16 12:11:58 UTC 2010,,,,,,0|i0vxj3:,184405,,,,,,,,"05/Aug/10 13:31;fmeschbe;Fixed in Rev. 982608. To find a matching bind/unbind method taking a service object, the reference type is now searched as follows:

   (1) try to load through the component class loader
   (2) try to find an exported package from PackageAdmin service
   (3) use Object class

The first check may fail if the component's bundle does not import the service interface. Such an import is not required by the specification and is not required because a matching method must have an argument to which the service reference type can be assigned. This may be a supertype of the actual type which may be known to the component's bundle.

The second check allows for supporting a super type of the reference type used by the component's bind/unbind method. This may fail if the reference type is not actually exported by the service bundle.

The third case works as a common fallback to components which don't care for the actual service type but want to know when a service is available or not.",16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
Declarative Services 1.0 descriptors must fail to validate if 1.1 attributes are declared,FELIX-2519,12470882,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,05/Aug/10 08:30,16/Aug/10 12:11,14/Mar/19 02:47,05/Aug/10 13:03, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"The Declarative Services specification 1.1 defines a number of new attributes for the component element: activate, deactivate, modified, and configuration-policy. These attributes are not allowed for 1.0 descriptors and validation should thus fail.

Currently our implementation just logs the declaration of these attributes with the LogService but does not fail validation. This should be changed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56263,,,Mon Aug 16 12:11:58 UTC 2010,,,,,,0|i0vxjr:,184408,,,,,,,,"05/Aug/10 13:03;fmeschbe;Fixed in Rev. 982591 by thrown a ComponentException if any of the activate, deactivate, modified, or configuration-policy attributes is declared in a DS 1.0 descriptor.",16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
Modified method without arguments not supported,FELIX-2518,12470880,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,05/Aug/10 08:28,16/Aug/10 12:11,14/Mar/19 02:47,05/Aug/10 13:06, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"The Declarative Services specification 1.1 allows a component to specify a method to be called when the configuration has been updated using the ""modified"" attribute of the component element. This method is defined to take the same arguments as any activate method of a component. Namely this includes supporting methods taking no arguments at all.

Currently, our implementation does not support modified method without arguments, which violates the spec.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56264,,,Mon Aug 16 12:11:58 UTC 2010,,,,,,0|i0vxjb:,184406,,,,,,,,05/Aug/10 13:06;fmeschbe;Fixed in Rev. 982598.,16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
sigil.properties -contents entries are mangled if saved from ui,FELIX-2517,12470874,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,05/Aug/10 07:28,05/Aug/10 07:36,14/Mar/19 02:47,05/Aug/10 07:29,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"A file that is opened containing:

-contents: \
	com.foo, \
	com.bar, \
	com.baz, \

Will be saved as:

-contents: \
        com.baz",eclipse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56265,,,Thu Aug 05 07:36:42 UTC 2010,,,,,,0|i0vzw7:,184788,,,,,,,,05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,,
java.util.zip.ZipException during synchronize due to underlying FileNotFound,FELIX-2515,12470716,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,03/Aug/10 11:33,05/Aug/10 07:36,14/Mar/19 02:47,03/Aug/10 16:38,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"WARNING: Failed to synchronize SigilBundle[biz.aQute.bndlib:0.0.312]
java.util.zip.ZipException: error in opening zip file
	at java.util.zip.ZipFile.open(Native Method)
	at java.util.zip.ZipFile.<init>(ZipFile.java:114)
	at java.util.jar.JarFile.<init>(JarFile.java:135)
	at java.util.jar.JarFile.<init>(JarFile.java:99)
	at org.apache.felix.sigil.core.internal.model.eclipse.SigilBundle.updateManifest(SigilBundle.java:119)
	at org.apache.felix.sigil.core.internal.model.eclipse.SigilBundle.synchronize(SigilBundle.java:112)
	at org.apache.felix.sigil.core.repository.BundleResolver$Resolution.synchronize(BundleResolver.java:337)
	at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.processRequirementsChanges(SigilProject.java:191)
	at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.rebuildDependencies(SigilProject.java:156)
	at org.apache.felix.sigil.eclipse.job.ResolveProjectsJob.runInWorkspace(ResolveProjectsJob.java:84)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56267,,,Thu Aug 05 07:36:41 UTC 2010,,,,,,0|i0vxlj:,184416,,,,,,,,03/Aug/10 16:38;davemssavage;Initial patch supplied - will open secondary issue as resources that are no longer present in a repository should not be proposed for future resolutions,05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,
Configuration not provided to components if Configuration Admin is not active while setting up components,FELIX-2510,12470655,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,02/Aug/10 15:57,16/Aug/10 12:11,14/Mar/19 02:47,03/Aug/10 07:12,scr-1.2.0, scr-1.4.0,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"In earlier versions of the Declarative Services implementation, configuration for the components has been provided by the Declarative Services bundle registering ManagedService[Factory] services for each component registered. This ensured configuration to be provided by Configuration Admin service to the components once Configuration Admin service is active, configuration is present and a Component is here to take it.

The drawback is, that this mechanism operates completely asynchronous (potentially causing components to be cycled during fire-up). Thus Configuration is now provided to the Components by the Declarative Services implementation by asking the Configuration Admin service for configuration on behalf of the components. Configuration updates are forwarded by the DS registering a ConfigurationListener.

The problem now is, if Declarative Services is started (and has set up Components) before the Configuration Admin service is present, configuration will never be provided to components.

To fix this, Declarative Services should register for service events to hear when Configuration Admin becomes present to be able to forward any configuration to the components.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56272,,,Mon Aug 16 12:11:57 UTC 2010,,,,,,0|i0vxkn:,184412,,,,,,,,03/Aug/10 07:04;fmeschbe;Problem already present in SCR 1.2.0 which was the first release not using ManagedService[Factory] any more.,"03/Aug/10 07:12;fmeschbe;In Rev. 981761: Ensure configuration is provided to components even if the Configuration Admin service is registered after Declarative Services has started. To this avail, a ServiceListener is registered, which handled the Configuration Admin service registration by calling the configurationEvent method for existing configurations.",16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,
Web Console does not show all components,FELIX-2508,12470635,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,02/Aug/10 10:52,16/Aug/10 12:13,14/Mar/19 02:47,03/Aug/10 10:25,webconsole-3.1.0,,,,,,,,,,webconsole-3.1.2,,,,Web Console,,,,,,,0,,,,,,"Multiple component instances may have same component name thus causing only one of these to actually be listed by the Components display.

Multiple component instances may exist for Compononent Factory components created with the newInstance method or for regular componnents created due to multiple factory configurations.

Only one is listed, because all components are gathered in a map first to be able to order them by component name before rendering. This causes duplicate components to be removed, though. To still have order-by-name another mechanism for sorting must be implemented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56274,,,Mon Aug 16 12:13:32 UTC 2010,,,,,,0|i0vxk7:,184410,,,,,,,,02/Aug/10 12:32;fmeschbe;Replaced TreeMap used for sorting by a Comparator implementation used together with Arrays.sort in Rev. 981484.,03/Aug/10 10:25;fmeschbe;This workds properly and all components are now listed,16/Aug/10 12:13;fmeschbe;Apache Felix Web Console 3.1.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,
"Moving the activator to the default package """" results in an activator name "".FooActivator"" instead of ""FooActivator""",FELIX-2503,12470618,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,davemssavage,davemssavage,davemssavage,02/Aug/10 07:56,05/Aug/10 07:36,14/Mar/19 02:47,02/Aug/10 07:58,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,,eclipse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56279,,,Thu Aug 05 07:36:41 UTC 2010,,,,,,0|i1at5j:,271189,,,,,,,,05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,,
scr plugin: using src annotations causes NoClassDefFoundError and other errors,FELIX-2492,12470427,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,mduerig,mduerig,29/Jul/10 09:18,07/May/13 19:52,14/Mar/19 02:47,07/Jun/11 10:03, maven-scr-plugin-1.4.4,,,,,,,,,,maven-scr-plugin-1.7.2,scr ant task 1.1.2,scr generator 1.1.2,,SCR Tooling,,,,,,,0,,,,,,"Using comment tags and having a dependency on slf4j-api causes the scr plugin to throw a NoClassDefFoundError:

java.lang.NoClassDefFoundError: org/slf4j/impl/StaticLoggerBinder
	at org.slf4j.LoggerFactory.<clinit>(LoggerFactory.java:60)
	at com.day.crx.spi.sharepoint.resource.SharepointResourceProvider.<clinit>(SharepointResourceProvider.java:60)
	at sun.misc.Unsafe.ensureClassInitialized(Native Method)
	at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(UnsafeFieldAccessorFactory.java:25)
	at sun.reflect.ReflectionFactory.newFieldAccessor(ReflectionFactory.java:122)
	at java.lang.reflect.Field.acquireFieldAccessor(Field.java:918)
	at java.lang.reflect.Field.getFieldAccessor(Field.java:899)
	at java.lang.reflect.Field.get(Field.java:358)
	at org.apache.felix.scrplugin.tags.ClassUtil.getInitializationExpression(ClassUtil.java:41)
	at org.apache.felix.scrplugin.tags.qdox.QDoxJavaField.getInitializationExpression(QDoxJavaField.java:44)
	at org.apache.felix.scrplugin.helper.PropertyHandler.getPropertyName(PropertyHandler.java:239)

A workaround is to add a 'dummy' dependency to i.e. slf4j-simple. But then

[WARNING] Unused declared dependencies found:
[WARNING]    org.slf4j:slf4j-simple:jar:1.5.0:provided

Furthermore when the 'dummy' dependency has the wrong version, the scr plugin might throw other errors:

java.lang.NoSuchFieldError: name
	at org.slf4j.impl.Log4jLoggerAdapter.<init>(Log4jLoggerAdapter.java:75)
	at org.slf4j.impl.Log4jLoggerFactory.getLogger(Log4jLoggerFactory.java:75)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:103)
	at com.day.crx.spi.sharepoint.resource.SharepointResourceProvider.<clinit>(SharepointResourceProvider.java:60)
	at sun.misc.Unsafe.ensureClassInitialized(Native Method)
	at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(UnsafeFieldAccessorFactory.java:25)
	at sun.reflect.ReflectionFactory.newFieldAccessor(ReflectionFactory.java:122)
	at java.lang.reflect.Field.acquireFieldAccessor(Field.java:918)
	at java.lang.reflect.Field.getFieldAccessor(Field.java:899)
	at java.lang.reflect.Field.get(Field.java:358)
	at org.apache.felix.scrplugin.tags.ClassUtil.getInitializationExpression(ClassUtil.java:41)
	at org.apache.felix.scrplugin.tags.qdox.QDoxJavaField.getInitializationExpression(QDoxJavaField.java:44)
	at org.apache.felix.scrplugin.helper.PropertyHandler.getPropertyName(PropertyHandler.java:238)

I think such errors should be handled more gracefully indicating the source of the problem. Also it should not be necessary to have a 'dummy' dependencies. This was not the case up to version 1.4.1. 
If it is absolutely necessary to include such dummy dependencies, the plugin should state so in its error message. Also the slf4j case is so common that it might be worth to considering a specific solution/workaround for this in the plugin. This is still much better than forcing all clients to analyze the problem from the stacktrace and then implement workarounds.  ",,,,,,,,,,,,,FELIX-1726,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-29 10:30:13.21,,,no_permission,,,,,,,,,,,56290,,,Tue May 07 19:52:40 UTC 2013,,,,,,0|i1at7b:,271197,,,,,,,,29/Jul/10 10:30;sseifert@pro-vision.de;we've already discusses this some time ago in FELIX-1726 - at this time it was decided that this has to be solved with project-specific dependencies.,"30/Jul/10 11:07;mduerig;That's one part of the issue. But I think the scr plugin should say so. That is the plugin should at least print a message like ""unresolved dependency.... See FELIX-2492"". In the case of slf4j which seems very common to me the plugin could even suggest to add a dependency to slf4j-simple. 

Simply failing with a stack trace and relying on the each and every user digging into the problem seems not right to me. 

","30/Jul/10 11:32;fmeschbe;> Simply failing with a stack trace and relying on the each and every user digging into the problem seems not right to me.

YMMV certainly here, particularly as we are talking of ""developers"" not mere users in the sense of ""my mother"" ;-)

But yes, the message could be nicer indicating similarly to FELIX-1726, that a project dependency is missing.

Whether we should specially highlight SLF4J or not: I certainly don't think so. It may be your case, that SLF4J is a primary candidate. Other users have other candidates. So we may probably not generalize, event though SLF4J is certainly one of the few libraries having such an issue.","30/Jul/10 11:42;mduerig;> as we are talking of ""developers"" 

That's the users I had in mind. It still takes them time to analyze the issue and research a workaround. Particularly since the issue is counter intuitive: the dependency plugin will report your dependencies as fine but the src plugin will fail because of a missing dependency which the dependency plugin would report as unreferenced. 

I still think printing an explanatory message pointing to this bug would cut the time used to analyze the problem and come up with a workaround. 
","01/Aug/10 09:08;fmeschbe;Comes to mind: Another, even better option than adding a compile-scope dependency on slf4j-simple is to not use constant fields referring to SLF4J loggers. There are at least two good reasons for this:

  (1) Having a complie-scope dependency on slf4-simple is bad, because the goal of slf4j is to properly separate the compile time issues (cared for by the developer) from the run-time issues (cared for by the deployer and/or system administrator). So, at least, you should mark your slf4j-simple compile time dependency as optional so as to not transitively forward this dependency.

  (2) Having constant references to complex objects makes the work of the garbage collector unnecessarily hard: The referred-to object can only be collected once the class containing the static final reference is collected ....

So, your best fix would probably be to change your ""static final"" reference to just a ""final"" reference. And everything would be fine.","01/Aug/10 09:15;cziegeler;I would suggest people to use the real annotations instead of the javadoc tags anyway :) I haven't encounted such problems with annotations yet and I would like to get more feedback about the annotations anyway.
So I tend to agree with Felix to ""just"" have a nicer error message","02/Aug/10 08:48;mduerig;I agree on everything here: should use annotations instead of comment tags, should use final instead of final static, should mark slf4j-simple as optional and so on. The best way to advertise all this is to put this info onto the Wiki page of the scr plugin improve the error reporting of the plugin in the case of the missing dependency directing the user to the relevant information (i.e. Wiki, this bug).

","07/Jun/11 09:55;cziegeler;You mean something like this?

http://felix.apache.org/site/apache-felix-scr-plugin-faq.html#ApacheFelixSCRPluginFAQ-NoClassDefFoundErrorduringbuild",07/Jun/11 09:59;mduerig;Yes.,"07/Jun/11 10:03;cziegeler;Changed the exception message in revision 1132934

Setting this to fixed now as we have docs and a better error msgs","07/May/13 16:51;alexander.klimetschek;Got the same issue. Please note that I am using Java annotations. I could only fix it with the workaround mentioned above, adding ""slf4j-simple"" with scope=provided, which is not needed. scope=test did not work.

AFAICS, the problem is the nasty slf4j binding trick that in org.slf4j.LoggerFactory the import of ""org.slf4j.impl.StaticLoggerBinder"" is unresolved in the api jar itself.

Some possible solutions:
* the scr plugin could just output a warning here in case this is a 3rd party jar (and not local source code)
* that might break the desired validation of export/import/private package declarations or generation; so maybe one can configure classes to ignore in the pom (in this case ""org.slf4j.LoggerFactory"")","07/May/13 17:20;cziegeler;[~alexander.klimetschek] Please note that this issue is closed; if you still have a problem with the latest released plugin (1.12.0), please open a new issue. Thanks","07/May/13 19:41;alexander.klimetschek;Oh, sorry, missed that completely!

BTW, I found it is only fixed starting with maven-scr-plugin 1.7.4, not 1.7.2 as mentioned in the fix version.","07/May/13 19:52;alexander.klimetschek;Scratch that - it was ONLY fixed with 1.7.4, starting from 1.8.0 until now (1.12.0), the issue happens again. Created FELIX-4056.",,,,,,,,,,,,,
NPE in JavaHelper,FELIX-2488,12470409,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,29/Jul/10 06:40,05/Aug/10 07:36,14/Mar/19 02:47,29/Jul/10 07:35,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"java.lang.NullPointerException
at org.apache.felix.sigil.eclipse.model.util.JavaHelper.newBundleEntry(JavaHelper.java:485)
at org.apache.felix.sigil.eclipse.model.util.JavaHelper.buildClassPathEntry(JavaHelper.java:423)
at org.apache.felix.sigil.eclipse.model.util.JavaHelper.resolveClasspathEntrys(JavaHelper.java:388)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.findExternalClasspath(SigilProject.java:370)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.buildClassPathEntries(SigilClassPathContainer.java:102)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.getClasspathEntries(SigilClassPathContainer.java:58)
at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2584)
at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2679)
at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1866)
at org.eclipse.jdt.internal.core.DeltaProcessor.createExternalArchiveDelta(DeltaProcessor.java:839)
at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:1905)
at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:470)
at org.eclipse.core.internal.events.NotificationManager$2.run(NotificationManager.java:291)
at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:285)
at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:149)
at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:313)
at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1022)
at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:153)
at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:238)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56294,,,Thu Aug 05 07:36:40 UTC 2010,,,,,,0|i0vxlr:,184417,,,,,,,,05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to compile iPOJO 1.6.0 project with NPE (related to annotation computation),FELIX-2487,12470368,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,xeraph,xeraph,28/Jul/10 18:15,31/Jul/10 08:55,14/Mar/19 02:47,31/Jul/10 08:22,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,1,,,,,,"When I add any custom annotation(s) above my POJO class, and if there is no iPOJO @Component declaration, compile failed with following messages:

java.lang.NullPointerException
	at org.apache.felix.ipojo.manipulation.annotations.MetadataCollector.visitEnd(MetadataCollector.java:215)
	at org.objectweb.asm.ClassReader.accept(Unknown Source)
	at org.objectweb.asm.ClassReader.accept(Unknown Source)
	at org.apache.felix.ipojo.manipulator.Pojoization.computeAnnotations(Pojoization.java:294)
	at org.apache.felix.ipojo.manipulator.Pojoization.manipulateComponents(Pojoization.java:484)
	at org.apache.felix.ipojo.manipulator.Pojoization.manipulateJarFile(Pojoization.java:335)
	at org.apache.felix.ipojo.manipulator.Pojoization.pojoization(Pojoization.java:194)
	at org.apache.felix.ipojo.plugin.ManipulatorMojo.execute(ManipulatorMojo.java:199)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:579)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:498)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmentForProject(DefaultLifecycleExecutor.java:265)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:191)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:149)
	at org.apache.maven.DefaultMaven.execute_aroundBody0(DefaultMaven.java:223)
	at org.apache.maven.DefaultMaven.execute_aroundBody1$advice(DefaultMaven.java:304)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:1)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody2(MavenEmbedder.java:904)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody3$advice(MavenEmbedder.java:304)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:1)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:176)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:31)

If I uses @Component annotation instead of metadata.xml configuration, compile succeeded.","JRE 1.6, maven-bundle-plugin 2.1.0, maven-ipojo-plugin 1.6.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-29 07:15:28.59,,,no_permission,,,,,,,,,,,56295,,,Sat Jul 31 08:55:31 UTC 2010,,,,,,0|i0vxlz:,184418,,,,,,,,"29/Jul/10 07:15;sauthieg;Do you describe your component using XML *and* annotations ? I mean a part in the metadata.xml and some annotations in the code ?

If so, you have to choose where you describe your component: either in the metadata.xml or using annotations, but not both.
The iPOJO manipulation process does not merge XML metadata and annotations for a given component type.

In any case, I agree that the NPE is not really nice ;)","30/Jul/10 18:26;clement.escoffier;I agree, this NPE is really not nice and does not provide a useful information about the issue. I will fix that ASAP.","31/Jul/10 04:21;xeraph;No, I didn't used IPOJO annotation, I used my own annotation and described component configuration in iPOJO metadata.xml. If you want I will attach test code in 1 hour.. My code base (see http://krakenapps.org) is based on iPOJO 1.4.0, and I want to migrate to 1.6.0, but when I changed iPOJO version in pom.xml, compile failure has occurred.","31/Jul/10 07:37;clement.escoffier;I've reproduced the error in a simple test case.
The issue is that your annotations match the 'external handler annotations pattern' (i.e. contains either 'ipojo' or 'handler' in the annotation qualified name). I will fix it by just ignoring the class when @Component is not here (I just display a warning)","31/Jul/10 08:01;xeraph;Oh, yes.. one of my method annotation was 'org.krakenapps.jpa.handler.Transactional'. Thank you for your response!","31/Jul/10 08:22;clement.escoffier;Fixed in trunk
If @Component is missing, a warning message is displayed but the annotation processing ignores the class.",31/Jul/10 08:55;xeraph;This patch resolved issue. I really appreciate it.,,,,,,,,,,,,,,,,,,,,
ClassLoaderJavaClassDescription.isA does not work under certain circumstances,FELIX-2486,12470256,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,27/Jul/10 13:45,09/Nov/10 09:43,14/Mar/19 02:47,27/Jul/10 13:56, maven-scr-plugin-1.4.4,,,,,,,,,, maven-scr-plugin-1.6.0,,,,SCR Tooling,,,,,,,0,,,,,,"Consider two bundles B1 and B2. B1 provides an abstract component AC1. This abstract component declares itself to implement Service S by means of
   @scr.service interface=""S""
No AC1 does not itself implement S but it extends a baseclass which in turn implements S.

This bundle B1 builds perfectly and the SCR plugin generates the descriptor for the abstract component.

Now, B2 provides a concrete component CC2 extending AC1. B2 fails to build while trying to generate the SCR descriptor.

The reason for this is, that while generating descriptor for CC2, the exsting service descriptor for AC1 is validated, particularly the service element. This element is checked in the context of the abstract AC1 component class internally represented by a ClassLoaderJavaClassDescriptor instance. To verify the interface, the isA(String) method is called.

This is where the problem occurrs: The ClassLoaderJavaClassDescriptor.isA method only considers the interfaces directly implemented by the class but not any interfaces implemented by the parent class. Moreover, this implementation does not allow for classes (as opposed to interfaces) to be used as service interface name.

The fix is probably to use Class.isAssignableFrom to implement the isA method.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56296,,,Tue Nov 09 09:43:10 UTC 2010,,,,,,0|i0vysn:,184610,,,,,,,,"27/Jul/10 13:53;fmeschbe;A concrete situation from the Sling project:

   Bundle B1 has:

       /**
        * @scr.component metatype=""no"" abstract=""yes""
        * @scr.service interface=""javax.servlet.Servlet""
        */
       public abstract class AbstractComponent extends HttpServlet {}

   Bundle B2 has:

       /**
        * @scr.component metatype=""no""
        */
       public class Component extends AbstractComponent {}

While building the SCR descriptors for B2 the AbstractComponent fails to validate the exported interface.",27/Jul/10 13:56;fmeschbe;Fixed by implementing ClassLoaderJavaClassDescriptor.isA(String) using Class.isAssignableFrom(Class) in Rev. 979703.,09/Nov/10 09:43;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,
Required bundles not correctly re-exporting their substitutable exports,FELIX-2479,12469738,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickmcguire,rickmcguire,20/Jul/10 17:42,18/Aug/10 20:02,14/Mar/19 02:47,22/Jul/10 14:11,framework-3.0.1,,,,,,,,,,framework-3.0.2,,,,Framework,,,,,,,0,,,,,,"This is sort of a complicated scenario, but I've been able to create a relatively simple test to recreate this.  See the attachment for the project.  Note that to get this to run using the 3.0.1 Felix framework version, I needed to create a private build of the pax exam trunk with a dependency change to also pick up the latest pax runner snapshot version.  

This problem showed up for us with the 3.0.1 release, but also appears to be in the 3.1.0-SNAPSHOT release.  The 2.0.5 release does not have the problem and equinox also appears to be handling this correctly.  In this scenario, we have a bundle with two embedded jar files that also has a Dynamic-Import: * header and a Require-Bundle header for another bundle.  One of the embedded jars uses the same package name as packages defined in the bundle referenced by the Require-Bundle, creating a split package situation.  The test is fairly simple, consisting of just a couple of lines: 

        // if this line is commented out, then the second loadClass() call will succeed.  If 
        // this load occurs first, then a NoClassDefFound error results on the load for TestClass. 
        Class cls1 = bundle1.loadClass(""org.apache.geronimo.harness.EETestDummy"");
        
        Class cls = bundle1.loadClass(""org.apache.geronimo.embedded.TestClass"");
        // this will force the fields classes to be resolved. 
        cls.getDeclaredFields(); 

When this is run, the cls.getDeclaredFields() call will get a NoClassDefFound exception for the class Lorg/apache/geronimo/harness/EETest

That class is defined in one of the embedded jars.  If the load of the EETestDummy class is commented out, then the getDeclaredFields() call does not throw the exception.  The resolution of the internal EETest class appears to depend on whether the imported package gets resolved first.  ",,,,,,,,,,,,,,,,,,,,20/Jul/10 17:44;rickmcguire;splitpackage.zip;https://issues.apache.org/jira/secure/attachment/12449949/splitpackage.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-07-20 21:06:14.504,,,no_permission,,,,,,,,,,,56303,,,Thu Jul 22 16:48:01 UTC 2010,,,,,,0|i0vxif:,184402,,,,,,,,"20/Jul/10 17:44;rickmcguire;If you have a version of PAX exam setup that can handle the 3.0.1 framework, then you should be able to run this by just doing an ""mvn install"" from the test subproject after unzipping.  ","20/Jul/10 21:06;rickhall;I see what is going on. The bundle being required imports its own packages and there is a bug when calculating the available packages from a required bundle which is essentially ignoring the packages that are also imported, but they should be part of the export signature of the required bundle. This omission causes the second bundle to actually get dynamically wired to the first bundle on the first class load above, which then subsequently short circuits the class loading from that point forward. I think this should be a straightforward fix. I will work on a patch tomorrow.","21/Jul/10 14:31;rickhall;I committed a fix for this to trunk. It worked in my local test case, but I didn't test it on the original test case given my limited understanding of Pax Exam. Please close if satisfied.","21/Jul/10 19:54;rickmcguire;I wasn't able to get the pax runner framework to execute using a fresh build of the framework trunk, but when I retested this in the original failing environment, this same problem still occurs. 

I rebuilt the current Felix trunk, which builds a 3.1.0-SNAPSHOT version.  I'm a little confused by the fact this Jira is marked as fixed in 3.2.0.  Am I picking up the correct build for testing?

I'm not really able to provide you with a copy of the bundles that are causing the problem because these materials are covered by an NDA.  I'm willing to do whatever is necessary though to gather information that can help you debug the problem. ","21/Jul/10 20:12;rickhall;For the framework, we work on odd/even minor numbers for development/release builds. So the 3.1.0-SNAPSHOT release will become 3.2.0 when released (or possibly a 3.0.x release if we do a quick bug fix release, since we don't do branches).

I forgot that I got your attached example working directly in Gogo without the need for Pax Exam, so this is what I see when I run it with trunk:

g! lb
START LEVEL 1
   ID|State      |Level|Name
    0|Active     |    0|System Bundle (3.1.0.SNAPSHOT)
    1|Active     |    1|Apache Felix Bundle Repository (1.6.2)
    2|Active     |    1|Apache Felix Gogo Command (0.6.0)
    3|Active     |    1|Apache Felix Gogo Runtime (0.6.0)
    4|Active     |    1|Apache Felix Gogo Shell (0.6.0)
    5|Installed  |    1|Required test harness bundle (1.0.0.SNAPSHOT)
    6|Installed  |    1|Bundle used to load failing class (1.0.0.SNAPSHOT)
g! (bundle 6) loadclass org.apache.geronimo.harness.EETestDummy
DEBUG: WIRE: [6.0] module; (bundle-symbolic-name=org.apache.geronimo.harness) -> [5.0]
[ ...big string dump of the loaded class deleted... ]

g! (bundle 6) loadclass org.apache.geronimo.embedded.TestClass
[ ...big string dump of the loaded class deleted... ]

So you can see that I load the first class, which causes the bundles to get resolved, then I load the second class. So the attached test case appears to work correctly. You can make sure you see the same thing locally by following the same steps. If you see something different, then you don't have the right build.

If you see the same thing, but your real scenario still doesn't work, then it must not be the same issue as the attached test case. I guess that means you'll need another go at creating an example scenario to demonstrate the issue. Thanks.","21/Jul/10 21:23;rickhall;Actually, I think I might know what is going on...I'll investigate more tomorrow and let you know.",22/Jul/10 09:42;rickmcguire;I'd also like to note that your test in gogo is missing the critical final step.  The NoClassDefFound error does not occur until the getDeclaredMethods() call is made on TestClass.  That's what forces the load of the EETest class that causes the error.  ,"22/Jul/10 12:49;rickhall;True, I missed that, but:

g! c = (bundle 6) loadclass org.apache.geronimo.embedded.TestClass
[ ...big string dump of the loaded class deleted... ] 

g! $c getDeclaredMethods

g! $c getName
org.apache.geronimo.embedded.TestClass
g! $c getMethods
public final void java.lang.Object.wait() throws java.lang.InterruptedException
public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
public boolean java.lang.Object.equals(java.lang.Object)
public java.lang.String java.lang.Object.toString()
public native int java.lang.Object.hashCode()
public final native java.lang.Class java.lang.Object.getClass()
public final native void java.lang.Object.notify()
public final native void java.lang.Object.notifyAll()

g! 

It still doesn't seem to cause an issue for me with the current test. Regardless, I'll investigate more.
","22/Jul/10 14:11;rickhall;Ok, I've committed another potential fix that works for me in the supplied test case and in an additional test case I created where the previous patch failed. There was a bug in calculating which packages were exposed from a required bundle when that bundle imports packages it exports. Even if the bundle ends up wiring to a different provider, it must still expose the packages it was exporting (i.e., it implicitly reexports its substituted exports).

Please close this bug if satisfied. Thanks!","22/Jul/10 16:35;rickmcguire;There is joy in Mudville!  The second attempt fixed the original, more complicated problem too.  Thank you for the quick turnaround on this!",22/Jul/10 16:40;rickhall;Change the summary to match the real issue.,"22/Jul/10 16:40;rickhall;Great news. I think we'll try to do another micro release before too long, since we have a good collection of minor bugs already fixed.",22/Jul/10 16:48;rickhall;Even better summary. ;-),,,,,,,,,,,,,,
Cardinality attribute for Property annotation should be of type string,FELIX-2478,12469586,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,19/Jul/10 09:02,12/Mar/14 08:55,14/Mar/19 02:47,19/Jul/10 11:38, maven-scr-plugin-1.4.4, scr annotations 1.3.0,,,,,,,,, maven-scr-plugin-1.6.0,scr annotations 1.4.0,,,SCR Tooling,,,,,,,0,,,,,,"Currently it is not possible to define unlimited arrays or vectors using the cardinality attribute of the property.
While the doc states to use Integer.MAX_VALUE, this creates a parsing exception in the code and even if that would work, later on a string is expected with the value ""+""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-09 09:43:10.234,,,no_permission,,,,,,,,,,,56304,,,Tue Jan 18 19:25:54 UTC 2011,,,,,,0|i0vyxr:,184633,,,,,,,,"19/Jul/10 11:38;cziegeler;Added a new attributed ""unbounded"" to avoid any compatibility problems with the existing cardinality attribute. Added in revision 965433",09/Nov/10 09:43;fmeschbe;Close after release,"18/Jan/11 13:58;kwin;In my opinion this issue has to be reopened, until the original issue is really fixed. It is not clear to developers why an annotation with type ""int"" throws NumberFormatException (in case of Integer.MAX_VALUE). Maybe you could change the implementation here, so that really all integers are accepted. Also the documentation (http://felix.apache.org/site/scr-annotations.html#SCRAnnotations-Property) needs an update.","18/Jan/11 19:25;cziegeler;Can you please open a new issue for this?

Thanks",,,,,,,,,,,,,,,,,,,,,,,
Metatype information should not be generated for abstract components,FELIX-2475,12469228,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,14/Jul/10 07:12,09/Nov/10 09:43,14/Mar/19 02:47,14/Jul/10 07:16, maven-scr-plugin-1.4.4,,,,,,,,,, maven-scr-plugin-1.6.0,,,,SCR Tooling,,,,,,,0,,,,,,Currently metatype info is generated even if a component is marked as abstract,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-09 09:43:09.5,,,no_permission,,,,,,,,,,,56307,,,Tue Nov 09 09:43:09 UTC 2010,,,,,,0|i0vylj:,184578,,,,,,,,14/Jul/10 07:16;cziegeler;Added abstract check in revision 963960,09/Nov/10 09:43;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
Subtring matching is incorreclty matching against an empty string,FELIX-2473,12469168,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,13/Jul/10 14:57,18/Aug/10 20:02,14/Mar/19 02:47,13/Jul/10 19:55,framework-3.0.1,,,,,,,,,,framework-3.0.2,,,,Framework,Specification compliance,,,,,,0,,,,,,"The substring matching, which is part of the SimpleFilter implementation is incorrectly matching empty strings. For example, it says """" matches ""foo"". This is happening because it uses empty strings as replacements for ""*"" when doing wildcard matching, thus it gets confused when there really is an empty string.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56309,,,Tue Jul 13 19:55:01 UTC 2010,,,,,,0|i1at93:,271205,,,,,,,,"13/Jul/10 19:55;rickhall;I just applied a simple fix that merely special cases the case where there is no wildcard in a substring comparison. In that case, you simply need to return the result of equals() immediately...this works for empty string or any other non-wildcarded string.",,,,,,,,,,,,,,,,,,,,,,,,,,
No class def found error - Permissions Admin (see screenshot),FELIX-2471,12469044,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,cmoulliard,cmoulliard,12/Jul/10 09:08,16/Aug/10 12:13,14/Mar/19 02:47,12/Jul/10 12:16,webconsole-3.1.0,,,,,,,,,,webconsole-3.1.2,,,,Web Console,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,12/Jul/10 10:02;cmoulliard;felix_web_console_permissions.png;https://issues.apache.org/jira/secure/attachment/12449230/felix_web_console_permissions.png,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-07-12 12:16:35.641,,,no_permission,,,,,,,,,,,56311,,,Mon Aug 16 12:13:30 UTC 2010,,,,,,0|i0w19b:,185009,,,,,,,,12/Jul/10 12:16;v_valchev;Fixed in rev.963256,16/Aug/10 12:13;fmeschbe;Apache Felix Web Console 3.1.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
No class def found error - Wire Admin (see screenshot),FELIX-2470,12469041,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,cmoulliard,cmoulliard,12/Jul/10 09:05,16/Aug/10 12:13,14/Mar/19 02:47,01/Aug/10 13:07,webconsole-3.1.0,,,,,,,,,,webconsole-3.1.2,,,,Web Console,,,,,,,0,,,,,,Fixed in rev.963218,,,,,,,,,,,,,,,,,,,,12/Jul/10 10:04;cmoulliard;felix_web_console_wireadmin.png;https://issues.apache.org/jira/secure/attachment/12449232/felix_web_console_wireadmin.png,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-07-12 11:22:35.132,,,no_permission,,,,,,,,,,,56312,,,Mon Aug 16 12:13:29 UTC 2010,,,,,,0|i0vxhj:,184398,,,,,,,,12/Jul/10 11:22;v_valchev;can you confirm if the problem is fixed?,"01/Aug/10 13:07;fmeschbe;I would assume this is fixed, so I resolve it.",16/Aug/10 12:13;fmeschbe;Apache Felix Web Console 3.1.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,
Unknown attributes are not stripped from Fragment-Host header,FELIX-2466,12468754,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,davemssavage,davemssavage,07/Jul/10 20:14,18/Aug/10 20:02,14/Mar/19 02:47,09/Jul/10 14:17,framework-3.0.1,,,,,,,,,,framework-3.0.2,,,,Framework,,,,,,,0,,,,,,"The gemini web bundles available from:

http://www.eclipse.org/gemini/web/download/

Fail to resolve in felix:

19  INSTALLED  com.springsource.org.apache.catalina.ha.springsource:6.0.20.S2-r5956
20  INSTALLED  com.springsource.org.apache.catalina.springsource:6.0.20.S2-r5956
21  INSTALLED  com.springsource.org.apache.catalina.tribes.springsource:6.0.20.S2-r5956
23  INSTALLED  com.springsource.org.apache.coyote.springsource:6.0.20.S2-r5956
26  INSTALLED  com.springsource.org.apache.jasper.springsource:6.0.20.S2-r5956
32  INSTALLED  org.eclipse.gemini.web.core:1.1.0.M01
33  INSTALLED  org.eclipse.gemini.web.extender:1.1.0.M01
34  INSTALLED  org.eclipse.gemini.web.tomcat:1.1.0.M01

g! start 19
org.osgi.framework.BundleException: Unresolved constraint in bundle com.springsource.org.apache.catalina.ha.springsource [19]: Unable to resolve 19.0: missing requirement [19.0] package; (&(package=org.apache.catalina)(version>=6.0.20.S2-r5956)(version<=6.0.20.S2-r5956)) - [19.0] package; (&(package=org.apache.catalina)(version>=6.0.20.S2-r5956)(version<=6.0.20.S2-r5956))

The same set of bundles resolve ok in equinox.

Guessing it might have something to do with fragments as they're definitely in use.",Gemini Web (1.1.0.M01),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-08 20:28:22.626,,,no_permission,,,,,,,,,,,56316,,,Fri Jul 09 14:17:36 UTC 2010,,,,,,0|i0vwo7:,184266,,,,,,,,"08/Jul/10 20:28;rickhall;Technically, it does look like there is a bug in the resolver, although it is not exactly what you might expect. The com.springsource.org.apache.jasper.springsource has this metadata:

    Fragment-Host: com.springsource.org.apache.catalina.springsource;versi
      on=""[6.0.20.S2-r5956, 6.0.20.S2-r5956]""

In reality, this declaration is somewhat faulty since it should be using ""bundle-version"" as the matching attribute for the host, not ""version"". The Felix resolver obeys the attribute and doesn't find any matching host; however, this appears to not comply with the spec, since the spec only defines one known attribute (i.e., bundle-version) and doesn't specifically allow arbitrary attributes on the Fragment-Host header.

In short, we need to modify our manifest parser to strip unknown attributes from the Fragment-Host header, then it should start to work. Additionally, someone should tell the SpringSource people to use bundle-version instead of version. :-)",09/Jul/10 08:39;glyn.normington;This is a problem with a bundle in the Enterprise Bundle Repository. Please file a bug against the EBR. See http://www.springsource.com/repository/app/faq#q10 for how to do this.,"09/Jul/10 08:53;davemssavage;Thanks Glyn, bug filed -> https://issuetracker.springsource.com/browse/EBR-662",09/Jul/10 13:41;glyn.normington;Thanks although I believe this bug should stay on the books and be fixed at some point in Felix.,"09/Jul/10 14:17;rickhall;I committed a fix to strip unknown attributes from the Fragment-Host header...that gets you further, but unfortunately it looks like the Gemini bundles are rife with issues. They all import org.osgi.util.tracker 1.4.2, which doesn't exist, and it also appears they have an implicit dependency on internal Equinox classes...they don't import them, so they must expect them to be boot delegated.

Regardless, our part is done. Please close this issue if satisfied. Thanks.",,,,,,,,,,,,,,,,,,,,,,
system.bundle should be automatically wired to the relevant bundle,FELIX-2465,12468589,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,hehe,hehe,05/Jul/10 21:28,17/Mar/15 06:53,14/Mar/19 02:47,20/Jun/12 15:17,bundlerepository-1.4.2,,,,,,,,,,bundlerepository-2.0.2,,,,Bundle Repository (OBR),,,,,,,1,,,,,,"When provisioning, it would be nice to automatically treat system.bundle as the system bundle symbolic name, so that users don't need to rely on the particular system bundle. For an example, in equinox, the system.bundle should be treated the same as the org.eclipse.osgi.",n/a,,,,,,,,,,,,,,,,,,,23/Sep/11 13:16;njbartlett;patch.FELIX-2465.txt;https://issues.apache.org/jira/secure/attachment/12496266/patch.FELIX-2465.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-07-16 19:39:18.848,,,no_permission,,,,,,,,,,,56317,,,Sun Jul 01 12:53:16 UTC 2012,,,,,,0|i07h13:,41525,,,,,,,,"16/Jul/10 19:39;rickhall;It could be possible to construct the local resource for the system bundle such that it has an alias for its symbolic name (i.e., both the actual impl name and the generic system.bundle name). However, I wonder how much value there is to this. This is pretty bad practice and we have no way of knowing if such bundles will even work with the local system bundle if it is not Equinox. Still, I think it could be done.","23/Sep/11 12:54;njbartlett;I think this does need to be fixed, but it's quite simple to do.

When running on Equinox, the resolver creates a capability for the system bundle with ""symbolicname=org.eclipse.osgi"". If a bundle or fragment does the *right* thing, e.g. ""Require-Bundle: system.bundle"" or ""Fragment-Host: system.bundle"" then the requirement does not resolve. However, bundles that do the *wrong* thing and specify their dependency on ""org.eclipse.osgi"" do resolve.

The fix should be to always create a capability of type ""bundle"" with ""symbolicname=system.bundle"", in addition to the existing capability that provides the framework-specific name.","23/Sep/11 13:16;njbartlett;Patch to add alias capability ""system.bundle"" to the local system bundle resource.",20/Jun/12 15:17;rickhall;I've applied the patch. Please close if satisfied. Thanks.,"01/Jul/12 11:31;gravelld;Coming from a hybrid Equinox development, Felix runtime environment this is really useful. Right now, when I update a bundle depending on a system bundle fragment, I *have* to update the fragment with a spurious version update, otherwise the LocalResourceImpl is used, which requires system.bundle (because system.bundle is the requirement in the Manifest) and OBR promptly fails to resolve the requirements.

I realise there are very few changes from 1.6.6 so far, but if this could be rolled into a 1.6.8 release it would be great. There's no nightly build that I've found.",01/Jul/12 12:53;rickhall;I've just deployed a snapshot into the maven snapshot repo.,,,,,,,,,,,,,,,,,,,,,
Wrong error message on a missing package,FELIX-2459,12468356,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,benoitf,benoitf,01/Jul/10 14:29,18/Aug/10 20:02,14/Mar/19 02:47,16/Jul/10 17:13,framework-3.0.1,,,,,,,,,,framework-3.0.2,,,,Framework,,,,,,,0,,,,,,"  Hi,

Here is the case :

 I have one bundle with a missing import, I need to fix the bundle but Felix 3.0.1 is not helping me with the errors that are thrown. (the missing package required to start my bundle is ""org.apache.juli.logging"") and this missing package is not reported as a missing package in 3.0.1 while it was reported with Felix 2.0.5


When testing this bundle with Felix 3.0.1, I get the following message :
org.osgi.framework.BundleException: Unresolved constraint in bundle xxx [89]: Unable to resolve 89.0: missing requirement [89.0] package; (&(package=org.apache.catalina.tribes.group.interceptors)(version>=7.0.0)) - [89.0] package; (&(package=org.apache.catalina.tribes.group.interceptors)(version>=7.0.0))
	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3421)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1754)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:905)

This package (org.apache.catalina.tribes.group.interceptors) is present in my bundle archive. 
It tells me that a requirement is not available but I don't know which package is missing which is a big problem as it's quite difficult to fix an issue when there is a missing information


By switching back to Felix v2.0.5, I have the following error :
org.osgi.framework.BundleException: Unresolved constraint in bundle xxx [89]: package; (package=org.apache.juli.logging)
	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3299)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1657)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:905)

And now, we can see that the missing package is printed


By adding some breakpoint in Felix 3.0.1, I can see that the original error is raised in ResolverImpl class but then this error is ignored


Here is the code that is raising my expecting missing package :

            if ((candidates.size() == 0) && !req.isOptional())
            {
                ResolveException ex =
                    new ResolveException(""Unable to resolve "" + module
                        + "": missing requirement "" + req, module, req);
                resultCache.put(module, ex);
                m_logger.log(Logger.LOG_DEBUG, ""No viable candidates"", ex);
                throw ex;
            }
The exception which is built here is :
org.apache.felix.framework.resolver.ResolveException: Unable to resolve 89.0: missing requirement [89.0] package; (package=org.apache.juli.logging)

	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 437	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.resolve(Resolver$ResolverState, Module) line: 78	
	Felix$FelixResolver.resolve(Module) line: 4005	
	Felix.resolveBundle(BundleImpl) line: 3414	
	Felix.startBundle(BundleImpl, int) line: 1754	
	BundleImpl.start(int) line: 905	


But this issue is ignored at the line 422 by the following code :

                    try
                    {
                        populateCandidates(state, candCap.getModule(),
                            candidateMap, resultCache);
                    }
                    catch (ResolveException ex)  <--- silently catched
                    {
                        // Remove the candidate since we weren't able to
                        // populate its candidates.
                        itCandCap.remove();
                    }

	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 422	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.populateCandidates(Resolver$ResolverState, Module, Map, Map) line: 415	
	ResolverImpl.resolve(Resolver$ResolverState, Module) line: 78	
	Felix$FelixResolver.resolve(Module) line: 4005	
	Felix.resolveBundle(BundleImpl) line: 3414	
	Felix.startBundle(BundleImpl, int) line: 1754	
	BundleImpl.start(int) line: 905	


Then I get an error by Felix but not the original root cause which is a problem for me
I get at these lines :

ex = org.apache.felix.framework.resolver.ResolveException: Unable to resolve 89.0: missing requirement [89.0] package; (&(package=org.apache.catalina.tribes.group.interceptors)(version>=7.0.0))

                            catch (ResolveException ex)
                            {
                                if ((ex.getRequirement() != null)
                                    && (ex.getRequirement() instanceof FragmentRequirement)
                                    && (rootModule !=
                                        ((FragmentRequirement) ex.getRequirement()).getFragment()))
                                {
                                    m_resolverState.detachFragment(
                                        newRootModule,
                                        ((FragmentRequirement) ex.getRequirement()).getFragment());
                                    repeat = true;
                                }
                                else
                                {
                                    throw ex;
                                }
                            }

	Felix$FelixResolver.resolve(Module) line: 4013	
	Felix.resolveBundle(BundleImpl) line: 3414	
	Felix.startBundle(BundleImpl, int) line: 1754	
	BundleImpl.start(int) line: 905	


and this is the error which is reported to me, but this can't help me as the true missing package has been lost.
",,,,,,,,,,,,,,,,,,,,01/Jul/10 16:05;benoitf;jonas-web-container-tomcat-6.0-5.2.0-M3-SNAPSHOT-ipojo.jar;https://issues.apache.org/jira/secure/attachment/12448499/jonas-web-container-tomcat-6.0-5.2.0-M3-SNAPSHOT-ipojo.jar,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-07-01 14:59:11.65,,,no_permission,,,,,,,,,,,56323,,,Fri Jul 16 17:13:12 UTC 2010,,,,,,0|i0w1kv:,185061,,,,,,,,"01/Jul/10 14:59;rickhall;Thanks for the very detailed explanation.

Is your bundle reasonably self contained so that you could attach it as an example? Or does it have lots of dependencies that would make it difficult to recreate the situation?

You raise a very valid point and we should look into seeing if there is a way to improve how we report such errors. It is difficult when resolving bundle dependencies because the resolver algorithm discovers many errors and it doesn't necessarily have a way of knowing which error is the most important or the ""root"" error.

If you could make a reproducible scenario, it would give us a better idea if we were missing something obvious. At a minimum, we could log intermediate errors (although I'd worry about logging too much). Regardless, we can try to look into improving the situation.","01/Jul/10 15:23;benoitf;>Is your bundle reasonably self contained so that you could attach it as an example? 
>Or does it have lots of dependencies that would make it difficult to recreate the situation? 

Well my bundle failure was part of a new development in JOnAS ;-)
I think that I can provide you a JOnAS  bundle with this kind of failure. The only step to reproduce is to download a Nightly snapshot of JOnAS (which is using Felix v3.0.1), replace a correct bundle and performing ""jonas start -debug -p xxx -s y"" and then you can remotely
So it's easy to reproduce as we only have to start JOnAS by you need to download some megabytes ;-)

> You raise a very valid point and we should look into seeing if there is a way to improve how we report such errors.
> It is difficult when resolving bundle dependencies because the resolver algorithm discovers many errors and it doesn't necessarily 
> have a way of knowing which error is the most important or the ""root"" error.
> If you could make a reproducible scenario, it would give us a better idea if we were missing something obvious. At a minimum, we could
> log intermediate errors (although I'd worry about logging too much). Regardless, we can try to look into improving the situation.

In my case, the first error thrown was my ""root cause"" and the other one were some kind of effects of this first failure but maybe the first error is not a correct one for all cases ?
It would be interesting also if I could have a list of missing dependencies instead of only one missing dependency.
When we integrate/develop some bundles with many dependencies (and when the dependencies are not well done), we have situations where we need to avoid or make optional some imports.
But we need to repeat the step for each import that needs to be fixed as Felix report only one failure at each time. Also, I would know which package is requiring my missing package and maybe a list of packages that have a dependencies on this missing package
With this information, I could figure if I should provide or make optional this package. And with a good report from Felix, I could go faster than today.


","01/Jul/10 15:50;rickhall;If you can get me some repeatable steps, I will try to look into improving the message, even if I have to download lots of bytes. :-)

Regarding your request to give more info, I understand it would be nice, but it is not likely to be done for a variety of reasons. First, like a compiler error, often early errors make later errors unmeaningful. Further, being exhaustive is difficult once any single link is broken, because you don't know that you need to traverse the missing link and there could be more errors down there. Lastly, even if we could be exhaustive, you might be waiting years for the algorithm to finish telling you all of the potential errors. :-) The goal of the resolver is to hopefully be quick in most cases, which conflicts with providing thorough debugging information.

It does look like we are logging the exceptions though, so in the meantime try setting your framework log level to DEBUG to see if you get your desired exception logged. Otherwise, get me the steps to reproduce and I will try to look at your specific scenario.","01/Jul/10 16:05;benoitf;Here are the steps to reproduce the problem

Download JOnAS 5.2.0M3 snapshot here : http://maven.ow2.org/maven2-snapshot/org/ow2/jonas/assemblies/profiles/jonas-full/5.2.0-M3-SNAPSHOT/

(zip or tgz)

Check that this JOnAS is starting fine : ""use $JONAS_ROOT/bin/jonas start -fg -clean""

Then, add the bundle which has the failure (this bundle has not the ""juli"" dependency so we should expect a missing package on this component)

Replace the file $JONAS_ROOT/repositories/maven2-internal/org/ow2/jonas/jonas-web-container-tomcat-6.0/5.2.0-M3-SNAPSHOT/jonas-web-container-tomcat-6.0-5.2.0-M3-SNAPSHOT-ipojo.jar by the file that I've attached

Then start JOnAS using ""$JONAS_ROOT/bin/jonas start -fg -clean -debug -p xxx -s y""
You can then connect to JOnAS by using a remote debugger on the xxx port

You will have the error :
[86]: Unable to resolve 86.0: missing requirement [86.0] package; (&(package=org.apache.catalina.tribes.group.interceptors)(version>=6.0.0)) - [86.0] package; (&(package=org.apache.catalina.tribes.group.interceptors)(version>=6.0.0))
	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3421)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1754)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:905)


While the ""expected"" message should be that org.apache.juli.logging package is missing


if you need to patch the Felix that is being used, update the following jar file with the new Felix classes: $JONAS_ROOT/lib/bootstrap/felix-launcher.jar

","02/Jul/10 15:52;rickhall;I modified the resolver to rethrow the deeper exception, rather than consume it. This appears to work correctly in your case. However, it won't work in all cases, since it only catches the exception for the first candidate, but that may not be the expected/desired candidate when there are multiple candidates. If the desired candidate comes later and also fails to resolve, you won't get that exception.

One possibility would be to create an exception message that appends all of the errors for all candidates together, but you'd almost need to do this all the way up the recursion stack, since at each level there could be multiple candidates all of which could fail to resolve. This would be a really hard to read exception message. For now, I guess we'll stick with rethrowing the exception of the first candidate under the assumption that this is the common case.

If you want to test this, i deployed snapshots, otherwise you can build from trunk.",02/Jul/10 15:53;rickhall;Please close this bug if satisfied. Thanks.,"05/Jul/10 15:27;benoitf;I've tested with the snapshot revision.
I had 2 test bundles and the missing package was correctly thrown in my cases (with the 3.0.1 version, it sends me very strange package few times)

All candidate errors could be interesting but maybe this could be an option of the framework or it can be obtained with a debug log level.

I close the issue as it is working as expected.
","05/Jul/10 15:27;benoitf;Working for me, thanks !","13/Jul/10 21:05;rickhall;The implemented fix causes a regression in fragment handling since the thrown exception is used to detach conflicting fragments from the host. By rethrowing the exception, we don't see that the requirement came from a fragment which means we don't detach it in some cases where there is a conflict. We need to think about this some more.","15/Jul/10 16:34;rickhall;I've modified the solution to perform exception ""chaining"" in the exception message...this is not necessarily an awesome solution since it makes the exception harder to read, but it does appear to work. I will keep this open for a little longer while I try to think of a way to make it better, if possible.","16/Jul/10 17:13;rickhall;I am closing this again, since I was able to simplify the resulting exception message to some degree by avoiding recursing for a module that imports from itself when populating candidates.",,,,,,,,,,,,,,,,
Framework no longer fires UNRESOLVED event when a bundle is explicitly refreshed,FELIX-2456,12468168,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,29/Jun/10 15:46,22/Dec/10 15:07,14/Mar/19 02:47,07/Dec/10 21:33,framework-2.0.0,framework-2.0.1,framework-2.0.2,framework-2.0.3,framework-2.0.4,framework-2.0.5,framework-3.0.0,framework-3.0.1,,,framework-3.0.7,,,,Framework,,,,,,,0,,,,,,"Between framework 1.8.x and 2.0.0, we removed the UNRESOLVED event when a bundle is explicitly refreshed. We need to put it back. It appears that when the code was restructured to have bundle uninstallation fire an UNRESOLVED event, it missed the case where a bundle was refreshed directly. Due to the uninstallation requirement, it is not possible to simply put the event firing back in place in refreshBundle() since it would result in multiple UNRESOLVED events being fired. We need to walk our way back from the refreshBundle() method to see who is using it and to also make sure setBundleStateAndNotify() is correctly called in all cases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,40451,,,Tue Dec 07 21:33:17 UTC 2010,,,,,,0|i0aqpz:,60602,,,,,,,,"07/Dec/10 21:33;rickhall;I modified refreshBundle() to fire an UNRESOLVED event if the bundle being refreshed is not in the INSTALLED state. Hopefully, this fixes the issue.",,,,,,,,,,,,,,,,,,,,,,,,,,
Felix uses System.out to print debug messages related to resolver...,FELIX-2451,12468006,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,28/Jun/10 03:08,18/Aug/10 20:02,14/Mar/19 02:47,07/Jul/10 18:06,framework-3.0.0,,,,,,,,,,framework-3.0.2,,,,Framework,,,,,,,0,,,,,,"Felix prints message like this using System.out.println...
RE: org.apache.felix.framework.resolver.ResolveException: Constraint violation for package 'javax.xml.bind.attachment' when resolving module 154.0 between existing import 0.javax.xml.bind.attachment BLAMED ON [[154.0] package; (package=javax.xml.bind.attachment)] and uses constraint 227.0.javax.xml.bind.attachment BLAMED ON [[154.0] package; (package=com.sun.xml.bind.v2.model.runtime), [178.0] package; (&(package=javax.xml.bind.annotation.adapters)(version>=2.2.1)), [227.0] package; (&(package=javax.xml.bind)(version>=2.2.1)), [227.0] package; (&(package=javax.xml.bind.attachment)(version>=2.2.1))]

It should use a logger with an appropriate  log level so that user has a choice to see such debug message. I wish I could convince Richard to change the message in some way to indicate that this message does not mean the resolver could not resolve the bundle, rather this is an intermediate message and resolver may continue to find a consistent class space for the bundle. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-28 03:12:32.206,,,no_permission,,,,,,,,,,,56329,,,Wed Jul 07 18:06:13 UTC 2010,,,,,,0|i0vxdb:,184379,,,,,,,,"28/Jun/10 03:12;rickhall;I didn't say I wouldn't, just that I didn't like your suggestions. :-)","06/Jul/10 15:15;rickhall;Looking at this more closely, I see that I never really intended to print those messages in the first place, they were just debugging messages while I implemented the algorithm and I forgot to remove them. So, I could remove them completely, since it is not clear how worthwhile they will be to the average person. Hard to say, since they could provide some hints.","07/Jul/10 04:52;sahoo;I found the content of the message useful, so my preference would be to have it as a debug level message. Of course, I would still like the message to be modified to make it look like an intermediate step in resolution process. ","07/Jul/10 18:06;rickhall;Committed a patch. The exception message stays the same, but the debug log message is:

    ""Current candidate permutation failed, will try another if possible.""

Please close if you are satisfied.",,,,,,,,,,,,,,,,,,,,,,,
ServiceFactory.getService() resulted in a cycle.,FELIX-2450,12467895,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,djencks,zdila,zdila,25/Jun/10 12:44,04/Sep/14 08:04,14/Mar/19 02:47,07/May/13 19:49, scr-1.4.0,,,,,,,,,,scr-1.8.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"I am using 1.4.1.SNAPSHOT-r951313.

Component ""Item"":

<?xml version=""1.0"" encoding=""UTF-8""?>
<scr:component xmlns:scr=""http://www.osgi.org/xmlns/scr/v1.1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.osgi.org/xmlns/scr/v1.1.0 http://www.osgi.org/xmlns/scr/v1.1.0"">
	<implementation class=""mycompany.impl.MyItemImpl""/>
	<reference interface=""mycompany.ItemRegister"" bind=""setItemRegister"" policy=""dynamic""/>
	<service>
		<provide interface=""mycompany.Item""/>
	</service>
</scr:component>


Component ""ItemRegister"":

<?xml version=""1.0"" encoding=""UTF-8""?>
<scr:component xmlns:scr=""http://www.osgi.org/xmlns/scr/v1.1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.osgi.org/xmlns/scr/v1.1.0 http://www.osgi.org/xmlns/scr/v1.1.0"">
	<implementation class=""mycompany.impl.MyItemRegisterImpl""/>
	<reference interface=""mycompany.Item"" bind=""addItem"" unbind=""removeItem"" cardinality=""0..n"" policy=""dynamic""/>
	<service>
		<provide interface=""mycompany.ItemRegister""/>
	</service>
</scr:component>


Both components reside in the same bundle. On bundle startup I am getting:

java.lang.IllegalStateException: ServiceFactory.getService() resulted in a cycle.
	at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:249)
	at org.apache.felix.framework.Felix.getService(Felix.java:3022)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:329)
	at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:785)
	at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1040)
	at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:37)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:550)
	at org.apache.felix.scr.impl.helper.BaseMethod$NotResolved.invoke(BaseMethod.java:508)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:442)
	at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:1028)
	at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:944)
	at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:868)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.createRealComponent(DelayedComponentManager.java:95)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Registered.getService(AbstractComponentManager.java:1120)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.getService(DelayedComponentManager.java:88)
	at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:307)
	at org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:221)
	at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:295)
	at org.apache.felix.framework.Felix.getService(Felix.java:3022)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:329)
	at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:785)
	at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1040)
	at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:37)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:550)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:442)
	at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:1028)
	at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:932)
	at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:868)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.createRealComponent(DelayedComponentManager.java:95)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Registered.getService(AbstractComponentManager.java:1120)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.getService(DelayedComponentManager.java:88)
	at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:307)
	at org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:221)
	at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:295)
	at org.apache.felix.framework.Felix.getService(Felix.java:3022)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:329)
	at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:785)
	at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1040)
	at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:37)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:550)
	at org.apache.felix.scr.impl.helper.BaseMethod$NotResolved.invoke(BaseMethod.java:508)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:442)
	at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:1028)
	at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:944)
	at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:868)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.createRealComponent(DelayedComponentManager.java:95)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Registered.getService(AbstractComponentManager.java:1120)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.getService(DelayedComponentManager.java:88)
	at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:307)
	at org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:221)
	at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:295)
	at org.apache.felix.framework.Felix.getService(Felix.java:3022)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:329)
	at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:785)
	at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1040)
	at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:37)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:550)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:442)
	at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:1028)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceAdded(DependencyManager.java:308)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:170)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:864)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3745)
	at org.apache.felix.framework.Felix.access$000(Felix.java:80)
	at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:717)
	at org.apache.felix.framework.ServiceRegistry.registerService(ServiceRegistry.java:107)
	at org.apache.felix.framework.Felix.registerService(Felix.java:2862)
	at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:251)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:425)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerComponentService(AbstractComponentManager.java:436)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:984)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:309)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.enable(AbstractComponentManager.java:133)
	at org.apache.felix.scr.impl.config.ConfiguredComponentHolder.enableComponents(ConfiguredComponentHolder.java:247)
	at org.apache.felix.scr.impl.BundleComponentActivator.loadDescriptor(BundleComponentActivator.java:253)
	at org.apache.felix.scr.impl.BundleComponentActivator.initialize(BundleComponentActivator.java:147)
	at org.apache.felix.scr.impl.BundleComponentActivator.<init>(BundleComponentActivator.java:111)
	at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:255)
	at org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:173)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:800)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:728)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:610)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3734)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1807)
	at org.apache.felix.framework.Felix.updateBundle(Felix.java:2110)
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:923)
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:910)
	at org.apache.felix.shell.impl.UpdateCommandImpl.execute(UpdateCommandImpl.java:96)
	at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:286)
	at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:184)
	at java.lang.Thread.run(Thread.java:619)


... other logs ...


2010-06-25 13:58:48,633 ERROR OsgiLogForwarder - gofer-form: FrameworkEvent ERROR
org.apache.felix.log.LogException: org.osgi.framework.ServiceException: Service factory returned null.
	at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:340)
	at org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:221)
	at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:295)
	at org.apache.felix.framework.Felix.getService(Felix.java:3022)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:329)
	at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:785)
	at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1040)
	at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:37)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:550)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:442)
	at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:1028)
	at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:932)
	at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:868)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.createRealComponent(DelayedComponentManager.java:95)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Registered.getService(AbstractComponentManager.java:1120)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.getService(DelayedComponentManager.java:88)
	at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:307)
	at org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:221)
	at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:295)
	at org.apache.felix.framework.Felix.getService(Felix.java:3022)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:329)
	at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:785)
	at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1040)
	at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:37)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:550)
	at org.apache.felix.scr.impl.helper.BaseMethod$NotResolved.invoke(BaseMethod.java:508)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:442)
	at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:1028)
	at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:944)
	at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:868)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.createRealComponent(DelayedComponentManager.java:95)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Registered.getService(AbstractComponentManager.java:1120)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.getService(DelayedComponentManager.java:88)
	at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:307)
	at org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:221)
	at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:295)
	at org.apache.felix.framework.Felix.getService(Felix.java:3022)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:329)
	at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:785)
	at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1040)
	at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:37)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:550)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:442)
	at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:1028)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceAdded(DependencyManager.java:308)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:170)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:864)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3745)
	at org.apache.felix.framework.Felix.access$000(Felix.java:80)
	at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:717)
	at org.apache.felix.framework.ServiceRegistry.registerService(ServiceRegistry.java:107)
	at org.apache.felix.framework.Felix.registerService(Felix.java:2862)
	at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:251)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:425)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerComponentService(AbstractComponentManager.java:436)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:984)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:309)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.enable(AbstractComponentManager.java:133)
	at org.apache.felix.scr.impl.config.ConfiguredComponentHolder.enableComponents(ConfiguredComponentHolder.java:247)
	at org.apache.felix.scr.impl.BundleComponentActivator.loadDescriptor(BundleComponentActivator.java:253)
	at org.apache.felix.scr.impl.BundleComponentActivator.initialize(BundleComponentActivator.java:147)
	at org.apache.felix.scr.impl.BundleComponentActivator.<init>(BundleComponentActivator.java:111)
	at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:255)
	at org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:173)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:800)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:728)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:610)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3734)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1807)
	at org.apache.felix.framework.Felix.updateBundle(Felix.java:2110)
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:923)
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:910)
	at org.apache.felix.shell.impl.UpdateCommandImpl.execute(UpdateCommandImpl.java:96)
	at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:286)
	at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:184)
	at java.lang.Thread.run(Thread.java:619)

Sure, there is a cycle but this cycle can be resolved as one of the cardinalities is 0..n. If I manually scr disable the component ""Item"" and enable it again, then all is OK. Also, if XML definition of the ""Item"" component is being read later than that of component ""ItemRegister"", then bundle reloading runs OK. But not on the framework startup. ","Linux bono 2.6.32-22-generic #36-Ubuntu SMP Thu Jun 3 22:02:19 UTC 2010 i686 GNU/Linux
java version ""1.6.0_20""
Java(TM) SE Runtime Environment (build 1.6.0_20-b02)
Java HotSpot(TM) Client VM (build 16.3-b01, mixed mode, sharing)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-25 14:41:06.535,,,no_permission,,,,,,,,,,,56330,,,Tue May 07 19:49:52 UTC 2013,,,,,,0|i1atb3:,271214,,,,,,,,"25/Jun/10 14:41;fmeschbe;Thanks for reporting the problem.

Cycles are problematic in itself: I tend to think of cycles as design issues (not to say bugs).

Nevertheless, there is an easy solution for you to be able to work around the problem in this case, in that you declare one of the components (guessing from the name, this would be the ""MyItemRegisterImpl"" component) to be ""immediate"".

I wonder why you have the cycle here anyway: Why don't you inject the ItemRegister into the Item at the time time Item is bound to the ItemRegister ?","25/Jun/10 19:19;zdila;> Cycles are problematic in itself: I tend to think of cycles as design issues (not to say bugs).

In some cases they are required. The solution to our problem I see is not any special. SCR should create the ItemRegister and activate it. Then it should create the Item, inject ItemRegister to it, activate it and simultaneously add this new Item to ItemRegister. And, if the dependencies are currently solveable manually by scr disabling/enabling the componet, then it must be possible to do it automatically too ;-).

> Nevertheless, there is an easy solution for you to be able to work around the problem in this case, in that you declare one of the components (guessing from the name, this would be the ""MyItemRegisterImpl"" component) to be ""immediate"".

I had tried this solution too but without any success. On Monday I will try it again plus with some other combinations.

> I wonder why you have the cycle here anyway: Why don't you inject the ItemRegister into the Item at the time time Item is bound to the ItemRegister ?

Because not every implementation of the Item needs to have ItemRegister. In our case only one. I provided just a simple model. Our real scenario looks like this:

- interface Enumerable with method String[] getItems()
- there are many services implementing this Enumerable interface, like UsersEnumerable, RolesEnumerable, ReportsEnumerable, DevicesEnumerable, ...
- there is also EnumerablesEnumerable that provides list of all enumerable types, including itself (getItems will return {""users"", ""roles"", ""reports"", ""devices"", ..., ""enumerables"").
- EnumerablesRegister collects all the services implementing Enumerable interface, (UsersEnumerable, ...,  EnumerablesEnumerable)
- implementation of EnumerablesEnumerable must have reference to EnumerablesRegister to enumerate all the types (as mentioned in third point)

Before we were using Spring DM (blueprint like solution) and there it was working. But we decided to migrate to SCR for better control, hate of waiting on timeouts, hate of proxies...","03/Jul/10 07:25;zdila;This workaround works: ""ItemRegister"" component must have immediate=""true"" and must be processed before ""Item"" component.

This is still only a workaround because it should also work without this two constraints.
","30/Jul/10 09:57;fmeschbe;Glad to hear, you got it working - and I agree that it is not ""nice"" as a workaround.

On the other hand: if you have a registry and you know that with 99% security this registry will be instantiated during system startup anyway, it is not much of a problem to have it immediate (thus even saving a few bytes and overall a bit of performance)

For now, I thus just keep this issue open until someone passes by with a clever patch fixing it (or me having such an idea).","30/Jul/10 10:20;cziegeler;I think this works in Spring DM as Spring first instantiates the services and then binds them.

If you want to have the same effect, you can declare both references as optional, so changing the first one to

<reference interface=""mycompany.ItemRegister"" bind=""setItemRegister"" policy=""dynamic"" cardinality=""0..1""/>

should do the trick. ",16/Jun/12 14:36;djencks;Linked issue has some tests that demonstrate the behavior noted in this issue.,"07/May/13 19:49;djencks;I think the tests for circular dependency behavior show DS is doing all that is plausible to establish circular dependencies.    As long as at least one link is optional, and the binding is dynamic, we create all the components and then later, as we unwind and create the implementation objects, add the optional reference when it is available.

If you still have issues with the current behavior please explain the scenario or add a test that demonstrates it.",,,,,,,,,,,,,,,,,,,,
Resource filtering does not use Maven properties specified on the mvn command line via -D command line switches,FELIX-2449,12467891,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,jkwuc89,jkwuc89,25/Jun/10 11:55,11/Oct/11 17:09,14/Mar/19 02:47,28/Jun/11 00:04,maven-bundle-plugin-2.0.1,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Inside my pom, I have the following properties specified:
        <derby.host>localhost</derby.host>
        <derby.port>1527</derby.port>

I also turn on resource filtering using the following in my pom:
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

In the src/main/resources directory, there is file named jdbc.properties which contains the following:
jdbc.driverClassName=org.apache.derby.jdbc.ClientDriver
jdbc.url=jdbc:derby://${derby.host}:${derby.port}/test
jdbc.username=mri
jdbc.password=test

When I run mvn install on my project, jdbc.properties is properly included into the final bundle jar as follows:
jdbc.driverClassName=org.apache.derby.jdbc.ClientDriver
jdbc.url=jdbc:derby://localhost:1527/test
jdbc.username=mri
jdbc.password=test

When I run mvn install -Dderby.host=jkwdev -Dderby.port=1600, the filtering of jdbc.properties before packaging into the bundle jar does not honor the properties I specifed on the command line.  target/classes contains this:

jdbc.driverClassName=org.apache.derby.jdbc.ClientDriver
jdbc.url=jdbc:derby://jkwdev:1600/test
jdbc.username=mri
jdbc.password=test

But, the bundle jar contains this:
jdbc.driverClassName=org.apache.derby.jdbc.ClientDriver
jdbc.url=jdbc:derby://localhost:1527/test
jdbc.username=mri
jdbc.password=test
","Apache Maven 2.2.1 (r801777; 2009-08-06 15:16:01-0400)
Java version: 1.6.0_20
Java home: /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home
Default locale: en_US, platform encoding: MacRoman
OS name: ""mac os x"" version: ""10.6.4"" arch: ""x86_64"" Family: ""mac""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-28 00:04:08.219,,,no_permission,,,,,,,,,,,56331,,,Tue Jun 28 00:04:08 UTC 2011,,,,,,0|i1atbb:,271215,,,,,,,,28/Jun/11 00:04;mcculls;Fixed in r1140381 - needed to include session properties in the data passed to bnd.,,,,,,,,,,,,,,,,,,,,,,,,,,
PermissionAdmin and WireAdmin plugins cause internal server error if service API is missing,FELIX-2448,12467878,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,25/Jun/10 08:39,16/Aug/10 12:13,14/Mar/19 02:47,25/Jun/10 10:45,webconsole-3.1.0,,,,,,,,,,webconsole-3.1.2,,,,Web Console,,,,,,,0,,,,,,"If the Web Console cannot bind to the service API required by the PermissionAdmin and/or the WireAdmin plugins included with the Web Console internal server errors are caused. This prevents the Configuration Status page from properly rendering single-file or ZIP download responses.

At the same time, the Configuration Render plugin should be made more stable to not fail if a ConfigurationPrinter misbehaves.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56332,,,Mon Aug 16 12:13:29 UTC 2010,,,,,,0|i0vxd3:,184378,,,,,,,,25/Jun/10 10:45;fmeschbe;In Rev. 957859 prevent WireAdmin and PermissionAdmin plugins from corrupting the Configuration Render output and improve Configuration Render to log ConfigurationPrinter failure instead of failing,16/Aug/10 12:13;fmeschbe;Apache Felix Web Console 3.1.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
Clicking on a service link does not display the service details,FELIX-2447,12467871,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,25/Jun/10 08:05,16/Aug/10 12:13,14/Mar/19 02:47,25/Jun/10 08:11,webconsole-3.1.0,,,,,,,,,,webconsole-3.1.2,,,,Web Console,,,,,,,0,,,,,,Clicking on the Service ID of a registered service in the services tab should display the service detail information of this selected service. Instead an empty tab is displayed.,,,,,,,,,,,,,,,,,,,,25/Jun/10 08:08;fmeschbe;FELIX-2447.png;https://issues.apache.org/jira/secure/attachment/12448031/FELIX-2447.png,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56333,,,Mon Aug 16 12:13:29 UTC 2010,,,,,,0|i0vwuf:,184294,,,,,,,,25/Jun/10 08:08;fmeschbe;Screenshot of problem,25/Jun/10 08:11;fmeschbe;Fixed all template locations loading script resources with a relative path to use the absolute path provided by the appRoot template variable in Rev. 957836,16/Aug/10 12:13;fmeschbe;Apache Felix Web Console 3.1.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,
[Gogo] The bundle context command is not used with a scope in gosh_profile,FELIX-2446,12467832,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,db82407,rickhall,rickhall,24/Jun/10 19:58,21/Sep/10 19:05,14/Mar/19 02:47,24/Jun/10 21:10,gogo-0.6.0,,,,,,,,,,gogo-0.6.1,,,,Gogo Shell,,,,,,,0,,,,,,"The default gosh_profile shell registers the bundle context as a command, but it is not assigned any scope. This apparently is problematic for anyone else registering a command with overlapping names as what is on bundle context. For example, registering a command named ""bundle"" causes the following gosh_profile line to fail:

    addcommand system ((bundle 1) loadclass java.lang.System)

I am not sure why or how it is shadowing it, since it seems like the order should favor the built-in commands, but apparently. Regardless, if we had a scope assigned to this we could be precise in our gosh_profile shell (e.g., gogo:bundle) to avoid this issue altogether.

To make matters worse, this causes the entire shell bundle to die...it might be nice if it continued to function even if there are errors in the gosh_profile.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-24 21:10:27.254,,,no_permission,,,,,,,,,,,56334,,,Fri Jun 25 12:41:15 UTC 2010,,,,,,0|i0vyp3:,184594,,,,,,,,"24/Jun/10 21:10;db82407;The context commands are registered into a scope - the first argument of addcommand is the scope:

addcommand context ${.context}

I have however fixed gosh_profile to explicitly use this scope when referencing the bundle command:

# add methods on System object as commands
addcommand system ((context:bundle 0) loadclass java.lang.System


since the bundle context is also set as a session variable, we could have written the above as:
addcommand system (${.context} bundle 0) loadclass java.lang.System

We could protect errors in the whole gosh_profile from aborting startup by enclosing them in a try block, as is used for displaying the message of the day - rather than test whether the file exists, we just eclose it in a try block:

# print welcome message
try {
  cat ($0 resolve motd)
}","24/Jun/10 21:22;db82407;the whole gosh_profile is now enclosed in a try {} block, so it doesn't abort startup if an error occurs:

$ java -jar bin/felix.jar 
bundle://4.0:1/gosh_profile: ERROR: java.io.IOException: Resource does not exist: bundle://4.0:1/motdx","25/Jun/10 12:41;rickhall;I guess I just assumed it would be in the ""gogo"" scope and when it wasn't I assumed it didn't have a scope. I changed the summary of the issue to reflect the actual bug, then. Thanks, I'll close this.",,,,,,,,,,,,,,,,,,,,,,,,
Temporal dependencies should use proxies by default,FELIX-2438,12467612,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,22/Jun/10 19:38,04/Feb/13 12:33,14/Mar/19 02:47,22/Jun/10 19:41,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"To be homogeneous with iPOJO core, temporal dependencies should use proxies by default.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56336,,,Tue Jun 22 19:41:53 UTC 2010,,,,,,0|i0vsw7:,183654,,,,,,,,22/Jun/10 19:41;clement.escoffier;Fixed in trunk,,,,,,,,,,,,,,,,,,,,,,,,,,
<supportedProjectType> on a WAR file will switch the project to generate jar artifacts,FELIX-2435,12467496,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,struberg,struberg,21/Jun/10 15:42,11/Oct/11 17:09,14/Mar/19 02:47,24/Jun/11 21:50,maven-bundle-plugin-2.0.1,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"If you enable a

                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <supportedProjectTypes>
                      <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                </configuration>

then a artifact of type 'jar' will created instead of a WAR file.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-24 21:50:34.111,,,no_permission,,,,,,,,,,,56339,,,Fri Jun 24 21:50:34 UTC 2011,,,,,,0|i0vy9b:,184523,,,,,,,,22/Jun/10 08:03;struberg;I'm using maven-bundle-plugin-2.1.0 but I'm not able to select this version in JIRA. I also retested this issue with 2.0.1 which is also broken.,24/Jun/11 21:50;mcculls;Fixed in r1139451,,,,,,,,,,,,,,,,,,,,,,,,,
EventAdmin service unregistered but not registered again on ConfigAdmin startup,FELIX-2431,12467342,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,tdiesler,tdiesler,18/Jun/10 11:40,12/Sep/10 09:39,14/Mar/19 02:47,25/Aug/10 17:18,eventadmin-1.2.2,,,,,,,,,,eventadmin-1.2.4,,,,Event Admin,,,,,,,0,,,,,,"In EventAdmin Configuration

            Object service = new ManagedService()
            {
                public synchronized void updated( Dictionary properties ) throws ConfigurationException
                {
                    configure( properties );
                    stop();
                    start();
                }
            };

The call to stop() does not return in a timely manner (i.e. it may take > 40sec). This is because the asyncronous thread pool cannot be closed properly. This condition occurs when eventadmin is started before configadmin ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-05 11:16:38.147,,,no_permission,,,,,,,,,,,56343,,,Wed Aug 25 17:18:30 UTC 2010,,,,,,0|i0vxcv:,184377,,,,,,,,"18/Jun/10 11:41;tdiesler;JBossOSGi back reference
https://jira.jboss.org/browse/JBOSGI-348",05/Jul/10 11:16;cziegeler;Does this not work or does it take too long? From your comment above I suspect the later while the bug title says different.,"25/Aug/10 17:18;cziegeler;After being hit by the same problem I fixed this in revision 989232.
The config admin update event is now handled async and does not block config admin anymore. In addition shutting down the pools is done async as well to make the downtime as small as possible",,,,,,,,,,,,,,,,,,,,,,,,
IPOJO manipulation (ant task) results in invalid classes throwing java.lang.VerifyError at runtime in InstanceManager (line 584),FELIX-2430,12467337,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,fdesmons,fdesmons,18/Jun/10 10:45,17/Mar/11 17:59,14/Mar/19 02:47,22/Jun/10 06:56,iPOJO-1.4.0,iPOJO-1.6.0,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"Logs:

[ERROR] ipojo.SecurityErrorRaisingIPOJOService : [ipojo.SecurityErrorRaisingIPOJOService-0] createInstance -> The POJO constructor invocation failed : (class: ipojo/SecurityErrorRaisingIPOJOService, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;)V) Expecting to find object/array on stack
java.lang.VerifyError: (class: ipojo/SecurityErrorRaisingIPOJOService, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;)V) Expecting to find object/array on stack caught here: java.lang.Class.getDeclaredConstructors0(Native Method) java.lang.Class.privateGetDeclaredConstructors(Unknown Source) java.lang.Class.getConstructor0(Unknown Source) java.lang.Class.getDeclaredConstructor(Unknown Source) org.apache.felix.ipojo.InstanceManager.createObject(InstanceManager.java:584) org.apache.felix.ipojo.InstanceManager.getPojoObject(InstanceManager.java:777) org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.__stateChanged(LifecycleCallbackHandler.java:156) org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.stateChanged(LifecycleCallbackHandler.java) org.apache.felix.ipojo.InstanceManager.setState(InstanceManager.java:441) org.apache.felix.ipojo.InstanceManager.start(InstanceManager.java:322) org.apache.felix.ipojo.ComponentFactory.createInstance(ComponentFactory.java:155) org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:301) org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:238) org.apache.felix.ipojo.InstanceCreator$ManagedInstance.create(InstanceCreator.java:343) org.apache.felix.ipojo.InstanceCreator.addInstance(InstanceCreator.java:89) org.apache.felix.ipojo.Extender.parse(Extender.java:269) org.apache.felix.ipojo.Extender.startManagementFor(Extender.java:208) org.apache.felix.ipojo.Extender.access$600(Extender.java:52) org.apache.felix.ipojo.Extender$CreatorThread.run(Extender.java:682) java.lang.Thread.run(Unknown Source)
[ERROR] ipojo.SecurityErrorRaisingIPOJOService : Cannot create a POJO instance, the POJO constructor invocation has thrown an exception : (class: ipojo/SecurityErrorRaisingIPOJOService, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;)V) Expecting to find object/array on stack
java.lang.RuntimeException: Cannot create a POJO instance, the POJO constructor invocation has thrown an exception : (class: ipojo/SecurityErrorRaisingIPOJOService, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;)V) Expecting to find object/array on stack caught here: org.apache.felix.ipojo.InstanceManager.createObject(InstanceManager.java:640) org.apache.felix.ipojo.InstanceManager.getPojoObject(InstanceManager.java:777) org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.__stateChanged(LifecycleCallbackHandler.java:156) org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.stateChanged(LifecycleCallbackHandler.java) org.apache.felix.ipojo.InstanceManager.setState(InstanceManager.java:441) org.apache.felix.ipojo.InstanceManager.start(InstanceManager.java:322) org.apache.felix.ipojo.ComponentFactory.createInstance(ComponentFactory.java:155) org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:301) org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:238) org.apache.felix.ipojo.InstanceCreator$ManagedInstance.create(InstanceCreator.java:343) org.apache.felix.ipojo.InstanceCreator.addInstance(InstanceCreator.java:89) org.apache.felix.ipojo.Extender.parse(Extender.java:269) org.apache.felix.ipojo.Extender.startManagementFor(Extender.java:208) org.apache.felix.ipojo.Extender.access$600(Extender.java:52) org.apache.felix.ipojo.Extender$CreatorThread.run(Extender.java:682) java.lang.Thread.run(Unknown Source)
[ERROR] ipojo.SecurityErrorRaisingIPOJOService : Cannot create a POJO instance, the POJO constructor invocation has thrown an exception : (class: ipojo/SecurityErrorRaisingIPOJOService, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;)V) Expecting to find object/array on stack
[ERROR] iPOJO Instance Creator : A matching factory was found for {component=ipojo.SecurityErrorRaisingIPOJOService, instance.name=ipojo.SecurityErrorRaisingIPOJOService-0}, but the instantiation failed : The configuration is not correct for the type ipojo.SecurityErrorRaisingIPOJOService : Cannot create a POJO instance, the POJO constructor invocation has thrown an exception : (class: ipojo/SecurityErrorRaisingIPOJOService, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;)V) Expecting to find object/array on stack

Samples used for reproducing the error:

package ipojo;

public class AbstractSecurityErrorRaisingIPOJOService
{
    protected HelloWorldObject helloWorldObject;

    protected AbstractSecurityErrorRaisingIPOJOService(HelloWorldObject helloWorldObject)
    {
        this.helloWorldObject = helloWorldObject;
    }
}

package ipojo;

public class HelloWorldObject
{
    public HelloWorldObject()
    {

    }
}

package ipojo;

public interface SecurityErrorRaisingIPOJOServiceInterface
{
}

package ipojo;

import org.apache.felix.ipojo.annotations.Component;
import org.apache.felix.ipojo.annotations.Provides;

@Component(immediate = true)
@Provides(specifications = SecurityErrorRaisingIPOJOServiceInterface.class)
public class SecurityErrorRaisingIPOJOService extends AbstractSecurityErrorRaisingIPOJOService
{
    public SecurityErrorRaisingIPOJOService()
    {
        super(new HelloWorldObject());
    }
}
",,,,,,,,,,,,,,,,,,,,18/Jun/10 17:16;clement.escoffier;ipojo-2430-verify_error.zip;https://issues.apache.org/jira/secure/attachment/12447481/ipojo-2430-verify_error.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-06-18 12:24:40.147,,,no_permission,,,,,,,,,,,56344,,,Thu Mar 17 17:59:31 UTC 2011,,,,,,0|i0vwnz:,184265,,,,,,,,"18/Jun/10 12:24;clement.escoffier;Fixed in trunk,
The problem came from a wrong 'super' call detection. 

Could you check with the new manipulator (to build manually from the trunk). To use a custom manipulator, adapt your ant build to load the iPOJO ant task as:
<taskdef name=""ipojo""
        classname=""org.apache.felix.ipojo.task.IPojoTask""
                classpath=""lib/org.apache.felix.ipojo.manipulator-1.7.0-SNAPSHOT.jar; lib/org.apache.felix.ipojo.ant-1.6.0.jar;"" />
 />
(the manipulator must be first)


",18/Jun/10 16:36;fdesmons;I build and tested with and updated Manipulator as you suggested but I'm still getting the same error.,18/Jun/10 17:16;clement.escoffier;I attach the project where I reproduced your issue. Please check if it works with this project.,"21/Jun/10 08:38;fdesmons;My bad, it's a different error this time:

(ERROR)  java.lang.RuntimeException: Cannot create a POJO instance, the POJO constructor invocation has thrown an exception : (class: ipojo/SecurityErrorRaisingIPOJOService, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;)V) Expecting to find object/array on stack caught here: org.apache.felix.ipojo.InstanceManager.createObject(InstanceManager.java:640) org.apache.felix.ipojo.InstanceManager.getPojoObject(InstanceManager.java:777) org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.__stateChanged(LifecycleCallbackHandler.java:156) org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.stateChanged(LifecycleCallbackHandler.java) org.apache.felix.ipojo.InstanceManager.setState(InstanceManager.java:441) org.apache.felix.ipojo.InstanceManager.start(InstanceManager.java:322) org.apache.felix.ipojo.ComponentFactory.createInstance(ComponentFactory.java:155) org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:301) org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:238) org.apache.felix.ipojo.InstanceCreator$ManagedInstance.create(InstanceCreator.java:343) org.apache.felix.ipojo.InstanceCreator.addInstance(InstanceCreator.java:89) org.apache.felix.ipojo.Extender.parse(Extender.java:269) org.apache.felix.ipojo.Extender.startManagementFor(Extender.java:208) org.apache.felix.ipojo.Extender.access$600(Extender.java:52) org.apache.felix.ipojo.Extender$CreatorThread.run(Extender.java:682) java.lang.Thread.run(Unknown Source)

Do you need another Jira ?","21/Jun/10 13:32;clement.escoffier;Hi,

We can keep this issue in that one. I think is it related.
Do you have a test case to reproduce the current issue ?","21/Jun/10 16:25;fdesmons;I got tricked by the fact ant doesn't complain when a jar doesn't exist in the classpath of a task... sorry about that.
I works fine with the fix you did, thank you.",22/Jun/10 06:56;clement.escoffier;Reported as fixed.,03/Sep/10 11:39;clement.escoffier;Included in the 1.6.4 releases,"16/Nov/10 14:10;fdesmons;Hello,

I couldn't find the 1.6.4 version of the ant task. Nor could I found a jar corresponding to the manipulator only.
Could you let me know where to find it ?

Thank you,","16/Nov/10 19:18;clement.escoffier;Hi,

There is no ipojo ant task 1.6.4, because this jar just contains the front end on the manipulator (so no changes). You can download the manipulator 1.6.4 on
http://repo2.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.manipulator/1.6.4/org.apache.felix.ipojo.manipulator-1.6.4.jar

Don't forget to add this jar inside the ant task classpath (*must* be before the ipojo ant task jar):
{code}
<taskdef name=""ipojo"" 
        classname=""org.apache.felix.ipojo.task.IPojoTask"" 
                classpath=""lib/org.apache.felix.ipojo.manipulator-1.6.4; lib/org.apache.felix.ipojo.ant-1.6.0.jar;"" /> 
 /> 
{code}

Tell me if this does not work.

Regards,

Clement","01/Mar/11 00:51;nbarriga;This patch doesn't seem to work when the class hierarchy is deeper. When doing the recursion, it doesn't check for superclass constructors correctly more than one level of inheritance.","02/Mar/11 07:24;clement.escoffier;Hi,

Could you provide a simple example that we can reproduce it ?

Thanks","02/Mar/11 12:23;nbarriga;Unfortunately no. My current codebase is quite big and I wouldn't know how to start a project from scratch. I was going to add it to your unit tests, but I found a workaround(using composition instead of inheritance) that works, so my boss said to go with that and dont spend more time on it. Sorry, I just thought it would be good to report it to you anyway.",17/Mar/11 17:59;clement.escoffier;It seems to be fixed in 1.8.0. I was not able to reproduce it.,,,,,,,,,,,,,
maven site crashes,FELIX-2427,12467331,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,struberg,struberg,18/Jun/10 09:31,11/Oct/11 17:09,14/Mar/19 02:47,24/Jun/11 15:07,,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"$>mvn clean install site 
on the trunk fails with the following exception

[INFO] Template file '/home/msx/develop/java/apache/felix/trunk/bundleplugin/src/site/maven-site.vm' does not exist
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-24 15:07:34.008,,,no_permission,,,,,,,,,,,56347,,,Fri Jun 24 15:07:34 UTC 2011,,,,,,0|i0vy8v:,184521,,,,,,,,"18/Jun/10 10:33;struberg;maybe the hardcoded
          <templateDirectory>${user.dir}/src/site/</templateDirectory>
          <template>maven-site.vm</template>
in the parent pom should get replaced by a <skin> solution?
That would be _way_ more flexible.

Also for generating the proper plugin documentation I basically miss the following reporting section:

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.1.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>2.5.1</version>
      </plugin>
    </plugins>
  </reporting>","24/Jun/11 15:07;mcculls;Added plugin report in r1139347, site issues seem to be fixed with trunk + Maven3",,,,,,,,,,,,,,,,,,,,,,,,,
Internal Server Error requesting /system/console or /system/console/,FELIX-2424,12467325,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,18/Jun/10 08:16,02/May/13 02:29,14/Mar/19 02:47,18/Jul/10 18:06,webconsole-3.1.0,,,,,,,,,,webconsole-3.1.2,,,,Web Console,,,,,,,0,,,,,,"Requesting the web console root URL /system/console or /system/console/ should result in a redirect to the default plugin, which defaults to the Bundle page.

Actually, the 3.1.0 release returns a 500/INTERNAL SERVER ERROR status instead of redirecting",,,,,,,,,,,FELIX-2391,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-28 13:16:01.677,,,no_permission,,,,,,,,,,,56350,,,Mon Aug 16 12:13:27 UTC 2010,,,,,,0|i0vwnr:,184264,,,,,,,,"28/Jun/10 13:16;adagios;I've also seen this behaviour, but only if I have the Configuration Admin service also running","01/Jul/10 09:25;v_valchev;We have this problem @ ProSyst. Occasionally, we received the following exception when accessed http://localhost/system/console. The HTTP server response was: 500 No message.

Exception: java.lang.NullPointerException
        at java.lang.String.concat(Unknown Source)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:353)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:333)
        at com.prosyst.mbs.impl.services.http.ServletProperties.service(ServletProperties.java:108)
        at com.prosyst.mbs.impl.services.http.Response.makeAnswer(Response.java:212)
        at com.prosyst.mbs.impl.services.http.ThreadProcess.run(ThreadProcess.java:102)
        at com.prosyst.util.impl.tpt.threadpool.ExecutorTSS.run(ExecutorTSS.java:182)

","01/Jul/10 09:57;adagios;Yeah, that's the error I'm seeing too, although in different line numbers, maybe a different version?.
I'm using 3.1.0

And it seems that the problem is that on this line:

path = path.concat( holder.getDefaultPluginLabel() );

holder.getDefaultPluginLabel() is null, which seems to imply that the updateConfiguration() method wan not called.",01/Jul/10 21:00;fmeschbe;Can you check whether the problem still exists on a current trunk build ? It seems to me that this is not reproducable any more after I have applied a refactoring of the internals (see FELIX-2391).,07/Jul/10 07:23;v_valchev;seems that everything is OK with the trunk now,"18/Jul/10 18:06;fmeschbe;Fine, thanks. So I resolve this for now.",18/Jul/10 18:09;fmeschbe;Linking to fix causing this issue to be fixed FELIX-2391,16/Aug/10 12:13;fmeschbe;Apache Felix Web Console 3.1.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,
Dependency manager does not build correctly on Windows,FELIX-2403,12466633,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,marrs,marrs,10/Jun/10 07:59,15/Jun/10 10:09,14/Mar/19 02:47,15/Jun/10 10:08,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"From: Stijn de Witt [mailto:stijn.dewitt@planon.nl] 

I think it might be a Windows thing... but after I did SVN update it
still is not working.

F:\workspace\Felix\dependencymanager>ver
Microsoft Windows XP [Version 5.1.2600]

F:\workspace\Felix\dependencymanager>java -version
java version ""1.6.0_11""
Java(TM) SE Runtime Environment (build 1.6.0_11-b03)
Java HotSpot(TM) Client VM (build 11.0-b16, mixed mode, sharing)

F:\workspace\Felix\dependencymanager>mvn -version
Apache Maven 2.2.1 (r801777; 2009-08-06 21:16:01+0200)
Java version: 1.6.0_11
Java home: F:\workspace\Planon5\JDK\jdk1.6.0_11\jre
Default locale: nl_NL, platform encoding: Cp1252
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""

F:\workspace\Felix\dependencymanager>mvn clean install
[INFO] Scanning for projects...
[INFO] Reactor build order:
[INFO]   Apache Felix Dependency Manager
[INFO]   Apache Felix Dependency Manager Shell
[INFO]   Apache Felix Dependency Manager Compatibility
[INFO]   Apache Felix Dependency Manager Annotation
[INFO]   Apache Felix Dependency Manager Runtime
[INFO]   Apache Felix Dependency Manager Samples
[INFO]   Apache Felix Dependency Manager Annotation Samples
[INFO]   Apache Felix Dependency Manager Integration Tests
[INFO]   Apache Felix Dependency Manager Projects
[INFO]
------------------------------------------------------------------------
[INFO] Building Apache Felix Dependency Manager
[INFO]    task-segment: [clean, install]
[INFO]
------------------------------------------------------------------------
<snipped>
[INFO]
------------------------------------------------------------------------
[INFO] Building Apache Felix Dependency Manager Annotation Samples
[INFO]    task-segment: [clean, install]
[INFO]
------------------------------------------------------------------------
[INFO] [clean:clean {execution: default-clean}]
[INFO] Deleting directory
F:\workspace\Felix\dependencymanager\samples.annotation\target
[INFO] [resources:resources {execution: default-resources}]
[WARNING] Using platform encoding (Cp1252 actually) to copy filtered
resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory
F:\workspace\Felix\dependencymanager\samples.annotation\src\main\resourc
es
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Compiling 4 source files to
F:\workspace\Felix\dependencymanager\samples.annotation\target\classes
[INFO] [resources:testResources {execution: default-testResources}]
[WARNING] Using platform encoding (Cp1252 actually) to copy filtered
resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory
F:\workspace\Felix\dependencymanager\samples.annotation\src\test\resourc
es
[INFO] [compiler:testCompile {execution: default-testCompile}]
[INFO] No sources to compile
[INFO] [surefire:test {execution: default-test}]
[INFO] No tests to run.
[INFO] [bundle:bundle {execution: default-bundle}]
[INFO] [org.apache.felix.dependencymanager.annotation:scan {execution:
default}]
[INFO] Generating DM component descriptors for bundle
F:\workspace\Felix\dependencymanager\samples.annotation\target\org
.apache.felix.dependencymanager.samples.annotation-3.0.0-SNAPSHOT.jar
[INFO]
------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO]
------------------------------------------------------------------------
[INFO] Could not rename
F:\workspace\Felix\dependencymanager\samples.annotation\target\org.apach
e.felix.dependencymanage
r.samples.annotation-3.0.0-SNAPSHOT.jar.tmp to
F:\workspace\Felix\dependencymanager\samples.annotation\target\org.apach
e
.felix.dependencymanager.samples.annotation-3.0.0-SNAPSHOT.jar
[INFO]
------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO]
------------------------------------------------------------------------
[INFO] Total time: 8 seconds
[INFO] Finished at: Thu Jun 10 09:32:25 CEST 2010
[INFO] Final Memory: 35M/63M
[INFO]
------------------------------------------------------------------------",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-10 08:41:53.176,,,no_permission,,,,,,,,,,,56362,,,Tue Jun 15 10:09:48 UTC 2010,,,,,,0|i1ate7:,271228,,,,,,,,"10/Jun/10 08:41;pderop;I will look into this issue, because it seems that the problem comes from the bnd annotation parser, which is not able to rename a temporary file into the target bundle.","15/Jun/10 10:08;pderop;Fixed the DependencyManager maven annotation parser, which was not removing a temporary file before creating the target bundle (this was not working under windows).

Also modified the SharingDependenciesWithMultipleServicesTest.testShareConfigurationDependencyWithMultipleServices(), which was not working under windows, because of the ConfigAdmin issue ""FELIX-1545"": just added a sleep(200) to work around the problem.

","15/Jun/10 10:09;pderop;Closing this issue, since I verified that the fix works under windows.",,,,,,,,,,,,,,,,,,,,,,,,
NPE in org.apache.felix.framework.FilterImpl.DictionaryCapability.getAttribute(String),FELIX-2401,12466595,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,09/Jun/10 19:28,14/Jun/10 13:47,14/Mar/19 02:47,09/Jun/10 19:32,framework-3.0.0,,,,,,,,,,framework-3.0.1,,,,Framework,,,,,,,0,,,,,,"The getAttribute method can throw an NPE if the key is not contained into in map (m_map)
{code}
if (m_dict != null)
            {
                if (m_map != null)
                {
                    key = (String) m_map.get(name);  <= returns null
                }
                value = m_dict.get(key);  <= NPE here, because the comparator to null.toString()
            }
{code}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-09 19:32:56.37,,,no_permission,,,,,,,,,,,56363,,,Wed Jun 09 19:38:59 UTC 2010,,,,,,0|i0w11r:,184975,,,,,,,,"09/Jun/10 19:32;rickhall;I just committed a patch to trunk to check for null, please close if you are satisfied. Thanks.","09/Jun/10 19:38;clement.escoffier;Works like a charm !

Thanks !",,,,,,,,,,,,,,,,,,,,,,,,,
Make ScrService lenient against unexpected configuration data types,FELIX-2399,12466555,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,09/Jun/10 11:44,16/Aug/10 12:11,14/Mar/19 02:47,30/Jul/10 11:48, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The Declarative services bundle can be configured with Configuration Admin configuration. If so, the configuration is expected to provide the properties in the correct data type, that is Boolean for the ds.factory.enabled property and Integer for the ds.loglevel property. If the data type does not match the expectations, configuration fails.

This should be fixed to support any type and provide sensible handling if the actual type cannot be directly used.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56365,,,Mon Aug 16 12:11:57 UTC 2010,,,,,,0|i0vxdj:,184380,,,,,,,,09/Jun/10 11:45;fmeschbe;Fixed in Rev. 952964,30/Jul/10 11:48;fmeschbe;This can be considered fixed.,16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,
Config property to disable NIO use in http.bundle doesn't work,FELIX-2398,12466551,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,brucej,brucej,09/Jun/10 10:16,08/Feb/11 09:46,14/Mar/19 02:47,08/Jan/11 01:00,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"In Felix-870 (https://issues.apache.org/jira/browse/FELIX-870) a property was added to disable the use of NIO by the jetty embedded http server. This config property no longer works. From Rob Walker:

""Just grepping the source code, and I think this property was in the original felix/http.jetty bundle but may not have made it across to the new felix/http bundle.""",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-08 01:00:15.967,,,no_permission,,,,,,,,,,,40471,,,Tue Feb 08 09:46:43 UTC 2011,,,,,,0|i0apzz:,60485,,,,,,,,"08/Jan/11 01:00;fmeschbe;Fixed in Rev. 1056579

Add configuration properties to set whether NIO is to be used for HTTP(S):
   org.apache.felix.http.nio - (boolean) whether to use NIO for HTTP or not, default is true
   org.apache.felix.https.nio - (boolean) whether to use NIO for HTTPS or not, default is to use
         the value of the org.apache.felix.http.nio property

Does that suite your need ?",08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,,,
Servlets that are automatically unregistered should not be destroyed,FELIX-2394,12466312,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,maguro,maguro,07/Jun/10 05:36,08/Feb/11 09:46,14/Mar/19 02:47,09/Jan/11 03:18,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"Servlets that are automatically unregistered, when their registering bundles are uninstalled, should not be destroyed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-07 06:10:30.25,,,no_permission,,,,,,,,,,,40462,,,Tue Feb 08 09:46:41 UTC 2011,,,,,,0|i0aq3r:,60502,,,,,,,,"07/Jun/10 06:10;fmeschbe;Why ?

IMHO a servlet which is unregistered must be destroyed to comply with the Servlet API contract.

And it doesn't matter why the servlet is unregistered, either because the Http Service is going away or the registering bundle is going away without explicitly unregistering the servlet or the servlet is explicitly unregistered.","07/Jun/10 06:19;gnt;If the HTTP service is going away, the servlet should not be unregistered i i think, becomes it may become unusable and cause troubles when the service comes again.","07/Jun/10 06:27;maguro;Section 102.10.3.4

If the bundle which performed the registration is stopped or otherwise
""unget""s the Http Service without calling unregister then Http Service must
automatically unregister the registration. However, if the registration was
for a servlet, the destroy method of the servlet will not be called in this case
since the bundle may be stopped. unregister must be explicitly called to
cause the destroy method of the servlet to be called. This can be done in the
BundleActivator.stop method of the bundle registering the servlet.",07/Jun/10 08:00;fmeschbe;Thanks for the clarification ... Obviously I did not read that statement closely enough.,09/Jan/11 03:18;fmeschbe;Fixed in Rev. 1056877,08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,
Felix framework uses a Java5 method,FELIX-2392,12466180,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,pierre.bourret,pierre.bourret,04/Jun/10 12:38,04/Jun/10 18:11,14/Mar/19 02:47,04/Jun/10 13:54,framework-2.0.5,,,,,,,,,,framework-3.0.0,,,,Framework,,,,,,,0,,,,,,"The Felix framework uses the String.contains(CharSequence) method that is NOT part of the OSGi minimum EE. This result in a failure when launching Felix in Java 1.4 and lower EE (such as Mika).

org.apache.felix.framework.Felix.java:3699
    if (toRet.contains(""${pom""))

should, by example, be replaced by
    if (toRet.indexOf(""${pom"") >= 0)

(sorry, no patch quickly available ;)","Linux Ubuntu i386, OpenMika VM 1.4.6",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-04 13:54:38.546,,,no_permission,,,,,,,,,,,56367,,,Fri Jun 04 18:11:19 UTC 2010,,,,,,0|i1atev:,271231,,,,,,,,"04/Jun/10 13:54;rickhall;This has already been fixed in trunk and will be part of the 3.0 release, but thanks for reporting it. Please try the snapshot releases. Close this bug if you are satisfied. Thanks.","04/Jun/10 15:18;pierre.bourret;I've tested the snapshot version of Felix ; it seems that the provided bundle-repository and Gogo shell both uses non-OSGi Minimum methods, so it crashes too (see the trace hereafter). But when removing/replacing them by the classic shell, it works !

The framework itself can run on OSGi/Minimum EE, but the main distribution (the one i've tested) now requires higher EE.

Should a new issue be created ?
Closing this one as errors are no more related to the framework.



Stack trace provided for informational puposes only
------------------------------------------------------------------------------
using snapshot org.apache.felix.main.distribution-2.1.0-20100531-223333-3


ERROR: Error starting file:/home/bourretp/Projects/Experiments/felix-framework-2.1.0-SNAPSHOT/bundle/org.apache.felix.bundlerepository-1.6.2.jar (org.osgi.framework.BundleException: Activator start error in bundle org.apache.felix.bundlerepository [1].)
java.lang.ExceptionInInitializerError
	at org.apache.felix.bundlerepository.impl.DataModelHelperImpl.getVersion(DataModelHelperImpl.java:878)
	at org.apache.felix.bundlerepository.impl.DataModelHelperImpl.populate(DataModelHelperImpl.java:520)
	at org.apache.felix.bundlerepository.impl.LocalResourceImpl.initialize(LocalResourceImpl.java:55)
	at org.apache.felix.bundlerepository.impl.LocalResourceImpl.<init>(LocalResourceImpl.java:38)
	at org.apache.felix.bundlerepository.impl.SystemRepositoryImpl.<init>(SystemRepositoryImpl.java:40)
	at org.apache.felix.bundlerepository.impl.RepositoryAdminImpl.<init>(RepositoryAdminImpl.java:67)
	at org.apache.felix.bundlerepository.impl.Activator.start(Activator.java:70)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:633)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1828)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1750)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1168)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
Caused by: java.lang.ClassNotFoundException: SystemClassLoader couldn't find java.util.regex.Pattern
	at wonka.vm.SystemClassLoader.findClass(SystemClassLoader.java:220)
	at wonka.vm.SystemClassLoader.loadClass(SystemClassLoader.java:373)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:255)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:255)
	at org.apache.felix.utils.version.VersionCleaner.<clinit>(VersionCleaner.java:29)
	at org.apache.felix.utils.version.VersionCleaner.<clinit>(VersionCleaner.java:29)
	at org.apache.felix.bundlerepository.impl.DataModelHelperImpl.getVersion(DataModelHelperImpl.java:878)
	at org.apache.felix.bundlerepository.impl.DataModelHelperImpl.populate(DataModelHelperImpl.java:520)
	at org.apache.felix.bundlerepository.impl.LocalResourceImpl.initialize(LocalResourceImpl.java:55)
	at org.apache.felix.bundlerepository.impl.LocalResourceImpl.<init>(LocalResourceImpl.java:38)
	at org.apache.felix.bundlerepository.impl.SystemRepositoryImpl.<init>(SystemRepositoryImpl.java:40)
	at org.apache.felix.bundlerepository.impl.RepositoryAdminImpl.<init>(RepositoryAdminImpl.java:67)
	at org.apache.felix.bundlerepository.impl.Activator.start(Activator.java:70)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:633)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1828)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1750)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1168)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
ERROR: Error starting file:/home/bourretp/Projects/Experiments/felix-framework-2.1.0-SNAPSHOT/bundle/org.apache.felix.gogo.runtime-0.5.0-SNAPSHOT.jar (org.osgi.framework.BundleException: Activator start error in bundle org.apache.felix.gogo.runtime [3].)
java.lang.ExceptionInInitializerError
	at org.apache.felix.gogo.runtime.activator.Activator.start(Activator.java:55)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:633)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1828)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1750)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1168)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
Caused by: java.lang.NullPointerException
	at java.lang.Class.desiredAssertionStatus(Class.java:764)
	at org.apache.felix.gogo.runtime.threadio.ThreadIOImpl.<clinit>(ThreadIOImpl.java:28)
	at org.apache.felix.gogo.runtime.threadio.ThreadIOImpl.<clinit>(ThreadIOImpl.java:28)
	at org.apache.felix.gogo.runtime.activator.Activator.start(Activator.java:55)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:633)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1828)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1750)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1168)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)",04/Jun/10 15:18;pierre.bourret;Tested ! OK,"04/Jun/10 17:29;rickhall;There was a specific decision to move to Gogo, even though it depends on Java5, because it is more of a development tool and likewise the distro is a development distro, not intended necessarily for production. For those people still requiring less than Java5 for development, they should just use the older shell bundles as you have done.

However, I do not believe that OBR should be using Java5 classes/methods since it is not intended purely for development purposes.","04/Jun/10 17:51;gnt;{code}
Caused by: java.lang.ClassNotFoundException: SystemClassLoader couldn't find java.util.regex.Pattern
{code}

This looks weird, as java.util.regex.Pattern should be available on JDK 1.4.
","04/Jun/10 18:11;pierre.bourret;The Pattern class is available is the JRE/JDK 1.4, but is neither in the OSGi minimum EE not in the OSGi foundation profile (both based, AFAIK, on Java 1.3). The VM  I use only provides one of these two EE (I don't know exactly which one ;) and so fails to load the bundle repository bundle.

So the bundle repository do not use Java5, but it needs more than a standard OSGi EE. As it limits its use on limited/embedded platforms, I think an (minor;) issue should be opened for it, but it's only a suggestion...",,,,,,,,,,,,,,,,,,,,,
WebConsole Config Manager problem,FELIX-2390,12466168,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,04/Jun/10 08:51,19/Dec/16 17:23,14/Mar/19 02:47,04/Jun/10 08:53,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,"When showing configurations for editing the WebConsole ignores the fact that MetaTypeInformation.getObjectClassDefinition() might throw an exception.

This would happen quire rarely, but still, if such error occurs, the Web Console will stop rendering the configuration. So, in that case all other configurations, following the currently handled one will be ignored. 

If that error happens at the first configuration that is being processed, then no configuration will be shown.",,,,,,,,,,,,,,,FELIX-3694,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56369,,,2010-06-04 08:51:04.0,,,,,,0|i0vtd3:,183730,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
registerServlet() throws NPE,FELIX-2387,12466112,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,maguro,maguro,03/Jun/10 18:13,08/Feb/11 09:46,14/Mar/19 02:47,21/Sep/10 08:00,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"registerServlet() throws NPE when passed a null for servlet.  It should throw an IllegalArgumentException.

java.lang.NullPointerException
	at org.apache.felix.http.base.internal.handler.ServletHandler.init(ServletHandler.java:55)
	at org.apache.felix.http.base.internal.handler.HandlerRegistry.addServlet(HandlerRegistry.java:65)
	at org.apache.felix.http.base.internal.service.HttpServiceImpl.registerServlet(HttpServiceImpl.java:97)
	at org.papoose.tck.http.BaseHttpServiceImplTest.testRegisterNullServlet(BaseHttpServiceImplTest.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.injectContextAndInvoke(CallableTestMethodImpl.java:143)
	at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.call(CallableTestMethodImpl.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at org.ops4j.pax.exam.rbc.internal.RemoteBundleContextImpl.remoteCall(RemoteBundleContextImpl.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)
	at sun.rmi.transport.Transport$1.run(Transport.java:159)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:637)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-04 18:53:25.305,,,no_permission,,,,,,,,,,,40554,,,Tue Feb 08 09:46:42 UTC 2011,,,,,,0|i0aqiv:,60570,,,,,,,,04/Jun/10 18:53;srs;This will probably be true for registerFilter too. Will put this to fix in 2.0.6.,21/Sep/10 08:00;cziegeler;Added a null check in registerServlet and registerFilter in revision 999263,08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,,
Bundles are restarted during start level change,FELIX-2383,12466078,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,prange,prange,03/Jun/10 11:25,04/Jun/10 21:02,14/Mar/19 02:47,04/Jun/10 21:02,framework-2.0.5,,,,,,,,,,framework-3.0.0,,,,Framework,,,,,,,0,file_install,restart,shutdown,,,"When shutting down felix, some bundles get started again during shutdown: Can be reproduced like this:

install felix in a fresh directory.
Put configadmin-1.2.4, shell-1.4.0 and fileinstall-3.0.0 in bundle directory.
Put pax-logging-api-1.5 and pax-logging-service-1.5 in load directory.
Put a .cfg file to configure logging in load directory.

Start felix.
Stop felix.

The log output shows that bundles are stopped, and the started again. Felix outputs IllegalStateExceptions: Zipfile is closed during shutdown.

[DEBUG, 06/03-13:17:49, FelixDispatchQueue                                          , framework                     ] BundleEvent STOPPED
[INFO , 06/03-13:17:49, FelixStartLevel                                             , Activator                     ] Disabling SLF4J API support.
[INFO , 06/03-13:17:49, FelixStartLevel                                             , Activator                     ] Disabling Jakarta Commons Logging API support.
[INFO , 06/03-13:17:49, FelixStartLevel                                             , Activator                     ] Disabling Log4J API support.
[INFO , 06/03-13:17:49, FelixStartLevel                                             , Activator                     ] Disabling Avalon Logger API support.
[INFO , 06/03-13:17:49, FelixStartLevel                                             , Activator                     ] Disabling JULI Logger API support.
[DEBUG, 06/03-13:17:49, FelixDispatchQueue                                          , pax-logging-service           ] BundleEvent STARTED     <--- HERE **********
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , configadmin                   ] Scheduling task Thread[Configuration Updater,5,main]
[INFO , 06/03-13:17:49, fileinstall-load                                            , Activator                     ] Enabling SLF4J API support.
[INFO , 06/03-13:17:49, fileinstall-load                                            , Activator                     ] Enabling Jakarta Commons Logging API support.
[INFO , 06/03-13:17:49, fileinstall-load                                            , Activator                     ] Enabling Log4J API support.
[INFO , 06/03-13:17:49, fileinstall-load                                            , Activator                     ] Enabling Avalon Logger API support.
[INFO , 06/03-13:17:49, fileinstall-load                                            , Activator                     ] Enabling JULI Logger API support.
[DEBUG, 06/03-13:17:49, FelixDispatchQueue                                          , pax-logging-api               ] BundleEvent STARTED
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , configadmin                   ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixDispatchQueue                                          , configadmin                   ] BundleEvent STOPPED
[DEBUG, 06/03-13:17:49, FelixDispatchQueue                                          , compendium                    ] BundleEvent STOPPED
[DEBUG, 06/03-13:17:49, FelixDispatchQueue                                          , remote                        ] BundleEvent STOPPED
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , shell                         ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixDispatchQueue                                          , shell                         ] BundleEvent STOPPED
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , fileinstall                   ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixStartLevel                                             , fileinstall                   ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixDispatchQueue                                          , fileinstall                   ] BundleEvent STOPPED
[DEBUG, 06/03-13:17:49, FelixShutdown                                               , framework                     ] ServiceEvent UNREGISTERING
[DEBUG, 06/03-13:17:49, FelixShutdown                                               , framework                     ] ServiceEvent UNREGISTERING


java.lang.IllegalStateException: zip file closed
	at java.util.zip.ZipFile.ensureOpen(ZipFile.java:403)
	at java.util.zip.ZipFile.getEntry(ZipFile.java:148)
	at java.util.jar.JarFile.getEntry(JarFile.java:206)
	at org.apache.felix.framework.util.JarFileX.getEntry(JarFileX.java:61)
	at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:120)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1781)
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:758)
	at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:61)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1733)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at org.apache.felix.framework.ModuleImpl.getClassByDelegation(ModuleImpl.java:674)
	at org.apache.felix.framework.ServiceRegistrationImpl$ServiceReferenceImpl.isAssignableTo(ServiceRegistrationImpl.java:470)
	at org.apache.felix.framework.util.Util.isServiceAssignable(Util.java:224)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:848)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3623)
	at org.apache.felix.framework.Felix.access$000(Felix.java:39)
	at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:667)
	at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:124)
	at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:129)
	at org.apache.felix.framework.PackageAdminActivator.stop(PackageAdminActivator.java:44)
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:683)
	at org.apache.felix.framework.Felix$SystemBundleActivator.run(Felix.java:4168)
	at java.lang.Thread.run(Thread.java:619)




If i put the pax-logging bundles in the bundle directory, felix shuts down clean","Ubuntu 10.04, Windows server",,,,,,,,,,,,,,,,,,,03/Jun/10 13:38;prange;org.ops4j.pax.logging.cfg;https://issues.apache.org/jira/secure/attachment/12446249/org.ops4j.pax.logging.cfg,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-06-03 13:21:27.806,,,no_permission,,,,,,,,,,,56373,,,Fri Jun 04 21:02:09 UTC 2010,,,,,,0|i0vwnj:,184263,,,,,,,,"03/Jun/10 13:21;rickhall;It is not clear to me why you think the framework is restarting a bundle. From the stack trace it is just delivering a service event which causes a class load that fails because the associated bundle JAR file has already been closed. I am not sure why this is happening like this, since the framework should stop every bundle first, so it doesn't seem like there should be any listeners at this point. So, that could still be a bug.",03/Jun/10 13:28;rickhall;Can you should me what I should put in my .cfg file?,"03/Jun/10 13:37;prange;The reason i suspect this is because the output from the logfiles states ""BundleEvent STARTED""  (I marked it: <-- HERE at the right side of the log output"") during the sutdown.",03/Jun/10 13:38;prange;.cfg file for pax logging,"03/Jun/10 13:48;rickhall;Ok, sorry, I didn't see that. In that case, I'd assume that File Install is restarting the bundle during framework shutdown. I will have to look into a way of preventing this. Not that long ago we changed the start level to not actually reflect the changed start level until after the start level was completely changed (as per the spec), this likely opened a window to allow File Install to restart bundles during shutdown.

I don't use PAX Logging, so a specific example of what the .cfg file should look like would be helpful.",03/Jun/10 14:03;prange;I attached a .cfg file you can use,"03/Jun/10 14:17;rickhall;Sorry, apparently I'm a little out of it this morning. :-)

Is this something you can reproduce on the trunk build? I can't seem to reproduce it, although I do believe there is an issue here. I have a patch for trunk (for framework 3.0), but it would be nice to know if it was reproducible on trunk so I can see if the patch actually addresses the issue.

We have snapshot of the new framework binary distro in the snapshot repository, which should make it easy for you to test:

https://repository.apache.org/content/groups/snapshots-group/org/apache/felix/org.apache.felix.main.distribution/2.1.0-SNAPSHOT/","03/Jun/10 15:18;prange;I tried with the build from 05 / 30, but i observed the same behaviour.",03/Jun/10 15:22;prange;Disregard. It seems like it is fixed in the latest 2.1.0-SNAPSHOT. ,"03/Jun/10 15:49;rickhall;Well, technically, I don't think it is fixed, but since it is related to threading, maybe the timing has changed or some other locking behavior has changed and that impacted the behavior. Can you reproduce the error in framework 2.0.5? If so, I will create a patched version of it for you to test instead, just to make sure my patch does the correct thing. Thanks.",03/Jun/10 15:54;prange;I can reproduce the error in 2.0.5.,03/Jun/10 16:15;prange;The patch you sent me works. At least i am not seeing the reported behavior.,"03/Jun/10 16:18;rickhall;Ok, great. I will apply a similar patch to trunk, so it gets included in the 3.0.0 release. Thanks.",04/Jun/10 21:02;rickhall;Closing this since the reported confirmed the fix.,,,,,,,,,,,,,
Deadlock in Felix Shell implementation,FELIX-2378,12465855,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,alexberger,alexberger,01/Jun/10 11:55,01/Jun/10 15:18,14/Mar/19 02:47,01/Jun/10 14:55,shell-1.4.2,,,,,,,,,,shell-1.4.3,,,,Shell,,,,,,,0,,,,,,"The class org.apache.felix.shell.impl.Activator$ShellServiceImpl makes heavy use of synchronized methods which synchronized on the ShellServiceImpl itself. This causes a deadlock if a refresh/resolve (PackageAdmin) cycle is initiated using the shell and some Commands are about to be removed from the OSGi service registry (as a result of the refresh/resolve).

This happens because executeCommand locks the ShellServiceImpl instance and later on when the PackageAdmin indirectly triggers the removal of some registered Commands ShellServiceImpl.removeCommand(...) will try to lock the same ShellServiceImpl instance which is still locked by the executeCommand.

I have created a patch for org.apache.felix.shell.impl.Activator (see Attachment) for a possible solution of this problem.","Felix Framework Version 2.0.5
SunOS castor 5.10 Generic_138888-06 sun4u sparc SUNW,Sun-Fire-V890
java version ""1.6.0_12""
Java(TM) SE Runtime Environment (build 1.6.0_12-b04)
Java HotSpot(TM) Server VM (build 11.2-b01, mixed mode)",,,,,,,,,,,,,,,,,,,01/Jun/10 11:57;alexberger;Activator.patch;https://issues.apache.org/jira/secure/attachment/12446017/Activator.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-06-01 14:29:00.213,,,no_permission,,,,,,,,,,,56376,,,Tue Jun 01 15:18:38 UTC 2010,,,,,,0|i0vzdz:,184706,,,,,,,,01/Jun/10 11:57;alexberger;Patch for org.apache.felix.shell.impl.Activator which used more fine grained locking to avoid deadlock.,"01/Jun/10 14:29;rickhall;Applied patch with a few minor modifications. Please close if you are satisfied, thanks.","01/Jun/10 14:36;rickhall;On second thought, I think I will address this a different way.","01/Jun/10 14:55;rickhall;Since I saw some other minor concurrency issues, I decided to convert shell to use the ServiceTracker which I believe will also address your deadlock issues. Please close this issue if you are satisfied with the result. Thanks.","01/Jun/10 15:18;alexberger;Ok. Works perfectly now, no deadlocks anymore :-)

Thank you very much for the quick bugfix.
",,,,,,,,,,,,,,,,,,,,,,
Access to internal data structures for delayed and service factory components not thread safe,FELIX-2370,12465710,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,29/May/10 14:48,16/Aug/10 12:11,14/Mar/19 02:47,29/May/10 15:14, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,The DelayedComponentManager (supporting delayed components) and ServiceFactoryComponentManager (supporting service factory components) internall keep track of using bundles in a Set or Map. Access to this Set or Map is not synchronize which may cause data structure corruption and operation failures.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56381,,,Mon Aug 16 12:11:56 UTC 2010,,,,,,0|i0vxc7:,184374,,,,,,,,"29/May/10 15:14;fmeschbe;For the delayed component manager replace set of using bundles by a simple counter and a simple lock; The set of bundles is not used and thus just overhead. For the service factory manager, synchronize access to the map. Additionally make two fields final in the AbstractComponentManager.

Implemented in Rev. 949401",16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
DM/ Service start method is invoked even if an extra required dependency is unavailable,FELIX-2369,12465701,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,pderop,pderop,29/May/10 09:32,10/May/11 08:34,14/Mar/19 02:47,11/Jun/10 07:05,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"I define two extra dependencies D1 and D2 from my Service's init method. 
D1 is optional/available, and specified with a callback.
D2 is required/unavailable, and specified in autoconfig mode.

The issue is that my service's start/stop methods are called, even if D2 is not there.
I will attach a test case for this issue (which might be related to the other FELIX2344 issue ?).
",,,,,,,,,,,,,,,,,,,,29/May/10 09:36;pderop;FELIX2369_ExtraDependencyTest.java;https://issues.apache.org/jira/secure/attachment/12445837/FELIX2369_ExtraDependencyTest.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-10 08:34:01.844,,,no_permission,,,,,,,,,,,56382,,,Tue May 10 08:34:01 UTC 2011,,,,,,0|i0vy33:,184495,,,,,,,,29/May/10 09:36;pderop;added testcase for this issue.,"29/May/10 09:54;pderop;I forgot to mention that the optional dependency callback method is also invoked before the start() method, while it should always be invoked after the ""start"" callback.
But this might be a side effect caused by the current issue ?



","11/Jun/10 07:05;pderop;Fixed in revisions 953572/953573.

Now, all extra dependencies defined in init methods are buffered, until the init() method returns. And after, we then calculate the state changes. This avoid to start the service when a first dependency is available, while further added dependencies are not.",10/May/11 08:34;marrs;Part of the 3.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,
Avoiding property substitution by escaping does not remove escape character,FELIX-2366,12465631,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,rodehav,rodehav,28/May/10 08:54,17/Mar/15 07:03,14/Mar/19 02:47,28/May/10 09:30,fileinstall-3.0.0,,,,,,,,,,fileinstall-3.0.2,,,,File Install,,,,,,,0,,,,,,"To avoid property substitution, an escape character was introduced in version 3.0.0 of File Install. The idea is that if I want to send the configuration value

  ${propkey}

to my application without property substitution to take place, I can escape the START_DELIM (${) and STOP_DELIM (}) with a backslash as follows:

  $\{propkey\}

However, when doing this the escape character is not removed from the string. The reason is as follows:

The method of interest is substVars in class org.apache.felix.fileinstall.internal.Util. The logic tries to find matching DELIM_START (${) and DELIM_STOP (}). When you escape either of these (by specifying a backslash before ""${"" and/or ""}""), the logic will never find matching DELIM_START and DELIM_STOP which causes the method to immediately return without performing property substitution. The logic at the end of the method (that removes the backslashes) is never reached.

A workarount is to add an unnecessary property at the end of the value just to make sure some property substitution will take place since then the logic at the end of the substVars() method (that removes the escape character) will be reached. Thus, this works:

  $\{propkey\}${#}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-28 09:30:51.803,,,no_permission,,,,,,,,,,,56385,,,Mon Jun 20 19:06:16 UTC 2011,,,,,,0|i0vs8v:,183549,,,,,,,,"28/May/10 09:30;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Util.java
	M	fileinstall/src/test/java/org/apache/felix/fileinstall/internal/UtilTest.java
Committed r949136
","20/Jun/11 19:06;eg.trab;should this work in Felix File Install 3.1.10 ?

is there another way to disable substitution 
or not to replace with empty strings if the (system) property isn't found?

(http://felix.apache.org/site/apache-felix-file-install.html)

thx",,,,,,,,,,,,,,,,,,,,,,,,,
extension bundle cannot load class from embed jar,FELIX-2356,12465330,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,xuhuisheng,xuhuisheng,25/May/10 03:13,05/Jun/10 04:43,14/Mar/19 02:47,28/May/10 22:55,framework-2.0.5,,,,,,,,,,framework-3.0.0,,,,Framework,,,,,,,0,,,,,,"I try to use extension bundle to export additional package.  These additional package should put into the extension bundle.

If I put these package inline the extension bundle, then everything is all right.
If I put these package as embed jar and refer the embed jar from Bundle-ClassPath, then the other bundle cannot find these package.  I will get ClassNotException.","Window XP, JDK-1.5, maven-2.2.1",,,,,,,,,,,,,,,,,,,25/May/10 03:16;xuhuisheng;mavensample.zip;https://issues.apache.org/jira/secure/attachment/12445412/mavensample.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-05-28 22:55:23.095,,,no_permission,,,,,,,,,,,56389,,,Sat Jun 05 04:43:19 UTC 2010,,,,,,0|i0vxbz:,184373,,,,,,,,25/May/10 03:16;xuhuisheng;enter host directory and type mvn test will reproduce the scenario.  Thank you.,28/May/10 22:55;karlpauls;Fixed in trunk. This will be part of the upcomming 3.0 release. Thanks.,29/May/10 01:38;xuhuisheng;Thank you very much.  Where could I get the SNAPSHOT of current trunk?  I want to have a try.  Thanks again.,"05/Jun/10 04:43;xuhuisheng;testcase passed, thanks.",,,,,,,,,,,,,,,,,,,,,,,
DM/ ResourceAdapter NPE,FELIX-2348,12464787,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,pderop,pderop,18/May/10 12:15,10/May/11 08:31,14/Mar/19 02:47,18/May/10 15:52,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"(this issue concerns Dependency manager in the trunk)

When declaring a ResourceAdapter and a Resource Provider, I always get the following NPE:

Invocation of 'add' failed. - java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.felix.dm.impl.InvocationUtil.invokeMethod(InvocationUtil.java:37)
        at org.apache.felix.dm.impl.InvocationUtil.invokeCallbackMethod(InvocationUtil.java:12)
        at org.apache.felix.dm.impl.dependencies.DependencyBase.invokeCallbackMethod(DependencyBase.java:35)
        at org.apache.felix.dm.impl.dependencies.ServiceDependencyImpl.invokeAdded(ServiceDependencyImpl.java:406)
        at org.apache.felix.dm.impl.dependencies.ServiceDependencyImpl.addedService(ServiceDependencyImpl.java:398)
        at org.apache.felix.dm.impl.tracker.ServiceTracker$Tracked.customizerAdded(ServiceTracker.java:1086)
        at org.apache.felix.dm.impl.tracker.AbstractTracked.trackAdding(AbstractTracked.java:286)
        at org.apache.felix.dm.impl.tracker.AbstractTracked.track(AbstractTracked.java:232)
        at org.apache.felix.dm.impl.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:957)
        at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:878)
        at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
        at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
        at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3587)
        at org.apache.felix.framework.Felix.access$000(Felix.java:40)
        at org.apache.felix.framework.Felix$1.serviceChanged(Felix.java:625)
        at org.apache.felix.framework.ServiceRegistry.registerService(ServiceRegistry.java:90)
        at org.apache.felix.framework.Felix.registerService(Felix.java:2711)
        at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:252)
        at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:230)
        at org.apache.felix.dm.impl.dependencies.ResourceDependencyImpl.start(ResourceDependencyImpl.java:78)
        at org.apache.felix.dm.impl.ServiceImpl.startTrackingRequired(ServiceImpl.java:629)
        at org.apache.felix.dm.impl.ServiceImpl.access$100(ServiceImpl.java:51)
        at org.apache.felix.dm.impl.ServiceImpl$2.run(ServiceImpl.java:142)
        at org.apache.felix.dm.impl.SerialExecutor$1.run(SerialExecutor.java:47)
        at org.apache.felix.dm.impl.SerialExecutor.scheduleNext(SerialExecutor.java:84)
        at org.apache.felix.dm.impl.SerialExecutor.execute(SerialExecutor.java:68)
        at org.apache.felix.dm.impl.ServiceImpl.calculateStateChanges(ServiceImpl.java:222)
        at org.apache.felix.dm.impl.ServiceImpl.start(ServiceImpl.java:333)
        at org.apache.felix.dm.DependencyManager.add(DependencyManager.java:94)
        at org.apache.felix.dm.impl.AbstractDecorator.added(AbstractDecorator.java:93)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.felix.dm.impl.InvocationUtil.invokeMethod(InvocationUtil.java:37)
        at org.apache.felix.dm.impl.InvocationUtil.invokeCallbackMethod(InvocationUtil.java:12)
        at org.apache.felix.dm.impl.dependencies.DependencyBase.invokeCallbackMethod(DependencyBase.java:35)
        at org.apache.felix.dm.impl.dependencies.ResourceDependencyImpl.invokeAdded(ResourceDependencyImpl.java:163)
        at org.apache.felix.dm.impl.dependencies.ResourceDependencyImpl.added(ResourceDependencyImpl.java:111)
        at org.apache.felix.dm.test.ResourceAdapterTest$ResourceProvider.add(ResourceAdapterTest.java:139)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.felix.dm.impl.InvocationUtil.invokeMethod(InvocationUtil.java:37)
        at org.apache.felix.dm.impl.InvocationUtil.invokeCallbackMethod(InvocationUtil.java:12)
        at org.apache.felix.dm.impl.dependencies.DependencyBase.invokeCallbackMethod(DependencyBase.java:35)
        at org.apache.felix.dm.impl.dependencies.ServiceDependencyImpl.invokeAdded(ServiceDependencyImpl.java:406)
        at org.apache.felix.dm.impl.dependencies.ServiceDependencyImpl.addedService(ServiceDependencyImpl.java:393)
        at org.apache.felix.dm.impl.tracker.ServiceTracker$Tracked.customizerAdded(ServiceTracker.java:1086)
        at org.apache.felix.dm.impl.tracker.AbstractTracked.trackAdding(AbstractTracked.java:286)
        at org.apache.felix.dm.impl.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183)
        at org.apache.felix.dm.impl.tracker.ServiceTracker.open(ServiceTracker.java:342)
        at org.apache.felix.dm.impl.tracker.ServiceTracker.open(ServiceTracker.java:276)
        at org.apache.felix.dm.impl.dependencies.ServiceDependencyImpl.start(ServiceDependencyImpl.java:353)
        at org.apache.felix.dm.impl.ServiceImpl.startTrackingOptional(ServiceImpl.java:609)
        at org.apache.felix.dm.impl.ServiceImpl.bindService(ServiceImpl.java:545)
        at org.apache.felix.dm.impl.ServiceImpl.access$400(ServiceImpl.java:51)
        at org.apache.felix.dm.impl.ServiceImpl$7.run(ServiceImpl.java:172)
        at org.apache.felix.dm.impl.SerialExecutor$1.run(SerialExecutor.java:47)
        at org.apache.felix.dm.impl.SerialExecutor.scheduleNext(SerialExecutor.java:84)
        at org.apache.felix.dm.impl.SerialExecutor.access$000(SerialExecutor.java:33)
        at org.apache.felix.dm.impl.SerialExecutor$1.run(SerialExecutor.java:50)
        at org.apache.felix.dm.impl.SerialExecutor.scheduleNext(SerialExecutor.java:84)
        at org.apache.felix.dm.impl.SerialExecutor.execute(SerialExecutor.java:68)
        at org.apache.felix.dm.impl.ServiceImpl.calculateStateChanges(ServiceImpl.java:222)
        at org.apache.felix.dm.impl.ServiceImpl.start(ServiceImpl.java:333)
        at org.apache.felix.dm.DependencyManager.add(DependencyManager.java:94)
        at org.apache.felix.dm.test.ResourceAdapterTest.testBasicResourceAdapter(ResourceAdapterTest.java:75)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.injectContextAndInvoke(CallableTestMethodImpl.java:130)
        at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.call(CallableTestMethodImpl.java:101)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.ops4j.pax.exam.rbc.internal.RemoteBundleContextImpl.remoteCall(RemoteBundleContextImpl.java:80)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)
        at sun.rmi.transport.Transport$1.run(Transport.java:159)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
        at org.osgi.framework.FrameworkUtil$FilterImpl$Parser.<init>(FrameworkUtil.java:1212)
        at org.osgi.framework.FrameworkUtil$FilterImpl.newInstance(FrameworkUtil.java:377)
        at org.osgi.framework.FrameworkUtil.createFilter(FrameworkUtil.java:76)
        at org.apache.felix.framework.BundleContextImpl.createFilter(BundleContextImpl.java:102)
        at org.apache.felix.dm.test.ResourceAdapterTest$ResourceProvider.add(ResourceAdapterTest.java:128)
        ... 98 more

(I will commit a testcase for this issue)",,,,,,,,,,,,,,,,,,,,18/May/10 12:24;pderop;FELIX-2348.patch;https://issues.apache.org/jira/secure/attachment/12444785/FELIX-2348.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-05-18 15:52:42.93,,,no_permission,,,,,,,,,,,56394,,,Tue May 10 08:31:07 UTC 2011,,,,,,0|i0vzg7:,184716,,,,,,,,"18/May/10 12:18;pderop;committed the corresponding testcase in dependencymanager/test/src/test/java/org/apache/felix/dm/test/FELIX2348_ResourceAdapterTest.java
","18/May/10 12:24;pderop;attached a proposed patch, which registers the original resource filter into actual resource dependency.",18/May/10 15:52;marrs;I took a different approach than the patch for fixing this as it should be allowed for resource handlers to be registered without a filter property. That simply means they will be invoked for every resource and is used inside certain resource dependencies that are linked to a specific resource (doing the actual filtering in code instead of in the LDAP like filter).,"18/May/10 18:03;pderop;Ok, I see.

But in this case, should the filter parameter be removed from the two DependencyManager.createResourceAdapter() methods ?
(because now, these filter parameters are not used)
In this case, I will also have to remove them from the corresponding annotations.

","19/May/10 06:38;pderop;oops, sorry Marcel, ignore my last question because I was wrong when saying that the filter was not used anymore by  DependencyManager.createResourceAdapter() methods(): it is still used by the resource dependency applied on the ResourceAdapterImpl object.
",10/May/11 08:31;marrs;Part of the 3.0.0 release.,,,,,,,,,,,,,,,,,,,,,
"mvn bundle:clean removes all, even the existing resources",FELIX-2346,12464772,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,loris,loris,18/May/10 08:34,11/Oct/11 17:09,14/Mar/19 02:47,24/Jun/11 19:19,,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"When launching mvn bundle:clean, my local repository.xml file is fully emptied. However, it contained some valid resources. When debugging I can see that the computed file URL are wrong:

At line 149 ->  File file = new File( localRepoPath, value );
The File constructor expects a pathname when the variable 'value' is an URI. So the expression file.exists() always returns false.","Maven Bundle Plugin 2.1.0
Apache Maven 3.0-beta-1 (r935667; 2010-04-19 19:00:39+0200)
Java version: 1.6.0_20
Java home: /usr/lib/jvm/java-6-sun-1.6.0.20/jre
Default locale: fr_FR, platform encoding: UTF-8
OS name: ""linux"" version: ""2.6.24-27-server"" arch: ""i386"" Family: ""unix""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-24 19:19:54.633,,,no_permission,,,,,,,,,,,56396,,,Fri Jun 24 19:19:54 UTC 2011,,,,,,0|i0vy8f:,184519,,,,,,,,24/Jun/11 19:19;mcculls;Fixed in r1139413,,,,,,,,,,,,,,,,,,,,,,,,,,
"DM / callback method is not invoked when an extra dependency is defined within an ""init"" component method.",FELIX-2344,12464663,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,pderop,pderop,17/May/10 10:04,10/May/11 08:34,14/Mar/19 02:47,11/Jun/10 06:59,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"This issue applies to the trunk version of dependency manager.

So, it seems that when a component defines custom dependencies from its ""init"" method, then such extra dependencies only support auto configuration mode, and not callbacks.
I have attached to this issue a sample maven project which reproduces the problem:

In the sample, a ""MyClient"" component is defining (from its init() method) an extra required dependency over a ""MyService"" service, using a ""bind"" callback. So, the start() method is invoked, but the bind method has not been called.
",,,,,,,,,,,,,,,,,,,,28/May/10 08:52;pderop;FELIX2344_ExtraDependencyWithCallbackTest.java;https://issues.apache.org/jira/secure/attachment/12445760/FELIX2344_ExtraDependencyWithCallbackTest.java,17/May/10 10:05;pderop;sample.instancebound.tgz;https://issues.apache.org/jira/secure/attachment/12444658/sample.instancebound.tgz,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-05-25 07:43:24.418,,,no_permission,,,,,,,,,,,56398,,,Tue May 10 08:34:29 UTC 2011,,,,,,0|i0vy2n:,184493,,,,,,,,"17/May/10 12:44;pderop;Just committed a testcase for this issue here:

dependencymanager/test/src/test/java/org/apache/felix/dm/test/FELIX2344_ExtraDependencyWithCallback.java","25/May/10 07:43;marrs;Follow up: this only happens when the dependency is required. I'll extend the test case to demonstrate that, and work on a fix.","27/May/10 09:02;pderop;The last commit from core/src/main/java/org/apache/felix/dm/impl/dependencies/ServiceDependencyImpl.java (revision r948403)
seems to partially resolve the problem.

Indeed, if an extra/required dependency is defined in the Service's init method, but if the dependency is not available at the time the dependency is added, then
the bind() method seems to not be called, while the start method is called.",27/May/10 22:06;marrs;Added a test case and a fix for that scenario.,"28/May/10 08:52;pderop;Marcel,
The last commit seems to resolve every callback issues.
But, now, in my environment, I went further on and I think I came across another issue: this time it concerns optional/autoconfig dependencies:
So, if you define an optional/autoconfig extra dependency from the init() method, then the autoconfig field seems to not be injected with a NullObject.

I have attached to this issue a modified version of the testcase (see the ""sc5"" consumer).
","11/Jun/10 06:59;pderop;Committed a fix in revision 953572/953573, which seems to resolve the problem.
Added new testcase FELIX2344_ExtraDependencyWithAutoConfigTest.java for testing extra/autoconfig dependencies.
Modified FELIX2344_ExtraDependencyWithCallbackTest.java in order to check that optional dependency callbacks are invoked after the start method call.",10/May/11 08:34;marrs;Part of the 3.0.0 release.,,,,,,,,,,,,,,,,,,,,
Problem in the Configuration Render,FELIX-2338,12464416,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,13/May/10 06:12,19/Dec/16 17:23,14/Mar/19 02:47,04/Jun/10 07:23,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,"With some JVM implementation like Skelmir CEE-J, the configurations will not be printed correctly and the server will generate internal server error.

In the log there is a long stack trace:
--- cut here --
Wed, 12 May 2010 13:42:40 GMT  8    ERROR          [HTTP] Problem while making answer to request /system/console/config/Configurations.nfo from client address null
java.lang.StackOverflowError
	at java/io/PrintWriter.write (Unknown Source, bco=33)
	at java/io/PrintStream.write (Unknown Source, bco=88)
	at java/io/PrintStream.writeInternal (Unknown Source, bco=20)
	at java/io/PrintStream.print (Unknown Source, bco=5)
	at java/io/PrintStream.println (Unknown Source, bco=9)
	at org/apache/felix/webconsole/internal/misc/ConfigurationRender$HtmlConfigurationWriter.write (ConfigurationRender.java:508)
	at java/io/PrintWriter.write (Unknown Source, bco=25)
	at org/apache/felix/webconsole/internal/misc/ConfigurationRender$HtmlConfigurationWriter.writeFiltered (ConfigurationRender.java:540)
	at org/apache/felix/webconsole/internal/misc/ConfigurationRender$HtmlConfigurationWriter.write (ConfigurationRender.java:510)
	at java/io/PrintWriter.write (Unknown Source, bco=25)
	at org/apache/felix/webconsole/internal/misc/ConfigurationRender$HtmlConfigurationWriter.writeFiltered (ConfigurationRender.java:540)
	at org/apache/felix/webconsole/internal/misc/ConfigurationRender$HtmlConfigurationWriter.write (ConfigurationRender.java:510)
	at java/io/PrintWriter.write (Unknown Source, bco=25)
	at org/apache/felix/webconsole/internal/misc/ConfigurationRender$HtmlConfigurationWriter.writeFiltered (ConfigurationRender.java:540)
	at org/apache/felix/webconsole/internal/misc/ConfigurationRender$HtmlConfigurationWriter.write (ConfigurationRender.java:510)
	at java/io/PrintWriter.write (Unknown Source, bco=25)
--- cut here --

These are the first few lines only. Obviously the different implementation of PrintWriter makes an endless loop between methods.

I'm attaching a patch that:
1. fixes the above problem
2. optimizes the writer by escaping the symbols on the fly one by one (writing char by char is not a problem, because the Servet output is already buffered)
3. because of 2 it doesn't escape the string /using WebConsoleUtil.escapeHtml()/ and then write escaped one; and doesn't create a new StringBuffer + String objects. This reduces the used temporary memory and should have also influence on performance.",Skelmir CEE-J 4 VM,,,,,,,,,,,,,,,,,,,13/May/10 06:13;v_valchev;config-render-skelmir.patch;https://issues.apache.org/jira/secure/attachment/12444376/config-render-skelmir.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56403,,,Fri Jun 04 07:23:41 UTC 2010,,,,,,0|i0vrrr:,183472,,,,,,,,04/Jun/10 07:23;v_valchev;patch commited,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle.loadClass() for system bundle doesn't obey boot delegation,FELIX-2335,12464361,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,12/May/10 16:16,13/May/10 19:52,14/Mar/19 02:47,13/May/10 19:52,framework-2.0.5,,,,,,,,,,framework-3.0.0,,,,Framework,,,,,,,0,,,,,,"When calling Bundle.loadClass() on the system bundle, we only allow access to packages the system bundle is configured to export. I believe this is the technically correct thing to do. However, the current approach also filters out requests to packages that should be properly boot delegated, such as java.lang.System. This should be modified to obey boot delegation, like a normal bundle.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56406,,,Thu May 13 19:52:55 UTC 2010,,,,,,0|i07h6v:,41551,,,,,,,,12/May/10 17:55;rickhall;I've committed a fix for this.,13/May/10 19:52;rickhall;Not sure why the resolution is 'INVALID',13/May/10 19:52;rickhall;Change resolution to 'FIXED',,,,,,,,,,,,,,,,,,,,,,,,
SCR says that my component is registered twice,FELIX-2325,12463775,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,sauthieg,sauthieg,05/May/10 15:01,16/Aug/10 12:11,14/Mar/19 02:47,06/May/10 07:29, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"I've got the following exception when SCR starts my component:

2010-05-05 15:00:58,389 : LoggerService.log : [org.ow2.easybeans.proxy.factory.RemoteCallFactory] Cannot register Component
org.osgi.service.component.ComponentException: The component name 'org.ow2.easybeans.proxy.factory.RemoteCallFactory' has already been registered.
	at org.apache.felix.scr.impl.ComponentRegistry.registerComponent(ComponentRegistry.java:291)
	at org.apache.felix.scr.impl.BundleComponentActivator.loadDescriptor(BundleComponentActivator.java:247)
	at org.apache.felix.scr.impl.BundleComponentActivator.initialize(BundleComponentActivator.java:147)

My XML declaration files is the following:
<component xmlns=""http://www.osgi.org/xmlns/scr/v1.1.0"">



  <implementation class=""org.ow2.easybeans.proxy.factory.RemoteCallFactory"" />



  <service>

    <provide interface=""javax.naming.spi.ObjectFactory"" />

    <provide interface=""org.ow2.easybeans.proxy.factory.RemoteCallFactory"" />

  </service>



</component>

As you can see, there is no 'name' attribute (The spec says that by default the implementation classname is used).
I'm sure that the component is not present in 2 bundles, so the default name should be unique.

As a workaround, if I set the 'name' attribute, everything works well, but as the XML schema (and the spec) says that it is optional, I think that SCR should support that use case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-05 17:02:34.396,,,no_permission,,,,,,,,,,,56416,,,Mon Aug 16 12:11:53 UTC 2010,,,,,,0|i0vxfr:,184390,,,,,,,,"05/May/10 17:02;fmeschbe;Thanks for reporting this issue.

You are right, that components without the name attribute must be supported. There is kind of a rece condition, though, in that the component name is needed for reservation purposes in the component registry before the ComponentMetadata.validate method actually sets the field to the implementation class name. As a consequence the name is not really reserved and later actual registration fails, because the name entry is missing in the registry.

Fixed in Rev. 941383 by having the ComponentMetadata.getName() method to always fall back to returning the implementation class name if the component name has not been explicitly declared.","06/May/10 07:22;fmeschbe;Oops, committed to the 1.4 tag instead of trunk.

Have to revert this and commit to trunk instead. Sorry.",06/May/10 07:29;fmeschbe;Commited the fix to trunk in Rev. 941594 and reverted in the scr-1.4 tag in Rev. 941595,16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,
Unbind method should not be called during the invalidation process if the invalidation does not come from a service departure,FELIX-2323,12463672,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,04/May/10 14:40,27/May/10 06:02,14/Mar/19 02:47,04/May/10 15:37,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,The invalidation / stopping process is calling unbind method which is not correct as the process does not necessary comes from a service departure.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56418,,,Thu May 27 06:02:52 UTC 2010,,,,,,0|i0vzfb:,184712,,,,,,,,"04/May/10 15:37;clement.escoffier;Fixed in trunk.
Unbind methods are no more called when the invalidation is not triggered by the service departure.",27/May/10 06:02;clement.escoffier;Version released.,,,,,,,,,,,,,,,,,,,,,,,,,
BundleException type should be properly set when installing a duplicate bundle,FELIX-2321,12463608,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,03/May/10 21:37,06/Jun/10 21:45,14/Mar/19 02:47,11/May/10 19:33,framework-2.0.5,,,,,,,,,,framework-3.0.0,,,,Framework,,,,,,,0,,,,,,"From the mailing list:

Hi all,

When you try to install a duplicate bundle, an instance of
BundleException is thrown but its field ""type"" is kept to UNEXPECTED.
Could you set this one to ""DUPLICATE_BUNDLE_ERROR"" to help the diagnostic?

Regards,
Loris
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56420,,,Tue May 11 19:33:57 UTC 2010,,,,,,0|i0vz7j:,184677,,,,,,,,11/May/10 19:33;rickhall;Committed a patch to fix this.,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible NPE for jars with null Manifest,FELIX-2318,12463560,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,sahoo,sahoo,03/May/10 14:23,16/May/17 08:41,14/Mar/19 02:47,26/Oct/10 07:02,,,,,,,,,,,fileinstall-3.1.0,,,,File Install,,,,,,,0,,,,,,"JarFile.getManifest() can return null, so caller must check return value for null-ness to avoid NPE. I see two such occurrences in fileinstall:

DirectoryWatcher.java:
    private Bundle installOrUpdateBundle(
        String bundleLocation, BufferedInputStream is, long checksum)
        throws IOException, BundleException
    {
        is.mark(256 * 1024);
        JarInputStream jar = new JarInputStream(is);
        Manifest m = jar.getManifest();
        String sn = m.getMainAttributes().getValue(Constants.BUNDLE_SYMBOLICNAME);
...

BundleTransformer.java:
            Manifest m = jar.getManifest();
            if (m.getMainAttributes().getValue(new Attributes.Name(""Bundle-SymbolicName"")) != null)
            ...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-04 15:19:27.762,,,no_permission,,,,,,,,,,,40506,,,Tue May 16 08:41:20 UTC 2017,,,,,,0|i0aq5j:,60510,,,,,,,,"04/May/10 15:19;nlmarco;Yesterday, I stumbled exactly over this NPE, which was not very developer friendly and forced me to dig quite deep into it (decompiling & debugging).

I'm not sure whether I can agree to Sahoo's suggestion to return a value in this case. I mean, if there is no proper MANIFEST, it is not a valid OSGi bundle and thus the method installOrUpdateBundle(...) cannot really return anything meaningful. Or am I overlooking anything?

Anyway, for me (and everyone else not being aware of the MANIFEST.MF being required at the very beginning of the JAR) a simple exception with a precise error message would have been most helpful. I therefore recommend to simply add sth. like this:

if (m == null)
  throw new BundleException(
    String.format(
      ""The bundle %s does not have a META-INF/MANIFEST.MF! ""+
      ""Make sure, META-INF and MANIFEST.MF are the first 2 entries in your JAR!"",
      bundleLocation
    )
  );","26/Oct/10 07:02;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/BundleTransformer.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r1027387
","16/May/17 02:46;andy.wu;I have a question about this , I didn't find the limit of META-INF/MANIFEST.MF must be the first file in the jar  , but java.util.jar.JarInputStream in jdk seems to make such assumption, but java.util.jar.JarFile can get MANIFEST.MF even if it is not the first file , so felix could use this class to get manifest information to avoid NPE. What do you think about this ? please let me know. thanks.","16/May/17 06:56;gnt;In this case, having to use JarInputStream would force the use of an intermediary file to copy the content of the input stream so that it can be opened using a JarFile.  Supporting that correctly might be doable in a proper way though, and if you're willing to provide a patch, please raise a new issue and attach a patch or PR, I'd be happy to help reviewing it.","16/May/17 08:41;andy.wu;thanks for your response , I will send a pr to github.",,,,,,,,,,,,,,,,,,,,,,
fileinstall does not recognize jars if it does not have Bundle-SymbolicName and Bundle-Version,FELIX-2313,12463436,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,sahoo,sahoo,30/Apr/10 13:49,03/May/10 14:12,14/Mar/19 02:47,01/May/10 06:53,karaf-1.4.0,,,,,,,,,,fileinstall-3.0.0,,,,File Install,,,,,,,0,,,,,,"FileInstall does not recognize jar files that have only Bundle-SymbolicName. I see the following code in BundleTransformer.java:
           if (m.getMainAttributes().getValue(new Attributes.Name(""Bundle-SymbolicName"")) != null
               && m.getMainAttributes().getValue(new Attributes.Name(""Bundle-Version"")) != null)

 Why is this the case? Earlier fileinstall used to be able install anything that's a jar file.

Questions: Why does FileInstall care about existence of any kind of manifest entries? Is not every jar file technically an OSGi bundle? So, it should be sufficient to just have the following check:

try {
   new JarFile(artifact).close();
} catch(Exception e){
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-30 15:38:24.832,,,no_permission,,,,,,,,,,,56427,,,Mon May 03 14:12:41 UTC 2010,,,,,,0|i0vznb:,184748,,,,,,,,"30/Apr/10 15:38;gnt;Not sure what that would mean to install a jar which is not an osgi bundle.
This must have changed in version 2.0.0.
From this version, you have custom installers if you want to install artifacts that are not osgi bundles, such as wars, blueprint configuration files, etc...
If we were to bypass the check and install all jars, that would remove this feature.

From OSGI r4, an osgi bundle must have at least the following manifest entries:  Bundle-ManifestVersion and Bundle-SymbolicName.  Supporting OSGi r3 bundles is not mandatory for a given framework.  See section 3.5 of the OSGi core spec.","30/Apr/10 16:29;sahoo;Let's at least remove the restriction around Bundle-Version which is not mandatory for r4 bundles.

I also don't know why we can't support installation of plain jars as bundles without breaking transformation support for wars and things like that. That can be achieved by giving custom ArtifactListeners a chance to look at the artifacts before BundleTransformer. Any way, this can be addressed separately.","01/May/10 06:53;gnt;Sending        fileinstall/src/main/java/org/apache/felix/fileinstall/internal/BundleTransformer.java
Transmitting file data .
Committed revision 939930.

Please open a new issue to discuss the other problem.",03/May/10 14:12;sahoo;I will open a separate bug to discuss around manifest requirements while detecting bundles.,,,,,,,,,,,,,,,,,,,,,,,
Potential NPE when a service has abruptly in the smart proxies,FELIX-2309,12463341,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,29/Apr/10 15:14,27/May/10 06:02,14/Mar/19 02:47,29/Apr/10 15:58,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,A null check is missing in the smart proxies.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56430,,,Thu May 27 06:02:51 UTC 2010,,,,,,0|i0vxfj:,184389,,,,,,,,"29/Apr/10 15:58;clement.escoffier;Fixed in the trunk.
Inject a nullable to avoid the crash.",27/May/10 06:02;clement.escoffier;Version released.,,,,,,,,,,,,,,,,,,,,,,,,,
getService is called during the unregistration of a service,FELIX-2308,12463340,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,29/Apr/10 15:11,27/May/10 06:02,14/Mar/19 02:47,29/Apr/10 16:00,iPOJO-1.6.0,,,,,,,,,,iPOJO-1.8.0,,,,iPOJO,,,,,,,0,,,,,,"To support custom object creation policy, iPOJO called getService despite the service is leaving. This throws an IllegalStateException.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56431,,,Thu May 27 06:02:51 UTC 2010,,,,,,0|i0vwev:,184224,,,,,,,,29/Apr/10 16:00;clement.escoffier;Fixed in trunk.,27/May/10 06:02;clement.escoffier;Version released.,,,,,,,,,,,,,,,,,,,,,,,,,
Servlets should not be immediate,FELIX-2305,12463089,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,27/Apr/10 09:27,12/Mar/14 08:55,14/Mar/19 02:47,27/Apr/10 09:41,maven-scr-plugin-1.4.2,scr annotations 1.2.0,,,,,,,,, maven-scr-plugin-1.4.4, scr annotations 1.3.0,,,SCR Tooling,,,,,,,0,,,,,,"Currently if the sling servlet annotation is used, this component is marked as immediate by default - this is not necessary and increases startup time. therefore it should not be set at all",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56434,,,Tue Apr 27 09:41:46 UTC 2010,,,,,,0|i0vznr:,184750,,,,,,,,27/Apr/10 09:41;cziegeler;Changed in revision 938378,,,,,,,,,,,,,,,,,,,,,,,,,,
Fileinstall should add entries for directories when creating JARs,FELIX-2302,12463029,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,mart,mart,26/Apr/10 15:22,17/Mar/15 07:03,14/Mar/19 02:47,26/Apr/10 16:24,fileinstall-2.0.8,,,,,,,,,,fileinstall-3.0.0,,,,File Install,,,,,,,0,,,,,,"When creating JAR files from a directory, Fileinstall currently only creates JAR entries for files.
It should create JAR entries for the directories too.",,,,,,,,,,,,,,,,,,,,26/Apr/10 15:27;mart;mkdirentries.diff;https://issues.apache.org/jira/secure/attachment/12442859/mkdirentries.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-04-26 16:24:41.691,,,no_permission,,,,,,,,,,,56437,,,Mon Apr 26 16:24:41 UTC 2010,,,,,,0|i0vr9r:,183391,,,,,,,,"26/Apr/10 15:27;mart;Trivial patch attached.

Mailing list thread:
""Fileinstall does not create directory entries""
http://www.mail-archive.com/users@felix.apache.org/msg07327.html","26/Apr/10 16:24;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Util.java
Committed r938112
",,,,,,,,,,,,,,,,,,,,,,,,,
OBR web console plugin doesn't show some bundles as installed,FELIX-2299,12462805,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,justinedelson,justinedelson,22/Apr/10 18:32,16/Aug/10 12:13,14/Mar/19 02:47,11/Aug/10 08:16,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.2,,,,Web Console,,,,,,,0,,,,,,"I'll post some screenshots. I have OBR, EventAdmin, ConfigAdmin, and DS installed. But on the OBR web console page, only EventAdmin has an ""Installed Version""",,,,,,,,,,,,,,,,,,,,22/Apr/10 18:34;justinedelson;bundlelist.jpg;https://issues.apache.org/jira/secure/attachment/12442610/bundlelist.jpg,22/Apr/10 18:33;justinedelson;screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12442609/screenshot-1.jpg,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-11 08:16:15.128,,,no_permission,,,,,,,,,,,56440,,,Mon Aug 16 12:13:26 UTC 2010,,,,,,0|i0vxfz:,184391,,,,,,,,19/May/10 13:15;justinedelson;had the wrong component selected,"11/Aug/10 08:16;fmeschbe;I cannot exactly tell when, but it looks like this has already been fixed and works for me for the current trunk.",16/Aug/10 12:13;fmeschbe;Apache Felix Web Console 3.1.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,
Component annotation: getConfigurationFactory should be named configurationFactory,FELIX-2298,12462754,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,cziegeler,cziegeler,22/Apr/10 10:01,12/Mar/14 08:55,14/Mar/19 02:47,22/Apr/10 10:33,maven-scr-plugin-1.4.2,scr annotations 1.2.0,,,,,,,,, maven-scr-plugin-1.4.4, scr annotations 1.3.0,,,SCR Tooling,,,,,,,0,,,,,,"The getConfigurationFactory has been wrongly named at the component annotation, it should rather be named configurationFactory

We should deprecate the old one and add a new one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56441,,,Thu Apr 22 10:33:04 UTC 2010,,,,,,0|i1asun:,271140,,,,,,,,22/Apr/10 10:33;cziegeler;Added new attribute in 936755,,,,,,,,,,,,,,,,,,,,,,,,,,
Unsynchronized access to map of component instances may block the system,FELIX-2289,12462254,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,fmeschbe,fmeschbe,fmeschbe,16/Apr/10 14:24,16/Aug/10 12:11,14/Mar/19 02:47,22/Apr/10 07:36, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The ComponentFactoryImpl class manages all factory component instance in an internal IdentityHashMap. This map is synchronized thus all access in a multi-thread environment must be synchronized.

Most access is synchronized. The problematic one not synchronized is when a new entry is added. Making this call unsynchronized causes the map to get corrupt and will lead to endless loops when reading it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-16 14:35:52.977,,,no_permission,,,,,,,,,,,56449,,,Mon Aug 16 12:11:52 UTC 2010,,,,,,0|i0vwhb:,184235,,,,,,,,"16/Apr/10 14:35;cathodion;How about using http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ConcurrentHashMap.html

Wouldn't that solve the issue?","16/Apr/10 14:40;fmeschbe;Yes, but I don't want to get Java 5 dependent with the Declarative Services implementation (yet).",16/Apr/10 14:54;fmeschbe;Committed a fix in Rev. 934927 synchronizing access to the maps (and making local copy if appropriate),"22/Apr/10 07:27;pderop;Hello Felix,

Does your last commit fully resolve this issue ? 
I ask this because the issue is still ""in progress"" and I wonder if I can incorporate your fix in our product now, or if I should wait until the issue is fully resolved ?

thanks","22/Apr/10 07:36;fmeschbe;Yes the commit fixes the issue. Wanted to keep it open until I get a confirmation (which I failed to follow up on).

So, this can be resolved fixed.","22/Apr/10 07:46;pderop;Thanks, Felix.",16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,
Felix SCR API problem/misunderstanding,FELIX-2288,12462220,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,fmeschbe,v_valchev,v_valchev,16/Apr/10 07:25,16/Aug/10 12:11,14/Mar/19 02:47,03/Aug/10 10:25,scr-1.0.0,scr-1.0.2,scr-1.0.4,scr-1.0.6,scr-1.0.8,scr-1.2.0, scr-1.4.0,webconsole-3.1.0,,, scr-1.6.0,webconsole-3.1.2,,,Declarative Services (SCR),Web Console,,,,,,0,,,,,,"I've been playing with the Components plugin of the Web Console and it work perfectly with the Felix SCR implementation. When I switched to ProSyst/Equinox implementation (they are basically the same) I found a small problem.

When I disable a component, it's ID becomes -1 and I cannot enable it anymore. As long as I disable components all their IDs becomes -1.

I opened the OSGi r4.2 specification to see if there is a reason for this behaviour. The JavaDoc for ComponentConstants states for the component ID, that 
""The value of this property is assigned by the Service Component Runtime when a component configuration is created.""

In part 112.6 Component Properties, the specification says, that 'component.id' property is always added by the SCR but for ""Each component configuration"".

When a component is disabled or uninstalled, there is no configuration - it's just a component definition. So the SCR is not required to assign ID.


As for the Web Console we can easily fix the problem by using the pair bundle + component name for identification, instead of ID. However, since Apache SCR API is becoming recommended OSGi API, it would be better to define a mature and compatible API.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-16 15:46:42.699,,,no_permission,,,,,,,,,,,56450,,,Mon Aug 16 12:11:51 UTC 2010,,,,,,0|i0vwf3:,184225,,,,,,,,"16/Apr/10 15:46;fmeschbe;Yes, I agree (and this may well be an issue in the Apache Felix DS implementation).

In fact our DS implementation actually assigns the ID when the component configuration (file) is read and internal data structure is created. And over the lifecycle of the data structure, the ID is fixed -- this is probably fundamentally wrong.

So, yes, the API must be clarified for the Component.getId() method to only return a positive number if the component is enabled (or active).
And, yes, the Felix DS implementation should be fixed
And, yes, using the component name if the id is not valid sounds good to me.","03/Aug/10 08:56;fmeschbe;Fixed handling of the component ID in the Declarative Services bundle in Rev. 981772: The ID is now only generated and assigned to a component while the component is enabled. To still access components without an assigned ID, ScrService gets a new method getComponent(String name) to access components by their name.

This also increases the version of the SCR management API to 1.6 (Rev. 981782)","03/Aug/10 09:48;fmeschbe;Fixed the Web Console in Rev. 981795 by adding support for components whose component ID is not assigned. Instead of the component ID a combination of the component name and the service.pid property assigned to the component is used. If the service.pid property is not assigned to the component, just the component name is used.",03/Aug/10 10:25;fmeschbe;This works for me now; thus resolving this issue.,16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,
Webcosole: showing all resources from a repository doesn't work,FELIX-2287,12462140,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,v_valchev,reto,reto,15/Apr/10 13:09,16/Aug/10 12:13,14/Mar/19 02:47,11/Aug/10 08:54,webconsole-3.0.0,webconsole-3.1.0,,,,,,,,,webconsole-3.1.2,,,,Web Console,,,,,,,0,,,,,,"In the letter choice pressing ""?"" has not the expected result, replacing the character '-' with a '*' in the uri does.","felix 2.0.4, webconsole 3.0.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-11 07:33:47.578,,,no_permission,,,,,,,,,,,56451,,,Mon Aug 16 12:13:25 UTC 2010,,,,,,0|i1asv3:,271142,,,,,,,,"11/Aug/10 07:33;fmeschbe;The search box is used to filter the OBR resources using an OSGi Filter expression.

Entering a single string not containing an equals sign is translated into the following Filter expression (where <word> is the word entered into the box):

    (|(presentationame=*<word>*)(symbolicname=*<word>*))

So the expected way to show all resources would be to enter nothing but just click the ""Search"" button. This, though, does not work but instead causes an INTERNAL SERVER ERROR because the generated filter ends up being ""(&)"" which of course is a syntactically incorrect filter.

Issues to fix:
   * an empty query should result in a valid filter (or no filter at all to just list all resources)
   * invalid filter syntax entered by the user must be properly handled",11/Aug/10 07:34;fmeschbe;Also to be included in 3.1.2,"11/Aug/10 08:10;fmeschbe;Improved Handling of queries on the OBR page in Rev. 984322:
  - accept empty query to select all resources
  - print error message if filter string is invalid
  - fix WebConsoleUtil.urlDecode to return an empty string if
      the value is an empty string (to be inline with the
      URLDecode.decode methods).
  - add resource symbolic name in parens after presentation
      name to differentiate resources with the same presentation
      name but different symbolic names","11/Aug/10 08:13;fmeschbe;Valentin, may I assign this issue once again to you to add BG translations for the following two new I18N properties:

   ## Tooltip for the search box on the OBR page
   obr.action.search.description=Enter word contained in bundle presentation and/or symbolic \
               name or a valid OSGi Filter Expression

   ## Prefix to error messages if the filterexpression is invalid
   obr.error=Error Filtering Resources

You may resolve the issue afterwards. Thanks alot.
",11/Aug/10 08:54;v_valchev;added bg. translations in rev. 984344,16/Aug/10 12:13;fmeschbe;Apache Felix Web Console 3.1.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,
Various rendering issues with IE,FELIX-2286,12462133,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,v_valchev,v_valchev,v_valchev,15/Apr/10 10:58,19/Dec/16 17:23,14/Mar/19 02:47,15/Apr/10 12:34,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,"Component, Config Manager, Services - all these plugins are not correctly rendered when IE is used.",,,,,,,,,,,,,,,,,,,,15/Apr/10 10:59;v_valchev;ASF.LICENSE.NOT.GRANTED--components-problem.png;https://issues.apache.org/jira/secure/attachment/12441817/ASF.LICENSE.NOT.GRANTED--components-problem.png,15/Apr/10 10:59;v_valchev;ASF.LICENSE.NOT.GRANTED--config-problems.png;https://issues.apache.org/jira/secure/attachment/12441818/ASF.LICENSE.NOT.GRANTED--config-problems.png,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56452,,,Thu Apr 15 12:34:06 UTC 2010,,,,,,0|i0vqvz:,183329,,,,,,,,15/Apr/10 12:01;v_valchev;fixed component and services plugins,15/Apr/10 12:34;v_valchev;fixed config plugin too,,,,,,,,,,,,,,,,,,,,,,,,,
Bundles Plugin doesn't render the bundles name in IE,FELIX-2285,12462119,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,v_valchev,v_valchev,v_valchev,15/Apr/10 08:43,19/Dec/16 17:23,14/Mar/19 02:47,15/Apr/10 08:46,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,,"IE6.0, IE7.0",,,,,,,,,,,,,,FELIX-2286,,,,,15/Apr/10 08:43;v_valchev;ASF.LICENSE.NOT.GRANTED--missing_bundle_names.jpg;https://issues.apache.org/jira/secure/attachment/12441805/ASF.LICENSE.NOT.GRANTED--missing_bundle_names.jpg,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56453,,,Thu Apr 15 08:46:02 UTC 2010,,,,,,0|i0vqun:,183323,,,,,,,,15/Apr/10 08:46;v_valchev;Fix committed in SVN,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle id order affects fragment resolution success,FELIX-2281,12462002,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,jspeton,jspeton,14/Apr/10 00:53,30/Apr/10 20:36,14/Mar/19 02:47,26/Apr/10 18:05,framework-2.0.4,,,,,,,,,,framework-3.0.0,,,,Framework,,,,,,,0,,,,,,"Create two host bundles and two fragments with the following headers:

> cat host1.man
Bundle-ManifestVersion: 2
Bundle-SymbolicName: host
Export-Package: foo
Bundle-Version: 1

> cat host2.man
Bundle-ManifestVersion: 2
Bundle-SymbolicName: host
Export-Package: foo
Bundle-Version: 2

> cat frag1.man
Bundle-ManifestVersion: 2
Bundle-SymbolicName: fragment
Bundle-Version: 1
Fragment-Host: host; bundle-version=""[1,1]""
Export-Package: bar

> cat frag2.man
Bundle-ManifestVersion: 2
Bundle-SymbolicName: fragment
Bundle-Version: 2
Fragment-Host: host; bundle-version=""[2,2]""
Export-Package: bar

When frag1 is loaded before frag2, it successfully resolves to host1.  When frag1 is loaded after frag2, it fails to resolve (although the first attempt at resolution does not display an error):

-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (2.0.4)
[   1] [Active     ] [    1] Apache Felix Bundle Repository (1.4.3)
[   2] [Active     ] [    1] Apache Felix Shell Service (1.4.2)
[   3] [Active     ] [    1] Apache Felix Shell TUI (1.4.1)
[  59] [Installed  ] [    1] host (1)
[  60] [Installed  ] [    1] host (2)
[  61] [Installed  ] [    1] fragment (2)
[  62] [Installed  ] [    1] fragment (1)
-> resolve 62
-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (2.0.4)
[   1] [Active     ] [    1] Apache Felix Bundle Repository (1.4.3)
[   2] [Active     ] [    1] Apache Felix Shell Service (1.4.2)
[   3] [Active     ] [    1] Apache Felix Shell TUI (1.4.1)
[  59] [Resolved   ] [    1] host (1)
[  60] [Installed  ] [    1] host (2)
[  61] [Installed  ] [    1] fragment (2)
[  62] [Installed  ] [    1] fragment (1)
-> resolve 62
WARNING: Unable to resolve bundle 62 (org.osgi.framework.BundleException: Unresolved constraint in bundle fragment [62]: host; (&(bundle-symbolic-name=host)(bundle-version>=1.0.0)(bundle-version<=1.0.0)))
","Mac OS 10.5.8, Java 1.5_22",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-19 18:43:56.854,,,no_permission,,,,,,,,,,,56457,,,Fri Apr 30 20:36:59 UTC 2010,,,,,,0|i0vwn3:,184261,,,,,,,,"19/Apr/10 18:43;rickhall;Verified. I will look into a fix, but it will likely be in the 3.0 release and not a 2.0.x release...unless it is absolutely critical.","26/Apr/10 18:05;rickhall;The routine for attaching fragments was only considering the fragment with the highest version, not the one with the highest matching version. Thus, we'd miss lower versions if there was a higher, non-matching fragment version. This appears to be working in trunk now:

-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (2.1.0.SNAPSHOT)
[   1] [Active     ] [    1] Apache Felix Bundle Repository (1.4.3)
[   2] [Active     ] [    1] Apache Felix Shell Service (1.4.2)
[   3] [Active     ] [    1] Apache Felix Shell TUI (1.4.1)
[   4] [Installed  ] [    1] host (1.0.0)
[   5] [Installed  ] [    1] host (2.0.0)
[   6] [Installed  ] [    1] fragment (2.0.0)
[   7] [Installed  ] [    1] fragment (1.0.0)
-> resolve 7
DEBUG: FRAGMENT WIRE: 7.0 -> hosted by -> 4.0
-> 

Please close if you are satisfied. Thanks for reporting.",26/Apr/10 18:28;jspeton;Thanks!,"30/Apr/10 20:36;rickhall;FYI: There was a logic bug in my patch, it should be fixed now. Deploying new snapshot shortly.",,,,,,,,,,,,,,,,,,,,,,,
Component descriptor reference elements are not ordered,FELIX-2275,12461834,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,stephen.flynn@jftechnology.com,stephen.flynn@jftechnology.com,12/Apr/10 15:42,30/Apr/10 13:07,14/Mar/19 02:47,13/Apr/10 11:54,maven-scr-plugin-1.4.2,,,,,,,,,, maven-scr-plugin-1.4.4,,,,SCR Tooling,,,,,,,0,,,,,,"We use SCR annotations (1.2.0) and the SCR Maven Plug-in (1.4.2) to generate DS 1.1 component descriptors. All works well except for one issue - we cannot find a way to control the order of <reference/> elements in the generated descriptor through the @Reference annotation. A cursory glance suggests that <reference/> elements generated by the plug-in are not ordered in any way.

The order of binding is significant. From the 4.2 Compendium spec....

*112.5.7 Binding Services*

""When binding services, the references are processed in the order in which
they are specified in the component description. That is, target services from
the first specified reference are bound before services from the next specified
reference.""

We can work around this by manually creating descriptors but this is sub-optimal for obvious reasons.

This appears to be caused by capturing references in a HashMap in the class SCRDescriptorGenerator.java. Should probably be a LinkedHashMap instead.",,,,,,,,,,,,,,,,,,,,12/Apr/10 15:45;stephen.flynn@jftechnology.com;ASF.LICENSE.NOT.GRANTED--ExampleComponent.java;https://issues.apache.org/jira/secure/attachment/12441507/ASF.LICENSE.NOT.GRANTED--ExampleComponent.java,13/Apr/10 09:03;stephen.flynn@jftechnology.com;ASF.LICENSE.NOT.GRANTED--FELIX-2275.patch;https://issues.apache.org/jira/secure/attachment/12441599/ASF.LICENSE.NOT.GRANTED--FELIX-2275.patch,12/Apr/10 15:45;stephen.flynn@jftechnology.com;ASF.LICENSE.NOT.GRANTED--serviceComponents.xml;https://issues.apache.org/jira/secure/attachment/12441508/ASF.LICENSE.NOT.GRANTED--serviceComponents.xml,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-04-13 11:54:28.951,,,no_permission,,,,,,,,,,,56463,,,Tue Apr 13 11:54:28 UTC 2010,,,,,,0|i0vxe7:,184383,,,,,,,,12/Apr/10 15:45;stephen.flynn@jftechnology.com;Example annotated component and its generated descriptor showing references in wrong order.,13/Apr/10 09:03;stephen.flynn@jftechnology.com;Patch replacing reference HashMap with LinkedHashMap.,"13/Apr/10 11:54;cziegeler;Thanks for your patch, Steven - I've applied it in revision 933567",,,,,,,,,,,,,,,,,,,,,,,,
404 when plugin is missing,FELIX-2274,12461807,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,12/Apr/10 10:52,19/Dec/16 17:23,14/Mar/19 02:47,15/Apr/10 07:33,,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,"Currently the Web Console generates 404 (page not found) error, when a plugin is missing.

But a plugin developer might devicide to show the plugin, only when all required services are available. If the user already opened the web console, the label for such plugin will be rendered. After that, a required service is unregistered and so is the plugin.

At this point, when the user clicks on the label, the Web Console will generate 404.

IMHO, it's will be better, if the web console simply redirects to the default plugin (bundles).",,,,,,,,,,,,,,,,,,,,13/Apr/10 11:15;v_valchev;ASF.LICENSE.NOT.GRANTED--404.patch;https://issues.apache.org/jira/secure/attachment/12441603/ASF.LICENSE.NOT.GRANTED--404.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-04-12 15:28:40.468,,,no_permission,,,,,,,,,,,56464,,,Thu Apr 15 07:33:41 UTC 2010,,,,,,0|i0vsqv:,183630,,,,,,,,"12/Apr/10 15:28;justinedelson;IMHO, this seems like confusing behavior. If a plugin developer wanted to do this, couldn't they just do it with response.sendRedirect() ?","12/Apr/10 15:56;v_valchev;Well, actually at this point the plugin is not available anymore, so it can't redirect.

And it's not confusing, because at the top, the bundles tab will be rendered as ""selected"".","12/Apr/10 16:07;justinedelson;> Well, actually at this point the plugin is not available anymore, so it can't redirect. 
Hmmm. You said ""a plugin developer might decide to show the plugin..."" so why couldn't the plugin developer choose to show a different servlet? But if you're talking about a plugin registered via SCR or Blueprint, this would be more challenging (although not impossible).

 >And it's not confusing, because at the top, the bundles tab will be rendered as ""selected"". 
Which will result in ""But I asked for the [fill in the blank] plugin!"" And they're going to click on the [fill in the blank] button again... and again... and again...

All I'm suggesting is that you have to have some message to the user.
","12/Apr/10 18:59;v_valchev;Well, you see, the UPnP plugin is visible only when UPnP Service is available. When it's gone - the plugin is also unregistered. This is what I meant for ""device to show the plugin..""

You can also think of other situation:
1. the user opens web console and sees a list of plugins, and among them plugin ""A""
2. while the user looks at the currently opened plugin, as example ""bundles"", the plugin ""A"" is uninstalled
3. although uninstalled, the user still has the plugin ""A"" rendered in the tabs above, because he didn't refresh the content
4. user clicks on plugin ""A""
5. web console generates 404 - because there is no such plugin anymore

it doesn't matter who and how the plugin is unistalled. The point is that the user gets a plain 404 page and cannot navigate to other plugins.

As for the ""[fill in the blank]"" button - it will no longer be there. It is rendered, only when the plugin is available.

Another possibility, is that Web Console generates a page, that says ""plugin A is no longer available, you will be redirected to the default plugin in few seconds"", and after that period the user will get to the default plugin, without need to click anything.
","12/Apr/10 19:08;justinedelson;> Another possibility, is that Web Console generates a page, that says ""plugin A is no longer available, you will be redirected to the default plugin in few 
> seconds"", and after that period the user will get to the default plugin, without need to click anything. 
This is a good solution.","13/Apr/10 11:15;v_valchev;The attached patch instead of sending 404 error, sends the 404 status but also generates an HTML page that forwards to the main webconsole.

The 404 page is localized in English & Bulgarian. Missing German localization.","14/Apr/10 12:46;v_valchev;Patch committed. However no German localization is added. 

Felix, can you add it and mark the issue fixed?",15/Apr/10 07:33;v_valchev;added German localization (10x to my colleagues from Cologne),,,,,,,,,,,,,,,,,,,
SCR plugin shows misleading message,FELIX-2272,12461800,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,12/Apr/10 07:39,19/Dec/16 17:23,14/Mar/19 02:47,15/Apr/10 14:58,,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,"If Declarative Services are not installed the corresponding Tab shows the message ""Apache Felix Declarative Service not installed "" which is misleading because Felix SCR API are recommended by OSGi and other vendors (like Eclipse) might also implement it.

So """"Apache Felix compatible Declarative Service not installed "" or just ""Declarative Service not installed"" would be better.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-12 09:24:28.571,,,no_permission,,,,,,,,,,,56466,,,Thu Apr 15 14:58:45 UTC 2010,,,,,,0|i0vsqn:,183629,,,,,,,,12/Apr/10 09:24;fmeschbe;Agreed.,15/Apr/10 14:58;v_valchev;Fixed in rev. 934436,,,,,,,,,,,,,,,,,,,,,,,,,
OsgiManager servlet should commit response,FELIX-2263,12461511,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,08/Apr/10 09:33,19/Dec/16 17:23,14/Mar/19 02:47,08/Apr/10 09:38,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,"Sometimes a plugin does not generate enough output or sends back an error to the client such that the response gets committed. This might result in the Http Service implementation to think that the OsgiManager servlet was not willing to handle the request.

To prevent this situation, the OsgiManager service() method should commit the response by flushing the response buffer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56475,,,Thu Apr 08 09:38:33 UTC 2010,,,,,,0|i0vrt3:,183478,,,,,,,,08/Apr/10 09:38;fmeschbe;Fixed in Rev. 931850.,,,,,,,,,,,,,,,,,,,,,,,,,,
MemoryUage plugin has incorrect symbolic name,FELIX-2262,12461505,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,08/Apr/10 08:29,16/Aug/10 12:14,14/Mar/19 02:47,08/Apr/10 10:37, webconsole-memoryusage-plugin-1.0.0 ,,,,,,,,,,webconsole-memoryusage-plugin-1.0.2,,,,Web Console,,,,,,,0,,,,,,The symbolic name of the Web Console Memory Usage plugin includes the groupId in addition to the artifactId of the Maven project. This should be fixed to only be the artifactId.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56476,,,Mon Aug 16 12:14:28 UTC 2010,,,,,,0|i0w1p3:,185080,,,,,,,,08/Apr/10 10:37;fmeschbe;Fixed in Rev. 931857.,16/Aug/10 12:14;fmeschbe;Apache Felix Web Console Memory Usage Plugin 1.0.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
On the Servlets page the list of using bundles is not displayed,FELIX-2261,12461500,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,fmeschbe,fmeschbe,08/Apr/10 07:32,19/Dec/16 17:23,14/Mar/19 02:47,08/Apr/10 13:54,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,The list of using bundles per Service is extracted in the ServicesServlet but is not rendered on the client side.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56477,,,Thu Apr 08 08:07:10 UTC 2010,,,,,,0|i0vspj:,183624,,,,,,,,08/Apr/10 07:42;fmeschbe;This is not actually a regression: The using bundles have always been prepared but not rendered,08/Apr/10 08:05;fmeschbe;Fixed in Rev. 931827,"08/Apr/10 08:07;fmeschbe;May I ask you to add a bulgarian translation for the new poperty

     services.usingBundles

on the Services page ?

You may resolve the issue fixed when done.

Thanks alot.",,,,,,,,,,,,,,,,,,,,,,,,
Potential NullPointerException in ServicesServlet.writeJSON(),FELIX-2260,12461499,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,fmeschbe,fmeschbe,08/Apr/10 07:29,19/Dec/16 17:23,14/Mar/19 02:47,08/Apr/10 07:30,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,"The ServicesServlet.writeJSON() method calls the ServicesServlet.getServices() method and does not expect this method to return null. Yet, if no services are registered (which is highly unlikely) null might be returned. The writeJSON() and getStatusLine() methods should be secured against this potential NullPointerException.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56478,,,Thu Apr 08 07:30:42 UTC 2010,,,,,,0|i0vtjj:,183759,,,,,,,,08/Apr/10 07:30;fmeschbe;Fixed in Rev. 931811.,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle sort order is not stored in a cookie anymore,FELIX-2257,12461374,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,cziegeler,cziegeler,07/Apr/10 09:33,19/Dec/16 17:23,14/Mar/19 02:47,14/Apr/10 13:15,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,The former webconsole stored the sort order of the bundle list in a cookie to redisplay the same order whenever the bundle list is opened,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-14 13:15:48.364,,,no_permission,,,,,,,,,,,56481,,,Wed Apr 14 13:15:48 UTC 2010,,,,,,0|i0vthj:,183750,,,,,,,,14/Apr/10 13:15;v_valchev;fixed and committed,,,,,,,,,,,,,,,,,,,,,,,,,,
Some small visual defects in the WebConsole,FELIX-2256,12461373,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,07/Apr/10 09:22,19/Dec/16 17:23,14/Mar/19 02:47,08/Apr/10 13:59,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,07/Apr/10 09:28;v_valchev;bomfix.patch;https://issues.apache.org/jira/secure/attachment/12441014/bomfix.patch,07/Apr/10 13:19;fmeschbe;logo_issue.png;https://issues.apache.org/jira/secure/attachment/12441032/logo_issue.png,07/Apr/10 09:26;v_valchev;visual_bug.JPG;https://issues.apache.org/jira/secure/attachment/12441011/visual_bug.JPG,07/Apr/10 09:26;v_valchev;visual_bug1.JPG;https://issues.apache.org/jira/secure/attachment/12441012/visual_bug1.JPG,07/Apr/10 09:26;v_valchev;visual_bug2.JPG;https://issues.apache.org/jira/secure/attachment/12441013/visual_bug2.JPG,,,,,,,5.0,,,,,,,,,,,,,,,,,,,2010-04-07 12:19:42.398,,,no_permission,,,,,,,,,,,56482,,,Thu Apr 08 13:59:57 UTC 2010,,,,,,0|i0vtjz:,183761,,,,,,,,"07/Apr/10 09:26;v_valchev;These issues are reported by ProSyst testing team.

The first issue I beleive is that InputStreamReader is unable to handle UTF BOM at the beginning of the template files.

The other issues can be easily fixed in the CSS files.","07/Apr/10 09:28;v_valchev;I've attached a patch that would fix the BOM problem.

WDYT?","07/Apr/10 12:19;fmeschbe;The BOM patch sounds like ok. 

According to http://www.unicode.org/faq/utf_bom.html#BOM the BOM is a single fixed character U+FFEF, which should be uniquely encoded in UTF-8 files. Thus I suspect we need only test for this single character instead of other byte variations ?

Somehting like:

   if (string.charAt(0) == '\uFFEF') string = string.substring(1);
","07/Apr/10 12:43;v_valchev;Hmm, i think that we should consider the endiannes so it can also be EFFF
","07/Apr/10 12:48;fmeschbe;Probably not, because UTF-8 is not succeptible to the same kind of endianness as is UTF-16. Thus the character decoder should properly return the correct BOM value (if it returns the BOM value at all)",07/Apr/10 13:13;fmeschbe;In Rev. 931529 fixed an issue with the log image height: If the log provided by a branding plugin is too high it extends into the top navigation area. By setting the img tag size to the height of the #lead <DIV> minus the top padding allows the browser to scale down the image as needed.,07/Apr/10 13:19;fmeschbe;Logo issue fixed by Rev. 931529,"07/Apr/10 13:37;v_valchev;Actually for me - the character is '\uFEFF'.
I'm not quite sure how different VMs are implemented. If they don't return the same value and reverse for some reason the bytes, one switch statement is not quite CPU intensive task and will work in all cases ;)",07/Apr/10 13:45;v_valchev;In Ref. 931546 fixed visual defect 1 & 2 - log & bundles columns,"08/Apr/10 13:59;v_valchev;committed the original patch with the switch - just to make sure that it will work.
",,,,,,,,,,,,,,,,,
fileinstall does not restart bundles when the underlying file is modified,FELIX-2248,12461072,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,gnt,sahoo,sahoo,03/Apr/10 00:00,17/Mar/15 07:04,14/Mar/19 02:47,09/Apr/10 06:04,fileinstall-2.0.8,,,,,,,,,,fileinstall-3.0.0,,,,File Install,,,,,,,0,,,,,,"As I reported earlier in the forum, I found some strange behavior with fileinstall-2.0.8. If I modify a jar in watched directory, fileinstall stops the corresponding bundle and does not restart it until the framework is restarted.

To reproduce this:
Copy a new bundle to watched directory.
Wait for fileinstall to install and start it.
Now modify the bundle jar in watched dir.
You shall see the bundle is either in RESOLVED state or INSTALLED state now depending on whether this bundle participates in class loading or not.",Linux,,,,,,,,,,,,,,,,,,,03/Apr/10 00:01;sahoo;FELIX-2248.patch.txt;https://issues.apache.org/jira/secure/attachment/12440660/FELIX-2248.patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-04-09 06:04:20.221,,,no_permission,,,,,,,,,,,56490,,,Fri Apr 09 06:04:20 UTC 2010,,,,,,0|i0vqxr:,183337,,,,,,,,03/Apr/10 00:01;sahoo;Patch to address the bug. The start level comparison seems wrong.,"09/Apr/10 06:04;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r932264
",,,,,,,,,,,,,,,,,,,,,,,,,
Gogo badly prints empty maps and dictionaries,FELIX-2247,12461015,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,02/Apr/10 12:59,24/May/10 16:17,14/Mar/19 02:47,02/Apr/10 13:05,gogo-0.2.2,,,,,,,,,,gogo-0.4.0,,,,Gogo Runtime,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-24 16:17:46.71,,,no_permission,,,,,,,,,,,56491,,,Mon May 24 16:17:46 UTC 2010,,,,,,0|i0vzpj:,184758,,,,,,,,"02/Apr/10 13:05;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/CommandSessionImpl.java
Committed r930259
",24/May/10 16:17;db82407;close issue prior to next release,,,,,,,,,,,,,,,,,,,,,,,,,
Bundles Printer fails when imports contains range.,FELIX-2244,12460907,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,01/Apr/10 09:38,19/Dec/16 17:23,14/Mar/19 02:47,03/Apr/10 09:57,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,"When a bundle contains import like that:

org.apache.felix.webconsole;version=""[3.0,4.0)""

The bundles printer will throw exception because the parsing code in method:
private boolean isSatisfied( Clause imported, ExportedPackage exported )

always expects that the version is single version and not a range.
In that case an exception is thrown an no information about the package is shown.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-03 09:57:11.604,,,no_permission,,,,,,,,,,,56494,,,Sat Apr 03 09:57:11 UTC 2010,,,,,,0|i0vtkn:,183764,,,,,,,,"03/Apr/10 09:57;fmeschbe;Fixed in Rev. 930501 by assuming a VersionRange instead of a Version for the Import-Package header version attribute.

Note: I use the VersionRange implementation from the framework bundle because the implementation from the utils library has a dependency on Java 1.4 by using regular expression API.",,,,,,,,,,,,,,,,,,,,,,,,,,
"Bundle Plugin 'Find All"" button generates error with Opera",FELIX-2243,12460906,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,01/Apr/10 09:26,19/Dec/16 17:23,14/Mar/19 02:47,02/Apr/10 14:50,webconsole-3.0.0,,,,,,,,,,webconsole-3.1.0,,,,Web Console,,,,,,,0,,,,,,"""405 HTTP method POST is not supported by this URL""

This happens only with Opera and IE, the problem is in the javascript - the click handler must return false.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-02 14:50:59.323,,,no_permission,,,,,,,,,,,56495,,,Fri Apr 02 14:50:59 UTC 2010,,,,,,0|i0vtk7:,183762,,,,,,,,"01/Apr/10 09:28;v_valchev;The fix is committed in the SVN . However I'm not sure if we already release 3.0.0 so I'm leaving ""Fix Version"" empty. Please update it to the correct version.","02/Apr/10 14:50;fmeschbe;Thus I suggest we resolve this issue fixed. And since you committed the fix yourself, I assign the issue to you.",,,,,,,,,,,,,,,,,,,,,,,,,
Memory Usage page non-functional if no heap dumps exist,FELIX-2242,12460782,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,31/Mar/10 07:18,16/Aug/10 12:14,14/Mar/19 02:47,31/Mar/10 07:30, webconsole-memoryusage-plugin-1.0.0 ,,,,,,,,,,webconsole-memoryusage-plugin-1.0.2,,,,Web Console,,,,,,,0,,,,,,"If the heap dump folder does not exist, the Memory Usage plugin page is non-functional because the server sends a corrupt ECMA-Script fragment

      {'files:0,total:0'}

which should really be

      {'files':0,'total':0}

A workaround to this problem is to create the heap dump folder, whose path is displayed in the ""Memory Usage"" panel of the Configuration Status page.

Another option would be to just send a dump POST request, e.g. using curl:

    curl -u user:pass -d command=dump http://localhost:8888/system/console/memoryusage

(note that for the plugin version 1.0.0 the ""-d"" option must be used because multipart form data is not supported, see FELIX-2241)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56496,,,Mon Aug 16 12:14:27 UTC 2010,,,,,,0|i0vxfb:,184388,,,,,,,,31/Mar/10 07:30;fmeschbe;Fixed in Rev. 929407.,16/Aug/10 12:14;fmeschbe;Apache Felix Web Console Memory Usage Plugin 1.0.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
The Memory Usage plugin does not support multipart/form-data POST requests,FELIX-2241,12460781,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,31/Mar/10 07:18,16/Aug/10 12:14,14/Mar/19 02:47,31/Mar/10 07:30, webconsole-memoryusage-plugin-1.0.0 ,,,,,,,,,,webconsole-memoryusage-plugin-1.0.2,,,,Web Console,,,,,,,0,,,,,,The Memory Usage plugin currently only supports url-encoded parameters to POST requests. It would be useful to also support multipart/form-data encoded parameters. This is made easy by the WebConsoleUtil.getParameter method.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56497,,,Mon Aug 16 12:14:27 UTC 2010,,,,,,0|i0vxen:,184385,,,,,,,,31/Mar/10 07:30;fmeschbe;Fixed in Rev. 929407.,16/Aug/10 12:14;fmeschbe;Apache Felix Web Console Memory Usage Plugin 1.0.2 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
Deployment plugin fails with internal server error,FELIX-2235,12460234,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,25/Mar/10 13:47,01/Apr/10 11:50,14/Mar/19 02:47,25/Mar/10 14:48,webconsole-3.0.0,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"The deployment admin API is not exported at all, but the deployment plugin is shown in the web console.
When selected, the server will generate internal server error.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-25 13:56:54.217,,,no_permission,,,,,,,,,,,56503,,,Thu Mar 25 14:09:42 UTC 2010,,,,,,0|i0vzmf:,184744,,,,,,,,"25/Mar/10 13:56;fmeschbe;Hmm, the deployment admin plugin is not active if the API cannot be resolved at web console start time. How can this be reproduced ?","25/Mar/10 14:09;v_valchev;Oops, it works correctly with SUN JDK but ...I've been testing with J9 VM where it actually happens.

Obviously J9 uses lazy resolving for classes, and it loads successfully because the initial dependencies are met. Later, when calling object methods, it will throw exception, because the required class is not available.

Adding :
    private static final String DEPL_SERVICE = DeploymentAdmin.class.getName();

solves the problem. I'll commit the change.",,,,,,,,,,,,,,,,,,,,,,,,,
ConfiguredComponentHolder tracks component enablement but not disablement,FELIX-2233,12460069,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,24/Mar/10 07:56,16/Aug/10 12:11,14/Mar/19 02:47,24/Mar/10 08:16, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The ConfiguredComponentHolder tracks when configured components are enabled as per the general enablement due to the descriptor or by calling the ComponentContext.enableComponent(String) method. This causes future components created as per factory configuration to be automatically enabled.

Conversely disablement is not properly handled causing future components created as per factory configuration to potentially be enabled right away even though they should rather start disabled.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56505,,,Mon Aug 16 12:11:50 UTC 2010,,,,,,0|i0vxev:,184386,,,,,,,,24/Mar/10 08:16;fmeschbe;Resolved in Rev. 926971 setting the internal flag to false upon ComponentContext.disableComponent(String),16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
Event plugin has problems displaying events with properties,FELIX-2232,12460067,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,24/Mar/10 07:33,01/Apr/10 11:51,14/Mar/19 02:47,24/Mar/10 07:34,webconsole-event-plugin-1.0.2,,,,,,,,,,webconsole-event-plugin-1.0.2,,,,Web Console,,,,,,,0,,,,,,"When the event contains properties, the table is not correctly displayed all other events after the one, containing event properties are discarded.

Also, when using the time-line, there is no information what that color means, so a legend should be added.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56506,,,2010-03-24 07:33:11.0,,,,,,0|i0vzlj:,184740,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Errors with services in Lazy bundles,FELIX-2231,12460030,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,amulholl@us.ibm.com,amulholl@us.ibm.com,23/Mar/10 18:47,18/Jun/10 17:32,14/Mar/19 02:47,18/Jun/10 17:32, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Using equinox f/w with felix DS.   Starting many bundles , some of which have Lazy activation policy (including com.ibm.ws.transport.orb, which has 6 services defined).  Sometimes everything starts without error. 

About 1 in 3 times I see these messages for the com.ibm.ws.transport.orb bundle:

Info: OSGI- [23 Mar 2010 14:27:43.531 EDT] BundleEvent RESOLVED Bundle:com.ibm.ws.transport.orb(id=19) {3}
Info: OSGI- [23 Mar 2010 14:27:43.531 EDT] BundleEvent INSTALLED Bundle:com.ibm.ws.transport.orb(id=19) {3}
Exception in thread ""Alpine-CM-Thread-7"" java.lang.NullPointerException
	at org.apache.felix.scr.impl.config.ConfiguredComponentHolder.configurationUpdated(ConfiguredComponentHolder.java:187)
	at org.apache.felix.scr.impl.config.ConfigurationComponentRegistry.configurationEvent(ConfigurationComponentRegistry.java:173)
	at com.ibm.ws.config.cm.internal.ConfigEventDispatcher$1.run(ConfigEventDispatcher.java:89)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:736)
Info: OSGI- [23 Mar 2010 14:27:43.562 EDT] BundleEvent STOPPED Bundle:com.ibm.ws.transport.orb(id=19) {3}

On some other start attempts I see these messages:

Info: OSGI- [19 Mar 2010 15:03:09.647 EDT] BundleEvent RESOLVED Bundle:com.ibm.ws.transport.orb(id=19) {3}
Info: OSGI- [19 Mar 2010 15:03:09.653 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.transport.orb(id=19) ServiceRef:[com.ibm.websphere.channelfw.osgi.ChannelFactoryProvider](id=56, pid=null)
Info: OSGI- [19 Mar 2010 15:03:09.655 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.transport.orb(id=19) ServiceRef:[com.ibm.ws.iiop.transport.internal.EventManager](id=57, pid=null)
Error: OSGI- [19 Mar 2010 15:03:09.661 EDT] [com.ibm.ws.transport.orb] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.transport.orb' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.ORBServiceImpl
OSGI- [19 Mar 2010 15:03:09.661 EDT] [com.ibm.ws.transport.orb] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.transport.orb' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.ORBServiceImpl
Error: OSGI- [19 Mar 2010 15:03:09.676 EDT] [IIOPChannelProvider] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'IIOPChannelProvider' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.IIOPChannelProvider
OSGI- [19 Mar 2010 15:03:09.676 EDT] [IIOPChannelProvider] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'IIOPChannelProvider' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.IIOPChannelProvider
Error: OSGI- [19 Mar 2010 15:03:09.677 EDT] [com.ibm.ws.iiop.transport.internal.EventManager] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.iiop.transport.internal.EventManager' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.transport.internal.EventManager
OSGI- [19 Mar 2010 15:03:09.677 EDT] [com.ibm.ws.iiop.transport.internal.EventManager] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.iiop.transport.internal.EventManager' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.transport.internal.EventManager
Error: OSGI- [19 Mar 2010 15:03:09.678 EDT] [com.ibm.ws.iiop.internal.service.CorbaContainer] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.iiop.internal.service.CorbaContainer' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.CorbaContainer
OSGI- [19 Mar 2010 15:03:09.678 EDT] [com.ibm.ws.iiop.internal.service.CorbaContainer] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.iiop.internal.service.CorbaContainer' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.CorbaContainer
Error: OSGI- [19 Mar 2010 15:03:09.679 EDT] [com.ibm.ws.iiop.internal.service.IIOPConnectionTracker] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.iiop.internal.service.IIOPConnectionTracker' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.IIOPConnectionTracker
OSGI- [19 Mar 2010 15:03:09.679 EDT] [com.ibm.ws.iiop.internal.service.IIOPConnectionTracker] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.iiop.internal.service.IIOPConnectionTracker' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.IIOPConnectionTracker
Error: OSGI- [19 Mar 2010 15:03:09.681 EDT] [com.ibm.ws.iiop.internal.service.PortableInterceptorManager] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.iiop.internal.service.PortableInterceptorManager' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.PortableInterceptorManager
OSGI- [19 Mar 2010 15:03:09.681 EDT] [com.ibm.ws.iiop.internal.service.PortableInterceptorManager] Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException: The component name 'com.ibm.ws.iiop.internal.service.PortableInterceptorManager' has already been registered by Bundle 19 (com.ibm.ws.transport.orb) as Component of Class com.ibm.ws.iiop.internal.service.PortableInterceptorManager
Info: OSGI- [19 Mar 2010 15:03:09.681 EDT] BundleEvent STARTED Bundle:com.ibm.ws.transport.orb(id=19) {3}
Info: OSGI- [19 Mar 2010 15:03:09.685 EDT] BundleEvent INSTALLED Bundle:com.ibm.ws.transport.orb(id=19) {3}
Info: OSGI- [19 Mar 2010 15:03:09.690 EDT] ServiceEvent UNREGISTERING Bundle:com.ibm.ws.transport.orb(id=19) ServiceRef:[com.ibm.websphere.channelfw.osgi.ChannelFactoryProvider](id=56, pid=null)
Info: OSGI- [19 Mar 2010 15:03:09.691 EDT] ServiceEvent UNREGISTERING Bundle:com.ibm.ws.transport.orb(id=19) ServiceRef:[com.ibm.ws.iiop.transport.internal.EventManager](id=57, pid=null)
Info: OSGI- [19 Mar 2010 15:03:09.692 EDT] BundleEvent STOPPED Bundle:com.ibm.ws.transport.orb(id=19) {3}

",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-24 08:36:25.26,,,no_permission,,,,,,,,,,,56507,,,Fri Jun 18 17:32:58 UTC 2010,,,,,,0|i0vx6v:,184350,,,,,,,,"24/Mar/10 08:36;fmeschbe;The NullPointerException on ""ConfiguredComponentHolder.configurationUpdated(ConfiguredComponentHolder.java:187) "" is very likely a concurrency issue where configuration is provided after the component has already been disposed off due to the bundle being stopped (it seems).

This requires adding a check in the configurationUpdated and configurationDeleted methods to ensure for them to not do anything if the component has been disposed off already.

The messages:

   Cannot register Component Bundle:com.ibm.ws.transport.orb(id=19) org.osgi.service.component.ComponentException:
             The component name 'com.ibm.ws.transport.orb' has already been registered by Bundle 19 (com.ibm.ws.transport.orb)
                       as Component of Class com.ibm.ws.iiop.internal.service.ORBServiceImpl 

Is also very like caused by a concurrency issue: The only explanation I have here is that the BundleChangeEvent for the lazy start and the actual start are fired quasi at the same time: LAZY_ACTIVATION is sent causing components to be loaded. While components are being loaded, the bundle is actually started and a STARTED event is fired causing the components to be loaded again because the LAZY_ACTIVATION induced load has not completed yet ...

The solution to this problem is to ensure (quasi-)concurrent delivery of bundle events does not cause harm by loading the bundle descriptors twice.",24/Mar/10 09:24;fmeschbe;Fixed the second problem in Rev. 926986: Access to the internal storage of loaded components per Bundle is now fully synchronized and flagging of components already loaded has been redone to ensure components of a single bundle cannot be loaded twice even if the LAZY_ACTIVATION and STARTED events are fired in very close succession such that the component loading takes place quasi concurrently.,"24/Mar/10 09:31;fmeschbe;In Rev. 926989: Fixed the second problem guarding the configuration removal or update by whether the components have already been disposed off. Once the components are considered to have been disposed off, configuration need not be forwarded (there is nothing to forward configuration to).",24/Mar/10 09:34;fmeschbe;I think both issues have been fixed and I have deployed a SNAPSHOT build 1.4.1-20100324.093341-1,"24/Mar/10 14:18;amulholl@us.ibm.com;Thanks for the snapshot build - it's looking better but I'm now seeing this:

Info: OSGI- [24 Mar 2010 09:54:22.875 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.transport.orb(id=38) ServiceRef:[com.ibm.websphere.channelfw.osgi.ChannelFactoryProvider](id=59, pid=null)
Info: OSGI- [24 Mar 2010 09:54:22.875 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.transport.orb(id=38) ServiceRef:[com.ibm.ws.iiop.transport.internal.EventManager](id=60, pid=null)
Exception in thread ""Alpine-CM-Thread-9"" java.lang.IllegalStateException: BundleContext is no longer valid
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.checkValid(BundleContextImpl.java:1003)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.ungetService(BundleContextImpl.java:706)
	at org.apache.felix.scr.impl.config.ConfigurationComponentRegistry.configurationEvent(ConfigurationComponentRegistry.java:178)
	at com.ibm.ws.config.cm.internal.ConfigEventDispatcher$1.run(ConfigEventDispatcher.java:89)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:736)
Info: OSGI- [24 Mar 2010 09:54:22.906 EDT] BundleEvent INSTALLED Bundle:com.ibm.ws.transport.orb(id=38) {3}
Info: OSGI- [24 Mar 2010 09:54:22.906 EDT] ServiceEvent UNREGISTERING Bundle:com.ibm.ws.transport.orb(id=38) ServiceRef:[com.ibm.websphere.channelfw.osgi.ChannelFactoryProvider](id=59, pid=null)
Info: OSGI- [24 Mar 2010 09:54:22.906 EDT] ServiceEvent UNREGISTERING Bundle:com.ibm.ws.transport.orb(id=38) ServiceRef:[com.ibm.ws.iiop.transport.internal.EventManager](id=60, pid=null)
Info: OSGI- [24 Mar 2010 09:54:22.906 EDT] BundleEvent STOPPED Bundle:com.ibm.ws.transport.orb(id=38) {3}
Error: OSGI- [24 Mar 2010 09:54:22.937 EDT] Unexpected problem executing task Enable Component: com.ibm.ws.iiop.internal.service.IIOPConnectionTracker (28) Bundle:org.apache.felix.scr(id=11) java.lang.NullPointerException
OSGI- [24 Mar 2010 09:54:22.937 EDT] Unexpected problem executing task Enable Component: com.ibm.ws.iiop.internal.service.IIOPConnectionTracker (28) Bundle:org.apache.felix.scr(id=11) java.lang.NullPointerException
Info: FFDC1003I: FFDC Incident emitted on ffdc.log com.ibm.ejs.ras.internal.OSGiLogAdapter logged

where the later exception (NPE) has this stack:

Stack Dump = java.lang.NullPointerException
	at org.apache.felix.scr.impl.manager.DependencyManager.getFrameworkServiceReferences(DependencyManager.java:575)
	at org.apache.felix.scr.impl.manager.DependencyManager.getFrameworkServiceReferences(DependencyManager.java:565)
	at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:889)
	at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:831)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:1022)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:323)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$1.doRun(AbstractComponentManager.java:139)
	at org.apache.felix.scr.impl.ComponentActivatorTask.run(ComponentActivatorTask.java:67)
	at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:96)
	at java.lang.Thread.run(Thread.java:736)
","25/Mar/10 13:39;fmeschbe;Fixed the NullPointerException (and a potential uncaught IllegalStateException) in the DependencyManager.getFrameworkServiceReferences method in Rev. 927394.

Prevent IllegalStateException and potential NullPointerException when handling a configuration event (the bundle owning the component may have been stopped concurrently) in Rev. 927397

Deployed another SNAPSHOT version 1.4.1-20100325.133835-3

You seem to have a highly concurrent system/setup, so further concurrency issues may surface.","12/Apr/10 13:59;amulholl@us.ibm.com;We're still seeing this one exception in a few of our scenarios:

Stack Dump = org.osgi.service.component.ComponentException: The component name 'com.ibm.com.amazonaws.ec2' has already been registered by Bundle 34 (com.ibm.com.amazonaws.ec2) as Component of Class com.ibm.iaas.ec2.EC2IaaS
at org.apache.felix.scr.impl.ComponentRegistry.checkComponentName(ComponentRegistry.java:267)
at org.apache.felix.scr.impl.BundleComponentActivator.loadDescriptor(BundleComponentActivator.java:238)
at org.apache.felix.scr.impl.BundleComponentActivator.initialize(BundleComponentActivator.java:147)
at org.apache.felix.scr.impl.BundleComponentActivator.<init>(BundleComponentActivator.java:111)
at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:255)
at org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:173)

Using scr build ","30/May/10 09:52;fmeschbe;This last issue might be related to the problem fixed in Rev. 941594 for FELIX-2325.

Could you check with a current trunk build ?","18/Jun/10 17:32;amulholl@us.ibm.com;I'm not seeing this problem with the latest code, thanks.",,,,,,,,,,,,,,,,,,
NPE deactivating service during fw shutdown,FELIX-2230,12460000,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,amulholl@us.ibm.com,amulholl@us.ibm.com,23/Mar/10 14:48,16/Aug/10 12:11,14/Mar/19 02:47,24/Mar/10 10:01, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"This is seen intermittently in an automated test.  The f/w is being started then quickly stopped through the osgi console (perhaps on this occasion before the start had fully completed).  Note this is running felix DS 1.4.0.rev 924787 with the equinox f/w.  These are the OSGi messages relating to the bundle that has the error (there are many additional bundles in this test):

Info: OSGI- [23 Mar 2010 10:16:11.187 EDT] BundleEvent RESOLVED Bundle:com.ibm.ws.httpservice(id=27) {3}
Info: OSGI- [23 Mar 2010 10:16:11.203 EDT] BundleEvent INSTALLED Bundle:com.ibm.ws.httpservice(id=27) {3}
Info: OSGI- [23 Mar 2010 10:16:11.609 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.httpservice(id=27) ServiceRef:[com.ibm.ws.httpsvc.session.internal.SessionManager](id=77, pid=com.ibm.ws.httpservice.session)
Info: OSGI- [23 Mar 2010 10:16:11.609 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.httpservice(id=27) ServiceRef:[com.ibm.websphere.event.EventHandler](id=78, pid=null)
Info: OSGI- [23 Mar 2010 10:16:11.625 EDT] BundleEvent STARTED Bundle:com.ibm.ws.httpservice(id=27) {3}
Info: OSGI- [23 Mar 2010 10:16:12.109 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.httpservice(id=27) ServiceRef:[com.ibm.websphere.http.HttpContainer, com.ibm.ws.httpsvc.internal.HttpServiceContainer](id=82, pid=com.ibm.ws.httpservice)
Info: OSGI- [23 Mar 2010 10:16:12.421 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.httpservice(id=27) ServiceRef:[com.ibm.websphere.event.EventHandler](id=101, pid=null)
Info: OSGI- [23 Mar 2010 10:16:12.421 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.httpservice(id=27) ServiceRef:[org.osgi.service.http.HttpService, org.apache.felix.http.api.ExtHttpService](id=102, pid=null)
Info: OSGI- [23 Mar 2010 10:16:12.625 EDT] ServiceEvent REGISTERED Bundle:com.ibm.ws.httpservice(id=27) ServiceRef:[org.osgi.service.http.HttpContext](id=104, pid=null)
Info: OSGI- [23 Mar 2010 10:16:17.265 EDT] ServiceEvent UNREGISTERING Bundle:com.ibm.ws.httpservice(id=27) ServiceRef:[com.ibm.websphere.event.EventHandler](id=101, pid=null)
Info: OSGI- [23 Mar 2010 10:16:17.265 EDT] ServiceEvent UNREGISTERING Bundle:com.ibm.ws.httpservice(id=27) ServiceRef:[org.osgi.service.http.HttpService, org.apache.felix.http.api.ExtHttpService](id=102, pid=null)
Error: OSGI- [23 Mar 2010 10:16:17.265 EDT] [OSGIHttpService] The deactivate method could not be called Bundle:com.ibm.ws.httpservice(id=27) java.lang.NullPointerException
OSGI- [23 Mar 2010 10:16:17.265 EDT] [OSGIHttpService] The deactivate method could not be called Bundle:com.ibm.ws.httpservice(id=27) java.lang.NullPointerException



And the exception stack:
Stack Dump = java.lang.NullPointerException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:600)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
	at org.apache.felix.scr.impl.helper.ActivateMethod.invoke(ActivateMethod.java:138)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.disposeImplementationObject(ImmediateComponentManager.java:260)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.deleteComponent(ImmediateComponentManager.java:135)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Satisfied.deactivate(AbstractComponentManager.java:1066)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.deactivateInternal(AbstractComponentManager.java:303)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceRemoved(DependencyManager.java:343)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:251)
	at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:104)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:933)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:220)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:149)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:755)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:710)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:222)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.unregisterComponentService(AbstractComponentManager.java:429)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Satisfied.deactivate(AbstractComponentManager.java:1065)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.disposeInternal(AbstractComponentManager.java:322)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.dispose(AbstractComponentManager.java:185)
	at org.apache.felix.scr.impl.config.ConfiguredComponentHolder.disposeComponents(ConfiguredComponentHolder.java:275)
	at org.apache.felix.scr.impl.BundleComponentActivator.dispose(BundleComponentActivator.java:319)
	at org.apache.felix.scr.impl.Activator.disposeComponents(Activator.java:277)
	at org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:178)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:919)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:220)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:149)
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEventPrivileged(Framework.java:1350)
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEvent(Framework.java:1301)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:471)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.suspend(AbstractBundle.java:546)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1098)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.decFWSL(StartLevelManager.java:593)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:261)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.shutdown(StartLevelManager.java:216)
	at org.eclipse.osgi.framework.internal.core.InternalSystemBundle.suspend(InternalSystemBundle.java:266)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:685)
	at org.eclipse.osgi.framework.internal.core.FrameworkCommandProvider._shutdown(FrameworkCommandProvider.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:600)
	at org.eclipse.osgi.framework.internal.core.FrameworkCommandInterpreter.execute(FrameworkCommandInterpreter.java:155)
	at org.eclipse.osgi.framework.internal.core.FrameworkConsole.docommand(FrameworkConsole.java:303)
	at org.eclipse.osgi.framework.internal.core.FrameworkConsole.console(FrameworkConsole.java:288)
	at org.eclipse.osgi.framework.internal.core.FrameworkConsole.run(FrameworkConsole.java:224)
	at java.lang.Thread.run(Thread.java:736)

Is there any other data I can provide?",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-24 10:01:47.93,,,no_permission,,,,,,,,,,,56508,,,Mon Aug 16 12:11:50 UTC 2010,,,,,,0|i1aswn:,271149,,,,,,,,"23/Mar/10 15:26;amulholl@us.ibm.com;Looking into this further, it does not appear to be related to the completion of f/w start - it is repeatable even wen the f/w has been fully started.  Also, I can see from trace that the deactivate method for the OSGIHttpService was successfully run on a different thread fractionally before the failure.",24/Mar/10 10:01;fmeschbe;Added guard against NullPointerException by not calling the method if the target object is null in Rev. 926998,24/Mar/10 10:11;fmeschbe;Deployed SNAPSHOT build 1.4.1-20100324.100414-2 containing the fix to this issue.,16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,
Failure to reinstall a cached bundle will corrupt the bundle cache,FELIX-2222,12459946,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,23/Mar/10 03:04,01/Apr/10 13:02,14/Mar/19 02:47,23/Mar/10 05:58,framework-2.0.4,,,,,,,,,,framework-2.0.5,,,,Framework,,,,,,,0,,,,,,"If an exception occurs when reading a previously cached bundle, BundleArchive.revise() called from the BundleArchive constructor will delete the revision directory, but the bundle directory will be left intact in BundleCache.getArchives(). On a subsequent restart this causes an issue since the bundle directory is now malformed (i.e., it doesn't have a revision directory). We need to handle this differently.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56516,,,Tue Mar 23 05:58:00 UTC 2010,,,,,,0|i0vx4v:,184341,,,,,,,,23/Mar/10 05:58;rickhall;I modified BundleCache to delete the entire cached bundle directory when an exception occurs.,,,,,,,,,,,,,,,,,,,,,,,,,,
DataModelHelper.filter() throws wrong Exception,FELIX-2221,12459859,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,22/Mar/10 14:47,01/Apr/10 11:48,14/Mar/19 02:47,22/Mar/10 14:51,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"The DataModelHelper.filter method is documented to throw InvalidSyntaxException if the filter syntax is incorrect, yet the signature does not contain this checked exception. Also the DataModelHelperImpl.filter method actually wraps the InvalidSyntaxException inside an IllegalArgumentException.

I think, we should implement DataModelHelper as intended by adding the InvalidSyntaxException to the signature and forwarding the exception unmodified from the filter() method implementation",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56517,,,Mon Mar 22 14:51:16 UTC 2010,,,,,,0|i0vx87:,184356,,,,,,,,22/Mar/10 14:51;fmeschbe;Fixed in Rev. 926109 and deployed SNAPSHOT 1.5.0-20100322.145057-8,,,,,,,,,,,,,,,,,,,,,,,,,,
"Showing bundle details of an uninstalled bundles reports ""Internal Server Error""",FELIX-2219,12459855,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,22/Mar/10 14:11,01/Apr/10 11:50,14/Mar/19 02:47,22/Mar/10 15:34,webconsole-2.0.6,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"Displaying the details of an uninstalled bundle reports a single ""Internal Server Error"" in the data area instead of something meaningful.

The problems are:
  * The StartLevel service throws an IllegalStateException when getBundleStartLevel is called for an uninstalled bundle
  * Bundle.getRegisteredServices throws IllegalStateException if the bundle is uninstalled

These two methods must be guarded and accounted for",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56519,,,Mon Mar 22 15:34:13 UTC 2010,,,,,,0|i0vx73:,184351,,,,,,,,22/Mar/10 15:34;fmeschbe;Fixed in Rev. 926135 by guarding said methods,,,,,,,,,,,,,,,,,,,,,,,,,,
Event plugin - template & localization files must be UTF-8.,FELIX-2214,12459633,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,19/Mar/10 10:38,01/Apr/10 11:50,14/Mar/19 02:47,19/Mar/10 10:41,webconsole-3.0.0,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"Added here, just to track changes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56524,,,2010-03-19 10:38:21.0,,,,,,0|i0vx5r:,184345,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when modifying properties of lazy (uninstantiated) service,FELIX-2213,12459517,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,amulholl@us.ibm.com,amulholl@us.ibm.com,18/Mar/10 13:56,16/Aug/10 12:11,14/Mar/19 02:47,18/Mar/10 21:13, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Service A is active and has a reference (ServiceReference) to Service B.   Service B is not immediate and has not been activated.   If at this point I update the properties for Service B in ConfigAdmin, I get the NPE below.   The code appears to be going down the 'modified' path but I don't think that is appropriate in this scenario; I expected the new properties to be 'cached' by SCR until the service was activated.  Workaround:  if I resolve the ServiceReference to service B (causing it to activate) BEFORE updating the properties in ConfigAdmin, the problem does not occur and the modified method for service B is driven correctly.

Exception in thread ""pool-1-thread-3"" java.lang.NullPointerException
        at org.apache.felix.scr.impl.manager.ImmediateComponentManager.modify(ImmediateComponentManager.java:422)
        at org.apache.felix.scr.impl.manager.ImmediateComponentManager.reconfigure(ImmediateComponentManager.java:402)
        at org.apache.felix.scr.impl.config.ConfiguredComponentHolder.configurationUpdated(ConfiguredComponentHolder.java:187)
        at org.apache.felix.scr.impl.config.ConfigurationComponentRegistry.configurationEvent(ConfigurationComponentRegistry.java:173).    ",Win XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-18 14:09:24.213,,,no_permission,,,,,,,,,,,56525,,,Mon Aug 16 12:11:49 UTC 2010,,,,,,0|i0vx8v:,184359,,,,,,,,"18/Mar/10 14:09;fmeschbe;Thanks for reporting this issue.

I have committed a quick fix in Rev. 924787 (just leaving the modify() method if there is no instance). 

Can you check, whether that fixes your issue ? Thanks alot.","18/Mar/10 15:20;amulholl@us.ibm.com;Yes that works just fine, thanks for the rapid turnaround!",18/Mar/10 21:13;fmeschbe;Thanks for the feedback. Considering this fixed then.,16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,
Bogus import entries,FELIX-2210,12459374,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,olegk,olegk,17/Mar/10 11:26,11/Oct/11 17:09,14/Mar/19 02:47,27/Jun/11 13:51,maven-bundle-plugin-1.2.1,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,Manifest Generator (mangen),Maven Bundle Plugin,,,,,,0,,,,,,"The following plugin configuration produces a manifest that contains bogus import entries containing references to a non-existent version

http://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk/httpcore-osgi/pom.xml

The import section of the manifest refers to version 4.1, which is not declared in the pom

---
Import-Package: javax.net.ssl,org.apache.http;version=""4.1"",org.apache
 .http.entity;version=""4.1"",org.apache.http.impl;version=""4.1"",org.apa
 che.http.impl.entity;version=""4.1"",org.apache.http.impl.io;version=""4
 .1"",org.apache.http.impl.nio;version=""4.1"",org.apache.http.impl.nio.c
 odecs;version=""4.1"",org.apache.http.impl.nio.reactor;version=""4.1"",or
 g.apache.http.impl.nio.ssl;version=""4.1"",org.apache.http.io;version=""
 4.1"",org.apache.http.message;version=""4.1"",org.apache.http.nio;versio
 n=""4.1"",org.apache.http.nio.entity;version=""4.1"",org.apache.http.nio.
 params;version=""4.1"",org.apache.http.nio.protocol;version=""4.1"",org.a
 pache.http.nio.reactor;version=""4.1"",org.apache.http.nio.util;version
 =""4.1"",org.apache.http.params;version=""4.1"",org.apache.http.protocol;
 version=""4.1"",org.apache.http.util;version=""4.1""
---

This just does not seem right. Please advise. 

For more details please see HTTPCORE-222",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-27 13:51:25.814,,,no_permission,,,,,,,,,,,56528,,,Mon Jun 27 13:51:25 UTC 2011,,,,,,0|i1asx3:,271151,,,,,,,,"27/Jun/11 13:51;mcculls;The earlier bundleplugin/bnd was working as designed when it generated those imports because it defaulted to always import any exported packages, using the same version as that given to the exports.

However, since then the defaults have been improved to try and detect the difference between packages provided by a library bundle and packages used and re-exported by a client bundle. I tried using bundleplugin 2.3.4 with the original instructions from 2010/03/15 and you now get the expected manifest without the extra imports.",,,,,,,,,,,,,,,,,,,,,,,,,,
Localization causes a problem in Configuration Printers,FELIX-2206,12459283,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,16/Mar/10 16:06,01/Apr/10 11:50,14/Mar/19 02:47,19/Mar/10 14:25,,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"When Configuration Status is opened, the Bundles and Services tabs are rendered respectively as 'bundles.pluginTitle' and 'services.pluginTitle'.

Unfortunately, the  ConfigurationRender cannot access the ResourceBundleManager which is required to translate the titles.

So there are few possibilities:
1. A dirty hack, when OsgiManager creates the ConfigurationRender calls a method, to *set* the resourceBundleManager.
2. Make resource bundle manager accessible to all plugins as a request parameter. This will also require to make the ResourceBundleManager class public... or define the following interface in the public API:
interface ResourceBundleManager {
 public ResourceBundle getResourceBundle( final Bundle provider, final Locale locale )
}


3. Refactor the Bundles & Services plugins, and change the title to respectively %Bundles and %Services. This is another dirty hack but the titles will be shown correctly.
4. Refactor the Bundles & Services plugins and extract the configuration printer code in a separate class. In this case no localization will be supported for these printers - just like other ones. I want to remind again, that we choose that no localization is required for Configuration Status as the provided information is more for diagnostics and is better to remain not-localized.

So what do you think. Which variant is better? I personally vote for 4. We can make some method static and package private, so they can be reused by both - plugins & printers can reduce the duplicate code to minimum.",,,,,,,,,,,,,,,,,,,,19/Mar/10 13:18;fmeschbe;FELIX-2206-fmeschbe.patch;https://issues.apache.org/jira/secure/attachment/12439273/FELIX-2206-fmeschbe.patch,19/Mar/10 08:46;v_valchev;services_config_printer.patch;https://issues.apache.org/jira/secure/attachment/12439253/services_config_printer.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-03-19 13:18:14.476,,,no_permission,,,,,,,,,,,56532,,,Fri Mar 19 14:25:40 UTC 2010,,,,,,0|i0vx93:,184360,,,,,,,,"19/Mar/10 08:46;v_valchev;The provided patch ""services_config_printer.patch"" refactors the ServicesServlet and extracts the printer code in a separate class. Both - printer & servlet share a lot of code, using static methods.

The patch also fixes some spelling issues, javadoc and dead-code in OsgiManager. Some methods visibility is also changes, since eclipse reported, that they were accessed through synthetic accessor methods/","19/Mar/10 13:18;fmeschbe;Here is a patch implementing the idea sketched on the dev list: The ConfigurationRender is now a special plugin known to the OsgiManager. It is created with the ResourceBundleManager such that the english (only english as discussed earlier) ConfigurationPrinter service titles can be generated.

This leaves plugin developers the freedom to merge ConfigurationPrinter and Web Console Plugin implementations and to not require reverting to static methods etc.

WDYT ?",19/Mar/10 13:18;fmeschbe;I think we need a fix for this issue for the release,"19/Mar/10 14:19;v_valchev;Well, your patch works for both - bundles & services printer. Mine - for service only, and will require many more changes to make it work for bundles. 

So I guess a complete solution is better  than partial and yes - this is important issue, that must be fixed before webconsole 3.0.0 is released.
","19/Mar/10 14:25;fmeschbe;Thanks for the feedback.

So I took the liberty and committed the patch in Rev. 925234.",,,,,,,,,,,,,,,,,,,,,,
Localization causes a problem in WebConsole configuration,FELIX-2204,12459155,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,15/Mar/10 15:16,01/Apr/10 11:50,14/Mar/19 02:47,16/Mar/10 10:10,,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"After implementing FELIX-2203 when opening the apache web console configuration, the titles are shown with their resource names, not their real names.

",,,,,,,,,,,,,,,,,,,,15/Mar/10 15:22;v_valchev;localization_config_titles.patch;https://issues.apache.org/jira/secure/attachment/12438831/localization_config_titles.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-15 15:41:05.795,,,no_permission,,,,,,,,,,,56534,,,Tue Mar 16 10:10:23 UTC 2010,,,,,,0|i0vx8n:,184358,,,,,,,,"15/Mar/10 15:22;v_valchev;The provided localization_config_titles.patch is a simple fix for the problem. It uses the resource bundle to obtain the plugin titles.

This patch *works*. It uses English - which is the default locale for resource keys. Always English because all other information in the metatype provider are in English.

However there might be a better solution - to provide localization of the whole meta data. Unfortunately we will not be able to cache the OCD anymore, but instead create a new OCD depending on the requested locale.

The better solution is more complete and mature, but .. I've personally didn't saw a single localized metatyping information.

So my suggestion is to create a new issue for localization of metatyping and if someone adds a comment, that really need this, we can add it. Meanwhile I can commit the simple solution. What do you think?

","15/Mar/10 15:41;fmeschbe;This patch looks basically good to me.

One minor thought: I guess, correctly we would get the resource bundle according to the AbstractWebConsolePlugin's bundle:

if (name.startsWith(""%"") ) {
   Bundle b = ( ( AbstractWebConsolePlugin ) plugin ).getBundle();
   ResourceBundle rb = osgiManager.resourceBundleManager.getResourceBundle(b, Locale.ENGLISH);
   name = rb.getString(name.substring(1));
}",15/Mar/10 15:41;fmeschbe;BTW: I think it is ok to limit to english for this plugin title list of the OSGi Console configuration. This OCD is only available in english anyway,"16/Mar/10 10:10;v_valchev;Fix committed, changed according to your remark.",,,,,,,,,,,,,,,,,,,,,,,
ConfigManager plugin logs NullPointerException if ConfigurationAdmin Service is not availble,FELIX-2198,12458936,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,12/Mar/10 12:49,01/Apr/10 11:50,14/Mar/19 02:47,12/Mar/10 13:15,webconsole-3.0.0,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"If the Configuration Admin Service is not running, the ConfigManager plugin providing support for the Configuration Admin service logs a NullPointerException. This is not nice, but has no influence on the client side rendering.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56540,,,Fri Mar 12 13:15:00 UTC 2010,,,,,,0|i0vx9j:,184362,,,,,,,,12/Mar/10 13:15;fmeschbe;Fixed in Rev. 922246.,,,,,,,,,,,,,,,,,,,,,,,,,,
Using URLDecoder.decode on locations is wrong,FELIX-2195,12458878,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,djencks,djencks,12/Mar/10 00:55,01/Apr/10 13:02,14/Mar/19 02:47,22/Mar/10 21:07,framework-2.0.4,,,,,,,,,,framework-2.0.5,,,,Framework,,,,,,,0,,,,,,"URLDecoder is supposed to be for decoding form goo stuffed into a url, not for decoding the path component of a url.  Using it for this produces wrong results.  In partucular, mac os x likes to make temporary files with strings like ""+++++++"" in the path.  When run through URLDecoder these turn into spaces which means felix can't find the file you just gave it a valid file system location for.  Since equinox does this correctly we can't use felix in geronimo until this is fixed.

IIUC URLDecoder is used as an attempt to maintain compatibility with ancient vms that lack URI and its correct decoding behavior.  Fortunately apache harmony implements URI so the attached patch borrows the implementation from harmony to provide correct behavior on antique vms.

",,,,,,,,,,,,,,,,,,,,12/Mar/10 00:57;djencks;FELIX-2195.diff;https://issues.apache.org/jira/secure/attachment/12438559/FELIX-2195.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-12 08:51:55.46,,,no_permission,,,,,,,,,,,56543,,,Wed Mar 24 22:04:34 UTC 2010,,,,,,0|i0vzp3:,184756,,,,,,,,"12/Mar/10 00:57;djencks;Use harmony code, not the wrong approach.",12/Mar/10 08:51;karlpauls;Thanks. Do you need a 2.0.5 release quickly for geronimo or can you stay on trunk for a while?,"16/Mar/10 22:50;djencks;We don't need a release that quickly, but if there's going to be a release using the old resolver I'd suggest including this fix would be a good idea.  Otherwise I assume the problems with the new resolver will eventually be worked out so we can use it.  Meanwhile it would be great to get whatever snapshots are available to include this code.",22/Mar/10 21:07;karlpauls;The patch is trunk (r926330). I did massage it a bit to not depend on java5 and fit the code style. Please close if it works for you.,"24/Mar/10 22:04;djencks;Works great, many thanks!",,,,,,,,,,,,,,,,,,,,,,
The manifest and bundle goals seem to generate different manifest informations,FELIX-2194,12458798,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,gnt,gnt,11/Mar/10 11:44,11/Oct/11 17:09,14/Mar/19 02:47,28/Jun/11 00:23,,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"See FELIX-2176

The PackageVersionAnalyzer adds some default version information to the headers, which is a different behavior from the bundle plugin.  It also seems to do some things on META-INF packages.

Unless there is a real need for different behaviors, we should find a way to remove those differences.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-28 00:23:23.847,,,no_permission,,,,,,,,,,,56544,,,Tue Jun 28 00:23:23 UTC 2011,,,,,,0|i0vy9j:,184524,,,,,,,,28/Jun/11 00:23;mcculls;We no longer use the PackageVersionAnalyzer in the manifest goal.,,,,,,,,,,,,,,,,,,,,,,,,,,
Remote shell has incorrect bundle symbolic name,FELIX-2192,12458742,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,rickhall,rickhall,10/Mar/10 22:01,10/Mar/10 22:02,14/Mar/19 02:47,10/Mar/10 22:02,shell.remote-1.0.4,,,,,,,,,,shell.remote-1.1.0,,,,Remote Shell,,,,,,,0,,,,,,"Arjun Panday reports:

There seems to be a typo somewhere: the shell.remote target bundle ends up with the following symbolic-name:
org.apache.felix.org.apache.felix.shell.remote ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56546,,,Wed Mar 10 22:02:07 UTC 2010,,,,,,0|i1asxz:,271155,,,,,,,,10/Mar/10 22:02;rickhall;We forgot to specify the symbolic name in the pom file. It's fixed now.,,,,,,,,,,,,,,,,,,,,,,,,,,
Layout problems with old pluggins,FELIX-2188,12458686,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,cziegeler,cziegeler,10/Mar/10 16:47,01/Apr/10 11:50,14/Mar/19 02:47,19/Mar/10 12:23,webconsole-3.0.0,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"With the recent changes to the web console, old plugins might look very ugly and unexpected. I guess this is due to missing css classes
The best example is the event plugin ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-11 12:58:35.87,,,no_permission,,,,,,,,,,,56550,,,Fri Mar 19 12:23:18 UTC 2010,,,,,,0|i0vzof:,184753,,,,,,,,"11/Mar/10 12:58;v_valchev;So there are two fixes:
- update the event plugin to the new L&F to make it consistent
- or add OLD missing css classes for compatibility (maybe as a separate compat.css)

However, the JQUery UI integration was supposed to solve visual differences in the plugins. The new UI is consistent and themeable. Other plugins, using the old style will make a chaos like before - everyone designs a visual interface, how he likes it.

So this is not an easy decision. Either loose compatibility or allow chaos.",11/Mar/10 13:10;fmeschbe;Maybe we could still provide part of the old CSS in a transition period (aka first 3.0 release) while kind of deprecating them and for a future release remove them.,"11/Mar/10 15:49;v_valchev;This makes sense. There must be at least one official release, so the developers can update their plugins. But it's needed a clear statement, that they should update them, util the version 3.x or 4 is released.",12/Mar/10 12:12;fmeschbe;In Rev. 922227 removed the old admin.js and admin.css and provided a new admin_compat.css (included in the main_header.html template) to provide parts of the former CSS to try to render old plugins somewhat nice.,19/Mar/10 12:23;fmeschbe;I think we can close this for now,,,,,,,,,,,,,,,,,,,,,,
NPE in SigilRepositoryManager on attempt to import project with custom repository set that is not defined in the IDE,FELIX-2187,12458670,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,10/Mar/10 15:11,05/Aug/10 07:36,14/Mar/19 02:47,10/Mar/10 15:18,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"java.lang.NullPointerException
at org.apache.felix.sigil.eclipse.internal.repository.eclipse.SigilRepositoryManager.findRepositories(SigilRepositoryManager.java:159)
at org.apache.felix.sigil.eclipse.internal.repository.eclipse.SigilRepositoryManager.loadRepositories(SigilRepositoryManager.java:92)
at org.apache.felix.sigil.repository.AbstractRepositoryManager.initialise(AbstractRepositoryManager.java:66)
at org.apache.felix.sigil.eclipse.internal.repository.eclipse.SigilRepositoryManager.initialise(SigilRepositoryManager.java:69)
at org.apache.felix.sigil.eclipse.SigilCore.getRepositoryManager(SigilCore.java:465)
at org.apache.felix.sigil.eclipse.SigilCore.getRepositoryManager(SigilCore.java:476)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.processRequirementsChanges(SigilProject.java:176)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.rebuildDependencies(SigilProject.java:154)
at org.apache.felix.sigil.eclipse.job.ResolveProjectsJob.runInWorkspace(ResolveProjectsJob.java:68)
at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56551,,,Thu Aug 05 07:36:38 UTC 2010,,,,,,0|i1asyf:,271157,,,,,,,,"10/Mar/10 15:18;davemssavage;simple check for null condition, log error and return default set",05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,
"PID with space causes ERROR log, but otherwise works",FELIX-2184,12458638,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,zdila,zdila,10/Mar/10 10:13,13/Sep/10 10:20,14/Mar/19 02:47,08/Sep/10 12:08, configadmin-1.2.4,,,,,,,,,, configadmin-1.2.8,,,,Configuration Admin,,,,,,,0,,,,,,"Reading the specification I am not sure what characters are really allowed for PIDs. We are using PIDs with spaces. All works fine, just the exception is logged upon startup. I will attach the org_apache_felix_cm_impl_DynamicBindings.config file that causes the parsing error.

*ERROR* Failure setting up dynamic configuration bindings
java.io.IOException: Unexpected token 78; expected: 61 (line=2, pos=10)
	at org.apache.felix.cm.file.ConfigurationHandler.readFailure(ConfigurationHandler.java:652)
	at org.apache.felix.cm.file.ConfigurationHandler.readInternal(ConfigurationHandler.java:273)
	at org.apache.felix.cm.file.ConfigurationHandler.read(ConfigurationHandler.java:236)
	at org.apache.felix.cm.file.FilePersistenceManager._load(FilePersistenceManager.java:542)
	at org.apache.felix.cm.file.FilePersistenceManager.load(FilePersistenceManager.java:487)
	at org.apache.felix.cm.impl.DynamicBindings.<init>(DynamicBindings.java:51)
	at org.apache.felix.cm.impl.ConfigurationManager.start(ConfigurationManager.java:211)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:661)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1756)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1678)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1124)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
	at java.lang.Thread.run(Thread.java:619)
","Linux bono 2.6.32-16-generic #24-Ubuntu SMP Sat Mar 6 12:33:21 UTC 2010 i686 GNU/Linux
java version ""1.6.0_18""
Java(TM) SE Runtime Environment (build 1.6.0_18-b07)
Java HotSpot(TM) Client VM (build 16.0-b13, mixed mode, sharing)
",,,,,,,,,,,,,,,,,,,10/Mar/10 10:13;zdila;org_apache_felix_cm_impl_DynamicBindings.config;https://issues.apache.org/jira/secure/attachment/12438395/org_apache_felix_cm_impl_DynamicBindings.config,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-12 14:00:32.223,,,no_permission,,,,,,,,,,,56554,,,Mon Sep 13 10:20:17 UTC 2010,,,,,,0|i0vx9b:,184361,,,,,,,,"12/Mar/10 14:00;fmeschbe;According to Section 5.2.6, Persistent Identifier (PID), a PID is defined the same as a symbolic-name as defined in Section 1.3.2, General Syntax Definitions (all in the R 4.2 Core Spec):

   digit ::= [0..9]
   alpha ::= [a..zA..Z]
   alphanum ::= alpha | digit
   token ::= ( alphanum | '_' | '-' )+
   symbolic-name ::= token('.'token)*

Thus a blank space is not a valid character in a PID.

Still, I agree, the error message is not very helpful and should be improved.","12/Mar/10 14:08;fmeschbe;Looking at the code, I wonder how you manage to store configuration keys with spaces in them ?","12/Mar/10 15:40;zdila;> Looking at the code, I wonder how you manage to store configuration keys with spaces in them ?

I am using spring-osgi 1.2. Configuration snippet:

	<service ref=""fileAppenderFactory"">
		<interfaces>
			<bean:value>org.osgi.service.cm.ManagedServiceFactory</bean:value>
		</interfaces>
		<service-properties>
			<bean:entry key=""service.pid"" value=""File Log Appender""/>
		</service-properties>
	</service>
","15/Mar/10 07:49;fmeschbe;Looking at the attached org_apache_felix_cm_impl_DynamicBindings.config file it looks like there are a number of illegal keys in it:

   ...
   File Log Appender=""file:/home/martin/gofer/cluster/node1/bundles/gofer-logging.jar""

   SMTP Log Appender=""file:/home/martin/gofer/cluster/node1/bundles/gofer-logging.jar""

   ...
   Socket Log Appender=""file:/home/martin/gofer/cluster/node1/bundles/gofer-logging.jar""

   Telnet Log Appender=""file:/home/martin/gofer/cluster/node1/bundles/gofer-logging.jar""

   Jabber Service=""file:/home/martin/gofer/cluster/node1/bundles/gofer-jabber.jar""

   ...
   Socket Hub Log Appender=""file:/home/martin/gofer/cluster/node1/bundles/gofer-logging.jar""

   ...
   Syslog Log Appender=""file:/home/martin/gofer/cluster/node1/bundles/gofer-logging.jar""

   ...
   NT Event Log Appender=""file:/home/martin/gofer/cluster/node1/bundles/gofer-logging.jar""

   ...


These properties are illegal since according to the spec a property name must not contain blanks:

    property-name ::= public | private
    public ::= symbolic-name // See 1.3.2
    private ::= '.' symbolic-name

Apache Felix Configuration Admin 2.0.4 does not allow you to set such properties.

Has this .config file been prepared manually ? [ It looks so, because there are a few properies missing, which are written by the Felix Configuration Admin implementation ]","15/Mar/10 15:31;zdila;No, this config is not created manually. I are using configadmin-1.2.4 (as mentioned in affected versions), but i'll give 2.0.4 a try. Meanwhile I fixed those invalid names in our code.",15/Mar/10 15:33;zdila;hmm .. I can't find org.apache.felix.configadmin-2.0.4.jar,"15/Mar/10 15:44;fmeschbe;Oops, I misread the version you mentioned.

In addition, I was taught, that I read the spec to narrowly: The syntax definition for service PIDs and configuration keys are only recommendations (wording is SHOULD) and not prescriptions. Thus 2.0.4 implementation of requiring the recommendation is actually wrong !","15/Mar/10 15:58;fmeschbe;Latest ist 1.2.4, actually  --- sorry I confused version numbers.","08/Sep/10 12:08;fmeschbe;In Rev. 995005:

  * Only validate keys to be non-empty strings upon Configuration.update
  * Ensure in the FilePersistenceManager to write and read any non-empty strings as property names",13/Sep/10 10:20;fmeschbe;Closing issues after Configuration Admin 1.2.8 release,,,,,,,,,,,,,,,,,
Global AJAX error handler can be improved,FELIX-2183,12458516,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,09/Mar/10 10:41,01/Apr/10 11:50,14/Mar/19 02:47,13/Mar/10 14:24,,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"Currently, the global AJAX error handler shows only the error message. However, the user might provide it's own error page generation, which displays the whole cause of the error, and in this case the error will not look like
500 Internal Server Error

but (as example)
500 The request failed, because parameter 'abc' is missing.

The current code in support.js will always show '500 Internal Server Error'. It should be modified to allow display of more user-friendly messages.",,,,,,,,,,,,,,,,,,,,09/Mar/10 10:42;v_valchev;supportjs-ajax-error.patch;https://issues.apache.org/jira/secure/attachment/12438278/supportjs-ajax-error.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-13 14:24:15.941,,,no_permission,,,,,,,,,,,56555,,,Sat Mar 13 14:24:15 UTC 2010,,,,,,0|i0vx9r:,184363,,,,,,,,09/Mar/10 10:42;v_valchev;and fix for the problem ;),13/Mar/10 14:24;fmeschbe;Thanks for providing the patch. I have applied it in Rev. 922575.,,,,,,,,,,,,,,,,,,,,,,,,,
Hitting Refresh (F5) with multiple sigil projects leads to repeated resolve/build attempts,FELIX-2181,12458458,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,08/Mar/10 16:59,05/Aug/10 07:36,14/Mar/19 02:47,08/Mar/10 17:03,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,New code used to watch for workspace refresh operations triggers multiple tasks to resolve and rebuild project. Need to add damping to ensure that flood of events does not cause long build loops.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56557,,,Thu Aug 05 07:36:38 UTC 2010,,,,,,0|i0vx9z:,184364,,,,,,,,05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,,
junit does not need to be a compile scope dependency of configadmin,FELIX-2179,12458305,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,djencks,djencks,05/Mar/10 22:31,13/Sep/10 10:20,14/Mar/19 02:47,06/Mar/10 18:04, configadmin-1.2.4,,,,,,,,,, configadmin-1.2.8,,,,Configuration Admin,,,,,,,0,,,,,,Junit is currently a compile-scope dependency of configadmin. It doesn't need to be.  This is confusing to a system that attempts to assemble runtime bundle dependencies that will work with a bundle from maven dependencies.,,,,,,,,,,,,,,,,,,,,05/Mar/10 22:33;djencks;FELIX=2179.diff;https://issues.apache.org/jira/secure/attachment/12438056/FELIX%3D2179.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-06 18:04:47.951,,,no_permission,,,,,,,,,,,56559,,,Mon Sep 13 10:20:16 UTC 2010,,,,,,0|i0vwxz:,184310,,,,,,,,05/Mar/10 22:33;djencks;junit to test scope,"06/Mar/10 18:04;fmeschbe;Thanks for reporting.

I have applied your patch in Rev. 919807

Actually none of the dependencies need to be compile. So changing dependencies to provided and upgrading bundle plugin to be able to include classes from the provded dependency. Fixed in Rev. 919808",13/Sep/10 10:20;fmeschbe;Closing issues after Configuration Admin 1.2.8 release,,,,,,,,,,,,,,,,,,,,,,,,
Fragment bundles not loaded after second start when using autodeploy,FELIX-2177,12458290,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,jglick@netbeans.org,jglick@netbeans.org,05/Mar/10 21:13,06/Jun/10 21:37,14/Mar/19 02:47,26/May/10 19:25,framework-2.0.3,,,,,,,,,,framework-3.0.0,,,,Framework,,,,,,,0,,,,,,"After http://hg.netbeans.org/core-main/rev/6a05c30c5d0b, I can translate a NetBeans module suite to OSGi bundles and load them including branding/localization using fragment bundles. For example, with NetBeans' ""FeedReader"" demo app, org.netbeans.core.startup-*.jar contains a manifest

Bundle-SymbolicName: org.netbeans.core.startup
....

and a resource org/netbeans/core/startup/splash.gif, whereas core_feedreader.jar contains a manifest

Bundle-SymbolicName: org.netbeans.core.startup-branding
Fragment-Host: org.netbeans.core.startup

and a resource org/netbeans/core/startup/splash_feedreader.gif providing branding (akin to localization). At runtime, Bundle.getResource(""org/netbeans/core/startup/splash_feedreader.gif"") is called before Bundle.getResource(""org/netbeans/core/startup/splash.gif"") to permit the branding override.

This all works fine when I create a directory of bundles and launch Felix using -b on that directory, an empty cache dir, and felix.auto.deploy.action=uninstall,install,update,start.

But when I launch Felix again using the same cache dir (without first deleting its contents), none of the resources from the fragment bundles seem to be available. If I delete the bundle* subdirs of the cache dir - even just the subdirs corresponding to the fragments - before starting Felix then it works, so the problem is really with the bundle cache (as opposed to some problem with the application's own settings).

Debug printlns show the fragment bundle in state RESOLVED on the first start, INSTALLED thereafter.

Appending "";fragment-attachment=resolve-time"" to the Bundle-SymbolicName of all (non-fragment) bundles in the directory does not have any effect.

AutoProcessor handling AUTO_DEPLOY_START_VALUE skips fragment bundles, since start() would be illegal on them. But why aren't they resolved as a consequence of their hosts being resolved and started?","JDK 6, Linux. felix-framework 2.0.3, felix-main 2.0.2.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-05 21:40:26.455,,,no_permission,,,,,,,,,,,56561,,,Wed May 26 20:43:43 UTC 2010,,,,,,0|i0vxa7:,184365,,,,,,,,05/Mar/10 21:40;karlpauls;Sounds like a bug. Could you try with the current trunk/latest snapshot?,05/Mar/10 22:32;jglick@netbeans.org;Still reproducible with 2.1.0-SNAPSHOT (rev 919644) of framework & main.,"24/May/10 19:38;jglick@netbeans.org;Still reproducible with 2.1.0-SNAPSHOT (rev 947700) of framework & main. I build SNAPSHOT JARs and copy them over platform/modules/ext/felix*.jar in a NB 6.9 installation. Then start IDE, File > New Project, Samples > NetBeans Modules > FeedReader; right-click it and select OSGi > Run in Felix. (See http://wiki.netbeans.org/NetBeansInOSGi for background.) Correctly shows FeedReader splash screen and window title. With the addition of some println's, it seems that the three fragment bundles org.netbeans.core{,.startup,.windows}-branding are in AutoProcessor's startBundleList but it skips them (as expected), yet they are still visible somehow at runtime: bundle #3 (org.netbeans.core.startup-branding) can load bundle://13.0:2/org/netbeans/core/startup/splash_feedreader.gif (bundle #13 is org.netbeans.core.startup, its host). The println's show the same sequence when Run in Felix is invoked again, but now the generic splash screen and window title are shown, indicating that these fragments are not being loaded; bundle #3 is now INSTALLED. There seems to be no difference between first and second run in terms of timing of events (the NB integration waits until the framework has started before doing anything of its own); the only visible difference is that the fragments are RESOLVED on the first run, but only INSTALLED on the second.","24/May/10 21:54;rickhall;Ok, I've been able to reproduce the issue and I narrowed the cause down to the fact that the fragments are being updated on restart. I was able to create a simpler use case to demonstrate the issue, so I will look into a fix. Thanks.","26/May/10 19:25;rickhall;I have committed a fix for this issue and was able to correctly get the custom splash screen on subsequent runs for your example. Please close this issue if you are satisfied, thanks.",26/May/10 20:43;jglick@netbeans.org;After 948547 it works as expected.,,,,,,,,,,,,,,,,,,,,,
Upgrade maven-bundle-plugin to up to date bnd,FELIX-2176,12458281,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,djencks,djencks,05/Mar/10 19:15,24/Jun/11 12:36,14/Mar/19 02:47,04/Nov/10 13:59,maven-bundle-plugin-2.0.1,,,,,,,,,,maven-bundle-plugin-2.2.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Peter doesn't seem to release bnd to public repos, but does have an accessible private repo.  The bundle plugin can copy bnd into itself so users don't have to have peter's secret stash configured in their nexus repo manager.

Patch does this and upgrades to latest bnd.  I can't see any reason to keep the copied Builder source -- plugin passes tests and appears to work without it -- so I removed it.  You'll need to run
svn rm    src/main/java/aQute/lib/osgi/Builder.java

Also the code in   src/main/java/org/apache/felix/bundleplugin/PackageVersionAnalyzer.java _really_ doesn't compile any more and I suspect the functionality has moved into bnd.  However I can't actually tell what its trying to do; I commented it out.  If this functionality is actually in bnd then removing the class would be a good idea.",,,,,,,,,,,,,,,FELIX-2194,,,,,05/Mar/10 19:17;djencks;FELIX-2176.diff;https://issues.apache.org/jira/secure/attachment/12438034/FELIX-2176.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-11 09:57:34.945,,,no_permission,,,,,,,,,,,40505,,,Thu Nov 04 13:59:08 UTC 2010,,,,,,0|i0aqav:,60534,,,,,,,,"05/Mar/10 19:17;djencks;Use up to date bnd, include it in plugin, and make everything compile.  tests pass but it's possible the removed code actually did something useful although not tested.","11/Mar/10 09:57;gnt;I'm trying to understand how some commented code affects the generated manifest.
For example the PackageVersionAnalyzer is now commented, so it may affect  FELIX-1501, but I can't even reproduce that one.","11/Mar/10 10:22;mcculls;This patch should definitely not be applied as it stands for the following reasons:

  1)  Maven best practices strongly discourage defining external repositories in POMs, as this *will* affect all users of the plugin

  2)  PackageVersionAnalyzer is needed by Carlos' bundleall goal - perhaps people don't use this goal, but removing this will break any that do

  3)  The patch changes the parent POM relativePath to an incorrect value (../pom.xml which is the reactor POM, instead of ../pom/pom.xml)

Note that the copy of BND source is meant to be there during development to allow us to test patches on top of the latest BND source
without encountering 1). When it comes to preparing a release I usually negotiate to get the latest BND onto central, and then remove
the source from the release.

Peter is sorting out a regular update process to get BND onto central (via oss.sonatype.org) - once it's there I can make the necessary
updates to PackageVersionAnalyzer, etc. and remove our copy of the BND source code. Until then please don't commit these changes.","11/Mar/10 10:42;gnt;The code in PackageVersionAnalyzer compiles if you move the class to aQute.osgi.lib
It adds the bundle version to the private and exported packages if they don't have any version information yet.
The problem is that this happen only when using the manifest goal and not the bundle goal.
This discrepancy looks problematic to me, so I'm tempted to just remove that class and use the same manifest generation.
The version on exported packages can be easily added using:
   *;version=""${project.version}""
instead of simply
   *
","11/Mar/10 10:52;mcculls;Except that would break the current contract/behavior of the bundleall goal as mentioned above.

There are other reasons why certain code is different between the manifest and bundle goals,
which is mainly because the bundle goal participates in the maven lifecycle and the manifest
goal doesn't - this means we lack certain runtime data when running the manifest goal.

I'm not against fixing this, but I'd prefer a more reasoned approach than ""remove it and see"" :)
Really what we need is a series of tests for the bundle and manifest goals, which would make
it easier to change things without unexpectedly breaking anyone. Any chance you could add
some tests for this area first?","11/Mar/10 11:51;gnt;I've raised FELIX-2194 to handle the differences between manifest / bundle goals.
In the meantime, moving the PackageVersionAnalyzer into the aQute.osgi.lib package should do the trick.
","23/Apr/10 17:34;djencks;It looks like bndlib v 0.0.397 has made it to maven central.  Since no one seemed to like my patch, maybe someone could just update the maven-bundle-plugin to use this publicly available version.","22/Oct/10 21:36;rickhall;I'm not against just keeping a copy of the BND code in our repo if it means we can do a better job of keeping BND up-to-date. It seems idiotic to be blocked by the lack of an artifact in a Maven repo.

I had worked with Peter a little while back on heuristics to try to improve how BND decides to import exported packages, since the original behavior was too simplistic and is resulting in the creation of lots of improperly defined bundle metadata. I think updating our plugin to a more recent version of BND is of paramount importance.

Does anyone have any objection to just directly including the BND source in our project?","23/Oct/10 12:57;gnt;Is Peter willing to move his efforts on BND to the ASF ?
And I think we'd need a software grant for that, don't we ?
But a big +1 from me if he's willing to do so.","23/Oct/10 17:10;djencks;I don't think we need Peter do move BND development to apache to do this.  BND is asl licensed and as long as we have appropriate notices in svn and released artifacts we should be able to copy source code into asf svn.  Geronimo did this for years with bouncy castle code.
","23/Oct/10 17:29;gnt;So what's the point of having software grant and ICLAs then and the whole IP stuff ?
I trust you on that, I just seem to be hermetic to the whole thing ....","25/Oct/10 01:05;rickhall;I wasn't implying that we try to usurp BND from Peter. I was just suggesting that we include the latest version of the source in the project so we don't have to worry about whether it gets uploaded to Maven or not. It is ASL, so we'd have no issue including the source and we don't want two different artifacts in the first place. We can work on Peter moving BND to Felix later. ;-)","25/Oct/10 05:58;gnt;Can't we just use our own maven repo if the goal is only to host the binary file ?  We've done that for years for ServiceMix.
It's a lot less work, as bnd isn't even buildable with maven afaik, so the whole release process won't work anyway.
","25/Oct/10 06:17;djencks;its easy to build the bnd code with maven, you just get it in an appropriate structure.  IIRC my original patch showed how to do this, possibly automatically.   private maven repos are really not appropriate for public projects in my experience.",25/Oct/10 14:56;rickhall;Seems easier to me to just include the source in our project.,"25/Oct/10 15:08;gnt;Not from a maintenance point of view imho, unless you forbid any change to the sources, but if you're happy maintaining it, i have no real problems anyway.","25/Oct/10 15:46;mcculls;We've included the bnd source code in the past, it's quite straightforward - just put it under src/main/java and comment out the bndlib dependency.
[ btw last I heard Peter was very close to getting the latest bnd sync'd with central, but it's not there yet - so for now I'd go with including the source ]","25/Oct/10 17:30;rickhall;Ok, Peter says he's finally figured Maven out, so I will see if I can update to a newer version.","25/Oct/10 18:38;mcculls;Looks like it's reached central:

   http://repo1.maven.org/maven2/biz/aQute/bndlib/1.10.0/
","25/Oct/10 19:10;rickhall;Ok, I've updated to the latest bndlib, but I still had an issue. The class PackageVersionAnalyzer access package private super method from Analyzer called analyzeBundelClasspath(). As a result, I had to keep a local copy of Builder and I modified it to expose this method from its super class.

I'm not exactly sure what is going on here. Is this some functionality that we are trying to push into bndlib or what? If so, let's discuss it with Peter so he can get a release out that supports it. Otherwise, we should try to convince Peter to make the method protected so we can access it.

I'm over my head on this one, so please jump in. Thanks.","25/Oct/10 23:23;gnt;Yeah, IIRC, the idea was to push that back into bnd, but i never had the time to actually submit a patch to Peter ...","26/Oct/10 08:25;pkriens;The function I see is that an Export-Package without a version gets the version of the bundle. 

a) The bundle version seems rather arbitrary and cause unnecessary incompatibilities
b) It actually blocks bnd from doing a better job when the package is included from another bundle because at that time there is already a version set

I can add that if there is really no version for an Export-Package to be found (please, please use packageinfo) then I use the bundle version.","26/Oct/10 08:41;fmeschbe;I tend to agree with Peter that adding a default Export-Package is not a very good idea.

It is probably only acceptable idea for bundles exporting anything. But for bundles which contain some exports and some private packages, the bundle version will increase on each release for modified private packages and then increasing the export version automatically just sounds a bad idea.

So I would argue to not do it (and not even in the interest of being pragmatism), because it IMHO will generate more pain than relieve.

For example: In our commercial application we currently don't use much Export-Package versioning (yes, this is another issue we have to solve). Having automatic export versions will completely prevent us from properly updating bundles.","26/Oct/10 14:50;rickhall;I think I agree that it is not clear using the bundle version as the default package version makes sense. However, I'm not against having that as an option if someone wants it. However, we should probably do it like Peter suggests and somehow do it after the fact so bnd can attempt to figure things out first.

So, can we rollback the PackageVersionAnalyzer class and figure out a different way to handle this requirement? If so, then I can eliminate the patched Builder class and we close this issue.","01/Nov/10 15:34;rickhall;I'm still not sure what to do here. Even if we all agree we should add a default version, PackageVersionAnalyzer also removes ""META-INF.*"" packages from the exported packages apparently...not sure why bnd is including these.",04/Nov/10 13:59;rickhall;I just removed the stuff that I didn't know what to do with and we can address it in other issues.,
Fix inconsistent maven->osgi version conversion between maven-bundle-plugin and DefaultMaven2OsgiConverter,FELIX-2173,12458242,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gcharters,gcharters,05/Mar/10 14:10,24/Jun/11 12:36,14/Mar/19 02:47,05/Mar/10 14:13,,,,,,,,,,,maven-bundle-plugin-2.1.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The maven bundle plug converts maven version like : 1.0.0-incubating-SNAPSHOT to 1.0.0.incubating-SNAPSHOT which I think is correct.
The DefaultMaven2OsgiConverter coverts maven version like: 1.0.0-incubating-SNAPSHOT to 1.0.0.incubating_SNAPSHOT which unnecessarily coverts '-' to '_'.
The conversion should be reusable and consistent to ensure they match when used in other plugins or environments.  I think the DefaultMaven2OsgiConverter  needs to be changed to match the maven bundle plugin.

See also: http://www.mail-archive.com/dev@felix.apache.org/msg15894.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-05 14:13:31.742,,,no_permission,,,,,,,,,,,56564,,,Thu Mar 11 11:43:53 UTC 2010,,,,,,0|i0vy6v:,184512,,,,,,,,"05/Mar/10 14:13;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundleplugin/src/main/java/org/apache/felix/bundleplugin/BundlePlugin.java
	M	bundleplugin/src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java
	M	bundleplugin/src/test/java/org/apache/felix/bundleplugin/BundlePluginTest.java
Committed r919426

Switch to a modified version of the BND version cleaner.","11/Mar/10 10:35;mcculls;Note that the code under ""org/apache/maven/shared/osgi"" is our locally patched version of the
maven-osgi shared component (http://jira.codehaus.org/browse/MSHARED/component/13273)

Duplicate issues have been raised against the maven-osgi component for each of these local
patches, but have unfortunately not yet been committed/released which is why we're still using
our local copy...

You might want to raise an issue at http://jira.codehaus.org/browse/MSHARED/component/13273
for this additional change, to make sure it's in the shared component when they make a release.
( http://jira.codehaus.org/browse/MSHARED-98 might be related, could attach your patch there? )","11/Mar/10 11:38;gnt;Done, though I'm not sure why we need those three classes, only for computing the version (I don't think the bundle symbolic name computation is really used in our case).
We only need a static method for that, not an interface, an implementation and a class.
I still plan to start a module for common osgi code (version range, version cleaning, etc...), that way, maven could reuse it if needed.",11/Mar/10 11:40;mcculls;+1 for a common osgi utility module,"11/Mar/10 11:43;mcculls;PS. the numerous classes come from the Maven component / IoC approach: an API and one or more implementations.
This is so it can be injected by Plexus. (in our case we explicitly set it because we want to use our locally patched code.)",,,,,,,,,,,,,,,,,,,,,,
Extremely long resolve stage when running CXF-DOSGi system test,FELIX-2172,12458240,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,bosschaert,bosschaert,05/Mar/10 13:36,08/Mar/10 19:42,14/Mar/19 02:47,08/Mar/10 19:42,framework-1.8.1,framework-2.0.1,,,,,,,,,framework-3.0.0,,,,Framework,,,,,,,0,,,,,,"A system test in CXF-DOSGi loads a number of bundles (48 to be precise). Running it with Equinox is fine, but with Felix the system (driven through Pax-Exam) hangs just after initialization. It seems a resolution issue.

Here's how to reproduce:
1. Check out CXF-DOSGi from http://svn.apache.org/repos/asf/cxf/dosgi/trunk
2. First simply do a build with 'mvn install' from the root to get
everything ready (you may have to set MAVEN_OPTS=-Xmx512m)
3. cd into systests2/multi-bundle
4. Then run: 'mvn install -Dtest=TestDiscoveryRountrip' from there.
You will see that it runs some test (which uses a fairly large number
of bundles). It's currently configured to use Equinox via Pax Exam.
5. Applying the attached patch will change it to use Felix.
6. Run: 'mvn install -Dtest=TestDiscoveryRountrip' again, and you'll
see that just after 'Welcome to Felix' it hangs. Sometimes it wakes up after about 10 minutes...
",Windows and Linux / Java 6,,,,,,,,,,,,,,,,,,,05/Mar/10 13:36;bosschaert;felix_resolve_hang.patch;https://issues.apache.org/jira/secure/attachment/12438006/felix_resolve_hang.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-08 18:40:20.018,,,no_permission,,,,,,,,,,,56565,,,Mon Mar 08 19:42:05 UTC 2010,,,,,,0|i0vxaf:,184366,,,,,,,,"08/Mar/10 18:40;rickhall;I was able to reproduce the issue on framework 2.0.x.

I have been playing with this use case on trunk. I am not experiencing the hang any more, so that is good news. However, I am seeing other exceptions being thrown during the test case execution which do not necessarily seem correct (e.g., NPEs). In the end, though, the test case reports:

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.154 sec

So, at least it says it was a success, even if it wasn't. ;-) I will likely need more feedback on this issue.",08/Mar/10 19:42;bosschaert;Thanks for fixing! Those exceptions are probably caused by things outside of Felix. If not I'll file a separate bug.,,,,,,,,,,,,,,,,,,,,,,,,,
Improve dev:show-tree performance and avoid NPE for installed bundle,FELIX-2169,12458115,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gertvanthienen,gertvanthienen,gertvanthienen,04/Mar/10 12:16,04/Mar/10 13:23,14/Mar/19 02:47,04/Mar/10 12:21,karaf-1.4.0,,,,,,,,,,karaf 1.6.0,,,,Karaf,,,,,,,0,,,,,,"As reported in https://issues.apache.org/activemq/browse/SMX4-489, the current implementation of the dev:show-tree command has two problems:
* for bundles with an extensive set of dependencies, calculating the dependency tree can take a long time (several seconds)
* for installed bundles with imports for which no suitable export is available, the command fails with a NullPointerException",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-04 12:51:19.623,,,no_permission,,,,,,,,,,,56568,,,Thu Mar 04 13:23:18 UTC 2010,,,,,,0|i0vzmn:,184745,,,,,,,,"04/Mar/10 12:21;gertvanthienen;Fixed in http://svn.apache.org/viewvc?view=revision&revision=918963
Will ask Charles Mouillard to confirm that this fixes the issue he has reported.",04/Mar/10 12:51;cmoulliard;I rebuild karaf and make a test.,"04/Mar/10 13:17;cmoulliard;I have made a test with camel-cxf which contain a lot of dependencies and it works fine.

{code}
karaf@root> dev:show-tree  178
Bundle org.apache.camel.camel-cxf [178] is currently ACTIVE

org.apache.camel.camel-cxf [178]
+- org.apache.servicemix.bundles.wsdl4j [173]
+- org.apache.servicemix.specs.activation-api-1.1 [41]
+- org.springframework.beans [37]
|  +- org.ops4j.pax.logging.pax-logging-api [3]
|  +- org.springframework.core [36]
|  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  +- org.apache.commons.collections [119]
|  +- org.apache.servicemix.bundles.cglib [47]
+- org.apache.camel.camel-spring-osgi [55]
|  +- org.springframework.beans [37]
|  +- org.springframework.osgi.core [49]
|  |  +- org.apache.felix.configadmin [5]
|  |  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  +- org.springframework.aop [38]
|  |  |  +- org.springframework.beans [37]
|  |  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  |  +- org.springframework.core [36]
|  |  |  +- org.apache.servicemix.bundles.commons-pool [69]
|  |  |  +- org.apache.servicemix.bundles.aopalliance [35]
|  |  |  +- org.apache.servicemix.bundles.cglib [47]
|  |  +- org.springframework.beans [37]
|  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  +- org.springframework.core [36]
|  |  +- org.springframework.context [39]
|  |  |  +- org.apache.geronimo.specs.geronimo-annotation_1.0_spec [171]
|  |  |  +- org.springframework.aop [38]
|  |  |  +- org.springframework.beans [37]
|  |  |  +- org.apache.geronimo.specs.geronimo-jms_1.1_spec [70]
|  |  |  |  +- org.apache.geronimo.specs.geronimo-jta_1.1_spec [53]
|  |  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  |  +- org.springframework.core [36]
|  |  |  +- org.apache.servicemix.bundles.aopalliance [35]
|  |  |  +- org.apache.servicemix.bundles.cglib [47]
|  |  +- org.apache.servicemix.bundles.aopalliance [35]
|  |  +- org.springframework.osgi.io [48]
|  |     +- org.ops4j.pax.logging.pax-logging-api [3]
|  |     +- org.springframework.core [36]
|  +- org.ops4j.pax.logging.pax-logging-api [3]
|  +- org.apache.camel.camel-core [46]
|  |  +- org.apache.servicemix.specs.activation-api-1.1 [41]
|  |  +- org.apache.servicemix.bundles.xalan [152]
|  |  |  +- org.apache.servicemix.bundles.xerces [153]
|  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  +- org.apache.servicemix.specs.jaxb-api-2.1 [42]
|  |  |  +- org.apache.servicemix.specs.activation-api-1.1 [41]
|  |  |  +- org.apache.servicemix.specs.stax-api-1.0 [43]
|  |  +- org.springframework.context [39]
|  |  +- org.apache.servicemix.specs.stax-api-1.0 [43]
|  |  +- commons-management [45]
|  +- org.springframework.core [36]
|  +- org.springframework.transaction [54]
|  |  +- org.springframework.aop [38]
|  |  +- org.springframework.beans [37]
|  |  +- org.apache.geronimo.specs.geronimo-jta_1.1_spec [53]
|  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  +- org.springframework.core [36]
|  |  +- org.springframework.context [39]
|  |  +- org.apache.servicemix.bundles.aopalliance [35]
|  +- org.apache.servicemix.specs.jaxb-api-2.1 [42]
|  +- org.springframework.context [39]
+- org.springframework.core [36]
+- org.apache.cxf.bundle [176]
|  +- org.codehaus.jettison.jettison [149]
|  |  +- org.apache.servicemix.specs.stax-api-1.0 [43]
|  +- org.apache.servicemix.bundles.wsdl4j [173]
|  +- org.springframework.jms [144]
|  |  +- org.springframework.aop [38]
|  |  +- org.springframework.beans [37]
|  |  +- org.apache.geronimo.specs.geronimo-jms_1.1_spec [70]
|  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  +- org.springframework.core [36]
|  |  +- org.apache.servicemix.bundles.commons-pool [69]
|  |  +- org.springframework.transaction [54]
|  |  +- org.springframework.context [39]
|  |  +- org.apache.servicemix.bundles.aopalliance [35]
|  +- org.apache.servicemix.specs.activation-api-1.1 [41]
|  +- org.springframework.aop [38]
|  +- org.springframework.beans [37]
|  +- org.apache.geronimo.specs.geronimo-jms_1.1_spec [70]
|  +- org.apache.servicemix.bundles.neethi [168]
|  |  +- org.apache.ws.commons.axiom.axiom-impl [165]
|  |  |  +- org.apache.servicemix.specs.activation-api-1.1 [41]
|  |  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  |  +- org.apache.servicemix.specs.stax-api-1.0 [43]
|  |  |  +- org.apache.ws.commons.axiom.axiom-api [166]
|  |  |     +- org.apache.servicemix.specs.activation-api-1.1 [41]
|  |  |     +- javax.mail [167]
|  |  |     |  +- org.apache.servicemix.specs.activation-api-1.1 [41]
|  |  |     +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  |     +- org.apache.servicemix.specs.stax-api-1.0 [43]
|  |  +- org.apache.ws.commons.axiom.axiom-api [166]
|  |  +- org.apache.servicemix.specs.stax-api-1.0 [43]
|  +- org.apache.ws.commons.schema.XmlSchema [159]
|  +- javax.mail [167]
|  +- org.ops4j.pax.logging.pax-logging-api [3]
|  +- org.apache.commons.lang [118]
|  +- org.apache.servicemix.specs.saaj-api-1.3 [172]
|  |  +- org.apache.servicemix.specs.activation-api-1.1 [41]
|  +- org.apache.servicemix.bundles.xmlsec [155]
|  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  +- org.apache.servicemix.bundles.xalan [152]
|  +- org.springframework.core [36]
|  +- org.apache.servicemix.specs.stax-api-1.0 [43]
|  +- org.apache.servicemix.specs.jsr311-api-1.0 [174]
|  +- org.springframework.context [39]
|  +- org.apache.servicemix.bundles.jaxb-impl [44]
|  |  +- org.apache.servicemix.specs.activation-api-1.1 [41]
|  |  +- org.apache.servicemix.specs.stax-api-1.0 [43]
|  |  +- org.apache.servicemix.specs.jaxb-api-2.1 [42]
|  +- org.apache.geronimo.specs.geronimo-annotation_1.0_spec [171]
|  +- org.apache.geronimo.specs.geronimo-jaxws_2.1_spec [170]
|  |  +- org.apache.servicemix.specs.saaj-api-1.3 [172]
|  |  +- org.apache.servicemix.specs.jaxb-api-2.1 [42]
|  +- org.apache.geronimo.specs.geronimo-jta_1.1_spec [53]
|  +- org.apache.servicemix.bundles.jetty-bundle [64]
|  |  +- org.ops4j.pax.logging.pax-logging-api [3]
|  |  +- org.apache.geronimo.specs.geronimo-servlet_2.5_spec [63]
|  +- org.apache.geronimo.specs.geronimo-ws-metadata_2.0_spec [175]
|  +- org.apache.geronimo.specs.geronimo-servlet_2.5_spec [63]
|  +- org.springframework.transaction [54]
|  +- org.apache.servicemix.specs.jaxb-api-2.1 [42]
|  +- org.apache.servicemix.bundles.cglib [47]
|  +- org.apache.servicemix.bundles.jdom [106]
+- org.apache.servicemix.specs.jsr311-api-1.0 [174]
+- org.springframework.context [39]
+- org.apache.servicemix.specs.stax-api-1.0 [43]
+- org.apache.geronimo.specs.geronimo-annotation_1.0_spec [171]
+- org.apache.geronimo.specs.geronimo-jaxws_2.1_spec [170]
+- org.ops4j.pax.logging.pax-logging-api [3]
+- org.apache.camel.camel-core [46]
+- org.apache.geronimo.specs.geronimo-ws-metadata_2.0_spec [175]
+- org.apache.servicemix.specs.saaj-api-1.3 [172]
+- org.apache.servicemix.specs.jaxb-api-2.1 [42]

WARNING: multiple bundles are exporting package META-INF.cxf
- org.apache.cxf.bundle [176]
- org.apache.camel.camel-cxf [178]
{code]

Can be closed",04/Mar/10 13:23;gertvanthienen;@Charles: Thanks for the feedback!,,,,,,,,,,,,,,,,,,,,,,,
SigilProjectEditor warnings to not properly clear when dependencies are updated in text editor or rich client editor - requires restart to clear warnings,FELIX-2161,12457913,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,davemssavage,davemssavage,02/Mar/10 21:50,05/Aug/10 07:36,14/Mar/19 02:47,02/Mar/10 22:06,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56576,,,Thu Aug 05 07:36:37 UTC 2010,,,,,,0|i1aszz:,271164,,,,,,,,02/Mar/10 22:06;davemssavage;refactored handling of problem markers to bring internal to SigilProject.save(),05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,
SigilProjectEditor can get out of sync if editting in text view and in rich editor view.,FELIX-2160,12457912,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,davemssavage,davemssavage,02/Mar/10 21:48,05/Aug/10 07:36,14/Mar/19 02:47,02/Mar/10 22:05,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56577,,,Thu Aug 05 07:36:36 UTC 2010,,,,,,0|i0vwvb:,184298,,,,,,,,02/Mar/10 22:05;davemssavage;call project.setBundle(null) & tempProject.setBundle(null) and update text editor input if edit occurs from rich client,05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when searching for available imports - seems to be caused by corruption of internal model,FELIX-2159,12457890,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,davemssavage,davemssavage,02/Mar/10 17:35,05/Aug/10 07:36,14/Mar/19 02:47,02/Mar/10 22:33,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"java.lang.NullPointerException
	at org.apache.felix.sigil.core.internal.model.osgi.PackageExport.equals(PackageExport.java:178)
	at java.util.ArrayList.indexOf(ArrayList.java:216)
	at java.util.ArrayList.contains(ArrayList.java:199)
	at org.apache.felix.sigil.ui.eclipse.ui.util.BackgroundLoadingSelectionDialog.addElements(BackgroundLoadingSelectionDialog.java:476)
	at org.apache.felix.sigil.ui.eclipse.ui.util.ExportedPackageFinder$1.visit(ExportedPackageFinder.java:65)
	at org.apache.felix.sigil.model.AbstractCompoundModelElement.visit(AbstractCompoundModelElement.java:88)
	at org.apache.felix.sigil.model.AbstractCompoundModelElement.visit(AbstractCompoundModelElement.java:94)
	at org.apache.felix.sigil.repository.AbstractRepositoryManager$2.visit(AbstractRepositoryManager.java:398)
	at org.apache.felix.sigil.obr.impl.CachingOBRBundleRepository.accept(CachingOBRBundleRepository.java:46)
	at org.apache.felix.sigil.repository.AbstractBundleRepository.accept(AbstractBundleRepository.java:94)
	at org.apache.felix.sigil.repository.AbstractRepositoryManager.visit(AbstractRepositoryManager.java:403)
	at org.apache.felix.sigil.ui.eclipse.ui.util.ExportedPackageFinder.run(ExportedPackageFinder.java:72)
	at org.apache.felix.sigil.ui.eclipse.ui.util.BackgroundLoadingSelectionDialog$3.run(BackgroundLoadingSelectionDialog.java:223)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

Debug of situation shows the following package is causing the problem. Inspecting the source of the sigil.properties file showed no such export...

PackageExport[M:null:uses=[Ljava.lang.String;@706b633d]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56578,,,Thu Aug 05 07:36:36 UTC 2010,,,,,,0|i1at07:,271165,,,,,,,,"02/Mar/10 22:33;davemssavage;fixed npe, will raise separate issue if corruption is seen again",05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,
Login dialog delay,FELIX-2157,12457880,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,02/Mar/10 16:09,01/Apr/10 11:50,14/Mar/19 02:47,03/Mar/10 12:02,,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"Sometimes, on some browsers, when the user tries to open the web console it waits a long time before the authentication dialog is shown.

The reason is in OsgiManagerHttpContext  after line 140:
            response.setHeader( HEADER_WWW_AUTHENTICATE, AUTHENTICATION_SCHEME_BASIC + "" realm=\"""" + this.realm + ""\"""" );
            response.setStatus( HttpServletResponse.SC_UNAUTHORIZED );
            response.flushBuffer();

Sometimes, after this request the browser still expects some data. The fix is just one line, that should be added before the response is flushed:
            response.setContentLength(0);
            response.flushBuffer();
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-03 12:02:03.866,,,no_permission,,,,,,,,,,,56580,,,Wed Mar 03 12:02:03 UTC 2010,,,,,,0|i0vwxb:,184307,,,,,,,,03/Mar/10 12:02;fmeschbe;Thanks for tracking this issue down. I have added the content length setting in Rev. 918433.,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove Import-Service header in MANIFEST,FELIX-2156,12457876,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,apanday,apanday,02/Mar/10 15:52,01/Aug/15 11:34,14/Mar/19 02:47,20/Sep/11 13:49,,,,,,,,,,,eventadmin-1.2.14,,,,Event Admin,,,,,,,0,,,,,,"The Import-Service header would be quite useful if it could support attributes (like Import-Package does)
Unfortunately it is not possible to specify an optional Import-Service, therefore import of optional services should not appear at all in the manifest. 
As it is, it breaks my OBR resolution. ",,,,,,,,,,,,,,,,,FELIX-3121,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-02 16:54:57.383,,,no_permission,,,,,,,,,,,40374,,,Tue Sep 20 13:49:30 UTC 2011,,,,,,0|i0b3nr:,62705,,,,,,,,"02/Mar/10 16:54;rickhall;Reiterate comment from mailing list:

Import-Service/Export-Service are actually deprecated, but there is no reason we cannot use them and adopt the extended common OSGi header syntax for them. If bindex ignores this, then I would say it is a bug in bindex.

Peter says we can file a bindex bug on the public OSGi bug database.","03/Mar/10 08:13;apanday;Thanks, i've forwarded the bug report to Bindex here:
https://www.osgi.org/bugzilla/show_bug.cgi?id=70

For this one, the existing Import-Service header should at least be modified to add "";resolution:=optional"" for all imported services.","28/Jul/11 08:48;cziegeler;As these are deprecated, I removed them","20/Sep/11 11:29;gnt;The current OBR implementation actually support those optional flags when using the internal bindex to generate the OBR constraints.
The information about the provided service is actually really important as service constraints are supported by felix obr.",20/Sep/11 13:49;gnt;Created a new issue because the version has been released.  See FELIX-3121.,,,,,,,,,,,,,,,,,,,,,,
The maven bundle plugin generates wrong capabilities for packages with directives,FELIX-2155,12457869,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,02/Mar/10 15:02,24/Jun/11 12:36,14/Mar/19 02:47,02/Mar/10 15:04,,,,,,,,,,,maven-bundle-plugin-2.1.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,The directives should end with ':' but they don't.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56581,,,Tue Mar 02 15:04:30 UTC 2010,,,,,,0|i0vy7j:,184515,,,,,,,,02/Mar/10 15:04;gnt;See https://www.osgi.org/bugzilla/show_bug.cgi?id=69,"02/Mar/10 15:04;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundleplugin/src/main/java/org/osgi/impl/bundle/obr/resource/BundleInfo.java
Committed r918066
",,,,,,,,,,,,,,,,,,,,,,,,,
IllegalArgumentException: Argument not valid exception seen when closing and reopening project editor,FELIX-2154,12457859,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,02/Mar/10 13:55,05/Aug/10 07:36,14/Mar/19 02:47,02/Mar/10 14:09,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:3865)
	at org.eclipse.swt.SWT.error(SWT.java:3799)
	at org.eclipse.swt.SWT.error(SWT.java:3770)
	at org.eclipse.swt.custom.CTabItem.setImage(CTabItem.java:959)
	at org.eclipse.ui.part.MultiPageEditorPart.setPageImage(MultiPageEditorPart.java:1140)
	at org.apache.felix.sigil.ui.eclipse.ui.editors.project.SigilProjectEditorPart.refreshTabImages(SigilProjectEditorPart.java:199)
	at org.apache.felix.sigil.ui.eclipse.ui.editors.project.SigilProjectEditorPart.addPages(SigilProjectEditorPart.java:182)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:357)
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:662)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:462)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:286)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2857)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2762)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2754)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2705)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2701)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2685)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2676)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:361)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:168)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:229)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:208)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:250)
	at org.eclipse.jdt.internal.ui.navigator.OpenAndExpand.run(OpenAndExpand.java:49)
	at org.eclipse.ui.actions.RetargetAction.run(RetargetAction.java:221)
	at org.eclipse.ui.navigator.CommonNavigatorManager$3.open(CommonNavigatorManager.java:202)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:842)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:48)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:840)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1101)
	at org.eclipse.ui.navigator.CommonViewer.handleOpen(CommonViewer.java:467)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:264)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:258)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:298)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:3543)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1250)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1258)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1079)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3441)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3100)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56582,,,Thu Aug 05 07:36:36 UTC 2010,,,,,,0|i0vwxr:,184309,,,,,,,,02/Mar/10 14:09;davemssavage;Problem caused by calling dispose on shared image - patch supplied to fix this issue,05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,
SigilProject is not a singleton within IDE so calls to reset the bundle model can cause model to be in inconsistent state,FELIX-2153,12457853,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,02/Mar/10 12:14,04/Mar/10 14:16,14/Mar/19 02:47,02/Mar/10 12:16,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,This behaviour is most obvious when refreshing a project - here some part of the IDE internals see the new view where as other parts see the old view,,,,,,,,,,,,,,,FELIX-2168,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56583,,,Tue Mar 02 12:36:25 UTC 2010,,,,,,0|i0vwu7:,184293,,,,,,,,02/Mar/10 12:16;davemssavage;Patch supplied to maintain a hashed map of eclipse project to sigil project,02/Mar/10 12:36;davemssavage;Mark issues raised by me as closed,,,,,,,,,,,,,,,,,,,,,,,,,
SigilBundle clone method does not perform a deep copy of contents,FELIX-2152,12457851,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,02/Mar/10 11:55,02/Mar/10 12:36,14/Mar/19 02:47,02/Mar/10 11:59,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56584,,,Tue Mar 02 12:36:25 UTC 2010,,,,,,0|i0vyd3:,184540,,,,,,,,02/Mar/10 11:59;davemssavage;Patches supplied to ensure that clone works as expected,02/Mar/10 12:36;davemssavage;Mark issues raised by me as closed,,,,,,,,,,,,,,,,,,,,,,,,,
Configuration Status tabs are not properly left aligned,FELIX-2149,12457728,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,fmeschbe,fmeschbe,01/Mar/10 11:45,01/Apr/10 11:50,14/Mar/19 02:47,22/Mar/10 12:45,webconsole-3.0.0,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"With the use of JQuery UI for the tabs, the rendering of multi-line tabs is not very nice: the second line always starts ""after"" the current tab instead of at the left edge.",,,,,,,,,,,,,,,,,,,,01/Mar/10 11:53;fmeschbe;FELIX-2149.png;https://issues.apache.org/jira/secure/attachment/12437475/FELIX-2149.png,22/Mar/10 10:06;v_valchev;configstatus_align_tabs.patch;https://issues.apache.org/jira/secure/attachment/12439445/configstatus_align_tabs.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-03-22 10:06:35.59,,,no_permission,,,,,,,,,,,56587,,,Mon Mar 22 12:45:35 UTC 2010,,,,,,0|i0vwwv:,184305,,,,,,,,01/Mar/10 11:53;fmeschbe;Screen shot of the problem.,"22/Mar/10 10:06;v_valchev;Attached a patch that fixes a problem though usage of ui.tabs.paging.js plugin.
It adds prev and next buttons, when the tabs are too many, and you can scroll the tabs to see others.","22/Mar/10 11:47;fmeschbe;Thanks alot. This looks good, I suggest you commit the patch.",22/Mar/10 12:45;v_valchev;patch commited in svn,,,,,,,,,,,,,,,,,,,,,,,
ConfigurationPrinter services not unregistered on destroy,FELIX-2147,12457724,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,01/Mar/10 11:25,01/Apr/10 11:50,14/Mar/19 02:47,13/Mar/10 16:53,webconsole-3.0.0,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"The OsgiManager.init method initializes the plugins provided by the Web Console Bundle itself. Amongst real plugins, this also concerns a number of ConfigurationPrinter services.

Currently these services are only registered in the init method but never unregistered in the destroy method. If the OSGi HTTP Service is no being cycled, provided ConfigurationPrinter services will be registered multiple times.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56589,,,Sat Mar 13 16:53:46 UTC 2010,,,,,,0|i0vwwn:,184304,,,,,,,,13/Mar/10 16:53;fmeschbe;Ensuring all OsgiManagerPlugin implementations are deactivated when the OsgiManager servlet is destroyed in Rev. 922607,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in background search,FELIX-2143,12457710,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,davemssavage,davemssavage,01/Mar/10 08:52,02/Mar/10 12:36,14/Mar/19 02:47,01/Mar/10 10:43,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"java.lang.NullPointerException
        at org.apache.felix.sigil.search.SigilSearch$2.visit(SigilSearch.java:166)
        at org.apache.felix.sigil.core.repository.SystemRepository.accept(SystemRepository.java:61)
        at org.apache.felix.sigil.repository.AbstractBundleRepository.accept(AbstractBundleRepository.java:102)
        at org.apache.felix.sigil.search.SigilSearch.index(SigilSearch.java:156)
        at org.apache.felix.sigil.search.SigilSearch.listen(SigilSearch.java:138)
        at org.apache.felix.sigil.search.SigilSearch.findProviders(SigilSearch.java:83)
        at org.apache.felix.sigil.ui.eclipse.ui.quickfix.ImportQuickFixProcessor.addSearchResults(ImportQuickFixProcessor.java:201)
        at org.apache.felix.sigil.ui.eclipse.ui.quickfix.ImportQuickFixProcessor.handleUndefinedType(ImportQuickFixProcessor.java:161)
        at org.apache.felix.sigil.ui.eclipse.ui.quickfix.ImportQuickFixProcessor.getCorrections(ImportQuickFixProcessor.java:100)
        at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:375)
        at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:337)
        at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
        at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:333)
        at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:462)
        at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:278)
        at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:240)
        at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:73)
        at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1832)
        at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:556)
        at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$16(CompletionProposalPopup.java:553)
        at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:488)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
        at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
        at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1660)
        at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:126)
        at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:190)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:194)
        at org.eclipse.ui.texteditor.TextOperationAction$1.run(TextOperationAction.java:131)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
        at org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:129)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
        at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)
        at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)
        at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)
        at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
        at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:470)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:824)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:880)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:569)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:510)
        at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:125)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
        at org.eclipse.swt.widgets.Display.filterEvent(Display.java:965)
        at org.eclipse.swt.widgets.Display.sendEvent(Display.java:3542)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1250)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1273)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1258)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1287)
        at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1283)
        at org.eclipse.swt.widgets.Canvas.sendKeyEvent(Canvas.java:433)
        at org.eclipse.swt.widgets.Control.doCommandBySelector(Control.java:906)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:4741)
        at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
        at org.eclipse.swt.internal.cocoa.NSResponder.interpretKeyEvents(NSResponder.java:56)
        at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:516)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:4655)
        at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
        at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:202)
        at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:1753)
        at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:1825)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:4713)
        at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
        at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:4285)
        at org.eclipse.swt.widgets.Display.applicationProc(Display.java:4352)
        at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
        at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:101)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3097)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
        at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
        at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
        at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
        at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
        at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
        at org.eclipse.equinox.launcher.Main.run(Main.java:1311)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56593,,,Tue Mar 02 12:36:25 UTC 2010,,,,,,0|i1at0f:,271166,,,,,,,,01/Mar/10 10:43;davemssavage;caused by missing framework bundle - tidied up immediate problem by logging error message vs throwing npe,02/Mar/10 12:36;davemssavage;Mark issues raised by me as closed,,,,,,,,,,,,,,,,,,,,,,,,,
The Config Manager doesn't show configurations which values are pritive arrays,FELIX-2142,12457709,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,01/Mar/10 08:49,01/Apr/10 11:50,14/Mar/19 02:47,03/Mar/10 12:05,,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"When configuration property value is array, the value is converted to json using the following code:
value = new JSONArray( Arrays.asList( ( Object[] ) value ) );

However, if it is primitive array casting to Object[] will fail and the configuration will not displayed.

The attached patch fixes the problem.",,,,,,,,,,,,,,,,,,,,01/Mar/10 08:50;v_valchev;config_primitive_array.patch;https://issues.apache.org/jira/secure/attachment/12437465/config_primitive_array.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-03 12:05:43.94,,,no_permission,,,,,,,,,,,56594,,,Wed Mar 03 12:05:43 UTC 2010,,,,,,0|i0vwv3:,184297,,,,,,,,03/Mar/10 12:05;fmeschbe;Thanks for providing the patch. I have applied it in Rev. 918434.,,,,,,,,,,,,,,,,,,,,,,,,,,
Move extensions to a new api into the bundlerepository module as to not pollute the org.osgi.* package,FELIX-2139,12457480,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,25/Feb/10 20:32,01/Apr/10 11:48,14/Mar/19 02:47,26/Feb/10 17:05,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-27 09:17:13.133,,,no_permission,,,,,,,,,,,56596,,,Sat Feb 27 09:17:13 UTC 2010,,,,,,0|i0vwvz:,184301,,,,,,,,"26/Feb/10 17:02;gnt;http://svn.apache.org/viewcvs?view=rev&rev=916503

The approach i've taken for that is to actually redefine the whole api in a new package and provide a layer to still implement the old api if available.
This allows to have a clean api and have more freedom in case more changes are needed.",26/Feb/10 17:05;gnt;We can reopen and discuss it more if people do not agree with the direction used.,"27/Feb/10 09:17;rickhall;Doesn't this approach make it more costly to use the OSGi API since it requires every returned object to be wrapped as opposed to just creating extended interface...

Not sure how much of an issue this is, but for example getting all resources from a repository now requires another wrapper object for each resource returned...if you have large repositories this starts to add up...of course, the API should likely not return complete arrays anyway.

Another approach is to not create analogs of every interface, for example, we don't change Resource do we? If not, then we could just use that interface in our other interfaces.

I don't have a definitive suggestion, but I am just not sure this approach feels completely like the right one.",,,,,,,,,,,,,,,,,,,,,,,,
The resolver should prefer required resources over optional resources to minimize the set of required resources,FELIX-2138,12457449,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,25/Feb/10 16:01,01/Apr/10 11:48,14/Mar/19 02:47,25/Feb/10 16:58,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"When looking for resources matching a requirement, there is this test:

            // We don't need to look at resources we've already looked at.
            if (!m_failedSet.contains(resources[resIdx])
                && !m_resolveSet.contains(resources[resIdx]))
            {


Unfortunately, it's wrong because the m_resolveSet may have changed since the call to searchResolvingResources() so we can't ignore already resolved resources here.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-25 16:56:16.936,,,no_permission,,,,,,,,,,,56597,,,Thu Feb 25 17:00:21 UTC 2010,,,,,,0|i0vx0v:,184323,,,,,,,,"25/Feb/10 16:51;gnt;Even with this change, the resolution output is still very bad in some cases.

The problem is that the resolution tends to not favor required resources to optional resources which then lead to more resources being considered requried.","25/Feb/10 16:56;rickhall;I am not sure I completely understand the issues being raised here, could you explain them in more detail?

Judging from your title change, I think I agree.","25/Feb/10 16:58;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResolverImpl.java
Committed r916347
","25/Feb/10 17:00;gnt;Yeah, the problem is that I ended up with org.osgi.core  being a required resource, because it was selected for an optional package, but then was selected for required package (instead of using the system bundle provided package).
With the change I just made, optional resources are kept optional as long as possible.",,,,,,,,,,,,,,,,,,,,,,,
Improve OBR speed,FELIX-2136,12457422,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,25/Feb/10 13:23,01/Apr/10 11:48,14/Mar/19 02:47,25/Feb/10 13:37,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,FELIX-2104,FELIX-2134,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56599,,,Thu Feb 25 13:37:41 UTC 2010,,,,,,0|i0vzlr:,184741,,,,,,,,"25/Feb/10 13:37;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/CapabilityImpl.java
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/FilterImpl.java
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/RepositoryImpl.java
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/RequirementImpl.java
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResourceImpl.java
Committed r916284

 a few further optimisations to improve OBR speeed.\
  - insertion of a resource in the repository does not create a full copy of the array + sorting, this is now done lazily
  - avoid case insensitive filters and maps (those string comparisons are really costly)
  - caches the Resource hash code
  - use interned strings for capabilities / requirements namespaces

",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in JavaHelper causes bundle classpath refresh to fail,FELIX-2133,12457350,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,24/Feb/10 22:29,02/Mar/10 12:36,14/Mar/19 02:47,24/Feb/10 23:01,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"java.lang.NullPointerException
at org.apache.felix.sigil.eclipse.model.util.JavaHelper.resolveClasspathEntrys(JavaHelper.java:384)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.findExternalClasspath(SigilProject.java:205)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.buildClassPathEntries(SigilClassPathContainer.java:102)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.getClasspathEntries(SigilClassPathContainer.java:58)
at org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(ClasspathEntry.java:1806)
at org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(ClasspathEntry.java:1760)
at org.eclipse.jdt.internal.core.ClasspathValidation.validate(ClasspathValidation.java:68)
at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:51)
at org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:110)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1800)
at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
at org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:4759)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClasspathContainerInitializer.requestClasspathContainerUpdate(SigilClasspathContainerInitializer.java:73)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.resetClasspath(SigilProject.java:358)
at org.apache.felix.sigil.ui.eclipse.handlers.project.RefreshSigilClasspathCommandHandler$1.execute(RefreshSigilClasspathCommandHandler.java:56)
at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:106)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1800)
at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:118)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)
Root exception:
java.lang.NullPointerException
at org.apache.felix.sigil.eclipse.model.util.JavaHelper.resolveClasspathEntrys(JavaHelper.java:384)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.findExternalClasspath(SigilProject.java:205)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.buildClassPathEntries(SigilClassPathContainer.java:102)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.getClasspathEntries(SigilClassPathContainer.java:58)
at org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(ClasspathEntry.java:1806)
at org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspathEntry(ClasspathEntry.java:1760)
at org.eclipse.jdt.internal.core.ClasspathValidation.validate(ClasspathValidation.java:68)
at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:51)
at org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:110)
at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1800)
at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:793)
at org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:4759)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClasspathContainerInitializer.requestClasspathContainerUpdate(SigilClasspathContainerInitializer.java:73)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.resetClasspath(SigilProject.java:358)
at org.apache.felix.sigil.ui.eclipse.handlers.project.RefreshSigilClasspathCommandHandler$1.execute(RefreshSigilClasspathCommandHandler.java:56)
at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:106)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1800)
at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:118)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56602,,,Tue Mar 02 12:36:24 UTC 2010,,,,,,0|i0vx0n:,184322,,,,,,,,24/Feb/10 23:01;davemssavage;This was due to non protected a.equals(b) check where the a could occasionally be null. reversed ordering to b.equals(a) to prevent this npe in future,02/Mar/10 12:36;davemssavage;Mark issues raised by me as closed,,,,,,,,,,,,,,,,,,,,,,,,,
Dependencies of optional resources should be optional,FELIX-2126,12457164,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,23/Feb/10 14:56,01/Apr/10 11:48,14/Mar/19 02:47,23/Feb/10 14:57,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56608,,,Tue Feb 23 14:57:38 UTC 2010,,,,,,0|i0vwtz:,184292,,,,,,,,"23/Feb/10 14:57;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResolverImpl.java
Committed r915363
",,,,,,,,,,,,,,,,,,,,,,,,,,
remove internal usage of deprecated Action interface,FELIX-2124,12457157,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,23/Feb/10 13:54,01/Apr/10 11:50,14/Mar/19 02:47,03/Mar/10 12:12,,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"The Action interface is deprecated and currently causes problems with logging, because Actions are generally not servlets.

So it's better to remove the usage of actions at least internally. The attached patch removes start level & gc actions used in VMStat. The action code goes into VMStat.doPost() method.",,,,,,,,,,,,,,,,,,,,23/Feb/10 13:54;v_valchev;remove_startlevel_gc_actions.patch;https://issues.apache.org/jira/secure/attachment/12436709/remove_startlevel_gc_actions.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-03 12:12:28.544,,,no_permission,,,,,,,,,,,56610,,,Wed Mar 03 12:12:28 UTC 2010,,,,,,0|i0vwzj:,184317,,,,,,,,"03/Mar/10 12:12;fmeschbe;Thanks for providing this patch which I applied in Rev. 918435.

This leaves a single implementation of the interface in the Web Console itself. The Action interface has been deprecated for quite some time now and I think it is about time to remove it (The sibbling interface Render has already been removed earlier).",,,,,,,,,,,,,,,,,,,,,,,,,,
Latest commit to ConfigurationRender is not OSGi/Minumum-1.0 compatible,FELIX-2123,12457152,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,23/Feb/10 13:10,01/Apr/10 11:50,14/Mar/19 02:47,04/Mar/10 08:02,webconsole-3.0.0,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"The method URLDecoder.decode( String, String ) is not available in Minumum EE. This is the reason for using the old, deprecated URLDecoder.decode( String ) method.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-03 10:27:43.048,,,no_permission,,,,,,,,,,,56611,,,Thu Mar 04 08:02:16 UTC 2010,,,,,,0|i0vwzr:,184318,,,,,,,,"03/Mar/10 10:27;fmeschbe;The problem with using the old signature is, that it almost certainly will break on non-UTF-8 platforms. How about this:

    try {
        URLDecoder.decode(String, String);
    catch (NoSuchMethodError) {
        URLDecoder.decode(String);
    }

WDYT ?","03/Mar/10 10:40;fmeschbe;I have implemented the proposed code snipped in a new WebConsoleUtil.urlDecode(String) method in Rev. 918391.

Does that work for you ?",04/Mar/10 07:56;v_valchev;perfect!,"04/Mar/10 08:02;fmeschbe;Good. Thanks for the feedback.
So this can be resolved.",,,,,,,,,,,,,,,,,,,,,,,
Possible NullPointerException reporting failure to instantiate a plugin,FELIX-2122,12457123,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,nilshartmann,nilshartmann,23/Feb/10 08:46,01/Apr/10 11:50,14/Mar/19 02:47,23/Feb/10 08:54,webconsole-2.0.6,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"From [1]:

In the catch-block you've added to OsgiManager in revision #898253, the line

if ( message.indexOf( ' ' ) < 0 )

can cause a NullPointerException as NoClassDefFoundError.getMessage() is allowed to return null according to the method's javadoc. (I'm running into this while installing the webconsole in Eclipse Equinox 3.3.2 with jdk1.5 on windows).

Can you fix this? Thank you very much! ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-23 08:54:27.486,,,no_permission,,,,,,,,,,,56612,,,Wed Feb 24 07:52:12 UTC 2010,,,,,,0|i0vwzb:,184316,,,,,,,,23/Feb/10 08:54;fmeschbe;Fixed in Rev. 915246 by catching the null case and providing a reasonable reason message,24/Feb/10 07:52;nilshartmann;Thank you very much for your fast response!!! Works now!,,,,,,,,,,,,,,,,,,,,,,,,,
"OBR plugin should hide the repository table, if OBR service is not available",FELIX-2120,12457018,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,22/Feb/10 15:55,01/Apr/10 11:50,14/Mar/19 02:47,03/Mar/10 12:48,,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,patch attached,,,,,,,,,,,,,,,,,,,,22/Feb/10 15:55;v_valchev;obr_hide.patch;https://issues.apache.org/jira/secure/attachment/12436581/obr_hide.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-03 12:48:43.125,,,no_permission,,,,,,,,,,,56614,,,Wed Mar 03 12:48:43 UTC 2010,,,,,,0|i0vwyn:,184313,,,,,,,,03/Mar/10 12:48;fmeschbe;Thanks for providing the patch. I have applied it in Rev. 918450.,,,,,,,,,,,,,,,,,,,,,,,,,,
"Bundle update fails, if OBR is not installed",FELIX-2119,12457016,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,22/Feb/10 15:38,01/Apr/10 11:50,14/Mar/19 02:47,03/Mar/10 12:47,,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"The reason for this is that UpdateHelper depends on OBR service API. While OBR is not a core service, its absence shouldn't disallow execution of normal bundle life-cycle commands.


Stack trace:

Exception: java.lang.NoClassDefFoundError: [Lorg/osgi/service/obr/Resource;
        at java.lang.Class.getDeclaredMethods0(Native Method)
        at java.lang.Class.privateGetDeclaredMethods(Unknown Source)
        at java.lang.Class.getDeclaredMethod(Unknown Source)
        at java.lang.Thread$1.run(Unknown Source)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.lang.Thread.auditSubclass(Unknown Source)
        at java.lang.Thread.isCCLOverridden(Unknown Source)
        at java.lang.Thread.init(Unknown Source)
        at java.lang.Thread.<init>(Unknown Source)
        at org.apache.felix.webconsole.internal.core.BaseUpdateInstallHelper.<init>(BaseUpdateInstallHelper.java:45)
        at org.apache.felix.webconsole.internal.core.UpdateHelper.<init>(UpdateHelper.java:52)
        at org.apache.felix.webconsole.internal.core.UpdateHelper.<init>(UpdateHelper.java:46)
        at org.apache.felix.webconsole.internal.core.BundlesServlet$4.<init>(BundlesServlet.java:1283)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.update(BundlesServlet.java:1282)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.doPost(BundlesServlet.java:312)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:815)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:372)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-03 12:31:24.48,,,no_permission,,,,,,,,,,,56615,,,Thu Mar 04 10:06:20 UTC 2010,,,,,,0|i0vwyf:,184312,,,,,,,,"03/Mar/10 12:31;fmeschbe;The problem is caused by the Thread.init method checking whether any security sensitive method, which is not final, is overwritten by the extension of the Thread class. This causes -- in the Sun VM -- all declared methods to be accessed which in turn causes the Resource interface to be required.

By refactoring the BsaeUpdateInstaller class in Rev. 918442/918443 the Thread class is now not overwritten any more and thus the methods are not accessed any longer. This should fix this issue.","03/Mar/10 12:47;fmeschbe;Also have to use a constant string as RepositoryAdmin service name instead of ""RepositoryAdmin.class"" expression to prevent ClassDefNotFoundError. Fixed in Rev. 918449.

This now completes fixing this issue.","04/Mar/10 08:37;v_valchev;Ok, now it works even if OBR is not installed. I'm just curious why the updateFromBundleLocation() method is so complex?

If we update a bundle from it's own location, then why bothering opening getting it's location, creating URL, getting the stream, update from the new stream, and then make sure stream is closed ..

Isn't it better to leave the framework do it's job and just use bundle.update(), instead of bundle.update(InputStream). Plus, the framework might have some optimizations on this update, and may perform it faster, than us (example it might internally cache the URL object for the location, might also check last updated time of the URLConnection, and if no-later than current, might decide to simply ignore the update operation).

So IMHO, the method show be:
private boolean updateFromBundleLocation() throws BundleException
    {
        getLog().log( LogService.LOG_DEBUG, ""Trying to update from bundle location "" + location );

        try
        {
                bundle.update();
                getLog().log( LogService.LOG_INFO, ""Bundle updated from bundle location "" + location );
                return true;
            }
        }
        catch ( Throwable ioe )
        {
            // BundleException, IllegalStateException or SecurityException? lets use OBR then
            getLog().log( LogService.LOG_DEBUG, ""Update failure from bundle location "" + location, ioe );
        }
        // not installed from the bundle location
        return false;
    }","04/Mar/10 10:06;fmeschbe;You are right ;-)

Created FELIX-2167 to track this change",,,,,,,,,,,,,,,,,,,,,,,
IE7 does not properly load license files into <pre> element,FELIX-2118,12456989,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,22/Feb/10 10:47,01/Apr/10 11:50,14/Mar/19 02:47,23/Feb/10 09:27,webconsole-3.0.0,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"As of Rev. 912186 the LicenseServlet loads the license file data into a <pre> element using the JQuery load() function.

This seems to not properly work in IE7.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56616,,,Tue Feb 23 09:27:20 UTC 2010,,,,,,0|i0vwz3:,184315,,,,,,,,"23/Feb/10 09:27;fmeschbe;Fixed in Rev. 915255 by wrapping the license data into <pre>-</pre> tags before injecting it into the DOM. This way IE correctly renders the fixed-format data. Other browsers are happy with that, too.",,,,,,,,,,,,,,,,,,,,,,,,,,
The reasons for adding a resource may contain the same requirement several times,FELIX-2114,12456858,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,19/Feb/10 23:12,01/Apr/10 11:48,14/Mar/19 02:47,19/Feb/10 23:13,bundlerepository-1.4.3,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56620,,,Fri Feb 19 23:13:47 UTC 2010,,,,,,0|i0vx4n:,184340,,,,,,,,"19/Feb/10 23:13;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResolverImpl.java
Committed r912029
",,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle.findEntries() matches '*<filePattern>' instead of '<filePattern>',FELIX-2107,12456767,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,mkuespert,mkuespert,19/Feb/10 12:19,01/Apr/10 13:01,14/Mar/19 02:47,20/Feb/10 07:28,framework-2.0.2,,,,,,,,,,framework-2.0.5,,,,Framework,,,,,,,0,,,,,,"If findEntries() is called without wildcards in <filePattern> and the bundle contains more than one resource ending with <filePattern> then URLs for all those resources are returned instead of the one exact match.

E.g. if the bundle contains the files:
  - WEB-INF/web.xml
  - WEB-INF/1-web.xml
then findEntries(""WEB-INF"", ""web.xml"", false) will return 2 URLs instead of 1.
",,,,,,,,,,,,,,,,,,,,19/Feb/10 12:24;mkuespert;bug_findentries-0.0.1-SNAPSHOT.jar;https://issues.apache.org/jira/secure/attachment/12436315/bug_findentries-0.0.1-SNAPSHOT.jar,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-20 07:28:43.071,,,no_permission,,,,,,,,,,,56627,,,Sat Feb 20 22:08:51 UTC 2010,,,,,,0|i0vx47:,184338,,,,,,,,"19/Feb/10 12:24;mkuespert;Attached simple testcase.

Call: 
  pax-run.sh --platform=felix --version=2.0.2 --profiles=core,compendium,log scan-bundle:file:bug_findentries-0.0.1-SNAPSHOT.jar
to reproduce the problem.

The bundle contains:

WEB-INF/
WEB-INF/1-web.xml
WEB-INF/web.xml

running it shows that the match is too greedy:

[org.test.bug_findentries.Activator] : calling: findEntries(""WEB-INF"", ""web.xml"", false) ...
[org.test.bug_findentries.Activator] :  - found URL: bundle://1.0:0/WEB-INF/1-web.xml
[org.test.bug_findentries.Activator] :  - found URL: bundle://1.0:0/WEB-INF/web.xml
[org.test.bug_findentries.Activator] : finished test.
","20/Feb/10 07:28;rickhall;I have committed a patch to fix this issue. It appears that our substring matching code had a couple of bugs in it which were causing false positives. I have created a test case for this situation now. Please close this issue if you are satisfied, thanks!",20/Feb/10 22:08;mkuespert;Thanks - the test now works as expected.,,,,,,,,,,,,,,,,,,,,,,,,
Make Web Console compatible with OSGi/Minimum-1.1 EE,FELIX-2105,12456713,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,fmeschbe,fmeschbe,18/Feb/10 21:23,01/Apr/10 11:50,14/Mar/19 02:47,18/Feb/10 21:24,webconsole-3.0.0,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"Initially reported in FELIX-1957:

The latest changes to the webconsole makes it again incompatible with the OSGi/Minimum EE:

- UUID used in ConfigurationRender is missing in OSGi/Minimum-1.2
- Collections.list(Enumeration) used in ComponentsServlet & ComponentConfigurationPrinter is not support by OSGi/Minimum-1.1. Although it is added in OSGi/Minimum-1.2, it's better for wider compatibility to replace this method with own. Simple implementation is given below:
class WebConsoleUtil {
 ....
     /**
     * This method is the same as Collections#list(Enumeration). The reason to duplicate it here,
     * is that it is missing in OSGi/Minimum execution environment.
     * 
     * @param e the enumeration which to convert
     * @return the list containing all enumeration entries.
     */
    public static final ArrayList list( Enumeration e )
    {
        ArrayList l = new ArrayList();
        while ( e.hasMoreElements() )
            l.add( e.nextElement() );
        return l;
    }

}

- Locale.Locale( String ) constructor is not available in OSGi/Minimum-1.1 (though available in OSGi/Minimum-1.2). However, for better compatibility we should use another approach.
So instead of:
DEFAULT_LOCALE = new Locale( """" )

it can be
DEFAULT_LOCALE = Locale.getDefault();

or even better (since our default language translation is English):
DEFAULT_LOCALE = Locale().ENGLISH",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56629,,,Thu Feb 18 21:24:52 UTC 2010,,,,,,0|i0vx3z:,184337,,,,,,,,"18/Feb/10 21:24;fmeschbe;Re UUID: Actually, this has only been introduced in Java 5, so it is a good idea to replace it
Re Collections.list(Enumeration): Agreed, but will create method in internal Util for now
Re Locale.Locale(String): Agreed with using Locale.ENGLISH (default locale would be de_CH on my box, which is not exactly english ;-) )

Implemented changes in Rev. 911590.",,,,,,,,,,,,,,,,,,,,,,,,,,
Bad exception thrown when an obr url can not be resolved,FELIX-2102,12456704,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,18/Feb/10 20:18,01/Apr/10 11:48,14/Mar/19 02:47,18/Feb/10 22:16,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"We should throw a clean exception instead of this ugly NoSuchElementException

karaf@root> cat obr://org.apache.aries.application.utils/1266508574845
java.util.NoSuchElementException
	at java.util.TreeMap.key(TreeMap.java:1206)
	at java.util.TreeMap.lastKey(TreeMap.java:274)
	at org.apache.felix.bundlerepository.ObrURLStreamHandlerService$NewestSelectionStrategy.determineVersion(ObrURLStreamHandlerService.java:243)
	at org.apache.felix.bundlerepository.ObrURLStreamHandlerService$ResourceSelectionStrategy.selectOne(ObrURLStreamHandlerService.java:197)
	at org.apache.felix.bundlerepository.ObrURLStreamHandlerService.getRemoteUrlForBundle(ObrURLStreamHandlerService.java:150)
	at org.apache.felix.bundlerepository.ObrURLStreamHandlerService.openConnection(ObrURLStreamHandlerService.java:115)
	at org.apache.felix.framework.URLHandlersStreamHandlerProxy.openConnection(URLHandlersStreamHandlerProxy.java:271)
	at java.net.URL.openConnection(URL.java:945)
	at java.net.URL.openStream(URL.java:1010)
	at org.apache.felix.karaf.shell.commands.CatAction.doExecute(CatAction.java:66)
	at org.apache.felix.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:41)
	at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)
	at org.apache.felix.gogo.runtime.shell.CommandProxy.execute(CommandProxy.java:45)
	at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:211)
	at org.apache.felix.gogo.runtime.shell.Closure.executeStatement(Closure.java:146)
	at org.apache.felix.gogo.runtime.shell.Pipe.run(Pipe.java:91)
	at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:75)
	at org.apache.felix.gogo.runtime.shell.CommandSessionImpl.execute(CommandSessionImpl.java:71)
	at org.apache.felix.karaf.shell.console.jline.Console.run(Console.java:174)
	at java.lang.Thread.run(Thread.java:637)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56632,,,Thu Feb 18 22:16:46 UTC 2010,,,,,,0|i0vx3j:,184335,,,,,,,,"18/Feb/10 22:16;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/ObrURLStreamHandlerService.java
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResolverImpl.java
Committed r911615
",,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultMetaTypeProvider.getLocales() must not reuturn an empty string entry,FELIX-2097,12456640,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,18/Feb/10 11:01,20/Nov/12 11:00,14/Mar/19 02:47,18/Feb/10 11:09,metatype-1.0.4,,,,,,,,,, metatype-1.0.6,,,,Metatype Service,Specification compliance,,,,,,0,,,,,,"The DefaultMetaTypeProvider.getLocales() currently returns a list of locales including the ""empty string"" locale because it simply returns a list of locale suffixes of the bundle entries providing localization strings. Since the empty string is not a valid language name (and merely is used as a catch all), this entry must not be returned.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56636,,,Tue Nov 20 11:00:51 UTC 2012,,,,,,0|i0l4cv:,121356,,,,,,,,18/Feb/10 11:09;fmeschbe;Fixed in Rev. 911325 (with improvements in Rev. 911329),20/Nov/12 11:00;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
AttributeDefinition with an empty default value must attribute must result in a single (empty string) entry string array,FELIX-2094,12456630,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,18/Feb/10 10:03,20/Nov/12 11:00,14/Mar/19 02:47,18/Feb/10 10:05,metatype-1.0.4,,,,,,,,,, metatype-1.0.6,,,,Metatype Service,Specification compliance,,,,,,0,,,,,,"Given an attribute definition of sorts

    <AD ... default="""" />

should result in an AttributeDefinition.getDefaultValue() returning a String[]{ """" }

Currently such a default value is assumed to be null.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56639,,,Tue Nov 20 11:00:51 UTC 2012,,,,,,0|i0l4d3:,121357,,,,,,,,18/Feb/10 10:05;fmeschbe;Fixed in Rev. 911304,20/Nov/12 11:00;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO doesn't always use the correct class loader,FELIX-2093,12456619,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,rickhall,rickhall,18/Feb/10 08:20,23/Apr/10 19:22,14/Mar/19 02:47,21/Feb/10 09:45,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,0,,,,,,"There are appears to be an issue with nullable object creation, where iPOJO uses the wrong class loader to generate the nullable object for an optional service dependency and this results in the component never getting created. The exact details are a little sketchy to me, but I have shown the example to Clement and he can fill in the details.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-18 09:22:36.305,,,no_permission,,,,,,,,,,,56640,,,Sun Feb 21 09:45:11 UTC 2010,,,,,,0|i0vx3b:,184334,,,,,,,,"18/Feb/10 09:22;clement.escoffier;The issue comes from the classloader used to create the Nullable object (dynamic proxy). 
Currently, we use the bundle classloader which is not necessary correct because it cannot resolve classes used by the service interface that are not imported (the basic solution is to import them).

Using the service interface classloader will fix this issue but break the Nullable interface support (which allows the implementation to detect if the object is a Nullable or not).  
","21/Feb/10 09:45;clement.escoffier;Fixed at revision 912323.
",,,,,,,,,,,,,,,,,,,,,,,,,
AbstractComponentManager.getBundle() may throw NullPointerException,FELIX-2091,12456542,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,17/Feb/10 14:42,16/Aug/10 12:11,14/Mar/19 02:47,17/Feb/10 15:02, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The AbstractComponentManager.getBundle() method may throw NullPointerException if called after the component has been disposed off. This may cause nasty log messages in the ComponentActorThread:

12.02.2010 19:08:56.913 *ERROR* [SCR Component Actor] org.apache.felix.scr Unexpected problem executing task Activate Component: org.apache.sling.engine.impl.SlingMainServlet (17) (java.lang.NullPointerException) java.lang.NullPointerException
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.getBundle(AbstractComponentManager.java:201)
	at org.apache.felix.scr.impl.ComponentActivatorTask.run(ComponentActivatorTask.java:60)
	at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:96)
	at java.lang.Thread.run(Unknown Source)

The check whether a component activation task should be executed should include the possibility that the component has been disposed off and the bundle is null.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56642,,,Mon Aug 16 12:11:48 UTC 2010,,,,,,0|i0vx1z:,184328,,,,,,,,17/Feb/10 15:02;fmeschbe;Fixed in Rev. 911004.,16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
"Multiple concurrency issues under heavy ""stop/start"" load",FELIX-2090,12456541,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,17/Feb/10 14:39,16/Aug/10 12:11,14/Mar/19 02:47,06/Aug/10 07:18, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Under certain circumstances -- mostly an update of much of the system induced by tools like FileInstall or Sling JCR Install -- concurrency issues between starting and stopping components may happen and cause all sorts of error messages:


(1) Probably Activator method call failure, cannot be logged, because the log method itself threw an NPE

12.02.2010 19:08:56.882 *ERROR* [SCR Component Actor] org.apache.felix.scr Unexpected problem executing task Enable Component: org.apache.sling.engine.impl.SlingMainServlet (17) (java.lang.NullPointerException) java.lang.NullPointerException
	at org.apache.felix.scr.impl.BundleComponentActivator.log(BundleComponentActivator.java:590)
	at org.apache.felix.scr.impl.BundleComponentActivator.log(BundleComponentActivator.java:565)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.log(AbstractComponentManager.java:496)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:232)


(2) After calling the activate method, the service registration fails because the bundle has in the meantime been stopped (or is being stopped):

12.02.2010 19:08:57.882 *ERROR* [SCR Component Actor] org.apache.felix.scr Unexpected problem executing task Enable Component: org.apache.sling.scripting.javascript.internal.RhinoJavaScriptEngineFactory (27) (java.lang.IllegalStateException: Can only register services while bundle is active or activating.) java.lang.IllegalStateException: Can only register services while bundle is active or activating.
	at org.apache.felix.framework.Felix.registerService(Felix.java:2681)
	at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:252)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:414)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerComponentService(AbstractComponentManager.java:425)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:1009)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:298)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56643,,,Mon Aug 16 12:11:47 UTC 2010,,,,,,0|i0vx1j:,184326,,,,,,,,"06/Aug/10 07:18;fmeschbe;With the implementation of synchronous component activation described in FELIX-2368, this problem has probably been solved.

Therefore I close this issue fixed. Should it occurr again (or in a similar way), a new issue should be created.",16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException thrown by LogWrapper if logging after bundle stop,FELIX-2089,12456534,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,17/Feb/10 13:43,22/Feb/10 06:59,14/Mar/19 02:47,17/Feb/10 13:55,eventadmin-1.2.2,,,,,,,,,,eventadmin-1.2.2,,,,Event Admin,,,,,,,0,,,,,,"Some Event delivery worker threads may still be running when the Event Admin bundle is stopped. If such threads try to log through the LogWrapper after that fact, an IllegalStateException may be thrown as follows:

12.02.2010 18:38:20.279 *ERROR* [Thread-22] org.apache.sling.extensions.threaddump.internal.Activator Uncaught exception in Thread Thread[Thread-22,5,main] java.lang.IllegalStateException: Invalid BundleContext.
	at org.apache.felix.framework.BundleContextImpl.checkValidity(BundleContextImpl.java:393)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:316)
	at org.apache.felix.eventadmin.impl.util.LogWrapper.log(LogWrapper.java:208)
	at org.apache.felix.eventadmin.impl.handler.BlacklistingHandlerTasks.blackList(BlacklistingHandlerTasks.java:172)
	at org.apache.felix.eventadmin.impl.tasks.HandlerTaskImpl.blackListHandler(HandlerTaskImpl.java:107)
	at org.apache.felix.eventadmin.impl.tasks.SyncDeliverTasks.execute(SyncDeliverTasks.java:269)
	at org.apache.felix.eventadmin.impl.tasks.AsyncDeliverTasks$TaskExecuter.run(AsyncDeliverTasks.java:110)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

(Note that the logger name ...Activator is just the logger of an UncaughtExceptionHandler registered with the Thread class).

The reason for this is, that the BundleActivator.stop() method does not inform the LogWrapper class, that the BundleContext will be invalidated.

A simple fix is to call the LogWrapper.setBundleContext method with a null argument to allow the LogWrapper to unregister as a LogService listener and drop all log service references to continue logging to stdout, if something would still be coming along.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56644,,,Wed Feb 17 13:55:18 UTC 2010,,,,,,0|i0vx1r:,184327,,,,,,,,17/Feb/10 13:55;fmeschbe;Implemented in Rev. 910976 to inform the LogWrapper that the bundle is being stopped and the service listener must be unregistered and the LogService references be dropped.,,,,,,,,,,,,,,,,,,,,,,,,,,
SCR Plugin ignores transitive dependencies when inspecting super classes,FELIX-2088,12456529,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,sseifert@pro-vision.de,sseifert@pro-vision.de,17/Feb/10 11:33,30/Apr/10 13:07,14/Mar/19 02:47,16/Mar/10 18:36,maven-scr-plugin-1.4.2,,,,,,,,,, maven-scr-plugin-1.4.4,,,,SCR Tooling,,,,,,,0,,,,,,"scenario:
- i've three maven-based bundle projects that depend on each other: A depends on B, B depends on C
- bundle A contains an abstract SCR component X wich defines some osgi properties and references
- bundle C contains a SCR component Y that extends X and is expected to inherit the osgi properties and references declared in X

problem: Y does not inherit the OSGI properties/references declared in X

reason: MavenJavaClassDescriptorManager uses project.getDependencyArtifacts() to iterate over the dependencies to check for SCR component metadata in other artifacts.
but the method getDependencyArtifacts() returns only the dependencies declared directly in the current pom, not the transitive dependencies.

the patch attached solves the problem.",,,,,,,,,,,,,,,,,,,,17/Feb/10 11:33;sseifert@pro-vision.de;100217_FELIX-2088_dependency_fix.patch;https://issues.apache.org/jira/secure/attachment/12436097/100217_FELIX-2088_dependency_fix.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-16 18:36:39.241,,,no_permission,,,,,,,,,,,56645,,,Tue Mar 16 18:36:39 UTC 2010,,,,,,0|i0vx1b:,184325,,,,,,,,"16/Mar/10 18:36;cziegeler;Thanks for your patch, Stefan - I've applied it in revision 923926",,,,,,,,,,,,,,,,,,,,,,,,,,
Use a different symbolic name for the bare web console bundle,FELIX-2086,12456517,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,17/Feb/10 09:32,01/Apr/10 11:50,14/Mar/19 02:47,17/Feb/10 11:56,webconsole-2.0.6,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"As defined in [1] the Web Console comes in two variants: full and bare.

Unfortunately, as remarked by Sahoo in [2], this is probably wrong and it must be made sure, that the bare variant gets a unique symbolic name to prevent confusion.

[1] http://felix.apache.org/site/apache-felix-web-console.html#ApacheFelixWebConsole-Variants
[2] http://markmail.org/thread/fphahm3v7vujuywg",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56647,,,Wed Feb 17 11:56:54 UTC 2010,,,,,,0|i0vx13:,184324,,,,,,,,17/Feb/10 11:56;fmeschbe;Changed the name of the bare variant to org.apache.felix.webconsole.bare in Rev. 910931,,,,,,,,,,,,,,,,,,,,,,,,,,
bundlerepository should mark dependencies it includes as optional,FELIX-2083,12456475,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,djencks,djencks,16/Feb/10 20:05,01/Apr/10 11:48,14/Mar/19 02:47,22/Feb/10 20:07,bundlerepository-1.4.3,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"I'm finding it really annoying to have to exclude in maven the dependencies that are bundled right into bundlerepository.  If they are marked ""optional"" then it's a lot easier to use the bundlerepository bundle in maven projects.",,,,,,,,,,,,,,,,,,,,16/Feb/10 20:08;djencks;FELIX-2083.diff;https://issues.apache.org/jira/secure/attachment/12436022/FELIX-2083.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-17 05:55:17.705,,,no_permission,,,,,,,,,,,56650,,,Mon Feb 22 20:07:22 UTC 2010,,,,,,0|i0vx2f:,184330,,,,,,,,16/Feb/10 20:08;djencks;The change I'd like to see... also IMO listing the parent pom location when it's released is a really bad idea.,"17/Feb/10 05:55;rickhall;I am fine with these changes, since I certainly don't have any maven expertise to say otherwise, but I will wait to see if anyone else raises any issues before committing.","22/Feb/10 20:07;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/pom.xml
Committed r915043
",,,,,,,,,,,,,,,,,,,,,,,,
Local resources should really be preferred over remote resources,FELIX-2082,12456459,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,16/Feb/10 17:53,01/Apr/10 11:48,14/Mar/19 02:47,16/Feb/10 19:36,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56651,,,Tue Feb 16 19:36:35 UTC 2010,,,,,,0|i0vycv:,184539,,,,,,,,"16/Feb/10 19:36;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResolverImpl.java
Committed r910659


I've added a flag:
  obr.resolver.preferLocal
which defaults to true, but if set to false will have the previous behavior.",,,,,,,,,,,,,,,,,,,,,,,,,,
Attribtues and directives and not used on local resources,FELIX-2081,12456458,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,16/Feb/10 17:46,01/Apr/10 11:48,14/Mar/19 02:47,16/Feb/10 17:52,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-17 05:34:45.561,,,no_permission,,,,,,,,,,,56652,,,Wed Feb 17 05:34:45 UTC 2010,,,,,,0|i0vx27:,184329,,,,,,,,"16/Feb/10 17:52;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/LocalRepositoryImpl.java
Committed r910622
","17/Feb/10 05:34;rickhall;Technically, the approach for directives is not correct. I think RFC 112 says that directives attribute names end with the "":"" character.

Personally, I think this is kind of hokey and the RFC should be updated to treat directives separately, but until then we need to append the "":"" to avoid directives overwriting attributes. I will make the fix.",,,,,,,,,,,,,,,,,,,,,,,,,
Not all callbacks invoked when declaring a service as required and starting it after dependencies,FELIX-2078,12456306,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,marrs,marrs,15/Feb/10 10:14,10/May/11 08:33,14/Mar/19 02:47,11/May/10 08:19,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"When you first register 2 services and then create a service that depends on them, marking the dependency as required causes one of the two callbacks to fail.

Workaround is to declare the dependency as optional.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56654,,,Tue May 10 08:33:35 UTC 2011,,,,,,0|i0vy2v:,184494,,,,,,,,11/May/10 08:19;marrs;The committed fix solves the issue. The test for this fix confirms that.,10/May/11 08:33;marrs;Part of the 3.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall creates ./load by default,FELIX-2069,12456110,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,12/Feb/10 08:14,17/Mar/15 07:04,14/Mar/19 02:47,19/Apr/10 17:29,fileinstall-2.0.8,,,,,,,,,,fileinstall-3.0.0,,,,File Install,,,,,,,0,,,,,,"If not configured, file install bundle creates ./load when it starts. Either it should not create any directory and wait for user to configure it or it should create a directory in tmp folder.",,,,,,,,,,,,,,,,,,,,03/Apr/10 00:55;sahoo;FELIX-2069.patch.txt;https://issues.apache.org/jira/secure/attachment/12440666/FELIX-2069.patch.txt,19/Apr/10 14:35;sahoo;FELIX-2069.patch2.txt;https://issues.apache.org/jira/secure/attachment/12442183/FELIX-2069.patch2.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-04-03 05:10:30.539,,,no_permission,,,,,,,,,,,18591,,,Mon Apr 19 17:29:57 UTC 2010,,,,,,0|i0vrlb:,183443,,,,,,,,03/Apr/10 00:55;sahoo;Simple patch to make fileinstall wait for configuration to arrive instead of creating ./load if no directory is specified.,"03/Apr/10 05:10;marrs;If not configured, it's perfectly fine in general for bundles to assume some kind of defaults and use those. To be honest, I don't like creating a ""load"" directory in some kind of temporary folder in that case. Creating the ""./load"" folder to me is a very reasonable default and I don't really see a need to change it.

To me, the only thing you could consider is: should FileInstall create a folder at all? In other words, if ""./load"" is the default, or whatever other folder is defined, and it does not exist, should FileInstall then create it or simply warn the user that the folder is not there. This would be an API breaking change.",03/Apr/10 05:53;sahoo;I see no point in FileInstall creating ./load. I am not sure how many people rely on this default behavior. May be we can take a poll to decide whether we need to introduce any flag to keep it compatible or not?,05/Apr/10 18:25;rickhall;+1 for not creating ./load,09/Apr/10 06:18;sahoo;Anyone else has any particular preference here? I would like a conclusion soon so that we can decide whether to include this in next release.,"09/Apr/10 06:28;gnt;AFAIK, the real problem is not creating the load directory, it's about having this directory being watched by default, right ?
 I think having a way to not have any watched directory by default is a good thing, however we may have users that use this behavior.
What about introducing a flag to not watch any directory by default ?
   org.felix.fileinstall.noDefaultWatchDir = false
or anything similar with a better name ;-)

We can always change the default value for the next major / minor version instead of the next micro ....","09/Apr/10 06:42;sahoo;For me the real problem is creation of ./load. I noticed my file system have many ./load directories and they must have been created because I would have started fileinstall bundle without configuring it properly. I am fine with introducing the flag as you mentioned. IIUC, when the flag is set to false (when not set, it defaults to false), it will take care of not creating the dir as well. ","09/Apr/10 06:53;marrs;So let's not create any folder (configured or default).
As far as I'm concerned we can then stick with the default being ""load"". I really dislike creating files or folders that are useful for users in /tmp as that is a ""scratch"" folder for non-human use.
The user should be warned if the (default or configured) folder does not exist (in which case FileInstall should keep monitoring the filesystem because the user might still create it manually afterwards).

These changes will break backward compatibility, so we would have to bump the version to 3.0.0 but that's no problem.
",09/Apr/10 07:09;sahoo;The above suggestion sounds good to me.,"16/Apr/10 07:12;sahoo;A new patch that does not create watchedDir (default or configured) if it does not exist. Instead, it prints a message and continues until the watchedDir is available.

I would like someone to look at this patch and apply it soon if it looks OK. I want to call for a release of fileinstall with some of the recent fixes that have been made.

Thanks,
Sahoo","19/Apr/10 14:35;sahoo;A new patch that does not create watchedDir (default or configured) if it does not exist. Instead, it prints a message and continues until the watchedDir is available.

I would like someone to look at this patch and apply it soon if it looks OK. I want to call for a release of fileinstall with some of the recent fixes that have been made.

Thanks,
Sahoo
","19/Apr/10 17:29;rickhall;The patch looked fine to me...I made a few minor changes and committed it.

I assume we no longer need the first submitted patch, so I didn't commit that. Please let me know if this is incorrect. Otherwise, please close the bug if satisfied. Thanks.",,,,,,,,,,,,,,,
Fragment bundle ignored silently when the host Bundle-SymbolicName equals import package name,FELIX-2067,12456066,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,mrduguo,mrduguo,11/Feb/10 20:44,15/Feb/10 11:11,14/Mar/19 02:47,12/Feb/10 09:05,framework-2.0.3,,,,,,,,,,framework-2.0.4,,,,Framework,,,,,,,0,fragment,,,,,"I reproduce the problem with two simple bundles. Attachment is the test bundles.

The test case export a package org.bug.api and import by itself.

Fail silently When the host Bundle-SymbolicName=org.bug.api
Success When the host Bundle-SymbolicName=org.bug.apix

It may caused the name used as key for maps.


====================================================================
FAILURE
====================================================================
-> install file:/tmp/fail/bug.bundle.fragment-0.0.1-SNAPSHOT.jar
Bundle ID: 3
-> install file:/tmp/fail/bug.bundle.host-0.0.1-SNAPSHOT.jar
Bundle ID: 4
-> start 4
-> ps
[   3] [Installed  ] [    1] Unnamed -
org.bug:bug.bundle.fragment:bundle:0.0.1-SNAPSHOT (0.0.1.SNAPSHOT)
[   4] [Active     ] [    1] Unnamed -
org.bug:bug.bundle.host:bundle:0.0.1-SNAPSHOT (0.0.1.SNAPSHOT)




====================================================================
EXPECTED
====================================================================
-> install file:/tmp/success/bug.bundle.fragment-0.0.1-SNAPSHOT.jar
Bundle ID: 3
-> install file:/tmp/success/bug.bundle.host-0.0.1-SNAPSHOT.jar
Bundle ID: 4
-> start 4
DEBUG: WIRE: 4.0 -> org.osgi.framework -> 0
DEBUG: FRAGMENT WIRE: 3.0 -> hosted by -> 4.0
-> ps
[   3] [Resolved   ] [    1] Unnamed -
org.bug:bug.bundle.fragment:bundle:0.0.1-SNAPSHOT (0.0.1.SNAPSHOT)
[   4] [Active     ] [    1] Unnamed -
org.bug:bug.bundle.host:bundle:0.0.1-SNAPSHOT (0.0.1.SNAPSHOT)
",ANY,,,,,,,,,,,,,,,,,,,11/Feb/10 20:51;mrduguo;testbundles.zip;https://issues.apache.org/jira/secure/attachment/12435609/testbundles.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-12 06:00:43.56,,,no_permission,,,,,,,,,,,56663,,,Mon Feb 15 11:11:54 UTC 2010,,,,,,0|i0vwmn:,184259,,,,,,,,"11/Feb/10 20:51;mrduguo;Related email discussion:
http://www.mail-archive.com/dev@felix.apache.org/msg14145.html

Related JIRA:
https://issues.apache.org/jira/browse/FELIX-1919","11/Feb/10 20:53;mrduguo;Affected version is release candidate 2.0.3 from
https://repository.apache.org/content/repositories/orgapachefelix-001/","12/Feb/10 06:00;rickhall;This issue was being caused by the new code for aggregating host/fragment dependencies. It needed to handle different types of dependencies (e.g., host, bundle, package) separately, but it was merging them all together. This allowed requirements with the same target name (e.g., bundle symbolic, package name) to interfere with each other, causing the requirements to be calculated incorrectly.

I have committed a patch for this issue against the trunk for any further maintenance releases to Framework 2.0.x. However, I verified that this bug was not introduced into the Framework 3.0.0 code in my sandbox. I plan to move my sandbox code to trunk shortly. So, I am currently undecided about how to handle this issue.","12/Feb/10 09:05;rickhall;I am resolving this issue, since it worked for me. Please verify against trunk. It looks like we'll cut a 2.0.4 release, which will hopefully be our last for 2.0.x.","15/Feb/10 11:11;mrduguo;verified against 2.0.4 release candidate:
https://repository.apache.org/content/repositories/orgapachefelix-003/

Thanks very much for the quick fix.",,,,,,,,,,,,,,,,,,,,,,
File Install fails to move fragment bundle into RESOLVED state,FELIX-2066,12456010,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,shreeneewas,shreeneewas,11/Feb/10 12:50,17/Mar/15 07:00,14/Mar/19 02:47,16/Mar/12 15:00,,,,,,,,,,,fileinstall-3.2.0,,,,File Install,,,,,,,1,fileinstall,fragment,resolved,,,"The file-install will install the fragment bundle but fails to move it to resolve. The fragment bundle remains in INSTALLED state. 

If we install it from equinox shell, then fragment bundle is installed and resolved correctly. 

Can someone please comment ?



","Windows XP, Java 6, Equinox , File-Install 2.0.8",,,,,,,,,,,,,,,,,,,13/Mar/10 20:41;shreeneewas;FELIX-2066.patch;https://issues.apache.org/jira/secure/attachment/12438708/FELIX-2066.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-11 14:20:42.672,,,no_permission,,,,,,,,,,,56664,,,Thu Jul 21 03:12:40 UTC 2011,,,,,,0|i07gr3:,41480,,,,,,,,"11/Feb/10 14:17;shreeneewas;Something I realized later:

The fragment bundle is not resolved only if its host bundle resides in another directory. The directory watcher needs to be made smarter to ensure that fragment bundles in all the directories are resolved again (using package admin service) in response to any directory change. 

Any comments pls?

","11/Feb/10 14:20;brindy;I noticed this very same problem today myself.  I can live with having the fragment in the same directory for now, but not in the long term.  Thanks in advance.",11/Feb/10 14:27;gnt;Is one of you fancy writing a patch for this problem ? I'd be happy to apply it ...,"11/Feb/10 14:38;brindy;I can probably take a look at the weekend, unless Shrini has time before then?","11/Feb/10 15:45;shreeneewas;Thanks everyone for comments. 

Chris, I would like to look into it.  But considering this being my first patch, I can not promise on time line. ","11/Feb/10 15:50;brindy;That's fine, I'll leave it for you to look at then, but let us know if you don't think you're going to be able to do it. :)","12/Feb/10 03:38;rickhall;I think this is more complicated than it sounds.

I think File Install will automatically start all bundles in a directory after it installs them. If fragments are coming from a separate directory and File Install deploys them after the host bundles, then it is too late to attach the fragments since the hosts have already been installed. However, if you can somehow guarantee that File Install processes the fragment directory before the host directory (I don't think this is possible), then it would work.

You may or may not notice this working in Equinox, because it supports dynamic attachment of fragments, but even it (from what I understand) will only dynamically attach fragments to a resolved host if the fragments do not import nor export anything. This is an under specified area of the spec and relying on any details is likely to leave your bundles implementation specific.

The only platform-neutral way is to modify File Install to deploy the fragment directory before the host directory and perform a refresh on all hosts.",12/Feb/10 09:01;brindy;I've been manually calling 'update' on the host bundle and that sorts it out.  Though while that works for me I suppose it could cause problems for other people?,"12/Feb/10 09:13;rickhall;Yeah, I think you can manually refresh the host too, without updating it and that should work too...that is what I was also saying in my suggestion for a ""platform-neutral"" approach.","12/Feb/10 10:08;shreeneewas;I agree with Richard that this is not a straight forward fix.

""The only platform-neutral way is to modify File Install to deploy the fragment directory before the host directory and perform a refresh on all hosts.""
But I think above proposal assumes that all fragments are dpeloyed in same directory which may not be a case. 

I was thinking of following option:

After every scan, if one or more (non-fragment) bundles have been installed, then call packageadmin.resolve(null). As per the javadoc call to this method with ""null"" means that framework will resolve all the unresolved bundles. This wil ensure that all unresolved fragments can get resolved.

This should be done before starting these new bundles to ensure that fragment bundles are attached to their host.

Any comments? 
","13/Feb/10 02:31;rickhall;Yes, I agree, that is the way. You could obviously make it smarter by parsing the Fragment-Host header and only refreshing the corresponding hosts.","23/Feb/10 13:43;shreeneewas;Just a FYI who is waiting for this fix. .... I am really held up over weekends in few high priority domestic things. 

Sorry about this but it seems I wont be able to look into this issue for next few weeks atleast.

I will submit my patch once I get free unless someone else had placed it before me.




","13/Mar/10 20:41;shreeneewas;This is the patch I would like to submit for the fix. 


","13/Mar/10 20:47;shreeneewas;At the moment, this fix invokes the ""resolveAll()"" of package admin service. This will be applied on all the unresolved bundles. 

I don't see any compelling reason to identify unresolved fragment bundles for calling resolve method on their host as Richard suggested. As package admin does that for you.

Please let me know your comments.

","16/Mar/10 09:59;gnt;I don't think calling resolve(null) is a good idea.  Fileinstall should not have any effect on bundles that are not managed by fileinstall, so we need to compute the exact list of bundles that need to be resolved (same as the ones to start ?) and only resolve those.

In addition, fileinstall has the feature to not resolve / start bundles at all if the property felix.fileinstall.bundles.new.start is set to false.  We should keep this behavior, or maybe add a new property named felix.fileinstall.bundles.new.resolve, so that people can configure fileinstall to only resolve the bundles correctly but not start them.","16/Mar/10 17:34;shreeneewas;I can see that submitted patch clearly misses to address above use case.


""so we need to compute the exact list of bundles that need to be resolved (same as the ones to start ?) and only resolve those.""
To refine above point - we should compute all those unresolved bundles handled by file install.

But I believe property ""felix.fileinstall.bundles.new.start"" affects only the startup action and not the resolve action. So in other words, file install always tries to resolve a bundle but the decision of starting it is driven by above mentioned flag. 

Do you think I got this right?


","16/Mar/10 17:40;gnt;Not completely.  Fileinstall does not try to ""resolve only"" any bundles at all.  Bundles are resolved only has a consequence of fileinstall starting them.  As fragments can't be started, fileinstall ignore those and they stay in the installed state.","21/Jul/11 03:12;gfremex;It's a long time since this bug has been reported.

We have to deploy fragment bundles. Everything is ok except the fragment bundles may not be attached to their host bundles.

Sometimes the attaching succeeded. Sometimes it failed.

Can anyone fix this bug?

Thanks!",,,,,,,,,
URLHandlersStreamHandler not getting handlers from frameworks that are inside a different classloader,FELIX-2056,12455697,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,08/Feb/10 23:15,14/Feb/10 22:07,14/Mar/19 02:47,14/Feb/10 22:07,framework-2.0.2,,,,,,,,,,framework-2.0.4,,,,Framework,,,,,,,0,,,,,,URLHandlersStreamHandler not getting handlers from frameworks that are inside a different classloader because we forget to return the value of the reflective call. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56673,,,Sun Feb 14 22:07:38 UTC 2010,,,,,,0|i0vzin:,184727,,,,,,,,14/Feb/10 22:07;karlpauls;Fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,
Handler require callback are not called if the service (required) is registered before the instance of the handler has been started.,FELIX-2052,12455622,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,jonathan.bardin,jonathan.bardin,08/Feb/10 12:05,25/Apr/10 14:40,14/Mar/19 02:47,08/Feb/10 19:16,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,0,callback,handler,,,,Handler require callback are not called if the service (required) is registered before the instance of the handler has been started.,"java 1.6, felix 2.0",,,,,,,,,,,,,,,,,,,08/Feb/10 12:09;jonathan.bardin;test.tar.gz;https://issues.apache.org/jira/secure/attachment/12435160/test.tar.gz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-08 19:16:50.64,,,no_permission,,,,,,,,,,,56677,,,Mon Feb 08 19:16:50 UTC 2010,,,,,,0|i0vxav:,184368,,,,,,,,"08/Feb/10 19:16;clement.escoffier;Fixed in the trunk.

As handler object are created before attached handlers are started, the onCreation method was never called. This is fixed now as the method is called during the starting process.",,,,,,,,,,,,,,,,,,,,,,,,,,
Obsolete embed directive for json library,FELIX-2050,12455545,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,06/Feb/10 18:04,01/Apr/10 11:51,14/Mar/19 02:47,06/Feb/10 18:05,webconsole-event-plugin-0.9.0,,,,,,,,,,webconsole-event-plugin-1.0.2,,,,Web Console,,,,,,,0,,,,,,The pom still contains the obsolete embed dependency directive for the json lib,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56679,,,Sat Feb 06 18:05:45 UTC 2010,,,,,,0|i0vzon:,184754,,,,,,,,"06/Feb/10 18:05;cziegeler;Removed in revision 907263, also updated maven bundle plugin to 2.0.1 and removed obsolete import package statement.",,,,,,,,,,,,,,,,,,,,,,,,,,
Service-Component property doesn't allow to use wildcards for filenames,FELIX-2048,12455510,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,bimschas,bimschas,05/Feb/10 23:54,11/Oct/11 17:09,14/Mar/19 02:47,27/Jun/11 15:14,maven-bundle-plugin-2.0.1,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,Maven Bundle Plugin,,,,,,,0,bnd,ds,maven,scr,service-component,"According to the OSGI 4.2 compendium specification it is allowed to use wildcards for the Service-Component manifest entry:

> XML documents containing component descriptions must be specified by the Service-Component header in the manifest. The value of the header is a comma separated list of paths to > XML entries within the bundle.
> Service-Component ::= header // 3.2.4
> The Service-Component header has no architected directives or properties.
> The last component of each path in the Service-Component header may use wildcards so that Bundle.findEntries can be used to locate the XML docu- ment within the bundle and its fragments. For example:
> Service-Component: OSGI-INF/*.xml

If I try to configure maven-bundle-plugin with the following settings:

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <version>2.0.1</version>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${pom.groupId}.${pom.artifactId}</Bundle-SymbolicName>
                        <Private-Package>${pom.groupId}.${pom.artifactId}.*</Private-Package>
                        <Service-Component>OSGI-INF/*.xml</Service-Component>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

I get the following Exception during execution:

Bad Service-Component header: OSGI-INF/*.xml, no such file OSGI-INF/*.xml
java.lang.NullPointerException
	at java.util.zip.ZipFile.getInputStream(ZipFile.java:180)
	at org.osgi.impl.bundle.obr.resource.BundleInfo.doDeclarativeServices(BundleInfo.java:194)
	at org.osgi.impl.bundle.obr.resource.BundleInfo.build(BundleInfo.java:95)
	at org.apache.felix.obrplugin.ExtractBindexInfo.<init>(ExtractBindexInfo.java:86)
	at org.apache.felix.obrplugin.ObrUpdate.updateRepository(ObrUpdate.java:223)
	at org.apache.felix.obrplugin.ObrInstall.updateLocalBundleMetadata(ObrInstall.java:183)
	at org.apache.felix.obrplugin.ObrInstall.execute(ObrInstall.java:142)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
org.apache.maven.plugin.MojoExecutionException: Exception
	at org.apache.felix.obrplugin.ExtractBindexInfo.<init>(ExtractBindexInfo.java:91)
	at org.apache.felix.obrplugin.ObrUpdate.updateRepository(ObrUpdate.java:223)
	at org.apache.felix.obrplugin.ObrInstall.updateLocalBundleMetadata(ObrInstall.java:183)
	at org.apache.felix.obrplugin.ObrInstall.execute(ObrInstall.java:142)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
[ERROR] unable to build Bindex informations
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
[WARNING] Exception while updating local OBR: BindexException
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
org.apache.maven.plugin.MojoExecutionException: BindexException
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
	at org.apache.felix.obrplugin.ObrUpdate.updateRepository(ObrUpdate.java:230)
	at org.apache.felix.obrplugin.ObrInstall.updateLocalBundleMetadata(ObrInstall.java:183)
	at org.apache.felix.obrplugin.ObrInstall.execute(ObrInstall.java:142)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-27 15:14:49.717,,,no_permission,,,,,,,,,,,56681,,,Mon Jun 27 15:14:49 UTC 2011,,,,,,0|i1ashz:,271083,,,,,,,,27/Jun/11 15:14;mcculls;This was fixed in 2.3.4 when we switched to the Felix bundlerepository OBR code.,,,,,,,,,,,,,,,,,,,,,,,,,,
WebConsole fails to register if Http Service is registered after Web Console start,FELIX-2034,12455166,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,03/Feb/10 12:22,01/Apr/10 11:50,14/Mar/19 02:47,03/Feb/10 12:27,webconsole-2.0.6,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"With fixing FELIX- 2009 the field webManagerRoot is only assigned if the OsgiManager is bound to the Http Service. If the OsgiManager starts and is configured before the Http Service is registered, the field remains unset and registration of the Http Service may cause the following dump:

03.02.2010 09:16:47.216 *ERROR* [FelixStartLevel]
org.apache.felix.webconsole bindHttpService: Problem setting up
(org.ops4j.lang.NullArgumentException: Alias is null.)
org.ops4j.lang.NullArgumentException: Alias is null.
	at org.ops4j.lang.NullArgumentException.validateNotNull(NullArgumentException.java:75)
	at org.ops4j.pax.web.service.internal.model.ServletModel.validateAlias(ServletModel.java:120)
	at org.ops4j.pax.web.service.internal.model.ServletModel.<init>(ServletModel.java:44)
	at org.ops4j.pax.web.service.internal.HttpServiceStarted.registerServlet(HttpServiceStarted.java:128)
	at org.ops4j.pax.web.service.internal.HttpServiceProxy.registerServlet(HttpServiceProxy.java:53)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager.bindHttpService(OsgiManager.java:689)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager$HttpServiceTracker.addingService(OsgiManager.java:498)
	at org.osgi.util.tracker.ServiceTracker$Tracked.trackAdding(ServiceTracker.java:1030)
	at org.osgi.util.tracker.ServiceTracker$Tracked.track(ServiceTracker.java:1008)


The only resolution here is to restart the WebConsole bundle or reconfigure the Web Console for the registration to take place again.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56695,,,Wed Feb 03 12:27:01 UTC 2010,,,,,,0|i0vxbb:,184370,,,,,,,,03/Feb/10 12:27;fmeschbe;Fixed in Rev. 906031,,,,,,,,,,,,,,,,,,,,,,,,,,
Services should be registered asynchronously,FELIX-2031,12455151,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,03/Feb/10 10:47,01/Apr/10 11:51,14/Mar/19 02:47,03/Feb/10 10:56,webconsole-event-plugin-0.9.0,,,,,,,,,,webconsole-event-plugin-1.0.2,,,,Web Console,,,,,,,0,,,,,,Some services are (un)registered during receival of a service event which is send synchronously. To avoid any problems these operations should be done asynchronously - when doing things synchronously I experienced a strange delay of exactly one minute.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-03 12:48:28.429,,,no_permission,,,,,,,,,,,56698,,,Wed Feb 03 13:23:21 UTC 2010,,,,,,0|i0vzhr:,184723,,,,,,,,03/Feb/10 10:56;cziegeler;Fixed in revision 905985,"03/Feb/10 12:48;fmeschbe;Just a thing to comment: While it is not a problem to delay acceptance of a newly registered service, delaying the release of an unregistering service might create issues. In the Rev. 905985 the window is actually half a second in which the service having gone might still be accessed...

What I do not understand is, why the Configuration Admin and Event Admin services are bound and why the ConfigurationListener and EventHandler services are only registered when the admin services exist ... I think the OptionalFeaturesHandler could just register the two services and be done.","03/Feb/10 13:00;cziegeler;The registration is done in this way as the required classes (event package or config package) might not be available.
The registration is not delayed - the service listener gets an event that the event admin is available and then registers (delay) an event handler.
If the service listeners gets an event that the event admin is gone, the event handler is unregistered (again delayed).
So this shouldn't create a problem.","03/Feb/10 13:23;fmeschbe;I see, people with reading abilities definitely have advantages..... Sorry for the noise.",,,,,,,,,,,,,,,,,,,,,,,
Webconsole cannot handle relative paths,FELIX-2030,12455145,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,jajans,jajans,03/Feb/10 07:58,08/Feb/11 09:46,14/Mar/19 02:47,03/Feb/10 13:44,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"Similar as FELIX-2000; when embedding Felix inside a Tomcat WAR which also registers Felix's HttpProxy on a relative path the webconsole does not work correctly anymore. All (generated) links don't take the relative path of the servlet into account. For example, when mounting the HttpProxy on /foo (which should cause the systemconsole to be accessed through ""/foo/system/console"") the Webconsole creates links like ""/system/console/bundles"" and such.",Tomcat 5.5 with Apache Felix 2.0.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-03 13:10:13.848,,,no_permission,,,,,,,,,,,56699,,,Tue Feb 08 09:46:44 UTC 2011,,,,,,0|i0vwm7:,184257,,,,,,,,03/Feb/10 13:10;fmeschbe;Thanks for reporting this issue. This is another issue with the ServletHandlerRequest class of the Http Base implementation. This should handle the getContextPath() method and return the concatenation of its own context path and servlet path instead of just the container's context path.,"03/Feb/10 13:44;fmeschbe;Committed the fix in Rev. 906041 and unit tests in 906042.

The fix is to consider the actual servlet path together with the container's context path instead of just the container's context path. This is of particular importance if the http bridge is used where the proxy servlet is not registered for ""/*"" but for something like ""/osgi"".",08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,,
"Support for ""default"" locale does not work",FELIX-2029,12455058,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,02/Feb/10 14:04,01/Apr/10 11:50,14/Mar/19 02:47,02/Feb/10 14:09,webconsole-2.0.6,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"The ResourceBundleCache supports hierarchies of locales with a default locale with an empty language at the root. This support is not properly implemented, though:

   * The root resource bundle is never linked into the tree, essentially have the ""language only"" Locale at the root
   * The root resource properties file is never found, because it is accessed with a partial name of ""_"" while it would be kept as """".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56700,,,Tue Feb 02 14:09:20 UTC 2010,,,,,,0|i0vzhj:,184722,,,,,,,,"02/Feb/10 14:09;fmeschbe;Rev. 905638: Properly handle the default locale both for placing it at the root of the Locale chain and for keeping it in the resource bundle entries map. Also ensure, that entires may not be overwritten by fragments.",,,,,,,,,,,,,,,,,,,,,,,,,,
[Branding] webconsole.product.image not treated correctly when referencing http resource,FELIX-2022,12447073,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,philk,philk,30/Jan/10 09:25,01/Apr/10 11:50,14/Mar/19 02:47,02/Feb/10 10:59,webconsole-2.0.6,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"When setting webconsole.product.image or webconsole.vendor.image to a http URL for an external image the default branding plugin treats the value still as a relative path to its bundle root.

The generated HTML code looks like this
<img src=""/system/consolehttp://www.somesite.com/sites/default/files/rec_logo.png>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-02 10:59:31.239,,,no_permission,,,,,,,,,,,56706,,,Tue Feb 02 10:59:31 UTC 2010,,,,,,0|i0vzhb:,184721,,,,,,,,02/Feb/10 10:59;fmeschbe;Thanks for reporting this issue. I have fixed it in Rev. 905574 by ensuring not to prefix any branding setting which migh be an absolute URL. Assumption is that an absolute path (leading slash) is to be prefixed and  anything else need not be prefixed.,,,,,,,,,,,,,,,,,,,,,,,,,,
"The Property value is 'null' in the Architecture description, while the value is well assigned to the component's field.",FELIX-2019,12447015,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,debbabi,debbabi,29/Jan/10 15:21,25/Apr/10 14:40,14/Mar/19 02:47,01/Feb/10 20:08,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,0,,,,,,"Here is my simple Component :

public class MyServiceImpl implements MyService {
	private long someAttribut;
	public void doSomething() {
		// TODO Auto-generated method stub
	}
}

And its metadata:

<component classname=""fr.liglab.adele.mediators.MyServiceImpl"" name=""MyServiceImpl"">
        <provides>
		<property name=""attribut"" field=""someAttribut"" value=""2000""/>
	</provides>
</component>
<instance component=""MyServiceImpl""/>

When I type 'arch' to see the architecture description of my instance, I get the following result:

instance name=""MyServiceImpl-0"" component.type=""MyServiceImpl"" state=""valid"" bundle=""15""
        handler name=""org.apache.felix.ipojo:provides"" state=""valid""
                provides service.id=""69"" state=""registered"" specifications=""[fr.liglab.adele.mediators.MyService]""
                        property name=""attribut"" value=""null""
                        property name=""factory.name"" value=""MyServiceImpl""
                        property name=""instance.name"" value=""MyServiceImpl-0""
        handler name=""org.apache.felix.ipojo:architecture"" state=""valid""


We notice that the ""attribut"" property has ""null"" value.

But on the service properties, the value is ""2000"" and not ""null"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-01 20:08:05.426,,,no_permission,,,,,,,,,,,56708,,,Mon Feb 01 20:08:05 UTC 2010,,,,,,0|i1asin:,271086,,,,,,,,"01/Feb/10 20:08;clement.escoffier;Fixed at revision 905398.
Thanks for this report.",,,,,,,,,,,,,,,,,,,,,,,,,,
Potential ClassCastException when a service property does not receive a value and is used in the constructor,FELIX-2014,12446833,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,27/Jan/10 17:02,25/Apr/10 14:40,14/Mar/19 02:47,27/Jan/10 17:05,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,0,,,,,,"If a component instance providing a service receive a configuration that does not assign a service property's field, when the pojo tried to do a 'if (prop == null)', a class cast exception happen. It comes from the injection of the NO_VALUE object instead of null. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56713,,,Wed Jan 27 17:05:28 UTC 2010,,,,,,0|i0vzrr:,184768,,,,,,,,"27/Jan/10 17:05;clement.escoffier;Fixed at revision: 903739.
Inject null instead of the NO_VALUE object.",,,,,,,,,,,,,,,,,,,,,,,,,,
Reconfiguring the web console location fails,FELIX-2009,12446695,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,26/Jan/10 15:52,01/Apr/10 11:50,14/Mar/19 02:47,27/Jan/10 12:31,webconsole-2.0.4,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"As reported by Ciprian Popa in FELIX-2005 [1] reconfiguring the web console location fails.

This is because the reconfiguration changes the global console location before unregistering the web console. Thus unregistration fails and re-registration fails, too, because the console servlet is still registered.

[1] https://issues.apache.org/jira/browse/FELIX-2005?focusedCommentId=12805059&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12805059",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56717,,,Wed Jan 27 12:31:27 UTC 2010,,,,,,0|i0w033:,184819,,,,,,,,"26/Jan/10 15:58;fmeschbe;Fixed in Rev. 903286 by first making sure, the location has really changed before re-registering. And then unregistration takes place with the old location and re-registration then uses the new location.","27/Jan/10 12:30;fmeschbe;Oops, wrong fix version, this is not released yet. Sorry.",27/Jan/10 12:31;fmeschbe;Resolved,,,,,,,,,,,,,,,,,,,,,,,,
JavaScript error on bundle page,FELIX-2007,12446668,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,26/Jan/10 12:49,01/Apr/10 11:50,14/Mar/19 02:47,27/Jan/10 12:32,webconsole-2.0.4,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"Message: '0' is null or not an object
Line: 2
Char: 5561
Code: 0
URI: http://localhost:4502/system/console/res/ui/jquery.tablesorter-2.0.3.min.js",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-27 12:32:18.309,,,no_permission,,,,,,,,,,,56719,,,Wed Jan 27 12:32:36 UTC 2010,,,,,,0|i0w02v:,184818,,,,,,,,26/Jan/10 13:00;cziegeler;Fixed in revision 903205 - a wrong variable was used for the cookie handling.,"27/Jan/10 12:32;fmeschbe;Oops, wrong fix version, this is not released yet. Sorry.",27/Jan/10 12:32;fmeschbe;Resolved.,,,,,,,,,,,,,,,,,,,,,,,,
"If an Error is thrown instantiated a component, the component remains in the Activating state and cannot be managed any longer",FELIX-2006,12446667,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,26/Jan/10 12:38,16/Aug/10 12:11,14/Mar/19 02:47,26/Jan/10 12:58, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"If an Error (e.g. ClassDefNotFoundError) is thrown in the ImmediateComponentManager.createImplementationObject method, this error is propagated through the complete call stack and caught outside of the ComponentManager thus leaving the ComponentManager in an uncontrollable state, namely ""Activating"".

The createImplementationObject method should catch Throwable and just log and return null if the implementation object cannot be instantiated due to an Error being thrown.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,56720,,,Mon Aug 16 12:11:47 UTC 2010,,,,,,0|i0w1q7:,185085,,,,,,,,26/Jan/10 12:58;fmeschbe;Fixed in Rev. 903203.,16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
"Configuration done using ""org.apache.felix.webconsole.internal.servlet.OsgiManager"" PID is not used by WebConsole",FELIX-2005,12446663,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,cyparu,cyparu,26/Jan/10 11:45,01/Apr/10 11:50,14/Mar/19 02:47,27/Jan/10 12:30,webconsole-2.0.6,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"I'm using Felix [2.0.1] with File Install [2.0.8] and WebConsole [2.0.6] 

Even that I use the file install (org.apache.felix.webconsole.internal.servlet.OsgiManager.cfg) or using manual updates done on Config (using the CM editor bundle: net.luminis.cmc_0.2.4.jar), and I also see that the config is included in CM but is not bound to org.apache.felix.webconsole.internal.servlet.OsgiManager PID. 

// Example: org.apache.felix.webconsole.internal.servlet.OsgiManager.cfg

# ---------------------------------------------------------
# Apache Felix Web Console configuration
# ---------------------------------------------------------
realm=OSGi Management Console
username=admin
password=nimda
manager.root=/syscon

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Additioanly it seams that the managedservice is not installed (Why I can't see it as a Managed Service ) for this PID ... (here are the services registered by web console bundle)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-> inspect s c 1
Apache Felix Web Management Console (1) provides services:
----------------------------------------------------------
objectClass = org.apache.felix.webconsole.ConfigurationPrinter
service.id = 46
----
objectClass = org.apache.felix.webconsole.ConfigurationPrinter
service.id = 47
----
objectClass = org.apache.felix.webconsole.ConfigurationPrinter
service.id = 48
----
objectClass = org.apache.felix.webconsole.ConfigurationPrinter
service.id = 49
----
objectClass = org.apache.felix.webconsole.ConfigurationPrinter
service.id = 50

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","OS: Windows XP SP3
Java: 1.6_016
OSGi framework: Felix [2.0.1] + File Install [2.0.8] + WebConsole [2.0.6]",,,,,,,,,,,,,,,,,,,26/Jan/10 14:32;cyparu;configuration-status-20100126-1521+0200.zip;https://issues.apache.org/jira/secure/attachment/12431426/configuration-status-20100126-1521%2B0200.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-01-26 12:24:05.214,,,no_permission,,,,,,,,,,,57047,,,Wed Jan 27 12:30:41 UTC 2010,,,,,,0|i0w02n:,184817,,,,,,,,"26/Jan/10 12:24;fmeschbe;Could it be tha the Web Console bundle is not bound to the Configuration Admin Service API ?

What happens when you visit ""Configuration"" page in the Web Console ?

The web console has an optional import on the CM service API package and happily starts without it -- but without registering a ManagedService. If you later install the respective bundle, the Web Console must be refreshed to bind to the new API and thus register a Managed Service.","26/Jan/10 12:41;cyparu;The web console is tarted with startlevel [6] and the ""core"" bundles (event, config..) are started with level [2]
Bellow is my config.ini used for felix 
+++++++++++++++++++++++++++++++++++++++++++++++
##############################
# Client bundles to install
##############################
felix.auto.start.1=\
""file:bundles/org.apache.felix.shell_1.4.1.jar"" \
""file:bundles/org.apache.felix.shell.tui_1.4.1.jar""
felix.auto.start.2=\
""file:bundles/org.apache.felix.configadmin_1.2.4.jar"" \
""file:bundles/org.apache.felix.eventadmin_1.0.0.jar"" \
""file:bundles/org.apache.felix.fileinstall_2.0.8.jar""
felix.auto.start.4=\
""file:bundles/org.apache.felix.prefs_1.0.4.jar"" \
""file:bundles/org.ops4j.pax.logging.pax-logging-service_1.4.jar"" \
""file:bundles/org.ops4j.pax.web.pax-web-jetty-bundle_0.8.0.jar"" \
""file:bundles/org.springframework.osgi.extender_2.0.0.M1.jar""
felix.auto.start.5=\
""file:bundles/org.apache.felix.shell_1.4.1.jar"" \
""file:bundles/org.apache.felix.org.apache.felix.shell.remote_1.0.4.jar"" \
""file:bundles/org.ops4j.pax.logging.pax-logging-api_1.4.jar"" \
""file:bundles/net.luminis.cmc_0.2.4.jar"" 
felix.auto.start.6=""file:bundles/org.apache.felix.webconsole_2.0.6.jar""
+++++++++++++++++++++++++++++++++++++++++++++++

Additionally here is a dump from the webconosle: system/console/config/configuration
+++++++++++++++++++++++++++++++++++++++++++++++

PID = org.apache.felix.webconsole.internal.servlet.OsgiManager
  BundleLocation = Unbound
  felix.fileinstall.filename = org.apache.felix.webconsole.internal.servlet.OsgiManager.cfg
  manager.root = /syscon
  password = nimda
  realm = OSGi Management Console
  service.pid = org.apache.felix.webconsole.internal.servlet.OsgiManager
  username = admin

Also using ""net.luminis.cmc"" console commands , it seams the ""org.apache.felix.webconsole.internal.servlet.OsgiManager"" PID is not associated to webconsole (all the other are OK as you see) :

+++++++++++++++++++++++++++++++++++++++++++++++++
-> cm list
Configuration list:
org.ops4j.pax.logging                                                                        file:bundles/org.ops4j.pax.logging.pax-logging-service_1.4.jar
org.ops4j.pax.web                                                                              file:bundles/org.ops4j.pax.web.pax-web-jetty-bundle_0.8.0.jar
org.apache.felix.webconsole.internal.servlet.OsgiManager

+++++++++++++++++++++++++++++++++++++++++++++++++

","26/Jan/10 13:17;fmeschbe;Thanks for the update.

Can you please attache the Configuration Status ZIP file to this issue please. You can get that file clicking on the ""ZIP"" link on the ""Configuration Status"" page in the Web Console. Thanks.","26/Jan/10 14:32;cyparu;Here is the attachment with the full zipped configuration.

My initial tests were done with the intention of changing the defaults in WebConsole (alias, user, pass) ... and then I found this issue (bug ?).
If you have any fast-fix for it please let me know, since unfortunately I don't have enough time to investigate/debug on my own ... :(","26/Jan/10 14:40;fmeschbe;Thanks for attaching the ZIP file. I now see the problem: You don't have the metatype service installed, which also prevents the ManagedService from bein registered.

If you install the Felix MetaType service implementation and refresh the web console you should get the configurability.

Taking over this issue to split the dependency on the meta type service from the dependency on the configuraiton admin service.","26/Jan/10 15:19;cyparu;It works as you describe it ... and additionally it works if the web console is nit started by default (org.apache.felix.webconsole_2.0.6.jar@noStart) 

But if the ""webconsole"" is started from the felx start, you'll get these error.... during the starting (CM updates) and you'll end up with the default configs (/system/console, ...etc).

[Configuration Updater] WARN org.apache.felix.webconsole - unbindHttpService: Failed unregistering Resources
java.lang.IllegalArgumentException: Alias [/syscon/res] was never registered
        at org.ops4j.pax.web.service.internal.HttpServiceStarted.unregister(HttpServiceStarted.java:163)
        at org.ops4j.pax.web.service.internal.HttpServiceProxy.unregister(HttpServiceProxy.java:70)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.unbindHttpService(OsgiManager.java:659)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.updateConfiguration(OsgiManager.java:806)
        at org.apache.felix.webconsole.internal.servlet.ConfigurationListener.updated(ConfigurationListener.java:72)
        at org.apache.felix.cm.impl.ConfigurationManager$UpdateConfiguration.run(ConfigurationManager.java:1389)
        at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:88)

Anyway, this is a minor issue since if you stop/start the bundle it will get it correctly ... so 10x a lot  for your fast reply , and hope you'll solve this minor annoyance.","26/Jan/10 15:41;fmeschbe;Fixed two issues regarding MetaType servide API in Rev. 903278:

(1) Separated the MetaTypeProvider implementation into an extension of the ConfigurationListener class. Now the console first tries to create and register the fulll monty (MetaTypeProvider plus ManagedService). If that fails, the console falls back to just the ManagedService. If that fails, too, nothing is registered.

(2) The ComponentsServlet depends on the MetaType service API and thus the ComponentConfigurationPrinter failed to print cmponenents because a static method from ComponentsServlet could not be accessed. I have moved the method to the ComponentConfigurationPrinter class, so that this works even in the absence of the MetaType service API.","26/Jan/10 15:53;fmeschbe;> Anyway, this is a minor issue since if you stop/start the bundle it will get it correctly

I created FELIX-2009 to track this new issue. Thanks for reporting.","26/Jan/10 19:30;cyparu;That's just great ! My congrats, you've been so fast and helpful !  Thank you a lot !  ","27/Jan/10 12:29;fmeschbe;Oops, wrong fix version, this is not released yet. Sorry.",27/Jan/10 12:30;fmeschbe;Resolved,,,,,,,,,,,,,,,,
maven-bundle-plugin 2.0.1 uses bnd 0.0.357 for which a bugfix is available,FELIX-2003,12446645,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,gruetter,gruetter,26/Jan/10 08:44,10/Feb/10 21:05,14/Mar/19 02:47,09/Feb/10 16:43,maven-bundle-plugin-2.0.1,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"BND 0.0.357 contains a bug with respect to locating OSGi service components. Peter Kriens has already fixed this bug in October 2009 and published BND 0.0.366. However, the maven-bundle-plugin still uses version 0.0.357 which causes our builds to fail. A 2.0.2 version of the maven bundle plugin with an updated dependency to the bnd library would be highly helpful. ","All OS, Mac, PC, Java 1.6.0_17",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-02 11:03:10.533,,,no_permission,,,,,,,,,,,57049,,,Wed Feb 10 21:05:31 UTC 2010,,,,,,0|i0vziv:,184728,,,,,,,,"02/Feb/10 11:03;mcculls;Note: you can tell Maven to use a different version of the Bnd Tool dependency when running the bundleplugin, for example:

        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>2.0.1</version>
          <dependencies>
            <dependency>
              <groupId>biz.aQute</groupId>
              <artifactId>bndlib</artifactId>
              <version>0.0.366</version>
            </dependency>
          </dependencies>
        </plugin>

put this in your POM (under build/plugins or preferably build/pluginManagement/plugins) and it will use the newer version.

The gotcha is that the new version of the Bnd Tool must be installed either in your local Maven repository, or in one of the
remote repositories used by your POM. At the moment the latest version of the Bnd Tool on Maven central is still 0.0.357.
( I was hoping Peter could hook up his build to deploy releases to Maven central, but this effort seems to have stalled... )
","09/Feb/10 16:43;gruetter;Thanks Stuart! I wasn't aware of the possibility to manually specify the plugin subdependency in the pom. I'll send Peter an email and ask him to upload the 0.0.366 version to the maven repository.

Cheers,
Georg","09/Feb/10 17:08;h2o;The bnd repo is already at http://www.aqute.biz/repo - you can add this to your repository manager and it will work. Unfortunately what won't work is then plugging bnd into the maven-bundle-plugin (at least  not the latest version), since it will die with a NoSuchMethodError..
So you need to experiment which version will still work, or update the maven plugin source.
","10/Feb/10 21:05;gruetter;Thanks for that hint. We currently solved the issue by deploying the
0.0.366 version of bnd to our local Archiva repository. Works for us
but I'll keep an eye on developments on your end.




-- 
mailto:gruetter@gmail.com
blog#http://www.g16g.de
skype:georg.gruetter
icq:343459701
",,,,,,,,,,,,,,,,,,,,,,,
Uninstalled fragments are not properly detached,FELIX-2002,12446363,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,22/Jan/10 20:02,29/Jan/10 21:32,14/Mar/19 02:47,29/Jan/10 21:32,framework-2.0.2,,,,,,,,,,framework-2.0.3,,,,,,,,,,,0,,,,,,"Fragments are automatically merged into hosts as soon as the fragment and/or host is installed. If a fragment that is merged into a yet-to-be-resolved host is uninstalled, it is not detached from the host. Subsequent attempts to resolve the host will result in an exception since it assumes the fragment is still merged.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57050,,,Fri Jan 29 21:32:27 UTC 2010,,,,,,0|i1asjj:,271090,,,,,,,,29/Jan/10 21:32;rickhall;I committed a patch to unmerge uninstalled fragment bundles from unresolved hosts. Appears to be resolved.,,,,,,,,,,,,,,,,,,,,,,,,,,
The classes in the http.base bundle do not properly handle ServletRequest.getPathInfo() == null,FELIX-1999,12446203,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,21/Jan/10 08:32,08/Feb/11 09:46,14/Mar/19 02:47,09/Jan/11 18:17,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"ServletRequest.getPathInfo() is allowed to return null (if there is no additional path information).

For example, IBM WebSphere returns null if the client accesses the Servlet context without a trailing slash (Jetty in this case redirects to the context path with a trailing slash and thus this case does not happen).

To prevent NullPointerExceptions from happening the FilterHandler.match and ServletHandler.match methods must guard against the uri parameter being null",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57053,,,Tue Feb 08 09:46:43 UTC 2011,,,,,,0|i0w1gf:,185041,,,,,,,,"21/Jan/10 08:52;fmeschbe;Fixed said match methods to handle a null uri parameter as if it would be ""/"" in Rev. 901600. Also added test cases to verify.",03/Feb/10 13:45;fmeschbe;I think this can be closed.,"09/Jan/11 18:17;fmeschbe;Reopening to fix the resolution: Should be fixed instead of invalid, of course.",09/Jan/11 18:17;fmeschbe;Resolving fixed.,08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,
Use UTF-8 when decoding reference location URLs,FELIX-1998,12446029,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,20/Jan/10 14:46,20/Jan/10 14:48,14/Mar/19 02:47,20/Jan/10 14:48,framework-2.0.2,,,,,,,,,,framework-2.0.3,,,,Framework,,,,,,,0,,,,,,It is recommended to use UTF-8 when decoding URLs to avoid some incompatibilities.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57054,,,Wed Jan 20 14:48:07 UTC 2010,,,,,,0|i1asjz:,271092,,,,,,,,20/Jan/10 14:48;rickhall;Committed fixed suggested by David Jencks.,,,,,,,,,,,,,,,,,,,,,,,,,,
Actual configuration might not be reflected in the web console,FELIX-1997,12446020,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,20/Jan/10 12:00,16/Aug/10 12:11,14/Mar/19 02:47,18/Mar/10 21:19, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"If no configuration exists in the config admin, a default configuration is used which is derived from framework properties.
If these properties do not match the default settings, than the configuration view in the web console shows the wrong default settings - and not the 
settings that are currently used.
One possible solution to fix this might be to create a configuration if the framework properties do not match the default settings",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-20 12:28:01.794,,,no_permission,,,,,,,,,,,57055,,,Mon Aug 16 12:11:46 UTC 2010,,,,,,0|i0w1pz:,185084,,,,,,,,"20/Jan/10 12:28;fmeschbe;I assume this is a web console issue....

As for the configuration: The Web Console uses the current configuration (if available) or the configuration from the Metatype Service as the contents for the configuration form. For now, the Web Console does not take any framework properties into consideration.

It could of course be implemented, that in the absence of a Configuration Admin configuration, any Metatype servcie property might be ""overwritten"" by framework properties. The problem, of course is, that not all configuration users support framework properties. So this has the danger of not reflecting reality, too.","20/Jan/10 12:52;cziegeler;I'm not sure if this is a web console problem - the web console does not know if a service uses framework properties if no configuration is available.
Some might others don't - so I think this can't be solved in general in the web console.
Maybe another solution would be that the scr bundle creates the metatype information dynamically.","20/Jan/10 13:07;fmeschbe;> Maybe another solution would be that the scr bundle creates the metatype information dynamically. 

Probably not, because SCR does not know anything about metatype properties provided by the bundles. Its none of the business of the SCR: SCR just takes the descriptors merges in any configuration admin configuration (and ComponentFactory.newInstance properties in the ComponentFactory case) and gives this to the component.

It is up to the component to configure itself from the provided properties and the framework properties.

But, the bundle providing the component could do that. For example the Web Console main servlet itself registers a MetaTypeProvider service providing dynamic information (the use case is dyanimcally generating the plugins to enable or disable).","20/Jan/10 13:09;fmeschbe;Oh, Carsten just told me, that I was misunderstanding him.

Point is that the Apache Felix SCR is configurable through framework properties *and* configuration admin configuration  but the metatype descriptor provided does not reflect the framework property state.

The fix is easy: the Apache Felix SCR bundle registers a MetaTypeProvider providing the meta type information dynamically merged from the default configuration and the framework property configuration.","20/Jan/10 15:07;cziegeler;I've committed a first version of a dynamic meta type provider with revision 901223.
I'll leave this issue open for further testing and possible improvements.","18/Mar/10 21:19;fmeschbe;I think we can resolve this for now.

If new requirements or bugs come up, we can create a new issue.",16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,
Change the use of the § character as a separator in the BundleRepositoryRender class,FELIX-1992,12445859,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,18/Jan/10 20:29,01/Apr/10 11:50,14/Mar/19 02:47,20/Jan/10 13:19,webconsole-2.0.6,,,,,,,,,,webconsole-3.0.0,,,,Web Console,,,,,,,0,,,,,,"The § character is neither an ASCII nor an ISO-8859-1 character and causes compilation issues on non-UTF-8 systems.

A new character should be used as the separator in the temporary sorted set for building the OBR resource list.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-18 20:37:40.329,,,no_permission,,,,,,,,,,,57060,,,Wed Jan 20 13:19:34 UTC 2010,,,,,,0|i0vwt3:,184288,,,,,,,,"18/Jan/10 20:31;fmeschbe;Potential patch to be tested

Index: BundleRepositoryRender.java
===================================================================
--- BundleRepositoryRender.java	(revision 900194)
+++ BundleRepositoryRender.java	(working copy)
@@ -278,7 +278,7 @@
                         }
                         versions.add( version );
 
-                        labels.add( res.getPresentationName() + ""§"" + symbolicName );
+                        labels.add( res.getPresentationName() + Character.MAX_VALUE + symbolicName );
                     }
                 }
             }
@@ -290,7 +290,7 @@
         for ( Iterator ri = labels.iterator(); ri.hasNext(); )
         {
             final String label = ( String ) ri.next();
-            final int idx = label.indexOf( '§' );
+            final int idx = label.indexOf( Character.MAX_VALUE );
             final String presName = label.substring( 0, idx );
             final String symName = label.substring( idx + 1 );
             final Collection versions = ( Collection ) resSet.remove( symName );
","18/Jan/10 20:37;clement.escoffier;You can also just configure Maven to set the encoding:
<plugin>
  <artifactId>maven-compiler-plugin</artifactId>
  <configuration>
    <encoding>UTF-8</encoding>
  </configuration>
</plugin>
(that's how I built the project)",20/Jan/10 13:19;fmeschbe;Applied proposed patch in Rev. 901181.,,,,,,,,,,,,,,,,,,,,,,,,
Some links are broken at top page!,FELIX-1986,12445522,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,kompiro,kompiro,14/Jan/10 14:52,05/Feb/10 20:25,14/Mar/19 02:47,05/Feb/10 20:25,,,,,,,,,,,,,,,,,,,,,,0,,,,,,"There are some broken links at Felix top page.
I found these links are broken ""Config Admin"" and ""Shell"" and ""Log"" .",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-14 15:02:58.353,,,no_permission,,,,,,,,,,,57066,,,Fri Feb 05 20:25:53 UTC 2010,,,,,,0|i0vzev:,184710,,,,,,,,"14/Jan/10 15:02;rickhall;Yeah, I noticed this for Log a couple of days ago, so I touched the page to see if I could get it to regenerate, but then forgot to follow up on it. I have no idea why this is happening. Thanks for reporting it, we'll have to look into it.",05/Feb/10 20:25;rickhall;Fixed.,,,,,,,,,,,,,,,,,,,,,,,,,
Error when Include-Resource instruction contains duplicate paths.,FELIX-1985,12445408,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,pierre.bourret,pierre.bourret,13/Jan/10 15:18,11/Oct/11 17:09,14/Mar/19 02:47,25/Jun/11 19:54,maven-bundle-plugin-2.0.1,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"With the following maven-bundle-plugin configuration :
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.0.1</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            ...
            <Include-Resource>
              {maven-resources},
              META-INF/LICENSE=LICENSE,
              META-INF/NOTICE=NOTICE
            </Include-Resource>
          </instructions>
        </configuration>
      </plugin>

I get these errors :
    [ERROR] Error building bundle org.ow2.chameleon.handies:org.ow2.chameleon.handies.ipojo-tccl-handler:bundle:0.0.1-SNAPSHOT : Input file does not exist: LICENSE~
    [ERROR] Error building bundle org.ow2.chameleon.handies:org.ow2.chameleon.handies.ipojo-tccl-handler:bundle:0.0.1-SNAPSHOT : Input file does not exist: NOTICE~
    [ERROR] Error(s) found in bundle configuration
(Note the trailing '~' at the end of the real file names)

But when I insert whitespaces around the '=' symbol (either before or after it), it works : neither error nor warning.

            <Include-Resource>
              {maven-resources},
              META-INF/LICENSE =LICENSE,
              META-INF/NOTICE= NOTICE
            </Include-Resource>

   [INFO] BUILD SUCCESSFUL

The first configuration (the one without spaces around '=') works with the 1.4.3 version of the maven-bundle-plugin.

Is this a regression ? Or maybe the syntax of the Include-Resource instruction has changed since the 1.4.3 version (may it affect other instruction too ?).",Linux quartz 2.6.31-17-generic #54-Ubuntu SMP Thu Dec 10 17:01:44 UTC 2009 x86_64 GNU/Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-13 15:31:18.865,,,no_permission,,,,,,,,,,,57067,,,Sat Jun 25 19:54:39 UTC 2011,,,,,,0|i1askn:,271095,,,,,,,,"13/Jan/10 15:31;mcculls;The trailing '~' is typically seen with duplicate entries - a recent change in how the Bnd Tool processes the instructions meant duplicate clauses are tagged with '~' which then leads to failures finding the named resource because the original path doesn't have '~'. Note that this is part of the general purpose Bnd instruction processing that was added to support merging of clauses and just has an unfortunate side effect when Include-Resource contains duplicate entries (something that only happens when Include-Resource is generated).

This was fixed for Include-Resource in FELIX-1262 which is in 2.0.1...

   http://issues.apache.org/jira/browse/FELIX-1262?focusedCommentId=12730288&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12730288

but perhaps this fix missed a corner case involving {maven-resources} ... if this expands to also contain entries for META-INF/LICENSE etc. then you would have duplicate entries and they'd be tagged with '~' (the fix is supposed to filter out these duplicate entries before they reach the Bnd Tool). Adding spaces to the clause probably makes them different enough from the generated entries which explains why you don't see the error.

","13/Jan/10 15:33;mcculls;If you run with ""mvn -X"" you'll get a load of debug (pipe it to a file) including the exact instructions the bundleplugin passes on to the Bnd Tool (ie. after processing) which you can check to see if it does contain any duplicate Include-Resource clauses.","13/Jan/10 16:13;pierre.bourret;First, thanks for reacting so fast !

I have run maven with the -X flag and have noticed that the LICENSE and NOTICE files are included twice. After checking again the pom hierarchy, I've found that the parent pom of my project already contains <resource> instructions to add LICENSE and NOTICE in the project resources. So the entries in the bundle-plugin configuration are redundant. You're right !

It was my fault... Sorry to report a non-issue. I'm going to close this immediately...","13/Jan/10 16:17;mcculls;Well, we could also be more robust in the plugin and remove the duplicates - so feel free to leave it open and I'll fix it for the next release.",25/Jun/11 19:54;mcculls;Changed the error into a warning in r1139605,,,,,,,,,,,,,,,,,,,,,,
Components starts disabled,FELIX-1984,12445393,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,artur.opala,artur.opala,13/Jan/10 11:14,13/Sep/10 10:20,14/Mar/19 02:47,08/Sep/10 07:41, configadmin-1.2.4,,,,,,,,,, configadmin-1.2.8,,,,Configuration Admin,,,,,,,0,,,,,,"From SCR version 1.2.0 all components starts with state 'disabled', SCR 1.0.8 worked fine. Configuration dump attached as zip file.

{code}
0=[pl.eurobank.osgi.springframework.web.SpringServletContextListener]
Bundlepl.eurobank.osgi.springframework-bundle (11)
State=disabled
DefaultState=enabled
Activation=delayed
ServiceType=service
Services=javax.servlet.ServletContextListener
Properties=
component.id=0
component.name=pl.eurobank.osgi.springframework.web.SpringServletContextListener
service.pid=pl.eurobank.osgi.springframework.web.SpringServletContextListener

1=[pl.eurobank.osgi.launcher.bundle.internal.LauncherSupportActivator]
Bundlepl.eurobank.osgi.launcher-bundle (18)
State=disabled
DefaultState=enabled
Activation=immediate
Reference=bundleProviderService, Satisfied
Service Name: pl.eurobank.osgi.deployment.BundleProviderService
Multiple: single
Optional: optional
Policy: dynamic
No Services bound
Reference=httpService, Satisfied
Service Name: org.osgi.service.http.HttpService
Multiple: single
Optional: optional
Policy: dynamic
No Services bound
Reference=logReader, Satisfied
Service Name: org.osgi.service.log.LogReaderService
Multiple: single
Optional: optional
Policy: dynamic
No Services bound
Properties=
component.id=1
component.name=pl.eurobank.osgi.launcher.bundle.internal.LauncherSupportActivator
service.pid=pl.eurobank.osgi.launcher.bundle.internal.LauncherSupportActivator

2=[pl.eurobank.osgi.struts.internal.TestFilter]
Bundlepl.eurobank.osgi.struts-1-2-bundle (19)
State=disabled
DefaultState=enabled
Activation=delayed
ServiceType=service
Services=javax.servlet.Filter
Properties=
alias=/test2/*
component.id=2
component.name=pl.eurobank.osgi.struts.internal.TestFilter
contextPath=/bar
init.testparam=testvalue
service.pid=pl.eurobank.osgi.struts.internal.TestFilter
service.ranking=50

3=[pl.eurobank.osgi.struts.internal.IndexServlet]
Bundlepl.eurobank.osgi.struts-1-2-bundle (19)
State=disabled
DefaultState=enabled
Activation=delayed
ServiceType=service
Services=javax.servlet.Servlet
Properties=
alias=/index
component.id=3
component.name=pl.eurobank.osgi.struts.internal.IndexServlet
contextPath=/
init.testparam=testvalue
service.pid=pl.eurobank.osgi.struts.internal.IndexServlet

4=[pl.eurobank.osgi.struts.internal.StrutsProxyServlet]
Bundlepl.eurobank.osgi.struts-1-2-bundle (19)
State=disabled
DefaultState=enabled
Activation=delayed
ServiceType=service
Services=javax.servlet.Servlet
Properties=
alias=*.ebk
component.id=4
component.name=pl.eurobank.osgi.struts.internal.StrutsProxyServlet
service.pid=pl.eurobank.osgi.struts.internal.StrutsProxyServlet

5=[pl.eurobank.osgi.jsp.internal.JspProxyServlet]
Bundlepl.eurobank.osgi.jsp-bundle (20)
State=disabled
DefaultState=enabled
Activation=delayed
ServiceType=service
Services=org.osgi.util.tracker.BundleTrackerCustomizer, java.io.Serializable, javax.servlet.Servlet, javax.servlet.ServletConfig
Properties=
alias=*.jsp
component.id=5
component.name=pl.eurobank.osgi.jsp.internal.JspProxyServlet
service.pid=pl.eurobank.osgi.jsp.internal.JspProxyServlet

6=[pl.eurobank.multipulpit.system.menu.MenuService]
Bundleeb-multipulpit-system (25)
State=disabled
DefaultState=enabled
Activation=immediate
ServiceType=service
Services=pl.eurobank.multipulpit.system.menu.MenuService
Properties=
component.id=6
component.name=pl.eurobank.multipulpit.system.menu.MenuService
service.pid=pl.eurobank.multipulpit.system.menu.MenuService
{code}",felix-2.0.2,,,,,,,,,,,,,,,,,,,13/Jan/10 11:16;artur.opala;configuration-status-20100113-1209+0100.zip;https://issues.apache.org/jira/secure/attachment/12430122/configuration-status-20100113-1209%2B0100.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-01-21 08:25:59.026,,,no_permission,,,,,,,,,,,57068,,,Mon Sep 13 10:20:16 UTC 2010,,,,,,0|i0vwlz:,184256,,,,,,,,"13/Jan/10 11:43;artur.opala;Declaration of a selected component

<?xml version=""1.0"" encoding=""UTF-8""?>
<components xmlns:scr=""http://www.osgi.org/xmlns/scr/v1.0.0"">
    <scr:component enabled=""true"" immediate=""true"" name=""pl.eurobank.osgi.launcher.bundle.internal.LauncherSupportActivator"">
        <implementation class=""pl.eurobank.osgi.launcher.bundle.internal.LauncherSupportActivator""/>
        <property name=""service.pid"" value=""pl.eurobank.osgi.launcher.bundle.internal.LauncherSupportActivator""/>
        <reference name=""httpService"" interface=""org.osgi.service.http.HttpService"" cardinality=""0..1"" policy=""dynamic"" bind=""bindHttpService"" unbind=""unbindHttpService""/>
        <reference name=""logReader"" interface=""org.osgi.service.log.LogReaderService"" cardinality=""0..1"" policy=""dynamic"" bind=""bindLogReader"" unbind=""unbindLogReader""/>
        <reference name=""bundleProviderService"" interface=""pl.eurobank.osgi.deployment.BundleProviderService"" cardinality=""0..1"" policy=""dynamic"" bind=""bindBundleProviderService"" unbind=""unbindBundleProviderService""/>
    </scr:component>
</components>
","20/Jan/10 16:55;artur.opala;After debugging: components are not enabled beacause of the exception:


java.lang.ClassCastException: org.apache.felix.cm.impl.ConfigurationAdminImpl
	at org.apache.felix.scr.impl.config.ConfigurationComponentRegistry.createComponentHolder(ConfigurationComponentRegistry.java:104)
	at org.apache.felix.scr.impl.BundleComponentActivator.loadDescriptor(BundleComponentActivator.java:244)
	at org.apache.felix.scr.impl.BundleComponentActivator.initialize(BundleComponentActivator.java:147)
	at org.apache.felix.scr.impl.BundleComponentActivator.<init>(BundleComponentActivator.java:111)
	at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:238)
	at org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:174)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:800)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:728)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:610)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3576)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1650)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:915)
	at pl.eurobank.osgi.deployment.internal.AutoDeployActivator.processAutoDeploy(AutoDeployActivator.java:306)
	at pl.eurobank.osgi.deployment.internal.AutoDeployActivator.start(AutoDeployActivator.java:88)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:640)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1700)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1622)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1077)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
	at java.lang.Thread.run(Thread.java:595)



final BundleContext bundleContext = activator.getBundleContext();
        final String bundleLocation = bundleContext.getBundle().getLocation();
        final String name = metadata.getName();

        final ServiceReference caRef = bundleContext.getServiceReference( ConfigurationAdmin.class.getName() );
        if ( caRef != null )
        {
            final ConfigurationAdmin ca = ( ConfigurationAdmin ) bundleContext.getService( caRef );
","20/Jan/10 17:42;artur.opala;Resolved: The problem lies in the org.apache.felix.configadmin-1.2.4 bundle manifest, which imports package org.osgi.service.cm without explicit version range. When the org.osgi.compendium bundle is also installed on the platform, org.apache.felix.scr-1.4.0 loads the interface org.osgi.service.cm.ConfigurationAdmin from the org.osgi.compendium bundle, but the org.apache.felix.configadmin-1.2.4 bundle loads it internally and the ClassCastException arises.

I have locally corrected it by adding this section to the  org.apache.felix.configadmin-1.2.4 pom.xml:

 <Import-Package>
             org.osgi.service.cm;version=""[1.2,2)"",
              *
</Import-Package>",20/Jan/10 17:44;artur.opala;I move this bug to the ConfigurationAdmin,21/Jan/10 08:25;fmeschbe;Thanks for reporting the issue. I will look into it shortly.,"08/Sep/10 07:41;fmeschbe;Defined proper version imports in Rev. 993644.

Now the import headers look like (formatted for readability):

Import-Package:  org.apache.felix.cm;version=""[1.0,1.1)"",
              org.apache.felix.cm.file;version=""[1.0,1.1)"",
              org.osgi.framework;version=""1.3"",
              org.osgi.service.cm;version=""[1.3,1.4)""
DynamicImport-Package:  org.osgi.service.log;version=""1.3""      


Note, that a stack dump is now written during the build. This has no influence on the correctness of the build. See http://markmail.org/message/hwoy2y4r4ikbhzgo",13/Sep/10 10:20;fmeschbe;Closing issues after Configuration Admin 1.2.8 release,,,,,,,,,,,,,,,,,,,,
WebConsole HttpContext should flush response after setting response status,FELIX-1983,12445389,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,13/Jan/10 10:12,27/Jan/10 12:13,14/Mar/19 02:47,13/Jan/10 10:14,webconsole-2.0.4,,,,,,,,,,webconsole-2.0.6,,,,Web Console,,,,,,,0,,,,,,"The Web Console uses its own HttpContext implementation to handle authentication. When authentication is missing, it sets (or currently sendError) the response status 401/UNAUTHENTICATED but does not flush the response.

The Felix Http Base code overwrites this to 403/FORBIDDEN if the response is not committed.

So to ensure, the correct status is really sent, the handleSecurity implementation must flush the response.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57069,,,Wed Jan 13 10:14:38 UTC 2010,,,,,,0|i0vzen:,184709,,,,,,,,13/Jan/10 10:14;fmeschbe;Rev. 898696: Redo sending the 401/UNAUTHORIZED status to just use setStatus and then flush the response. Don't use sendError to prevent any error handlers to kick in -- we really want the 401 status to be sent to the client.,,,,,,,,,,,,,,,,,,,,,,,,,,
Documented but uninterpreted felix.cache.* properties,FELIX-1982,12445351,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,jglick@netbeans.org,jglick@netbeans.org,12/Jan/10 21:13,13/Jan/10 20:41,14/Mar/19 02:47,13/Jan/10 15:57,framework-2.0.1,,,,,,,,,,framework-2.0.3,,,,Framework,,,,,,,0,,,,,,apache-felix-framework-usage-documentation.html documents that felix.cache.dir and felix.cache.profile are gone and that felix.cache.profiledir has been renamed to the standard org.osgi.framework.storage. The Javadoc in BundleCache.java has however not been updated accordingly.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-13 15:57:28.772,,,no_permission,,,,,,,,,,,57070,,,Wed Jan 13 20:41:56 UTC 2010,,,,,,0|i1askv:,271096,,,,,,,,"13/Jan/10 15:57;rickhall;I updated the class-level javadoc. If you are satisfied, please close this issue.","13/Jan/10 20:14;jglick@netbeans.org;Looks better.

BTW there is a broken link in Javadoc; fix:

Index: framework/src/main/java/org/apache/felix/framework/cache/BundleCache.java
===================================================================
--- framework/src/main/java/org/apache/felix/framework/cache/BundleCache.java	(revision 898924)
+++ framework/src/main/java/org/apache/felix/framework/cache/BundleCache.java	(working copy)
@@ -60,7 +60,7 @@
  * For specific information on how to configure the Felix framework, refer
  * to the Felix framework usage documentation.
  * </p>
- * @see org.apache.felix.framework.util.BundleArchive
+ * @see org.apache.felix.framework.cache.BundleArchive
 **/
 public class BundleCache
 {
","13/Jan/10 20:41;rickhall;Ok, I fixed that too. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,
ServletHandlerRequest.getPathInfo() returns undecoded string,FELIX-1979,12445284,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,12/Jan/10 11:41,08/Feb/11 09:46,14/Mar/19 02:47,24/Jan/10 18:58,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"The Servlet API specifies the HttpServletRequest.getPathInfo() to return a decoded path string.

The current implementation just cuts off the servlet context and servlet alias from the request URL (retrieved from HttpServletRequest.getRequestURI()), which is not decoded. Therefore the resulting path info is also not decoded and needs decoding.",,,,,,,,,,,,,,,,,,,,14/Jan/10 12:08;fmeschbe;FELIX-1979-2.patch;https://issues.apache.org/jira/secure/attachment/12430245/FELIX-1979-2.patch,12/Jan/10 11:49;fmeschbe;FELIX-1979.patch;https://issues.apache.org/jira/secure/attachment/12430009/FELIX-1979.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-01-14 06:24:56.237,,,no_permission,,,,,,,,,,,57073,,,Tue Feb 08 09:46:42 UTC 2011,,,,,,0|i0vzhz:,184724,,,,,,,,12/Jan/10 11:49;fmeschbe;Proposed patch just calling URLDecoder.decode to decode the path info string using UTF-8 encoding as recommended by http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars,"12/Jan/10 12:21;fmeschbe;Applied proposed patch in Rev. 898301.

The path info string is now decoded using URLDecoder.decode with ""UTF-8"" encoding as recommended.","13/Jan/10 09:28;fmeschbe;Reconsidering, I wonder, whether we could not just use the actual servlet container's patchInfo and cut off the servlet alias from the front instead of decoding ourselves ?","14/Jan/10 06:24;srs;Yes. That would be another approach. URLDecode approach is atleast server-container neutral (if for some reason some servlet containers do this differently).
","14/Jan/10 12:08;fmeschbe;Another patch basing on the servlet container's pathInfo.

Since this code is only called if the servlet container's pathInfo ensures the servlet alias, we can just cut off the servlet alias and be done.",24/Jan/10 08:36;fmeschbe;I think the second patch based on the servlet container's path info is better.,24/Jan/10 18:58;fmeschbe;Applied the second patch in Rev. 902619.,"25/Jan/10 09:07;jajans;Tried the patch(es), but it causes ServletHandlerRequestTest#testPathInfo to fail. Have not yet figured out what causes it.","25/Jan/10 09:19;fmeschbe;Oops, sorry, forgot the fixes to the test case. Commited in Rev. 902741.

The problem with the testcase was, that the getPathInfo() method was not mocked and thus null was returned instead of the expected value.",08/Feb/11 09:46;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,
Spring deployer cannot find file in etc directory when karaf is deployed as a WAR,FELIX-1968,12444692,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,cmoulliard,cmoulliard,05/Jan/10 11:42,07/Jan/10 14:11,14/Mar/19 02:47,07/Jan/10 14:11,,,,,,,,,,,,,,,Karaf,,,,,,,0,,,,,,"12:02:43,382 | ERROR | Thread-12        | SpringURLHandler                 | ring.SpringURLHandler$Connection   87 | Error opening spring xml url
java.io.FileNotFoundException: etc\activemq-broker.xml (The system cannot find the path specified)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at java.io.FileInputStream.<init>(FileInputStream.java:66)
	at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:70)
	at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:161)
	at org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
	at org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:180)
	at org.apache.felix.karaf.deployer.spring.SpringTransformer.parse(SpringTransformer.java:241)
	at org.apache.felix.karaf.deployer.spring.SpringTransformer.transform(SpringTransformer.java:63)
	at org.apache.felix.karaf.deployer.spring.SpringURLHandler$Connection.getInputStream(SpringURLHandler.java:83)
	at java.net.URL.openStream(URL.java:1010)
	at org.apache.felix.karaf.features.internal.FeaturesServiceImpl.installBundleIfNeeded(FeaturesServiceImpl.java:461)
	at org.apache.felix.karaf.features.internal.FeaturesServiceImpl.doInstallFeature(FeaturesServiceImpl.java:373)
	at org.apache.felix.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:238)
	at org.apache.felix.karaf.features.internal.FeaturesServiceImpl$1.run(FeaturesServiceImpl.java:658)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57083,,,Thu Jan 07 14:11:53 UTC 2010,,,,,,0|i0vze7:,184707,,,,,,,,"07/Jan/10 14:11;cmoulliard;Workaround is to define the absolute path of the config file to install

ex :  osgi:install -s spring:file:///D:/Soft/opensource/apache-tomcat-6.0.14/webapps/karaf/WEB-INF/karaf/etc/activemq-broker.xml",,,,,,,,,,,,,,,,,,,,,,,,,,
iPojo component is made available regardless of exception during validate,FELIX-1965,12444597,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,abendt,abendt,04/Jan/10 15:56,25/Apr/10 14:40,14/Mar/19 02:47,05/Jan/10 10:16,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,0,,,,,,"i have a ipojo compoment which tries to create a resourcebundle in its validate method. this fails as the appropiate properties file is not available. in my expectation my compoment should not be made available by ipojo. however the component is made avaiable. later accesses to the component fail as the component is not fully initialized.

let me know if you need more detailled information to reproduce the issue.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-05 10:16:22.44,,,no_permission,,,,,,,,,,,57085,,,Tue Jan 05 10:16:22 UTC 2010,,,,,,0|i0vzs7:,184770,,,,,,,,"05/Jan/10 10:16;clement.escoffier;Fixed at revision 895971.
Avoid the publication and the creation of service objects when a validate callback has thrown an exception.",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when invoking install/update panel,FELIX-1961,12444247,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,28/Dec/09 13:25,27/Jan/10 12:13,14/Mar/19 02:47,28/Dec/09 13:31,webconsole-2.0.4,,,,,,,,,,webconsole-2.0.6,,,,Web Console,,,,,,,0,,,,,,"ava.lang.NullPointerException
	org.apache.felix.webconsole.internal.core.BundlesServlet.renderContent(BundlesServlet.java:387)
	org.apache.felix.webconsole.AbstractWebConsolePlugin.doGet(AbstractWebConsolePlugin.java:116)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57088,,,Mon Dec 28 13:31:02 UTC 2009,,,,,,0|i0vzav:,184692,,,,,,,,28/Dec/09 13:31;cziegeler;Fixed in revision: 894169,,,,,,,,,,,,,,,,,,,,,,,,,,
Factory configured ComponentFactory instances not reconfigured when configuration updated,FELIX-1952,12443737,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,18/Dec/09 09:46,16/Aug/10 12:11,14/Mar/19 02:47,18/Dec/09 12:50, scr-1.4.0,,,,,,,,,, scr-1.6.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"As of FELIX-1942 instances created by ComponentFactory services are set up such that they are disposed off when being deactivated as required by the specification.

This fix now breaks the backwards compatibility functionality where the ComponentFactory service creates component instances using factory configuration.

The fix from FELIX-1942 should be adapted to only dispose off components created through ComponentFactory.newInstance but regularly cycle instances created for factory configurations.

Note, that this  behaviour is not specification compliant and thus spec compliant components are not susceptible to this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57097,,,Mon Aug 16 12:11:45 UTC 2010,,,,,,0|i0w1pr:,185083,,,,,,,,"18/Dec/09 12:50;fmeschbe;Implemented a fix in Rev. 892241.

A ComponentFactory instance is now using different SATISFIED states:

   * FACTORY -- This is for the ComponentFactory itself
   * ACTIVE -- This is for (backwards compatible, non-standard) configuration factory induced instances
   * FACTORY_INSTANCE -- This is for instances created with ComponentFactory.newInstance
          This state is like ACTIVE (and advertises itself as active, too) but disposes off the
           component when it is being deactivated.",16/Aug/10 12:11;fmeschbe;Apache Felix Declarative Services 1.6.0 has been released. The issues are now closed.,,,,,,,,,,,,,,,,,,,,,,,,,
The SchemaObr.xsd in bundleplugin is incomplete,FELIX-1951,12443696,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gawor@mcs.anl.gov,gawor@mcs.anl.gov,17/Dec/09 22:15,24/Jun/11 12:36,14/Mar/19 02:47,22/Feb/10 20:00,,,,,,,,,,,maven-bundle-plugin-2.1.0,,,,Bundle Repository (OBR),Maven Bundle Plugin,,,,,,0,,,,,,"The SchemaObr.xsd in bundleplugin is incomplete. It's missing a few elements and attributes and the repository.xml generated by maven-bundle-plugin does not validate against it.
",,,,,,,,,,,,,,,,,,,,17/Dec/09 22:19;gawor@mcs.anl.gov;FELIX-1951.patch;https://issues.apache.org/jira/secure/attachment/12428352/FELIX-1951.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-22 20:00:37.554,,,no_permission,,,,,,,,,,,57098,,,Mon Feb 22 20:00:37 UTC 2010,,,,,,0|i0vy4v:,184503,,,,,,,,"17/Dec/09 22:19;gawor@mcs.anl.gov;The attached patch includes some updates to SchemaObr.xsd that allows the generated repository.xml to be validated against the schema. For example:

$ xmllint --noout  --schema bundleplugin/src/main/resources/SchemaObr.xsd ~/.m2/repository/repository.xml  
/home/gawor/.m2/repository/repository.xml validates
","22/Feb/10 20:00;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundleplugin/src/main/resources/SchemaObr.xsd
Committed r915042
",,,,,,,,,,,,,,,,,,,,,,,,,
jetty http service issues 'started' message when disabled,FELIX-1946,12443410,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,db82407,db82407,15/Dec/09 16:25,09/Jan/11 10:33,14/Mar/19 02:47,09/Jan/11 03:05,http-2.0.4,,,,,,,,,,http-2.2.0,,,,HTTP Service,,,,,,,0,,,,,,"I want to configure the felix jetty http service using config admin, so I set the following properties to stop it from starting automatically:

org.osgi.service.http.port = -1
org.apache.felix.http.enable = false

However, when the bundle is activated, it still reports that it has started:

% [INFO] Started jetty 6.1.x at port -1

A 'Jetty HTTP Service' thread is actually started, but as http is not enabled, no http server connector is created.
The above 'Started' message should not appear when http (and https) are disabled, and it would be good if the 'Jetty HTTP Service' was not created until the service is enabled using config admin, for example:

% setpid org.apache.felix.http org.osgi.service.http.port==1234 org.apache.felix.http.enable==true
% [INFO] Started jetty 6.1.x at port 1234


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-02 19:31:04.089,,,no_permission,,,,,,,,,,,40463,,,Sun Jan 09 03:05:40 UTC 2011,,,,,,0|i0aqen:,60551,,,,,,,,"02/Jan/10 19:31;srs;
You are right. The message appears always. Will schedule this fix for version 2.0.6.","09/Jan/11 03:05;fmeschbe;Only startup Jetty if either HTTP or HTTPS is enabled and improve messaging: If Jetty is not started, say so. If Jetty is started report ports of enabled HTTP and HTTPS services.

Fixed in Rev. 1056874",,,,,,,,,,,,,,,,,,,,,,,,,
Reference.getServiceReferences() returns empty array if no services bound,FELIX-1944,12443248,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,14/Dec/09 09:46,30/Jul/10 11:42,14/Mar/19 02:47,14/Dec/09 10:08,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The Reference.getServiceReferences() currently returns an empty array if no services is bound. According to the API spec of the method, null must be returned in this case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57103,,,Fri Jul 30 11:42:09 UTC 2010,,,,,,0|i0w03z:,184823,,,,,,,,14/Dec/09 10:08;fmeschbe;In Rev. 890260: Ensure Reference.getServiceReferences() returns null if no services are bound to the component (an empty array used to be returned).,30/Jul/10 11:42;fmeschbe;Closing since version is released.,,,,,,,,,,,,,,,,,,,,,,,,,
Component Factory not deactivated if required reference unregistered,FELIX-1943,12443244,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,14/Dec/09 09:05,30/Jul/10 11:42,14/Mar/19 02:47,14/Dec/09 10:09,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"When a component factory becomes unsatisifed, it must be deactivated and switch to the UNSATISIFED state until it becomes satisifed again. Currently this does not happen because the component factory does not really bind to the references but the DependencyManager.serviceRemoved method only may deactivate a component if the unregistering service is actually bound.

The serviceRemoved method must be enhanced to also check whether a component is becoming unsatisifed even in this case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57104,,,Fri Jul 30 11:42:09 UTC 2010,,,,,,0|i0w06n:,184835,,,,,,,,"14/Dec/09 10:09;fmeschbe;In Rev. 890260: Ensure components which are not satisfied any longer if a service is unregistered are deactivated. Before this would only happen if the component had the service bound, which is not always the case (for example for ComponentFactory components).
",30/Jul/10 11:42;fmeschbe;Closing since version is released.,,,,,,,,,,,,,,,,,,,,,,,,,
Component Factory instances are may reactivate,FELIX-1942,12443240,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,14/Dec/09 08:37,30/Jul/10 11:42,14/Mar/19 02:47,14/Dec/09 10:04,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"According to secion 112.5.5, Factory Component, of the Declarative Services specification, component factory instances are never reactivated:

        Once a component configuration created by the Component Factory has been
        deactivated, that component configuration will not be reactivated or used again.

Currently such instances are not really disposed off but just deactivated and may later be reactivated, which is wrong.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57105,,,Fri Jul 30 11:42:09 UTC 2010,,,,,,0|i0w067:,184833,,,,,,,,"14/Dec/09 10:04;fmeschbe;Added test case ensuring ComponentFactory instances are not reactivated in Rev. 890254

In Rev. 890257 add new state (FactoryInstance) which is like the Active state but disposes off the component on deactivation instead of just deactivating.

This fixes this issue",30/Jul/10 11:42;fmeschbe;Closing since version is released.,,,,,,,,,,,,,,,,,,,,,,,,,
Bad error message when an Event Subscriber does not set the data type and data key,FELIX-1938,12443091,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,11/Dec/09 13:27,27/May/10 06:02,14/Mar/19 02:47,13/Dec/09 09:49,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,1,,,,,,"
The event admin handler should do a better job in reporting error. Especially the following subscriber (missing the data_key attribute):
@Subscriber(name = ""tdmEventSubscriber-1"", topics = ""tdmEventTopic"", data_type = ""java.lang.String"")
 public void receive(String msg) {
        System.out.println(""[DATA RECEIVER] Receive event on tdmEventTopic : "" + msg);
 }

will throw this exception:
-> [ERROR] de.akquinet.gomobile.ea.test.SubscriberTest : Cannot find callback method receive(org.osgi.service.event.Event)
[ERROR] IPOJO-Extender : An error occurs when analyzing the content or starting the management of 17
java.lang.IllegalStateException: Cannot find callback method receive(org.osgi.service.event.Event)
	at org.apache.felix.ipojo.IPojoFactory.computeDescription(IPojoFactory.java:673)
	at org.apache.felix.ipojo.IPojoFactory.computeFactoryState(IPojoFactory.java:700)
	at org.apache.felix.ipojo.ComponentFactory.addedService(ComponentFactory.java:358)
	at org.apache.felix.ipojo.util.Tracker$Tracked.trackAdding(Tracker.java:709)
	at org.apache.felix.ipojo.util.Tracker$Tracked.trackInitialServices(Tracker.java:595)
	at org.apache.felix.ipojo.util.Tracker.open(Tracker.java:203)
	at org.apache.felix.ipojo.ComponentFactory.starting(ComponentFactory.java:235)
	at org.apache.felix.ipojo.IPojoFactory.start(IPojoFactory.java:574)
	at org.apache.felix.ipojo.Extender.createAbstractFactory(Extender.java:426)
	at org.apache.felix.ipojo.Extender.parse(Extender.java:264)
	at org.apache.felix.ipojo.Extender.startManagementFor(Extender.java:208)
	at org.apache.felix.ipojo.Extender.access$600(Extender.java:52)
	at org.apache.felix.ipojo.Extender$CreatorThread.run(Extender.java:669)
	at java.lang.Thread.run(Thread.java:637)


The handler has detected a problem but try to use a wrong method (receiver(Event) instead of reporting the bad configuration and rejecting it.",,,,,,,,,,,,,,,,,,,,11/Dec/09 17:14;pierre.bourret;checkMissingDataKeyAttribute.diff;https://issues.apache.org/jira/secure/attachment/12427738/checkMissingDataKeyAttribute.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-11 17:11:44.444,,,no_permission,,,,,,,,,,,49761,,,Thu May 27 06:02:49 UTC 2010,,,,,,0|i0vzfj:,184713,,,,,,,,"11/Dec/09 17:11;pierre.bourret;Right ! The subscriber configuration parser do not check that if the data-type attribute is provided, the data-key attribute is set. The handler consider that a subscriber configured in this manner is not a data-subscriber beacause the data-key is not set, and so try to find the classical event callback (the one that receive org.osgi.service.event.Event).

The attached patch should fix this. Because of a lack of time, it has not been tested, so please send feedback :)",11/Dec/09 17:14;pierre.bourret;The patch that checks the presence of the data-key attribute when the data-type attribute is provided.,"13/Dec/09 09:49;clement.escoffier;Fixed at revision 890035.
I applied the patch and modified it slightly.

Now, the error message is:
-> [ERROR] de.akquinet.gomobile.ea.test.SubscriberTest : Missing attribute in component configuration : data-key
[ERROR] IPOJO-Extender : An error occurs when analyzing the content or starting the management of 17
java.lang.IllegalStateException: Missing attribute in component configuration : data-key
	at org.apache.felix.ipojo.IPojoFactory.computeDescription(IPojoFactory.java:684)
	at org.apache.felix.ipojo.IPojoFactory.computeFactoryState(IPojoFactory.java:711)
	at org.apache.felix.ipojo.ComponentFactory.addedService(ComponentFactory.java:358)
	at org.apache.felix.ipojo.util.Tracker$Tracked.trackAdding(Tracker.java:709)
	at org.apache.felix.ipojo.util.Tracker$Tracked.trackInitialServices(Tracker.java:595)
	at org.apache.felix.ipojo.util.Tracker.open(Tracker.java:203)
	at org.apache.felix.ipojo.ComponentFactory.starting(ComponentFactory.java:235)
	at org.apache.felix.ipojo.IPojoFactory.start(IPojoFactory.java:582)
	at org.apache.felix.ipojo.Extender.createAbstractFactory(Extender.java:430)
	at org.apache.felix.ipojo.Extender.parse(Extender.java:264)
	at org.apache.felix.ipojo.Extender.startManagementFor(Extender.java:208)
	at org.apache.felix.ipojo.Extender.access$600(Extender.java:52)
	at org.apache.felix.ipojo.Extender$CreatorThread.run(Extender.java:673)
	at java.lang.Thread.run(Thread.java:637)


which make more sense.

Thanks !

Clement",27/May/10 06:02;clement.escoffier;Version released.,,,,,,,,,,,,,,,,,,,,,,,
"""Http Service xxx"" download links are broken",FELIX-1935,12443027,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,djt69@comcast.net,djt69@comcast.net,10/Dec/09 20:37,10/Dec/09 21:34,14/Mar/19 02:47,10/Dec/09 21:29,,,,,,,,,,,,,,,,,,,,,,0,,,,,,"""Http Service xxx"" download links are broken - I've tried different mirrors.. they are all broken..",Linux/Firefox,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-10 21:29:40.805,,,no_permission,,,,,,,,,,,57110,,,Thu Dec 10 21:34:47 UTC 2009,,,,,,0|i0vza7:,184689,,,,,,,,"10/Dec/09 21:29;rickhall;It looks like someone forgot to follow the release process. The links on the download page were not updated after the 2.0.4 release. I updated the wiki, so the changes should propagate in a little while. In the meantime, you can edit the existing links to refer to 2.0.4 instead of 2.0.2 to get them to work.

Please close this bug if satisfied. Thanks.",10/Dec/09 21:34;djt69@comcast.net;thanks...,,,,,,,,,,,,,,,,,,,,,,,,,
Possible NullPointerException when itest fails,FELIX-1932,12442904,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gertvanthienen,gertvanthienen,gertvanthienen,09/Dec/09 20:24,09/Dec/09 20:39,14/Mar/19 02:47,09/Dec/09 20:39,karaf-1.2.0,,,,,,,,,,karaf-1.4.0,,,,Karaf,,,,,,,0,,,,,,"When a Karaf itest fails due to a missing service reference, the extra logging that is being created can be interrupted by a NullPointException:

{noformat}
java.lang.NullPointerException
at org.apache.felix.karaf.shell.itests.AbstractIntegrationTest.getOsgiService(AbstractIntegrationTest.java:76)
at org.apache.felix.karaf.shell.itests.FeaturesTest.testFeatures(FeaturesTest.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.injectContextAndInvoke(CallableTestMethodImpl.java:134)
at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.call(CallableTestMethodImpl.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.ops4j.pax.exam.rbc.internal.RemoteBundleContextImpl.remoteCall(RemoteBundleContextImpl.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:294)
at sun.rmi.transport.Transport$1.run(Transport.java:153)
at java.security.AccessController.doPrivileged(Native Method)
at sun.rmi.transport.Transport.serviceCall(Transport.java:149)
at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:466)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:707)
at java.lang.Thread.run(Thread.java:595)
{noformat}

The bundle headers logging is also not very useful
{noformat}
Test bundle headers: [Ljava.lang.Object;@7f8922
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57113,,,Wed Dec 09 20:39:46 UTC 2009,,,,,,0|i0vzdj:,184704,,,,,,,,09/Dec/09 20:39;gertvanthienen;Fixed in http://svn.apache.org/viewvc?view=revision&revision=888961,,,,,,,,,,,,,,,,,,,,,,,,,,
Clicking action on bundles detail page shows full bundle list while URL stays on bundles/<id>,FELIX-1930,12442848,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,alexander.klimetschek,alexander.klimetschek,09/Dec/09 11:44,21/Dec/09 17:13,14/Mar/19 02:47,11/Dec/09 09:20,webconsole-2.0.2,,,,,,,,,,webconsole-2.0.4,,,,Web Console,,,,,,,0,,,,,,"1. Go to webconsole, click on a bundle to go to its detail page (eg. /system/bundles/1)
2. Click on any action (stop/start/uninstall etc.)

Problem:
=> The content of the page will switch to the list of all bundles (like /system/bundles) but the URL stays on /system/bundles/1

Expected:
=> Only the bundle detail content is refreshed (reflecting the status change from the action), URL stays on /system/bundles/1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-09 11:59:21.212,,,no_permission,,,,,,,,,,,57115,,,Fri Dec 11 09:20:03 UTC 2009,,,,,,0|i1asov:,271114,,,,,,,,"09/Dec/09 11:59;fmeschbe;As a workaround, you can simply manually reload the page and get the updated bundle details.",11/Dec/09 09:20;cziegeler;Fixed in Revision: 889539,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in AbstractComponentManager if no services are provided and a SecurityManager is installed,FELIX-1927,12442742,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,lkolisko,lkolisko,08/Dec/09 15:46,30/Jul/10 11:42,14/Mar/19 02:47,08/Dec/09 15:54,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Lukas Kolisko reports in response to FELIX-1827:

If a service component does not provide any service and system security manager is set , then

AbstractComponentManager.java line 537
final String[] services = getComponentMetadata().getServiceMetadata().getProvides(); fails with NPE because ServiceMetadata is null.

Possible patch:

Index: src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java
===================================================================
--- src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java (revision 888421)
+++ src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java (working copy)
@@ -33,6 +33,7 @@
 import org.apache.felix.scr.impl.ComponentActivatorTask;
 import org.apache.felix.scr.impl.metadata.ComponentMetadata;
 import org.apache.felix.scr.impl.metadata.ReferenceMetadata;
+import org.apache.felix.scr.impl.metadata.ServiceMetadata;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.InvalidSyntaxException;
 import org.osgi.framework.ServicePermission;
@@ -534,18 +535,22 @@
         boolean allowed = true;
         if ( System.getSecurityManager() != null )
         {
- final String[] services = getComponentMetadata().getServiceMetadata().getProvides();
- if ( services != null && services.length > 0 )
+ final ServiceMetadata metadata = getComponentMetadata().getServiceMetadata();
+ if ( metadata != null )
             {
- final Bundle bundle = getBundle();
- for ( int i = 0; i < services.length; i++ )
+ final String[] services = metadata.getProvides();
+ if ( services != null && services.length > 0 )
                 {
- final Permission perm = new ServicePermission( services[i], ServicePermission.REGISTER );
- if ( !bundle.hasPermission( perm ) )
+ final Bundle bundle = getBundle();
+ for ( int i = 0; i < services.length; i++ )
                     {
- log( LogService.LOG_INFO, ""Permission to register service {0} is denied"", new Object[]
- { services[i] }, null );
- allowed = false;
+ final Permission perm = new ServicePermission( services[i], ServicePermission.REGISTER );
+ if ( !bundle.hasPermission( perm ) )
+ {
+ log( LogService.LOG_INFO, ""Permission to register service {0} is denied"", new Object[]
+ { services[i] }, null );
+ allowed = false;
+ }
                     }
                 }
             } ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-08 15:54:06.589,,,no_permission,,,,,,,,,,,57118,,,Fri Jul 30 11:42:08 UTC 2010,,,,,,0|i0vwlb:,184253,,,,,,,,"08/Dec/09 15:54;fmeschbe;Thanks again for your patch. I have applied in Rev. 888451.

Can you please check ? Thanks.",09/Dec/09 10:21;lkolisko;Rev. 888451 is working fine with my tests. Issue is fixed for me. Thank you very much.,30/Jul/10 11:42;fmeschbe;Closing since version is released.,,,,,,,,,,,,,,,,,,,,,,,,
Access to internal maps in the ComponentRegistry must be guarded against concurrency issues,FELIX-1926,12442735,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,08/Dec/09 14:49,30/Jul/10 11:42,14/Mar/19 02:47,08/Dec/09 15:17,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Currently accesses to the internal m_componetsById and m_compeontsByName maps are not guarded against concurrent calls and thus become corrupt in highly concurrent situations.

These accesses should be guared by simple Java synchronization (if possible).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57119,,,Fri Jul 30 11:42:08 UTC 2010,,,,,,0|i0w05j:,184830,,,,,,,,08/Dec/09 15:17;fmeschbe;Fixed in Rev. 888435,30/Jul/10 11:42;fmeschbe;Closing since version is released.,,,,,,,,,,,,,,,,,,,,,,,,,
SCR project misses explicit Maven Bundle Plugin version,FELIX-1923,12442604,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,07/Dec/09 07:50,30/Jul/10 11:42,14/Mar/19 02:47,07/Dec/09 07:53,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,The SCR project does not set an explicit version for the Maven Bundle plugin. This may cause intermitent build failures if the environment is selecting the wrong version.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57122,,,Fri Jul 30 11:42:07 UTC 2010,,,,,,0|i0w04v:,184827,,,,,,,,07/Dec/09 07:53;fmeschbe;Fixed in Rev. 887857.,30/Jul/10 11:42;fmeschbe;Closing since version is released.,,,,,,,,,,,,,,,,,,,,,,,,,
issue with configuration policy=require and with factory components,FELIX-1922,12442582,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,pderop,pderop,06/Dec/09 19:26,30/Jul/10 11:42,14/Mar/19 02:47,14/Dec/09 10:06,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"This issue is related to the following dev post: -> http://www.mail-archive.com/dev@felix.apache.org/msg14167.html

There are two components that comes into play: 

1) The first one (EnglishDictionary) has a configuration-policy=""require"" parameter and a factory=""true"" parameter:

<?xml version='1.0' encoding='utf-8'?>
<component name='EnglishDictionary' xmlns='http://www.osgi.org/xmlns/scr/v1.1.0' factory='true' configuration-policy='require' modified='updated'>
 <implementation class='com.alcatel_lucent.samples.scr.dictionary.english.EnglishDictionary'/>
 <service>
   <provide interface='com.alcatel_lucent.samples.scr.dictionary.DictionaryService'/>
 </service>
</component> 

The EnglishDictionary parameter has actually a CM Configuration which is required before activation: that is why it uses configuration-policy='require'.

2) The second one (EnglishDictionaryFactory) is a factory component that is meant to instantiate the EnglishDictionary component.:

<?xml version='1.0' encoding='utf-8'?>
<component name='EnglishDictionaryFactory'>
 <implementation class='com.alcatel_lucent.samples.scr.dictionary.english.EnglishDictionaryFactory'/>
 <reference name='bind' interface='org.osgi.service.component.ComponentFactory' bind='bind' unbind='unbind' target='(component.name=EnglishDictionary)'/>
</component> 


The issue takes place when the EnglishDictionaryFactory component tries to instantiate the EnglishDictionary like this:

class EnglishDictionaryFactory {
  public void bind(ComponentFactory factory) {
    factory.newInstance(new Hashtable());
  } 
}

-> The newInstance raises the following exception:

org.osgi.service.component.ComponentException: Failed activating component
       at org.apache.felix.scr.impl.manager.ComponentFactoryImpl.newInstance(ComponentFactoryImpl.java:118)
       at com.alcatel_lucent.samples.scr.dictionary.english.EnglishDictionaryFactory.bind(EnglishDictionaryFactory.java:19)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
       at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
       at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)
       at org.apache.felix.scr.impl.helper.BaseMethod$NotResolved.invoke(BaseMethod.java:500)
       at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
       at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:997)
       at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:908)
       at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:832)
       at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
       at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
       at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:982)
       at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:297)
       at org.apache.felix.scr.impl.manager.AbstractComponentManager$1.doRun(AbstractComponentManager.java:137)
       at org.apache.felix.scr.impl.ComponentActivatorTask.run(ComponentActivatorTask.java:67)
       at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:96)
       at java.lang.Thread.run(Thread.java:619)
","linux fc10, jdk1.5, jdk.1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-14 08:34:33.817,,,no_permission,,,,,,,,,,,57123,,,Fri Jul 30 11:42:07 UTC 2010,,,,,,0|i1aspj:,271117,,,,,,,,"14/Dec/09 08:34;fmeschbe;The problem is actually that Component Factories do not really care about configuration objects: If they are there, they are used as the basis for new components, if they are not existing, it does not matter either.

In addition, according to section 112.5.5, Factory Component, configuration objects are ignored to satisfy component factories (as opposed to other components, which take configurations into account in the case of configuraiton-policy=require).

The fix is to prevent activation failure if no configuration is actually present.","14/Dec/09 10:06;fmeschbe;Added testcase ensuring proper operation if configuration is missing in Rev. 890254 (even if configuration-policy=require is set)

In Rev. 890259 always mimick existing configuration to component factory instances. In case of Configuration Admin service not providing configuration, an empty configuration is placed to simulate existence. Reason for this is that component factories do not obey configuration-policy=require for satisfaction setting.

This fixes this issue.",30/Jul/10 11:42;fmeschbe;Closing since version is released.,,,,,,,,,,,,,,,,,,,,,,,,
RequiredBundle.getRequiringBundles() incorrectly calculates result,FELIX-1920,12442476,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,04/Dec/09 17:31,04/Dec/09 17:41,14/Mar/19 02:47,04/Dec/09 17:41,framework-2.0.2,,,,,,,,,,framework-2.0.3,,,,Framework,Specification compliance,,,,,,0,,,,,,"Alan Keane noticed:

---

Is the following a bug?

Index: RequiredBundleImpl.java
===================================================================
--- RequiredBundleImpl.java	(revision 886835)
+++ RequiredBundleImpl.java	(working copy)
@@ -74,7 +74,7 @@
             IModule[] dependents = ((ModuleImpl)
modules[modIdx]).getDependentRequirers();
             for (int depIdx = 0; (dependents != null) && (depIdx <
dependents.length); depIdx++)
             {
-                moduleList.add(dependents[modIdx]);
+                moduleList.add(dependents[depIdx]);
             }

Thanks,
Alan

---

It certainly appears to be a bug and clearly could lead to bad results.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57125,,,Fri Dec 04 17:41:19 UTC 2009,,,,,,0|i0vyvr:,184624,,,,,,,,04/Dec/09 17:41;rickhall;I committed a fix for this and improved the method a little in the process too.,,,,,,,,,,,,,,,,,,,,,,,,,,
A few minor bugs in the framework found while embedding Felix,FELIX-1917,12442415,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,grahamjenson,grahamjenson,04/Dec/09 02:00,10/Dec/09 20:55,14/Mar/19 02:47,10/Dec/09 20:54,framework-2.0.2,,,,,,,,,,framework-2.0.3,,,,Framework,,,,,,,0,,,,,,"First Bug
org.apache.felix.framework.util.manifestparser.Requirement.toString() method can throw null pointer exception if the requirement does not have a filter.

Second Bug 
org.apache.felix.framework.ExtensionManager.loadDefaultSystemPackages() method throws null pointer on variable propURL if there is no default.properties file.

Fix, check if null before.",Not an issue (I dont think),,120,120,,0%,120,120,,,,,,,,,,,,04/Dec/09 02:04;grahamjenson;Patch.txt;https://issues.apache.org/jira/secure/attachment/12426862/Patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-04 20:46:02.699,,,no_permission,,,,,,,,,,,57128,,,Thu Dec 10 20:54:48 UTC 2009,,,,,,0|i1aspr:,271118,,,,,,,,"04/Dec/09 02:04;grahamjenson;A patch, to fix.","04/Dec/09 20:46;rickhall;Regarding the first bug, I don't think this is an error due to a missing filter, I think it is actually an error due to invalid filter syntax. Requirement.toString() calls getFilter() which calls convertToFilter() if there is no filter. If the resulting filter has invalid syntax, then null is returned. Normally it shouldn't have invalid syntax, but there was a bug in handling classes in the default package which would result in filter ""(package=)"" which is incorrect. I fixed the default package bug in FELIX-1867, so perhaps that will resolve this issue too. If you are seeing it still with trunk, could you explain how to reproduce?

Regarding the second bug, you are correct, it makes sense to check for null. I commit this fix. Thanks.","10/Dec/09 20:54;grahamjenson;The first bug is difficult/impossible to reproduce, and the second has been fixed.
",,,,,,,,,,,,,,,,,,,,,,,,
Bundles without categories are never displayed in the bundle repository list,FELIX-1912,12442187,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,02/Dec/09 07:15,21/Dec/09 17:13,14/Mar/19 02:47,02/Dec/09 07:22,webconsole-2.0.2,,,,,,,,,,webconsole-2.0.4,,,,Web Console,,,,,,,0,,,,,,"Reported by Gerry Woods on the dev list:

> Hi,
> It seems that the WebConsole ""OSGi Repository"" page will only display OBR
> resources that have a category defined.  We do not define categories so none
> of our bundles show up.  Is there a reason for this or is it simply a bug?
> Thanks for any insights,
> Gerry

Issue is, that bundles without any categories are never listed. It also looks like the selection code is suboptimal: if all categories are desired, we don't have to inspect the bundle categories, we just list the bundle.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57133,,,Wed Dec 02 07:22:55 UTC 2009,,,,,,0|i0vzaf:,184690,,,,,,,,"02/Dec/09 07:22;fmeschbe;Committed a fix in Rev. 886067.

Actually the ""all categories"" situation cannot be optimized because we have to scan the categories of all resources to be able to build the category selection list.",,,,,,,,,,,,,,,,,,,,,,,,,,
Project classpath not updated if import-package is modified via text view,FELIX-1905,12441863,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,davemssavage,davemssavage,28/Nov/09 14:12,29/Nov/09 14:07,14/Mar/19 02:47,29/Nov/09 14:07,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"Works as expected if using ui ""dependencies"" widget",eclipse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57140,,,2009-11-28 14:12:11.0,,,,,,0|i1asqv:,271123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SCR sometimes does not activate components when configuration-policy is required,FELIX-1903,12441846,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,pderop,pderop,27/Nov/09 20:21,29/Nov/09 19:28,14/Mar/19 02:47,28/Nov/09 22:14,,,,,,,,,,,,,,,Declarative Services (SCR),,,,,,,0,,,,,,"This issue is about the following post: http://www.mail-archive.com/dev@felix.apache.org/msg14019.html

Use case: I have a component which declare configuration-policy=""require"", meaning that it must not be activated before the corresponding PID is available.
But, even if SCR firsts detects that the pid is available, the component is then not activated, and ends up with the following log: ""Missing required configuration, cannot activate"".
Please take a look at the mentioned post, in the DEV mailing list, everything is explained, with some logs.

I also have attached to this post a sequence diagram which illustrates what is going on (well, as far as I understand):

1) In the sequence diagram, you will see that CM first provides the PID to SCR, by calling the ConfigurationComponentRegistry.configurationEvent() method.
But in this method, the getComponent(pid) returns null, because the component's bundle is probably not yet started, at the time we are called by CM.

2) Next, the component's bundle is started, and the Component Actor thread invokes ImmediatComponentManager.activateInternal() method, which invokes activate() in the Unsatisfied state, 

3) but, then, the hasConfiguration() method is invoked and returns null, and we then get the log "" Missing required configuration, cannot activate"".

So, I have tried the attached patch which seems to resolve the issue: I just have modified the ImmediateComponentManager.hasConfiguration() in order to check if the PID is available from CM. 
(Well, admittedly, the patch is probably dirty and I have added a static method in the Activator in order to get the bundle context, but it works ...)


please tell me what you think;
/pierre",linux fc10/jdk1.5,,,,,,,,,,,,,,,,,,,27/Nov/09 20:27;pderop;FELIX-1903.patch;https://issues.apache.org/jira/secure/attachment/12426299/FELIX-1903.patch,27/Nov/09 20:22;pderop;sequence_diagram.pdf;https://issues.apache.org/jira/secure/attachment/12426298/sequence_diagram.pdf,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-11-27 20:59:22.75,,,no_permission,,,,,,,,,,,57142,,,Sun Nov 29 19:28:57 UTC 2009,,,,,,0|i0vxuf:,184456,,,,,,,,27/Nov/09 20:22;pderop;here is the sequence diagram.,"27/Nov/09 20:27;pderop;and here is the patch (it's probably dirty, but it's just for testing purpose).","27/Nov/09 20:59;fmeschbe;Hmm, this is strange since there are tests which ensure this exact situation. Looking at the code it also shows, that it should really work: In step (2) a ConfiguredComponentHolder is created and provided with the configuration, which in turn causes the configuration to be set and the component to be activated. See ConfigurationComponentRegistry.createComponentHolder.

I may of course be wrong, and I will verify this later.","27/Nov/09 21:15;pderop;I added logs in the createComponentHolder method, and it looks like the findSingletonConfiguration method returns null ...
So, may be there is an issue with my MapPersistenceManager ? I will check.


","28/Nov/09 22:14;pderop;All right, 

The problem comes from my custom MapPersistenceManager, which was not cloning dictionaries from getters/setters methods.
Indeed, it seems that when ConfigAdmin invokes from PersistentManager some methods like PersistentManager.getDictionaries(), then CM may modify the returned dictionaries. 

For instance, in ConfigurationManager.listConfigurations() method, when a Dictionary is retrieved by calling PersistentManager.getDictionaries(), then line 544,  the constructor of the ConfigurationImpl class is removing the service.pid from the returned dictionary.
To work around, I just managed to clone getters/setters from my PersistentManager and every problems have disappeared.

So, sorry for having created this issue uselessly.
","29/Nov/09 19:28;fmeschbe;> So, sorry for having created this issue uselessly. 

Maybe we stumbled upon missing documentation of the API here ... I created FELIX-1907 for this",,,,,,,,,,,,,,,,,,,,,
Karaf hangs and crash when several features are deployed,FELIX-1883,12441287,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,cmoulliard,cmoulliard,20/Nov/09 11:59,25/Nov/09 14:52,14/Mar/19 02:47,25/Nov/09 14:52,,,,,,,,,,,,,,,,,,,,,,0,,,,,,"Karaf hangs and crashes several times during installation of features startup
It seems that bundle refreshing is the origin of this problem 

ex. Installation of camel-cxf feature (which includes a lot of cxf bundles)

{code}
karaf@root> features:install camel-cxf
Refreshing bundles org.springframework.core (33),
org.apache.servicemix.bundles.cglib (44),
org.springframework.context.support (37), org.springframew
ork.context (36), org.apache.camel.camel-core (43)
Using an unsupported terminal: java.lang.UnsatisfiedLinkError: Native
Library C:\Documents and Settings\Charlesm.STREAMLINED\Local
Settings\Temp\jline
_.dll already loaded in another classloader
       __ __                  ____
      / //_/____ __________ _/ __/
     / ,<  / __ `/ ___/ __ `/ /_
    / /| |/ /_/ / /  / /_/ / __/
   /_/ |_|\__,_/_/   \__,_/_/

 Apache Felix Karaf (1.1.0-SNAPSHOT)

Hit '<tab>' for a list of available commands
and '[cmd] --help' for help on a specific command.
Hit '<ctrl-d>' or 'osgi:shutdown' to shutdown Karaf.

D:\Temp\tutorial\part2\downloaded\reportincident.features>java -version
java version ""1.6.0_16""
Java(TM) SE Runtime Environment (build 1.6.0_16-b01)
Java HotSpot(TM) Client VM (build 14.2-b01, mixed mode, sharing)
{code}


After killing the java process and restarting the server, here is what happens

{code}
karaf@root> features:install camel-cxf
Refreshing bundles org.apache.camel.camel-core (43),
org.springframework.context (36), org.springframework.context.support
(37), org.apache.servicemix
.bundles.cglib (44), org.springframework.core (33)
ERROR: JarContent: Unable to read bytes.
(java.lang.IllegalStateException: zip file closed)
java.lang.IllegalStateException: zip file closed
       at java.util.zip.ZipFile.ensureOpen(ZipFile.java:403)
       at java.util.zip.ZipFile.getEntry(ZipFile.java:148)
       at java.util.jar.JarFile.getEntry(JarFile.java:206)
       at org.apache.felix.framework.util.JarFileX.getEntry(JarFileX.java:61)
       at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:120)
       at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1696)
       at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:682)
       at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:60)
       at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1650)
       at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
       at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
       at org.springframework.aop.framework.AdvisedSupport.getInterceptorsAndDynamicInterceptionAdvice(AdvisedSupport.java:462)
       at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:190)
       at $Proxy0.getServiceReference(Unknown Source)
       at org.springframework.osgi.service.importer.support.internal.collection.OsgiServiceCollection.destroy(OsgiServiceCollection.java:294)
       at org.springframework.osgi.service.importer.support.DisposableBeanRunnableAdapter.run(DisposableBeanRunnableAdapter.java:43)
       at org.springframework.osgi.service.importer.support.AbstractServiceImporterProxyFactoryBean.destroy(AbstractServiceImporterProxyFactoryBean.j
ava:67)
       at org.springframework.osgi.extender.internal.activator.ContextLoaderListener.shutdown(ContextLoaderListener.java:555)
       at org.springframework.osgi.extender.internal.activator.ContextLoaderListener.stop(ContextLoaderListener.java:433)
       at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:661)
       at org.apache.felix.framework.Felix.stopBundle(Felix.java:2071)
       at org.apache.felix.framework.Felix$RefreshHelper.stop(Felix.java:4255)
       at org.apache.felix.framework.Felix.refreshPackages(Felix.java:3405)
       at org.apache.felix.framework.PackageAdminImpl.run(PackageAdminImpl.java:329)
       at java.lang.Thread.run(Thread.java:619)
ERROR: Error stopping bundle. (java.lang.NoClassDefFoundError:
org/springframework/aop/framework/AdvisedSupport$MethodCacheKey)
java.lang.NoClassDefFoundError:
org/springframework/aop/framework/AdvisedSupport$MethodCacheKey
       at org.springframework.aop.framework.AdvisedSupport.getInterceptorsAndDynamicInterceptionAdvice(AdvisedSupport.java:462)
       at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:190)
       at $Proxy0.getServiceReference(Unknown Source)
       at org.springframework.osgi.service.importer.support.internal.collection.OsgiServiceCollection.destroy(OsgiServiceCollection.java:294)
       at org.springframework.osgi.service.importer.support.DisposableBeanRunnableAdapter.run(DisposableBeanRunnableAdapter.java:43)
       at org.springframework.osgi.service.importer.support.AbstractServiceImporterProxyFactoryBean.destroy(AbstractServiceImporterProxyFactoryBean.j
ava:67)
       at org.springframework.osgi.extender.internal.activator.ContextLoaderListener.shutdown(ContextLoaderListener.java:555)
       at org.springframework.osgi.extender.internal.activator.ContextLoaderListener.stop(ContextLoaderListener.java:433)
       at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:661)
       at org.apache.felix.framework.Felix.stopBundle(Felix.java:2071)
       at org.apache.felix.framework.Felix$RefreshHelper.stop(Felix.java:4255)
       at org.apache.felix.framework.Felix.refreshPackages(Felix.java:3405)
       at org.apache.felix.framework.PackageAdminImpl.run(PackageAdminImpl.java:329)
       at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.ClassNotFoundException:
org.springframework.aop.framework.AdvisedSupport$MethodCacheKey
       at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:738)
       at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:60)
       at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1650)
       at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
       at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
       ... 14 more
Using an unsupported terminal: java.lang.UnsatisfiedLinkError: Native
Library C:\Documents and Settings\Charlesm.STREAMLINED\Local
Settings\Temp\jline
_.dll already loaded in another classloader
       __ __                  ____
      / //_/____ __________ _/ __/
     / ,<  / __ `/ ___/ __ `/ /_
    / /| |/ /_/ / /  / /_/ / __/
   /_/ |_|\__,_/_/   \__,_/_/

 Apache Felix Karaf (1.1.0-SNAPSHOT)

Hit '<tab>' for a list of available commands
and '[cmd] --help' for help on a specific command.
Hit '<ctrl-d>' or 'osgi:shutdown' to shutdown Karaf.
{code}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-25 14:06:25.736,,,no_permission,,,,,,,,,,,57161,,,Wed Nov 25 14:52:54 UTC 2009,,,,,,0|i0w18v:,185007,,,,,,,,"25/Nov/09 14:06;gnt;I've launched the following commands in a clean karaf on mac:

{code}
karaf@root> features:addUrl mvn:org.apache.camel.karaf/features/2.1-SNAPSHOT/xml/features
karaf@root> features:install camel-cxf 
{code}

This works without any problems on both os x  and windows.",25/Nov/09 14:52;cmoulliard;Cannot reproduce with last snapshot of Apache Felix Karaf.,,,,,,,,,,,,,,,,,,,,,,,,,
SigilIncrementalProjectBuilder fails to build correct classpath for bnd if using -contents instead of -sourcedirs,FELIX-1880,12441191,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,19/Nov/09 14:21,20/Nov/09 09:48,14/Mar/19 02:47,20/Nov/09 09:48,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57163,,,Fri Nov 20 09:48:16 UTC 2009,,,,,,0|i0vz9b:,184685,,,,,,,,19/Nov/09 15:08;davemssavage;patch supplied to use IJavaProject.getResolvedClasspath() if no explicit source dirs used,19/Nov/09 16:01;davemssavage;Discovered a second level failure if -contents is used on a project that is added as a dependency to a second project - in this case the classpath is also empty,20/Nov/09 09:48;davemssavage;Secondary patch applied to recursively apply classpath from nested projects if -contents used in dependent projects,,,,,,,,,,,,,,,,,,,,,,,,
erroneous start line for tutorial example 7,FELIX-1876,12440997,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,aradzak,aradzak,18/Nov/09 01:29,18/Nov/09 14:09,14/Mar/19 02:47,18/Nov/09 14:09,,,,,,,,,,,,,,,Documentation,,,,,,,0,,,,,,"on the http://felix.apache.org/site/apache-felix-tutorial-example-7.html page, the start command references example 6 instead of example 7, as below.
vvvvvvvvvvvvv

 Assuming that we created our bundle in the directory c:\tutorial, we can install and start it in Felix' shell using the following command:

start file:/c:/tutorial/example6.jar

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-18 14:09:18.316,,,no_permission,,,,,,,,,,,57167,,,Wed Nov 18 14:09:18 UTC 2009,,,,,,0|i1asrz:,271128,,,,,,,,"18/Nov/09 14:09;rickhall;Fixed, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong default HttpContext in Whiteboard,FELIX-1873,12440877,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,srs,srs,srs,16/Nov/09 23:24,16/Nov/09 23:57,14/Mar/19 02:47,16/Nov/09 23:57,http-2.0.2,,,,,,,,,,http-2.0.4,,,,HTTP Service,,,,,,,0,,,,,,When a whiteboard registration is used with no httpcontext it should be using a default. This default should be associated with the right bundle (bundle which registered the service) so that ServletContext.getResource(..) methods will work correctly. Right now it is not using the right bundle - it's using the whiteboard extender itself.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57170,,,Mon Nov 16 23:46:55 UTC 2009,,,,,,0|i0w133:,184981,,,,,,,,"16/Nov/09 23:46;srs;Fixed the code, but need to test with my apps before closing. ",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE while setting attribute on ServletContext,FELIX-1872,12440865,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,srs,srs,srs,16/Nov/09 22:02,16/Nov/09 23:54,14/Mar/19 02:47,16/Nov/09 23:54,http-2.0.2,,,,,,,,,,http-2.0.4,,,,HTTP Service,,,,,,,0,,,,,,"NPE inside ServletContextImpl.setAttribute(..) when setting with null key and/or null value. Should be failsafe.

java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:881)
	at org.apache.felix.http.base.internal.context.ServletContextImpl.setAttribute(ServletContextImpl.java:152)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57171,,,2009-11-16 22:02:17.0,,,,,,0|i0w11z:,184976,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ModuleImpl diagnoseClassLoadError throw NullPointerException for empty package name in debug mode,FELIX-1867,12440705,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,mrduguo,mrduguo,14/Nov/09 13:30,08/Feb/10 21:55,14/Mar/19 02:47,01/Dec/09 21:46,framework-2.0.2,,,,,,,,,,framework-2.0.3,,,,Framework,,,,,,,0,,,,,,"THE PROBLEM
org.apache.felix.framework.ModuleImpl$ModuleClassLoader throw
NullPointerException when try to load class with default package name
(empty package name) in debug mode (felix.log.level=4).
Felix framework version 2.0.0 (2.0.2 have the same problem)

BACKGROUND
I installed groovy 1.6.5 official release to felix framework, when
evaluate my script, it throw the NullPointerException because groovy
try to dynamically load java.util.Calendar. During the scan, it will
try to load class ""java$util$Calendar"". The wired format will be
treated by felix class loader as a class with an empty package name.
Following are the stack trace.
Caused by: java.lang.NullPointerException
       at org.apache.felix.framework.FelixResolverState.getResolvedCandidates(FelixResolverState.java:652)
       at org.apache.felix.framework.Felix$FelixResolver.getResolvedCandidates(Felix.java:3993)
       at org.apache.felix.framework.ModuleImpl.diagnoseClassLoadError(ModuleImpl.java:2144)
       at org.apache.felix.framework.ModuleImpl.access$400(ModuleImpl.java:60)
       at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1644)
       at java.lang.ClassLoader.loadClass(ClassLoader.java:300)
       at groovy.lang.GroovyClassLoader.loadClass(GroovyClassLoader.java:660)

EXCEPTION POINT
org.apache.felix.framework.ModuleImpl
line:2136        try
line:2137        {
line:2138            pkgReq = new
Requirement(ICapability.PACKAGE_NAMESPACE, ""(package="" + pkgName +
"")"");
line:2139        }
line:2140        catch (InvalidSyntaxException ex)
line:2141        {
line:2142            // This should never happen.
line:2143        }
line:2144        PackageSource[] exporters =
line:2145            resolver.getResolvedCandidates(pkgReq);

We need handle the exception at line:2142 or do something different
before line 2138.
",java 1.5/1.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-01 21:46:28.346,,,no_permission,,,,,,,,,,,57176,,,Mon Feb 08 21:55:14 UTC 2010,,,,,,0|i0w1qf:,185086,,,,,,,,"01/Dec/09 21:46;rickhall;I have committed a patch to address this. It affected not only the class loading error diagnosis code, but also dynamic import resolution. I think it is fixed in both places now. Please close this issue if you are satisfied with the result. Thanks.","08/Feb/10 21:54;mrduguo;verified against 2.0.3 release candidate:
https://repository.apache.org/content/repositories/orgapachefelix-001/",08/Feb/10 21:55;mrduguo;thanks,,,,,,,,,,,,,,,,,,,,,,,,
"SCR 1.1 restarts components when service properties are changed, even if ""modified"" attributed is specified",FELIX-1866,12440695,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,pderop,pderop,14/Nov/09 09:21,26/Nov/09 07:28,14/Mar/19 02:47,25/Nov/09 19:52,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Hi everyone,

This issue is described here: http://www.mail-archive.com/dev@felix.apache.org/msg13733.html
I'm using the following xml descriptor in order to be notified when a service configuration property is modified from CM (I use the modify attribute):

<?xml version=""1.0"" encoding=""utf-8""?>
<components xmlns:scr=""http://www.osgi.org/xmlns/scr/v1.1.0"">
  <scr:component name=""englishdico"" modified=""updated"" configuration-policy=""require"">
    <service>
      <provide interface=""com.alcatel_lucent.dictionary.DictionaryService""/>
    </service>
    <property name=""Language"" value=""en""/>
    <implementation class=""com.alcatel_lucent.dictionary.english.EnglishDictionary"" />
  </scr:component>
</components>

I also use CM 1.2.4 and when I programatically re-configure my ""EnglishDictionary"" component like this:

class Updater {
  ConfigurationAdmin _cm;

  void update(String pid, Dictionary update) {
     Configuration conf = _cm.getConfiguration(pid, null);
     if (config.getBundleLocation() != null)
     {
        config.setBundleLocation(null);
     }
     config.update(update);
   }
}

Then my EnglishDictionary is properly invoked in its ""updated"" method (because I have configured a ""modified"" attribute).
But ... the EnglishDictionary is deactivated and then reactivated.

Is it a normal behavior or a bug ?
I provide here the stacktrace, when the component is deactivated. may be it will help:

at com.alcatel_lucent.dictionary.english.EnglishDictionary.deactivate(EnglishDictionary.java:20)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
    at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
    at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)
    at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
    at org.apache.felix.scr.impl.helper.ActivateMethod.invoke(ActivateMethod.java:138)
    at org.apache.felix.scr.impl.manager.ImmediateComponentManager.disposeImplementationObject(ImmediateComponentManager.java:259)
    at org.apache.felix.scr.impl.manager.ImmediateComponentManager.deleteComponent(ImmediateComponentManager.java:134)
    at org.apache.felix.scr.impl.manager.DelayedComponentManager.deleteComponent(DelayedComponentManager.java:66)
    at org.apache.felix.scr.impl.manager.AbstractComponentManager$Active.ungetService(AbstractComponentManager.java:1094)
    at org.apache.felix.scr.impl.manager.DelayedComponentManager.ungetService(DelayedComponentManager.java:100)
    at org.apache.felix.framework.ServiceRegistrationImpl.ungetFactoryUnchecked(ServiceRegistrationImpl.java:346)
    at org.apache.felix.framework.ServiceRegistrationImpl.ungetService(ServiceRegistrationImpl.java:259)
    at org.apache.felix.framework.ServiceRegistry.ungetService(ServiceRegistry.java:401)
    at org.apache.felix.framework.Felix.ungetService(Felix.java:2888)
    at org.apache.felix.framework.BundleContextImpl.ungetService(BundleContextImpl.java:370)
    at org.apache.felix.scr.impl.manager.DependencyManager.ungetService(DependencyManager.java:759)
    at org.apache.felix.scr.impl.manager.DependencyManager.serviceRemoved(DependencyManager.java:390)
    at org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:177)
    at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:878)
    at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
    at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
    at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3587)
    at org.apache.felix.framework.Felix.access$000(Felix.java:40)
    at org.apache.felix.framework.Felix$1.serviceChanged(Felix.java:625)
    at org.apache.felix.framework.ServiceRegistry.servicePropertiesModified(ServiceRegistry.java:505)
    at org.apache.felix.framework.ServiceRegistrationImpl.setProperties(ServiceRegistrationImpl.java:116)
    at org.apache.felix.scr.impl.manager.ImmediateComponentManager.modify(ImmediateComponentManager.java:472)
    at org.apache.felix.scr.impl.manager.ImmediateComponentManager.reconfigure(ImmediateComponentManager.java:401)
    at org.apache.felix.scr.impl.config.ConfiguredComponentHolder.configurationUpdated(ConfiguredComponentHolder.java:187)
    at org.apache.felix.scr.impl.config.ConfigurationComponentRegistry.configurationEvent(ConfigurationComponentRegistry.java:173)
    at org.apache.felix.cm.impl.ConfigurationManager$FireConfigurationEvent.run(ConfigurationManager.java:1693)
    at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:88)



-> I am wondering if the service is re-activated just because the service configuration is re-propagated in the published service properties ?

-> I have also noticed that now, with DS 1.1, properties which are prefixed with a dot (""."") are not supposed to be propagated in the published service properties.
Indeed, in the spec, I see the following, page 331, in chapter 112.11:

    ""SCR must follow the recommendations of Property Propagation on page
    86 and not propagate properties whose names start with '.' to service properties""


So, I prefixed my english dictionary property with a ""."", and I then invoked the org.osgi.service.cm.Configuration.update(Dictionary method), just to see if it resolved the problem,
but I came across another exception. However, this exception comes from CM (I use CM 1.2.4 release):

Throwable
java.lang.IllegalArgumentException: Key [.englishdico.jdbcURL] must not start or end with a dot
    at org.apache.felix.cm.impl.CaseInsensitiveDictionary.checkKey(CaseInsensitiveDictionary.java:265)
    at org.apache.felix.cm.impl.CaseInsensitiveDictionary. (CaseInsensitiveDictionary.java:72)
    at org.apache.felix.cm.impl.ConfigurationImpl.update(ConfigurationImpl.java:278)
    at org.apache.felix.cm.impl.ConfigurationAdapter.update(ConfigurationAdapter.java:110)
    at com.alcatel.as.service.config.impl.fc.OsgiConfigurationAdmin$Conf.update(OsgiConfigurationAdmin.java:237)
    at com.alcatel.as.service.config.impl.fc.OsgiConfigurationAdmin$Conf.update(OsgiConfigurationAdmin.java:214)
    at com.alcatel.as.service.config.impl.fc.OsgiConfigurationAdmin$Conf.access$000(OsgiConfigurationAdmin.java:166)
    at com.alcatel.as.service.config.impl.fc.OsgiConfigurationAdmin.configure(OsgiConfigurationAdmin.java:126)
    at com.alcatel.as.service.config.impl.fc.FastCacheConfig.init2(FastCacheConfig.java:262)
    at com.alcatel.as.service.config.impl.fc.FastCacheConfig.proxyAppPropertiesUpdated(FastCacheConfig.java:290)
    at com.nextenso.mgmt.reporter.ProxyAppReporter$FastCacheListeningThread.run(ProxyAppReporter.java:180)

Did I make something wrong at all ? 


Best Regards;
/pierre

 ","linux, jdk1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-15 13:39:19.081,,,no_permission,,,,,,,,,,,57177,,,Wed Nov 25 19:52:59 UTC 2009,,,,,,0|i0w0uv:,184944,,,,,,,,"15/Nov/09 13:39;fmeschbe;Thanks for reporting the issue.

The simple one first: It is a kown issue with our configadmin implementation, that leading dots in the rleeased version are not allowed. This has been fixed in trunk. See FELIX-1727 for details.

Now, for the more complicated issue: It looks like this is related to FELIX-1841.

I interpret from the stacktrace and your setup:

The property modification causes the service properties to be updated and thus a service changed event being fired. In another component referring to the dictionary component this event is caught and causes a rebind of the service (service unbind/check/bind).

Now, since the component is a delayed component, it has to be deactivated if no more references exist to it (which seems to be the case here). Hence the component is deactivated due to the unbind caused by the service changed event.

After the other component ensured it still needs the service, it binds to it again, causing SCR to instantiate (and thus activate) the component again.

If this interpretation is correct, this issue caused by the same ""problem"" as underlying FELIX-1841 in that the reference is unbound and rebound while checking for the target.

WDYT ?","15/Nov/09 15:48;pderop;Thanks for your explanation, Felix.

-> I tested with latest CM from the trunk, and I don't have the CM exception anymore.
Indeed, it seems that this issue is really related to the 1841 one (should I close it ?)

-> So, I modified the SCR descriptor of the english dictionary, in order to make it an immediate component, instead of a delayed component: and the dictionary is not deactivated/reactivated anymore: it is just invoked in its ""updated"" callack as expected, when I modify the properties using CM.

-> However, I noticed that the other component which is depending on the dictionary is re-bound with it (once I update the dictionary service). And what I don't understand is that all my dictionary properties start with a dot ("".""), meaning that they should not be propagated to the published dictionary service.
So, why is the dictionary re-bound to the other component ?
in fact, all I would like to do is to modify the EnglishDictionary (private) service properties, without causing any re-activatation, or any re-bind ... do you think it's possible to do such a thing ?

thanks;
/pierre
","15/Nov/09 15:59;fmeschbe;> -> I tested with latest CM from the trunk, and I don't have the CM exception anymore.
> Indeed, it seems that this issue is really related to the 1841 one (should I close it ?) 

Ehrm, no the CM issue is related to FELIX-1727 which is already resolved.

> -> However, I noticed that the other component which is depending on the dictionary is re-bound with it (once I update the dictionary
> service). And what I don't understand is that all my dictionary properties start with a dot ("".""), meaning that they should not be
> propagated to the published dictionary service. 

SCR currently does not check whether there is really a modification in the service registration properties or not. It just regenerates the dictionary making up the service registration properties and calls the ServiceRegistration.setProperties method. This causes the service changed event to be sent.

As an optimization SCR could of course verify whether the service registration properties really change as a consequence of the configuration update.

WDYT ?


> So, why is the dictionary re-bound to the other component ?

That is probably the consequence of FELIX-1841: where the component is unbound and rebound on service modification.",15/Nov/09 16:17;fmeschbe;Added a proposed patch to FELIX-1841. You might want to test (applied to trunk; my proposed patch does not include your proposed patch).,"25/Nov/09 19:52;pderop;I verified the fix and it works fine.

thanks Felix",,,,,,,,,,,,,,,,,,,,,,
Metatype resolving mechanism does not seem to work correctly,FELIX-1865,12440667,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,wimpi,wimpi,13/Nov/09 21:08,23/Nov/12 06:54,14/Mar/19 02:47,24/Mar/11 16:10,webconsole-2.0.2,,,,,,,,,,webconsole-4.0.0,,,,Web Console,,,,,,,0,,,,,,"The implementation of the metatype mechanism in the web-console 2.0.2  causes configurations to be listed with the Designate pid and the Object ocdref. 

i.e.
<Designate pid=""com.acme.addressbook"">
   <Object ocdref=""2.5.6.6""/>
</Designate> 

Would list ""com.acme.addressbook"" and ""2.5.6.6"" where the latter is actually broken and won't load the corresponding form.

This problem does not occur with the identical installation and a web-console 1.2.10 release bundle.","equinox 3.5.1 (release; cm, metatype from the same release)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-19 13:43:47.134,,,no_permission,,,,,,,,,,,40378,,,Fri Nov 23 06:54:47 UTC 2012,,,,,,0|i0b3nb:,62703,,,,,,,,"19/Mar/10 13:43;fmeschbe;Sorry for having had this laying around for much too long ....

I have to admit, that I do not completely understand the problem.

Here's what's going on in the web console:

   * When a configuration (or ManagedService) is encountered the Web Console scans all MetaTypeInformation
      objects provided by the MetaTypeService for an ObjectClassDefinition with the configuration's or service's
      service.pid calling MetaTypeInformation.getObjectClassDefinition(String, String)

   * Once such an ObjectClassDefinition is found, it is used.

Now, the mapping of the Designate.pid attribute to the OCD.id attribute is AFAICT the task of the MetaTypeService implementation. This service takes the Object.ocdref attribute value and finds an OCD with a matching id attribute. If no such OCD exists, the MetaTypeService (or rather the MetaTypeInformation) should not resovle an ObjectClassDefinition for the Designate.

And, yes I may be missing something, particularly since you say that in 1.2.10 the configuration was properly rendered. Can you provide a Metatype descriptor and a configuration exhibiting this proplem ? Thanks.","13/Dec/10 20:43;achim_nierbeck;Just stumbled over this, but It looks to me I found this issue also with 3.1.2

Using a metatype like the following: 

<metatype:MetaData xmlns:metatype=""http://www.osgi.org/xmlns/metatype/v1.0.0"">
	<OCD id=""a.b.c.d-service"" />

...

	<Designate pid=""a.b.c.d"">
		<Object ocdref=""a.b.c.d-service"" />
	</Designate>
</metatype:MetaData>

Where the pid is a.b.c.d and the reference is the pid with an appended -service. 

Now what happens is that there is a entry for a.b.c.d and another one for a.b.c.d-service (while debugging this seemed to be added as managed factory?)

Unless I'm wrong with my interpretation but I think this shouldn't happen.","24/Mar/11 15:16;jwross@us.ibm.com;I encountered this same issue with version 3.1.8. It occurs when the <OCD> 'id' and <Object> 'ocdref' attributes do not equal the <Designate> 'pid' and, if present, 'factoryPid' attributes. The only apparent way to avoid it is to make sure all attributes have the same value.

<OCD id=""ocd""/>
<Designate pid=""designate"" factoryPid=""designate"">
     <Object ocdref=""ocd""/>
</Designate>

The above XML incorrectly results in two entries appearing on the console. One entry shows a Factory PID of 'designate'. The other shows a Factory PID of 'ocd'. It almost seems like the code is calling MetaTypeProvider.getObjectClassDefinition() using ObjectClassDefinition.getID(). If so, this would result in a null OCD being returned, which I believe explains why the entry associated with the 'ocd' Factory PID has only a text area requiring the user to enter name/value pairs instead of listing the attributes. The only valid id arguments for getObjectClassDefinition() are those returned by MetaTypeInformation.getPids() (i.e. the pids of all Designates, associated with an OCD, that did not also declare factoryPids) and getFactoryPids() (i.e. the factoryPids of all Designates associated with an OCD).

<OCD id=""designate""/>
<Designate pid=""designate"" factoryPid=""designate"">
     <Object ocdref=""designate""/>
</Designate>

The above XML correctly results in one entry appearing on the console showing a Factory PID of 'designate'.

This is an issue because it effectively limits the use of an OCD to a single Designate, but the intent is for multiple Designates to be able to reference the same OCD.

Note the same behavior results when using either the Equinox or Felix Metatype implementation. Also, this does not appear to be fatal. Configurations can apparently be created, updated, or deleted without issue. It's just a confusing display.",24/Mar/11 15:50;fmeschbe;This issue is long overdue and should really be fixed for the next release,24/Mar/11 16:10;fmeschbe;Fixed in Rev. 1085018 by not preparing the ObjectClassDefinition objects in a Collection but in a Map indexed by the PID (or factory PID),23/Nov/12 06:54;fmeschbe;Close after release,,,,,,,,,,,,,,,,,,,,,
"getServletPath() should return """" when alias is /",FELIX-1863,12440464,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,srs,justinedelson,justinedelson,12/Nov/09 00:09,16/Nov/09 23:38,14/Mar/19 02:47,16/Nov/09 23:38,http-2.0.2,,,,,,,,,,http-2.0.4,,,,HTTP Service,,,,,,,0,,,,,,"When a servlet is registered with HttpService with an alias of ""/"", getServletPath() should return """". Currently it returns ""/"".",,,,,,,,,,,SLING-1179,,,,,,,,,12/Nov/09 00:10;justinedelson;FELIX-1863.patch;https://issues.apache.org/jira/secure/attachment/12424678/FELIX-1863.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-11-16 23:28:40.522,,,no_permission,,,,,,,,,,,57179,,,Mon Nov 16 23:38:53 UTC 2009,,,,,,0|i0vz9r:,184687,,,,,,,,12/Nov/09 00:10;justinedelson;here's a patch,16/Nov/09 23:28;srs;Thanks for the patch. Will apply it shortly and get it included in 2.0.4.,16/Nov/09 23:38;srs;Applied the patch. ,,,,,,,,,,,,,,,,,,,,,,,,
HttpServletRequest objects passed through HttpService don't respond to getAuthType() and getRemoteUser() properly,FELIX-1860,12440370,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,srs,justinedelson,justinedelson,11/Nov/09 01:23,16/Nov/09 23:42,14/Mar/19 02:47,16/Nov/09 23:42,http-2.0.2,,,,,,,,,,http-2.0.4,,,,HTTP Service,,,,,,,0,,,,,,"According to the JavaDoc for org.osgi.service.http.HttpContext, the authentication type and remote user should be accessible via the standard getAuthType() and getRemoteUser() methods of HttpServletRequest. However, Felix HttpService's ServletHandlerRequest class does *not* do this.

patch to follow shortly...",,,,,,,,,,,SLING-1179,,,,,,,,,11/Nov/09 02:31;justinedelson;FELIX-1860.patch;https://issues.apache.org/jira/secure/attachment/12424556/FELIX-1860.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-11-16 23:26:26.366,,,no_permission,,,,,,,,,,,57182,,,Mon Nov 16 23:42:11 UTC 2009,,,,,,0|i0w12n:,184979,,,,,,,,11/Nov/09 02:31;justinedelson;here's the patch,16/Nov/09 23:26;srs;Thanks for the patch. Will apply it shortly and test it locally.,16/Nov/09 23:42;srs;Applied the patch.,,,,,,,,,,,,,,,,,,,,,,,,
Remote commands via ssh only work once per restart,FELIX-1858,12440248,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,ccustine,ccustine,10/Nov/09 03:52,24/May/10 16:17,14/Mar/19 02:47,10/Nov/09 05:54,gogo-0.2.0,karaf-1.0.0,,,,,,,,,gogo-0.2.2,karaf-1.2.0,,,Gogo Runtime,Karaf,,,,,,0,,,,,,"Remote commands using karaf-client or ssh only work once per server start, then all those after display nothing until another server restart.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-24 16:17:45.908,,,no_permission,,,,,,,,,,,57184,,,Mon May 24 16:17:45 UTC 2010,,,,,,0|i0vzgn:,184718,,,,,,,,10/Nov/09 05:34;ccustine;Adding gogo component and versions because this issue looks like it is caused by the fix for FELIX-1403 in gogo.  The fix for FELIX-1403 causes this issue when a thread is reused but needs to install different streams for IO (such is the case with an ssh command over an sshd exec channel).,"10/Nov/09 05:54;ccustine;The fix for FELIX-1403 causes this issue when a thread is reused but needs to install different streams for IO (such is the case with an ssh command over an sshd exec channel).  I tested this fix on the console, sshd shell, and sshd exec invocations and everything looks OK to me.",24/May/10 16:17;db82407;close issue prior to next release,,,,,,,,,,,,,,,,,,,,,,,,
Error with duplicates when using maven-bundle-plugin 2.0.1 and maven-scr-plugin 1.4,FELIX-1847,12439947,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,bimschas,bimschas,05/Nov/09 15:15,21/Dec/09 17:14,14/Mar/19 02:47,07/Dec/09 07:44,maven-bundle-plugin-2.0.1,maven-scr-plugin-1.4.0,,,,,,,,,maven-scr-plugin-1.4.2,,,,Maven Bundle Plugin,SCR Tooling,,,,,,1,,,,,,"Experiencing the same problem as Patrick Forhahn who commented after https://issues.apache.org/jira/browse/FELIX-1262 was fixed I asked Stuart McCulloch about the bug. Here is his answer about the issue:

--------------------------
""The underlying effect is the same (Bnd tool appends ~ to duplicate clauses) but the cause is different.
FELIX-1262 was caused by duplicate clauses in the Include-Resource calculated by the bundleplugin,
whereas this new issue is caused by duplication of Service-Component clauses by the scrplugin.""
 
""Basically duplicate entries should be removed, which is why directly setting ServiceComponent works.
The question is whether the scrplugin or the bundleplugin should detect and remove the duplicates...""
--------------------------

The reason of error is the same as in Patricks comment:

[ERROR] Error building bundle org.bjc.es:org.bjc.osgi.foundation.cache:bundle:1.13.0.RC1-SNAPSHOT : Service-Component entry can not be located in JAR: OSGI-INF/serviceComponents.xml~
","Apache Maven 2.2.1 (r801777; 2009-08-06 21:16:01+0200)
Java version: 1.6.0_15
Java home: /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home
Default locale: de_DE, platform encoding: MacRoman
OS name: ""mac os x"" version: ""10.5.8"" arch: ""x86_64"" Family: ""mac""",,,,,,,,,,,,,,,,,,,26/Nov/09 15:00;reto;felix-1847-patch;https://issues.apache.org/jira/secure/attachment/12426225/felix-1847-patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-11-26 17:36:47.867,,,no_permission,,,,,,,,,,,57194,,,Mon Dec 07 07:44:05 UTC 2009,,,,,,0|i0vwkn:,184250,,,,,,,,"26/Nov/09 17:36;reto;""The question is whether the scrplugin or the bundleplugin should detect and remove the duplicates..."" 

with the proposed patch the scr just doesn't add an entry already present.","06/Dec/09 22:52;reto;the error occurs (as the title of the issues says) with maven-scr-plugin 1.4, at least at the time of submitting the the patch it also occurred using 1.4.1-SNAPSHOT built from trunk.","07/Dec/09 02:21;mcculls;Hi Carsten, could you take a quick look at Reto's patch for the scr plugin?","07/Dec/09 07:44;cziegeler;Hi, the patch looks good - I've applied it in revision 887856. Thanks!",,,,,,,,,,,,,,,,,,,,,,,
"When updated configuration of component without a previously set target filter, NullPointerException is thrown",FELIX-1846,12439934,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,fmeschbe,zacheryjensen,zacheryjensen,05/Nov/09 12:05,30/Jul/10 11:42,14/Mar/19 02:47,05/Nov/09 17:14,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"If the target filter is undefined for a component before a change is made to its configuration (in this case, by way of config admin and fileinstall) it will always throw this NullPointerException because the clause at the associated line of code is bad.  It doesn't sufficiently guard for null return values for getTarget() before potentially dereferencing off getTarget()'s return.

Workaround is to set any target filter, though that's not an acceptable workaround in my opinion... at least it works.

If a target filter is set it seems to work as expected.

*ERROR* Unexpected problem delivery configuration event to [org.osgi.service.cm.ConfigurationListener, id=24, bundle=3]
java.lang.NullPointerException
	at org.apache.felix.scr.impl.manager.DependencyManager.canUpdateDynamically(DependencyManager.java:1068)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.modify(ImmediateComponentManager.java:432)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.reconfigure(ImmediateComponentManager.java:401)
	at org.apache.felix.scr.impl.config.ConfiguredComponentHolder.configurationUpdated(ConfiguredComponentHolder.java:187)
	at org.apache.felix.scr.impl.config.ConfigurationComponentRegistry.configurationEvent(ConfigurationComponentRegistry.java:173)
	at org.apache.felix.cm.impl.ConfigurationManager$FireConfigurationEvent.run(ConfigurationManager.java:1693)
	at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:88)","Java 1.5 on Mac, Felix 2.0.1 started by Pax Runner, build based on Revision: 832970 from http://svn.apache.org/repos/asf/felix/trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-05 16:58:10.986,,,no_permission,,,,,,,,,,,57195,,,Fri Jul 30 11:42:06 UTC 2010,,,,,,0|i0vwav:,184206,,,,,,,,"05/Nov/09 16:58;fmeschbe;Thanks for reporting this bug.

It is this expression causing the problem, right :

     if ( ( getTarget() == null && targetFilter == null ) || getTarget().equals( targetFilter ) )

","05/Nov/09 17:14;fmeschbe;Implemented a guard against the NPE in Rev. 833085

Can you please verify ? Thanks.","05/Nov/09 21:47;zacheryjensen;I can confirm that it's fixed.  Nice response time!

Just to be clear, I just svn up'd which put me in rev 833173, but, the only actual file that came down to me was the one relevant to this change.",05/Nov/09 23:12;fmeschbe;Thanks for the feedback.,30/Jul/10 11:42;fmeschbe;Closing since version is released.,,,,,,,,,,,,,,,,,,,,,,
Unclear exception being thrown: java.lang.ArrayIndexOutOfBoundsException: 0,FELIX-1845,12439864,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cathodion,cathodion,04/Nov/09 15:52,21/Dec/09 17:14,14/Mar/19 02:47,24/Nov/09 15:03,maven-scr-plugin-1.4.0,,,,,,,,,,maven-scr-plugin-1.4.2,,,,SCR Tooling,,,,,,,0,,,,,,"For some unknown reason my maven-scr-plugin stopped working and throws the following exception:

[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building ipds-service
[INFO]    task-segment: [package]
[INFO] ------------------------------------------------------------------------
[INFO] [resources:resources {execution: default-resources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 0 resource
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Compiling 3 source files to C:\Users\geert\workspace\nl.interact911.ipds.ipds-service\target\classes
[INFO] [scr:scr {execution: generate-scr-scrdescriptor}]
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] 0
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.ArrayIndexOutOfBoundsException: 0
	at org.apache.felix.scrplugin.tags.JavaClassDescriptorManager.getSourceDescriptions(JavaClassDescriptorManager.java:393)
	at org.apache.felix.scrplugin.SCRDescriptorMojo.execute(SCRDescriptorMojo.java:167)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 seconds
[INFO] Finished at: Wed Nov 04 16:46:39 CET 2009
[INFO] Final Memory: 14M/26M
[INFO] ------------------------------------------------------------------------


I have no clue why I get this message, and the exception does not have a message that I could use to try to locate the source of the problem. I really hope you can point me in the richt direction by telling me why this exception is being thrown.",,,,,,,,,,,,,,,,,,,,05/Nov/09 13:09;cathodion;package-info.java;https://issues.apache.org/jira/secure/attachment/12424125/package-info.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-11-16 12:28:42.907,,,no_permission,,,,,,,,,,,57196,,,Tue Nov 24 15:03:17 UTC 2009,,,,,,0|i0w1af:,185014,,,,,,,,"05/Nov/09 13:15;cathodion;I've found the cause of the exception! It's a file called package-info.java. I've attached it to the issue.

I think the SCR plugin lacks a null check after reflecting the contents of the java source file which only contains a package declaration and no class.","16/Nov/09 12:28;cziegeler;Hi Geert, could you please retest with latest from trunk? It seems that this has been fixed with all the refactorings and changes we did - at least I can't reproduce.",24/Nov/09 15:03;cziegeler;This has been fixed by the refactorings and other changes.,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO The 1.4.2 Eclipse Sample (MyiPOJOBundle-1.4.2) does not run,FELIX-1842,12439823,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,toedter_k,toedter_k,04/Nov/09 07:11,27/Apr/10 07:06,14/Mar/19 02:47,24/Nov/09 19:55,iPOJO-1.4.0,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"I just tries the Eclipse Example, downloaded from http://felix.apache.org/site/apache-felix-ipojo-eclipse-integration.data/MyiPOJOBundle-1.4.2.zip

After setting the target platform I get the following error after launching:

osgi> [ERROR] org.apache.felix.ipojo.sample.MyComponentImpl : [org.apache.felix.ipojo.sample.MyComponentImpl-0] createInstance -> Cannot invoke the constructor (method not found) : org.apache.felix.ipojo.sample.MyComponentImpl.<init>(org.apache.felix.ipojo.InstanceManager)
[ERROR] org.apache.felix.ipojo.sample.MyComponentImpl : Cannot create a POJO instance, the POJO constructor cannot be found : org.apache.felix.ipojo.sample.MyComponentImpl.<init>(org.apache.felix.ipojo.InstanceManager)
java.lang.RuntimeException: Cannot create a POJO instance, the POJO constructor cannot be found : org.apache.felix.ipojo.sample.MyComponentImpl.<init>(org.apache.felix.ipojo.InstanceManager)
	at org.apache.felix.ipojo.InstanceManager.createObject(InstanceManager.java:632)
	at org.apache.felix.ipojo.InstanceManager.getPojoObject(InstanceManager.java:776)
	at org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.__stateChanged(LifecycleCallbackHandler.java:156)
	at org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.stateChanged(LifecycleCallbackHandler.java)
	at org.apache.felix.ipojo.InstanceManager.setState(InstanceManager.java:440)
	at org.apache.felix.ipojo.InstanceManager.start(InstanceManager.java:321)
	at org.apache.felix.ipojo.ComponentFactory.createInstance(ComponentFactory.java:155)
	at org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:298)
	at org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:235)
	at org.apache.felix.ipojo.InstanceCreator$ManagedInstance.create(InstanceCreator.java:360)
	at org.apache.felix.ipojo.InstanceCreator.addInstance(InstanceCreator.java:89)
	at org.apache.felix.ipojo.Extender.parse(Extender.java:269)
	at org.apache.felix.ipojo.Extender.startManagementFor(Extender.java:208)
	at org.apache.felix.ipojo.Extender.access$600(Extender.java:52)
	at org.apache.felix.ipojo.Extender$CreatorThread.run(Extender.java:669)
	at java.lang.Thread.run(Thread.java:619)
[ERROR] org.apache.felix.ipojo.sample.MyComponentImpl : Cannot create a POJO instance, the POJO constructor cannot be found : org.apache.felix.ipojo.sample.MyComponentImpl.<init>(org.apache.felix.ipojo.InstanceManager)
[ERROR] iPOJO Instance Creator : A matching factory was found for {component=org.apache.felix.ipojo.sample.MyComponentImpl, instance.name=org.apache.felix.ipojo.sample.MyComponentImpl-0}, but the instantiation failed : The configuration is not correct for the type org.apache.felix.ipojo.sample.MyComponentImpl : Cannot create a POJO instance, the POJO constructor cannot be found : org.apache.felix.ipojo.sample.MyComponentImpl.<init>(org.apache.felix.ipojo.InstanceManager)
",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-04 10:20:39.798,,,no_permission,,,,,,,,,,,57199,,,Tue Apr 27 07:06:13 UTC 2010,,,,,,0|i0vzq7:,184761,,,,,,,,"04/Nov/09 10:20;clement.escoffier;Hi,

I reproduce the issue. It sounds like after importing, you have to close / re-open the project to hook the Ant builder correctly... (I'm not an Eclipse expoert, so maybe there is others turn around).
Then, the console should display something like:

Buildfile: /Users/clement/workspaces/chameleon-dev/MyiPOJOBundle/build.xml

manipulate:
       [ipojo] Input directory : /Users/clement/workspaces/chameleon-dev/MyiPOJOBundle/bin
       [ipojo] Metadata file : /Users/clement/workspaces/chameleon-dev/MyiPOJOBundle/metadata.xml
       [ipojo] Start manipulation
       [ipojo] Manipulation - SUCCESS
       [ipojo] Output files : /Users/clement/workspaces/chameleon-dev/MyiPOJOBundle/bin
       [ipojo] Manifest : /Users/clement/workspaces/chameleon-dev/MyiPOJOBundle/META-INF/MANIFEST.MF
BUILD SUCCESSFUL
Total time: 267 milliseconds

which means that the manipulation is done. Then you can launch the framework. 

If you know how I can 'force' to recompile the code after importing, feel free to give me the hint :-)

Thanks for reporting,

Regards,

Clement

",27/Apr/10 07:06;clement.escoffier;Fixed in 1.6.0,,,,,,,,,,,,,,,,,,,,,,,,,
SCR invokes bind method twice when dependency service properties are modified,FELIX-1841,12439756,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,pderop,pderop,03/Nov/09 12:45,30/Jul/10 11:42,14/Mar/19 02:47,26/Nov/09 07:27,scr-1.2.0,,,,,,,,,, scr-1.4.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"It seems that when a service S is depending on another service D, and when D service properties are modified (using ServiceRegistration.setProperties method), then D is 
re-bound twice into the using service S.

For example, I have a service ""Client"" has a ""1..1"" dependency over ""Service"":

<?xml version=""1.0"" encoding=""UTF-8""?>
<component name=""Client"">
  <implementation class=""client.Client""/>
  <reference name=""SERVICE"" 
    interface=""service.Service""
    policy=""dynamic""
    cardinality=""1..1""
    target=""(foo=bar)""
    bind=""bind""/>
</component>

public class Client {
  protected void bind(Service s) {
    System.out.println(""Client:: bound Service : "" + s);
    Thread.dumpStack();
  }
}



I have another bundle which provide the ""Service"" dependency, and sometimes, the ""Service"" properties are modified like this:

        ServiceRegistration reg ...
        reg.setProperties(...)
 
So, when the setProperties takes place, ""Client"" is re-bound twice with the service ""Service"".
Indeed, in DependencyManager, when a ServiceEvent.MODIFIED event. is caught, the following code is invoked (line 170):


            case ServiceEvent.MODIFIED:
                m_componentManager.log( LogService.LOG_DEBUG, ""Dependency Manager: Updating {0}"", new Object[]
                    { serviceString }, null );

                // remove the service first
                // only continue with further event handling if the service
                // removal did not cause the component to be deactivated
                if ( serviceRemoved( ref ) )
                {
                    // recalculate the number of services matching the filter
                    // because we don't know whether this service previously matched
                    // or not
                    ServiceReference refs[] = getFrameworkServiceReferences();
                    m_size = ( refs == null ) ? 0 : refs.length;

                    // now try to bind the service - if it matches the target filter
                    // without recalculating the size (already done).
                    if ( targetFilterMatch( ref ) )
                    {
                        serviceAdded( ref );
                    }
                }

                break;

So, the service is first re-bound to the Client, when the serviceRemoved() method is invoked (it's a bound service replacement, I guess).
But the problem here is that the modified service is also re-bound, when serviceAdded is invoked (line 189).
Don't you think that this is a bug and the service should be re-bound only once, not twice ?

Here is the first stacktrace of the first bind:

java.lang.Exception: Stack trace
        at java.lang.Thread.dumpStack(Thread.java:1158)
        at client.Client.bind(Client.java:13)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:592)
        at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
        at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
        at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)
        at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
        at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:948)
        at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:884)
        at org.apache.felix.scr.impl.manager.DependencyManager.serviceRemoved(DependencyManager.java:367)
        at org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:177)
        at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:878)
        at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
        at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
        at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3587)
        at org.apache.felix.framework.Felix.access$000(Felix.java:40)
        at org.apache.felix.framework.Felix$1.serviceChanged(Felix.java:625)
        at org.apache.felix.framework.ServiceRegistry.servicePropertiesModified(ServiceRegistry.java:505)
        at org.apache.felix.framework.ServiceRegistrationImpl.setProperties(ServiceRegistrationImpl.java:116)
        at service.impl.ServiceFactory.run(ServiceFactory.java:48)
        at java.lang.Thread.run(Thread.java:595)

and here is the second stacktrace, when Service is re-bound:

Client: bound Service : service.impl.ServiceImpl@142a80d
java.lang.Exception: Stack trace
        at java.lang.Thread.dumpStack(Thread.java:1158)
        at client.Client.bind(Client.java:13)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:592)
        at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)
        at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
        at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)
        at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
        at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:948)
        at org.apache.felix.scr.impl.manager.DependencyManager.serviceAdded(DependencyManager.java:271)
        at org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:189)
        at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:878)
        at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
        at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
        at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3587)
        at org.apache.felix.framework.Felix.access$000(Felix.java:40)
        at org.apache.felix.framework.Felix$1.serviceChanged(Felix.java:625)
        at org.apache.felix.framework.ServiceRegistry.servicePropertiesModified(ServiceRegistry.java:505)
        at org.apache.felix.framework.ServiceRegistrationImpl.setProperties(ServiceRegistrationImpl.java:116)
        at service.impl.ServiceFactory.run(ServiceFactory.java:48)
        at java.lang.Thread.run(Thread.java:595)
",,,,,,,,,,,,,,,FELIX-1866,,,,,03/Nov/09 23:01;pderop;DependencyManager.java;https://issues.apache.org/jira/secure/attachment/12423965/DependencyManager.java,15/Nov/09 16:15;fmeschbe;FELIX-1841.patch;https://issues.apache.org/jira/secure/attachment/12425006/FELIX-1841.patch,15/Nov/09 21:54;pderop;FELIX-1841.patch.2;https://issues.apache.org/jira/secure/attachment/12425032/FELIX-1841.patch.2,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2009-11-04 01:36:31.099,,,no_permission,,,,,,,,,,,57200,,,Fri Jul 30 11:42:05 UTC 2010,,,,,,0|i1arvb:,270981,,,,,,,,"03/Nov/09 23:00;pderop;Felix,

I'm not sure, but it seems that the issue comes from the DependencyManager.ungetService(), which is wrongly invoked
from the DependencyManager.serviceRemoved() method:

Let me try to explain:

- The service ""Service"" is injected to ""Client"" service, which do have a (1..1) dependency over ""Service"".
- Then the ""Service"" service properties are updated.
- So, in DependencyManager.java, the serviceChanged is called with a MODIFIED event:

            case ServiceEvent.MODIFIED:
                m_componentManager.log( LogService.LOG_DEBUG, ""Dependency Manager: Updating {0}"", new Object[]
                    { serviceString }, null );

                // remove the service first
                // only continue with further event handling if the service
                // removal did not cause the component to be deactivated
                if ( serviceRemoved( ref ) )
                {
                    // recalculate the number of services matching the filter
                    // because we don't know whether this service previously matched
                    // or not
                    ServiceReference refs[] = getFrameworkServiceReferences();
                    m_size = ( refs == null ) ? 0 : refs.length;

                    // now try to bind the service - if it matches the target filter
                    // without recalculating the size (already done).
                    if ( targetFilterMatch( ref ) )
                    {
                        serviceAdded( ref );
                    }
                }

- Here, the serviceRemoved method is then invoked, which ends up in doing a bound service replacement (line 358):

            else
            {

                // try to bind a replacement service first if this is a unary
                // cardinality reference and a replacement is available.
                if ( !m_dependencyMetadata.isMultiple() )
                {
                    // if the dependency is mandatory and no replacement is
                    // available, bind returns false and we deactivate
                    if ( !bind() )
                    {
                        m_componentManager
                            .log(
                                LogService.LOG_DEBUG,
                                ""Dependency Manager: Deactivating component due to mandatory dependency on {0}/{1} not satisfied"",
                                new Object[]
                                    { m_dependencyMetadata.getName(), m_dependencyMetadata.getInterface() }, null );
                        m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE );

                        // required service could not be replaced, component
                        // is deactivated and we are done
                        return false;
                    }
                }

                // call the unbind method if one is defined
                if ( m_dependencyMetadata.getUnbind() != null )
                {
                    invokeUnbindMethod( reference );
                }

                // make sure the service is returned
                ungetService( reference );
            }

- the ""if (!bind())"" line will re-bind ""Client"" to the same ""Service"" service, as ""Service"" properties are just modified (and ""Service"" is still present)
- The invokeUnbindMethod will then unbind the same service
- And the ungetService method will remove the bound service from the m_bound map -> but I think that this is the issue, because the map should contain the same ""Service"" service, which has just been re-bound, in the bind() method.
- So, let's follow up with the issue: the ""serviceAdded"" method is then called from the serviceChanged() method.
- The serviceAdded method will then attempt to bind the same service, line 268 (but we already did it from the serviceRemoved method), and here, the isBound() returns false because the m_bound map has been wrongly emptied previously.

                // multiple bindings or not bound at all yet
                if ( m_dependencyMetadata.isMultiple() || !isBound() )
                {
                    // bind the service, getting it if required
                    invokeBindMethod( reference );
                }
            }


So, I replaced the else bloc (line 358) with the following patch (which is attached to this issue): and the problem seems to disappear:


            // dynamic dependency, multiple or single but this service is the bound one
            else
            {
                boolean doUnget = true;
                
                // try to bind a replacement service first if this is a unary
                // cardinality reference and a replacement is available.
                if ( !m_dependencyMetadata.isMultiple() )
                {
                    // if the dependency is mandatory and no replacement is
                    // available, bind returns false and we deactivate
                    if ( !bind() )
                    {
                        m_componentManager
                            .log(
                                LogService.LOG_DEBUG,
                                ""Dependency Manager: Deactivating component due to mandatory dependency on {0}/{1} not satisfied"",
                                new Object[]
                                    { m_dependencyMetadata.getName(), m_dependencyMetadata.getInterface() }, null );
                        m_componentManager.deactivateInternal( ComponentConstants.DEACTIVATION_REASON_REFERENCE );

                        // required service could not be replaced, component
                        // is deactivated and we are done
                        return false;
                    }
                    
                    // Check if we have been rebound to the same (modified) service.
                    if (m_bound.size() == 1 && getBoundService( reference ) != null)  {
                        // the same (modified) service has been re-bound: don't unget.
                        doUnget = false;
                    }
                }

                // call the unbind method if one is defined
                if ( m_dependencyMetadata.getUnbind() != null )
                {
                    invokeUnbindMethod( reference );
                }

                // make sure the service is returned.
                if (doUnget) {
                    ungetService( reference );
                }
            }


Does this make sense to you ? Am I correct or did I miss something else ?


Thanks;
/pierre
","04/Nov/09 01:36;fmeschbe;Your are correct: The problem is that the serviceRemoved method correctly tries to bind another service to the component for the service that was ""removed"". Now the problem is, that this is just the same service because it has not really been removed.

This can probably be solved with your patch (I just glanced over it) -- the point is that we should not try to bind to the same service, we intend to unbind.

The other problem in this concrete case is, that actually, we cannot unbind, check and rebind because the dependency is required and thus unbinding the service would actually (theoretically) require to take down the component  and reactivate component. And this is not what I would like to do in this case...

Maybe I should really be doing more in the serviceChanged method handling the MODIFIED event: Check whether the service in question is actually bind and only if it is bound check whether the target filter still matches and ensure the service is removed if not matching anymore and doing nothing if not.

But then: we would probably want to inform the client that the server has modified its properties, so rebinding is definitely the option to follow up on.

Not sure right now ....","04/Nov/09 07:41;pderop;Ok. I do agree;

Just calling back the ""Client"" in its bind method, when the ""Service"" properties are modified sounds like to be enough, and as you said, we don't really want to reactivate the ""Client ...

I checked in the specification, but I did not find anything regarding this issue. 
I think that this use case is a sub-set of the ""bound service replacement"" feature: the ""bind"" is called with the same service, but not the ""unbind"" ...

For now, we'll use my patch in our application server, because, well, we really need it.

thanks;
/pierre
",05/Nov/09 17:53;fmeschbe;Good. If this works out for you. In the meantime I try to find out how we could solve this problem...,"15/Nov/09 16:15;fmeschbe;Another proposed patch:

  * If the service is not currently bound, bind if the filter matches and binding makes sense
  * If the service is currently bound, check whether the filter matches and bind if it matches.","15/Nov/09 19:03;pderop;Felix,

I have tested the patch for this issue and for the other FELIX-1866 issue.
Indeed, when the service properties are changed, no re-bind is attempted at all.

But I am confused now and I realize that I did not initially state my problems clearly.
So, let me try to go to the right point and reformulate my problems:

I have two problems:

1) Using CM, When I update some public service properties (not starting with a "".""), I would like to re-bind
the modified service to the other components which depend on it (just once, not twice)

2) When I update (using CM) only some private service properties (prefixed with a "".""), then I would like to get my
component called in its ""modified"" callback but the component should not be re-bound to other 
components which depend on it, because the modified private properties are not supposed to be published 
(see 112.6.1, in spec, am I correct ?)

So, what do you think about the following strategy:

1) add a ""else"" in your patch in order to re-bind once:

                ...
                else if ( !targetFilterMatch( ref ) )
                {
                    m_size--;
                    serviceRemoved( ref );
                } else {
->                bind(); // -> re-bind once.
                }

2) in ImmediateComponentManager.java, around line 472 -> check if the properties modified from CM are private (start with a ""."") and don't invoke ""sr.setProperties( regProps )"" if modified properties are private.

Does this make sense ?
","15/Nov/09 21:54;pderop;Felix,
I tried to implement about what I was talking earlier.
Please review FELIX-1841.patch.2 (I probably missed something, but it seems to work).

/pierre ",24/Nov/09 11:21;fmeschbe;Applied the ImmediateComponentManager part of the Felix-1841.patch.2 supplied by Pierre de Rop (thanks alot) in Rev. 883652. This now prevents an update of the service registration  if the configuration update does not have an influence on the service registration (such as is the case if the configuration update only is for private properties),25/Nov/09 14:53;fmeschbe;Commited the DependencyManager part of the patch in Rev. 884122 along with a series of integration tests verifying that the bind methods are not called without need.,"26/Nov/09 07:27;fmeschbe;Applied a final patch to the DependencyManager in Rev. 884427. The component's bind method is now called from the DependencyManager.update(ServiceReference) method, which in turns diretcly uses the DependencyManager.invokeBindMethod(ServiceReference) method to call the corrent bind method with the correct service.

This shoould finally resolve this issue.

Yet, this starts another issue: Calling the bind method for an updated service reference is not technically completely correct. Rather a special method should be definable, which is called in case a service updates its service properties. This will be the goal of FELIX-1893",30/Jul/10 11:42;fmeschbe;Closing since version is released.,,,,,,,,,,,,,,,,
PackageAdmin.getExportedPackages() duplicates output for packages with different version,FELIX-1838,12439736,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,waltertreur,waltertreur,03/Nov/09 08:32,29/Jan/10 21:38,14/Mar/19 02:47,03/Nov/09 21:27,,,,,,,,,,,framework-2.0.3,,,,,,,,,,,0,,,,,,"I noticed that when you have a bundle that exports the same package twice, but with different versions, the PackageAdmin returns the package twice for each version.

Assume the following code in BundleActivator.start():

ServiceTracker tracker = new ServiceTracker(context, PackageAdmin.class.getName(), null);
tracker.open();
PackageAdmin admin = (PackageAdmin) tracker.waitForService(5000);
tracker.close();

ExportedPackage[] exportedPackages = admin.getExportedPackages(context.getBundle());
for (ExportedPackage exportedPackage : exportedPackages) {
    System.out.println(exportedPackage.getName()+"":""+exportedPackage.getVersion());
}

And the corresponding manifest file of the same bundle

Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: Packge Admin test
Bundle-Version: 1.0.0
Bundle-SymbolicName: package-admin-test
Bundle-Activator: pkg.admin.test.Activator
Import-Package: org.osgi.framework,org.osgi.util.tracker,org.osgi.serv
 ice.packageadmin
Export-Package: pkg.admin.test.foo;version=1.0.0,pkg.admin.test.foo;ve
 rsion=2.0.0



When I start the bundle in Felix 2.0.2 I get the following output:

Welcome to Felix
================

-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (2.0.2)
[   1] [Active     ] [    1] Apache Felix Bundle Repository (1.4.2)
[   2] [Active     ] [    1] Apache Felix Shell Service (1.4.1)
[   3] [Active     ] [    1] Apache Felix Shell TUI (1.4.1)
-> install file:/home/wtreur/Desktop/package-admin-test.jar
Bundle ID: 4
-> start 4
pkg.admin.test.foo:1.0.0
pkg.admin.test.foo:1.0.0
pkg.admin.test.foo:2.0.0
pkg.admin.test.foo:2.0.0


Note that this problem didn't exist in felix 2.0.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-03 21:27:19.626,,,no_permission,,,,,,,,,,,57203,,,Wed Nov 04 15:37:11 UTC 2009,,,,,,0|i0vxv3:,184459,,,,,,,,03/Nov/09 21:27;rickhall;Missed this fix when refactoring ICapability. Should be working now. Please close this issue if you are satisfied. Thanks.,"04/Nov/09 15:37;waltertreur;I ran the test in in the latest build. It seems to work fine now.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,
Stopping the Felix SCR bundle may leave traces behind thus preventing the class loader from being GC-ed,FELIX-1833,12439555,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,30/Oct/09 17:22,08/Dec/09 15:49,14/Mar/19 02:47,30/Oct/09 17:26,scr-1.2.0,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Apart from the ServiceReference issue with Garbage Collection (and clean system state) described by FELIX-1832, some other cases may happen preventing proper garbage collection and ultimately classloader removal.

One such case is the ComponentActorThread class which extends Thread. There are some libraries wich keep references to threads and thus also to the ComponentActorThread (one such class is the Lucene ClosableThreadLocal class). This prevents the object from being collected and consequently the class loader from being collected.

Also there are some fields in the BundleComponentActivator which must be cleared and -- most notably -- the LogService tracker should be closed and dropped.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57207,,,Tue Dec 08 15:49:29 UTC 2009,,,,,,0|i0w167:,184995,,,,,,,,30/Oct/09 17:26;fmeschbe;Fixed in Rev. 831396 as described,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceFactory must not be deactivated if the instances fails to be created,FELIX-1832,12439552,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,30/Oct/09 17:06,08/Dec/09 15:49,14/Mar/19 02:47,30/Oct/09 17:08,scr-1.2.0,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The AbstractComponentManager.Registered state (Satisfied state for delayed and service factory components) class tries to deactivate the component if the component instance cannot be created and setup. Part of this deactivation is actually unregistration of the service factory service.

This may fail if the getService method is called as part of a chain of service activations, one of which is actually trying to get the service instance from the factory. It is not allowed to unregister this exact service in this situation.

So, instead of deactivating the component, the component instance is just deleted and the component remains in the registered state.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57208,,,Tue Dec 08 15:49:29 UTC 2009,,,,,,0|i0vxuv:,184458,,,,,,,,30/Oct/09 17:08;fmeschbe;Fixed as described in the summary in Rev. 831390.,"30/Oct/09 17:22;fmeschbe;Some more flesh to the bone: The issue is that the framework calls the ServiceFactory.getService(Bundle, ServiceReference) method, which then tries to create the component, bind services and call the activate method. If this fails, the getService method will return null.

Before, the component was also deactivated in this case. Part of the deactivation is unregistration of the ServiceFactory. This is not allowed while the framework is calling the getService method. As a consequence the Felix framework throws an IllegalStateException leaving the service reference in an unclear state: In fact the service reference is not registered any more but the service registry still keeps some references to the ServiceFactory instance for some bundles.

This prevents the ServiceReference object from being GC-ed and thus also prevents the class loader from being collected. See also FELIX-1833",08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,
Support for DS 1.1 character property type name,FELIX-1830,12439489,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,30/Oct/09 06:46,08/Dec/09 15:49,14/Mar/19 02:47,30/Oct/09 06:49,scr-1.2.0,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"DS 1.1 modified the property type name for characters from ""Char"" to ""Character"" to align with the Java class name:

     The Char type for the property element has been renamed
     Character to match the Java type name (Section 112.11, Changes)

Currently the old type name is still only supported.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57209,,,Tue Dec 08 15:49:29 UTC 2009,,,,,,0|i0vz5b:,184667,,,,,,,,"30/Oct/09 06:49;fmeschbe;Fixed in Rev. 831214.

Now, DS 1.1 descriptors are required to use ""Character"" for character properties while DS 1.0 descriptors have to use ""Char"" otherwise property validation fails.",08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Method AbstractDeploymentPackage.getBundle(...) throws NullPointerException,FELIX-1829,12439453,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,,kodlpav,kodlpav,29/Oct/09 20:32,01/Apr/14 12:46,14/Mar/19 02:47,28/May/13 10:12,,,,,,,,,,,deploymentadmin-0.9.4,,,,Deployment Admin,,,,,,,0,,,,,,"Because in this method on row 115 is:
  if (bundles[i].getSymbolicName().equals(symbolicName)) {

but should be something like:
  String sn = bundles[i].getSymbolicName();
  if (sn != null && sn.equals(symbolicName)) {

It happends by installing a deployment package, stack trace is:
java.lang.NullPointerException
	at org.apache.felix.deploymentadmin.AbstractDeploymentPackage.getBundle(AbstractDeploymentPackage.java:115)
	at org.apache.felix.deploymentadmin.spi.UpdateCommand.execute(UpdateCommand.java:70)
	at org.apache.felix.deploymentadmin.spi.DeploymentSessionImpl.call(DeploymentSessionImpl.java:74)
	at org.apache.felix.deploymentadmin.DeploymentAdminImpl.installDeploymentPackage(DeploymentAdminImpl.java:215)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-12 04:35:28.027,,,no_permission,,,,,,,,,,,3924,,,Tue May 28 10:12:55 UTC 2013,,,,,,0|i00ydz:,3503,,,,,,,,"12/Jul/12 04:35;christian.vogel;In OSGi each bundle MUST have a symbolic name, because its the unique identifier. So maybe it would be better to throw a `NoSymbolicNameProvidedException` or something else to prevent having bundles without the identifier.",24/Apr/13 14:43;marrs;Need to review if this has been fixed for the next release.,28/May/13 10:12;marrs;Has been fixed.,,,,,,,,,,,,,,,,,,,,,,,,
Mistake in code of the class UpdateCommand,FELIX-1828,12439449,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,,kodlpav,kodlpav,29/Oct/09 20:07,01/Apr/14 12:48,14/Mar/19 02:47,29/Sep/11 13:24,,,,,,,,,,,,,,,Deployment Admin,,,,,,,0,,,,,,"On row 70 should be :
  Bundle bundle = targetPackage.getBundle(bundleInfo.getSymbolicName());

instead of:
  Bundle bundle = source.getBundle(bundleInfo.getSymbolicName());",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,3923,,,2009-10-29 20:07:14.0,,,,,,0|i0vqz3:,183343,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check permission before getting or registering services,FELIX-1827,12439415,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,fmeschbe,fmeschbe,29/Oct/09 15:15,08/Dec/09 15:49,14/Mar/19 02:47,29/Oct/09 15:58,scr-1.2.0,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"The DS specification states in 112.9.3 that SCR has to call Bundle.hasPermission for the providing bundle when registering or getting services on behalf of the providing bundle:

           SCR does all publishing, finding and binding of services on behalf of the
           component using the Bundle Context of the component's bundle. This
           means that normal stack-based permission checks will check SCR and not
           the component's bundle. Since SCR is registering and getting services on
           behalf of a component's bundle, SCR must call the Bundle.hasPermission
           method to validate that a component's bundle has the necessary permission
           to register or get a service.

This is not currently implemented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57210,,,Tue Dec 08 15:49:28 UTC 2009,,,,,,0|i0vwkf:,184249,,,,,,,,29/Oct/09 15:58;fmeschbe;Implemented the permission checks in Rev. 831005.,"08/Dec/09 15:46;fmeschbe;Thanks for your report and proposed pacth.

Since this issue is related to an already released bundle, I have created FELIX-1927 to track this.",08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,
ComponentException must be thrown if ComponentFactory.newInstance cannot create a component instance,FELIX-1826,12439411,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,29/Oct/09 14:41,08/Dec/09 15:49,14/Mar/19 02:47,29/Oct/09 15:12,scr-1.2.0,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"If the ComponentFactory.newInstance method cannot create a component instance, null must not be returned but a ComponentException must be thrown as described in Section 112.5.5, Factory Component, of the DS Specification:

     If SCR is unable to satisfy the component
     configuration given the component properties and the Dictionary argument
     to newInstance, the newInstance method must throw a
     ComponentException.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57211,,,Tue Dec 08 15:49:28 UTC 2009,,,,,,0|i0vz53:,184666,,,,,,,,"29/Oct/09 15:12;fmeschbe;Fixed in Rev. 830994: The newInstance method now never returns null but instead throws a ComponentException if the instance fails to be created and activated.

(also added a test to verify instances created with newInstance are not deactivated and disposed off when the component factory is deactivated)",08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Configurations of delayed components are not deactivated if not used any more,FELIX-1825,12439407,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,fmeschbe,fmeschbe,29/Oct/09 14:03,08/Dec/09 15:49,14/Mar/19 02:47,29/Oct/09 14:45,scr-1.0.8,scr-1.2.0,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The Declarative Service specification Section 112.5.4, Delayed Component, demands that component configurations of delayed which are not used anymore have to be deactivated:

     If the service registered by a component configuration becomes unused
     because there are no more bundles using it, then SCR should deactivate that
     component configuration. This allows SCR implementations to eagerly
     reclaim activated component configurations.

Currently only component instances created for service factory components are reclaimed when they are not used anymore. Instances of delayed components are not reclaimed at the moment.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57212,,,Tue Dec 08 15:49:28 UTC 2009,,,,,,0|i0vz4v:,184665,,,,,,,,29/Oct/09 14:45;fmeschbe;Implemented component deactivation of delayed components not used any longer in Rev. 830970.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Cirular References are not currently explicitly checked and detected,FELIX-1824,12439404,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,djencks,fmeschbe,fmeschbe,29/Oct/09 13:41,08/Jul/16 08:05,14/Mar/19 02:47,21/May/16 04:59,scr-1.0.8,scr-1.2.0,,,,,,,,,scr-2.0.4,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"According to the Declarative Services Specification Section 112.3.5, Circular References, circular service references must be detected and logged:

     Circular references must be detected by SCR when it attempts to satisfy
     component configurations and SCR must fail to satisfy the references
     involved in the cycle and log an error message with the Log Service, if
     present.

This is not currently implemented like this, particularly there is not logging of such situations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-16 14:32:09.913,,,no_permission,,,,,,,,,,,57213,,,Sat May 21 04:59:59 UTC 2016,,,,,,0|i1arvz:,270984,,,,,,,,16/Jun/12 14:32;djencks;linked issue provides tests for circular reference behavior.  The spec paragraph quoted refers circles of references all of which are mandatory.  I don't think a log message is appropriate because the intent could be to deploy additional services later that satisfy the reference conditions and do not form a cycle.,21/May/16 04:59;djencks;I'm not quite sure why I thought the previous fix didn't log appropriately.  I think the improved logging I committed for FELIX-4417 definitely satisfies the spec.,,,,,,,,,,,,,,,,,,,,,,,,,
Unstable logging when restarting bundle,FELIX-1821,12439335,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,srs,srs,srs,28/Oct/09 21:45,01/Aug/15 09:23,14/Mar/19 02:47,28/Oct/09 22:10,http-2.0.2,,,,,,,,,,http-2.0.4,,,,HTTP Service,,,,,,,0,,,,,,Seems that when restarting the bundle (tested with org.apache.felix.http.bundle) the logging (if you have a LogService available) is going into stdout instead of the LogService.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57216,,,2009-10-28 21:45:45.0,,,,,,0|i0vu0f:,183835,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fragment-Host version not converted,FELIX-1820,12439331,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,lu4242,lu4242,28/Oct/09 20:44,11/Oct/11 17:09,14/Mar/19 02:47,27/Jun/11 23:31,maven-bundle-plugin-2.0.1,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Hi

In few words, I need to include something like this:

                <Fragment-Host>org.apache.myfaces.core.api;bundle-version=""[${project.version}, 1.3.0)""</Fragment-Host>

if the value ${project.version} return 1.2.8-SNAPSHOT, the expression is resolved as 1.2.8-SNAPSHOT, and it should be 1.2.8.SNAPSHOT

See MYFACES-2290 for details (the file MYFACES-2290-no-activator.patch shows the context.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-27 23:31:24.722,,,no_permission,,,,,,,,,,,57217,,,Mon Jun 27 23:31:24 UTC 2011,,,,,,0|i1419z:,231669,,,,,,,,"27/Jun/11 23:31;mcculls;In the 2.3.4 bundleplugin there's a goal called ""cleanVersions"" that lets you convert versions to the OSGi format before they're used in filters, etc. This can be useful in situations where bnd may not automatically correct versions, such as in fragment ranges:

   <plugin> 
     <groupId>org.apache.felix</groupId> 
     <artifactId>maven-bundle-plugin</artifactId> 
     <extensions>true</extensions> 
     <version>2.3.4</version> 
     <executions>
       <execution>
         <phase>validate</phase>
         <goals>
           <goal>cleanVersions</goal>
         </goals>
         <configuration>
           <versions>
             <osgiProjectVersion>${project.version}</osgiProjectVersion>
           </versions>
         </configuration>
       </execution>
     </executions>
   </plugin> 

But there's also a much simpler solution, which is to use ${Bundle-Version} - the bundleplugin sets this by default to ${project.version} (converted to OSGi format).",,,,,,,,,,,,,,,,,,,,,,,,,,
OBR issue when using parameters with exported packages,FELIX-1809,12439086,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,apanday,apanday,26/Oct/09 16:52,19/Feb/10 15:27,14/Mar/19 02:47,16/Feb/10 09:10,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Please consider the attached test case along with the proposed patch.

- I have single bundle (A.jar) containing com.a.class and exporting the package com.a with a version and a ""tag""
ie: Export-Package: com.a; version=""1.2.3"";tag=""mytag""

- I use bnd to build the bundle and it generates a similar import (which is good)
ie: Import-Package: com.a; version=""1.2.3"";tag=""mytag""

- I use bindex to generate the repository (containing only this bundle) which, in turn, generates the following requirement:
<require extend='false' filter='(&amp;(package=com.a)(version&gt;=1.2.3)(tag=mytag)(mandatory:&lt;*tag))' multiple='false' name='package' optional='false'>
      Import package com.a ;version=1.2.3
</require>

As such when I try to resolve bundle A from the OBR, it fails. 
Bundle A does not have a ""mandatory"" attribute in its capabilities, but as the spec suggests (p18 of RFC-0112):

""If the value does not exist, then it is still possible to match a subset. A non-existent property is a proper subset of
any set. A non-existent property is a superset if the list is empty.
    (mandatory:<*vendor,var)                                         Mandatory must contain vendor, var, both or be empty.""

While investigating this issue, i found 2 NullPointerExceptions, in the code of bundlerepository (the first one being hidden behind an empty try/catch)

When I fix these NullPointerExceptions, the OBR successfully resolves bundle A and my test passes. 
BUT.. FilterImplTest now fails!

IF my understanding is right, i think line 73 of FilterImplTest should read assertTrue instead of assertFalse.. (but I must admit that i find the meaning of this ""mandatory"" part quite confusing!)

I'm attaching the test and the proposed patch in 2 separate tar files (to be extracted under felix-trunk/bundlerepository).

Regards,
Arjun


",,,,,,,,,,,,,,,,,,,,26/Oct/09 16:53;apanday;patchfilter.tgz;https://issues.apache.org/jira/secure/attachment/12423221/patchfilter.tgz,26/Oct/09 16:53;apanday;testobr.tar;https://issues.apache.org/jira/secure/attachment/12423220/testobr.tar,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-02-16 09:10:35.888,,,no_permission,,,,,,,,,,,57228,,,Fri Feb 19 15:27:17 UTC 2010,,,,,,0|i0vzkv:,184737,,,,,,,,"26/Oct/09 16:53;apanday;testobr.tar : a simple test case to demonstrate the problem

patchfilter.tgz : the proposed fix",16/Feb/10 09:10;rickhall;I think you are correct. I applied your patch. Please close this issue if you are satisfied. Thanks!,"19/Feb/10 15:27;apanday;The test case works; i think it's fine. 
Thanks  a lot,
Arjun",,,,,,,,,,,,,,,,,,,,,,,,
Bound configurations for which there exists no bundle cannot be edited,FELIX-1800,12438961,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,23/Oct/09 22:13,21/Dec/09 17:13,14/Mar/19 02:47,23/Oct/09 22:17,webconsole-2.0.2,,,,,,,,,,webconsole-2.0.4,,,,Web Console,,,,,,,0,,,,,,"Consider a configuration bound to a certain bundle [location]. If there is no bundle installed with that bundle location, the configuration cannot be edited event though there might be metatype information.

The problem is that (1) metatype information is only retrieved for the bundle named by the bundle location. It should probably be searched globally. (2) the configuration detail information fails with a NullPointerException if there is no bundle with the bound location installed.

Another issue is, that existing configuration for which no metatype exists is not listed in the drop-down, even though it can be rendered. The problem is an erratic (probably historic) check for metatype information, which is not really required.

Finally, the configuration properties are not displayed if there is no metatype information because the client side rendering script does not attach the respect HTML elements to the parent element.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57237,,,Fri Oct 23 22:17:14 UTC 2009,,,,,,0|i1410v:,231628,,,,,,,,23/Oct/09 22:17;fmeschbe;Fixed in Rev. 829261,,,,,,,,,,,,,,,,,,,,,,,,,,
Hot-deployment does not work on admin:create'd instances,FELIX-1799,12438955,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gertvanthienen,gertvanthienen,gertvanthienen,23/Oct/09 19:40,23/Oct/09 19:48,14/Mar/19 02:47,23/Oct/09 19:48,karaf-1.2.0,,,,,,,,,,karaf-1.2.0,,,,Karaf,,,,,,,0,,,,,,"When using admin:create to create a new container instance, bundles copied to the hot-deployment folder for that instance are being deployed.
The reason is that the etc/org.apache.felix.fileinstall-deploy.cfg file is missing from the instance which is required to configure Felix FileInstall",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57238,,,Fri Oct 23 19:48:50 UTC 2009,,,,,,0|i0w0cv:,184863,,,,,,,,23/Oct/09 19:48;gertvanthienen;Fixed in http://svn.apache.org/viewvc?view=revision&revision=829191,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle version ignored in Fragment-Host header,FELIX-1795,12438806,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,22/Oct/09 13:35,01/Nov/09 16:14,14/Mar/19 02:47,22/Oct/09 16:48,framework-2.0.1,,,,,,,,,,framework-2.0.2,,,,Framework,Specification compliance,,,,,,0,,,,,,"Currently, the resolver ignores the bundle version range on the Fragment-Host header.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57242,,,Thu Oct 22 16:48:06 UTC 2009,,,,,,0|i0w187:,185004,,,,,,,,"22/Oct/09 16:48;rickhall;This was just not finished when the original fragment support was implemented. Added a method to properly parse Fragment-Host header, which causes it to obey bundle version ranges.",,,,,,,,,,,,,,,,,,,,,,,,,,
Failure to resolve sigil.properties file if sigil-repo.properties is in flat hierarchy,FELIX-1794,12438787,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,davemssavage,davemssavage,22/Oct/09 08:55,26/Oct/09 10:39,14/Mar/19 02:47,26/Oct/09 10:39,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"% cd /somewhere
% ls -1
build
build.properties
build.xml
ivy.xml
ivysettings.xml
sigil-repos.properties
sigil.properties
src
% more sigil-repos.properties 
# repository config

-repositories:  system, project

system;provider:        system
system;level:           -1

project;provider:       project
project;level:  0
project;pattern:        **[sigilproject]
% ant
...

BUILD FAILED
/some-where/build.xml:13: impossible to resolve dependencies:
        java.lang.IllegalArgumentException: ProjectRepository: no projects found using pattern: **sigil.properties pwd=/some-where",ivy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57243,,,Mon Oct 26 10:39:46 UTC 2009,,,,,,0|i0w0av:,184854,,,,,,,,26/Oct/09 10:39;davemssavage;patch supplied to org.apache.felix.sigil.ivy.FindUtil,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall starts already installed bundles twice,FELIX-1776,12438531,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,pderop,pderop,20/Oct/09 06:46,17/Mar/15 07:04,14/Mar/19 02:47,26/Apr/10 16:31,,,,,,,,,,,fileinstall-3.0.0,,,,File Install,,,,,,,0,,,,,,"This issue is described here: http://www.mail-archive.com/dev@felix.apache.org/msg13194.html

When the fwk is started without cleaning the cache, and when some bundles are already installed,
then fileinstall starts them twice.

Here is what I did in order to reproduce the problem

- I first did a simple ""Test"" bundle with the following activator:

public class Activator implements BundleActivator {
  public void start(BundleContext ctx) throws Exception {
    System.out.printlnp(""start/version 1.0"");
  }

  public void stop(BundleContext ctx) throws Exception {
    System.out.printlnp(""stop/version 1.0"");
  }

- in my ""bundle"" directory, I have:

org.apache.felix.shell.tui-1.5.0-SNAPSHOT.jar
org.apache.felix.shell-1.5.0-SNAPSHOT.jar
org.apache.felix.bundlerepository-1.5.0-SNAPSHOT.jar
org.apache.felix.fileinstall-2.0.3-SNAPSHOT.jar
org.apache.felix.configadmin-1.2.7-SNAPSHOT.jar

- in the directory which fileinstall polls for updated bundles, I only have my simple test.jar bundle:

ls ./deploy
test.jar

- Now, I start the fwk (from the trunk) with a cleaned cache:

rm -rf felix-cache
java -jar bin/felix.jar

{felix.fileinstall.poll (ms) = 2000, felix.fileinstall.dir = /home/nxuser/work/osgi/felix-trunk/main/deploy, felix.fileinstall.debug = -1, felix.fileinstall.bundles.new.start = true, felix.fileinstall.tmpdir = ./tmp, felix.fileinstall.filter = null}
->
-> Installed deploy/test.jar
start/version 1.0
Started bundle: file:/home/nxuser/work/osgi/felix-trunk/main/deploy/test.jar

- I stop the fwk, and recompile my test bundle

- I restart the fwk, without cleaning the cache, and I have this

java -jar bin/felix.jar

Welcome to Felix
================

{felix.fileinstall.poll (ms) = 2000, felix.fileinstall.dir = /home/nxuser/work/osgi/felix-trunk/main/deploy, felix.fileinstall.debug = -1, felix.fileinstall.bundles.new.start = true, felix.fileinstall.tmpdir = ./tmp, felix.fileinstall.filter = null}
Updated /home/nxuser/work/osgi/felix-trunk/main/deploy/test.jar
start/version 1.1
Started bundle: file:/home/nxuser/work/osgi/felix-trunk/main/deploy/test.jar
-> A bundle with the same symbolic name (test.dm) and version (1.0) is already installed.  Updating this bundle instead.
stop/1.1
start/1.1
Installed deploy/test.jar
Started bundle: file:/home/nxuser/work/osgi/felix-trunk/main/deploy/test.jar


I have attached a proposed patch to this issue, but please read it carefully because I am not sure about it.
Indeed, I suspect that the problem comes from the Scanner.run method, where the ""storedChecksums"" is removed from the map:


        for (Iterator it = removed.iterator(); it.hasNext();)
        {
            File file = (File) it.next();
            // Make sure we'll handle a file that has been deleted
            files.addAll(removed);
            // Remove no longer used checksums
            lastChecksums.remove(file);
            storedChecksums.remove(file); -> why doing so ? The getChecksum methods will returns 0
        }

Because of the ""storedChecksums.remove(file)"" call, the scanner.getChecksum(File f) method always returns 0.
However, I'm not sure if this is really the bug, but because of this checksum removal, DIrectoryWatcher is no longer able to retrieve the correct checksum for tracked bundles.

So, I did the following safe patches in DirectoryWatcher.java and everything sounds to work fine now:
(in fact, I always call scanner.checksum(File) instead of scanner.getChecksum(File) ...)

svn diff src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
@@ -297,7 +297,11 @@                                                                             
                 // File has been modified                                                       
                 if (exists && artifact != null)                                                 
                 {                                                                               
-                    artifact.setChecksum(scanner.getChecksum(file));                            
+                    if (artifact.getChecksum() == scanner.checksum(file)) {                     
+                        continue;                                                               
+                    }                                                                           
+                                                                                                
+                    artifact.setChecksum(scanner.checksum(file));                               
                     // If there's no listener, this is because this artifact has been installed before
                     // fileinstall has been restarted.  In this case, try to find a listener.         
                     if (artifact.getListener() == null)                                               
@@ -355,7 +359,7 @@
                     artifact.setJaredDirectory(jar);
                     artifact.setJaredUrl(jaredUrl);
                     artifact.setListener(listener);
-                    artifact.setChecksum(scanner.getChecksum(file));
+                    artifact.setChecksum(scanner.checksum(file));
                     if (transformArtifact(artifact))
                     {
                         created.add(artifact);







Now, there is another issue I noticed.
It's not related to the current issue, and it's another one:
in the Utils.java, the getBundleKey(Bundle b) returns a string which is supposed to uniquely identify the bundle 
(that is: Bundle-SymbolicName/Bundle Version).

However, it may happen that a bundle is updated with a new bundle version ... that's why I reworked this method,
in order to just simply return the path name of the bundle:

svn diff src/main/java/org/apache/felix/fileinstall/internal/Util.java 
     private static String getBundleKey(Bundle b)
     {
-        StringBuffer sb = new StringBuffer();
-        sb.append(b.getSymbolicName()).append(""_"");
-        String version = (String) b.getHeaders().get(Constants.BUNDLE_VERSION);
-        sb.append(version != null ? version : Version.emptyVersion.toString());
-        return sb.toString();
+        return getFile(b).getPath().replace(File.separator, ""_"");
     }

+    private static File getFile(Bundle b)
+    {
+        try
+        {
+            String location = b.getLocation();
+            if (location.startsWith(""file:""))
+            {
+                return new File(location.substring(""file:"".length()));
+            }
+            return new File(new URL(location).getFile());
+        }
+        catch (MalformedURLException e)
+        {
+            throw new RuntimeException(""Could not get location from bundle ""
+                + b.getLocation(), e);
+        }
+    }


Hope this helps;
/pierre
",,,,,,,,,,,,,,,,,,,,20/Oct/09 06:48;pderop;fileinstall-patch.tgz;https://issues.apache.org/jira/secure/attachment/12422655/fileinstall-patch.tgz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-20 07:52:07.852,,,no_permission,,,,,,,,,,,57259,,,Mon Apr 26 16:31:39 UTC 2010,,,,,,0|i0vuxj:,183984,,,,,,,,20/Oct/09 06:48;pderop;attached the proposed patch,"20/Oct/09 07:52;gnt;I think the real problem is not in the call to Scanner.getChecksum().
The scanner forgets about checksums only for files that have been deleted from the file system, in which case the only thing to do is to uninstall the bundle (and we don't need the checksum anymore).

I'm not sure that your proposed patch for the getBundleKey is a good idea.   The reason is that fileinstall is  able to override already installed bundles with updated version copied to the watched folder, so we could end up with urls in very different formats (maven, war, etc...).  I think using the bundle id should actually be sufficient.

I've just committed a fix for that.  Could you please have a look and see if it works for you ?

Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Util.java
Committed r826986
","21/Oct/09 21:19;pderop;Hello Guillaume;

You are right, there's no problem with the Scanner.getChecksum() method.
Now, I did some further testing with your commit r826986 and I noticed the following:
The issue sounds to be resolved ... but only if I configure fileinstall like this:

- set the ""felix.fileinstall.dir"" option to an ABSOLUTE path (not a RELATIVE path)
- set the ""felix.fileinstall.noInitialDelay=true""

1) working scenario:
everything works fine with the following scenario:

- ""felix.fileinstall.dir=/home/pierre/felix-trunk/main/deploy""
- ""felix.fileinstall.noInitialDelay=true""
- I have a test bundle inside my deploy dir
- I start the fwk -> the bundle is INSTALLED
- I stop the fwk and recompile my test bundle
- I restart the fwk -> the test bundle is UPDATED/STARTED

1) problematic scenario:

- ""felix.fileinstall.dir=./deploy"" (this is a relative path)
- I don't set the ""felix.fileinstall.noInitialDelay"" option, so the default value is ""false""
- I have a test bundle inside my deploy dir
- I start the fwk -> the bundle is INSTALLED
- I stop the fwk and recompile my test bundle
- I restart the fwk -> the test bundle is UPDATED/STARTED/UPDATED/STARTED (but the test bundle should only be UPDATED/STARTED)


Now I think that, in the Scanner.scan() method, normalizing the scanned files seems to resolve the problem when the deploy dir
is configured to a RELATIVE path:

svn diff src/main/java/org/apache/felix/fileinstall/internal/Scanner.java 
@@ -106,6 +106,7 @@
         for (int i = 0; i < list.length; i++)
         {
             File file  = list[i];
+            file = new File(file.toURI().normalize());
             long lastChecksum = lastChecksums.get(file) != null ? ((Long) lastChecksums.get(file)).longValue() : 0;


... But:, when the  ""fileinstall.noInitialDelay"" option is not set, and when I restart the fwk with a modified test bundle, the bundle is still started/updated/started.

In any case, now, I know that using an absolute path and noInitialDelay=true, then the issue does not arise anymore, so may be you could close this issue ?

What do you think ?","26/Apr/10 16:31;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Scanner.java
Committed r938115

I've fixed the relative directory issue, so i'm closing this one.  Please reopen if needed.
",,,,,,,,,,,,,,,,,,,,,,,
Usage of BundleContext.getServiceReferences results in failure to activate components,FELIX-1754,12438014,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,sykesm,sykesm,13/Oct/09 21:35,01/Nov/09 16:14,14/Mar/19 02:47,30/Oct/09 19:44,framework-2.0.1,,,,,,,,,,framework-2.0.2,,,,Framework,,,,,,,0,,,,,,"I'm attempting to move some code from Equinox to Felix that makes use of the declarative services 1.1 runtime.  Many of the components in our bundles declare multiple 'provide' elements in the service declaration .  In general these services consist of a standardized interface in one package and extensions to that interface in another.  Depending on the requirements of the code using the component, other bundles will declare their components with references to either the standardized interface or the extended interface.

The issue I'm seeing is that the Felix SCR fails to activate some components because it's failing to resolve references to the service provided by another component.  It turns out that the SCR is using BundleContext.getServiceReferences instead of BundleContext.getAllServiceReferences to locate candidate services when resolving references.  Unfortunately, the getServiceReference flavor requires that the using bundle have access to all class names under which the target service was registered - not just the interface associated with the reference.

Given the use-case I've described and the behavior of Equinox, I believe the Felix SCR should be using BundleContext.getAllServiceReferences(..) to resolve references and rely on the bundle creator to define the correct imports.
",,,,,,,,,,,,,,,FELIX-1798,,,,,26/Oct/09 22:10;rickhall;FELIX-1754.txt;https://issues.apache.org/jira/secure/attachment/12423257/FELIX-1754.txt,14/Oct/09 13:11;sykesm;assignable.diff;https://issues.apache.org/jira/secure/attachment/12422100/assignable.diff,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-10-13 22:04:18.994,,,no_permission,,,,,,,,,,,57277,,,Fri Oct 30 19:44:01 UTC 2009,,,,,,0|i1aryf:,270995,,,,,,,,"13/Oct/09 21:37;sykesm;Simple patch to have the DependencyManager use getAllServiceReferences instead of getServiceReferences.  This addressed the component activation problem.
","13/Oct/09 22:04;rickhall;I am not so sure if that is accurate, since it depends on how SCR is implemented. If SCR uses the bundle context of the component bundles to register services and service listeners, then it should work fine using a normal service listener.

If SCR uses a single service listener for all components and registers it on its own context, then it would need to use an AllServiceListener as you suggest. However, it would also need to use ServiceReference.isAssignableTo() to filter them before injecting them into components to make sure they are actually compatible with the component being injected. Since your patch doesn't do this, I am a little suspicious that it is completely correct.

FYI, there was a bug in service filtering that was fixed in the new Felix framework 2.0.1 and that could be related, so you should test with 2.0.1 to see how that impacts your scenario. Thanks!","14/Oct/09 00:16;sykesm;Thank your for your comments.  The behavior I'm reporting was observed when using the current (as of mid-afternoon today) Felix SCR and Framework.  The same behavior was also observed when using the Felix SCR with Equinox 3.5.

I'm not trying to suggest that the patch I sent was complete, only that the current behavior doesn't seem appropriate.  Making the minor change from getServiceReferences to getAllServiceReferences resolved my issue by removing the arbitrary filtering done by the framework to ensure that the using bundle has access to *all* classes that the target service was registered with.

If you feel that adding a check to verify assignability is appropriate during reference resolution, that seems reasonable and correct - provided the check is made using the interface declared on the reference and not for *all* class names that the target service was registered with.  This behavior is particularly important when using graphs of DS components as a component can only offer a single service declared with multiple object names.
","14/Oct/09 01:02;rickhall;To be clear, the framework doesn't require the requester have access to *all* class names with which the target service was registered, it requires that the ones to which it does have access are the same as the provider.

If no check for assignability is being done by SCR currently, then it would *have* to be done if introducing your patch. Perhaps you are not seeing an issue because you do not have incompatible service versions registered.

At any rate, if you are running from trunk and it is still exhibiting the issue, then I agree it needs to be looked into. I will wait for Felix to comment, since he is the expert here.","14/Oct/09 03:44;sykesm;Based on your updates I added the isAssignableTo checks and the issue came back.  As usual, things aren't as simple as I'd hoped.

I threw a couple of debug statements into ServiceRegistrationImpl.isAssignableTo and isClassAccessible.  When the isAssignableTo check is run against the ServiceReference for the interface associated with the reference, the requester and provider references are null so the code falls into case 1.

RequesterWire = null
ProviderWire  = null
Case 1

The interface class gets loaded successfully and then ServiceRegistrationImpl.isClassAccessible is driven:

requestClass from requesterModule.getClassByDelegation = interface foo.bar.event.EventEngine
isClassAccessible: m_factory = Component: foo.bar.event.internal.EventEngineImpl (11)
isClassAccessible: m_svcObj = Component: foo.bar.event.internal.EventEngineImpl (11)
isClassAccessible: sourceClass= class org.apache.felix.scr.impl.manager.DelayedComponentManager
isClassAccessible: targetClass= null
isClassAccessible: sourceClass == targetClass = false
serviceRef [foo.bar.event.EventEngine, org.osgi.service.event.EventAdmin] was not assignable to foo.bar.event.EventEngine

If I'm reading the code correctly, it looks like the SCR bundle's class loader is being used to resolve the the service interface.  This only seems to happen in ""case 1"" where no wire was found.  Well, go figure, the manifest for the bundle that's declared the reference is poorly constructed and relies on a DynamicImport-Package: *.

So, it looks like a combination of dynamic import, the implementation of isAssignableTo, and the use of a ""smart"" service factory is causing the reference to remain unsatisfied.  I don't know if this is just how things are or if the framework should attempt to wire the package (because of the dynamic import) or what...

At this point I'm not sure what's going on in Equinox as the external symptom was the same; I'll have to look more closely tomorrow.  Whatever that issue is, it's most likely unrelated.","14/Oct/09 05:26;fmeschbe;Well, actually, the resolution is -- unfortunately for you -- quite easy and clearly described in the spec (Section 112.3 References to Services in the R4.2 Compendium Manual, DS 1.1): 

          The services that are selected by a reference are called the target services.
          These are the services selected by the BundleContext.getServiceReferences
          method where the first argument is the reference's interface and the second
          argument is the reference's target property, which must be a valid filter.

So, the spec refers to the getServiceReferences method and using the getAllServiceReferences method is therefore in my understanding violating the spec.

From the POV of the Felix DS implementation, I fear there is nothing to be done.


But... what worries me is your output:

   > isClassAccessible: m_factory = Component: foo.bar.event.internal.EventEngineImpl (11)
   > isClassAccessible: m_svcObj = Component: foo.bar.event.internal.EventEngineImpl (11)
   > isClassAccessible: sourceClass= class org.apache.felix.scr.impl.manager.DelayedComponentManager 

If you are using SCR to register the service, then m_factory is probably the DelayedComponentManager instance and not the EventEngineImpl instance ! I think your log output is incorrect.

Anyway, the problem is that an SCR class -- the DelayedComponentManager acting as the ServiceFactory -- is used to load the interface class, a situation which is definitely wrong. And a situation, which I assumed Karl has fixed for 2.0.1....

The problem here is, that the m_factory may not be used to verify accessibility since the service may be registered as a ServiceFactory on behalf of the real bundle. So the actual provider bundle must probably be used to verify accessibility and not the ServiceFactory object's class loader.","14/Oct/09 08:07;karlpauls;It should be fixed in 2.0.1 for some cases. Unfortunately, we will not be able to avoid asking the factory in all cases. Did you try with felix 2.0.1/trunk?","14/Oct/09 11:32;sykesm;Felix,

> If you are using SCR to register the service, then m_factory is probably the DelayedComponentManager instance and not the EventEngineImpl instance ! I think your log output is incorrect. 

The values associated with m_factory and m_svcObj are, in fact, instances of DelayedComponentManager.  The name of the component is 'foo.bar.event.internal.EventEngineImpl' - which happens to match the name of the implementation class.  The toString representation from AbstractComponentManager is  ""Component: "" + getName() + "" ("" + getId() + "")"";

> Anyway, the problem is that an SCR class -- the DelayedComponentManager acting as the ServiceFactory -- is used to load the interface class, a situation which is definitely wrong

After spending the time with the code yesterday, I have to agree.  I'm able to get around this with a ""proper"" manifest that codes a direct import for the package without relying on dynamic import.  While that's the change I'm making locally to get the desired behavior, it still seems like the ServiceReference.isAssignableTo doesn't handle the dynamic import scenario that involves and extender and a service factory.

Karl,

> Did you try with felix 2.0.1/trunk?

Yes.  This behavior was observed with the code in the trunk.

Is it possible that an attempt to wire to the target package could be useful in the case where the requester bundle doesn't have an existing wire and it does have a matching dynamic import header?  I have no idea how the resolver works so I'm just throwing out as a question.

Thanks.

",14/Oct/09 11:47;sykesm;Changing component and severity.  The workaround of using an explicit import package is simple and straightforward.,"14/Oct/09 13:06;sykesm;As an experiment, I changed ServiceRegistrationImpl.isAssignableTo to attempt to get the requester's wire after the call to getClassByDelegation.  While the wire was null before the attempt to load the class, the getClassByDelegation resolved the dynamic import and wired the requester to the provider.

While I don't expect this is necessarily the correct way to address the problem, it did seem to work.",14/Oct/09 13:11;sykesm;Re-acquire the wire after loading the class instance,14/Oct/09 13:11;karlpauls;Interesting. We need to look into it. Thanks.,"23/Oct/09 15:32;rickhall;I think perhaps the issue is in ServiceRegistrationImpl.isClassAccessible(). In this method it tries to get the service type from the registered service object and in the case of a service factory will use that instead of the service object. Currently, if the factory is used to retrieve the service type and the type is not found, it does a comparison to null which will always return false. Maybe we need to do something like this instead:

    private boolean isClassAccessible(Class clazz)
    {
        try
        {
            // Try to load from the service object or service factory class.
            Class sourceClass = (m_factory != null)
                ? m_factory.getClass() : m_svcObj.getClass();
            Class targetClass = Util.loadClassUsingClass(sourceClass, clazz.getName());
            return ((m_factory != null) && (targetClass == null)) ? true : (targetClass == clazz);
        }
        catch (Exception ex)
        {
            // Ignore this and return false.
        }
        return false;
    }

So if the factory doesn't have access, we always return true instead of always returning false. We could potentially try to make a more fine-grained decision by getting the bundle associated with the service factory class and return true when the type if not found if the factory type comes from a bundle other than the registering bundle. This assumes that extenders register services using the context of the bundle they are extending and not their own.

Thoughts?","26/Oct/09 22:12;rickhall;Matthew, I am not sure if you are still around, but I have attached a patch to try to address this issue. Is there anyway you could try it out? If you cannot easily apply the patch to trunk yourself, I could also send you a patch felix.jar. Thanks!","27/Oct/09 00:41;sykesm;Richard, I'll apply to trunk and give it a shot tomorrow.  Will update with the results.  Thanks.","27/Oct/09 01:04;rickhall;Thanks, I won't make any guarantees that it will work, but hopefully it does. Effectively, we are trying to approximate the wired state of a service object without actually having the service object (i.e., we only have a service factory), so to some degree it is like stabbing in the dark...",30/Oct/09 19:41;sykesm;I finally got a chance to test and it worked for me.  Thanks again.,30/Oct/09 19:44;rickhall;Thanks. Closing this as fixed. Please open a new bug report if additional issues are uncovered.,,,,,,,,,
Unable to alter/unset a log level after it has been set from the console,FELIX-1745,12437898,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gertvanthienen,gertvanthienen,gertvanthienen,12/Oct/09 20:32,25/Nov/09 12:20,14/Mar/19 02:47,12/Oct/09 20:39,karaf-1.0.0,,,,,,,,,,karaf-1.2.0,,,,Karaf,,,,,,,0,,,,,,"Once a log level has been set from the console, it seems impossible to alter/unset it.  Cfr. this example

karaf@root:/> log:get all
ROOT: INFO
org.apache.geronimo.gshell.remote: WARN
karaf@root:/> log:set DEBUG com.foo
karaf@root:/> log:set WARN com.foo.example
karaf@root:/> log:get all
ROOT: INFO
com.foo: DEBUG
com.foo.example: WARN
org.apache.geronimo.gshell.remote: WARN
karaf@root:/> log:set INFO com.foo
karaf@root:/> log:get all
ROOT: INFO
com.foo: DEBUG
com.foo.example: WARN
org.apache.geronimo.gshell.remote: WARN
karaf@root:/> log:set INFO com.foo
karaf@root:/> log:get all
ROOT: INFO
com.foo: DEBUG
com.foo.example: WARN
org.apache.geronimo.gshell.remote: WARN
karaf@root:/> log:set - com.foo
ERROR  ""-"" is not a valid option
karaf@root:/> log:set WARN com.foo
karaf@root:/> log:set - com.foo
ERROR  ""-"" is not a valid option
karaf@root:/> log:get all
ROOT: INFO
com.foo: DEBUG
com.foo.example: WARN
org.apache.geronimo.gshell.remote: WARN",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57285,,,Mon Oct 12 20:39:39 UTC 2009,,,,,,0|i0vz9z:,184688,,,,,,,,12/Oct/09 20:39;gertvanthienen;Fixed in http://svn.apache.org/viewvc?view=rev&revision=824488,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundles sourced from OBR are not set up with internal bundle classpath,FELIX-1740,12437872,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,davemssavage,davemssavage,12/Oct/09 15:40,02/Mar/10 12:36,14/Mar/19 02:47,24/Feb/10 17:15,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"Most obvious error related to this is in setting up the eclipse classpath which need to unpack the internal bundle classpath resources into ""regular"" jars and directories for addition to the classpath container.

Need to check if OBR spec advertises the bundle classpath? If so this data is readable remotely. If not then may need to do some custom synchronization when the jar is downloaded?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57290,,,Tue Mar 02 12:36:24 UTC 2010,,,,,,0|i1arz3:,270998,,,,,,,,12/Oct/09 15:49;davemssavage;Ok quick review of OBR files suggests Bundle-Classpath is not encoded in OBR file. Which seems reasonable given OBR's origins. So custom synchronization it is...,24/Feb/10 17:15;davemssavage;SigilBundle.synchronize() method now updates the manifest data when bundle is pullled from remote repository,02/Mar/10 12:36;davemssavage;Mark issues raised by me as closed,,,,,,,,,,,,,,,,,,,,,,,,
The _donotcopy is ignored,FELIX-1734,12437827,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,clement.escoffier,clement.escoffier,12/Oct/09 05:48,11/Oct/11 17:09,14/Mar/19 02:47,24/Jun/11 14:20,maven-bundle-plugin-2.0.0,maven-bundle-plugin-2.0.1,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Since the 2.0.0, the _donotcopy 'instruction' does no more work.
As an example, Felix Main declares a donotcopy on config.properties. Despite this, the created jar contains the config.properties file. The issue also appears in iPOJO core.

It also looks like the <_debug>true<_debug> does not work either. (but I never checked before)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-24 14:20:40.805,,,no_permission,,,,,,,,,,,57296,,,Fri Jun 24 14:20:40 UTC 2011,,,,,,0|i0vy6n:,184511,,,,,,,,24/Jun/11 14:20;mcculls;Fixed by upgrading to bndlib 1.43.0,,,,,,,,,,,,,,,,,,,,,,,,,,
Disposed components are not removed from the component registry,FELIX-1733,12437812,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,11/Oct/09 13:02,08/Dec/09 15:49,14/Mar/19 02:47,11/Oct/09 18:43,scr-1.2.0,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Stopping bundles disposes the bundle's components. But the components remain registered in the component registry.

Listing the components later through the Web Console or the Shell Command results in NullPointerException because the bundle field of the components has been set to null.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57297,,,Tue Dec 08 15:49:28 UTC 2009,,,,,,0|i140zr:,231623,,,,,,,,"11/Oct/09 18:43;fmeschbe;The ConfiguredComponentHolder is generally always keeping at least one component which may be configured. This component, though, must not be kept if the components of the holder are all to be disposed off during disposal of the component holder.

In Rev. 824123 the ConfiguredComponentHolder.disposeComponents(int) now sets the single component field to null preventing the disposed(ImmediateComponent) callback to recreate the single component.",08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Native library extraction could be improved to help cases where there are dependencies among libraries,FELIX-1731,12437753,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,09/Oct/09 21:09,10/Oct/09 20:34,14/Mar/19 02:47,10/Oct/09 20:34,framework-2.0.0,,,,,,,,,,framework-2.0.1,,,,Framework,,,,,,,0,,,,,,"Sometimes native libraries have dependencies on other native libraries. OSGi doesn't really support this situation. However, certain approaches to extracting native libraries makes it possible to hack up a solution. With framework 2.0.0, the cache layout was changed to extract each native library into its own directory to account for the fact that fragments with native libraries may attach to multiple hosts. Unfortunately, this change makes it not possible to employ such hacks to resolve native library dependencies. We could probably change the approach slightly to make such hacks work again.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-10 12:51:11.852,,,no_permission,,,,,,,,,,,57299,,,Sat Oct 10 20:34:21 UTC 2009,,,,,,0|i1arzr:,271001,,,,,,,,"10/Oct/09 12:51;h2o;Pointer to the original discussion:
http://www.nabble.com/Odd-implementation-detail-of-native-libs-and-bundle-cache-td25769456.html

Thanks for filing this issue. Btw adding a runpath of $ORIGIN is not quite a ""hack"", but can be seen as good deployment practice, as it makes the entire application standalone and path-independent.

Let me know if there is anything I can do to help with this.
","10/Oct/09 14:36;h2o;I just saw the changes in svn r823844 and wanted to say that they work great for me! Thanks a lot.
","10/Oct/09 20:24;rickhall;It's a hack when it depends on implementation details. :-)

And I don't necessarily think hacks are a bad thing...hollywood and the media are responsible for ""hackers"" becoming bad guys.","10/Oct/09 20:34;rickhall;This is reported to have worked, so I will close.",,,,,,,,,,,,,,,,,,,,,,,
Properties with leading dots not allowed,FELIX-1727,12437693,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,09/Oct/09 10:22,13/Sep/10 10:20,14/Mar/19 02:47,09/Oct/09 10:29, configadmin-1.2.4,,,,,,,,,, configadmin-1.2.8,,,,Configuration Admin,Specification compliance,,,,,,0,,,,,,"Even though the OSGi R4.2 Configuration Admin Spec (v 1.3 of the spec) now explicitly allows properties with leading dots, the current implementation prevents them from being used.

Specification states:

    The format  of a property name should be:
               property-name ::= public | private
               public ::= symbolic-name // See 1.3.2
               private ::= '.' symbolic-name",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57303,,,Mon Sep 13 10:20:15 UTC 2010,,,,,,0|i0vykf:,184573,,,,,,,,09/Oct/09 10:29;fmeschbe;In Rev. 823506 fixed key validation allowing leading dots and throwing on empty keys (not allowed as per the syntax),13/Sep/10 10:20;fmeschbe;Closing issues after Configuration Admin 1.2.8 release,,,,,,,,,,,,,,,,,,,,,,,,,
SCR Annotations - Enhance error messages in case of missing project dependencies,FELIX-1726,12437663,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,sseifert@pro-vision.de,sseifert@pro-vision.de,08/Oct/09 23:48,29/Jul/10 10:30,14/Mar/19 02:47,16/Nov/09 12:22,maven-scr-plugin-1.4.0,,,,,,,,,,maven-scr-plugin-1.4.2,,,,SCR Tooling,,,,,,,0,,,,,,"in rev. 821022 felix removed some dependencies that where unneeded for the code that existed in the scr plugin itself.
there where unneeded to compile the plugin, but they are needed in some usecases for annotation parsing.
e.g. if a project's class is annotated with SCR annotations, and at the same time declares a static field with a slf4j Logger class, reading other static string field values fails with a ClassNotFound exception pointing to a slf4j class.

re-adding the slf4j dependencies again solves the problem.

unfortunately the exception handling in this case is not good - the message is only ""Somehing went wrong."", because the ClassNotFound exception was swallowed in ClassUtil.getInitializationExpression method.",,,,,,,,,,,,,,,,,,,,04/Nov/09 00:31;cziegeler;felix.patch;https://issues.apache.org/jira/secure/attachment/12423980/felix.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-09 10:31:00.633,,,no_permission,,,,,,,,,,,57304,,,Mon Nov 16 12:27:35 UTC 2009,,,,,,0|i1arzz:,271002,,,,,,,,"09/Oct/09 10:31;fmeschbe;Can this not be solved by adding a compile dependency on the project ?

After all it is project code which has the dependency and not the annotations library or the maven plugin.","09/Oct/09 10:31;fmeschbe;... and: ClassUtil.getInitializationExpression should probably not swallow this exception like this, right ?","09/Oct/09 15:21;sseifert@pro-vision.de;yes, it is possible to solve it with a project-specifc dependency - but the normaler user will never supsect this from the error message ""something went wrong"".. perhaps we should a a specific error message that points into this direction in the ClassUtil method instead of swallowing the exception.",10/Oct/09 05:42;fmeschbe;Changing issue summary to indicate that error message must be improved to hint the user at potential missing dependencies.,03/Nov/09 22:53;cziegeler;Does ClassUtil really fail with a CNFE?,"03/Nov/09 23:31;sseifert@pro-vision.de;in my usecase above, yes. the CNFE was thrown because the class was loaded when accessing the property, and the class depended on a slf4j class, which was not found in the classpath.

i think best solution would be to rethrow the error in classutil, perhaps wrapped in a runtimeexception with information about class name and property name.",03/Nov/09 23:37;cziegeler;The reason why I'm asking is that a CNFE is a checked exception and I don't see a method in the code which declares them to be thrown.,"03/Nov/09 23:52;sseifert@pro-vision.de;example stacktrace:

Caused by: java.lang.NoClassDefFoundError: org/slf4j/impl/StaticLoggerBinder
        at org.slf4j.LoggerFactory.<clinit>(LoggerFactory.java:60)
        at vwg.wcm.vwd4.base.components.global.AbstractStreamComponent.<clinit>(AbstractStreamComponent.java:37)
        at sun.misc.Unsafe.ensureClassInitialized(Native Method)
        at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(UnsafeFieldAccessorFactory.java:25)
        at sun.reflect.ReflectionFactory.newFieldAccessor(ReflectionFactory.java:122)
        at java.lang.reflect.Field.acquireFieldAccessor(Field.java:918)
        at java.lang.reflect.Field.getFieldAccessor(Field.java:899)
        at java.lang.reflect.Field.get(Field.java:358)
        at org.apache.felix.scrplugin.tags.ClassUtil.getInitializationExpression(ClassUtil.java:41)
        ... 32 more
Caused by: java.lang.ClassNotFoundException: org.slf4j.impl.StaticLoggerBinder
        at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
        ... 41 more

it's line 41 in ClassUtil.
and you're right - the CFNE was translated to a NoClassDefFoundError, and thats what i meant.",04/Nov/09 00:31;cziegeler;Proposed patch,04/Nov/09 00:31;cziegeler;Ok :) I've just attached a potential patch - what do you think about it?,04/Nov/09 01:48;sseifert@pro-vision.de;i like it!,16/Nov/09 12:22;cziegeler;I've applied the patch in Revision 880725,16/Nov/09 12:27;sseifert@pro-vision.de;thanks,,,,,,,,,,,,,,
"SCR Annotations - Support ""Add"" Operator in annotation values",FELIX-1725,12437659,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,sseifert@pro-vision.de,sseifert@pro-vision.de,08/Oct/09 23:10,16/Nov/09 12:27,14/Mar/19 02:47,03/Nov/09 22:42,maven-scr-plugin-1.4.0,,,,,,,,,,maven-scr-plugin-1.4.2,,,,SCR Tooling,,,,,,,0,,,,,,"in scr plugin 1.4.0 it is not possible to use a annotation expression like this:
contentType = ""application/json;charset="" + CharEncoding.UTF_8

the attached patch solves this problem by supporting the qdox ""AnnotationAdd"" class.",,,,,,,,,,,,,,,,,,,,08/Oct/09 23:10;sseifert@pro-vision.de;091009_annotationadd_FELIX-1725.patch;https://issues.apache.org/jira/secure/attachment/12421684/091009_annotationadd_FELIX-1725.patch,03/Nov/09 21:14;sseifert@pro-vision.de;091103_annotationadd_FELIX-1725.patch;https://issues.apache.org/jira/secure/attachment/12423950/091103_annotationadd_FELIX-1725.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-11-03 19:24:28.097,,,no_permission,,,,,,,,,,,57305,,,Tue Nov 03 22:42:39 UTC 2009,,,,,,0|i0vz8f:,184681,,,,,,,,"03/Nov/09 19:24;cziegeler;What about checking for the super class com.thoughtworks.qdox.model.annotation.AnnotationBinaryOperator
instead? This should support several operations at once.","03/Nov/09 21:14;sseifert@pro-vision.de;unfortunately i dont't think so. the classes AnnotationAdd and AnnotationBinaryOperator does not seem to have knwoledge implemented how to _evaluate_ the left and right expression to a combined value. both ""toString"" and ""getParameterValue"" methods output the left and right part concatenated with a "" + "" (as string) in between - which is not what is expected.

after doing some research in the qdox codebase i found a class ""EvaluatingVisitor"" that is exactly what we needed. i integrated in into the scr plugin and it seems to work very well - it should evaluate all annotation epressions that can occur, not only the add operation.

it solved a problem with fields declaring integer constants i found recently but did not file a bug yet, too.
new patch attached: 091103_annotationadd_FELIX-1725.patch","03/Nov/09 21:18;sseifert@pro-vision.de;p.s. the patch replaces the whole annotation value evaluation that was present before - i did some test on one of our biggest projects using SCR annotations with this version, and the resulting xml descriptor files where identically. so it does not seem to break existing behavior.","03/Nov/09 22:42;cziegeler;Thanks Stefan for updating the patch - I tried it with my test cases and they run fine as well.
So I've applied your patch in revision 832582.",,,,,,,,,,,,,,,,,,,,,,,
Framework boot delegation has a bug due to extraneous code,FELIX-1721,12437519,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,07/Oct/09 14:53,07/Oct/09 16:47,14/Mar/19 02:47,07/Oct/09 16:47,framework-2.0.0,,,,,,,,,,framework-2.0.1,,,,Framework,Specification compliance,,,,,,0,,,,,,"During the last release cycle, some extraneous code was included in the boot delegation routine (it looks like a cut-and-paste type of error). The extraneous code causes certain boot delegations to fail.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57309,,,Wed Oct 07 16:47:45 UTC 2009,,,,,,0|i0w1of:,185077,,,,,,,,"07/Oct/09 16:47;rickhall;Applied a fix. Passes TCK, our own tests, and GF tests.",,,,,,,,,,,,,,,,,,,,,,,,,,
typo in scr command,FELIX-1714,12437447,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,fmeschbe,dims,dims,07/Oct/09 00:34,08/Dec/09 15:49,14/Mar/19 02:47,07/Oct/09 07:40,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Please note the typo ""Componnent"", should be ""Component""

./scr/src/main/java/org/apache/felix/scr/impl/ScrCommand.java:                out.println( ""Componnent "" + component.getName() + "" disabled"" );

thanks,
dims",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-07 07:40:16.976,,,no_permission,,,,,,,,,,,57315,,,Tue Dec 08 15:49:28 UTC 2009,,,,,,0|i1as0v:,271006,,,,,,,,07/Oct/09 07:40;fmeschbe;Thanks for reporting. I have fixed this in Rev. 822616.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,,
"getPathInfo wrongly returns path containing semicolon-separated attributes like "";jsessionid""",FELIX-1713,12437433,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,srs,sidfischer,sidfischer,06/Oct/09 20:01,06/Oct/09 21:41,14/Mar/19 02:47,06/Oct/09 21:41,http-2.0.2,,,,,,,,,,http-2.0.4,,,,HTTP Service,,,,,,,0,,,,,,"Since org.apache.felix.http.jetty-2.0.2/ org.apache.felix.http.base-2.0.2 calling HttpServletRequest.getPathInfo() not only returns the raw path but additionally the semicolon-separated attributes, like ;jsessionid.

Example (version 1.0.1):
getRequestURI(): /test/foo;bar=baz
getPathInfo(): /foo

Example (version 2.0.2):
getRequestURI(): /test/foo;bar=baz
getPathInfo(): /foo;bar=baz

Looks like in org/apache/felix/http/base/internal/handler/ServletHandler$RequestWrapper the original HttpServletRequest is wrapped and getPathInfo() is overwritten using the String retrieved from getRequestURI() including the attributes.
This behaviour will break a lot of applications which rely on urlrewriting-based session handling.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-06 20:31:15.406,,,no_permission,,,,,,,,,,,57316,,,Tue Oct 06 21:41:34 UTC 2009,,,,,,0|i0vwk7:,184248,,,,,,,,"06/Oct/09 20:31;srs;Yes. Clearly this is a bug. Servlet spec dictates that getPathInfo should return what's after servlet-path and before query string parameters.
","06/Oct/09 21:16;srs;Added fix for this in trunk. Need a little more testing, but I am pretty sure this will fix getPathinfo() problem.",06/Oct/09 21:23;srs;Verified with my local installation. Fix is ok.,06/Oct/09 21:29;srs;Actually. Need to check this a little bit more.,06/Oct/09 21:41;srs;Now it seems to be fixed in trunk. Request attributes on URI is not longer returned in getPathInfo().,,,,,,,,,,,,,,,,,,,,,,
Resolver still does not discard all partial results when a cyclical dependency fails,FELIX-1710,12437377,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,06/Oct/09 11:04,08/Oct/09 11:26,14/Mar/19 02:47,08/Oct/09 11:26,framework-2.0.0,,,,,,,,,,framework-2.0.1,,,,Framework,Specification compliance,,,,,,0,,,,,,"There are still situations were failed cyclical dependencies are not completely cleaned up, which leads to bundles being considered to be resolved when in fact they are not. The previous fix for this did not go far enough since it only cleaned immediately cyclical dependencies. Instead, it must removed failed candidates from any modules using them as a potential candidate, which could also cause those modules to fail to resolve if that was the only potential candidate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57319,,,Thu Oct 08 11:26:12 UTC 2009,,,,,,0|i0vzun:,184781,,,,,,,,"08/Oct/09 11:26;rickhall;We now recursively loop through all potential candidates a candidate when it is determined it cannot resolve. Passes TCK, Felix tests, and GF tests.",,,,,,,,,,,,,,,,,,,,,,,,,,
The 'version' shell command is framework specific,FELIX-1699,12437226,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,clement.escoffier,clement.escoffier,04/Oct/09 09:36,05/Oct/09 08:43,14/Mar/19 02:47,04/Oct/09 09:53,shell-1.4.0,,,,,,,,,,shell-1.4.1,,,,Shell,,,,,,,0,,,,,,"The default Felix shell propose a 'version' command returning the current OSGi framework version.
However, if we install this shell on the top of another framework implementation such as Equinox, this command returns null.

-> ps
START LEVEL 10
  ID   State         Level  Name
[   0] [Active     ] [    0] OSGi System Bundle (3.5.1.R35x_v20090827)
...
[   5] [Active     ] [    1] Apache Felix Shell Service (1.4.0)
...
[   7] [Active     ] [    1] Apache Felix Shell TUI (1.4.0)
...
-> version
null
->

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-04 09:53:13.742,,,no_permission,,,,,,,,,,,57329,,,Sun Oct 04 09:57:37 UTC 2009,,,,,,0|i1as13:,271007,,,,,,,,"04/Oct/09 09:53;rickhall;Sorry, Clement, I didn't see that you assigned it to yourself. I already fixed it. Please close if it works for you, thanks!","04/Oct/09 09:57;clement.escoffier;No problem,

Just checked your version:
On Felix I got :
-> version
2.1.0.SNAPSHOT

On Equinox:
-> version
3.5.1.R35x_v20090827

So, I close the issue.",,,,,,,,,,,,,,,,,,,,,,,,,
"typo in scr and webconsole - ""unsatisifed""",FELIX-1674,12436992,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,dims,dims,01/Oct/09 10:25,08/Dec/09 15:49,14/Mar/19 02:47,05/Oct/09 10:32,scr-1.0.8,webconsole-2.0.0,,,,,,,,,scr-1.2.0,webconsole-2.0.2,,,Declarative Services (SCR),Web Console,,,,,,0,,,,,,"Of the typos, the following do show up either when we connect to felix command line console or the web console

./scr/src/main/java/org/apache/felix/scr/impl/ScrCommand.java:                return ""unsatisifed"";
./webconsole/src/main/java/org/apache/felix/webconsole/internal/compendium/ComponentsServlet.java:                return ""unsatisifed"";
./scr/src/main/java/org/apache/felix/scr/impl/manager/ImmediateComponentManager.java:                ""Updating the service references caused atleast on reference to become unsatisifed, deactivating component"",

the following are just in the comments
./scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java:     * not met, the component is not activated and remains unsatisifed.
./scr/src/test/java/org/apache/felix/scr/integration/ComponentConfigurationTest.java:        // expect a single unsatisifed component

thanks,
dims",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-01 11:14:38.744,,,no_permission,,,,,,,,,,,57354,,,Tue Dec 08 15:49:27 UTC 2009,,,,,,0|i1as4f:,271022,,,,,,,,"01/Oct/09 10:27;dims;""unsatisifed"" -> ""unsatisfied""","01/Oct/09 11:14;fmeschbe;Thanks for reporting these typos.

The web console typo is fixed in Rev. 820608",05/Oct/09 10:32;fmeschbe;Fixed in the scr project in Rev. 821744.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,
Missing support for DS 1.1 specified lazy activation behavior,FELIX-1666,12436951,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,sykesm,sykesm,30/Sep/09 20:34,08/Dec/09 15:49,14/Mar/19 02:47,14/Oct/09 06:11,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"While attempting to move code from the Equinox implementation of DS to the Felix implementation, I discovered that the Felix SCR does not seem to support processing and activation of component configurations that are declared in bundles awaiting lazy activation.  The DS 1.1 specification, section 112.8.2 indicates that bundles awaiting lazy activation are to be processed when the SCR starts (and, presumedly by extension, as bundles bundles are starting/started).

It appears that Felix has implemented most of the DS 1.1 support already so it appears this is an oversight.
",,,,,,,,,,,,,,,,,,,,13/Oct/09 15:14;sykesm;lazy-bundle-state.diff;https://issues.apache.org/jira/secure/attachment/12421992/lazy-bundle-state.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-05 10:09:07.274,,,no_permission,,,,,,,,,,,57362,,,Tue Dec 08 15:49:27 UTC 2009,,,,,,0|i0vz33:,184657,,,,,,,,"05/Oct/09 10:09;fmeschbe;Indeed.

Thanks for reporting.","11/Oct/09 08:36;fmeschbe;In Rev. 824038 add support for lazy bundle activation policy.

Also refactored the map of bundles with components: This used to be indexed by the bundle symbolic name, but this is wrong since
it is perfectly ok for two or more bundles in the framework to have the same symbolic name. Now the bundle ID is used, which is guaranteed to be unique per bundle.

Can you please verify this works correctly in your environment ? Thanks.","13/Oct/09 14:30;sykesm;I've pulled in the SCR from the trunk and tried it out.  It looks like the component descriptors are being processed but things still aren't behaving as expected as the component services aren't being registered as the references are resolved.  This may be related to the lazy state but I expect it's something more fundamental.

I'll dig in and either comment here or open another bug.

Thanks for the quick turnaround on the patch.","13/Oct/09 14:58;sykesm;I dug in a little bit more.  I have a delayed component defined in a bundle with a lazy activation policy that provides a service.  The component has no references so its configuration is satisfied at the time the bundle is started.  The service for the delayed component is never registered causing dependent components to remain unsatisfied.

This problem appears to be coming from the ComponentActivatorTask as the following warning issued via the log service:

[21] Cannot run task 'Enable Component: com.foo.bar.ServiceComponent (20)': Declaring bundle is not active null

Enabled, satisfied components should have their provided services registered as a ServiceFactory when the bundle is in the LAZY_ACTIVATION state.  When the services are resolved, the deferred component should then be activated.

Thanks again.",13/Oct/09 15:14;sykesm;Simple patch that honors Bundle.STARTING as an appropriate state for activation.,"13/Oct/09 15:19;fmeschbe;Thanks for digging in and providing the patch. I try to apply it tonight.

> Enabled, satisfied components should have their provided services registered as a ServiceFactory

Are you sure ? I think the components providing a service should only be registered as ServiceFactory iff they are defined as delayed or as service factories in the descriptor. Service components declared as ""immediate=true"" should IMHO registered as plain services and thus should cause the bundle to be really started.

WDYT ?",13/Oct/09 15:46;sykesm;I'm sorry.  The ServiceFactory comment was intended to be scoped to delayed components.  I absolutely agree that there's no reason why an immediate component needs another layer of indirection.,"13/Oct/09 19:00;fmeschbe;Found another place where the correct state has not been checked: In the case of starting SCR after other bundles, components of lazily started bundles are not loaded.

Fixed both situations using a new helper method, which should these two situations in Rev. 824884

May I ask you to check again ? Thanks.","13/Oct/09 22:01;sykesm;I did a quick sniff test by mucking around with start levels.  If I start the SCR after the other bundles are in lazy state, things seem to work.  Unfortunately I'm not in a position to do a lot more than that.

Thanks again for the quick turnaround.","14/Oct/09 06:11;fmeschbe;I slinghtly modified the active check to verify the lazy activation policy header is set for STARTING bundles in Rev. 825016.

From your comments, I assume this works, so I resolve the issue. Thanks.",08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,
Sigil resolver relies on ordering of several unordered data structures such as HashSet,FELIX-1664,12436918,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,30/Sep/09 13:48,30/Sep/09 15:37,14/Mar/19 02:47,30/Sep/09 15:37,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,This can lead to subtly different build orders which result in different resolution results,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57364,,,Wed Sep 30 15:37:21 UTC 2009,,,,,,0|i0w0a7:,184851,,,,,,,,"30/Sep/09 15:37;davemssavage;The resolver now explicitly orders requirements, first Import-Package and then Require-Bundle",,,,,,,,,,,,,,,,,,,,,,,,,,
Build path contains duplicate entry: 'org.apache.felix.sigil.common.core' for project 'org.apache.felix.sigil.ivy.resolver',FELIX-1663,12436912,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,30/Sep/09 12:28,30/Sep/09 14:00,14/Mar/19 02:47,30/Sep/09 14:00,,,,,,,,,,,,,,,Sigil,,,,,,,0,,,,,,"The ivy resolver project contains an explicit reference to the org.apache.felix.sigil.common.core project in it's .classpath file this leads to the following error in some eclipse environments:

Description     Resource        Path    Location        Type
Build path contains duplicate entry:
'org.apache.felix.sigil.common.core' for project
'org.apache.felix.sigil.ivy.resolver'   org.apache.felix.sigil.ivy.resolver             Build
path    Build Path Problem


However, if we remove the project dependency we get access restriction errors, which would require
org.apache.felix.sigil.common.core to export *.internal.* packages.",Eclipse 3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57365,,,2009-09-30 12:28:06.0,,,,,,0|i0w0pb:,184919,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sigil build fails due to api incompatibility in ivy 2.0.0.beta2 which has been published into spring repo?,FELIX-1659,12436854,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,29/Sep/09 20:21,29/Sep/09 20:28,14/Mar/19 02:47,29/Sep/09 20:28,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"resolve:
    [mkdir] Created dir: /Users/dave/development/felix-trunk/sigil/ivy/resolver/build/deps
[ivy:resolve]   [20090929204655] org.apache#felix.sigil.common.obr;latest.integration
[ivy:resolve]   [20090929204649] org.apache#felix.sigil.common.osgi;latest.integration
[ivy:resolve]   [20090929204651] org.apache#felix.sigil.common.core;latest.integration
[ivy:resolve] downloading http://repository.springsource.com/ivy/bundles/external/org.apache.ant/com.springsource.org.apache.ivy/2.0.0.beta2/com.springsource.org.apache.ivy-2.0.0.beta2.jar ...
[ivy:resolve]   [SUCCESSFUL ] sigil#com.springsource.org.apache.ivy;2.0.0.beta2!com.springsource.org.apache.ivy.jar (6934ms)
[ivy:retrieve] :: retrieving :: org.apache#felix.sigil.ivy.resolver [sync]
[ivy:retrieve]  confs: [default]
[ivy:retrieve]  8 artifacts copied, 0 already retrieved (2623kB/279ms)

compile:
    [mkdir] Created dir: /Users/dave/development/felix-trunk/sigil/ivy/resolver/build/main-classes
    [javac] Compiling 11 source files to /Users/dave/development/felix-trunk/sigil/ivy/resolver/build/main-classes
    [javac] /Users/dave/development/felix-trunk/sigil/ivy/resolver/src/org/apache/felix/sigil/ivy/SigilParser.java:235: cannot inherit from final org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorParser
    [javac]     static class DelegateParser extends XmlModuleDescriptorParser
    [javac]                                         ^
    [javac] /Users/dave/development/felix-trunk/sigil/ivy/resolver/src/org/apache/felix/sigil/ivy/SigilParser.java:235: XmlModuleDescriptorParser() has private access in org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorParser
    [javac]     static class DelegateParser extends XmlModuleDescriptorParser
    [javac]            ^
    [javac] /Users/dave/development/felix-trunk/sigil/ivy/resolver/src/org/apache/felix/sigil/ivy/SigilParser.java:555: cannot find symbol
    [javac] symbol  : constructor DefaultDependencyArtifactDescriptor(org.apache.ivy.core.module.descriptor.DefaultDependencyDescriptor,java.lang.String,java.lang.String,java.lang.String,<nulltype>,<nulltype>)
    [javac] location: class org.apache.ivy.core.module.descriptor.DefaultDependencyArtifactDescriptor
    [javac]                         dd.addDependencyArtifact( module, new DefaultDependencyArtifactDescriptor( dd, id, ""jar"",
    [javac]                                                           ^
    [javac] /Users/dave/development/felix-trunk/sigil/ivy/resolver/src/org/apache/felix/sigil/ivy/SigilResolver.java:288: method does not override a method from its superclass
    [javac]     @Override
    [javac]      ^
    [javac] 4 errors",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57369,,,Tue Sep 29 20:28:55 UTC 2009,,,,,,0|i1418v:,231664,,,,,,,,29/Sep/09 20:28;davemssavage;locked down version for time being to 2.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlocks caused by component activation and deactivation,FELIX-1658,12436852,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,29/Sep/09 20:07,08/Dec/09 15:49,14/Mar/19 02:47,29/Oct/09 10:51,scr-1.2.0,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Deadlock issues with SCR: Component operations are synchronized and may run while the bundle lock is held. This may cause deadlocks with the framework (mostly between the PackageAdmin thread and the SCR Component Actor thread).

The problem is that many operations of SCR are called in a bundle listener and cause further operations (while holding Java locks (synchronized)) inside the framework.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57370,,,Tue Dec 08 15:49:27 UTC 2009,,,,,,0|i0vz2v:,184656,,,,,,,,"29/Oct/09 10:51;fmeschbe;Removed synchronization from the internal state changing methods in Rev. 830886. To try to prevent concurrent state changing actions, I introduced transient states which are set at the begining of changing the state. The transient states do nothing and thus prevent concurrent state changes.

An issue, which might arise from this is, that there may be situations where a required state change might get lost. For example if the Activator Thread is activating a component (thus the component is in the ACITVATING state) and at the same time a service registration event would cause the component to have to be deactivated. This might get lost.

For now, I think we are pretty much ok and a workaround is to manually disable/enable the respective component in such cases. As soon as we have a reproducable issue we can try to find a solution, for example to be able to ""abort"" acitvation to wait for the activation to terminate before continuing with deactivation -- though this then has the potential for deadlock again...",29/Oct/09 12:30;fmeschbe;In Rev. 830913 converted the dynamic import of the LogService package into a static but optional import. This shold prevent another potential deadlock which may be caused by the dynamic import package resolution code requiring the global lock in the Felix Framework.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,
Plugin localization is broken in ui bundle - repositories preferences page title set to %repositoriesPrefPage,FELIX-1652,12436788,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,davemssavage,davemssavage,davemssavage,28/Sep/09 23:18,28/Sep/09 23:19,14/Mar/19 02:47,28/Sep/09 23:19,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,,Eclipse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57376,,,2009-09-28 23:18:11.0,,,,,,0|i1as5z:,271029,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removal of repository from config causes errors due to corrupted repository table,FELIX-1647,12436692,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,27/Sep/09 14:05,27/Sep/09 14:22,14/Mar/19 02:47,27/Sep/09 14:20,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"java.lang.IllegalStateException: Missing repository for f0342780-f02e-432a-806d-d3548ac2e6f3
	at org.apache.felix.sigil.eclipse.internal.model.repository.RepositoryConfiguration.getDefaultRepositorySet(RepositoryConfiguration.java:175)
	at org.apache.felix.sigil.eclipse.internal.repository.eclipse.SigilRepositoryManager.findRepositories(SigilRepositoryManager.java:173)
	at org.apache.felix.sigil.eclipse.internal.repository.eclipse.SigilRepositoryManager.loadRepositories(SigilRepositoryManager.java:106)
	at org.apache.felix.sigil.repository.AbstractRepositoryManager.initialise(AbstractRepositoryManager.java:66)
	at org.apache.felix.sigil.eclipse.internal.repository.eclipse.SigilRepositoryManager.initialise(SigilRepositoryManager.java:83)
	at org.apache.felix.sigil.eclipse.SigilCore.getRepositoryManager(SigilCore.java:500)
	at org.apache.felix.sigil.eclipse.SigilCore.getRepositoryManager(SigilCore.java:522)
	at org.apache.felix.sigil.eclipse.model.util.JavaHelper.resolveClasspathEntrys(JavaHelper.java:371)
	at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.findExternalClasspath(SigilProject.java:197)
	at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.buildClassPathEntries(SigilClassPathContainer.java:102)
	at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.getClasspathEntries(SigilClassPathContainer.java:58)
	at org.eclipse.jdt.internal.core.JavaModelManager.containerPutIfInitializingWithSameEntries(JavaModelManager.java:564)
	at org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:49)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:716)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1800)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:782)
	at org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:4616)
	at org.apache.felix.sigil.ui.eclipse.classpath.SigilClasspathContainerInitializer.initialize(SigilClasspathContainerInitializer.java:92)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:2483)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1702)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:2553)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2611)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1872)
	at org.eclipse.jdt.internal.core.JavaProject.buildStructure(JavaProject.java:440)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:257)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:514)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:251)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:237)
	at org.eclipse.jdt.internal.core.JavaProject.getJavaProjectElementInfo(JavaProject.java:1543)
	at org.eclipse.jdt.internal.core.JavaProject.newNameLookup(JavaProject.java:2240)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.<init>(SearchableEnvironment.java:53)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.<init>(SearchableEnvironment.java:60)
	at org.eclipse.jdt.internal.core.JavaProject.newSearchableNameEnvironment(JavaProject.java:2265)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:147)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:363)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:357)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:498)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:494)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:82)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)
",Eclipse,,,,,,,,,,,,,,FELIX-1648,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57381,,,Sun Sep 27 14:20:23 UTC 2009,,,,,,0|i0vxtr:,184453,,,,,,,,"27/Sep/09 14:20;davemssavage;Patch provided to log corruption as error vs throwing runtime error which locks up IDE.
Will create secondary issue to ensure table doesn't get corrupted on removal.",,,,,,,,,,,,,,,,,,,,,,,,,,
Html footer and header are always added to the response for a servlet plugin,FELIX-1636,12436425,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,cziegeler,cziegeler,23/Sep/09 15:20,19/Dec/16 17:24,14/Mar/19 02:47,24/Sep/09 14:43,webconsole-2.0.0,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"If a plugin is registered as a plain servlet, the WebConsolePluginAdapter wraps this servlet and handle GET requests
Regardless of the requested uri, the html header and footer is always added to the response which causes messed uprequests if the servlet wants to generate dynamic json (or other stuff).
I guess the easiest way is to check the extension in the AbstractWebConsolePlugin#doGet()
After the check for spoolResource a check of the extension could be made - if no extension or htm or html, put the footer or header around. For any other extension just invoke render.",,,,,,,,,,,,,,,,,,,,24/Sep/09 06:00;cziegeler;AbstractWebConsolePlugin.java.patch;https://issues.apache.org/jira/secure/attachment/12420437/AbstractWebConsolePlugin.java.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-09-23 16:45:23.529,,,no_permission,,,,,,,,,,,57392,,,Thu Sep 24 14:43:37 UTC 2009,,,,,,0|i0vtq7:,183789,,,,,,,,"23/Sep/09 16:45;fmeschbe;Yes, this is currently ""by-design"" ;-)

The problem is how to decide whether to call the plugin directly or not ... not sure whether it suffices it to check for an extension. Maybe yes. Maybe not.

Consider a plugin rendering information about bundles. If called directly it renders summary information on all bundles. If addressed with a trailing ""/num"" where num is the bundle number it would render details of that bundle. Both situations should of course render the header/footer.

Patches welcome ;-)",24/Sep/09 06:00;cziegeler;Suggested patch,"24/Sep/09 06:03;cziegeler;Yes, I totally agree - but in your example your request does not contain an extension :)
The current behaviour prevents plugins from using AJAX

I've attached a patch which assumes that if the request uri does not contain an extension, or the extension htm/html it is an html request. For all other extensions, the header and footer is not rendered.

I think this is consistent with the current plugins and their usage of urls","24/Sep/09 06:53;cziegeler;Just noticed that the patch is actually not working, the negative isHtmlRequest() check needs to be changed into a positive one (just remove the !)","24/Sep/09 07:43;fmeschbe;Committed a slightly modified (and fixed as per the above comment) version of the patch in Rev. 818395:

only render header/footer if the request is plain HTML plugin request indicated by the absence of any extension or the extension being "".html"". Any request containing a non-"".html"" extension is directly handled by the renderContent method without rendering any header and footer.","24/Sep/09 07:43;fmeschbe;This should solve this issue, I think.

Please reopen, if you disagree. Thanks.","24/Sep/09 11:44;cziegeler;Unfortunately this breaks existing plugins like the configMgr as these use PID (or something else) as last part of the url. And these things contain dots.
Therefore it might be better to move this into the adapter (not sure how resource can be handled in this case)
Or find a different way","24/Sep/09 14:43;cziegeler;I've changed the login in revision: 818499
The abstract web console class now always returns true for the is html check (to restore previous behaviour)
The web console plugin adapter which handles the plugin mechanism overwrites this method and performs the according check
",,,,,,,,,,,,,,,,,,,
Maven Bundle Plugin disables transitive dependencies,FELIX-1634,12436388,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,adreghiciu,adreghiciu,23/Sep/09 07:24,24/Jun/11 12:36,14/Mar/19 02:47,23/Sep/09 12:49,,,,,,,,,,,maven-bundle-plugin-2.1.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"By its setup Maven Bundle Plugin disables transitive dependencies by it's setup of org.apache.maven.artifact.handler.ArtifactHandler in /META-INF/plexus/components.xml. The setting: <includesDependencies>true</includesDependencies> means that an artifact of type ""bundle"" will include everything it needs in the jar and dependencies are not transitive. 

This setting should be ""false"".

Note that this is only observable only when you depend on a ""bundle"" and you have the <type>bundle</type> set.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-23 07:37:30.648,,,no_permission,,,,,,,,,,,57394,,,Wed Sep 23 12:49:17 UTC 2009,,,,,,0|i0vwjz:,184247,,,,,,,,"23/Sep/09 07:37;mcculls;Thanks for catching this - the bundleplugin has used the same includesDependencies setting since the very beginning, so I assume not many people are using the bundle type in their dependencies. BTW, do you have a pointer to the doc explaining all the elements of components.xml?",23/Sep/09 12:49;mcculls;Fixed in trunk (r818082) and deployed new 2.1.0-SNAPSHOT of the bundleplugin for testing purposes.,,,,,,,,,,,,,,,,,,,,,,,,,
Remove reference to KXml from NOTICE and LICENSE and update OSGi copyright years,FELIX-1632,12436383,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,23/Sep/09 06:07,19/Dec/16 17:24,14/Mar/19 02:47,23/Sep/09 06:08,webconsole-2.0.0,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"The KXml packages are not contained in the WebConsole bundle any more because we only inline a subset of the original bundlerepository bundle which we require for Manifest Header parsing. Consequently the respective reference in the NOTICE file and the LICENSE.kxml file should be removed.

Additionally, the copyright year of the OSGi libraries is to be adjusted.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57396,,,Wed Sep 23 06:08:05 UTC 2009,,,,,,0|i0vuf3:,183901,,,,,,,,23/Sep/09 06:08;fmeschbe;Done in Rev. 817969,,,,,,,,,,,,,,,,,,,,,,,,,,
Implicit bootdelegation causes hang on android,FELIX-1631,12436382,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,23/Sep/09 05:58,23/Sep/09 06:05,14/Mar/19 02:47,23/Sep/09 06:04,framework-1.8.0,framework-1.8.1,framework-2.0.0,,,,,,,,framework-2.0.1,,,,Framework,,,,,,,0,,,,,,"When felix is embedded inside an android app and a bundle triggers a classload which in turn hits our implicit bootdelegation then we run into an endless loop and hang. The workaround for now is to set ""felix.bootdelegation.implicit=false"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57397,,,Wed Sep 23 06:04:18 UTC 2009,,,,,,0|i140tb:,231594,,,,,,,,"23/Sep/09 06:04;karlpauls;Our implicit bootdelegation detection assumes that if we walk a classloader.getClass.getClassloader() chain we will ultimately arrive at the bootclassloader which is represented by null. Apparently this is not true on android but at one point we get the same classloader for the next as the one we already have (i.e., we run into an endless loop). I commited a fix which makes sure we stop if we hit null or the same classloader again which seems to fix the issue.",,,,,,,,,,,,,,,,,,,,,,,,,,
Make WebConsole more independent,FELIX-1630,12436381,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,23/Sep/09 05:56,19/Dec/16 17:24,14/Mar/19 02:47,23/Sep/09 06:05,webconsole-1.2.10,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"Currently the WebConsole in general and parts of the included plugins depend on a number of OSGi compendium services to be present (at least for package wiring).

For example the ConfigurationRender plugin rendering the output of the ConfigurationPlugin services has dependencies on the Preferences Service API and the Configuration Admin API. If either or both API packages cannot be wired to the web console, the ConfigurationRender plugin fails to load and provide service. The fix here is factor out these two functionalities into separate ConfigurationRender implementations, which themselves may load or not depending on satisified dependencies.

Likewise the web console depends on the OSGi ServiceTracker to be exported by some other bundle. This may not always be the case (though the Felix framework exports this package in the system bundle). So the ServiceTracker should be included as a private package in the WebConsole for additional independence.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57398,,,Wed Sep 23 06:05:01 UTC 2009,,,,,,0|i0vuev:,183900,,,,,,,,"23/Sep/09 06:05;fmeschbe;Implemented this dependency refactoring in Rev. 817967:

Create AbstractConfigurationPrinter from which new PreferencesConfigurationPrinter and ConfigurationAdminConfigurationPrinter extend. The latter two take the Preferences Service and Configuration Admin printing functionality formerly included in the ConfigurationRender itself. Also include the OSGi ServiceTracker in the bundle directly.",,,,,,,,,,,,,,,,,,,,,,,,,,
SCR Annotations with Constanst reference may cause NPE,FELIX-1629,12436352,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,sseifert@pro-vision.de,sseifert@pro-vision.de,22/Sep/09 20:58,16/Nov/09 12:28,14/Mar/19 02:47,24/Sep/09 06:11,maven-scr-plugin-1.4.0,,,,,,,,,,maven-scr-plugin-1.4.2,,,,SCR Tooling,,,,,,,0,,,,,,"under certain circumstances the maven scr plugin throws a NPE like this

java.lang.NullPointerException
        at org.apache.felix.scrplugin.tags.annotation.defaulttag.Util.getAnnotationValue(Util.java:362)
        at org.apache.felix.scrplugin.tags.annotation.defaulttag.Util.getAnnotationValues(Util.java:399)
        at org.apache.felix.scrplugin.tags.annotation.defaulttag.Util.getStringValue(Util.java:277)
        at org.cqstone.core.annotationtagprovider.ComponentComponentTag.<init>(ComponentComponentTag.java:31)
        at org.cqstone.core.annotationtagprovider.CqstoneAnnotationTagProvider.getTags(CqstoneAnnotationTagProvider.java:31)
        at org.apache.felix.scrplugin.tags.annotation.AnnotationTagProviderManager.getTags(AnnotationTagProviderManager.java:105)
        at org.apache.felix.scrplugin.tags.annotation.AnnotationTagProviderManager.getTags(AnnotationTagProviderManager.java:90)
        at org.apache.felix.scrplugin.tags.annotation.AnnotationTagProviderManager.hasScrPluginAnnotation(AnnotationTagProviderManager.java:118)
        at org.apache.felix.scrplugin.tags.JavaClassDescriptorManager.getJavaClassDescription(JavaClassDescriptorManager.java:417)
        at org.apache.felix.scrplugin.tags.JavaClassDescriptorManager.getSourceDescriptions(JavaClassDescriptorManager.java:394)
        at org.apache.felix.scrplugin.SCRDescriptorMojo.execute(SCRDescriptorMojo.java:167)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

the reason of the NPE is that the ""prescan"" which is done in AnnotationTagProviderManager#hasScrPluginAnnotation to check if any annotation is present in a java class at all calls the getTags methods without a ""JavaClassDescription"" object. but Util.getAnnotationValue depends on this, although this is not needed for the ""prescan"" check.

the attached patch fixes this problem.",,,,,,,,,,,,,,,,,,,,22/Sep/09 20:59;sseifert@pro-vision.de;090922_npe_fix_FELIX-1629.patch;https://issues.apache.org/jira/secure/attachment/12420311/090922_npe_fix_FELIX-1629.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-09-24 06:11:23.548,,,no_permission,,,,,,,,,,,57399,,,Thu Sep 24 06:11:47 UTC 2009,,,,,,0|i1as7b:,271035,,,,,,,,24/Sep/09 06:11;cziegeler;Lowering severity as this only happens with custom providers.,"24/Sep/09 06:11;cziegeler;Thanks for your patch, Stefan! I've applied it in revision: 818374",,,,,,,,,,,,,,,,,,,,,,,,,
Configuration status tabs not correctly rendered in FireFox 3.5,FELIX-1623,12436177,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,21/Sep/09 08:50,19/Dec/16 17:24,14/Mar/19 02:47,22/Sep/09 12:03,webconsole-2.0.0,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,The new configuration status tabs are not correctly filled most of the time in FireFox 3.5.2. The tabs seem to work in other browsers like Opera 10 and IE 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57405,,,Tue Sep 22 12:03:35 UTC 2009,,,,,,0|i0vu9r:,183877,,,,,,,,"22/Sep/09 12:03;fmeschbe;Fixed the rendering issues in Rev. 817577

  * The tabs are hidden while being loadded
  * A short message is displayed that loading takes place
  * After loading the tabs are setup, the message is hidden and tabs are shown

Also disabled the aninmation while switching tabs.

In Rev. 817623 implemented a new end-of-line implementation writing ""<br/>"" instead of ""[CR]LF"" because IE does not honor the ""white-space: pre"" setting (correclty).

Tested these fixes on Linux, Windows XP and Windows Vista with major browsers: Firefox, Opera, Chrome, Safari and IE",,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException,FELIX-1622,12436153,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,lgalfaso,lgalfaso,20/Sep/09 04:50,19/Dec/16 17:24,14/Mar/19 02:47,21/Sep/09 07:45,webconsole-1.2.10,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"When going to the Log tab in the web console, I get a NPE.
SEVERE: service exception:
java.lang.NullPointerException
	at org.apache.felix.webconsole.internal.compendium.LogServlet.renderJSON(LogServlet.java:102)
	at org.apache.felix.webconsole.internal.compendium.LogServlet.doGet(LogServlet.java:153)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)

The environment is Equinox and Grizzly (I know this is not Felix, but it would be nice if this were cross framework implementation).","Equinox, Grizzly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-21 07:43:21.323,,,no_permission,,,,,,,,,,,57406,,,Mon Sep 21 07:45:15 UTC 2009,,,,,,0|i0vua7:,183879,,,,,,,,"21/Sep/09 07:43;fmeschbe;Thanks for reporting this issue. I agree, that it must work cross-framework (it is operating on the OSGi API and therefore is definitely not tied into the Apache Felix framework)

Now for the cause: It looks like you don't have a LogReaderService available and the LogServlet does not correctly handle this situation [It first logs this case but later tries to access the null variable anyways].",21/Sep/09 07:45;fmeschbe;I have committed a fix preventing the exception in Rev. 817183.,,,,,,,,,,,,,,,,,,,,,,,,,
OBR fails to take bundles into account that are already available in the framework,FELIX-1621,12436132,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,pflanzenmoerder,pflanzenmoerder,19/Sep/09 20:20,01/Apr/10 11:48,14/Mar/19 02:47,18/Feb/10 16:46,framework-2.0.0,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Create a bundle called 'base'. Create another bundle called 'dep'. 'dep' has to depend on 'base'.
Deploy 'base' into felix. Keep 'dep' in a separate directory. Use bindex.jar (from osgi.org) to create the obr.xml.
Create a third bundle with the following code in the activator:

		RepositoryAdmin repositoryAdmin = (RepositoryAdmin) arg0.getService(arg0.getServiceReference(RepositoryAdmin.class.getName()));
		try {
			repositoryAdmin.addRepository((new File(
					""/<pathtorep>/obr.xml"")).toURI().toURL());
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
		Resolver resolver = repositoryAdmin.resolver();
		resolver.add(repositoryAdmin.discoverResources(""(&(symbolicname=<nameof'dep'>))"")[0]);
		if (resolver.resolve()) {
			resolver.deploy(true);
		} else {
			Requirement[] reqs = resolver.getUnsatisfiedRequirements();
			for (int i = 0; i < reqs.length; i++) {
				System.out.println(""Unable to resolve: "" + reqs[i].getFilter());
			}
		}

When the bundle is started it will give us the message that the 'base' bundle is not available although it is deploied and started in the framework.

This issue is somewhat related to http://issues.apache.org/jira/browse/FELIX-280.",linux with JDK 1.6 update 16,,,,,,,,,,,,,,,,,,,23/Sep/09 09:49;pflanzenmoerder;LocalRepositoryImpl.diff;https://issues.apache.org/jira/secure/attachment/12420355/LocalRepositoryImpl.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-18 16:46:28.07,,,no_permission,,,,,,,,,,,57407,,,Thu Feb 18 16:46:28 UTC 2010,,,,,,0|i0vzxr:,184795,,,,,,,,23/Sep/09 09:49;pflanzenmoerder;Patch for adding a bundle capability for local resources.,"18/Feb/10 16:46;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/LocalRepositoryImpl.java
Committed r911482
",,,,,,,,,,,,,,,,,,,,,,,,,
ServiceReference.isAssignableTo() always returns true if requesting bundle has no wire,FELIX-1600,12435705,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,mcculls,mcculls,15/Sep/09 12:33,10/Nov/09 17:12,14/Mar/19 02:47,02/Oct/09 12:14,framework-2.0.0,,,,,,,,,,framework-2.0.1,,,,Framework,,,,,,,3,,,,,,"[ from http://markmail.org/message/pu5usr5s7vsweyv3 ]

I think there's a bug in our ServiceReference.isAssignableTo implementation...

the javadoc for this method states:

 ""This method performs the following checks:

   1. Get the package name from the specified class name.
   2. For the bundle that registered the service referenced by this ServiceReference (registrant bundle);
       find the source for the package. If no source is found then return true if the registrant bundle is
       equal to the specified bundle; otherwise return false.
   3. If the package source of the registrant bundle is equal to the package source of the specified
      bundle then return true; otherwise return false.""

whereas our implementation does:

            // There are three situations that may occur here:
            //   1. The requester does not have a wire for the package.
            //   2. The provider does not have a wire for the package.
            //   3. Both have a wire for the package.
            // For case 1, we do not filter the service reference since we
            // assume that the bundle is using reflection or that it won't
            // use that class at all since it does not import it. For
            // case 2, we have to try to load the class from the class
            // loader of the service object and then compare the class
            // loaders to determine if we should filter the service
            // refernce. In case 3, we simply compare the exporting
            // modules from the package wiring to determine if we need
            // to filter the service reference.

assume both the provider and requester have no wire for the package
(as happens when a bundle uses it's own export, as in this situation)

the javadoc says isAssignableTo should return false, because the
provider has no wire and the provider != requester - but we'll return
true because the requester has no wire and we do that check first
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-22 18:34:28.879,,,no_permission,,,,,,,,,,,57428,,,Tue Nov 10 17:12:05 UTC 2009,,,,,,0|i0vwjr:,184246,,,,,,,,"22/Sep/09 18:34;hand;We ran into this issue too when using the ServiceTracker, which ends up calling ServiceRegistrationImpl.isAssignableTo, where case 1 causes a class cast exception in our application due to seeing a service object that is not compatible with the requesting  bundles classloader. A fix would be good news (though we should be able to filter the results ourselves).","23/Sep/09 13:23;rickhall;I have committed a potential fix for this. If someone wants to test trunk (or the latest snapshot) and let me know if it works, that would be great, thanks!","23/Sep/09 17:58;hand;Unfortunately, it does not work - at least not in our case. We run into the new ""case 2"", having a requesterWire==null and providerWire filled in. I believe the new case 2 (the old 1.8.1 version case 1) should simply set allow=false instead of true? The comment on reflection seems like something one should not do, if you want to get the services as seen from a bundle, you need to use that modules bundle-context to ask for the services.

In our case we have one bundle A declaring

interface com.stibo.X

class com.stibo.Ximpl

and Ximpl is registered as a service of interface X in bundle-context of bundle A. Everything is not exported in this bundle.

We have another bundle B declaring (and exporting)

interface com.stibo.X

and a third bundle C (importing com.stibo package) declaring

class com.stibo.xxx.yyy.Ximpl2

and Ximpl2 is registered as a service of interface X in bundle-context of bundle C.

We see Ximpl2 when bundle A asks for services of com.stibo.X, but clearly, Ximpl2 is not compatible with the X in bundle A (and the X in bundle B is not visible in bundle A).

I tested this against the snapshot: org.apache.felix.framework-2.1.0-20090923.131858-1.jar","23/Sep/09 18:22;hand;Tried to fix this locally, allow=false is not the solution. It seems to me that case 2 is symmetrical to case 3 and implementing case using the below code fixed the problem for our application and did not at a first glance seem to have any negative sideeffects.

            // Case 2: Only include service reference if the service
            // object uses the same class as the requester.
            else if (requesterWire == null)
            {
	            // If the provider has a wire to the requestor, we are OK. If not,
	            // then try to use the service registration to see if the requester's
	            // class is accessible.
	            if (!((BundleImpl) providerWire.getExporter().getBundle()).hasModule(requesterModule))
	            {
	                try
	                {
	                    // Load the class from the requesting bundle.
	                    Class requestClass = requesterModule.getClassByDelegation(className);
	                    // Get the service registration and ask it to check
	                    // if the service object is assignable to the requesting
	                    // bundle's class.
	                    allow = getRegistration().isClassAccessible(requestClass);
	                }
	                catch (Exception ex)
	                {
	                    // This should not happen, filter to be safe.
	                    allow = false;
	                }
	            }
	            else
	            {
	                // O.k. the provider is wired to the requestor's package, now check
	                // if the provider is wired to the latest version of the requestor, if so
	                // then allow else don't (the requestor has been updated but not refreshed).
	                allow = requesterModule == providerWire.getExporter();
	            }
            }
","23/Sep/09 19:18;rickhall;From my perspective, you have a degenerate case since you have a requester with its own private copy of the interface it is querying. As it said in the comments, case 2 was specifically allowed because the assumption was the requesting bundle was using reflection. This is sort of extra-spec, but I am fairly certain Equinox does it the same way, since I have talk with the guys there about it.

However, I think I have committed a refinement to the algorithm with checks to see if the requester has no wire but still has access to the class. If so, then I compare the class, if not then always true. Could you please test again. Thanks!","23/Sep/09 20:18;hand;The fix seems to work perfectly, thanks...

Yes, the case is a bit degenerate, but nevertheless to fix our case properly and safely we had to include the service interface locally in an extra bundle.",23/Sep/09 20:53;rickhall;Excellent! I will close this issue since you have verified that it works. Thanks a lot.,"25/Sep/09 13:22;rickhall;It turns out this fix is not 100% correct...it messes up when there is a service being provided under multiple interfaces and a client requests under one interface and doesn't have access to the other. I will need to look into some changes, then we will have to test it again.","28/Sep/09 21:13;rickhall;Henning, could you please test again and let me know if the latest trunk/snapshot still works for you? Thanks.","29/Sep/09 11:38;hand;The new version also works - I tested the latest snapshot: org.apache.felix.framework-2.1.0-20090928.211315-3.jar. Thanks, Henning","29/Sep/09 11:53;rickhall;Great, thanks Henning. I will close this issue again.","02/Oct/09 12:13;karlpauls;There is still an issue when the requester doesn't have a wire but the provider does and the service is a service factory. In that case, we should see whether the provider has access and if so whether the class is the same as of the requester. ",02/Oct/09 12:14;karlpauls;I commited a fix as of revision 820985. Could you please re-test trunk and see whether it still works for you?,"02/Oct/09 13:43;hand;Hi Karl, would it be possible to generate a new snapshot build to test against? Thanks, Henning","02/Oct/09 15:55;rickhall;I have deployed new snapshots, let us know if everything is ok.","04/Oct/09 19:19;rickhall;Ok, Henning, just because I think you need some more work, I did some more fine tuning of the algorithm and deployed new snapshots. If you could check it out again, that would be great. Thanks.","10/Nov/09 14:29;hand;Hi Karl and Richard, I finally got back to testing this - and it works, both in 2.0.1 and in org.apache.felix.framework-2.1.0-20091008.113048-6.jar. Thanks, Henning",10/Nov/09 17:12;rickhall;Thanks.,,,,,,,,,
Sigil features files and update site are hard coded to release 0.9.0.SNAPSHOT,FELIX-1597,12435698,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,15/Sep/09 11:17,18/Sep/09 15:50,14/Mar/19 02:47,18/Sep/09 15:50,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,Better to parametrize this in the build,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57431,,,Fri Sep 18 15:50:55 UTC 2009,,,,,,0|i0w093:,184846,,,,,,,,"18/Sep/09 15:50;davemssavage;sigil build patched to set versions in features.xml files via bnd preprocessing
update site generated by parsing site directory via a groovy script to read bundle symbolic name and bundle version from features",,,,,,,,,,,,,,,,,,,,,,,,,,
Unsynchronized access to WeakHashMap in ModelElementSupport can lead to 100% cpu in multi threaded environments,FELIX-1592,12435624,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,14/Sep/09 16:15,14/Sep/09 22:07,14/Mar/19 02:47,14/Sep/09 22:07,,,,,,,,,,,,,,,Sigil,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57436,,,2009-09-14 16:15:38.0,,,,,,0|i0w0tz:,184940,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential NPE in access to ISigilProject.getBundle().anyMethod() due to lack of synchronization around getBundle/setBundle,FELIX-1588,12435587,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,14/Sep/09 12:24,14/Sep/09 12:42,14/Mar/19 02:47,14/Sep/09 12:42,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57440,,,2009-09-14 12:24:38.0,,,,,,0|i0w0sn:,184934,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Framework reports org.osgi.framework.version as 1.3,FELIX-1586,12435523,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,13/Sep/09 10:38,13/Sep/09 22:04,14/Mar/19 02:47,13/Sep/09 22:04,framework-2.0.0,,,,,,,,,,framework-2.0.1,,,,Framework,,,,,,,0,,,,,,"Framework version is tested in ServiceTracker line 248 to check if the framework supports ServiceEvent#MODIFIED_ENDMATCH which is needed in some dosgi scenarios to support ListenerHooks. For this to work the version needs to be 1.5.0 or greater, but the constant appears to be hard coded to 1.3 in FelixConstants?

A quick hack to change the version to 1.5 enabled the ListenerHook behaviour but unsure if this has wider consequences?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-13 15:16:48.265,,,no_permission,,,,,,,,,,,57442,,,Sun Sep 13 15:16:48 UTC 2009,,,,,,0|i0w0n3:,184909,,,,,,,,"13/Sep/09 15:16;rickhall;There are no consequences for changing that property value, it was just a miss on my part. We will change it in the next maintenance release. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,
Regression with native library handling,FELIX-1580,12435419,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,rickhall,h2o,h2o,11/Sep/09 12:04,11/Sep/09 15:04,14/Mar/19 02:47,11/Sep/09 14:31,framework-2.0.0,,,,,,,,,,framework-2.0.1,,,,Framework,,,,,,,0,,,,,,"
I tried to update to felix-2.0.0 but my bundles with native code would not install anymore, even though they work fine under felix-1.8.1 and equinox. The following error showed up for no good reason:

org.osgi.framework.BundleException: Activator start error in bundle org.example.pkg [23].
        at org.apache.felix.framework.Felix.activateBundle(Felix.java:1750)
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1621)
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:890)
        at org.apache.felix.shell.impl.StartCommandImpl.execute(StartCommandImpl.java:114)
        at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:281)
        at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:184)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 0
        at org.apache.felix.framework.util.manifestparser.R4Library.match(R4Library.java:113)
        at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.findLibrary(ModuleImpl.java:1929)
        at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1680)
        at java.lang.Runtime.loadLibrary0(Runtime.java:823)
        at java.lang.System.loadLibrary(System.java:1028)
        at org.example.pkg.internal.ExampleActivator.start(ExampleActivator.java:12)
        at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:667)
        at org.apache.felix.framework.Felix.activateBundle(Felix.java:1699)
        ... 6 more
java.lang.ArrayIndexOutOfBoundsException: 0

Through trial-and-error I have found the rather confusing conditions under which this error shows up:

- a library is not found in the bundle (code passes a nonexisting name to System.loadLibrary())

- multiple libraries are _correctly_ specified in the Bundle-NativeCode header!

There might be other confusing combinations. ;)

I traced this back to the changes to R4Library in r790963 (Add support for configurable native library extensions. (FELIX-1298)) where the match() method was modified. It seems that the ""exts"" array is empty and therefore leads to the AIOOB later.
","generic, JDK6, tested on Windows & Linux",,,,,,,,,,,,,,,,,,,11/Sep/09 14:12;h2o;org.example.pkg.zip;https://issues.apache.org/jira/secure/attachment/12419304/org.example.pkg.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-09-11 13:40:11.429,,,no_permission,,,,,,,,,,,57447,,,Fri Sep 11 15:04:58 UTC 2009,,,,,,0|i0vwef:,184222,,,,,,,,"11/Sep/09 12:10;h2o;I can provide a stripped-down example to demonstrate these behaviours, however it requires Windows (for the two required dlls). Let me know if this would be helpful for verifying the bug and I'll attach it.
","11/Sep/09 13:40;rickhall;Definitely, an example would be good.

I am sure it is something stupid on our part...we will get it fixed.","11/Sep/09 13:57;rickhall;I believe I see the issue. If I create a fix, can you build framework from the trunk to test it or would you rather have me email you a snapshot? If the latter, then contact me via email.","11/Sep/09 14:12;h2o;This is the simple bundle project to reproduce, including the two dlls to run (apr and pcre renamed so that they do not clash with stuff on PATH)

The activator simply load one library and should work fine in its current form. To cause an error, either:

- simply add the second library (mypcre.dll) to the osgi.bnd instructions

- change the activator to load ""foo""

Both should cause the AIOOB to occur on bundle start.

","11/Sep/09 14:13;h2o;I have trunk checked out and am familiar with maven ;-)
","11/Sep/09 14:31;rickhall;Ok, I committed a fix to framework. We were not correctly checking if additional native library extensions were specified, now we do. Build framework, then main and test this resulting felix.jar file. If it works, please close this issue. If not, please reopen it and I will take another look. Thanks.","11/Sep/09 14:46;h2o;Tested successfully with both the clean-room example and my original project (with multiple libraries) on Windows as well as Linux. Thanks!
",11/Sep/09 15:04;rickhall;Great. This fix will go out in the next maintenance release. Thanks.,,,,,,,,,,,,,,,,,,,
Occasional NPE in URLHandlersBundleStreamHandler,FELIX-1573,12435169,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,mrdon,mrdon,08/Sep/09 23:46,11/Nov/09 18:11,14/Mar/19 02:47,11/Nov/09 18:11,framework-1.8.1,framework-2.0.0,,,,,,,,,framework-2.0.1,,,,Framework,,,,,,,0,,,,,,"I'm occasionally seeing startup failures in my integration tests due to an NPE in URLHandlersBundleStreamHandler that looks like some sort of race condition: 

- Started bundle org.springframework (5)
08-Sep-2009 02:54:37 	- Loading XML bean definitions from OSGi resource[bundle://6.0:0/META-INF/spring/extender/spring-event-bridge.xml|bnd.id=6|bnd.sym=org.springframework.osgi.extender]
08-Sep-2009 02:54:37 	- Unable to process extender configuration
08-Sep-2009 02:54:37 	org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from OSGi resource[bundle://6.0:0/META-INF/spring/extender/spring-event-bridge.xml|bnd.id=6|bnd.sym=org.springframework.osgi.extender]; nested exception is java.io.IOException: No framework context found
08-Sep-2009 02:54:37 	        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:349)
08-Sep-2009 02:54:37 	        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:310)
08-Sep-2009 02:54:37 	        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
08-Sep-2009 02:54:37 	        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
08-Sep-2009 02:54:37 	        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.context.support.OsgiBundleXmlApplicationContext.loadBeanDefinitions(OsgiBundleXmlApplicationContext.java:176)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.context.support.OsgiBundleXmlApplicationContext.loadBeanDefinitions(OsgiBundleXmlApplicationContext.java:142)
08-Sep-2009 02:54:37 	        at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:123)
08-Sep-2009 02:54:37 	        at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:422)
08-Sep-2009 02:54:37 	        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:352)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.access$301(AbstractDelegatedExecutionApplicationContext.java:69)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$1.run(AbstractDelegatedExecutionApplicationContext.java:186)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.normalRefresh(AbstractDelegatedExecutionApplicationContext.java:182)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$NoDependenciesWaitRefreshExecutor.refresh(AbstractDelegatedExecutionApplicationContext.java:89)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.refresh(AbstractDelegatedExecutionApplicationContext.java:175)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.extender.internal.support.ExtenderConfiguration.<init>(ExtenderConfiguration.java:169)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.extender.internal.activator.ContextLoaderListener.start(ContextLoaderListener.java:380)
08-Sep-2009 02:54:37 	        at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
08-Sep-2009 02:54:37 	        at org.apache.felix.framework.Felix.startBundle(Felix.java:1461)
08-Sep-2009 02:54:37 	        at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:984)
08-Sep-2009 02:54:37 	        at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
08-Sep-2009 02:54:37 	        at java.lang.Thread.run(Thread.java:595)
08-Sep-2009 02:54:37 	Caused by: java.io.IOException: No framework context found
08-Sep-2009 02:54:37 	        at org.apache.felix.framework.URLHandlersBundleStreamHandler.openConnection(URLHandlersBundleStreamHandler.java:72)
08-Sep-2009 02:54:37 	        at java.net.URL.openConnection(URL.java:943)
08-Sep-2009 02:54:37 	        at org.springframework.osgi.io.OsgiBundleResource.getInputStream(OsgiBundleResource.java:180)
08-Sep-2009 02:54:37 	        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
08-Sep-2009 02:54:37 	        ... 22 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-09 12:07:57.621,,,no_permission,,,,,,,,,,,57454,,,Wed Nov 11 18:11:49 UTC 2009,,,,,,0|i0vyun:,184619,,,,,,,,"09/Sep/09 02:45;mrdon;I can't reproduce this on OSX (1.5 or 1.6), but can reliably on Linux (1.6.0_13)","09/Sep/09 06:45;mrdon;While there does seem to be a race condition here, there is fallback code that should handle the situation.  In URLHandlers.getFrameworkFromContext(), if it can't determine the framework, it should go through the callstack to find a class loaded by the bundle class loader.  Unfortunately, it matches based on the class name, which it mistakenly thinks should be ""org.apache.felix.framework.searchpolicy.ModuleImpl.ModuleClassLoader"".  After much debugging, I realized the actual class name that will be returned from the classloader is ""org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader"".  Since changing this string, I haven't seen the error occur again.","09/Sep/09 12:07;karlpauls;Yeah, it sounds like this is an oversight from the refactoring. It used to be different but now the ModuleClassLoader is an inner class so that doesn't get used correctly. I will fix it asap. 
","09/Sep/09 12:21;karlpauls;I just committed a fix for this. As I said, its an oversight from the refactoring. Please test and let us know whether it works for you. Thanks for reporting.","02/Nov/09 04:56;mrdon;I don't know how I missed this, but the class name is still wrong - should be:

  org.apache.felix.framework.ModuleImpl$ModuleClassLoader

not, as it is now,

  org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader
",02/Nov/09 08:28;karlpauls;Did you try with the current trunk/2.0.2? This should be fixed by FELIX-1834 (as well as the other issue you mentioned on the 2.0.1 release - I hope).,"02/Nov/09 11:43;mrdon;Yeah, seems fixed in trunk, but it is still broken in 2.0.1, so maybe just close this ticket against 2.0.2 instead.","11/Nov/09 18:11;rickhall;Closing this issue since there was a commit against 2.0.1 for this issue, so there is no reason to move this issue to 2.0.2 because it didn't fully resolve the bug. We have FELIX-1834 for the complete fix in 2.0.2.",,,,,,,,,,,,,,,,,,,
"Bundle-ClassPath without ""."" while using maven-bundle-plugin in a war project confuses the plugin",FELIX-1571,12435131,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,sahoo,sahoo,08/Sep/09 16:59,11/Oct/11 17:09,14/Mar/19 02:47,24/Jun/11 20:29,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,1,,,,,,"I am using a war type project, so the packaging is governed by
maven-war-plugin. For the OSGi meta data in the war, I am using manifest
goal of maven-bundle-plugin in process-classes phase. Yes, I have already
looked at the excellent examples on this use case at [1]. However, my use
case has one difference. I don't want ""."" in Bundle-ClassPath. Why? Because,
it should never be. Files at the root level of .war file is never used
directly by class loaders in web container; WEB-INF/classes and
WEB-INF/lib/*.jar are used instead. As soon as I remove the ""."" from
Bundle-ClassPath settings, bundle plugin is confused. I don't know why  "".""
is necessary for bundle plugin to generate meta data? My guess is without
it, it does not find any classes in the target dir? 

Please see the attached test case. I want to know two things:
1. How to configure bundle plugin to generate Bundle-ClassPath that contains WEB-INF/classes and WEB-INF/lib/*.jar, but ""."" should not be part of the classpath?
2. How to configure bundle plugin to generate Import-Package statements for classes packaged in WEB-INF/lib/*.jar?",,,,,,,,,,,,,,,FELIX-3018,FELIX-2692,,,,10/Apr/10 21:00;erikengerd;ASF.LICENSE.NOT.GRANTED--wicket-cdi.tar.gz;https://issues.apache.org/jira/secure/attachment/12441359/ASF.LICENSE.NOT.GRANTED--wicket-cdi.tar.gz,08/Sep/09 17:00;sahoo;test.zip;https://issues.apache.org/jira/secure/attachment/12418937/test.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-09-16 08:46:28.419,,,no_permission,,,,,,,,,,,57456,,,Thu Jun 30 16:53:16 UTC 2011,,,,,,0|i1asb3:,271052,,,,,,,,08/Sep/09 17:00;sahoo;Simple test case.,"16/Sep/09 08:46;mcculls;Correct, if you're using the manifest goal and all you have at the time is the compilation classpath then without the ""."" bnd won't see the compiled classes in the build directory - the WAR might put the classes in a different subdirectory, but that's not how they're laid out at the time the manifest goal runs. Normally an Include-Resource instruction would fix this, but this doesn't work properly unless bnd is actually going to generate the bundle (the manifest goal uses bnd as an analyzer rather than a builder).

Questions 1 & 2 are related in that there's a chicken and egg situation - you want to generate a manifest based on how classes are laid out inside the WAR, but you want the manifest generated before you create the WAR. I think the proper solution may be to create a new feature that lets you update the manifest in the generated project artifact. That way you have the WAR artifact available, so bnd can produce the right manifest (and verify it) - although one outstanding issue is this might affect signing...

Anyway this is definitely a new feature, so assigning it to the next feature release of the bundleplugin.","10/Apr/10 21:00;erikengerd;This is an example of a small wicket application that has a similar issue. The example as I have attached it builds and runs fine on glassfish v3. 

The problem is with the Import-Package declaration. If I leave it out, then I only get 'org.wamblee' which is the package of the classes in the war. 

If I use the bundle plugin to build the example (and not the war plugin), then the Import-Package declaration are completely mixed up and I even get junit dependencies, which is weird. 

Definitely, some fixes and advice are necessary on how to build a hybrid web app. ","24/Jun/11 20:29;mcculls;Trunk includes FELIX-2934 fix for spurious ""."" when using <_wab> to build WAR bundles.","30/Jun/11 07:55;sahoo;Yes, with the fix to FELIX-2934, ""."" no longer appears in BCP. I modified the original test case to not specify any Bundle-ClassPath instruction to maven-bundle-plugin. With that change, maven-bundle-plugin-2.3.5-SNAPSHOT is now able to generate correct Bundle-ClassPath and Import-Package. So, the two questions I raised in the bug are addressed with the latest 2.3.5-SNAPSHOT.

With all the recent fixes to maven-bundle-plugin, things have improved quite a lot. Generating skinny WABs is really straight forward now. But, I think there is some duplication of configuration information which can lead to subtle errors when there are dependencies embedded in WEB-INF/lib. The duplication comes into picture when ""war"" packaging type is used to make the eventual war, but manifest goal of maven-bundle-plugin is used to generate the OSGi metadata. One has to ensure that correct Embed-Dependency instruction is specified which is a duplication of information known to war plugin. So, I agree with the following comment you made earlier in this bug:

""I think the proper solution may be to create a new feature that lets you update the manifest in the generated project artifact. That way you have the WAR artifact available, so bnd can produce the right manifest (and verify it) - although one outstanding issue is this might affect signing... ""

Instead of marking this bug as fixed, should we turn into a feature request? It will be really handy if one can just wrap the output of maven-war-plugin to make an OSGi bundle. In fact, the same should be possible for any other packager's output. It may have the limitation of not able to generated signed artifact. 

Comments/thoughts?","30/Jun/11 14:14;mcculls;I think a new issue would be preferable for the feature request, you can always link it back to the original issue.",30/Jun/11 16:53;sahoo;Filed FELIX-3018,,,,,,,,,,,,,,,,,,,,
Felix latest bundle repository cannot be started for some reason,FELIX-1563,12434985,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,davidsmall99,davidsmall99,07/Sep/09 10:05,05/Feb/10 21:00,14/Mar/19 02:47,05/Feb/10 21:00,bundlerepository-1.4.0,,,,,,,,,,maven-bundle-plugin-1.4.1,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"I tried to use the org.apache.felix.bundlerepository-1.4.0.jar. The bundle cannot be started.
org.osgi.framework.BundleException: Exception in org.apache.felix.bundlerepository.Activator.start() of bundle org.apache.felix.bundlerepository.
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:1010)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:966)
        at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:317)
        at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:256)
        at org.eclipse.osgi.framework.internal.core.FrameworkCommandProvider._start(FrameworkCommandProvider.java:239)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
        at java.lang.reflect.Method.invoke(Method.java:599)
        at org.eclipse.osgi.framework.internal.core.FrameworkCommandInterpreter.execute(FrameworkCommandInterpreter.java:145)
        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.docommand(FrameworkConsole.java:293)
        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.console(FrameworkConsole.java:278)
        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.run(FrameworkConsole.java:213)
        at java.lang.Thread.run(Thread.java:735)
Caused by: java.lang.NoSuchMethodError: org/osgi/framework/Bundle.getBundleContext()Lorg/osgi/framework/BundleContext;
        at org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.initialize(LocalRepositoryImpl.java:222)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.<init>(LocalRepositoryImpl.java:190)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.<init>(LocalRepositoryImpl.java:182)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl.addBundle(LocalRepositoryImpl.java:104)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl.initialize(LocalRepositoryImpl.java:169)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl.<init>(LocalRepositoryImpl.java:56)
        at org.apache.felix.bundlerepository.RepositoryAdminImpl.<init>(RepositoryAdminImpl.java:58)
        at org.apache.felix.bundlerepository.Activator.start(Activator.java:35)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:991)
        at java.security.AccessController.doPrivileged(AccessController.java:251)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:985)
        ... 13 more
Nested Exception:
java.lang.NoSuchMethodError: org/osgi/framework/Bundle.getBundleContext()Lorg/osgi/framework/BundleContext;
        at org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.initialize(LocalRepositoryImpl.java:222)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.<init>(LocalRepositoryImpl.java:190)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.<init>(LocalRepositoryImpl.java:182)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl.addBundle(LocalRepositoryImpl.java:104)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl.initialize(LocalRepositoryImpl.java:169)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl.<init>(LocalRepositoryImpl.java:56)
        at org.apache.felix.bundlerepository.RepositoryAdminImpl.<init>(RepositoryAdminImpl.java:58)
        at org.apache.felix.bundlerepository.Activator.start(Activator.java:35)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:991)
        at java.security.AccessController.doPrivileged(AccessController.java:251)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:985)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:966)
        at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:317)
        at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:256)
        at org.eclipse.osgi.framework.internal.core.FrameworkCommandProvider._start(FrameworkCommandProvider.java:239)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
        at java.lang.reflect.Method.invoke(Method.java:599)
        at org.eclipse.osgi.framework.internal.core.FrameworkCommandInterpreter.execute(FrameworkCommandInterpreter.java:145)
        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.docommand(FrameworkConsole.java:293)
        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.console(FrameworkConsole.java:278)
        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.run(FrameworkConsole.java:213)
        at java.lang.Thread.run(Thread.java:735)
Nested Exception:
java.lang.NoSuchMethodError: org/osgi/framework/Bundle.getBundleContext()Lorg/osgi/framework/BundleContext;
        at org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.initialize(LocalRepositoryImpl.java:222)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.<init>(LocalRepositoryImpl.java:190)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.<init>(LocalRepositoryImpl.java:182)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl.addBundle(LocalRepositoryImpl.java:104)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl.initialize(LocalRepositoryImpl.java:169)
        at org.apache.felix.bundlerepository.LocalRepositoryImpl.<init>(LocalRepositoryImpl.java:56)
        at org.apache.felix.bundlerepository.RepositoryAdminImpl.<init>(RepositoryAdminImpl.java:58)
        at org.apache.felix.bundlerepository.Activator.start(Activator.java:35)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:991)
        at java.security.AccessController.doPrivileged(AccessController.java:251)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:985)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:966)
        at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:317)
        at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:256)
        at org.eclipse.osgi.framework.internal.core.FrameworkCommandProvider._start(FrameworkCommandProvider.java:239)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
        at java.lang.reflect.Method.invoke(Method.java:599)
        at org.eclipse.osgi.framework.internal.core.FrameworkCommandInterpreter.execute(FrameworkCommandInterpreter.java:145)
        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.docommand(FrameworkConsole.java:293)
        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.console(FrameworkConsole.java:278)
        at org.eclipse.osgi.framework.internal.core.FrameworkConsole.run(FrameworkConsole.java:213)
        at java.lang.Thread.run(Thread.java:735)

Please can you investigate?
Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-07 13:56:49.942,,,no_permission,,,,,,,,,,,57464,,,Fri Feb 05 21:00:49 UTC 2010,,,,,,0|i0vyuv:,184620,,,,,,,,"07/Sep/09 13:56;rickhall;It looks like the version of Equinox you are using is not R4.1. However, this bundle is importing the wrong version...it is importing org.osgi.framework 1.3, when it should be 1.4.","08/Sep/09 09:13;davidsmall99;Hi Richard,
The bundle org.apache.felix.bundlerepository-1.4.0.jar should be able to cope with org.osgi.framework 1.3 as its import package is shown below.
Manifest-Version: 1.0
Built-By: pauls
Bundle-Activator: org.apache.felix.bundlerepository.Activator
Created-By: Apache Maven Bundle Plugin
Bundle-License: http://www.apache.org/licenses/LICENSE-2.0.txt
Import-Package: org.osgi.framework;version=""1.3"",org.osgi.service.log;
 resolution:=optional;version=""1.3.0"",org.osgi.service.obr;version=""1.
 0""
Bnd-LastModified: 1238533562871
Export-Package: org.osgi.service.obr;uses:=""org.osgi.framework"";versio
 n=""1.0""
Bundle-Version: 1.4.0
Ignore-Package: org.xml.sax,javax.xml.parsers
Bundle-Name: Apache Felix Bundle Repository
Bundle-Description: Bundle repository service.
Bundle-Url: http://felix.apache.org/site/downloads.cgi
Build-Jdk: 1.5.0_16
Bundle-DocURL: http://felix.apache.org/site/apache-felix-osgi-bundle-r
 epository.html
Private-Package: org.apache.felix.bundlerepository,org.apache.felix.bu
 ndlerepository.metadataparser,org.apache.felix.bundlerepository.metad
 ataparser.kxmlsax,org.kxml2.io,org.kxml2.kdom,org.kxml2.wap,org.kxml2
 .wap.syncml,org.kxml2.wap.wml,org.kxml2.wap.wv,org.xmlpull.v1
Bundle-ManifestVersion: 2
Export-Service: org.osgi.service.obr.RepositoryAdmin
Bundle-Vendor: The Apache Software Foundation
Bundle-SymbolicName: org.apache.felix.bundlerepository
Tool: Bnd-0.0.255
Bundle-Source: http://felix.apache.org/site/downloads.cgi
DynamicImport-Package: org.apache.felix.shell
","08/Sep/09 13:44;rickhall;I think the imports are wrong for the repository bundle, they should be for 1.4 or greater, since it uses Bundle.getBundleContext(), which wasn't introduced until 1.4.","08/Sep/09 21:14;davidsmall99;Does it mean that the felix bundleRepository's import-Package is wrong? Am I right to say the bundle org.apache.felix.bundlerepository-1.4.0.jar needs org.osgi.framework version 1.4 or above?
Thanks","08/Sep/09 21:44;rickhall;Yes, that is what I am saying.",05/Feb/10 21:00;rickhall;This was fixed.,,,,,,,,,,,,,,,,,,,,,
Cosmetic change of the Bundle-Name and Bundle-SymbolicName in iPOJO annotations.,FELIX-1557,12434811,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,clement.escoffier,pierre.bourret,pierre.bourret,04/Sep/09 05:39,25/Apr/10 14:40,14/Mar/19 02:47,04/Sep/09 05:59,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,0,,,,,,"The iPOJO Annotations bundle suffer from tiny inconsistencies in its header :

*) The Bundle-SymbolicName is ""org.apache.felix.org.apache.felix.ipojo.annotations"" but should be ""org.apache.felix.ipojo.annotations"".
*) The Bundle-Name is ""iPOJO Annotations"" but should be ""Apache Felix iPOJO Annotations"".

Fixing this issue may also impact OBR dependency resolution (capability changes).

-- TRACE OF iPOJO BUNDLES LIST --

-> ps -s
...
[   6] [Active     ] [    1] org.apache.felix.ipojo (1.4.0)
[   7] [Active     ] [    1] org.apache.felix.org.apache.felix.ipojo.annotations (1.4.0)
[   8] [Active     ] [    1] org.apache.felix.ipojo.composite (1.4.0)
[   9] [Active     ] [    1] org.apache.felix.ipojo.handler.extender (1.4.0)
...
-> ps
...
[   6] [Active     ] [    1] Apache Felix iPOJO (1.4.0)
[   7] [Active     ] [    1] iPOJO Annotations (1.4.0)
[   8] [Active     ] [    1] Apache Felix iPOJO Composite (1.4.0)
[   9] [Active     ] [    1] Apache Felix iPOJO Extender Pattern Handler (1.4.0)
...
",all,,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-04 05:59:22.664,,,no_permission,,,,,,,,,,,57470,,,Fri Sep 04 05:59:22 UTC 2009,,,,,,0|i1asc7:,271057,,,,,,,,"04/Sep/09 05:59;clement.escoffier;Fixed at revision 811224.

Thanks,

However, iPOJO annotations is not a real bundle and is not intended to be deployed. iPOJO does not require to work. It just uses the maven-bundle-plugin to set the private package (better control). 
Moreover, this bundle is not intended to be deployed from an OBR. IFAIK, the OBR installation is set to NONE in the pom file. 

why are you using this bundle at runtime ?

Clement",,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle.getResource/s is not able to find resources if the package is not alraedy wired when I use DynamicImport-Package: *,FELIX-1556,12434760,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,03/Sep/09 16:35,03/Sep/09 18:08,14/Mar/19 02:47,03/Sep/09 17:16,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"This appears to be a serious bug. While running GlassFish on Felix 1.8.1 and on a latest build off trunk, I see the following:
I have a bundle which has DynamicImport-Package: *. I call bundle.getResources(""foo/Bar.class"") and it does not find the resource even if there exists a unique bundle which exports package foo and has a resource foo/Bar.class. If I call bundle.loadClass(""foo.Bar""), it finds the class. I also see a WIRE being setup between the importer and exporter for package foo. Subsequently, getResource also works. ",generic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-03 16:42:42.434,,,no_permission,,,,,,,,,,,57471,,,Thu Sep 03 18:08:13 UTC 2009,,,,,,0|i0vyv3:,184621,,,,,,,,03/Sep/09 16:42;rickhall;The code appears to try to search dynamic imports. I will look into it.,"03/Sep/09 16:59;rickhall;This appears to be a variant of the issue you raised on the mailing list, which is getResources() doesn't always return null. Even though this was fixed in trunk, the internal API still doesn't return null and one place where it is being used internally expected it to be null, so it was assuming something was found when an empty enumeration was returned, which thus prevented dynamic imports from being searched. I will commit a fix shortly.","03/Sep/09 17:16;rickhall;I have committed a fix. If you could confirm that trunk resolves the issue and close this bug, that would be great. Good catch!","03/Sep/09 18:08;sahoo;Yes, I tried with your fix and it works. Closing the issue. I am glad we discovered and fixed before 2.0 is out.",,,,,,,,,,,,,,,,,,,,,,,
Start level service must synchronously persist bundle start level changes,FELIX-1551,12434551,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,01/Sep/09 20:02,01/Sep/09 20:04,14/Mar/19 02:47,01/Sep/09 20:04,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Currently, the Start Level implementation asynchronously processes bundle start level changes including persistently saving the start level. The spec says persisting the start level should be synchronous, while the processing of the change should be asynchronous.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57476,,,Tue Sep 01 20:04:44 UTC 2009,,,,,,0|i1ascf:,271058,,,,,,,,01/Sep/09 20:04;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
Configurations may still be delivered more than once (or not at all),FELIX-1545,12434426,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,31/Aug/09 13:34,13/Sep/10 10:20,14/Mar/19 02:47,26/Aug/10 08:51, configadmin-1.2.4,,,,,,,,,, configadmin-1.2.8,,,,Configuration Admin,,,,,,,0,,,,,,"Even after ""fixing"" FELIX-1146 and FELIX-1542 configurations may be delivered more than once. Under lab conditions it can even be observed, that configuration is not delivered at all.

After digging into this issue a bit further (and writing test cases), it looks like we have three issues:

(1) The granularity of System.currentTimeMillis() to feed the last modification time and last update time fields is to coarse causing false positives when testing whether configuration should be supplied or not

(2) In contrast to service update due to Configuration.update(Dictionary), the updates cause by ManagedService[Factory] service registration do not observe the last update time field and thus may cause duplicate delivery

     T1: update configuration, schedule update task
     T2: register ManagedService, schedule update task
     T3: run update task from T1 --> ManagedService is registered and updated
     T3: run update task from T1 --> ManagedService is updated because last update time flag is ignored
          This last update call should not take place and must be guarded

(3) After a service update the ManagedService update tasks (handling update after ManagedService registration) always sets the last update time flag, regardless of whether configuration properties exist or not.

     T1: create (empty) configuration
     T2: register ManagedService, schedule update task
     T1:  update configuration, schedule update task
     T3: runs update task from T2, updates ManagedService with null (no proeprties) and updates last update time
         (last update time is now higher than last modification time even though no properties have been supplied)
     T3: runs update task from T1, but does *not* update ManagedService because last update > last modification

Please note, that the third issue is actually much worse since it prevents the ManagedService from getting configuration at all !

",,,,,,,,,,,,,,,,,,,,26/Apr/10 07:06;pderop;cm-stress-test.tgz;https://issues.apache.org/jira/secure/attachment/12442823/cm-stress-test.tgz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-04-26 07:05:52.924,,,no_permission,,,,,,,,,,,57482,,,Mon Sep 13 10:20:15 UTC 2010,,,,,,0|i0vytr:,184615,,,,,,,,31/Aug/09 13:44;fmeschbe;Committed test cases exhibiting the problems in this issue in Rev. 809592.,"31/Aug/09 14:05;fmeschbe;In Rev. 809597 implement last modification and last update trackers as simple counters (instead of System.currentTimeMillis()) :

* last modification time is incremented whenever Configuration.update(Dictionary) is called

* last update time is set to last modification time after each update of the Configuration's properties in a ManagedSerive[Factory].","31/Aug/09 14:33;fmeschbe;In Rev. 809608 added guards to ManagedService[Factory]Update to prevent multiple updates and a guard to ManagedServiceUpdate to prevent setting the last update field if no properties were provided to the ManagedService.

Plus added some more DEBUG logging.","31/Aug/09 14:46;fmeschbe;Im satisfied with the fix, therefore resolving this issue.","01/Sep/09 06:05;fmeschbe;Reopening this issue because BJ Hargrave reported more OSGi TCK failures with this fix applied than without this fix applied.

I need to more thoroughly investigate.","17/Sep/09 14:10;fmeschbe;Our bamboo build seems to sporadically have the same issues. 

See here for two failures:

   http://opensource.bamboo.atlassian.com/browse/FELIX-DEF-2478/test/org.apache.felix.cm.integration.ConfigurationBindingTest:test_statically_bound

and

   http://opensource.bamboo.atlassian.com/browse/FELIX-DEF-2478/test/org.apache.felix.cm.integration.ConfigurationBindingTest:test_static_binding",21/Oct/09 10:56;fmeschbe;Recent bamboo build failur: http://opensource.bamboo.atlassian.com/browse/FELIX-DEF-2757/test/org.apache.felix.cm.integration.ConfigurationBaseTest:test_basic_configuration_factory_configure_then_start,"26/Apr/10 07:05;pderop;Felix,

Don't know if it may help, but I have attached to this post a junit/pax-exam test which seems to definitely reproduce the problem.
(see also the post: http://www.mail-archive.com/dev@felix.apache.org/msg16928.html)

The test creates a factory pid, and perform many updates, and checks that the updated method is called accordingly;



",26/Apr/10 07:13;fmeschbe;This definitely is helpful and I thank you very much for providing it !,"27/Apr/10 11:13;fmeschbe;The configuration manager currently maintains two counters for configuration updates: one for actual calls to the Configuration.update(Dictionary) method (the last modification counter) and one for the actual delivery of the configuration to the ManagerService[Factory] (the last update counter).

When a configuration is now provided to a ManagedService[Factory] the last update counter is set to the value of the last modification counter. This may cause multiple configuration updates to be missed if the rate of calls to the Configurtion.update(Dictionary) method is higher than the rate of actual delivery of configuraiton to ManagedService[Factory] services.

As a solution we might want to introduce another counter, a service registration counter.

  * the last modification counter is maintained according to the Configuration.update(Dictionary) method
  * the last update counter is set by the UpdateTask and checked by the ManagedService[Factory]Update task
  * the service registration counter is set by the ManagedService[Factory]Update task and checked by the UpdateTask

This should allow for consecutive configuration updates to all be delivered to the ManagedSerivce[Factory] services but prevent provisiong of the same configuration to the same service multiple times upon new service registration.","25/Aug/10 13:30;fmeschbe;Rev. 989094

Committed Pierre de Rop's test case (thanks alot for providing) slightly enhanced to not only ensure delivery of the configuration but also to ensure the correct configuration is actually delivered.

Modified the way the last update flag for configurations is set: Asynchronous configuration delivery is implemented as tasks, which are setup at the time of the configuration update (or service event processing). At this time the current configuration properties are extracted from the configuration as well as the last modification time of these properties. This kind of a timestamped snapshot of the configuration properties.

At the time of the configuration update (asynchronously as mandated by the spec), last modification time is compared to the actual last update time field of the configuration object. If the last update time is higher than the last modification time of the update task, nothing is done. Otherwise the update takes place and the last update time field is now set to the last modification time of the properties just updated.

Previously the last update time field was set to the last modification time value at the time of configuration update. This is wrong, because it may cause configurations to get lost.

All our integration tests (including the new one) now pass. But there are 3 OSGi CT test failures I have to further investigate before resolving this issue fixed.","26/Aug/10 08:51;fmeschbe;With these fixes (along with the FELIX-2557) fixes testcases by Pierre de Rop, the our own integration test cases as well as the OSGi CT seem to run fine now.

Thus this issue can be resolved.",13/Sep/10 10:20;fmeschbe;Closing issues after Configuration Admin 1.2.8 release,,,,,,,,,,,,,,
Configuration may be supplied twice in certain situations,FELIX-1542,12434359,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,29/Aug/09 18:44,17/Nov/11 09:16,14/Mar/19 02:47,29/Aug/09 20:54,configadmin-1.2.0,,,,,,,,,, configadmin-1.2.4,,,,Configuration Admin,,,,,,,0,,,,,,"An issue reported in FELIX-1146 and presumably fixed in configadmin 1.2.0 is not really fixed: With the fix for 1.2.0 in Rev. 805668 the window for the race condition is much smaller than before, but it still exists:

Consider this:

   T1. create and update configuration
            ConfigurationImpl.update persists configuration and sets field
            Thread preempted

   T2. ManagedServiceUpdate constructor reads configuration
            Uses configuration already persisted by T1 for update
            Schedules task to update service with the configuration

   T1. Runs again creating the UpdateConfiguration task with the
             configuration persisted earlier
             Schedules task to update service

   UpdateTask:
             updates ManagedService with configuration prepared by T2
             updates ManagedService with configuration prepared by T1

In this small window a race condition occurred, which caused the ManagedService to be supplied with the same configuration twice. It would have been ok for the ManagedService to first get null (for the service registration and configuration not available yet) and in a second call to get the configuration. But it is not ok to get the same configuration twice.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57484,,,Tue Sep 08 13:14:42 UTC 2009,,,,,,0|i0vytj:,184614,,,,,,,,"29/Aug/09 19:46;fmeschbe;Add lastModificationTime and lastUpdateTime fields to ensure only single update of configuration properties. From the concurrency notes in the ConfigurationImpl class:

     * This concurrency safety is implemented with the help of the
     * lastModificationTime field updated by the configure(Dictionary) method
     * when setting the properties field and the lastUpdatedTime field updated
     * in the Update Thread after calling the update(Dictionary) method of
     * the ManagedService[Factory] service.
     *
     * The UpdateConfiguration task compares the lastModificationTime to the
     * lastUpdateTime. If the configuration has been modified after being
     * updated the last time, it is updated in the ManagedService[Factory]. If
     * the configuration has already been updated since being modified (as in
     * the case above), the UpdateConfiguration thread does not call the update
     * method (but still sends the CM_UPDATED event).

Fixed in Rev. 809194",29/Aug/09 20:54;fmeschbe;Resolving this as fixed,08/Sep/09 13:14;fmeschbe;Released with configadmin 1.2.4,,,,,,,,,,,,,,,,,,,,,,,,
"[FileInstall] When removing/re-adding a bundle, all the dependent bundles don't start anymore",FELIX-1540,12434349,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,fdiotalevi,fdiotalevi,29/Aug/09 11:38,04/Sep/09 08:59,14/Mar/19 02:47,03/Sep/09 09:53,,,,,,,,,,,fileinstall-2.0.0,,,,File Install,,,,,,,0,,,,,,"I'm experiencing this bug (or missing features) in the trunk; it may be related to FELIX-1482. The same feature was present in all the previous versions of File Install.

I have 2 bundles in my ./load directory watched by File Install. 
-> bundle-a.jar        ACTIVE
-> bundle-b-that-depends-from-a.jar     ACTIVE

Now I remove bundle-a.jar, and remains only
-> bundle-b-that-depends-from-a.jar     INSTALLED

I now I copy bundle-a.jar in the ./load file (or any other bundle that satisfy bundle b dependencies), I expected both the bundles to be active, but I get
-> bundle-a.jar        ACTIVE
-> bundle-b-that-depends-from-a.jar     INSTALLED

So adding bundle-a does not start bundle-b-that-depends-from-a.jar 





",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-31 01:38:49.024,,,no_permission,,,,,,,,,,,57486,,,Fri Sep 04 08:59:49 UTC 2009,,,,,,0|i0vz7b:,184676,,,,,,,,"31/Aug/09 01:38;sahoo;This regression was introduced when FELIX-938 was fixed. In FELIX-1482, we discussed about this possibility.",31/Aug/09 06:25;gnt;I do think we need to start all bundles managed by fileinstall that are not persistently stopped (i.e. that were not explicitely stopped by the user).,"31/Aug/09 12:42;fdiotalevi;>I do think we need to start all bundles managed by fileinstall that are not persistently stopped

That's my point.

In my use case, I didn't stop  bundle-b-that-depends-from-a.jar , I just temporarily removed the bundle-a.jar.

Therefore I expect that when I reintroduce the bundle-a.jar in the watched folder, bundle-b-that-depends-from-a.jar is restarted.","03/Sep/09 09:53;gnt;URL: http://svn.apache.org/viewvc?rev=810854&view=rev
Log:
FELIX-1540:  [FileInstall] When removing/re-adding a bundle, all the dependent bundles don't start anymore

Modified:
   felix/trunk/fileinstall/src/main/java/org/apache/felix/fileinstall/DirectoryWatcher.java
   felix/trunk/fileinstall/src/main/java/org/apache/felix/fileinstall/FileInstall.java


It seems to now work much better. Can you try on your side ?","04/Sep/09 08:59;fdiotalevi;Works as expected.
Thanks!",,,,,,,,,,,,,,,,,,,,,,
generated-classes not included in bundle,FELIX-1539,12434342,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,djencks,djencks,29/Aug/09 08:35,24/Jun/11 12:36,14/Mar/19 02:47,16/Sep/09 10:16,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"We have a project using the xmlbeans-maven-plugin to generate some sources.  When I change the packaging type to bundle the generated-sources are still compiled into target/generated-classes/xmlbeans but they are not included in the jar.

An example of such a project is at https://svn.apache.org/repos/asf/geronimo/server/trunk/framework/modules/geronimo-service-builder.  The maven-bundle-plugin is configured in an ancestor pom so all you should need to do is change the packaging to bundle and look at the jar.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-29 08:52:25.418,,,no_permission,,,,,,,,,,,57487,,,Wed Sep 16 10:16:37 UTC 2009,,,,,,0|i0vy5r:,184507,,,,,,,,"29/Aug/09 08:52;mcculls;This is similar to the generated source issue - we need to discover all the attached directories (for both source and classes) using the Maven project API, rather than rely on the standard single source and single build output directory defined in the POM model.",03/Sep/09 02:15;mcculls;Fixed in trunk.,"07/Sep/09 00:22;djencks;The java classes from the xmlbeans plugin are now included, but not the binary files that get generated into target/generated-classes/xmlbeans/

e.g.

target/generated-classes/xmlbeans/schemaorg_apache_xmlbeans/system/s465C16165F2451560A5F5A06D89553B9/dependencieselement.xsb 

<peanut-gallery>
Personally I think that trying to duplicate the functionality of such a major maven component as the jar plugin in a third party non-maven-aware project such as bnd is doomed to failure.  I've never understood why the bundle plugin doesn't just specify what needs to get into the jar and add stuff to the manifest.
</peanut-gallery>","07/Sep/09 06:45;gnt;Well, you can use the maven bundle plugin to only generate the manifest metadata and tell the jar plugin to use this generated manifest.
That would solve your problem I guess.","10/Sep/09 10:03;mcculls;Sigh, I knew I should have retyped the explanation that disappeared when I had to log back in...

Anyway here goes - the Bnd tool used by the maven-bundle-plugin was specifically designed
so you could pull classes and resources into a bundle based on a selected set of packages.
It therefore does not simply zip up the contents of ""target/classes"" like the maven-jar-plugin.

However, we try to make it as easy as possible for people to migrate projects over to bundle
packaging. We turn resource settings into Include-Resource instructions, add dependencies
using Embed-Dependency (also updates the Bundle-ClassPath), and scan the local source
code to select a default set of packages.

All of which means it is now possible to take most Maven projects, flip the packaging from jar
to bundle, and have the same project but with OSGi metadata and added Bnd tool verification.

Unfortunately there will always be projects where this won't be be enough - for example for
xmlbean, we detect the generated source and generate the appropriate package defaults to
pull in the extra classes. But we miss the extra files under ""schemaorg_apache_xmlbeans""
because there's no correlation between their location and any specified package.

In such situations you need to add instructions (in this case Include-Resource) to tell Bnd
about these additional files. There's no other way it can find out about them - they're just an
arbitrary path under ""target/classes"".

We've also had this discussion many times in the past on the Felix lists (ie. should we just
grab everything under ""target/classes""?) and the consensus from the committers has been
that the bundleplugin should primarily behave like Bnd - ie. you could take your instructions
and use them with Bnd outside of Maven without too much trouble. In that regard we want
to keep using Bnd to generate the final bundle rather than just using jar.

But we also support people who do want to keep using the maven-jar-plugin - just use the
""bundle:manifest"" goal to generate the manifest, and configure the jarplugin to pick it up...

We could maybe make this easier to use (ie. another packaging type or a switch) so you
wouldn't need to add the extra build executions - anyone out there willing to come up with
a patch or even a suggested process?

In summary I'll mark this issue as resolved, as it is working as designed - you just need
an Include-Resource instruction to pull in the extra ""schemaorg_apache_xmlbeans"" files
","10/Sep/09 10:04;mcculls;As mentioned above, this is the expected behaviour.",16/Sep/09 10:15;mcculls;re-opening to reflect final resolution,"16/Sep/09 10:16;mcculls;Marking as fixed because classes from generated sources are now included, but we can't automatically capture random binary files",,,,,,,,,,,,,,,,,,,
[gogo] The ThreadIO implementation should use inheritable thread locals in case a command spawns a thread,FELIX-1536,12434241,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,28/Aug/09 06:26,29/Nov/13 14:24,14/Mar/19 02:47,28/Aug/09 06:40,,,,,,,,,,,gogo-0.2.0,,,,Gogo Runtime,,,,,,,0,,,,,,,,,,,,,,,,,,,,,FELIX-4336,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-24 16:17:45.011,,,no_permission,,,,,,,,,,,57490,,,Mon May 24 16:17:45 UTC 2010,,,,,,0|i0vytz:,184616,,,,,,,,"28/Aug/09 06:40;gnt;URL: http://svn.apache.org/viewvc?rev=808772&view=rev
",24/May/10 16:17;db82407;close issue prior to next release,,,,,,,,,,,,,,,,,,,,,,,,,
Permission is checked against the using bundle instead of the access control context (call stack),FELIX-1535,12434213,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,27/Aug/09 19:52,08/Sep/09 13:14,14/Mar/19 02:47,27/Aug/09 20:11,configadmin-1.2.0,,,,,,,,,, configadmin-1.2.4,,,,Configuration Admin,Specification compliance,,,,,,0,,,,,,"A bug in the ConfigAdmin permission checks been discovered in the final tests: Instead of checking the permission of the current access control context (call stack) the permissions are checked against the bundle using the ConfigurationAdmin service.

According to the JavaDoc the permissions must be checked against the caller.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57491,,,Tue Sep 08 13:14:59 UTC 2009,,,,,,0|i0w0u7:,184941,,,,,,,,27/Aug/09 20:11;fmeschbe;Modified permission checking in Rev. 808595 to use SecurityManager.checkPermission instead of Bundle.hasPermission.,"29/Aug/09 20:27;fmeschbe;release 1.2.2 failed, retargeting this issue for the 1.2.4 release.",08/Sep/09 13:14;fmeschbe;Released with configadmin 1.2.4,,,,,,,,,,,,,,,,,,,,,,,,
Potential deadlock when stopping the underlying OSGi framework,FELIX-1533,12434149,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,clement.escoffier,clement.escoffier,27/Aug/09 11:32,25/Apr/10 14:40,14/Mar/19 02:47,27/Aug/09 11:49,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,0,,,,,,"When, the OSGi framework is stopping, iPOJO stops managing all the managed bundles. During this phase, there is a potential deadlock in the extender. ",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57493,,,Thu Aug 27 11:49:46 UTC 2009,,,,,,0|i0vzfr:,184714,,,,,,,,"27/Aug/09 11:49;clement.escoffier;Fixed at revision 808377
Avoid holding the lock on the Extender object when closing the management of the leaving / stopping bundle.",,,,,,,,,,,,,,,,,,,,,,,,,,
Mandatory directive is ignored on the Export-Package when it comes to resolve the bundles,FELIX-1531,12434105,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,hehe,hehe,26/Aug/09 21:30,01/Apr/10 11:48,14/Mar/19 02:47,02/Mar/10 15:06,bundlerepository-1.4.3,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"When I try to resolve a bundle (bundleFooImport.jar) with the following manifest:
Import-Package: a.b.c;company=foo

In the bundle repository, I have a bundle (bundleFoo.jar) with the following manifest:
Export-Package:a.b.c;version=3;company=foo;security=true;mandatory:=""company,security""

The repository.xml for the bundleFoo.jar 

<capability name='package'>
      <p n='company' v='foo'/>
        <p n='mandatory:' t='set' v='company,security'/>
      <p n='package' v='a.b.c'/>
      <p n='security' v='true'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>

For some reason, the felix resolve resolves the bundleFooImport.jar with bundle bundleFoo.jar, which is wrong. According to the osgi specification, bundleFoo.jar bundle insists the bundle imports specifying company and security attributes, which was not the case of bundleFooImport.jar. Clearly, the felix implementation of the mandatory directive is NOT correct.

Please let me know if you need any more details.
Thanks
Hehe",not applicable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-27 01:51:47.97,,,no_permission,,,,,,,,,,,57495,,,Tue Mar 02 22:38:01 UTC 2010,,,,,,0|i0vyu7:,184617,,,,,,,,"27/Aug/09 01:51;rickhall;You are talking about resolving with OBR, not Felix, correct? The Felix framework should resolve this correctly, but OBR will not since handling directives is not fully supported.","02/Mar/10 15:06;gnt;URL: http://svn.apache.org/viewvc?rev=918062&view=rev

Note that the maven bundle plugin currently generates wrong packages capabilities, see FELIX-2155","02/Mar/10 16:51;rickhall;Looking at the patch for this, I was wondering why the following was necessary:

     public synchronized boolean isSatisfied(Capability capability)
     {
-        return m_name.equals(capability.getName()) && m_filter.matchCase(capability.getProperties());
+        return m_name.equals(capability.getName()) && m_filter.matchCase(capability.getProperties())
+                && (m_filter.toString().indexOf(""(mandatory:<*"") >= 0 || capability.getProperties().get(""mandatory:"") == null);
     }

I have actually solved this differently in the new resolver, but I was having a debate with Peter Kriens about this and I think this might be related. Could you explain the need for the above (i.e., why was the original code sufficient)? Thanks.","02/Mar/10 17:02;gnt;Well, just remove that bit of code and run the tests.  They'll fail.
","02/Mar/10 17:07;rickhall;Well, I assumed that. I just thought you could describe why, since you fixed it, but yeah I can just look into it myself.","02/Mar/10 18:02;rickhall;Ok, I looked into it and I realize what is going wrong. Peter's approach to mandatory attributes requires that all filters include a subset check on ""mandatory:"" otherwise they will falsely match capabilities with mandatory attributes. Since the test repository didn't include such a check, it was matching when it shouldn't have been.

Ultimately, this is why I think Peter's approach is flawed since we cannot assume people will always obey this rule. In the new framework resolver I avoid this situation by doing the mandatory check in the filter implementation.","02/Mar/10 22:20;gnt;You're right.  And sorry about not describing the behavior, I did not meant to be harsh.

I agree that the current approach is flawed, but I think I also understand why it was taken.  The main reason (I think) is that in the repository xml, we don't have the full manifest header for the imported packages, we only have a filter.    The meaning of the mandatory directive is to ensure that any attribute marked as mandatory will be requested by the importer.  This implies  that to be able to satisfy the mandatory directive, we'd have to understand what the filter means and how it is composed.
I think that's way easier in your case because you don't have a real filter, you actually build it from the manifest in a way where verifying that the attribute is requested is actually easily doable.

I originally wanted to modify the filter to add the missing clause, i.e. in case where the mandatory directive isn't verified, build a new filter like:
   (&(old-filter)(!(mandatory:=*)))
but modifying the filter did not really sound a good idea is I did not want to make that visible to the user.

It may be possible to actually verify if the filter includes tests on the mandatory attributes, but at the end if would still make some assumption about how the filter has been generated.  

So we have multiple ways to solve the problem imho:
  * keep the current hack (i.e. either the filter test the mandatory attribtues or there are no mandatory attributes)
  * modify bindex / maven bundle plugin to add the missing clause for testing there are no mandatory attributes
  * try to verify that the filter includes tests on all mandatory attributes

I don't have a strong opinion for any solution.  I just thought the first one would minimize the overhead at runtime.","02/Mar/10 22:38;rickhall;I understand why Peter chose that approach too, but I just don't really like it due to these sorts of issues. However, your assumption about the new resolver approach is incorrect. One of the main goals for the new resolver (besides improving performance on some of the ""worst case"" scenarios) is to adopt the generic capability/requirement model of OBR. So, the new framework resolver relies on filters, not on parsed manifest headers. Where Peter chose to implement new operators in his filter impl, I chose to make my filter impl understand the mandatory directive. That's the difference.

For the current situation, I think your hack is the best we can do. In the long term, my goal is to use the new resolver for OBR, which would mean changing the way OBR deals with directives (i.e., they shouldn't be attributes named with "":"" but should be handled separately) and using my filter implementation.
",,,,,,,,,,,,,,,,,,,
R4.2 spec errata now specifies uninstalling a bundle must transition through INSTALLED on its way to UNINSTALLED,FELIX-1527,12433969,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,25/Aug/09 18:44,25/Aug/09 18:47,14/Mar/19 02:47,25/Aug/09 18:47,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"The R4.2 spec errata has re-defined the bundle life cycle transition from RESOLVED->UNINSTALLED to be RESOLVED->INSTALLED->UNINSTALLED. This caused issues for things like the BundleTracker, since the bundle state of bundles during the UNRESOLVED event in Felix were UNINSTALLED, while in Equinox they were INSTALLED.

I am not completely happy about this spec change, since ultimately it boiled down to the need for an UNRESOLVING event, but this could not be added in an errata. Consequently, the life cycle transitions were changed to spec consistent behavior.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57499,,,Tue Aug 25 18:47:51 UTC 2009,,,,,,0|i0w0pj:,184920,,,,,,,,"25/Aug/09 18:47;rickhall;Committed a patch for this, now Felix passes the BundleTracker TCK. Unfortunately, the fix requires us to now hold the bundle lock while firing the UNRESOLVED event.",,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] <> evaluates the command too many times ,FELIX-1520,12433823,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,24/Aug/09 07:07,24/May/10 16:17,14/Mar/19 02:47,25/Aug/09 06:28,,,,,,,,,,,gogo-0.2.0,,,,Gogo Runtime,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,24/Aug/09 07:09;gnt;FELIX-1520.patch;https://issues.apache.org/jira/secure/attachment/12417444/FELIX-1520.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-05-24 16:17:44.678,,,no_permission,,,,,,,,,,,57506,,,Mon May 24 16:17:44 UTC 2010,,,,,,0|i140rr:,231587,,,,,,,,"25/Aug/09 06:28;gnt;URL: http://svn.apache.org/viewvc?rev=807496&view=rev
Log:
FELIX-1520: <> evaluated the command too many times

Modified:
   felix/trunk/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/shell/Closure.java
   felix/trunk/gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/shell/TestParser.java
",24/May/10 16:17;db82407;close issue prior to next release,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf integration tests fail in gshell core,FELIX-1511,12433587,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,,tmoloney,tmoloney,20/Aug/09 17:23,02/May/13 02:29,14/Mar/19 02:47,26/Aug/09 01:49,,,,,,,,,,,,,,,Karaf,,,,,,,0,,,,,,"The Karaf reactor build fails with the following.

Failed tests: 
testInstallCommand [equinox](org.apache.felix.karaf.gshell.itests.CoreTest)
Tests run: 3, Failures: 1, Errors: 0, Skipped: 0

-------------------------------------------------------------------------------
Test set: org.apache.felix.karaf.gshell.itests.CoreTest
-------------------------------------------------------------------------------
Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 17.389 sec <<< FAILURE!
testInstallCommand [equinox](org.apache.felix.karaf.gshell.itests.CoreTest)  Time elapsed: 7.81 sec  <<< FAILURE!
java.lang.AssertionError: command should not exist
	at org.junit.Assert.fail(Assert.java:74)
	at org.apache.felix.karaf.gshell.itests.CoreTest.testInstallCommand(CoreTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	...
",,,,,,,,,,,,,,,,,,FELIX-1325,,20/Aug/09 17:45;tmoloney;FELIX-1511-iTestsGshellCore.patch;https://issues.apache.org/jira/secure/attachment/12417155/FELIX-1511-iTestsGshellCore.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-25 06:46:18.356,,,no_permission,,,,,,,,,,,57515,,,Wed Aug 26 01:49:26 UTC 2009,,,,,,0|i1asen:,271068,,,,,,,,"20/Aug/09 17:27;tmoloney;FELIX-1511-iTestsGshellCore.patch makes the test call a command that does not exist.
","20/Aug/09 17:45;tmoloney;Oops.  I completely misunderstood the test.

This updated FELIX-1511-iTestsGshellCore.patch is only temporary until FELIX-1325 is fixed.
","25/Aug/09 06:46;gnt;FELIX-1325 has not be applied, so I think we can close this issue, right ?","26/Aug/09 01:49;tmoloney;After a fresh checkout of the trunk (rev 807859), I was still seeing the problem.

However, after I deleted my local maven repository, all built well.
",,,,,,,,,,,,,,,,,,,,,,,
Configuration.update() must not send CM_UPDATED event,FELIX-1508,12433536,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,20/Aug/09 06:24,25/Aug/09 08:09,14/Mar/19 02:47,20/Aug/09 06:29,configadmin-1.0.10,,,,,,,,,,configadmin-1.2.0,,,,Configuration Admin,Specification compliance,,,,,,0,,,,,,The Configuration.update() method should just cause any configuration client (ManagedService or ManagedServiceFactory) to be updated with the current configuration. A CM_UDPATE event must not be sent in this case. [ Unlike the Configuration.update(Dictionary) which causes the CM_UPDATED event to be sent. ],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57518,,,Tue Aug 25 08:09:17 UTC 2009,,,,,,0|i140xj:,231613,,,,,,,,20/Aug/09 06:29;fmeschbe;Fixed in Rev. 806062 indicating to the ConfigurationManager whether the CM_UPDATED event must be fired after the update or not.,25/Aug/09 08:09;fmeschbe;Close all issues now this version has been released,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] can't call methods in Class class,FELIX-1506,12433505,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,19/Aug/09 20:34,30/Sep/09 21:39,14/Mar/19 02:47,19/Aug/09 21:17,,,,,,,,,,,gogo-0.2.0,,,,Gogo Runtime,,,,,,,0,,,,,,"Before gogo was in SVN, I added a fix so that static methods could be called.

However, this stops methods on the Class class from being called and prevents Peter Kriens 'help' closure from working:

help = { each <<$0 class> declaredMethods> {$it name}}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57520,,,Wed Aug 19 21:17:40 UTC 2009,,,,,,0|i1asfb:,271071,,,,,,,,"19/Aug/09 21:17;db82407;test for static method call; otherwise default to previous action that allows methods on Class class.

Perer's help closure now works:

karaf@root> help = { each <<$0 class> declaredMethods> { echo <$it name>}}
org.apache.felix.gogo.runtime.shell.Closure@d1afb9

karaf@root> help <bundle 0>
toString
getProperty
access$100
access$000
access$200
init
start
",,,,,,,,,,,,,,,,,,,,,,,,,,
ComponentInstance implementation is reused accross reactivations,FELIX-1504,12433462,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,19/Aug/09 13:50,08/Dec/09 15:49,14/Mar/19 02:47,21/Aug/09 11:45,scr-1.0.0,scr-1.0.2,scr-1.0.4,scr-1.0.6,scr-1.0.8,,,,,,scr-1.2.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"According to the specification of the ComponentInstance interface, instances of this interface must not be reused after a component instance has been deactivated.

Currently, the ComponentInstance interface is implemented by the AbstractComponentManager class and thus is not replaced after the reactivation of a component.

The implementation of the ComponentInstance interface has to be refactored to reflect the life cycle of the actual component object (the object returned from ComponentInstance.getInstance().",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57522,,,Tue Dec 08 15:49:27 UTC 2009,,,,,,0|i0vz3b:,184658,,,,,,,,"21/Aug/09 11:45;fmeschbe;In Rev. 806106 ""moved"" the ""official"" implementation of the ComponentInstance interface to the ComponentContextImpl class. Instances of this class are recreated whenever the component is activated. This ensures the ComponentInstance contract which has the same lifecycle requirement as the ComponentContext.",08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Component Factory instances are not let gone after dispose,FELIX-1503,12433459,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,19/Aug/09 13:37,08/Dec/09 15:49,14/Mar/19 02:47,29/Oct/09 09:15,scr-1.0.6,scr-1.0.8,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Component factory instances retrieved with ComponentFactory.newInstance(Dictionary) are not removed from the internal maintenance data structure. In the longer run, this prevents the components from being garbage collected and eat up all memory.

At one time we had a situation of 700'000 disposed ImmediateComponentManager instances kept in the ComponentFactory internal map....",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57523,,,Tue Dec 08 15:49:27 UTC 2009,,,,,,0|i0vyuf:,184618,,,,,,,,"21/Aug/09 11:18;fmeschbe;Actually in the refactored implementation of configuration handling (using ComponentHolder and implementations), this problem also applies to component instances created on behalf of factory configurations.",11/Oct/09 08:39;fmeschbe;In Rev. 806511 added functionality for the components to inform their holders that they have been disposed off.,29/Oct/09 09:15;fmeschbe;This issue has actually been resolved.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,
"Importing, exporting and including (private-package) a package in a bundle confuses sigil resolver",FELIX-1502,12433433,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,davemssavage,davemssavage,19/Aug/09 08:33,02/Mar/10 12:36,14/Mar/19 02:47,02/Mar/10 12:24,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"Consider the following use case:

Bundle foo provides package org.foo
Bundle bar wants to import org.foo but also include it in it's bundle classpath such that it can be installed without foo, it should therefore also export org.foo to preserve the classspace should foo and bar be installed in the same jvm

Unfortunately this confuses the sigil resolver which now thinks that bar contains the packages org.foo (as it is exporting them) when at compile time it should pull in bundle foo to satisfy the classes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57524,,,Tue Mar 02 12:36:24 UTC 2010,,,,,,0|i1asfr:,271073,,,,,,,,02/Mar/10 12:24;davemssavage;Workspace repository now filters package exports during compile time resolution to ensure that projects are not supplied as providers of capabilities that are not available from the source code - avoids messy compile time errors when a project is added as a provider of classes which it doesn't contain until after build time,02/Mar/10 12:36;davemssavage;Mark issues raised by me as closed,,,,,,,,,,,,,,,,,,,,,,,,,
Using a macro in Bundle-Version with the manifest goal causes garbage in the Export-Package and Private-Package headers.,FELIX-1501,12433380,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,ericeberry,ericeberry,18/Aug/09 21:16,24/Jun/11 12:36,14/Mar/19 02:47,02/Sep/09 22:08,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,," If you put in the following macro (in either the bnd file or the maven pom) and use the manifest goal:

Bundle-Version:
$(version;===;$(replace;1.2.0-SNAPSHOT;-;.)).r1038-1250526024897
Export-Package: *
Private-Package: *

The bnd tool is placing the macro string into Export-Package and
Private-Package properties rather than performing the macro
calculation
first and then inserting the result into the Export-Package and
Private-Package.  What you get out is this:

Export-Package: com.blah.blah;version=""$(version;===;$(replace;1.2.0-SN
APSHOT;-;.)).r1038-1250136103669""
Private-Package: .;version=""$(version;===;$(replace;1.2.0-SNAPSHOT;-;.
)).r1038-1250136103669""
Bundle-Version: 1.2.0.r1038-1250136103669
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-02 22:08:17.616,,,no_permission,,,,,,,,,,,57525,,,Wed Sep 02 22:08:17 UTC 2009,,,,,,0|i0vy5b:,184505,,,,,,,,02/Sep/09 22:08;mcculls;Fixed in trunk (r810711) will be in the forthcoming 2.0.1 release.,,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO Web Console plugin NPE when the service reference list is null,FELIX-1497,12433324,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,18/Aug/09 12:18,04/Feb/13 12:33,14/Mar/19 02:47,18/Aug/09 12:20,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,0,,,,,,"When the matching service reference or when the used service reference is null, the plugin throws a NPE.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57528,,,Tue Aug 18 12:20:20 UTC 2009,,,,,,0|i0vqyf:,183340,,,,,,,,"18/Aug/09 12:20;clement.escoffier;Fix at r. 805383
Just check if the lists were null before using them.
",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in WorkspaceRepository if sigil.properties file is malformed,FELIX-1496,12433322,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,18/Aug/09 11:22,18/Aug/09 11:29,14/Mar/19 02:47,18/Aug/09 11:29,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"Stack trace from codecauldron code but problem exists also on apache source

Caused by: java.lang.NullPointerException
        at org.cauldron.sigil.repository.AbstractBundleRepository$3.visit(AbstractBundleRepository.java:143)
        at org.cauldron.sigil.internal.repository.eclipse.WorkspaceRepository.accept(WorkspaceRepository.java:60)
        at org.cauldron.sigil.repository.AbstractBundleRepository.findAllProviders(AbstractBundleRepository.java:160)
        at org.cauldron.bld.core.repository.BundleResolver.findProviders(BundleResolver.java:391)
        at org.cauldron.bld.core.repository.BundleResolver.findProvidersAtPriority(BundleResolver.java:380)
        at org.cauldron.bld.core.repository.BundleResolver.resolveRequirement(BundleResolver.java:338)
        at org.cauldron.bld.core.repository.BundleResolver.resolveCompound(BundleResolver.java:313)
        at org.cauldron.bld.core.repository.BundleResolver.resolveElement(BundleResolver.java:305)
        at org.cauldron.bld.core.repository.BundleResolver.resolveCompound(BundleResolver.java:318)
        at org.cauldron.bld.core.repository.BundleResolver.resolveElement(BundleResolver.java:305)
        at org.cauldron.bld.core.repository.BundleResolver.resolveCompound(BundleResolver.java:318)
        at org.cauldron.bld.core.repository.BundleResolver.resolveElement(BundleResolver.java:305)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57529,,,2009-08-18 11:22:42.0,,,,,,0|i0vywv:,184629,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New Configurations must still be delivered to ManagedService,FELIX-1489,12433193,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,16/Aug/09 18:49,25/Aug/09 08:09,14/Mar/19 02:47,20/Aug/09 08:19,configadmin-1.0.10,,,,,,,,,,configadmin-1.2.0,,,,Configuration Admin,Specification compliance,,,,,,0,,,,,,When a new configuration object is created with ConfigurationAdmin.getConfiguration it is immediately persisted but has no properties yet. Such configurations must still be provided to ManagedService service upon their registration. [ Of course such configurations will not be submitted to already registered ManagedService services as explicitly stated by the specification ].,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57535,,,Tue Aug 25 08:09:17 UTC 2009,,,,,,0|i0w0o7:,184914,,,,,,,,"16/Aug/09 18:50;fmeschbe;Rev. 804743 fixes this issue by removing an ""isNew()"" check preventing the distribution of new configurations to registering ManagedService services.",16/Aug/09 18:52;fmeschbe;Added test in Rev. 804744,20/Aug/09 08:19;fmeschbe;This issue has been resolved and can be closed.,25/Aug/09 08:09;fmeschbe;Close all issues now this version has been released,,,,,,,,,,,,,,,,,,,,,,,
Configuration binding is broken,FELIX-1488,12433188,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,16/Aug/09 17:07,19/Jul/17 19:45,14/Mar/19 02:47,20/Aug/09 10:26,configadmin-1.0.10,,,,,,,,,,configadmin-1.2.0,,,,Configuration Admin,,,,,,,0,,,,,,"Configuration can be statically or dynamically bound:

 * A configuration is statically bound by explicitly calling the Configuration.setBundleLocation method or
    by creating the configuration object with a non-null bundle location. Static binding must be persisted and
    is only reset by explicitly calling the setBundleLocation with a null argument.

 * A configuration may dynamically bound if the configuration has been created with a null bundle location and
    the setBundleLocation has not been called (or called with a null argument). If such an unbound configuration
    is provided to a ManagedService[Factory] it is dynamically bound to the service's bundle. Such bundle
    binding is not persisted.

The reason why dynamic binding need not be persisted is actually an implementation detail because we keep used configurations in an internal cache. Entries in the cache are only removed if the configuration is deleted or if the configuration admin service is stopped. In the first case, bundle binding is lost anyway. In the second case dynamic bundle bindings will be recreated on configuration admin service restart when the configurations are supplied to ManagedService[Factory] services again.",,,,,,,,,,,,,,FELIX-1484,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-07-19 19:45:44.569,,,no_permission,,,,,,,,,,,57536,,,Wed Jul 19 19:45:44 UTC 2017,,,,,,0|i0vywf:,184627,,,,,,,,"16/Aug/09 18:30;fmeschbe;Changing this issue to reflect the currently broken configuration binding support: All bindings are persisted and thus static. This makes handling of bundle uninstallations while the Configuration Admin service is not running more complicated (see FELIX-1484).

This updated bug description will overcome this issue.","16/Aug/09 18:40;fmeschbe;Applied a fix in Rev. 804740:

  * configuration (and factory) binding is only persisted if statically bound
  * bundle uninstallation only considers dynamic binding, which is in the cache only (this makes this update easier)",16/Aug/09 18:52;fmeschbe;Added test in Rev. 804744,"17/Aug/09 07:56;fmeschbe;There is use case not convered by just transiently keeping the dynamic bindings:

  1. create configuration pid1
  2. start bundle b1 with managed service pid1

  ==> configuration is provided to managed service and bound to b1

  3. stop bundle b1

  ==> configuration is still bound to b1

  4. restart configuration admin service

  ==> configuration must still be bound to b1

Hence the dynamic bindings must also be persisted to survice configuration admin restarts. To facilitate the management of the dynamic bindings we do not store them inside the configuration objects but separately. This allows for simpler cleanup on configuration admin restart (i.e. not requiring to load and verify all configurations).

Implemented storage of dynamic bindings (outside of the actual configuration) along with unit and integration tests in Rev. 804891","17/Aug/09 10:03;fmeschbe;Revisions 804915 and 804916 fix an issue with incorrectly setting the staticallyBound flag: If the bundle location is statically set to null, the flag must be set to false, such that dynamic binding may occurr later when assigning the configuration to a ManagedService.

The test case is test_create_with_location_unbind_before_service_supply:

         1. create Configuration with pid and non-null location.
         2. update the configuration with non-null props.
         3. set location of the configuration to null.
         4. bundleA registers a ManagedService service with the pid.
","19/Aug/09 05:59;fmeschbe;We have  another failure with configuration binding:

   1. create configuration pid with non-null location
   2. register ManagedService with pid from the bundle with said location
   3. Call Configuration.setBundleLocation(null) on the configuration
   ==> configuration must still be dynamically bound to location

The current implementation (before Rev. 805667)  didn't handle this use case correctly and did not leave the dynamic binding of the configuration thus completely unbinding the configuration.

In Rev. 805667 I have applied a refactoring for this use case: bindings are now kept in two fields, one for dynamic binding and one for static binding. If the dynamic binding field is set, it takes precedence. If the dynamic field is set it is equal to the static binding field value unless the static binding field is null.

In Rev. 805668 the ConfigurationManager class has been adapted to the new binding field management API.

Testcases for this have already been commited with Rev. 805666.","19/Aug/09 06:06;fmeschbe;One further case remains to be discussed and implemented:

   1. create config with pid and locationA
   2. update config with properties
   3. register ManagedService ms1 with pid from said locationA
   ==> configuration supplied to the service ms1
   4. register ManagedService ms2 with pid from locationB
   ==> configuration not supplied to service ms2
   4. Call Configuration.setBundleLocation( ""locationB"" )

A slight variation of this use case exhibits the same problem:

   1. create config with pid with null location
   2. update config with properties
   3. register ManagedService ms1 with pid from locationA
   ==> configuration supplied to the service ms1
   ==> configuration is dynamically bound to locationA
   4. register ManagedService ms2 with pid from locationB
   ==> configuration not supplied to service ms2
   5. Call Configuration.setBundleLocation( ""locationB"" )


It is unclear from the spec, what should happen after setting the new (static) bundle location. Ikuo Yamasaki proposes two options:

   Option A: nothing happens
   Option B: configuration is removed from ms1 and supplied to ms2

Option A is currently implemented (as of Rev. 805668), while I agree with Ikuo that Option B probably makes more sense.

I start implementing Option B.","19/Aug/09 09:40;fmeschbe;Implemented Option B of the last use case along with test cases in Rev. 805716.

(this can easily be removed again, should it be decided that Option B is not correct)","19/Aug/09 12:39;fmeschbe;In Rev. 805776 added support for another use case related to the above replacement:

  1. Create configuration pid1 with null location and set properties
  2. Install bundle locationA with ManagedServiceA pid1
  3. Install bundle locationB with ManagedServiceB pid1
  4. Uninstall bundle locationA
  ==> configuration to be assigned to locationB/pid1 service

Also includes integration tests and fixes of existing test cases which do not expect this functionality yet","20/Aug/09 08:14;fmeschbe;In Rev. 806074/806078 (integration tests) and 806075 (implementation) I disabled the automatic reassignment of configurations if the static bundle location is set to a different location.

For the integration tests, the code is guarded by a switch to change either one or the other expected behaviour of reassignment.

For the implementation the main reassignment code has just been commented out.

In Rev. 806083 I added the removal of dynamic bundle location binding if the static locaiton is set to a location different than the current dynamic binding.","20/Aug/09 10:26;fmeschbe;After much back and forth, it looks like we now reached kind of a consensus (for the short-term) with respect to configuration binding:

Calling Configuration.setBundleLocation() does not cause any bound configuration to be unbound. Neither are configurations newly bound due to this.

On the other hand further configuration updates will be sent out according to the bundle location set. Any dynamic configuration binding prevalent to calling setBundleLocation() is dropped (unless of course the dynamic binding is the same as the new static binding).

So, it is confimed the current trunk state implements this as agreed upon and I close this issue.",25/Aug/09 08:09;fmeschbe;Close all issues now this version has been released,"19/Jul/17 19:45;githubbot;GitHub user drewbrokke opened a pull request:

    https://github.com/apache/felix/pull/113

    Fixes regression caused by FELIX-1488

    If one of the three calls inside of the `delete()` method throws an exception, the `isDeleted` field remains true, which causes some unexpected `IllegalStateException`s. 
    
    Before the field was introduced, whenever the `isDeleted()` method was called it would invoke `getPersistenceManager()`, which would then use the local persistence manager to actually check to see if the configuration had been removed from the persistence.
    
    Now the boolean field is being set before any persistence calls actually happen, which is a problem if any of the calls throw.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/drewbrokke/felix patch-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/113.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #113
    
----
commit 25260a6b84438722de67b688b1af8713dcabe13a
Author: Drew Brokke <drew.brokke@liferay.com>
Date:   2017-07-19T19:38:27Z

    Fixes regression caused by FELIX-1488
    
    If one of the three calls inside of the `delete()` method throws an exception, the `isDeleted` field remains true, which causes some unexpected `IllegalStateException`s. 
    
    Before the field was introduced, whenever the `isDeleted()` method was called it would invoke `getPersistenceManager()`, which would then use the local persistence manager to actually check to see if the configuration had been removed from the persistence.
    
    Now the boolean field is being set before any persistence calls actually happen, which is a problem if any of the calls throw.

----
",,,,,,,,,,,,,,
Multiple PIDs must be supported,FELIX-1486,12433146,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,iyamasaki,iyamasaki,15/Aug/09 09:08,25/Aug/09 08:09,14/Mar/19 02:47,17/Aug/09 10:14,configadmin-1.0.10,,,,,,,,,,configadmin-1.2.0,,,,Configuration Admin,Specification compliance,,,,,,0,,,,,,"From R4.2,
- core spec explicitly says SERVICE_PID can be multiple (array or
collections).
- cmpn spec explicitly says ManagedService can have multiple PIDs.

Unfortunately, Felix impl doesn't handle multiple pids properly.
(Felix and I had agreeed that it is a bug.)

I had added some tests into my tests for OSGi-A CT of cm, although I didn't release it to OSGi SVN
yet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-16 18:43:54.315,,,no_permission,,,,,,,,,,,57538,,,Tue Aug 25 08:09:16 UTC 2009,,,,,,0|i0w1mn:,185069,,,,,,,,16/Aug/09 18:43;fmeschbe;Implemented support for multi-value PIDs in Rev. 804741.,16/Aug/09 18:52;fmeschbe;Added test in Rev. 804744,"17/Aug/09 10:14;fmeschbe;Ikuo Yamasaki confirmed working implementation (Thanks).

Therefore resolving this issue.",25/Aug/09 08:09;fmeschbe;Close all issues now this version has been released,,,,,,,,,,,,,,,,,,,,,,,
Dynamically bound configuration must be reset to null after target bundle is uninstalled.,FELIX-1484,12433067,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,iyamasaki,iyamasaki,14/Aug/09 11:38,17/Aug/09 10:13,14/Mar/19 02:47,17/Aug/09 10:13,configadmin-1.0.10,,,,,,,,,,configadmin-1.2.0,,,,Configuration Admin,,,,,,,0,,,,,,"1. create a configuration with pid1 and null location.
2. bundleA, who has locationA, registers ManagedService with pid1.
3. Then the configuration MUST be ""dynamically bound"" to bundleA, where the
location of the configuration is set to locationA.

Here, If bundleA is uninstalled, the configuration MUST be unbound again; the
location of the configuration MUST be set to null again.

See 104.4.1 Location Binding in R4.2 cmpn
----
A null location parameter may be used to create Configuration objects that
are not bound. In this case, the objects become bound to a specific location
the first time that they are used by a bundle. When this dynamically bound
bundle is subsequently uninstalled, the Configuration object's bundle
location
must be set to null again so it can be bound again later.
----

However, the location still keeps bundleA in Felix Cm impl.
That seems a bug.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-14 12:51:35.562,,,no_permission,,,,,,,,,,,57540,,,Mon Aug 17 10:13:50 UTC 2009,,,,,,0|i0w1cf:,185023,,,,,,,,"14/Aug/09 12:51;fmeschbe;Thanks for reporting this bug, will make up a fix soon.","14/Aug/09 15:36;fmeschbe;Added integration test ensuring bundle location is cleared after the owning bundle has been uninstalled in Rev. 804262.

Running this test on trunk shows, that this feature correctly works.",14/Aug/09 15:39;fmeschbe;Also running configadmin 1.0.10 seems to indicate this works corretly.,"15/Aug/09 05:14;fmeschbe;I could reproduce the problem with these steps:

  * install test bundle
  * configure test bundle
  * stop configuration admin service
  * uninstall test bundle
  * start configuration admin service

==> configuration is still bound to the uninstalled bundle","15/Aug/09 06:33;iyamasaki;I had discuss this with Felix offline and I found that my test code was not
proper: my code didn't wait after uninstallation. It should have wait for a
while because cm impl may use not SynchronousBundleListener but also
BundleListener.

However, as Felix posted, he found another related bug. 
I had added the test case for OSGi-A's CT reproducing it and confirmed that felix cm impl has a
bug.",16/Aug/09 18:31;fmeschbe;This is issue is resolved as part of FELIX-1488.,17/Aug/09 10:13;fmeschbe;Closing this fixed. The actual implementation of fixing this is tracked in FELIX-1488,,,,,,,,,,,,,,,,,,,,
"When performing variable substitution, fileinstall throws an exception if there is a start or stop delimiter without the other one",FELIX-1481,12432945,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,13/Aug/09 06:54,08/Sep/09 13:19,14/Mar/19 02:47,14/Aug/09 07:13,,,,,,,,,,,fileinstall-2.0.0,,,,File Install,,,,,,,0,,,,,,"This is a real problem as there is no way to escape the delimiters currently.
I think silently discard any malformed substitution would be much better, else any value containing a '}' will cause the config to not be loaded at all.",,,,,,,,,,,,,,,,,,,,13/Aug/09 08:49;gnt;FELIX-1481.patch;https://issues.apache.org/jira/secure/attachment/12416417/FELIX-1481.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-13 14:03:42.578,,,no_permission,,,,,,,,,,,57543,,,Fri Aug 14 07:13:46 UTC 2009,,,,,,0|i0vyxb:,184631,,,,,,,,"13/Aug/09 06:55;gnt;I propose the following patch:

--- a/fileinstall/src/main/java/org/apache/felix/fileinstall/util/Util.java
+++ b/fileinstall/src/main/java/org/apache/felix/fileinstall/util/Util.java
@@ -111,16 +111,10 @@ public class Util
 
         // If we do not have a start or stop delimiter, then just
         // return the existing value.
-        if ((startDelim < 0) && (stopDelim < 0))
+        if ((startDelim < 0) || (stopDelim < 0))
         {
             return val;
         }
-        // At this point, we found a stop delimiter without a start,
-        // so throw an exception.
-        else if (((startDelim < 0) || (startDelim > stopDelim)) && (stopDelim >= 0))
-        {
-            throw new IllegalArgumentException(""stop delimiter with no start delimiter: "" + val);
-        }
 
         // At this point, we have found a variable placeholder so
         // we must perform a variable substitution on it.
","13/Aug/09 07:00;gnt;In addition, I think fileinstall is 1.4 compatible, so we could change the whole substition code with something derived from:

            Matcher matcher = Pattern.compile(""\\$\\{([^}]+)\\}"").matcher(val);
            while (matcher.find()) {
                String rep = System.getProperty(matcher.group(1));
                if (rep != null) {
                    val = val.replace(matcher.group(0), rep);
                    matcher.reset(val);
                }
            }
",13/Aug/09 08:49;gnt;Attached is a patch against trunk i'll apply soon if there's no objections.,"13/Aug/09 14:03;rickhall;I don't think the pattern matcher you mention would work, because I don't think it handles nesting like the current code does, e.g., ""${jre-${java.specification.version}}"". It is necessary to start at the innermost match.

However, I think not throwing an exception for unmatched delimiters is probably fine.","14/Aug/09 06:48;gnt;RIght, I spotted that after posting my comment.
Not throwing an exception is imho a requirement, as i have some config values which include some { } without the $, so those cause failures.","14/Aug/09 07:13;gnt;URL: http://svn.apache.org/viewvc?rev=804096&view=rev
",,,,,,,,,,,,,,,,,,,,,
Security errors accessing configurations in the file system,FELIX-1479,12432905,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,12/Aug/09 18:30,25/Aug/09 08:09,14/Mar/19 02:47,17/Aug/09 10:16,configadmin-1.0.10,,,,,,,,,,configadmin-1.2.0,,,,Configuration Admin,,,,,,,0,,,,,,"When the FilePersistenceManager is trying to access the configuration files it currently does this in the security context of the calling bundle. If the calling bundle does not have file access permissions, this access fails (unexpectedly).

The fix is to ensure running in doPrivileged using the configuration admin bundle's security context to access the files.

More informations from the original reporter:


There seems no test of that SecurityException is thrown because
a configuring bundle CB does not have appropriate Permission to call
ConfigurationAdmin#getConfiguration(pid,location).

# In testGetConfigurationWithLocation(), CB can get a Configuration
# objects because it has AllPermission.

As far as I see, felix cm impl has a bug if the Java Runtime supports
security. In my test, the following Exception is thrown. (

Currently, the CB fails to get a Configuration. The reason is CB has no
permission to access a file FilePersistenceManager handles.
""doPriviledge"" in seems required to avoid it.


----
locations[0]=C:\ws\OSGiSVN\cnf\repo\osgi.cmpn\osgi.cmpn-4.2.1.jar
                (java.security.AllPermission)
locations[1]=targetB1.jar
                (java.security.AllPermission)
locations[2]=C:\ws\OSGiSVN\licensed\repo\org.apache.felix.configadmin\org.apache.felix.configadmin-1.0.10.jar
                (java.security.AllPermission)
locations[3]=C:\ws\OSGiSVN\org.osgi.test.cases.cm.ext\generated\org.osgi.test.cases.cm.ext.jar
                (java.security.AllPermission)
locations[4]=setAllPermission.jar
                (java.security.AllPermission)
locations[5]=configuringB1.jar
                (org.osgi.framework.PackagePermission ""org.osgi.service.cm"" ""IMPORT"")
                (org.osgi.framework.ServicePermission ""org.osgi.service.cm.ConfigurationAdmin"" ""GET"")
                (org.osgi.framework.PackagePermission ""org.osgi.test.cases.cm.ext.util"" ""IMPORT"")
                (org.osgi.framework.ServicePermission ""org.osgi.test.cases.cm.ext.util.ResultKeeper"" ""REGISTER"")
                (org.osgi.framework.PackagePermission ""org.osgi.framework"" ""IMPORT"")
                (org.osgi.service.cm.ConfigurationPermission ""*"" ""CONFIGURE"")
locations[6]=System Bundle
                (java.security.AllPermission)
default permission=
                (java.util.PropertyPermission ""java.home"" ""read"")

org.osgi.framework.BundleException: Exception in org.osgi.test.cases.cm.ext.configuringB1.ConfiguringActivator.start() of bundle org.osgi.test.cases.cm.ext.configuringB1.
                at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:805)
                at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:754)
                at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:352)
                at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:280)
                at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:272)
                at org.osgi.test.cases.cm.ext.tbc.CmExtTestControl.startBundleAndCheckSecurityException(CmExtTestControl.java:2120)
                at org.osgi.test.cases.cm.ext.tbc.CmExtTestControl.testGetConfigurationWithLocation1_1_1(CmExtTestControl.java:227)
                at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
                at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
                at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
                at java.lang.reflect.Method.invoke(Method.java:324)
                at junit.framework.TestCase.runTest(TestCase.java:164)
                at junit.framework.TestCase.runBare(TestCase.java:130)
                at junit.framework.TestResult$1.protect(TestResult.java:106)
                at junit.framework.TestResult.runProtected(TestResult.java:124)
                at junit.framework.TestResult.run(TestResult.java:109)
                at junit.framework.TestCase.run(TestCase.java:120)
                at junit.framework.TestSuite.runTest(TestSuite.java:230)
                at junit.framework.TestSuite.run(TestSuite.java:225)
                at junit.framework.TestSuite.runTest(TestSuite.java:230)
                at junit.framework.TestSuite.run(TestSuite.java:225)
                at aQute.junit.runtime.Target.doTesting(Target.java:158)
                at aQute.junit.runtime.Target.run(Target.java:42)
                at aQute.junit.runtime.Target.main(Target.java:33)
Caused by: java.security.AccessControlException: access denied
(java.io.FilePermission C:\ws\OSGiSVN\org.osgi.test.cases.cm.ext\generat
ed\fwtmp\org.eclipse.osgi\bundles\1\data\config\cm\ext\pid1.config read)
                at java.security.AccessControlContext.checkPermission(AccessControlContext.java:269)
                at org.eclipse.osgi.internal.permadmin.EquinoxSecurityManager.internalCheckPermission(EquinoxSecurityManager.java:117)
                at org.eclipse.osgi.internal.permadmin.EquinoxSecurityManager$CheckPermissionAction.run(EquinoxSecurityManager.java:60)
                at java.security.AccessController.doPrivileged(Native Method)
                at org.eclipse.osgi.internal.permadmin.EquinoxSecurityManager.checkPermission(EquinoxSecurityManager.java:88)
                at org.eclipse.osgi.internal.permadmin.EquinoxSecurityManager.checkPermission(EquinoxSecurityManager.java:187)
                at java.lang.SecurityManager.checkRead(SecurityManager.java:863)
                at java.io.File.isFile(File.java:723)
                at org.apache.felix.cm.file.FilePersistenceManager.exists(FilePersistenceManager.java:388)
                at org.apache.felix.cm.impl.ConfigurationManager.getExistingConfiguration(ConfigurationManager.java:375)
                at org.apache.felix.cm.impl.ConfigurationManager.getConfiguration(ConfigurationManager.java:391)
                at org.apache.felix.cm.impl.ConfigurationAdminImpl.getConfiguration(ConfigurationAdminImpl.java:116)
                at org.osgi.test.cases.cm.ext.configuringB1.ConfiguringActivator.start(ConfiguringActivator.java:25)
                at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:782)
                at java.security.AccessController.doPrivileged(Native Method)
                at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:773)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57545,,,Tue Aug 25 08:09:16 UTC 2009,,,,,,0|i0vz5z:,184670,,,,,,,,"14/Aug/09 22:50;fmeschbe;Committed a modified FilePersistenceManager, which checks for the system SecurityManager and if set uses an AccessControlContext setup at construction time to run operations as privileged actions in Rev. 804404.

Sending a SNAPSHOT containing these changes to the reporter for cross-checking.

(BTW: The FailureActivator class committed with this revision does not belong in the SVN yet and is removed)","17/Aug/09 10:16;fmeschbe;The original reporter has confirmed the fix to be working correctly.

Therefore resolving this issue fixed.",25/Aug/09 08:09;fmeschbe;Close all issues now this version has been released,,,,,,,,,,,,,,,,,,,,,,,,
ConfigAdmin implementation is not thread-safe,FELIX-1477,12432882,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,awilkinson,awilkinson,12/Aug/09 14:30,25/Aug/09 08:09,14/Mar/19 02:47,14/Aug/09 19:51,configadmin-1.0.10,,,,,,,,,,configadmin-1.2.0,,,,Configuration Admin,,,,,,,0,,,,,,"I've been doing some work with ConfigAdmin in a multi-threaded environment and have come across a number of issues caused by thread safety problems. The symptoms are typically either an IllegalStateException from ConfiguationAdapter.checkDeleted when, in fact, the Configuration has not been deleted, or a NPE, where PersistenceManager is checked once for being non-null, and the used again without re-checking for it having been nulled out, e.g. due to concurrent invocations of delete and update.

I tracked down a common cause of the IllegalStateException from checkDeleted to FilePersistenceManager's exists method. If exists is called on one thread while store (for an update) is being run on another, the rename can cause exists to incorrectly return false. synchronizing on this in exists appears to resolve this problem.

I've produced a patch that goes someway to improve the thread-safety, although I does not make the implementation completely thread-safe. Without the patch in place I was seeing a failure about one run in three. Since applying the patch I have yet to see a failure after more than 100 runs.",,,,,,,,,,,,,,,,,,,,12/Aug/09 14:31;awilkinson;thread-safety.patch;https://issues.apache.org/jira/secure/attachment/12416323/thread-safety.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-14 19:51:43.85,,,no_permission,,,,,,,,,,,57547,,,Tue Aug 25 08:09:16 UTC 2009,,,,,,0|i0w0nz:,184913,,,,,,,,"14/Aug/09 19:51;fmeschbe;Thanks for providing the patch.

I have applied it (slightly modified for formatting) in Rev. 804344.

Please close this issue, if it now works as expected for you. Thanks.",25/Aug/09 08:09;fmeschbe;Close all issues now this version has been released,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.felix.karaf.features.FeaturesServiceTest fails,FELIX-1466,12432700,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,tmoloney,tmoloney,10/Aug/09 15:59,11/Aug/09 18:45,14/Mar/19 02:47,10/Aug/09 16:45,,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,See attached test output.,,,,,,,,,,,,,,,,,,,,10/Aug/09 16:04;tmoloney;org.apache.felix.karaf.features.FeaturesServiceTest.txt;https://issues.apache.org/jira/secure/attachment/12416084/org.apache.felix.karaf.features.FeaturesServiceTest.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-10 16:45:04.12,,,no_permission,,,,,,,,,,,57558,,,Mon Aug 10 16:45:04 UTC 2009,,,,,,0|i0w173:,184999,,,,,,,,10/Aug/09 16:04;tmoloney;Output from failed tests.,"10/Aug/09 16:45;gnt;URL: http://svn.apache.org/viewvc?rev=802854&view=rev
",,,,,,,,,,,,,,,,,,,,,,,,,
Make symbolic names of Karaf webconsole bundles consistent with other bundles,FELIX-1465,12432696,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,gnt,tmoloney,tmoloney,10/Aug/09 15:36,17/Aug/09 15:41,14/Mar/19 02:47,17/Aug/09 15:17,,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,"Currently the Karaf webconsole names are

  org.apache.felix.karaf.webconsole.org.apache.felix.karaf.webconsole.features
  org.apache.felix.karaf.webconsole.org.apache.felix.karaf.webconsole.gogo

when they should be

  org.apache.felix.karaf.webconsole.features
  org.apache.felix.karaf.webconsole.gogo
",,,,,,,,,,,,,,,,,,,,13/Aug/09 04:37;tmoloney;FELIX-1465-BrandingSymbolicName.patch;https://issues.apache.org/jira/secure/attachment/12416394/FELIX-1465-BrandingSymbolicName.patch,10/Aug/09 15:53;tmoloney;FELIX-1465-KarafSymbolicNames.patch;https://issues.apache.org/jira/secure/attachment/12416082/FELIX-1465-KarafSymbolicNames.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-08-10 16:39:05.494,,,no_permission,,,,,,,,,,,57559,,,Mon Aug 17 15:17:38 UTC 2009,,,,,,0|i1ar1b:,270846,,,,,,,,10/Aug/09 15:53;tmoloney;Added patch that sets the symbolic name to be the artifact ID.,"10/Aug/09 16:39;gnt;URL: http://svn.apache.org/viewvc?rev=802853&view=rev
","13/Aug/09 04:36;tmoloney;Oops, missed the branding bundle.",13/Aug/09 04:37;tmoloney;FELIX-1465-BrandingSymbolicName.patch sets the symbolic name consistently with the other bundles.,"17/Aug/09 15:17;gnt;URL: http://svn.apache.org/viewvc?rev=805007&view=rev
Log:
FELIX-1465: Make symbolic names of Karaf webconsole bundles consistent with other bundles

Modified:
   felix/trunk/karaf/webconsole/branding/pom.xml
",,,,,,,,,,,,,,,,,,,,,,
issue when using a negation in ldap service dependency filter,FELIX-1464,12432693,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,marrs,apanday,apanday,10/Aug/09 15:22,10/May/11 08:35,14/Mar/19 02:47,11/Aug/09 09:58,dependencymanager-2.0.1,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"I found an issue when using a negation in the service dependency ldap filter (or more generally when the filter alone is not sufficient to narrow the search down to the required service).

Let's consider the following bundle activator:

public class Activator extends DependencyActivatorBase {
 
  interface Toto { }

  private Toto _toto; //injected
 
  public void init(BundleContext ctx, DependencyManager mgr) throws Exception {
    mgr.add(createService()
        .setInterface(Toto.class.getName(), new Hashtable() {{
          put(""key"", ""toto"");
        }})
        .setImplementation(new Toto() {
          public String toString() { return ""toto""; }
        }));
    mgr.add(createService()
        .setImplementation(this)
        .add(createServiceDependency()
          .setService(Toto.class, ""(!(key=tutu))"")
          .setAutoConfig(""_toto"").setRequired(true)));
  }
  public void start() {
    System.out.println(""got _toto=""+_toto);
  }
  public void destroy(BundleContext ctx, DependencyManager mgr) throws Exception {
  }
}

When deployed in a framework with a WebConsole, we can see under the ""Configuration Status"" tab that ALL the services in the registry (like all the org.apache.felix.shell.Command for instance) are shown as being used by our test bundle (list of ""Using bundles"").
From our test bundle point of view, only the correct service is bound because DM's ServiceTrackerCustomizer will filter out all services whose name don't match the expected one.
But from the service registry point of view it looks quite messy.

Besides being very confusing on the WebConsole page, it becomes a real problem when, for example, lazy activated services managed by DeclarativeService are activated when they should not.


Merely as a suggestion, I found the following patch which corrects the issue:

Index: src/main/java/org/apache/felix/dependencymanager/ServiceDependency.java
===================================================================
--- src/main/java/org/apache/felix/dependencymanager/ServiceDependency.java    (revision 802768)
+++ src/main/java/org/apache/felix/dependencymanager/ServiceDependency.java    (working copy)
@@ -530,7 +530,9 @@
             throw new IllegalArgumentException(""Service name cannot be null."");
         }
         m_trackedServiceName = serviceName;
-        m_trackedServiceFilter = serviceFilter;
+    if(m_trackedServiceName != null && serviceFilter != null && serviceFilter.indexOf(""objectClass"") < 0) {
+      m_trackedServiceFilter = ""(&(objectClass=""+m_trackedServiceName.getName()+"")""+serviceFilter+"")"";
+        } else m_trackedServiceFilter = serviceFilter;
         m_trackedServiceReference = null;
         return this;
     }

Best regards,
Arjun
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-11 08:28:09.205,,,no_permission,,,,,,,,,,,57560,,,Tue May 10 08:35:28 UTC 2011,,,,,,0|i1ar1j:,270847,,,,,,,,"11/Aug/09 08:28;marrs;You are right that even though the filter used in the underlying ServiceTracker does not filter on the name of the service, the addingService() method does. Therefore it makes sense to include the service name in the filter condition. I do find the serviceFilter.indexOf(""objectClass"") a bit too tricky to commit. I understand what you're trying to achieve, but I don't think this is the right way to do it. In fact, I believe we should not add that condition at all. Three scenarios here:
1) The user did not manually add an objectClass condition to the filter. This will work, we just add our condition.
2) The user already added an objectClass condition to the filter, on the same class we're about to add. This will work, but the condition is part of the expression twice. One could argue that the filter expression parser could optimize that away if it's smart.
3) The user already added an objectClass condition for a *different* class. This will not work, with our without the check you added, since in the end, the filter condition will conflict with the filtering done in addingService() so you won't ever find a match.

Therefore I propose to include the patch without this extra check.
",11/Aug/09 08:31;marrs;Please review the applied patch and comment and re-open if this is not satisfactory.,"11/Aug/09 09:02;apanday;I agree, the extra check is not very useful (not to mention my silly double check on serviceName!)
I tried your fix and it seems fine. Thanks.",11/Aug/09 09:53;marrs;Made a mistake in the implementation. Forgot to invoke getName() on the class before using it in a String.,11/Aug/09 09:58;marrs;Committed the fix.,10/May/11 08:35;marrs;Part of the 3.0.0 release.,,,,,,,,,,,,,,,,,,,,,
Corrupted repository.xml when maven is run in parallel,FELIX-1461,12432515,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,cziegeler,cziegeler,07/Aug/09 11:39,24/Jun/11 12:36,14/Mar/19 02:47,03/Sep/09 02:57,maven-bundle-plugin-1.4.3,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Sometimes I'm running several maven commands in parallel (different shells) and sometimes in these cases this ends in a corrupted repository.xml.
It seems that in this case the repository.xml just contains this single line:
<?xml version=""1.0"" encoding=""ISO-8859-1"" standalone=""yes""?>
which produces errors when it is tried to be read again.

I guess that there are not that many people running maven in parallel but I think the repository.xml shouldn't be corrupted/erased in these cases either :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-07 11:46:24.452,,,no_permission,,,,,,,,,,,57563,,,Thu Sep 03 13:01:19 UTC 2009,,,,,,0|i0vy5j:,184506,,,,,,,,"07/Aug/09 11:46;sseifert@pro-vision.de;we've encountered this problem too multiple times the last months, i think i can happen as well if a running maven build is killed by CTRL+C.
i was not sure if it is general maven-specific problem or specific to this plugin.","03/Sep/09 02:57;mcculls;I've tweaked the code so it uses a temporary file to build the updated OBR, it only overwrites the old file when the new file is complete. This should radically reduce the chance of getting a corrupted OBR - that said, it is considered Maven best-practice to not run parallel builds that use the same local repository.

",03/Sep/09 12:30;h2o;But now you've traded corruption for (possible) silent data loss. It is simply not possible to fix this without a lockfile..which you then need to cleanup if it is stale.. ad inf. :(,"03/Sep/09 12:32;h2o;One possible and low-impactish-way to treat this could be taking the ctime/mtime of the file, create your new file, and only overwrite if the mtime has not changed; otherwise recreate. Basically CAS/retry for files..
","03/Sep/09 13:01;mcculls;Exactly - before this fix it was possible to trash the repository file which meant you had to completely zap it, losing everything.
Now we at least make sure the repository file is consistent, so although you may lose an entry you could check and try again.

Also Maven has a fundamental design issue where running two processes against the same local repository could lead to
corrupt Maven metadata (this is well known, which is why many CI machines use separate repositories for different builds).
So I'm not sure how much time we should spend trying to workaround something that Maven itself doesn't support.

Adding a ctime/mtime check would be an option, but we'd need to limit the number of retries - otherwise you could end up in
some sort of live-lock situation. Even then it's possible to end up with missing data, as timestamps have limited granularity.

If someone wants to write a patch I'd be happy to integrate it, but for 2.0.1 this is the least disruptive solution to avoid corruption.",,,,,,,,,,,,,,,,,,,,,,
Can't view installed but unresolved bundle details page,FELIX-1460,12432513,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,kapyar,kapyar,07/Aug/09 11:07,19/Dec/16 17:24,14/Mar/19 02:47,08/Sep/09 08:12,webconsole-2.0.0,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"Trying to view details page about installed but unresolved bundle causes exception 'java.lang.NoClassDefFoundError: org/apache/felix/bundlerepository/Util'. Patch below fixes this:

Index: pom.xml
===================================================================
--- pom.xml	(revision 801916)
+++ pom.xml	(working copy)
@@ -95,8 +95,10 @@
                         
                         <Embed-Dependency>
                             <!-- Import/Export-Package parsing -->
-                            org.apache.felix.bundlerepository;inline=org/apache/felix/bundlerepository/R4*.class,
-                            
+                            org.apache.felix.bundlerepository;inline=org/apache/felix/bundlerepository/R4*.class
+                                | org/apache/felix/bundlerepository/Util.class
+                                | org/apache/felix/bundlerepository/VersionRange.class,
+
                             <!-- Required for JSON data transfer -->
                             json,
                             
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-08 08:12:25.504,,,no_permission,,,,,,,,,,,57564,,,Tue Sep 08 08:12:25 UTC 2009,,,,,,0|i0vr0v:,183351,,,,,,,,"08/Sep/09 08:12;fmeschbe;Thanks for reporting and providing the patch.

I have applied it in  Rev. 812375",,,,,,,,,,,,,,,,,,,,,,,,,,
install --help throws exception,FELIX-1454,12432261,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,05/Aug/09 10:49,21/Aug/09 12:45,14/Mar/19 02:47,07/Aug/09 10:18,karaf-1.0.0,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,"When I type install --help I get an exception instead of help:

Hit '<tab>' for a list of available commands
and '[cmd] --help' for help on a specific command.

karaf@root> install --help
pipe: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.felix.karaf.gshell.console.commands.BlueprintCommand$BlueprintActionPreparator.printUsage(BlueprintCommand.java:89)
        at org.apache.felix.gogo.commands.basic.DefaultActionPreparator.prepare(DefaultActionPreparator.java:116)
        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:33)
        at org.apache.felix.gogo.runtime.shell.CommandProxy.execute(CommandProxy.java:45)
        at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:208)
        at org.apache.felix.gogo.runtime.shell.Closure.executeStatement(Closure.java:147)
        at org.apache.felix.gogo.runtime.shell.Pipe.run(Pipe.java:91)
        at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:78)
        at org.apache.felix.gogo.runtime.shell.CommandSessionImpl.execute(CommandSessionImpl.java:71)
        at org.apache.felix.karaf.gshell.console.jline.Console.run(Console.java:109)
        at java.lang.Thread.run(Thread.java:619)",Equinox / Windows XP / JRE 1.6.0_13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-05 13:28:11.606,,,no_permission,,,,,,,,,,,57570,,,Wed Aug 05 13:28:11 UTC 2009,,,,,,0|i0vyvb:,184622,,,,,,,,05/Aug/09 13:28;gnt;This happen when the @Command annotation is missing on the action object.,,,,,,,,,,,,,,,,,,,,,,,,,,
SWTException: Widget is disposed on preferences update,FELIX-1452,12432171,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,04/Aug/09 15:30,04/Aug/09 16:08,14/Mar/19 02:47,04/Aug/09 16:08,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"org.eclipse.swt.SWTException: Widget is disposed
at org.eclipse.swt.SWT.error(SWT.java:3884)
at org.eclipse.swt.SWT.error(SWT.java:3799)
at org.eclipse.swt.SWT.error(SWT.java:3770)
at org.eclipse.swt.widgets.Widget.error(Widget.java:616)
at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:462)
at org.eclipse.swt.widgets.Tree.getItemCount(Tree.java:1526)
at org.eclipse.jface.viewers.TreeViewer.getItemCount(TreeViewer.java:214)
at org.eclipse.jface.viewers.CheckboxTreeViewer.preservingSelection(CheckboxTreeViewer.java:410)
at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1455)
at org.eclipse.jface.viewers.ColumnViewer.refresh(ColumnViewer.java:537)
at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1414)
at org.apache.felix.sigil.ui.eclipse.ui.editors.project.ResourceBuildSection.propertyChange(ResourceBuildSection.java:194)
at org.eclipse.ui.preferences.ScopedPreferenceStore$3.run(ScopedPreferenceStore.java:375)
at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:372)
at org.eclipse.ui.preferences.ScopedPreferenceStore.setValue(ScopedPreferenceStore.java:772)
at org.apache.felix.sigil.eclipse.internal.model.repository.RepositoryConfiguration.timeStamp(RepositoryConfiguration.java:275)
at org.apache.felix.sigil.eclipse.internal.model.repository.RepositoryConfiguration.setDefaultRepositorySet(RepositoryConfiguration.java:269)
at org.apache.felix.sigil.ui.eclipse.ui.preferences.repository.RepositoriesPreferencePage.doSave(RepositoriesPreferencePage.java:117)
at org.apache.felix.sigil.ui.eclipse.ui.preferences.ProjectDependentPreferencesPage$1.run(ProjectDependentPreferencesPage.java:45)
at org.apache.felix.sigil.ui.eclipse.ui.util.ProjectUtils$1.call(ProjectUtils.java:42)
at org.apache.felix.sigil.ui.eclipse.ui.util.ProjectUtils$1.call(ProjectUtils.java:40)
at org.apache.felix.sigil.ui.eclipse.ui.util.ProjectUtils.runTaskWithRebuildCheck(ProjectUtils.java:60)
at org.apache.felix.sigil.ui.eclipse.ui.util.ProjectUtils.runTaskWithRebuildCheck(ProjectUtils.java:38)
at org.apache.felix.sigil.ui.eclipse.ui.preferences.ProjectDependentPreferencesPage.performOk(ProjectDependentPreferencesPage.java:41)
at org.eclipse.jface.preference.PreferencePage.performApply(PreferencePage.java:432)
at org.eclipse.jface.preference.PreferencePage$2.widgetSelected(PreferencePage.java:281)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:228)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
at org.eclipse.swt.widgets.Display.sendEvent(Display.java:3542)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1247)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1270)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1255)
at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1076)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3440)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3099)
at org.eclipse.jface.window.Window.runEventLoop(Window.java:825)
at org.eclipse.jface.window.Window.open(Window.java:801)
at org.eclipse.ui.internal.dialogs.WorkbenchPreferenceDialog.open(WorkbenchPreferenceDialog.java:211)
at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:65)
at org.eclipse.ui.internal.cocoa.CocoaUIEnhancer.runAction(CocoaUIEnhancer.java:416)
at org.eclipse.ui.internal.cocoa.CocoaUIEnhancer.preferencesMenuItemSelected(CocoaUIEnhancer.java:516)
at org.eclipse.ui.internal.cocoa.CocoaUIEnhancer.actionProc(CocoaUIEnhancer.java:538)
at org.eclipse.ui.internal.cocoa.CocoaUIEnhancer.actionProc(CocoaUIEnhancer.java:524)
at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:4187)
at org.eclipse.swt.widgets.Display.applicationProc(Display.java:4385)
at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:75)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3093)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
",eclipse galileo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57572,,,2009-08-04 15:30:11.0,,,,,,0|i1ar1z:,270849,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tab completion doesn't work on Windows,FELIX-1449,12432149,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,04/Aug/09 12:06,21/Aug/09 12:46,14/Mar/19 02:47,10/Aug/09 16:33,karaf-1.0.0,,,,,,,,,,karaf-1.0.0,,,,,,,,,,,0,,,,,,"It seems like the Karaf command line processor doesn't work properly on Windows. For instance, if I type <tab> nothing happens (while I expected to see all the available commands).

Another funny thing that happens on windows is that you for every line I get to see two prompts, like this:
karaf@root> karaf@root>
karaf@root> karaf@root>
karaf@root> karaf@root>
karaf@root> karaf@root>",Windows XP with JRE 1.6.0-13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-10 16:33:30.502,,,no_permission,,,,,,,,,,,57575,,,Mon Aug 10 16:33:30 UTC 2009,,,,,,0|i0w113:,184972,,,,,,,,"10/Aug/09 16:33;gnt;URL: http://svn.apache.org/viewvc?rev=802847&view=rev
",,,,,,,,,,,,,,,,,,,,,,,,,,
"Combining require bundle with import package fails due to BND validation that all imports are provided, when some packages would be provided by required bundles",FELIX-1448,12432142,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,04/Aug/09 10:00,04/Aug/09 15:03,14/Mar/19 02:47,04/Aug/09 15:03,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"If we have bundles foo, bar and baz that contain the following info:

#foo/sigil.properties
-bundles: org.example.foo
-exports: org.example.foo

#bar/sigil.properties
-bundles: org.example.bar
-exports: org.example.bar

#baz/sigil.properties
-bundles: org.example.baz
-imports: org.example.foo
-requires: org.example.bar

We will get a error message from BND when generating baz if classes from the package org.example.bar are used by baz as BND expects to have an import statement but the classes are supplied by the require-bundle dependency.

In most cases this is a non issue as require-bundle could easilly be swapped for import-package but this fails if org.example.bar is fragmented across several bundles, then we have to use requires in order to maintain the correct class space. The uber answer is to use mandatory export flags but this will only work if the supplying bundle provides these - if not we have to fall back to require-bundle.",,,,,,,,,,,FELIX-1323,,,,,,,,,04/Aug/09 14:34;davemssavage;bundle-builder-patch.txt;https://issues.apache.org/jira/secure/attachment/12415486/bundle-builder-patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57576,,,Tue Aug 04 15:03:55 UTC 2009,,,,,,0|i0w11b:,184973,,,,,,,,"04/Aug/09 10:04;davemssavage;bundle-builder-patch.txt supplies a slightly hacky work around for this issue.

If the user specifies the option

option;addMissingImports: false

Along side -requires then sigil will insert a failok=false property into the bnd spec handed to bndlib.",04/Aug/09 14:34;davemssavage;Ok found a better fix. bundle-builder-patch.txt now adds !* to end of imports which gives BND rules to deal with packages that are not explicitly imported,"04/Aug/09 14:49;davemssavage;spoke to soon, now import package statements are generated which is not what we want...","04/Aug/09 15:03;davemssavage;Ok going mad, that patch does work, other unrelated bug was causing eclipse plugins not to load on startup. But need unit tests for sigil bundle generation to check format is correct - will add new issue for this",,,,,,,,,,,,,,,,,,,,,,,
"When a component is deactivated due to the deactivation of a service to which it staticly 1..1 references, this component is not reactivated when that service is reregistered.",FELIX-1445,12432062,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,agemocui,agemocui,03/Aug/09 16:36,03/Aug/09 19:47,14/Mar/19 02:47,03/Aug/09 19:29,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"According to the comments in the method serviceAdded of class DependencyManager,  it looks like the first ""if"" is to check the unsatisfied state.
But there are 2 unsatisfied state: STATE_ENABLED and STATE_UNSATISFIED.

So the first ""if"" should be as follows.

if ( (m_componentManager.getState() &
				(AbstractComponentManager.STATE_ENABLED | AbstractComponentManager.STATE_UNSATISFIED)) != 0)


And in the following ""else if"", the method ""handleServiceEvent"" is going to check the statisfied state.
So ""STATE_UNSATISFIED"" should be removed from DependencyManager.STATE_MASK.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-03 19:17:08.314,,,no_permission,,,,,,,,,,,57579,,,Mon Aug 03 19:29:39 UTC 2009,,,,,,0|i0vyvj:,184623,,,,,,,,"03/Aug/09 19:17;fmeschbe;Thanks for reporting this issue ...

Will look into the details... Off the belly, I think the code is correct, but it may as well not be ....","03/Aug/09 19:27;fmeschbe;You are right, the test is wrong: If the component is enabled but not unsatisifed, the serviceAdded method should just be ignored. Only if the component is unsatisifed, that is activation has been tried but unsuccessful, should the component be activated. Otherwise the event must be ignored (as it was in before applying the patch from FELIX-1185 in Rev. 781045.

Reverting to testing for the UNSATISFIED state again should do the trick.","03/Aug/09 19:29;fmeschbe;Reverted the state check as indicated in Rev. 800506.

Please close this issue, if you agree with the fix. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,
"IOException ""Failed to create obr cache dir"" if obr index does not exist but directory does",FELIX-1442,12432025,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,03/Aug/09 08:30,03/Aug/09 08:32,14/Mar/19 02:47,03/Aug/09 08:32,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"Not observed in general work flow, but possible during development due to other unexpected failures",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57582,,,2009-08-03 08:30:38.0,,,,,,0|i1ar2v:,270853,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Abort method (binder, activator) method search on non-accessible suitable methods",FELIX-1440,12432020,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,03/Aug/09 05:51,08/Dec/09 15:49,14/Mar/19 02:47,03/Aug/09 09:08,scr-1.2.0,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The R4.2 draft specification (dated 2009/03/10) states in section 112.8.4, Locating Component Methods:

      If suitable methods are found in a class but none of
      the suitable methods are accessible, the search for suitable methods terminates
      with no suitable method having been located. If no suitable methods
      are found in a class, the search continues in the superclass.

This means, that as soon as a class would have one or more suitable methods but none of these is accessible, the search should terminate with no method found.

Currently the search continues as if no suitable method would have been found if suitable methods found are not accessible.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57584,,,Tue Dec 08 15:49:27 UTC 2009,,,,,,0|i0vzcv:,184701,,,,,,,,03/Aug/09 07:59;fmeschbe;In Rev. 800244: Add SuitableMethodNotAccessibleException to support method lookup termination if a class provides suitable methods which are not accessible. Plus test case in BindMethodTest,"03/Aug/09 09:08;fmeschbe;In Rev. 800267 extended support for method lookup termination in case suitable non-accessible methods are found to the activate/deactivate methods.

This resolves this issue.",08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,
maven-bundle-plugin resource filtering does not substitute project.organization.*,FELIX-1439,12432008,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,tmoore,tmoore,02/Aug/09 20:48,24/Jun/11 12:36,14/Mar/19 02:47,02/Sep/09 22:48,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"We have an XML file in our project's resource directory that contains various Maven properties that are substituted by the maven-bundle-plugin at build time. Most of the properties work (for example, ${pom.name}, ${pom.description}, ${pom.version}) but ${pom.organization.name} and ${pom.organization.url} do not. Changing them to ${project.organization.name} and ${project.organization.url} did not help.

These properties are a little unusual in that they refer to properties of a nested object within the project model, kind of like how project.build works, so they probably have to be special-cased the same way.

I notice that when I run mvn with -X, I see this in the BND Instructions:

[DEBUG] pom.organization: null
",,,,,,,,,,,,,,,,,,,,03/Aug/09 06:47;tmoore;FELIX-1439.patch;https://issues.apache.org/jira/secure/attachment/12415317/FELIX-1439.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-09-02 22:48:54.138,,,no_permission,,,,,,,,,,,57585,,,Fri Sep 18 19:25:30 UTC 2009,,,,,,0|i0vwjb:,184244,,,,,,,,"02/Aug/09 20:54;tmoore;There's a simple work around: in a project's properties section, explicitly redefine these properties:

    <properties>
        <project.organization.name>${project.organization.name}</project.organization.name>
        <project.organization.url>${project.organization.url}</project.organization.url>
    </properties>
","03/Aug/09 06:47;tmoore;Here's a patch with a unit test and a fix. I'm not sure if this is the optimal way to fix the problem, but it works for my case.",02/Sep/09 22:48;mcculls;Applied modified version of the patch in trunk (r810723),18/Sep/09 19:25;tmoore;Confirmed: 2.0.1 fixes my problem. Thanks!,,,,,,,,,,,,,,,,,,,,,,,
NPE in SigilRepositoryManager in case of invalid repository config,FELIX-1438,12431990,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,02/Aug/09 10:55,02/Aug/09 10:57,14/Mar/19 02:47,02/Aug/09 10:57,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"java.lang.NullPointerException
at org.apache.felix.sigil.eclipse.internal.repository.eclipse.SigilRepositoryManager.loadRepositories(SigilRepositoryManager.java:110)
at org.apache.felix.sigil.repository.AbstractRepositoryManager.initialise(AbstractRepositoryManager.java:66)
at org.apache.felix.sigil.eclipse.internal.repository.eclipse.SigilRepositoryManager.initialise(SigilRepositoryManager.java:83)
at org.apache.felix.sigil.eclipse.SigilCore.getRepositoryManager(SigilCore.java:502)
at org.apache.felix.sigil.eclipse.SigilCore.getRepositoryManager(SigilCore.java:524)
at org.apache.felix.sigil.eclipse.model.util.JavaHelper.resolveClasspathEntrys(JavaHelper.java:372)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.findExternalClasspath(SigilProject.java:207)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.buildClassPathEntries(SigilClassPathContainer.java:102)
at org.apache.felix.sigil.ui.eclipse.classpath.SigilClassPathContainer.getClasspathEntries(SigilClassPathContainer.java:58)
at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2567)
at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2662)
at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1861)
at org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:3443)
at org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run(InitializeAfterLoadJob.java:35)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57586,,,Sun Aug 02 10:57:48 UTC 2009,,,,,,0|i1ar33:,270854,,,,,,,,02/Aug/09 10:57;davemssavage;now throws IllegalStateException with diagnostic error message vs NPE,,,,,,,,,,,,,,,,,,,,,,,,,,
DS 1.1 signatures for activators and bind methods only available for declaration with new namespace,FELIX-1437,12431953,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,01/Aug/09 07:03,08/Dec/09 15:49,14/Mar/19 02:47,03/Aug/09 08:05,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The draft compendium specification (dated 2009/03/10) states:

    The additional signatures and additional accessibility for the activate,
    deactivate, bind and unbind methods can cause problems for components
    written to version 1.0 of this specification. The behaviour in this
    specification only applies to component descriptions using the v1.1.0
    name space.

Currently the new method signatures are checked and accepted regardless of the namespace version of the component declaration. If a component is declared with a 1.0 namespace declaration, only the original signatures must be accepted, which are:

   * methods must be protected or public
   * bind methods take ServiceReference or service object
   * activator methods take ComponentContext",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57587,,,Tue Dec 08 15:49:27 UTC 2009,,,,,,0|i0vzcn:,184700,,,,,,,,"03/Aug/09 07:48;fmeschbe;Rev. 800242:

Enhanced method selection for activator/deactivator methods to use the declaration document namespace to decide whether to only consider DS 1.0 method signatures or to also consider DS 1.1 signatures.

",03/Aug/09 07:59;fmeschbe;In Rev. 800244: Only support new signatures and private/package support for bind/unbind methods for DS 1.1 declared components.,03/Aug/09 08:05;fmeschbe;Both categories of methods (bind/unbind and activate/deactivate) now take the declaration into consideration to decide whether to accept new method signatures and prviate/default modifiers.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,
Descriptors with duplicate implementation and/or service elements are invalid,FELIX-1436,12431952,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,01/Aug/09 06:57,01/Aug/09 07:01,14/Mar/19 02:47,01/Aug/09 07:01,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The DS specification states that the implementation element must be listed exactly once in a descriptor. Likewise the service element may be listed at most once. Currently these elements may be repeated and the parser will just happily accept the last element as the declaration.

This is incorrect. Descriptors with duplicate implementation and/or service elements must not be accepted and rejected by metadata validation. By not rejecting it at parse time we make logging easier and also enable easier implementation of accepting valid descriptors along invalid descriptors in the same XML document.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57588,,,Sat Aug 01 07:01:02 UTC 2009,,,,,,0|i0w0y7:,184959,,,,,,,,"01/Aug/09 07:01;fmeschbe;In Rev. 799809, enhanced theComponentMetadata class to be able to verify exactly one implementation element and at most one service element has been declared. Also added unit tests to verify the validation procedure.",,,,,,,,,,,,,,,,,,,,,,,,,,
Resolver does not always resolve a dynamic import to a fragment export,FELIX-1435,12431912,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,31/Jul/09 16:51,27/Aug/09 14:51,14/Mar/19 02:47,27/Aug/09 14:51,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Packages exported by fragments are not always seen by bundles dynamically importing them. For example, consider the following scenario:

Bundle A dynamically imports some package foo and is resolved, but no other bundles are present. Now a host and fragment are installed (but not resolved) where the fragment exports package foo. If A tries to access a class in foo, it will not get dynamically wired to the package, since the host/fragment pair will not be resolved.

If the host/fragment pair were installed prior to A being resolved, it does work, but this is more by accident than design. We need to explicitly attempt to resolve fragments during dynamic import resolution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57589,,,Thu Aug 27 14:51:55 UTC 2009,,,,,,0|i1ar3b:,270855,,,,,,,,"31/Jul/09 16:57;rickhall;I have committed a fix for this, but I am not completely happy with it. It attempts to merge fragments before seeing if it is even necessary (i.e., if the bundle has any dynamic imports). I could simply check to see if it is needed, but this check already happens internally in the resolver, so it seems like duplication of effort. I need to think about this some more.","27/Aug/09 14:51;rickhall;For now I have implemented a hack to double check whether a dynamic import is possible before merging fragments for resolving the dynamic import, but we should probably improve the entire approach in the future (see FELIX-1534).",,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.NumberFormatException in Bundle-Version (org.osgi.framework.Version) due to trailing whitespace,FELIX-1433,12431830,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,dustin.schultz,dustin.schultz,30/Jul/09 17:58,19/Aug/09 21:53,14/Mar/19 02:47,30/Jul/09 18:23,bundlerepository-1.4.0,,,,,,,,,,bundlerepository-1.4.1,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Adding an extra space after a version causes a NumberFormatException

i.e. Bundle-Version: 1.0.0<space>

ERROR: EventDispatcher: Error during dispatch.
(java.lang.NumberFormatException: For input string: ""0 "")
java.lang.NumberFormatException: For input string: ""0 ""
        at
java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
        at java.lang.Integer.parseInt(Integer.java:458)
        at java.lang.Integer.parseInt(Integer.java:499)
        at org.osgi.framework.Version.<init>(Version.java:136)
        at
org.apache.felix.bundlerepository.ResourceImpl.put(ResourceImpl.java:204)
        at
org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.convertAttributesToProperties(LocalRepositoryImpl.java:302)
        at
org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.initialize(LocalRepositoryImpl.java:203)
        at
org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.<init>(LocalRepositoryImpl.java:190)
        at
org.apache.felix.bundlerepository.LocalRepositoryImpl$LocalResourceImpl.<init>(LocalRepositoryImpl.java:182)
        at
org.apache.felix.bundlerepository.LocalRepositoryImpl.addBundle(LocalRepositoryImpl.java:104)
        at
org.apache.felix.bundlerepository.LocalRepositoryImpl.bundleChanged(LocalRepositoryImpl.java:65)
        at
org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:771)
        at
org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:700)
        at
org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:597)
        at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3418)
        at org.apache.felix.framework.Felix.installBundle(Felix.java:2247)
        at org.apache.felix.framework.Felix.installBundle(Felix.java:2026)
        at
org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:130)
        at
org.apache.felix.shell.impl.InstallCommandImpl.install(InstallCommandImpl.java:104)
        at
org.apache.felix.shell.impl.StartCommandImpl.execute(StartCommandImpl.java:100)
        at
org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:291)
        at
org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:177)
        at java.lang.Thread.run(Thread.java:619)

Bug filed with OSGi here:
https://www.osgi.org/bugzilla/show_bug.cgi?id=55

Comments From BJ Hargrave:

The String constructor for Version does not tolerate whitespace. They should
use the static parseVersion method which will trim whitespace method before
parsing.

From the Version(String) javadoc:

         * There must be no whitespace in version.",Linux,,,,,,,,,,,,,,,,,,,30/Jul/09 18:02;dustin.schultz;FELIX-1433.patch;https://issues.apache.org/jira/secure/attachment/12415047/FELIX-1433.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-30 18:23:10.351,,,no_permission,,,,,,,,,,,57591,,,Wed Aug 19 21:53:00 UTC 2009,,,,,,0|i1ar3j:,270856,,,,,,,,30/Jul/09 18:02;dustin.schultz;Attached patch.,30/Jul/09 18:23;rickhall;Applied patch. Please close if satisfied. Thanks!,19/Aug/09 21:53;dustin.schultz;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,
Resolver does not always discard partial results when a cyclically dependency fails,FELIX-1422,12431702,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,29/Jul/09 15:12,06/Oct/09 11:21,14/Mar/19 02:47,28/Aug/09 15:42,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"When resolving dependencies among bundles, if a cycle is detected the resolver algorithm assumes the resolve is successful. So, assuming we want to resolve A and A wants to import from B and B wants to import from A, we end up building up a data structure where A has B as a potential candidate and B has A. If A is unable to resolve, then the whole thing fails and everything is fine. However, if the resolve starts with C and C has an optional import from A, then when A fails to resolve it is ignored since it was optional for C. This means the partial resolve results for A will be discarded, but unfortunately the partial resolve results for B are not. This means if C also has a dependency on B, the partial resolve results will be used as if they were correct, even though they include A as a candidate, which could not be resolved. The end result is an NPE when creating wires, since it tries to create a wire to an unresolved bundle.

We need to remove assumptions we made about cycles if they ultimately fail to resolve.",,,,,,,,,,,,,,,FELIX-1710,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57602,,,Fri Aug 28 15:40:51 UTC 2009,,,,,,0|i1ar4f:,270860,,,,,,,,"30/Jul/09 19:27;rickhall;I have committed a patch for this, which I believe works. However, I want to investigate it some more, so I will leave it open for now. The main issue is it might be too broad when removing byproduct bundles, which could result in more work being done than is actually necessary. This would still be correct, but not as efficient.",28/Aug/09 15:40;rickhall;I modified the patch to only remove byproduct modules from actual cyclical dependencies upon failure of the cycle.,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong factory configuration behaviour,FELIX-1416,12431589,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,28/Jul/09 13:41,30/Jul/10 11:57,14/Mar/19 02:47,28/Jul/09 14:23,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"Currently factory configurations are applied to component factories, such that each factory configuration instance creates a componnent
instances of a component factory. Reversly deleting a factory configuration also deletes component instances. This is not how it is specified.

Correct is, that 

  (1) Component Factories can only be configured with singleton configurations applying
          the configuration to all instances created with newInstance
  (2) Factory configurations are applied to non-component-factory components and
          cause multiple component instances to be created.

To accomodate for this, the handling of components has to be redesigned: A component descriptor now causes the creation of a ComponentHolder. Depending on configuration availability a ComponentHolder will hold a single component (no configuration or singleton configuration) or multiple components (factory configuration).",,,,,,,,,,,,,,,FELIX-924,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57608,,,Fri Jul 30 11:57:37 UTC 2010,,,,,,0|i0vyw7:,184626,,,,,,,,"28/Jul/09 14:23;fmeschbe;Added unit and integration (Pax Exam based) tests for the fixed configuration behaviour in Rev. 798522

In Rev. 798529 adapted the ImmediateComponentManager to the new holder mechanism.

Rev. 798531 finally brings the big block of ComponentHolder and implementation.

The ComponentRegistry is refactored to be a factory for ComponentHolders and has no Configuration support. The ConfigurationComponentRegistry extends the ComponentRegistry adding support for Configuration from ConfigurationAdmin.

For ComponentFactory components the ComponentFactoryImpl also acts as the component holder. For Components without configuration (configuration-policy=ignore) UnconfiguredComponentHolder instances are used. This class is also used if no ConfigurationAdmin service is available.

For components taking configuration the ConfiguredComponentHolder class is used. This class can cope with singleton and factory configurations.

The Configuration policy ""ignore"" is handled by the ComponentRegistry in that an UnconfiguredComponentHolder is created to hold the component without ever forwarding configuration.

For Configuration policy ""require"" and ""optional"" a ConfiguredComponentHolder is used. The ""require"" policy is handled by the AbstractComponentManager to prevent activation if there is no configuration.",28/Jul/09 14:23;fmeschbe;This fixes this issue.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,"30/Jul/10 11:57;fmeschbe;Some update for reference purposes.

The fixes for this issue change the behaviour of Component Factory support in a non-backwards-compatible (yet spec compliant way). For applications depending on the non-compliant behaviour of creating Component Factory component instances with factory configuration a configuration property -- ds.factory.enabled -- has been added.

If this property is set to true, factory configurations will create Component Factroy component instances.

If this property is not set or set to any value other than true, Component Factory component instances must be created calling the ComponentFactory.newInstance method.",,,,,,,,,,,,,,,,,,,,,,,
"""Reload"" button in webconsole bundles list doesn't work",FELIX-1415,12431579,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,kapyar,kapyar,28/Jul/09 08:18,29/Jul/09 15:07,14/Mar/19 02:47,29/Jul/09 15:07,webconsole-2.0.0,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"Pushing of ""Reload"" button in webconsole bundles list does nothing. Traffic analysis shows that bundles.js script issues request to '/system/console/bundles/.json' path with HTTP 404 error response. Patch below fixes this bug:

Index: src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java
===================================================================
--- src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java	(revision 798431)
+++ src/main/java/org/apache/felix/webconsole/internal/core/BundlesServlet.java	(working copy)
@@ -1084,7 +1084,7 @@
             {
                 bundleInfo = info.substring(1);
             }
-            if ( bundleInfo == null )
+            if ( bundleInfo == null || bundleInfo.length() == 0 )
             {
                 bundle = null;
                 bundleRequested = false;
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-29 15:07:12.951,,,no_permission,,,,,,,,,,,57609,,,Wed Jul 29 15:07:12 UTC 2009,,,,,,0|i0vwin:,184241,,,,,,,,"29/Jul/09 15:07;cziegeler;Thanks for your patch, Victor!
It's now applied in trunk",,,,,,,,,,,,,,,,,,,,,,,,,,
Service ranking is only obeyed on first component activation,FELIX-1414,12431575,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,fmeschbe,fmeschbe,28/Jul/09 07:24,08/Dec/09 15:49,14/Mar/19 02:47,31/Jul/09 14:58,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"As of FELIX-950 (released with scr 1.0.8) and FELIX-1213 (not released yet) unary services bindings are replaced if a new service is registered with a higher service ranking than the already bound service.

It has been clarified in the OSGi dev list thread ""Questions on DS Spec"" [1] that a service once bound is only replaced if it ceaces to be a target either by the service being unregistered of the target filter not matching any longer. Service ranking is only obeyed upon first binding of a service to the component.

To fix we have to revert the fixes for FELIX-950 and FELIX-1213.


[1] http://www.mail-archive.com/osgi-dev@mail.osgi.org/msg00883.html",,,,,,,,,,,,,,,FELIX-1213,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57610,,,Tue Dec 08 15:49:27 UTC 2009,,,,,,0|i0vzbz:,184697,,,,,,,,"31/Jul/09 14:58;fmeschbe;In Rev. 799629 removed the replacement of bound services for unary references if a service was registered with a higher ranking. As per the discussion on the OSGi list, a service once bound is never replaced unless the service ceases to be a target service (by unregistration or not matching the target any more).

This resolves this issue.",31/Jul/09 15:00;fmeschbe;This issue invalidates FELIX-1213.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,
Newly registered services must not immediately bound for static references,FELIX-1413,12431574,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,28/Jul/09 07:19,08/Dec/09 15:49,14/Mar/19 02:47,31/Jul/09 15:57,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),Specification compliance,,,,,,0,,,,,,"Consider a static component references with mulitplie cardinality, that is 0..n or 1..n.

If the component is satisified and active, all services existing at the time of activation are bound. If now a service is registered matching the component's reference this newly registered service must not be bound to the component.

Only if the component is reactivated for another reason (e.g. reconfiguration or removal of a statically bound service) may the newly registered service be bound. This is comparable to optional package imports: such imports are only wired to newly installed bundles when the importing bundle is explicitly rewired.

In other words here is what may happen :

   (1) Component C is enabled, satisfied and activated. All services bound. C has static, multiple reference to Service type TS
   (2) Service S of type TS is registered
   (3) The service is *not* bound
   (4) Component C is deactivated (e.g. for reconfiguration)
   (5) Component C is still satisifed and activated. Now Service S is bound
   
In current versions (1.0.8 and earlier) scr is immediately reactivating the component to bind the new Service S in step 3; which is wrong.

See also the discussion on the OSGi dev list ""Questions on DS Spec"" [1] for full details.

[1] http://www.mail-archive.com/osgi-dev@mail.osgi.org/msg00883.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57611,,,Tue Dec 08 15:49:26 UTC 2009,,,,,,0|i0vyvz:,184625,,,,,,,,"31/Jul/09 15:57;fmeschbe;Fixed in Rev. 799647

* If a service is registered for a static reference, the service is ignored.

* If a service registration is modified the bound service is unbound and then bound again. For static references this causes a component reactivation. For dynamic component this may cause a deactivation because the reference is not satisified anymore. In both cases the event handling can terminate because there is nothing more to do for a deactivated component.",08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Issue on windows to find components inside bundle,FELIX-1411,12431503,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,pelle7,pelle7,27/Jul/09 12:28,25/Apr/10 14:40,14/Mar/19 02:47,11/Aug/09 08:49,iPOJO-1.4.0,,,,,,,,,,iPOJO-1.6.0,,,,iPOJO,,,,,,,0,,,,,,"The nice example project 'MyiPOJOBundle' the build task ipojo throws the error: The component .... is declared but not in the bundle

The problem seems to be the windows backslashes in the function 'manipulateComponents' from the project 'manipulator'. The variable 'curName' contains backslashes instead of '/'

","Windows XP
Eclipse 3.5
",,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-27 16:16:11.043,,,no_permission,,,,,,,,,,,57613,,,Tue Aug 11 08:49:15 UTC 2009,,,,,,0|i0vzqf:,184762,,,,,,,,27/Jul/09 16:16;clement.escoffier;This issue just miss the 1.4.0 cut. I will fixed it and release a 1.4.1 of the manipulator and of the ant task as soon as possible.,11/Aug/09 08:49;clement.escoffier;Fix in the trunk. The issue came from the path separator (different on Linux and windows system). This is now fixed and tested on Windows as well as on Mac OS X.,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] coercion of args to match varargs method is inconsistent,FELIX-1408,12431339,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,24/Jul/09 08:18,30/Sep/09 21:39,14/Mar/19 02:47,16/Aug/09 11:41,,,,,,,,,,,gogo-0.2.0,,,,Gogo Runtime,,,,,,,0,,,,,,"gogo coerces the supplied arguments to match those required by the method.
when the last parameter of a method is an array, gogo will coerce all remaining args into the array.

For example:

echo is defined as String echo(Object[] args);

> echo d e f
d e f

above, gogo has coerced the 3 arguments into a single args[] array argument


> list = [a b c]
a
b
c

> echo $list
a b c

here gogo passes the list directly, rather than as the first element of an array

However, this is inconsistent when extra args are given:

echo $list x
x a b c

The bug here is that the argument 'x' appears as the first, rather than the last argument to echo

 echo x $list
x [a, b, c]

The bug here is that the list is no longer expanded.
The result should be:
x a b c



",,,,,,,,,,,,,,,,,,,,30/Jul/09 16:15;db82407;patch.txt;https://issues.apache.org/jira/secure/attachment/12415035/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-30 09:10:52.916,,,no_permission,,,,,,,,,,,57616,,,Sun Aug 16 11:41:35 UTC 2009,,,,,,0|i1ar5b:,270864,,,,,,,,"30/Jul/09 09:10;gnt;I don't think $list should be expanded at all.
Doing so means you can't have access to the list in the method.

I would rather go for:

> echo $list
[a, b, c]

> echo x $list
x [a, b, c]

> echo $list x
[a, b, c] x

","30/Jul/09 14:08;rickhall;I agree with Guillaume, it seems simpler to treat everything as separate arguments and never expand. I suppose it could be possible to have some syntax to explicitly expand non-scalars.","30/Jul/09 16:12;db82407;My concern was that closures like:

g = { grep $args }

or

warn = { echo warning: $args }

should still work as expected, without grep/echo having to deal with the possibility that their args[0] contains a list of all the args.

I now see that this is possible without the coerce method having to expand list args.

So we're all in agreement.




","30/Jul/09 16:15;db82407;This patch simply removes the expansion of list arguments when coercing to to a final array parameter.

It fixes the inconsistency reported in this issue, but gives the results proposed by 
Guillaume Nodet:

> echo $list
[a, b, c]

> echo x $list
x [a, b, c]

> echo $list x
[a, b, c] x",16/Aug/09 11:41;db82407;fixed by not expanding array args during coercion.,,,,,,,,,,,,,,,,,,,,,,
eclipse code format template does not match existing code,FELIX-1406,12431336,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,db82407,db82407,24/Jul/09 07:58,17/Sep/09 22:35,14/Mar/19 02:47,17/Sep/09 22:35,,,,,,,,,,,,,,,Documentation,,,,,,,0,,,,,,"The eclipse code format template http://felix.apache.org/site/coding-standards.data/ApacheFelixCodingStandards.xml
generates slightly different white space and blank line formatting than existing felix code.

Specifically:

1. spaces are inserted after the opening paren and before the closing paren in declarations and method calls:

int method1( String arg1 )
{
    if ( expr )
    {
        method1( arg1 );
    }
}

The felix coding standards document http://felix.apache.org/site/coding-standards.html does not specifically specify these spaces,
but all the examples show code formatted without them.


2. two blank lines are inserted after package statement and between method declarations

This actually agrees with the eclipse template, but the code I was reformatting (gogo) only had one blank line.


",,,,,,,,,,,,,,,,,,,,17/Sep/09 13:31;db82407;Apache Felix Eclipse Template.xml;https://issues.apache.org/jira/secure/attachment/12419890/Apache+Felix+Eclipse+Template.xml,17/Sep/09 09:42;fdiotalevi;ApacheFelixEclipseTemplate.xml;https://issues.apache.org/jira/secure/attachment/12419862/ApacheFelixEclipseTemplate.xml,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-09-17 09:42:37.369,,,no_permission,,,,,,,,,,,57618,,,Thu Sep 17 22:35:27 UTC 2009,,,,,,0|i1ar5r:,270866,,,,,,,,"17/Sep/09 09:42;fdiotalevi;I attached an improved version of the Eclipse formatting template.

I uploaded it also in the wiki and made it available for download at 
http://cwiki.apache.org/confluence/display/FELIX/Coding+Standards

(direct link is
http://cwiki.apache.org/confluence/download/attachments/19425/ApacheFelixEclipseTemplate.xml?version=1 )

Please check it and close the bug if satisfied.","17/Sep/09 12:45;db82407;This template looks good, but still has two differences that I'm not sure about:

1. no space after the : in a Java5 for loop:

-         for (Method m : methods)
+        for (Method m: methods)


2. javadoc comment is changed into non-javadoc comment and blank lines are inserted between parameters:

(gogo/Reflective.java):

-    /**
+    /*
      * Complex routein to convert the arguments given from the command line to
      * the arguments of the method call. First, an attempt is made to convert
      * each argument. If this fails, a check is made to see if varargs can be
      * applied. This happens when the last method argument is an array.
-     *
+     * 
      * @param session
+     * 
      * @param target
+     * 
      * @param types
+     * 
      * @param out
+     * 
      * @param in
+     * 
      * @return
+     * 
      * @throws Exception
      */
     @SuppressWarnings(""unchecked"")
-    private int coerce(CommandSession session, Object target, Class<?> types[], Object out[], List<Object> in) throws Exception
+    private int coerce(CommandSession session, Object target, Class<?> types[],
+        Object out[], List<Object> in) throws Exception
     {
","17/Sep/09 13:06;fdiotalevi;Good points.

If you have time, just go ahead and upload a new version of the template with the 2 fixes; otherwise I'll do that later tonight or tomorrow.","17/Sep/09 13:28;db82407;new template attached that fixes previously reported problems.

1. (space before : in for statement) - there was a setting to directly change this

2. javadoc comment changed into non-javadoc comment

This was odd. The original template only enabled formatting of block comments. I was able to fix this problem either by enabling formatting of javadoc comments or by not formatting block comments.
I chose the latter.",17/Sep/09 13:31;db82407;grant license to attachment,"17/Sep/09 19:44;fdiotalevi;Thanks.
I linked the wiki to the new attachment.",17/Sep/09 22:35;db82407;eclipse template now correctly reflects felix coding standards.,,,,,,,,,,,,,,,,,,,,
[gogo] command not found ignored in pipelines,FELIX-1405,12431277,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,23/Jul/09 18:07,30/Sep/09 21:39,14/Mar/19 02:47,25/Aug/09 12:49,,,,,,,,,,,gogo-0.2.0,,,,Gogo Runtime,,,,,,,0,,,,,,"% bad x
E: IllegalArgumentException: Command not found: *:bad

% bad x | grep y
false 

The error message should still occur, even if the bad command is in a pipeline.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57619,,,Tue Aug 25 12:49:47 UTC 2009,,,,,,0|i1ar5z:,270867,,,,,,,,"23/Jul/09 22:19;db82407;the result of a pipeline is defined by its last element
so an exception should not be thrown from from a mid-pipe element
instead just log message so the mid-pipe exception is not completely ignored.","25/Aug/09 12:45;db82407;The fix to this issue now reports errors twice:

% bad x         
pipe: java.lang.IllegalArgumentException: Command not found: bad
IllegalArgumentException: Command not found: bad","25/Aug/09 12:49;db82407;bad commands are now only reported once:

% bad x         
IllegalArgumentException: Command not found: bad

% bad x | grep y
pipe: java.lang.IllegalArgumentException: Command not found: bad
false
",,,,,,,,,,,,,,,,,,,,,,,,
[gogo] IO redirection does not work for nested executions,FELIX-1403,12431263,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,db82407,db82407,db82407,23/Jul/09 15:20,30/Sep/09 21:39,14/Mar/19 02:47,23/Jul/09 15:49,,,,,,,,,,,gogo-0.2.0,,,,Gogo Runtime,,,,,,,0,,,,,,"example uses karaf, but problem is in gogo runtime:

karaf@root> osgi:list | grep osgi
[  18] [Active     ] [           ] [   30] org.osgi.impl.bundle.jmx (4.2.0.200907080519)

above works as expected.

now define a closure:

karaf@root> list = { osgi:list}
org.apache.felix.gogo.runtime.shell.Closure@23113e

karaf@root> list | grep osgi
START LEVEL 100
   ID   State         Blueprint     Level  Name
[ snip ]

output from closure is not piped into grep.



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57621,,,Thu Jul 23 15:49:29 UTC 2009,,,,,,0|i0w127:,184977,,,,,,,,"23/Jul/09 15:49;db82407;changed Pipe.java to remember IO in thread local fields.
Use these thread local values to initialise IO in Pipe constructor.

added tests to testPipe().",,,,,,,,,,,,,,,,,,,,,,,,,,
Manifest localization with fragments not handled correctly,FELIX-1401,12431154,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,22/Jul/09 16:36,22/Jul/09 16:37,14/Mar/19 02:47,22/Jul/09 16:37,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Then localizing manifest headers, the host should consult its attached fragments. Conversely, the fragment must search its host. Currently, we do neither of these.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57623,,,Wed Jul 22 16:37:49 UTC 2009,,,,,,0|i0vymv:,184584,,,,,,,,22/Jul/09 16:37;rickhall;I committed a patch for this.,,,,,,,,,,,,,,,,,,,,,,,,,,
bootdelegation and dynamic-import-packages are accepting invalid patterns,FELIX-1400,12431145,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sauthieg,sauthieg,22/Jul/09 15:17,23/Jul/09 12:13,14/Mar/19 02:47,22/Jul/09 15:59,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"Regarding the spec, the description format of a package/pattern should be the following:
package-name | package-name '.*' |  '*'
So it seems that describing a package like 'com.sun.corba*' is wrong.
But it works with Felix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-22 15:59:58.617,,,no_permission,,,,,,,,,,,57624,,,Thu Jul 23 12:13:47 UTC 2009,,,,,,0|i0vynj:,184587,,,,,,,,"22/Jul/09 15:59;rickhall;Dynamic import was not actually matching, it treated it as part of the package name, which would never match anything. Boot delegation was matching partial package names, though.

I modified dynamic import parsing to throw an exception, so such a bundle would fail to install now due to invalid manifest syntax. For boot delegation, I simply ignore the wildcard if the package name does not end in "".*"", which treats it as part of the package name and will never match anything (this is equivalent to ignoring it).

Please close if you are satisfied.","23/Jul/09 12:13;sauthieg;Works great
Thanks",,,,,,,,,,,,,,,,,,,,,,,,,
"Required execution environment verification should happen at resolve time, not install time",FELIX-1397,12431084,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,21/Jul/09 22:38,21/Jul/09 22:46,14/Mar/19 02:47,21/Jul/09 22:46,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Currently, Felix verifies required execution environments at install time, but it is supposed to be done at resolve time according to the spec.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57627,,,Tue Jul 21 22:46:35 UTC 2009,,,,,,0|i1ar6n:,270870,,,,,,,,21/Jul/09 22:46;rickhall;Committed a patch for this.,,,,,,,,,,,,,,,,,,,,,,,,,,
"Convert sigil build files to reference org.apache artifacts vs org.cauldron, i.e. move towards self hosting",FELIX-1396,12431070,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,21/Jul/09 20:40,01/Oct/09 08:29,14/Mar/19 02:47,01/Oct/09 08:29,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57628,,,Thu Oct 01 08:29:36 UTC 2009,,,,,,0|i0w0tr:,184939,,,,,,,,"01/Oct/09 08:29;davemssavage;All cauldron references have been removed from build files, still a couple of references in code in form of static strings - will raise a separate issue for these.",,,,,,,,,,,,,,,,,,,,,,,,,,
Failure to resolve required bundle when available version has qualifier,FELIX-1395,12431069,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,21/Jul/09 20:34,28/Jul/09 18:55,14/Mar/19 02:47,28/Jul/09 18:55,,,,,,,,,,,,,,,Sigil,,,,,,,0,,,,,,"SigilParser fails to resolve bundles when require bundle specifies an open range and the bundle that is available has a qualifier e.g. 

Require-Bundle: org.foo.example;version=1.0.0 
Bundle-SymbolicName: org.foo.example
Bundle-Version: 1.0.0.1

This is because SigilResolver converts the require bundle version into an explicit version requirement for the purposes of downloading the version that the parse stage discovered (line 246):

range = ""["" + revision + "","" + revision + ""]"";

",,,,,,,,,,,,,,,,,,,,21/Jul/09 20:36;davemssavage;sigil-parser-patch.txt;https://issues.apache.org/jira/secure/attachment/12414142/sigil-parser-patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57629,,,Tue Jul 21 20:36:32 UTC 2009,,,,,,0|i0w0v3:,184945,,,,,,,,"21/Jul/09 20:36;davemssavage;the following patch seems to fix things, but not sure if this has other unintended consequences",,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractOBRBundleRepository throws a FileNotFoundException if parent directory of obr cache does not exist,FELIX-1394,12431040,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,21/Jul/09 16:23,21/Jul/09 16:41,14/Mar/19 02:47,21/Jul/09 16:41,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,Solution is to call file.getParentFile().mkdirs(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57630,,,2009-07-21 16:23:06.0,,,,,,0|i1ar6v:,270871,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sigil-ivy-plugin reports an error when trying to resolve nested bundles that are declared in Bundle-Classpath but are missing from jar,FELIX-1392,12431035,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,21/Jul/09 15:46,21/Jul/09 16:40,14/Mar/19 02:47,21/Jul/09 16:40,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"See following resolution failure for example

     [echo] eclipse.utils

ivy-taskdefs:

load-ivy:

resolve:
:: loading settings :: file = /opt/development/felix-trunk/sigil/bldcommon/ivysettings.xml
[ivy:resolve] downloading file:/opt/development/felix-trunk/sigil/bldcommon/lib/org.eclipse.core.contenttype_3.3.0.v20080604-1400.jar ...
[ivy:resolve]   [SUCCESSFUL ] sigil#org.eclipse.core.contenttype;3.3.0.v20080604-1400!org.eclipse.core.contenttype.jar (5ms)
[ivy:resolve] downloading file:/opt/development/felix-trunk/sigil/bldcommon/lib/org.eclipse.ui.workbench_3.4.1.M20080827-0800a.jar ...
[ivy:resolve]   [SUCCESSFUL ] sigil#org.eclipse.ui.workbench;3.4.1.M20080827-0800a!org.eclipse.ui.workbench.jar (128ms)
[ivy:resolve] downloading jar:file:/opt/development/felix-trunk/sigil/bldcommon/lib/org.eclipse.ui.workbench_3.4.1.M20080827-0800a.jar!/compatibility.jar ...
[ivy:resolve] downloading file:/opt/development/felix-trunk/sigil/bldcommon/lib/org.eclipse.core.expressions_3.4.1.r342_v20081203-0800.jar ...
[ivy:resolve]   [SUCCESSFUL ] sigil#org.eclipse.core.expressions;3.4.1.r342_v20081203-0800!org.eclipse.core.expressions.jar (5ms)
[ivy:resolve] downloading file:/opt/development/felix-trunk/sigil/bldcommon/lib/org.eclipse.ui.ide_3.4.2.M20090127-1700.jar ...
[ivy:resolve]   [SUCCESSFUL ] sigil#org.eclipse.ui.ide;3.4.2.M20090127-1700!org.eclipse.ui.ide.jar (27ms)
[ivy:resolve] downloading file:/opt/development/felix-trunk/sigil/bldcommon/hack/org.eclipse.core.runtime_3.4.0.v20080512.jar ...
[ivy:resolve]   [SUCCESSFUL ] sigil#org.eclipse.core.runtime;3.4.0.v20080512!org.eclipse.core.runtime.jar (3ms)
[ivy:resolve] downloading file:/opt/development/felix-trunk/sigil/bldcommon/lib/org.eclipse.core.resources_3.4.1.R34x_v20080902.jar ...
[ivy:resolve]   [SUCCESSFUL ] sigil#org.eclipse.core.resources;3.4.1.R34x_v20080902!org.eclipse.core.resources.jar (117ms)
[ivy:resolve] 
[ivy:resolve] :: problems summary ::
[ivy:resolve] :::: WARNINGS
[ivy:resolve]           [FAILED     ] sigil#org.eclipse.ui.workbench;3.4.1.M20080827-0800a!org.eclipse.ui.workbench!compatibility.jar: JAR entry compatibility.jar not found in /opt/development/felix-trunk/sigil/bldcommon/lib/org.eclipse.ui.workbench_3.4.1.M20080827-0800a.jar (3ms)
[ivy:resolve]           [FAILED     ] sigil#org.eclipse.ui.workbench;3.4.1.M20080827-0800a!org.eclipse.ui.workbench!compatibility.jar: JAR entry compatibility.jar not found in /opt/development/felix-trunk/sigil/bldcommon/lib/org.eclipse.ui.workbench_3.4.1.M20080827-0800a.jar (3ms)
[ivy:resolve]   ==== sigil: tried
[ivy:resolve]           ::::::::::::::::::::::::::::::::::::::::::::::
[ivy:resolve]           ::              FAILED DOWNLOADS            ::
[ivy:resolve]           :: ^ see resolution messages for details  ^ ::
[ivy:resolve]           ::::::::::::::::::::::::::::::::::::::::::::::
[ivy:resolve]           :: sigil#org.eclipse.ui.workbench;3.4.1.M20080827-0800a!org.eclipse.ui.workbench!compatibility.jar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57632,,,2009-07-21 15:46:04.0,,,,,,0|i0vylr:,184579,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build error in eclipse when dependent sigil project has extra library bundles on classpath,FELIX-1390,12431033,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,21/Jul/09 15:26,21/Jul/09 15:40,14/Mar/19 02:47,21/Jul/09 15:40,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"For example (from sigil build console)

INFO: creating bundle: org.apache.felix.sigil.eclipse.help
...
ERROR: BND: Missing file on classpath: /org.apache.felix.sigil.eclipse.core/lib/commons-lang-2.4.jar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57634,,,2009-07-21 15:26:53.0,,,,,,0|i0w0tj:,184938,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Main div is not closed,FELIX-1389,12430954,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,20/Jul/09 19:51,20/Jul/09 19:53,14/Mar/19 02:47,20/Jul/09 19:53,webconsole-1.2.10,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,The main div is opened in the header but never closed in the footer.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57635,,,Mon Jul 20 19:53:02 UTC 2009,,,,,,0|i0vylz:,184580,,,,,,,,20/Jul/09 19:53;cziegeler;Fixed in revision 795976,,,,,,,,,,,,,,,,,,,,,,,,,,
"FileInstall attempts to uninstall ""System Bundle""",FELIX-1382,12430870,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fdiotalevi,sahoo,sahoo,19/Jul/09 07:49,20/Jul/09 04:24,14/Mar/19 02:47,19/Jul/09 11:40,fileinstall-1.2.0,,,,,,,,,,fileinstall-2.0.0,,,,File Install,,,,,,,0,,,,,,"This is pretty strange behavior that I observed when I started my program from the same directory which was observed by fileinstall. I saw the following output:

INFO: Failed to uninstall bundle: /space/ss141213/WS/gf/v3.trunk.new/publish/glassfishv3/glassfish/modules/System Bundle: org.osgi.framework.BundleException: Cannot uninstall the system bundle.
Jul 19, 2009 1:09:55 PM  
INFO: org.osgi.framework.BundleException: Cannot uninstall the system bundle.
Jul 19, 2009 1:09:55 PM  
INFO:   at org.apache.felix.framework.Felix.uninstall(Felix.java:796)
Jul 19, 2009 1:09:55 PM  
INFO:   at org.apache.felix.fileinstall.DirectoryWatcher.uninstall(DirectoryWatcher.java:758)
Jul 19, 2009 1:09:55 PM  
INFO:   at org.apache.felix.fileinstall.DirectoryWatcher.uninstall(DirectoryWatcher.java:644)
Jul 19, 2009 1:09:55 PM  
INFO:   at org.apache.felix.fileinstall.DirectoryWatcher.doInstalled(DirectoryWatcher.java:379)
Jul 19, 2009 1:09:55 PM  
INFO:   at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:123)

This is a regression. Looking at the code, I tracked this regression to changes made while fixing issue FELIX-1228. I am attaching a patch to address this bug.",generic,,,,,,,,,,,,,,,,,,,19/Jul/09 07:53;sahoo;Felix-1382.patch;https://issues.apache.org/jira/secure/attachment/12413945/Felix-1382.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-19 11:40:23.735,,,no_permission,,,,,,,,,,,57642,,,Sun Jul 19 11:40:23 UTC 2009,,,,,,0|i1ar87:,270877,,,,,,,,19/Jul/09 07:53;sahoo;Patch,"19/Jul/09 11:40;fdiotalevi;Hi Sahoo,
  I've reproduced the bug in my local installation and applied the patch.

svn ci -m ""FELIX-1382. FileInstall attempts to uninstall SystemBundle. Patch provided by Sahoo""
Sending        fileinstall/src/main/java/org/apache/felix/fileinstall/Jar.java
Transmitting file data .
Committed revision 795520.

Please close the issue if satisfied.
",,,,,,,,,,,,,,,,,,,,,,,,,
AbstractBundleRepository does not trim white space from bundle classpath entries,FELIX-1380,12430854,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,18/Jul/09 14:16,18/Jul/09 14:20,14/Mar/19 02:47,18/Jul/09 14:20,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"Specifically this fails when reading org.eclipse.equinox.registry_3.4.0.v20080516-0950.jar

Which has:

Bundle-ClassPath: runtime_registry_compatibility.jar, .",,,,,,,,,,,FELIX-1367,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57644,,,2009-07-18 14:16:36.0,,,,,,0|i0w0nr:,184912,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractBundleRepository does not read fragment-host headers from Manifest,FELIX-1379,12430812,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,17/Jul/09 20:24,17/Jul/09 20:34,14/Mar/19 02:47,17/Jul/09 20:34,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,AbstractBundleRepository provides a mechanism to construct the sigil internal model of a bundle from a specified java.util.jar.Manifest however it ignores the fragment host information.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57645,,,2009-07-17 20:24:58.0,,,,,,0|i0vynz:,184589,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optional branding does not work in new gogo console,FELIX-1378,12430798,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,tmoloney,tmoloney,17/Jul/09 18:14,27/Jul/09 14:02,14/Mar/19 02:47,27/Jul/09 08:03,,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,It was intended for the default branding to come from /org/apache/felix/karaf/gshell/console/branding.properties and that optional branding to come from /org/apache/felix/karaf/branding/branding.properties.  The optional branding does not work.,,,,,,,,,,,,,,,,,,,,17/Jul/09 18:16;tmoloney;FELIX-1378-KarafConsoleBranding.patch;https://issues.apache.org/jira/secure/attachment/12413836/FELIX-1378-KarafConsoleBranding.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-27 08:03:55.849,,,no_permission,,,,,,,,,,,57646,,,Mon Jul 27 14:02:35 UTC 2009,,,,,,0|i1ar8n:,270879,,,,,,,,"17/Jul/09 18:16;tmoloney;This patch modifies pom.xml to optionally import org.apache.felix.karaf.branding.

Oops, this patch should be applied to karaf/gshell/gshell-console.
","27/Jul/09 08:03;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/gshell/gshell-console/pom.xml
Committed r798069
","27/Jul/09 14:02;tmoloney;It works for me.

Closing issue.

Thanks.
",,,,,,,,,,,,,,,,,,,,,,,,
fileinstall tries to process files which are not fully copied yet ,FELIX-1377,12430750,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,lhein,lhein,17/Jul/09 09:48,08/Sep/09 13:19,14/Mar/19 02:47,31/Aug/09 06:42,karaf-1.0.0,,,,,,,,,,fileinstall-2.0.0,,,,File Install,Karaf,,,,,,0,,,,,,"The file monitor tries to deploy files which are not fully copied yet and throw an IOException trying this. Afterwards this file is not processed again until it somehow changes or is copied again.

This issue is related to:
https://issues.apache.org/activemq/browse/SMX4-322",,,,,,,,,,,,,,,FELIX-922,,,,,17/Jul/09 09:48;lhein;Karaf.FileMonitor.java.patch;https://issues.apache.org/jira/secure/attachment/12413793/Karaf.FileMonitor.java.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-12 15:04:04.157,,,no_permission,,,,,,,,,,,57647,,,Mon Aug 31 06:42:51 UTC 2009,,,,,,0|i1419b:,231666,,,,,,,,17/Jul/09 09:48;lhein;added patch,12/Aug/09 15:04;gnt;I've included this patch in the patch to FELIX-922 fwiw.,"14/Aug/09 06:55;gnt;Moving this issue to fileinstall as we're trying to merge both.

The problem with the proposed solution is that it does not scale to many bundles, as the thread would be blocked 100 ms * number of bundles.

In the latest patch I've attached to FELIX-922, I've rewritten the logic to use a checksum for the file computed from its name, length and last modification date.
If the checksum changes, the Scanner will wait until it does not change anymore, allowing for very big copy to take place and not report the changes until the copy is finished.","31/Aug/09 06:42;gnt;URL: http://svn.apache.org/viewvc?rev=809470&view=rev
",,,,,,,,,,,,,,,,,,,,,,,
Eclipse classpath container should honour fragment attachment rules when setting up accessibility rules,FELIX-1374,12430709,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,16/Jul/09 21:03,17/Jul/09 20:33,14/Mar/19 02:47,17/Jul/09 20:33,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"Consider the following two bundles: org.eclipse.swt and org.eclipse.swt.carbon.macosx the later being a fragment that attaches to the former.

Currently if the two bundles are placed on the classpath the eclipse plugin for sigil masks out the packages in the fragment that are not explicitly exported by the fragment, where as the correct OSGi behaviour is for the fragment to inherit the visibility characteristics of the host.",,,,,,,,,,,FELIX-1367,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57650,,,2009-07-16 21:03:24.0,,,,,,0|i1ar8v:,270880,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
featuresBoot in etc/org.apache.felix.karaf.featues no longer works,FELIX-1373,12430707,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,tmoloney,tmoloney,16/Jul/09 21:00,27/Jul/09 14:01,14/Mar/19 02:47,27/Jul/09 08:01,,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,"The features listed in the featuresBoot parameter of the org.apache.felix.karaf.features configuration no longer load automatically at boot time.

There appears to be lazy loading so features aren't actually loaded until a features command is executed on the console.
",,,,,,,,,,,,,,,,,,,,17/Jul/09 19:03;tmoloney;FELIX-1373-FeaturesBoot.patch;https://issues.apache.org/jira/secure/attachment/12413842/FELIX-1373-FeaturesBoot.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-27 08:01:20.098,,,no_permission,,,,,,,,,,,57651,,,Mon Jul 27 14:01:57 UTC 2009,,,,,,0|i0vyo7:,184590,,,,,,,,"17/Jul/09 19:03;tmoloney;This patch modified gshell-features to load immediately, rather than lazily, so that the features listed in featuresBoot will load when Karaf is started.","27/Jul/09 08:01;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/gshell/gshell-features/src/main/resources/OSGI-INF/blueprint/gshell-features.xml
Committed r798067
","27/Jul/09 14:01;tmoloney;It works for me.

Closing issue.

Thanks.
",,,,,,,,,,,,,,,,,,,,,,,,
Automatic parent class loader delegation does not correctly filter calls to Bundle.loadClass(),FELIX-1371,12430678,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,16/Jul/09 15:08,16/Jul/09 15:09,14/Mar/19 02:47,16/Jul/09 15:09,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"Our hack to determine whether we should automatically delegate to the parent class loader in certain cases when a class is not found has a bug. It tries to do filter calls to Bundle.loadClass(), but does so incorrectly. It uses Class.isInstance() when it should be using Class.isAssignableFrom().",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57653,,,Thu Jul 16 15:09:36 UTC 2009,,,,,,0|i1ar93:,270881,,,,,,,,16/Jul/09 15:09;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
Sometimes the configuration for org.apache.felix.webconsole.internal.servlet.OsgiManager is ignored,FELIX-1370,12430670,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,tmoloney,tmoloney,16/Jul/09 14:16,19/Dec/16 17:24,14/Mar/19 02:47,19/Oct/09 14:43,,,,,,,,,,,webconsole-2.0.2,,,,Web Console,,,,,,,0,,,,,,"About half of the time, I can access the webconsole as expected using the username/password karaf/karaf.  The other times it appears that the configuration for org.apache.felix.webconsole.internal.servlet.OsgiManager is ignored and I have to log in as admin/admin (the default webconsole username/password).

This can happen after a fresh start of karaf and loading the webconsole using ""features:install webconsole"".  It also happens when reloading the webconsole using ""features:uninstall webconsole"" and ""features:install webconsole"".
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-16 18:42:45.612,,,no_permission,,,,,,,,,,,57654,,,Mon Oct 19 14:43:33 UTC 2009,,,,,,0|i0vqzr:,183346,,,,,,,,"16/Jul/09 18:42;fmeschbe;Can you check whether the org.apache.felix.webconsole.internal.servlet.OsgiManager configuration object is still locked to the old web console bundle by looking at the bundle.location property ?

What Configuation Admin service implementation (and version) are you using ?","16/Jul/09 19:29;tmoloney;When it is working correctly (karaf/karaf), ""config:list"" shows

Pid:            org.apache.felix.webconsole.internal.servlet.OsgiManager
BundleLocation: mvn:org.apache.felix/org.apache.felix.webconsole/1.2.11-SNAPSHOT
Properties:
   service.pid = org.apache.felix.webconsole.internal.servlet.OsgiManager
   password = karaf
   username = karaf

When it isn't working correctly (admin/admin), ""config:list"" shows the same.

Pid:            org.apache.felix.webconsole.internal.servlet.OsgiManager
BundleLocation: mvn:org.apache.felix/org.apache.felix.webconsole/1.2.11-SNAPSHOT
Properties:
   service.pid = org.apache.felix.webconsole.internal.servlet.OsgiManager
   password = karaf
   username = karaf


I'm using what is specified in the karaf startup.properties file, which is

  org/apache/felix/org.apache.felix.configadmin/1.0.4/org.apache.felix.configadmin-1.0.4.jar=10
","16/Jul/09 21:55;tmoloney;I started using org.apache.felix.configadmin 1.0.10 and haven't seen the problem.

Perhaps the problem has already been fixed and Karaf just needs to update its configuration file to use the latest release.
",16/Jul/09 22:30;fmeschbe;Cool. Thanks for the feedback. So I step out of this issue again and leave it to the more Karaf-knowledgeable to fix the setup.,"20/Jul/09 22:41;tmoloney;I spoke too soon.

I am still seeing the configuration for org.apache.felix.webconsole.internal.servlet.OsgiManager being ignored.

It appears to be ignored less frequently with org.apache.felix.configadmin 1.0.10 than with org.apache.felix.configadmin 1.0.4, but it is still happening.
",07/Sep/09 15:55;gnt;Hopefully this will work much better with configadmin 1.2.0.  I've updated karaf to use this latest version.,09/Sep/09 02:08;tmoloney;Would it be a good idea to update configadmin to 1.2.4 that was just released?  I can start testing with that.  I don't think I saw any problems with 1.2.3-SNAPSHOT.,"05/Oct/09 14:39;kmshi_array;I met this problem right now. My env was:

Configuration Admin 1.2.4
File Install 2.0.0
Web Management Console 1.2.10
Pax Web container 0.6.0","19/Oct/09 14:43;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/OsgiManager.java
Committed r826687
",,,,,,,,,,,,,,,,,,
Bundle classpath should verify that internal bundle classpath elements actually exist inside bundle before adding them to eclipse classpath,FELIX-1366,12430648,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,davemssavage,davemssavage,16/Jul/09 08:58,16/Jul/09 19:40,14/Mar/19 02:47,16/Jul/09 19:40,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,"Consider the following bundle from eclipse:

$ unzip -p bldcommon/lib/org.eclipse.ui.workbench_3.4.1.M20080827-0800a.jar META-INF/MANIFEST.MF | grep jar
Bundle-ClassPath: compatibility.jar,.

It claims to have an internal compatability jar inside it. But analysis shows otherwise

$ jar -tf bldcommon/lib/org.eclipse.ui.workbench_3.4.1.M20080827-0800a.jar | grep jar
$

This leads to the error:

Description	Resource	Path	Location	Type
Project 'org.cauldron.sigil.core' is missing required library: '/opt/development/eclipse/workspace/sigil-apache/.metadata/.plugins/org.cauldron.sigil.core/bundle-cache/org.eclipse.ui.workbench_version_3.4.1.M20080827-0800a/compatibility.jar'	org.cauldron.sigil.core		Build path	Build Path Problem

Would be better to silently discard.",,,,,,,,,,,FELIX-1367,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57658,,,Thu Jul 16 19:40:24 UTC 2009,,,,,,0|i1ar9j:,270883,,,,,,,,"16/Jul/09 19:40;davemssavage;fixed on trunk by testing file exists:

Path p = ""."".equals(cp) ? path : cache.append(cp);
f ( p.toFile().exists() ) {
// do previous logic
}
",,,,,,,,,,,,,,,,,,,,,,,,,,
Stack overflow on Java 2 Security evaluation of getLocation() in WebSphere ,FELIX-1363,12430642,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,gvbrakel,gvbrakel,16/Jul/09 08:16,22/Sep/09 09:55,14/Mar/19 02:47,22/Sep/09 09:55,framework-1.2.1,framework-1.4.1,framework-1.8.0,framework-1.8.1,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"When the Felix framework is used in an application in WebSphere, the Java 2 Security permission evaluation of Felix.getLocation() causes a Stack Overflow.
 
The Stack Overflow is caused by an incompatiblity between classes of the Felix framework and the framework classes present in WebSphere.
 
When the permissions for Felix.getLocation() are evaluated, an AdminPermission object is created and evaluated. The AdminPermission permission object created is not the one supplied by the Felix framework, but one found higher on the classpath: the WebSphere/eclipse version of the AdminPermission class. This version of the class is incompatible with Felix, as it uses getLocation() in its evaluation. 

ways to work around or solve this problem:
1) disable Java 2 Security (not acceptable by company policy)
2) grant a global AllPermissions (not acceptable by company policy): by specifying global AllPermissions, the evaluation of permissions seems to be avoided
3) modify the Felix Framework in such a way that no permissions are set/evaluated for getLocation()
4) modify the Websphere / eclipse version of AdminPermission in such a way that no getLocation() is used in its evaluation

A test for option 3 has been performed on Felix 1.2.1. If the permission test is removed from BundleImpl.getLocation() and Felix.getLocation(), the stack overflow does not appear. Of course the permission test is lost in the process.",WebSphere 6.1 with Java 2 Security enabled,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-16 10:55:08.871,,,no_permission,,,,,,,,,,,57661,,,Tue Sep 22 09:55:30 UTC 2009,,,,,,0|i0vyof:,184591,,,,,,,,"16/Jul/09 10:55;fmeschbe;Hmm, The problem is probably, that the AdminPermission class of the WebSphere framework (Equinox) should not be used if the Felix library provides its on implementation.

The reason is the servlet spec itself, which IIRC that web application class loaders should first inspect the web applications for classes before going into the parent class loader.

WebSphere in particular has a setting (on web application) level which allows configuring whether to prefer parentloader-first (Java default) or parentloader-last (preferred here). You should enable that configuration.

Another option, which is what we use in Apache Sling to be sure, is to have the web application create its own classloader in which we load the framework and the rest. That custom classloader implements the parentloader-last strategy and as such would then use the Felix framework AdminPermission class instead of the that of WebSphere.

Whatever: I don't think that this problem is something that the Felix framework proper should care about inside its code.

Just my CHF.02","17/Jul/09 14:58;gvbrakel;Felix,

I can understand that Felix prefers to use its own classes. However, the AdminPermission class resides in org.osgi.framework-package, and is probably present in each OSGi implemenation. OSGi is all about avoiding dependency problems like these. I would expect that OSGi implementors do not only provide a more or less problem free environment, but also try to avoid depency problems in the environment they run in themselves.  This includes to my opinion agreeing with the OSGi specificators or other implementors on what can be expected from shared classes and on what they are allowed to do.

Is it allowed and can it be expected for AdminPermission implementations () to call getLocation()?
Either it is, and then getLocation should not use AdminPermission
Or it isn't, and then no AdminPermission implementation is allowed to call it.

The Felix source of AdminPermission suggests  that  there is a 'standard' implementation of AdminPermission that is replaced. I don't know the details about what and why,  but it could be that it is just this replacement that enabled the use of AdminPermission in getLocation().","27/Jul/09 07:15;gvbrakel;It seems like the cause of the problem is not an incompatibility of Felix and WebSphere / Equinox, but is caused by nesting one framework in another, in combination with Java 2 Security. Security evaluation for the inner framework hits policy rules probably meant for bundles of the outer framework.
I can imagine that something like namespaces in policies are required to fix this.","22/Sep/09 09:55;gvbrakel;Issue has been fixed by introduction of ThreadLocal recurse in AdminPermission, and it's use in AdminPermission.getProperties()",,,,,,,,,,,,,,,,,,,,,,,
Command install feature does not work anymore in apache felix karaf since gogo switch,FELIX-1362,12430513,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,cmoulliard,cmoulliard,15/Jul/09 15:45,17/Jul/09 07:11,14/Mar/19 02:47,17/Jul/09 07:11,,,,,,,,,,,,,,,Karaf,,,,,,,0,,,,,,"D:\Dvlpt\Java\workspace-ganymede\x3s\server\apache-felix-karaf-1.2.0-SNAPSHOT\bin>karaf
        __ __                  ____
       / //_/____ __________ _/ __/
      / ,<  / __ `/ ___/ __ `/ /_
     / /| |/ /_/ / /  / /_/ / __/
    /_/ |_|\__,_/_/   \__,_/_/

  Apache Felix Karaf (1.2.0-SNAPSHOT)

Type 'help' for more information.

karaf@root> karaf
karaf
karaf@root> karaf@root> osgi
osgi
karaf@root> karaf@root> list
START LEVEL 100
   ID   State         Blueprint     Level  Name
[   0] [Active     ] [           ] [    0] System Bundle (1.9.0.SNAPSHOT)
[   1] [Active     ] [           ] [   10] Apache Felix Configuration Admin Service (1.0.4)
[   2] [Active     ] [           ] [   10] Apache Felix Prefrences Service (1.0.2)
[   3] [Active     ] [Created    ] [   20] Apache Geronimo Blueprint Bundle (1.0.0.SNAPSHOT)
[   4] [Active     ] [           ] [    8] OPS4J Pax Logging - Service (1.3.1.SNAPSHOT)
[   5] [Active     ] [           ] [    8] OPS4J Pax Logging - API (1.3.1.SNAPSHOT)
[   6] [Active     ] [           ] [    5] OPS4J Pax Url - wrap: (0.3.3)
[   7] [Active     ] [           ] [    5] OPS4J Pax Url - mvn: (0.3.3)
[   8] [Active     ] [Created    ] [   30] Apache Felix Karaf :: GShell PackageAdmin Commands (1.2.0.SNAPSHOT)
[   9] [Active     ] [Created    ] [   30] Apache Felix Karaf :: Spring Deployer (1.2.0.SNAPSHOT)
[  10] [Active     ] [           ] [   30] Apache MINA Core (2.0.0.M6)
[  11] [Active     ] [Created    ] [   30] Apache Felix Karaf :: Blueprint Deployer (1.2.0.SNAPSHOT)
[  12] [Active     ] [Created    ] [   30] Apache Felix Karaf :: GShell OSGi Commands (1.2.0.SNAPSHOT)
[  13] [Active     ] [Created    ] [   30] Apache Felix Karaf :: Management (1.2.0.SNAPSHOT)
[  14] [Active     ] [Created    ] [   30] Apache Felix Karaf :: GShell Console (1.2.0.SNAPSHOT)
[  15] [Active     ] [Created    ] [   30] Apache Felix Karaf :: GShell ConfigAdmin Commands (1.2.0.SNAPSHOT)
[  16] [Active     ] [Created    ] [   30] Apache Felix Karaf :: GShell Admin (1.2.0.SNAPSHOT)
[  17] [Active     ] [Created    ] [   30] Apache Felix Karaf :: JAAS Config (1.2.0.SNAPSHOT)
[  18] [Active     ] [Created    ] [   30] Apache Felix Karaf :: GShell Features (1.2.0.SNAPSHOT)
[  19] [Active     ] [Created    ] [   30] Apache Felix Karaf :: GShell SSH (1.2.0.SNAPSHOT)
[  20] [Active     ] [Created    ] [   30] Apache Felix Karaf :: Features Deployer (1.2.0.SNAPSHOT)
[  21] [Active     ] [Created    ] [   30] Apache Felix Karaf :: GShell Various Commands (1.2.0.SNAPSHOT)
[  22] [Active     ] [           ] [   30] Apache Mina SSHD :: Core (1.0.0.SNAPSHOT)
[  23] [Active     ] [Created    ] [   30] Apache Felix Karaf :: GShell Log Commands (1.2.0.SNAPSHOT)
[  24] [Active     ] [Created    ] [   30] Apache Felix Karaf :: JAAS Modules (1.2.0.SNAPSHOT)
[  25] [Active     ] [           ] [   30] Apache Felix Gogo Shell Runtime (0.9.0.SNAPSHOT)
[  26] [Active     ] [           ] [   15] Apache Felix Karaf :: File Monitor (1.2.0.SNAPSHOT)
karaf@root> karaf@root> features
features
karaf@root> karaf@root> install obr
java.net.MalformedURLException: no protocol: obr
karaf@root> karaf@root>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-16 21:42:26.96,,,no_permission,,,,,,,,,,,57662,,,Fri Jul 17 07:11:10 UTC 2009,,,,,,0|i0vyn3:,184585,,,,,,,,"16/Jul/09 21:42;fdiotalevi;Hi, my understanding is that with gogo the interface is slightly different; you should install a feature typing
karaf@root> features:install obr

Can you please check and close the issue if it solve the problem?",17/Jul/09 07:11;cmoulliard;Features can be installed using the command : features: install obr,,,,,,,,,,,,,,,,,,,,,,,,,
Importing projects into workspace should trigger a reset of the project classpath,FELIX-1349,12430255,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,davemssavage,davemssavage,13/Jul/09 18:25,05/Aug/10 07:36,14/Mar/19 02:47,05/Mar/10 22:06,,,,,,,,,,,sigil-1.0.0,,,,Sigil,,,,,,,0,,,,,,Importing new projects may satisfy otherwise unsatisfied project dependencies. This will be resoved on eclipse restart but this is not very friendly for the developer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57675,,,Thu Aug 05 07:36:35 UTC 2010,,,,,,0|i0vzwv:,184791,,,,,,,,05/Mar/10 22:06;davemssavage;Marking this issue as fixed. Current patches ensure that classpath and error messages are updated when new projects are added to the workspace. There still appears to be one bug related to synchronization of the file system - but this can be easily fixed by refreshing projects in the workspace (I'll raise this as a new issue),05/Aug/10 07:36;davemssavage;closing all issues raised by me,,,,,,,,,,,,,,,,,,,,,,,,,
Issue in the metadata overiding analysis in iPOJO annotations,FELIX-1319,12430145,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,11/Jul/09 16:21,29/Jul/09 08:03,14/Mar/19 02:47,11/Jul/09 16:48,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"When a component type is declared with annotations, the iPOJO manipulator checks that the metadata.xml (if exists)does not overrides the component type. However, this detection finds non-conflicting declarations, and so skip some component type declared with annotations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57704,,,Wed Jul 29 08:03:02 UTC 2009,,,,,,0|i0w0of:,184915,,,,,,,,"11/Jul/09 16:48;clement.escoffier;Fixed at revision 793198.
The overriding detection badly interpret the 'name' attribute of instance declaration. However, instance declaration must not impact the overriding detected. So, now instances are skipped.",29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,,,,,
Case mismatch problem of iPOJO custom handler name ,FELIX-1318,12430132,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,xeraph,xeraph,11/Jul/09 08:10,12/Jul/09 10:26,14/Mar/19 02:47,12/Jul/09 08:14,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"In this case:

<handler classname=""org.example.handler.FooPluginHandler"" name=""fooplugin"" namespace=""org.example.handler"">
</handler>

<component classname=""org.example.plugins.ClassA"" name=""ComponentA"" immediate=""true"" architecture=""true"">
  <ex:FooPlugin />
</component>

<instance component=""ComponentA"" />

iPOJO recognize handler name only if handler name is all lower case. When I changed handler name to FooPlugin, iPOJO didn't instanciate ClassA instance. I think that iPOJO should accept exact handler name or do case-insensitive match.","Windows 2003, JRE 1.6.0 11-b03, Felix Framework 1.6.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-12 08:14:11.296,,,no_permission,,,,,,,,,,,57705,,,Sun Jul 12 10:26:35 UTC 2009,,,,,,0|i0vyjj:,184569,,,,,,,,"12/Jul/09 08:14;clement.escoffier;Fixed in the trunk.
Handlers are now selected by ignoring the case of the name and the namespace. Moreover, the HandlerDescription selection follows the same rule.

Please close if you're satisfied..",12/Jul/09 10:26;xeraph;It works! Thanks for fast response.,,,,,,,,,,,,,,,,,,,,,,,,,
DPs with Bundles having parametrized SymbolicNames throw Exception,FELIX-1305,12429740,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,tonit,tonit,07/Jul/09 19:32,01/Apr/14 12:48,14/Mar/19 02:47,11/Aug/09 12:52,,,,,,,,,,,,,,,Deployment Admin,,,,,,,0,,,,,,"For example: 
Bundle-SymbolicName=foo;singleton=true never matches installed bundle headers unless parameters are stripped. (Patch)
",,,,,,,,,,,,,,,,,,,,07/Jul/09 19:35;tonit;felix-deploymentadmin-symbolicname.patch;https://issues.apache.org/jira/secure/attachment/12412778/felix-deploymentadmin-symbolicname.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-11 12:52:02.858,,,no_permission,,,,,,,,,,,57715,,,Wed Oct 07 09:20:12 UTC 2009,,,,,,0|i0vr0f:,183349,,,,,,,,11/Aug/09 12:52;marrs;Just committed the patch. Please confirm that it works now.,"07/Oct/09 09:20;tonit;Yep, works. 
Sorry for being so late. Somehow the comment/patched applied hasn't received my mailbox.. or so ;)",,,,,,,,,,,,,,,,,,,,,,,,,
Manipulator never ignore annotations,FELIX-1302,12429606,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,pierre.bourret,pierre.bourret,06/Jul/09 13:00,08/Jul/09 10:24,14/Mar/19 02:47,07/Jul/09 07:24,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"
The manipulator seems to always process annotations, even when the user explicitly indicate to ignore them (via the iPOJO ant or maven plugin).

The org.apache.felix.ipojo.manipulator.Pojoization class has a private m_ignoreAnnotations boolean field, that is initialized to false (Java default value). The only method that modify this field is setAnnotationProcessing, that takes no parameters and 
set (unthinking) the field to false.

This method should take a boolean parameter indicating if the annotations must be processed or ignored.
",All,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-07 07:24:05.454,,,no_permission,,,,,,,,,,,57717,,,Wed Jul 08 10:24:23 UTC 2009,,,,,,0|i1arhz:,270921,,,,,,,,"07/Jul/09 07:24;clement.escoffier;Fixed at revision 791729.
Please check and close if you're satisfied.",08/Jul/09 10:24;pierre.bourret;The behaviour of the corrected manipulator has been tested and approved. Closing issue...,,,,,,,,,,,,,,,,,,,,,,,,,
@Property annotation processing broken when options used,FELIX-1296,12429399,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,kapyar,kapyar,02/Jul/09 15:45,05/Jul/09 12:07,14/Mar/19 02:47,02/Jul/09 18:44,maven-scr-plugin-1.2.0,,,,,,,,,,maven-scr-plugin-1.4.0,,,,SCR Tooling,,,,,,,0,,,,,,"Using @Property annotation with 'options' field set (with enclosed @PropertyOption annotations) lead to Maven build error:
...
[INFO] [scr:scr {execution: generate-scr-descriptor}]
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] java.util.ArrayList cannot be cast to [Lorg.apache.felix.scr.annotations.PropertyOption;
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.ClassCastException: java.util.ArrayList cannot be cast to [Lorg.apache.felix.scr.annotations.PropertyOption;
	at org.apache.felix.scrplugin.tags.annotation.defaulttag.PropertyTag$1.options(PropertyTag.java:65)
	at org.apache.felix.scrplugin.tags.annotation.defaulttag.PropertyTag.getParameters(PropertyTag.java:246)
	at org.apache.felix.scrplugin.PropertyHandler.processProperty(PropertyHandler.java:176)
	at org.apache.felix.scrplugin.PropertyHandler.processProperties(PropertyHandler.java:357)
[more stacktrace entries...]
",,,,,,,,,,,,,,,,,,,,02/Jul/09 15:47;kapyar;property_options.patch;https://issues.apache.org/jira/secure/attachment/12412402/property_options.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-02 18:44:53.777,,,no_permission,,,,,,,,,,,57723,,,Thu Jul 02 18:44:53 UTC 2009,,,,,,0|i0vyjr:,184570,,,,,,,,02/Jul/09 15:47;kapyar;Proposed patch.,"02/Jul/09 18:44;cziegeler;Hi Victor,

thanks for the patch - I've applied a modified version which handles both cases (single value, multi values) and correctly handles string, references etc.  in Revision: 790706
If this fixes your problem, please close this bug

Many thanks!
 ",,,,,,,,,,,,,,,,,,,,,,,,,
ServiceRegistry increments/decrements service use count after/before getService/ungetService() is called on ServiceFactory,FELIX-1295,12429390,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,bosschaert,bosschaert,02/Jul/09 13:40,30/Jul/09 15:18,14/Mar/19 02:47,29/Jul/09 20:16,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"The OSGi specification says about the call to BundleContext.getService():

""1 If the service has been unregistered, null is returned.
2 The context bundle's use count for this service is incremented by one.
3 If the context bundle's use count for the service is currently one and the
service was registered with an object implementing the ServiceFactory
interface, the ServiceFactory.getService(Bundle, ServiceRegistration)
method is called to create a service object for the context bundle.""

The OSGi specification says about the call to ServiceFactory.ungetService():

""The bundle's usage count for that service object must drop to zero 
after this call returns; that is, the bundle is about to release its last 
dependency on the service object.""

However, the current implementation decrements it just after ServiceFactory.getService() and just before ServiceFactory.ungetService().",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-29 20:16:40.813,,,no_permission,,,,,,,,,,,57724,,,Wed Jul 29 20:16:40 UTC 2009,,,,,,0|i1ariv:,270925,,,,,,,,03/Jul/09 09:51;bosschaert;The patch I just attached to FELIX-1277 contains a fix for this bug. ,"29/Jul/09 20:16;rickhall;I didn't commit this as part of FELIX-1277 because it is sufficiently unrelated and also because I noticed some issues and ended up trying to take a crack at fixing this issue differently. I think it is working now and still passing the TCK. Please close if you are satisfied, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,
Reference annotation contains private checked attribute,FELIX-1294,12429386,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,02/Jul/09 13:04,12/Mar/14 08:55,14/Mar/19 02:47,02/Jul/09 13:05,scr annotations 0.9.0,,,,,,,,,,scr annotations 1.0.0,,,,SCR Tooling,,,,,,,0,,,,,,The reference annotation contains the private checked attribute which should only be used internal.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57725,,,Thu Jul 02 13:05:26 UTC 2009,,,,,,0|i0w15z:,184994,,,,,,,,02/Jul/09 13:05;cziegeler;Fixed in revision: 790577,,,,,,,,,,,,,,,,,,,,,,,,,,
StringMap used for case insensitive properties does not respect ordering if case sensitivity is changed,FELIX-1293,12429320,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,01/Jul/09 19:51,01/Jul/09 19:55,14/Mar/19 02:47,01/Jul/09 19:55,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"Our utility StringMap class allows you to do case sensitive or insensitive string key lookups. It also allows you to change whether or not the lookup is case sensitive or not on the fly. Unfortunately, it does so incorrectly. It simply changes the comparator used by the TreeMap behind its back, which means existing keys will be sorted by the old comparator algorithm and new ones will be sorted by the new algorithm. We really need to reconstruct the tree using the new comparator if it changes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57726,,,Wed Jul 01 19:55:58 UTC 2009,,,,,,0|i1arj3:,270926,,,,,,,,01/Jul/09 19:55;rickhall;I committed a fix for this.,,,,,,,,,,,,,,,,,,,,,,,,,,
PackageAdmin.getBundle(Class) should return null if the bundle associated with the passed in class is from another framework,FELIX-1292,12429318,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,01/Jul/09 19:18,01/Jul/09 19:19,14/Mar/19 02:47,01/Jul/09 19:19,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,The spec says PackageAdmin.getBundle(Class) should return null for classes loaded from a bundle where the bundle is associated with a different framework. We are not specifically checking for this case and just blindly return the Bundle object for the other framework instance.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57727,,,Wed Jul 01 19:19:41 UTC 2009,,,,,,0|i0w15j:,184992,,,,,,,,01/Jul/09 19:19;rickhall;I committed a fix for this.,,,,,,,,,,,,,,,,,,,,,,,,,,
System bundle context should be null after stopping the framework,FELIX-1288,12429227,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,30/Jun/09 20:09,30/Jun/09 20:14,14/Mar/19 02:47,30/Jun/09 20:14,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,We need to invalidate and null the system bundle's context as part of framework shutdown.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57731,,,Tue Jun 30 20:14:55 UTC 2009,,,,,,0|i1arjj:,270928,,,,,,,,30/Jun/09 20:14;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
"System bundle operations from RFC-132 (e.g., init(), start(), stop(), waitForStop()) are using wrong lock object",FELIX-1287,12429215,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,30/Jun/09 18:27,30/Jun/09 19:28,14/Mar/19 02:47,30/Jun/09 19:28,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"The system bundle uses ""this"" as the lock object for performing operations on its state. For normal bundles, we acquire bundle locks, so we should probably do the same for the system bundle for consistency.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57732,,,Tue Jun 30 19:28:33 UTC 2009,,,,,,0|i0w13j:,184983,,,,,,,,30/Jun/09 19:28;rickhall;I committed a fix for this.,,,,,,,,,,,,,,,,,,,,,,,,,,
Module class loader should use secure action instead of a privileged block,FELIX-1286,12429213,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,30/Jun/09 18:20,30/Jun/09 20:32,14/Mar/19 02:47,30/Jun/09 20:32,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"Due to some refactoring, the module class loader was no longer being created in a privileged block, which was causing difficulties when running Felix with the security manager enabled. The refactoring made our existing SecureAction approach for performing secure actions in feasible (because the class loader became an instance inner class and cannot be created externally anymore). For Felix 1.8.1, we just simply wrapped it in a doPrivileged() block, but we should change this to use SecureAction operations like getting the constructor and invoking it. This may require we add some operations to SecureAction or reorganize the existing ones.",,,,,,,,,,,,FELIX-1154,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57733,,,Tue Jun 30 20:32:14 UTC 2009,,,,,,0|i0w13r:,184984,,,,,,,,30/Jun/09 20:32;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
SecureAction captures the calling context incorrectly,FELIX-1285,12429119,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,29/Jun/09 20:04,30/Jun/09 20:04,14/Mar/19 02:47,30/Jun/09 20:04,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"In SecureAction we capture the calling context for optimization purposes, but the context captures the current stack no matter who is on the stack. Since the whole point of SecureAction is to allow the framework to perform sensitive operations without worrying about who is on the call stack, this seems to be a bug since there could be someone with lower privileges on the stack. I think we need to capture the calling context inside a privileged block.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57734,,,Tue Jun 30 20:04:05 UTC 2009,,,,,,0|i0w13z:,184985,,,,,,,,30/Jun/09 20:04;rickhall;I committed a fix for this.,,,,,,,,,,,,,,,,,,,,,,,,,,
Package Admin - getExportedPackages must return null instead of an empty array,FELIX-1280,12429049,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,clement.escoffier,clement.escoffier,28/Jun/09 16:39,29/Jun/09 16:38,14/Mar/19 02:47,29/Jun/09 16:38,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"The PackageAdmin implementation has a minor bug in the getExportedPackages method. According to the spec, this method must return null if the bundle does not export any packages (currently). However, the Felix implementation returns an empty array. ",,,0,0,,0%,0,0,,,,,,,,,,,,28/Jun/09 16:40;clement.escoffier;org.apache.felix.framework.patch;https://issues.apache.org/jira/secure/attachment/12412020/org.apache.felix.framework.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-29 16:38:42.033,,,no_permission,,,,,,,,,,,57739,,,Mon Jun 29 16:38:42 UTC 2009,,,,,,0|i1arjr:,270929,,,,,,,,28/Jun/09 16:40;clement.escoffier;This trivial patch just returns null if the list of exported packages is empty.,29/Jun/09 16:38;rickhall;I committed a fix. I will close this simple issue. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,
Framework.waitForStop() does not obey timeout,FELIX-1279,12428986,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,26/Jun/09 20:03,26/Jun/09 20:04,14/Mar/19 02:47,26/Jun/09 20:04,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Framework.waitForStop() uses ThreadGate to cause threads to wait for the framework to shutdown. Unfortunately, ThreadGate.await(long) was basically ignoring the timeout value.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57740,,,Fri Jun 26 20:04:39 UTC 2009,,,,,,0|i1arjz:,270930,,,,,,,,26/Jun/09 20:04;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
DM/ AutoConfig is active event if setCallbacks method has been invoked,FELIX-1278,12428921,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,marrs,pderop,pderop,26/Jun/09 05:26,10/May/11 08:35,14/Mar/19 02:47,16/Nov/09 07:51,dependencymanager-2.0.1,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"Marcel, in this issue, I come back to you about an old thread that I posted last november 2008 here -> http://www.mail-archive.com/users@felix.apache.org/msg02582.html

In this thread, I mentioned a potential problem concerning AutoConfiguration: Indeed, AutoConfig is active by default, even if ServiceDependency.setCallbacks() method has been invoked. So, all Pojo's attributes (wich types are the same as the injected dependency) are overriden by reflexion (auto config mode).
Currently, each time I call setCallbacks(), I must take care of calling setAutoConfig(false) ... 
We think that AutoConfig mode should be disabled when setCallbacks methods is invoked.

/pierre",linux fc10/ jdk1.5/1.6,,,,,,,,,,,,,,,,,,,14/Nov/09 16:46;pderop;ServiceDependency.java;https://issues.apache.org/jira/secure/attachment/12424965/ServiceDependency.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-25 08:09:02.21,,,no_permission,,,,,,,,,,,57741,,,Tue May 10 08:35:08 UTC 2011,,,,,,0|i1ark7:,270931,,,,,,,,"25/Jul/09 08:09;marrs;Let me start by saying, I think you're right. Turning off AutoConfig when a user defines callbacks would have helped (it saves him from having to do this himself).

The change I could make is that if setCallbacks() is invoked with at least one non-null argument, AutoConfig becomes false (and it becomes true again if you pass all null arguments, because that probably signals you no longer want callbacks to be invoked).

The biggest worry I have is breaking existing code that relies on the current behavior. I'm not quite sure how big the problem is there, because I guess most people using callbacks will now have these two lines of code anyway, and a change would only render the call to setAutoConfig() obsolete (but harmless).

Summarizing it, I am leaning heavily towards changing this, which means changing the semantics of the API, so it would require us to go to version 3.0.0. If anyone else wants to comment on this, now is the time! :)",11/Aug/09 08:49;marrs;Implemented the change. Please review and test it!,11/Aug/09 09:40;apanday;I just tried it and it works. Thanks again.,"14/Nov/09 16:43;pderop;Marcel,
I reopen this issue because, with the previous patch, the following code was not working:

    dm.add(createService()
	   .setImplementation(MyPojo.class)
	   .add(createServiceDependency()
		.setRequired(false)
		.setService(MyDependency.class)
                .setAutoConfig(true)
		.setCallbacks(""added"", ""removed"")));

(the setCallbacks turns off autoconfig and the setAutoConfig(true) is disabled).
The attached patch just check if the setAutoConfig method has been called or not. If yes, then the setCallbacks method does not turn off autoconfig.

(I have also added some documentation in the setCallbacks method).
  
 
",16/Nov/09 07:51;marrs;Patch applied.,10/May/11 08:35;marrs;Part of the 3.0.0 release.,,,,,,,,,,,,,,,,,,,,,
Fix Service Hooks Tests failures in RFC 126 TCK,FELIX-1277,12428891,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,bosschaert,bosschaert,25/Jun/09 19:58,30/Jul/09 15:19,14/Mar/19 02:47,30/Jul/09 03:13,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,6 out of 7 of the TCK Service Hook Tests are failing. ,,,,,,,,,,,,,,FELIX-1295,,,,,,03/Jul/09 10:32;bosschaert;rfc126_tck_fixes_3.patch;https://issues.apache.org/jira/secure/attachment/12412471/rfc126_tck_fixes_3.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-30 03:13:31.782,,,no_permission,,,,,,,,,,,57742,,,Thu Jul 30 15:19:44 UTC 2009,,,,,,0|i0w0yn:,184961,,,,,,,,25/Jun/09 19:59;bosschaert;The attached patch contains a fix for this. All 7 TCK tests pass with this.,"03/Jul/09 09:51;bosschaert;A new version of the changes that fix the RFC 126 failures. This one is a lot leaner than the previous version of this patch which I have removed.

Thanks to Richard for keeping me on my toes :)",03/Jul/09 09:53;bosschaert;This patch also contains a fix for FELIX-1295,"30/Jul/09 03:13;rickhall;I committed this patch with modifications. I tried to simplify it by using references rather than registrations for the internal data structures and method parameters. This made sense since the service hooks are acquired like any normal service with a call to getService(). It also allowed me to eliminate the one comparator class, since reference already implements comparable. I also changed the maps holding hooks to sorted sets, since we weren't really using the value. I would like to investigate further simplifying these hooks, but I think it would take more changes to the service registry.

At any rate, it now passes the hooks test suite. Please close if you are satisfied. Thanks a lot!","30/Jul/09 15:19;bosschaert;Thanks, 

David",,,,,,,,,,,,,,,,,,,,,,
"On the Bundles page, when bundle details are displayed inline, the links to imported and importing bundles are invalid.",FELIX-1275,12428794,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,tmoloney,tmoloney,24/Jun/09 17:12,21/Jul/09 05:41,14/Mar/19 02:47,20/Jul/09 20:27,,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,This occurs in the trunk (1.2.11-SNAPSHOT).,,,,,,,,,,,,,,,,,,,,24/Jun/09 17:16;tmoloney;FELIX-1275-FixBundleUrlsInInlineDetails.patch;https://issues.apache.org/jira/secure/attachment/12411673/FELIX-1275-FixBundleUrlsInInlineDetails.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-20 20:27:39.791,,,no_permission,,,,,,,,,,,57744,,,Tue Jul 21 05:40:59 UTC 2009,,,,,,0|i1arkf:,270932,,,,,,,,24/Jun/09 17:16;tmoloney;This patch uses the pluginRoot javascript variable to create the correct URL regardless of the current URL.,"20/Jul/09 20:27;cziegeler;Hi Tim, thanks for your patch.

I've applied a slightly modified version in revision 795995 - the basic change is that the links are competly generated server-side, I slightly prefer returning already completly links over generating them on the client :)
If you think that this fixes your issue, please close this bug. Thanks!","20/Jul/09 22:36;tmoloney;You change works great.  Thanks.

I agree with you about generating the links on the server.  I wasn't sure if it was worth pushing pluginRoot down through the many levels of the call stack.

I don't see a way for me to close this issue.  Do I not have permission, or am I being dense/blind/newb?
","21/Jul/09 05:40;cziegeler;Hmm as the reporter of the bug you should have the permission to close it (but I think we experienced problems in this area from time to time).
Anyways, I'm closing ti for you :)

Thanks!",,,,,,,,,,,,,,,,,,,,,,,
Bundle.getResources() should return null for a non-existent resource,FELIX-1273,12428698,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,rickhall,rickhall,23/Jun/09 19:22,23/Jun/09 19:23,14/Mar/19 02:47,23/Jun/09 19:23,framework-2.0.0,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"The spec says Bundle.getResources() should return null for a non-existent resource; currently, we return an empty enumeration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57746,,,Tue Jun 23 19:23:05 UTC 2009,,,,,,0|i1arkn:,270933,,,,,,,,23/Jun/09 19:23;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to special case getResource()/getResources()/loadClass() for fragment bundles,FELIX-1272,12428695,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,23/Jun/09 19:04,23/Jun/09 19:06,14/Mar/19 02:47,23/Jun/09 19:06,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"The following Bundle methods must be special cased for fragments:

* getResource() should always return null.
* getResources() should always return null.
* loadClass() should always throw a CNFE.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57747,,,Tue Jun 23 19:06:23 UTC 2009,,,,,,0|i1arkv:,270934,,,,,,,,23/Jun/09 19:06;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve manifest localization to handle special cases,FELIX-1271,12428688,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,23/Jun/09 18:19,23/Jun/09 18:20,14/Mar/19 02:47,23/Jun/09 18:20,framework-1.8.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Manifest localization does not correctly deal with some special cases, namely:

1. Returning raw headers for an empty string locale.
2. Returning default locale headers for uninstalled bundle.
3. Returning default locale headers if requested locale is not found.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57748,,,Tue Jun 23 18:20:51 UTC 2009,,,,,,0|i1arl3:,270935,,,,,,,,23/Jun/09 18:20;rickhall;I committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
Displaying the bundle detail view resolves a bundle,FELIX-1270,12428641,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,cziegeler,cziegeler,23/Jun/09 09:41,19/Dec/16 17:24,14/Mar/19 02:47,07/Sep/09 15:05,webconsole-1.2.10,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"If a bundle is installed, viewing the detail view causes the bundle to be resolved (if possible of course). It seems that one of the calls required for displaying the details causes this side effect.
Displaying details should not have any side effects.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-07 15:05:40.806,,,no_permission,,,,,,,,,,,57749,,,Mon Sep 07 15:05:40 UTC 2009,,,,,,0|i0vtxb:,183821,,,,,,,,"07/Sep/09 15:05;fmeschbe;When showing the details of an unresolved bundle, the imports are best-effort matched agains the contents of the bundle. This uses the Bundle.getResource method which uses the bundle's class loader and therefore causes the bundle to be resolved (if possible...).

In this case we must use the Bundle.getEntry method for this check, because we don't want the bundle to resolve and we need to the bundle contents only anyway.

Fixed in Rev. 812179.",,,,,,,,,,,,,,,,,,,,,,,,,,
MalformedURLException for bundle locations installed by FileInstall,FELIX-1269,12428626,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fdiotalevi,thiloplanz,thiloplanz,23/Jun/09 03:07,08/Sep/09 13:19,14/Mar/19 02:47,20/Jul/09 19:07, fileinstall-1.0.0,,,,,,,,,,fileinstall-2.0.0,,,,File Install,,,,,,,0,,,,,,"Bundles installed by FileInstall have a bundle location that does not include a protocol:

-> ps -l
START LEVEL 1
   ID   State         Level  Location
[   0] [Active     ] [    0] System Bundle
[   1] [Active     ] [    1] file:/e:/osgi/org.apache.felix.fileinstall-1.0.0.jar   <= ""normal""
[   2] [Active     ] [    1] /C:/bundles/org.osgi.compendium-1.2.0.jar   <=  file-installed

As a result such a bundle cannot be updated using the shell command:

-> update 2
ERROR: Unable to update the bundle. (java.net.MalformedURLException: no protocol: /C:/bundles/org.osgi.compendium-1.2.0.jar)


","FileInstall 1.1.0 
Felix 1.8.0 
Windows XP",,,,,,,,,,,,,,,,,,,20/Jul/09 05:41;sahoo;Felix-1269.patch;https://issues.apache.org/jira/secure/attachment/12413978/Felix-1269.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-23 04:52:40.181,,,no_permission,,,,,,,,,,,57750,,,Mon Jul 20 19:07:52 UTC 2009,,,,,,0|i1arlb:,270936,,,,,,,,"23/Jun/09 04:52;sahoo;Firstly, why do you have to update a bundle that's managed by fileinstall?

Secondly, assumption that the location is a URL is a problem in itself. ","23/Jun/09 09:33;thiloplanz;> Firstly, why do you have to update a bundle that's managed by fileinstall? 

I shut down FileInstall sometimes.

Especially when it repeatedly tries (and fails to) resolve a bundle whose dependencies are still missing every two seconds.
This may only be a problem during development.

> Secondly, assumption that the location is a URL is a problem in itself. 

Maybe.
But as it is, the Bundle.update() method (which is called by the ""update"" shell command) does not work.
Making it a valid URL would improve interoperability.




","23/Jun/09 13:43;rickhall;You can always update a bundle by typing in the URL from which you want the update to come, e.g., ""update 2 http://foo/bar.jar""","23/Jun/09 16:00;sahoo;Thilo,

1. No, I still don't understand how explicitly updating a bundle helps when the dependencies are missing. 

2. Even if a file changes while the framework has been shutdown, fileinstall is expected to update the bundle when framework is started subsequently.

Sahoo","24/Jun/09 00:53;thiloplanz;> 1. No, I still don't understand how explicitly updating a bundle helps when the dependencies are missing.

I am not asking for that.
I was just giving an example for a situation where a bundle was installed initially by FIleInstall and later the FileInstall service went away.

> Even if a file changes while the framework has been shutdown, fileinstall is expected to update the bundle when framework is started subsequently. 

I do not see why that would break if the bundle location was set to a URL.
FileInstall must internally have a list of bundles that it manages, and file timestamps for them. That would not change.

","24/Jun/09 10:03;sahoo;No, I am not saying it will break something if we use a URI instead of path as location. I wanted to understand the  importance of this bug and how it was affecting.","25/Jun/09 07:48;thiloplanz;> I wanted to understand the importance of this bug and how it was affecting.

Since, as you have pointed out, it is unlikely that you need to manually update bundles that FileInstall has installed, 
it is not very important.

And since it is not specified that the bundle location needs to be a URL (even though that would be preferable for interoperability),
this is probably not even a bug, but a feature request.

The inability to upgrade the bundle using its specified location is a complete non-issue for me.
I am however a little worried that there might be other subtle problems with not using a URL.

I found out about the ""malformed"" bundle location when looking at bug FELIX-1165 (which is an issue for me).

These two issues being related is of course pure speculation on my part, I have not really looked into it,
the bundle non-URL was just the first thing that stood out, and FELIX-1165 mention bundle locations playing a role.
 ","25/Jun/09 08:36;sahoo;I can't imagine how FELIX-1165 is related to us not setting the location as a URL with scheme. Please raise the severity of FELIX-1165 to get to the root of your problem. If you find out that these two issues are unrelated, you can close this issue.",20/Jul/09 05:41;sahoo;Patch to address the issue.,"20/Jul/09 19:07;fdiotalevi;Thanks for submitting the patch. The use case it address is unusual, but I believe it's a good thing to install all the bundles using the URI.
I committed the cumulative patch attached to FELIX-1387

svn ci -m ""FELIX-1269 FELIX-1387 cumulative patch submitted by Sahoo""
Sending        fileinstall/src/main/java/org/apache/felix/fileinstall/DirectoryWatcher.java
Sending        fileinstall/src/main/java/org/apache/felix/fileinstall/Jar.java
Transmitting file data ..
Committed revision 795957.

Please close the issue if satisfied.",,,,,,,,,,,,,,,,,
The command refreshUrl does not work if the features.xml file is embedded in a Jar. The JVM caches jar entries,FELIX-1265,12428557,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fdiotalevi,cmoulliard,cmoulliard,22/Jun/09 10:51,16/Oct/09 09:45,14/Mar/19 02:47,03/Jul/09 15:30,,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,The command refreshUrl does not work if the features.xml file is embedded in a Jar. The JVM caches jar entries,,,,,,,,,,,,,,,,,,,,22/Jun/09 10:53;cmoulliard;gsheel-features-solveJarIssue.patch;https://issues.apache.org/jira/secure/attachment/12411390/gsheel-features-solveJarIssue.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-03 15:27:55.615,,,no_permission,,,,,,,,,,,57754,,,Fri Oct 16 09:45:00 UTC 2009,,,,,,0|i0vwj3:,184243,,,,,,,,22/Jun/09 10:54;cmoulliard;Patch added. To be added to Apache Karaf svn repository,"03/Jul/09 15:27;fdiotalevi;Tried the patch and it works fine.
I've just deleted the commented lines and committed.

svn ci -m ""FELIX-1265 The command refreshUrl does not work if the features.xml file is embedded in a Jar. Patch by Charles Moulliard""
Sending        gshell-features/src/main/java/org/apache/felix/karaf/gshell/features/internal/RepositoryImpl.java
Transmitting file data .
Committed revision 790949.

Please close the issue if satisfied. Thanks.",16/Oct/09 09:45;fdiotalevi;Closing the issue since the patch has been released in Karaf 1.0.0 and the bug solved.,,,,,,,,,,,,,,,,,,,,,,,,
Felix Preferences project name typo,FELIX-1264,12428539,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,ceefour,ceefour,22/Jun/09 07:53,23/Jun/09 07:04,14/Mar/19 02:47,23/Jun/09 07:04,prefs-1.0.2,,,,,,,,,,prefs-1.0.4,,,,Preferences Service,,,,,,,0,,,,,,"Felix Preferences name is misspelled on the POM / bundle name:

<name>Apache Felix Prefrences Service</name>

Should be ""Pref*e*rences""

Additionally, this JIRA specifies prefs-1.0.4, because that's the one I can pick, although the latest available version is 1.0.2.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-22 14:22:06.056,,,no_permission,,,,,,,,,,,57755,,,Tue Jun 23 07:04:51 UTC 2009,,,,,,0|i1arlr:,270938,,,,,,,,"22/Jun/09 14:22;rickhall;Where do you see this? It looks ok to me:

http://svn.apache.org/repos/asf/felix/trunk/prefs/pom.xml

p.s. Not every subproject manages their version numbers correctly in JIRA, but they should.",22/Jun/09 15:37;cziegeler;I've added the missing version to jira,23/Jun/09 07:04;cziegeler;The type is in the 1.0.2 released; it has been fixed in the meantime.,,,,,,,,,,,,,,,,,,,,,,,,
Documentation fixes for http://felix.apache.org/site/61-extending-the-console.html,FELIX-1263,12428521,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,ceefour,ceefour,22/Jun/09 00:17,20/Oct/09 06:34,14/Mar/19 02:47,20/Oct/09 06:34,,,,,,,,,,,,,,,Documentation,Karaf,,,,,,0,,,,,,"In docs : http://felix.apache.org/site/61-extending-the-console.html

1.

mvn archetype:create \
  -DarchetypeArtifactId=maven-archetype-quickstart \
  -DgroupId=org.apache.servicemix.gshell.samples \
  -DartifactId=gshell-commmands \                <------- has a typo here, reduce 1 'm'
  -Dversion=1.0-SNAPSHOT

2. Update the dependency list for gshell.core and spring-osgi:

<dependency>
    <groupId>org.apache.felix</groupId>
    <artifactId>org.osgi.core</artifactId>
    <version>1.2.0</version>
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>org.apache.servicemix.kernel.gshell</groupId>
    <artifactId>org.apache.servicemix.kernel.gshell.core</artifactId>
    <version>1.1.0</version>
  </dependency>
  <dependency>
    <groupId>org.springframework.osgi</groupId>
    <artifactId>spring-osgi-core</artifactId>
    <version>1.2.0</version>
  </dependency>

3. ""Add the Spring Milestone Repository "" step should not be needed, simply use dependency spring-osgi version 1.2.0 (already GA).

4. The <build> part has invalid <dependency> fragment, should be removed. Moreover, I have to add additional Import-Package and Export-Package manifest, so it becomes:

<build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <!-- <version>1.4.0</version> // this should be optional -->
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Import-Package>org.apache.geronimo.gshell.command,org.apache.geronimo.gshell.wisdom.command,org.apache.geronimo.gshell.wisdom.registry,org.apache.servicemix.kernel.gshell.core,*</Import-Package>
            <Export-Package>org.apache.servicemix.gshell.sample.*</Export-Package>
            <Spring-Context>*;publish-context:=false;create-asynchronously:=false</Spring-Context>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>


5. Add a note that package names may change in the future due ServiceMix Kernel becoming Felix Karaf subproject including the GShell",neutral,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-20 06:34:13.517,,,no_permission,,,,,,,,,,,57756,,,Tue Oct 20 06:34:13 UTC 2009,,,,,,0|i1arlz:,270939,,,,,,,,20/Oct/09 06:34;gnt;I've update this page last week.,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] shared archive resources cannot be found,FELIX-1262,12428514,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,olegk,olegk,21/Jun/09 20:28,01/Oct/09 20:53,14/Mar/19 02:47,13/Jul/09 11:17,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"HttpCore OSGi bundle can no longer be built after the bundle plugin got upgraded from 1.4.3 to 2.0.0

http://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk/

The problem goes away if I manually downgrade plugin version to 1.4.3

Could you please have a look?

Oleg

------------------------------------
[INFO] Building HttpCore OSGi bundle
[INFO] ------------------------------------------------------------------------
[WARNING] Removing: jar from forked lifecycle, to prevent recursive invocation.
[INFO] [remote-resources:process {execution: default}]
[INFO] [resources:resources]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\data\src\apache.org\httpcomponents\httpcore\httpcore-osgi\src\main\resources
[INFO] Copying 3 resources
[INFO] Copying 3 resources
[INFO] [compiler:compile]
[INFO] No sources to compile
[INFO] [resources:testResources]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory C:\data\src\apache.org\httpcomponents\httpcore\httpcore-osgi\src\test\resources
[INFO] Copying 3 resources
[INFO] Copying 3 resources
[INFO] [compiler:testCompile]
[INFO] Not compiling test sources
[INFO] [surefire:test]
[INFO] Tests are skipped.
[INFO] [bundle:bundle]
[ERROR] Error building bundle org.apache.httpcomponents:httpcore-osgi:bundle:4.1-SNAPSHOT : Input file does not exist: target/maven-shared-archive-resources/META-INF/DEPENDENCIES~
[ERROR] Error building bundle org.apache.httpcomponents:httpcore-osgi:bundle:4.1-SNAPSHOT : Input file does not exist: target/maven-shared-archive-resources/META-INF/LICENSE~
[ERROR] Error building bundle org.apache.httpcomponents:httpcore-osgi:bundle:4.1-SNAPSHOT : Input file does not exist: target/maven-shared-archive-resources/META-INF/NOTICE~
[ERROR] Error(s) found in bundle configuration
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error(s) found in bundle configuration
",,,,,,,,,,,,,,,,,,,,12/Jul/09 12:53;olegk;maven.log;https://issues.apache.org/jira/secure/attachment/12413228/maven.log,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-02 16:23:51.722,,,no_permission,,,,,,,,,,,57757,,,Thu Oct 01 20:53:28 UTC 2009,,,,,,0|i1arm7:,270940,,,,,,,,02/Jul/09 16:23;mcculls;Investigate this as part of the next maintenance release schedule,"12/Jul/09 06:26;mcculls;I can't reproduce this locally - the build still passes when I change httpcore-osgi/pom.xml to use 2.0.0 instead of 1.4.3.
I'm also confused about the files ending with ~ ... they are presumably resource files but I don't see them when I build.

If you can still reproduce this on your machine could you build with ""mvn clean install -X > LOG"" and send me the file?","12/Jul/09 12:52;olegk;Stuart,

Many thanks for looking into the issue. It turned out the problem occurs only when building release assemblies using the following command:

mvn package assembly:assembly

Please find the log attached to this ticket.

Oleg","13/Jul/09 11:09;mcculls;Fixed in r793541 - the Bnd Tool update in bundleplugin 2.0.0 introduced a change in how it handled duplicate clauses in instructions. Duplicate clauses are now suffixed with ~ to distinguish them, unfortunately this means any duplicate entries in the Include-Resource instruction also end up with ~ at the end (because the clause parser is generic). This then causes the build to fail because there's no such file ending in ~.

This only seems to happen when using the assembly:assembly goal... possibly because the additional execution adds the same remote resources to the project artifacts, and the maven project code doesn't check for duplicate resource entries in the list. The fix effectively removes any duplicates before the instruction gets to the Bnd Tool.

I'll deploy a build of 2.0.1-SNAPSHOT in case you want to test the fix (or you can build from the current trunk)",13/Jul/09 11:17;mcculls;Fix has been deployed to 2.0.1-20090713.111558-1 on https://repository.apache.org/content/repositories/snapshots and will be in 2.0.1,"01/Oct/09 20:23;pforhan;With maven-bundle-plugin 2.0.1 and maven-scr-plugin 1.4.0, I seem to be getting much the same problem when the maven-release-plugin does this:
 mvn clean verify install --no-plugin-updates -P development

I get these messages in debug:
[DEBUG] Final Manifest:
[DEBUG] ------------------------------------------------------------------------
[DEBUG] Service-Component: OSGI-INF/serviceComponents.xml,OSGI-INF/serviceComponents.xml
[DEBUG] Export-Package: org.bjc.osgi.foundation.cache
[DEBUG] Built-By: paf2009
[DEBUG] Manifest-Version: 1.0
[DEBUG] Tool: Bnd-0.0.357
[DEBUG] Bundle-Name: org.bjc.osgi.foundation.cache
[DEBUG] Created-By: Apache Maven Bundle Plugin
[DEBUG] Bundle-Vendor: BJC HealthCare
[DEBUG] Build-Jdk: 1.6.0_02
[DEBUG] Bundle-Version: 1.13.0.RC1-SNAPSHOT
[DEBUG] Bnd-LastModified: 1254427683151
[DEBUG] Bundle-ManifestVersion: 2
[DEBUG] Bundle-Description: Caching bundle
[DEBUG] Import-Package: net.sf.ehcache,org.apache.log4j
[DEBUG] Bundle-SymbolicName: org.bjc.es.org.bjc.osgi.foundation.cache
[DEBUG] ------------------------------------------------------------------------
[WARNING] Warning building bundle org.bjc.es:org.bjc.osgi.foundation.cache:bundle:1.13.0.RC1-SNAPSHOT : Did not find matching referal for org.springfr
amework.*
[ERROR] Error building bundle org.bjc.es:org.bjc.osgi.foundation.cache:bundle:1.13.0.RC1-SNAPSHOT : Service-Component entry can not be located in JAR:
 OSGI-INF/serviceComponents.xml~
[ERROR] Error(s) found in bundle configuration","01/Oct/09 20:53;pforhan;Forcing the non-duplicated version of Service-Component works:
  <Service-Component>OSGI-INF/serviceComponents.xml</Service-Component>

It's a bit hacky, though, since SCR is generating everything...",,,,,,,,,,,,,,,,,,,,
LDAP evaluation of an array of shorts is incorrect,FELIX-1258,12428366,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,19/Jun/09 14:13,23/Jul/09 16:41,14/Mar/19 02:47,19/Jun/09 15:10,framework-1.8.0,,,,,,,,,,,,,,Framework,Specification compliance,,,,,,0,,,,,,"There is a copy-and-paste error in the handling of an array of shorts. It was copied from an array of bytes, but was not edited to be shorts, so we get a casting exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57761,,,Thu Jul 23 16:26:03 UTC 2009,,,,,,0|i1armv:,270943,,,,,,,,19/Jun/09 15:10;rickhall;Committed a fix.,"23/Jul/09 16:26;rickhall;Since we are going to use the FilterImpl provided by the R4.2 companion code, this fix will no longer be included in Felix 2.0, so I am removing it. See FELIX-1404.",,,,,,,,,,,,,,,,,,,,,,,,,
LDAP parser fails if filter string has trailing whitespace,FELIX-1256,12428363,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,19/Jun/09 13:59,23/Jul/09 16:27,14/Mar/19 02:47,19/Jun/09 15:08,framework-1.8.0,,,,,,,,,,,,,,Framework,Specification compliance,,,,,,0,,,,,,The LDAP parser should be more lenient and ignore trailing whitespace in the filter string.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57763,,,Thu Jul 23 16:26:31 UTC 2009,,,,,,0|i1arnb:,270945,,,,,,,,19/Jun/09 15:08;rickhall;Committed a fix.,"23/Jul/09 16:26;rickhall;Since we are going to use the FilterImpl provided by the R4.2 companion code, this fix will no longer be included in Felix 2.0, so I am removing it. See FELIX-1404.",,,,,,,,,,,,,,,,,,,,,,,,,
FilterImpl will throw an exception if a null dictionary or service reference is used for matching,FELIX-1255,12428362,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,19/Jun/09 13:57,23/Jul/09 16:41,14/Mar/19 02:47,19/Jun/09 15:06,framework-1.8.0,,,,,,,,,,,,,,Framework,Specification compliance,,,,,,0,,,,,,"We need to check for a null dictionary or service reference passed in for matching in FilterImpl. The reasonable thing to do is treat this as a map with no properties (i.e., always returns null).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57764,,,Thu Jul 23 16:25:24 UTC 2009,,,,,,0|i1arnj:,270946,,,,,,,,19/Jun/09 15:06;rickhall;Committed a fix.,"23/Jul/09 16:25;rickhall;Since we are going to use the FilterImpl provided by the R4.2 companion code, this fix will no longer be included in Felix 2.0, so I am removing it. See FELIX-1404.",,,,,,,,,,,,,,,,,,,,,,,,,
Bundle#findEntries does not return resources from fragments,FELIX-1254,12428342,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,smarsching,smarsching,19/Jun/09 09:52,24/Jun/09 15:34,14/Mar/19 02:47,19/Jun/09 16:31,framework-1.8.0,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"In FELIX-1249 the ModuleImpl.getEntries() method has been fixed in order to search not only the bundle itself but consider attached fragments, too. However, this fix is not complete and therefore Bundle.findEntries(...) is still not working correctly:

In FindEntriesEnumeration.findNext(...) (FindEntriesEnumeration.java, line 116) m_bundle.getCurrentModule().getEntry(...) is used to get the URL for the matching entry. However, if the entry comes from a fragment, this method returns null, which is correct as getEntry(...) should only return entries from the bundle itself, not from attached fragments.

Therefore, FindEntriesEnumeration.findNext(...) has to take into account from which fragment (or the bundle itself) a matching entry is coming and use the getEntry(...) method of the corresponding fragment. In order to accomplish this task, instead of using CompoundEnumeration the FindEntriesEnumeration implementation should take care of searching the bundle and its attached fragments step by step. Thus it knows the fragment a matching entry is coming from and can get the entry from the correct fragment.","Java(TM) SE Runtime Environment (build 1.6.0_13-b03)
Java HotSpot(TM) 64-Bit Server VM (build 11.3-b02, mixed mode)",,,,,,,,,,,,,FELIX-1249,,,,,,19/Jun/09 12:33;smarsching;felix_FindEntriesEnumeration.patch;https://issues.apache.org/jira/secure/attachment/12411219/felix_FindEntriesEnumeration.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-19 16:31:03.952,,,no_permission,,,,,,,,,,,57765,,,Wed Jun 24 15:34:33 UTC 2009,,,,,,0|i1arnr:,270947,,,,,,,,"19/Jun/09 12:33;smarsching;I have created a patch that fixes the problem for me.

Please review the patch and - if approved - commit it to SVN.",19/Jun/09 16:31;rickhall;I looked over the patch and committed it modulo some minor formatting issues. Good catch! Please close this issue if you are satisfied.,"24/Jun/09 15:34;smarsching;Thanks for commiting the patch so quickly. I again tested with the latest version from SVN and the problem seems to be fixed now.
",,,,,,,,,,,,,,,,,,,,,,,,
Looping NullPointerException if the polled directory is removed after File Install registration,FELIX-1251,12428188,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,gspadotto,gspadotto,17/Jun/09 22:36,20/Jun/09 12:53,14/Mar/19 02:47,19/Jun/09 18:55, fileinstall-1.0.0,,,,,,,,,,fileinstall-1.2.0,,,,File Install,,,,,,,0,,,,,,"If the directory being polled by File Install is removed while File Install is running, 
the method DirectoryWatcher.traverse will raise a NullPointerException
when evaluating the condition for its ""for"" loop (the ""list"" variable  will be null).

",Windows Vista,,,,,,,,,,,,,,,,,,,18/Jun/09 10:50;gspadotto;patch-1251.txt;https://issues.apache.org/jira/secure/attachment/12411064/patch-1251.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-19 07:30:17.657,,,no_permission,,,,,,,,,,,57768,,,Fri Jun 19 18:55:23 UTC 2009,,,,,,0|i1aro7:,270949,,,,,,,,18/Jun/09 10:50;gspadotto;Candidate patch. Recreates the watched directory during the traverse method.,19/Jun/09 07:30;fdiotalevi;I applied the patch on my local copy and tested it. Works as expected and fix the issue.,"19/Jun/09 10:25;gspadotto;Am I supposed to notify someone from the Felix community, or just wait for someone to pick it up?
I can't find a way of assigning this bug to anyone.","19/Jun/09 10:29;fdiotalevi;Don't worry, somebody will pick it up soon!",19/Jun/09 18:55;rickhall;I applied this patch modulo some formatting changes. Please close if you are satisfied. Thanks!,,,,,,,,,,,,,,,,,,,,,,
Bundle.findEntries() should search fragments as well as the bundle itself,FELIX-1249,12428141,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,17/Jun/09 16:33,19/Jun/09 18:06,14/Mar/19 02:47,17/Jun/09 16:36,framework-1.8.0,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Bundle.findEntries() is supposed to search the bundle's content as well as any attached fragments. Currently, it only looks at the bundle's content. This is a leftover issue from implementing fragment support.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57770,,,Fri Jun 19 16:28:13 UTC 2009,,,,,,0|i1arof:,270950,,,,,,,,17/Jun/09 16:36;rickhall;I have committed a fix for this.,19/Jun/09 16:28;rickhall;This commit is essentially rolled back and implemented by FELIX-1254.,,,,,,,,,,,,,,,,,,,,,,,,,
BundleEvent.UNRESOLVED should be fired during update/uninstall not refresh,FELIX-1247,12428111,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,17/Jun/09 13:10,17/Jun/09 15:32,14/Mar/19 02:47,17/Jun/09 15:32,framework-1.8.0,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"After some discussion within CPEG it was clarified that BundleEvent.UNRESOLVED should be fired at the point of bundle update or uninstall. Previously Felix was firing it for update, but not for uninstall and was instead firing it during refresh. This new definition seems somewhat pointless since UNRESOLVED/UPDATED and UNRESOLVED/UNINSTALLED always happen in pairs now, but we are failing a TCK test as a result of our current implementation so we should change it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57771,,,Wed Jun 17 15:32:43 UTC 2009,,,,,,0|i0w0mv:,184908,,,,,,,,17/Jun/09 15:32;rickhall;Committed a patch.,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven metadata for the SCR Plugin is wrong,FELIX-1245,12428039,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,gspadotto,gspadotto,16/Jun/09 20:05,24/Sep/09 06:13,14/Mar/19 02:47,24/Sep/09 06:13,,,,,,,,,,,maven-scr-plugin-1.4.0,,,,SCR Tooling,,,,,,,0,,,,,,"http://repo2.maven.org/maven2/org/apache/felix/maven-scr-plugin/maven-metadata.xml
says that the latest version of the SCR plugin is 1.2.8, but there's no such version at
http://repo2.maven.org/maven2/org/apache/felix/maven-scr-plugin/

This is just a reminder, as the workaround is relatively easy 
(i.e. explicitly tell Maven to use the latest available version of the plugin).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-24 06:13:23.038,,,no_permission,,,,,,,,,,,57773,,,Thu Sep 24 06:13:23 UTC 2009,,,,,,0|i1arov:,270952,,,,,,,,24/Sep/09 06:13;cziegeler;With the latest release the metadata is correct again. Thanks for reporting this!,,,,,,,,,,,,,,,,,,,,,,,,,,
Change the default port for the OSGI HTTP Service from 8080 to 8181,FELIX-1243,12427981,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,edelln,edelln,16/Jun/09 09:12,19/Jun/09 05:48,14/Mar/19 02:47,19/Jun/09 05:48,,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,"Hi,

I would like to change the default port for the OSGI HTTP Service by default as it clashes with the default port of tomcat 8080 etc.",,,,,,,,,,,,,,,,,,,,16/Jun/09 09:13;edelln;karaf-1243.patch;https://issues.apache.org/jira/secure/attachment/12410770/karaf-1243.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-18 21:27:12.243,,,no_permission,,,,,,,,,,,57775,,,Fri Jun 19 05:48:34 UTC 2009,,,,,,0|i1417r:,231659,,,,,,,,"18/Jun/09 21:27;gnt;I think the port should be controlled inside the ""http"" feature configuration rather than through a global property.","19/Jun/09 05:41;walkerr;Not totally sure I agree with this one - many applications use default ports of 8080, and other defaults, so trying to avoid any possible clash of default seems fruitless.

Also - 8080 is a very conventional ""defauilt"" - so shouldn't Felix also follow this convention?

If it clashes, it can be explicitly overridden easily, but changing the default to something non standard seems a little incorrect to me.","19/Jun/09 05:48;walkerr;Apologies - I see this change is specific to Karaf, and not a general Http service change

Ignore me!

- Rob",,,,,,,,,,,,,,,,,,,,,,,,
"Log ""Bundle Started"" ",FELIX-1241,12427911,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,sahoo,sahoo,15/Jun/09 16:17,22/Jun/09 17:24,14/Mar/19 02:47,22/Jun/09 17:24, fileinstall-1.0.0,,,,,,,,,,fileinstall-1.2.0,,,,File Install,,,,,,,1,,,,,,"For install, update, uninstall, fileinstall logs a message, but it does not do so for start of a bundle. A one line change will do.",generic,,,,,,,,,,,,,,,,,,,21/Jun/09 06:12;sahoo;Felix-1241.patch;https://issues.apache.org/jira/secure/attachment/12411334/Felix-1241.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-22 17:24:50.901,,,no_permission,,,,,,,,,,,57777,,,Mon Jun 22 17:24:50 UTC 2009,,,,,,0|i1arpb:,270954,,,,,,,,22/Jun/09 17:24;rickhall;I am closing this issue since I applied the patch and it was so trivial. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,
"NPE when invoking ""scr list"" with no components registered",FELIX-1238,12427842,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,fdiotalevi,fdiotalevi,14/Jun/09 19:52,31/Jul/09 15:07,14/Mar/19 02:47,15/Jun/09 06:12,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The bug can be reproduced with a minimal Felix+SCR container like:

[   0] [Active     ] [    0] System Bundle (1.8.0)
[   1] [Active     ] [    1] Apache Felix Shell Service (1.2.0)
[   2] [Active     ] [    1] Apache Felix Shell TUI (1.2.0)
[   3] [Active     ] [    1] Apache Felix Bundle Repository (1.4.0)
[   7] [Active     ] [    1] Apache Felix Declarative Services (1.0.9.SNAPSHOT)

In these condition, typing ""scr list"" in the shell causes a NPE:
-> scr list
No components registered
   Id   State          Name
Unable to execute command: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.felix.scr.impl.ScrCommand.list(ScrCommand.java:161)
	at org.apache.felix.scr.impl.ScrCommand.execute(ScrCommand.java:102)
	at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:291)
	at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:177)
	at java.lang.Thread.run(Thread.java:637)


The same happens trying to list components of a non-DS bundle
-> svn list 3
Bundle 3 declares no components
   Id   State          Name
Unable to execute command: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.felix.scr.impl.ScrCommand.list(ScrCommand.java:161)
	at org.apache.felix.scr.impl.ScrCommand.execute(ScrCommand.java:102)
	at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:291)
	at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:177)
	at java.lang.Thread.run(Thread.java:637)
",,,,,,,,,,,,,,,,,,,,14/Jun/09 19:54;fdiotalevi;FELIX-1238.txt;https://issues.apache.org/jira/secure/attachment/12410601/FELIX-1238.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-15 06:12:45.111,,,no_permission,,,,,,,,,,,57780,,,Fri Jul 31 15:07:37 UTC 2009,,,,,,0|i1arpr:,270956,,,,,,,,"14/Jun/09 19:54;fdiotalevi;The attached patch adds 2 returns statement in the method
ScrCommand#private void list( StringTokenizer st, PrintStream out, PrintStream err )
in case there are no components to display","15/Jun/09 06:12;fmeschbe;Thanks for reporting the bug and providing the patch. I have applied it in Rev. 784662.

Please close this issue if this fixes your problem. Thanks.",31/Jul/09 15:07;fmeschbe;Retargeting fixes for SCR 1.2.0 release. There will be no 1.0.10 release.,,,,,,,,,,,,,,,,,,,,,,,,
STOPPING & STOPPED events not fired when activator throws exception,FELIX-1237,12427767,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,12/Jun/09 17:52,16/Jun/09 17:37,14/Mar/19 02:47,15/Jun/09 16:24,framework-1.8.0,,,,,,,,,,framework-1.8.1,,,,Framework,Specification compliance,,,,,,0,,,,,,"As per the spec,
If the start(BundleContext) method throws an exception, the Framework must mark the bundle as stopped and send out STOPPING and STOPPED events but it must not call the Bundle Activator stop(BundleContext) method.

Looking at the implementation in  ""void startBundle(BundleImpl bundle, boolean record)""  in Felix.java, I don't see framework firing any events when activator throws an exception.",generic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-15 16:24:34.297,,,no_permission,,,,,,,,,,,57781,,,Mon Jun 15 16:24:34 UTC 2009,,,,,,0|i0vyrb:,184604,,,,,,,,15/Jun/09 16:24;rickhall;Committed fix. Please close if satisfied.,,,,,,,,,,,,,,,,,,,,,,,,,,
Jetty HTTP service is exporting the incorrect version of the service package,FELIX-1236,12427761,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,12/Jun/09 16:18,12/Jun/09 16:19,14/Mar/19 02:47,12/Jun/09 16:19,,,,,,,,,,,http.jetty-1.0.1,,,,HTTP Service,,,,,,,0,,,,,,"The pom.xml file hard codes version 1.1 on the service package, but it should actually be 1.2. The result is that the bundle exports 1.1, but imports 1.2, which makes it impossible to resolve standalone and defeats the whole point of embedding the service package. We should remove the hard coded version and just let BND pick up the version from the included package.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57782,,,Fri Jun 12 16:19:08 UTC 2009,,,,,,0|i0w0mf:,184906,,,,,,,,12/Jun/09 16:19;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException due to misconfigured watched dir,FELIX-1235,12427758,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gspadotto,gspadotto,12/Jun/09 16:01,18/Jun/09 08:22,14/Mar/19 02:47,17/Jun/09 15:26, fileinstall-1.0.0,,,,,,,,,,fileinstall-1.2.0,,,,File Install,,,,,,,0,,,,,,"The ""traverse"" method of the DirectoryWatcher class will raise a NPE if the provided ""jardir"" parameter does not point to a directory.
The for loop inside that method should read:
for (int i = 0; (list!=null) && (i < list.length); i++){...}

To avoid hiding the configuration problem, the constructor of the DirectoryWatcher class could be amended like this:

...
this.watchedDirectory = new File(dir);
        
        if (!this.watchedDirectory.exists()){                
            if (!this.watchedDirectory.mkdirs()) { throw new RuntimeException(""Failed to create directory "" + this.watchedDirectory.getAbsolutePath());}
        }else{
            if (this.watchedDirectory.isDirectory()){
                log(this.watchedDirectory.getAbsolutePath() + "" already existing"", null);
            }else{
                log(this.watchedDirectory.getAbsolutePath() + "" exists, but is not a directory"", null);
                throw new RuntimeException(this.watchedDirectory.getAbsolutePath()+"" exists, but is not a directory"");
            }
        }

Object value = properties.get(START_NEW_BUNDLES);
...",Windows [Vista|XP],,5400,5400,,0%,5400,5400,,,,,,FELIX-1251,,,,,,17/Jun/09 13:11;fdiotalevi;FELIX-1235-2.txt;https://issues.apache.org/jira/secure/attachment/12410930/FELIX-1235-2.txt,17/Jun/09 09:57;fdiotalevi;FELIX-1235.txt;https://issues.apache.org/jira/secure/attachment/12410916/FELIX-1235.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-06-17 09:24:25.094,,,no_permission,,,,,,,,,,,57783,,,Wed Jun 17 15:30:25 UTC 2009,,,,,,0|i0vyr3:,184603,,,,,,,,"17/Jun/09 09:24;fdiotalevi;Do you get an exception if you start FileInstall watching a non-existent directory? 
I don't have Win machine to check, but with Linux/MacOS that's not the case; the directory is created at startup. 

Anyway, I spot a (quite unlikely to happen) bug. If you start FileInstall watching a ""foo"" directory, but ""foo"" is actually a file, you get into a pretty bad situation: 
Welcome to Felix. 
================= 
felix.fileinstall.poll (ms) 2000 
felix.fileinstall.dir /opt/myprojects/felix-1.8.0/./load 
felix.fileinstall.debug -1 
felix.fileinstall.bundles.new.start true 
In main loop, we have serious trouble: java.lang.NullPointerException 
In main loop, we have serious trouble: java.lang.NullPointerException 
In main loop, we have serious trouble: java.lang.NullPointerException 
...... 

I'll submit a patch for it, but I need to check it does not interfere with FELIX-1228 ","17/Jun/09 09:27;fdiotalevi;Just found the code...

DirectoryWatcher.java, lines 93-94

        this.watchedDirectory = new File(dir);
        this.watchedDirectory.mkdirs();","17/Jun/09 09:57;fdiotalevi;Patch attached.

To summarize:

1) if FileInstall starts watching a non-existent directory, the directory is already created automatically (check DirectoryWatcher, lines 93-94). No issue here

2) if FileInstall is incorrectly configure to watch a file (instead of a directory), it goes in an infinite loop writing:
""In main loop, we have serious trouble: java.lang.NullPointerException""

The attached patch solves 2)","17/Jun/09 10:32;gspadotto;This bug is actually a spin-off of 
http://issues.apache.org/jira/browse/FELIX-1228

For a bit of context, check:
http://www.nabble.com/Re%3A-Felix-File-Install---Spaces-in-watched-directory-name-p24000232.html

and the related mail thread.

About this line in the patch:
throw new RuntimeException( ""Cannot start FileInstall to watch a non-existent directory"" );
actually, you *can* start FileInstall to watch a non-existent directory.

Should be something like:
throw new RuntimeException( ""Cannot start FileInstall to watch something that is not a directory"" );","17/Jun/09 13:11;fdiotalevi;Second version of the patch attached.

* Error message revised
* Added a check to verify that the watched folder has been successfully created",17/Jun/09 15:26;rickhall;I committed this patch. Please close if satisfied.,17/Jun/09 15:30;gspadotto;Works as expected.,,,,,,,,,,,,,,,,,,,,
"Bundle class loader should delegate using Class.forName(String, boolean, ClassLoader) to support array types",FELIX-1233,12427746,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,12/Jun/09 14:07,24/Jul/09 15:57,14/Mar/19 02:47,12/Jun/09 14:08,framework-1.8.0,,,,,,,,,,framework-1.8.1,,,,Framework,,,,,,,0,,,,,,"A call to Bundle.loadClass() delegates to ModuleClassLoader.loadClass(). This is problematic, for example, if you create a wrapper class loader for deserialization since it will ask for array types, since loadClass() doesn't know how to deal with them. On the other hand, Class.forName(String, boolean, ClassLoader) will deal with them automatically. There is an issue around Class.forName() where it caches results in a weird way, but this shouldn't impact this situation, since bundle class spaces are consistent so caching should be fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57785,,,Mon Jun 15 14:46:20 UTC 2009,,,,,,0|i1414n:,231645,,,,,,,,12/Jun/09 14:08;rickhall;Committed fix.,"15/Jun/09 14:46;rickhall;Modified my fix to only call Class.forName() if the type is an array type, otherwise we could end up with ClassCircularityErrors in some cases; apparently, Class.forName() does its own cycle checking and is more conservative than our approach.",,,,,,,,,,,,,,,,,,,,,,,,,
Configuration Page depends on ManagedService[Factory] instances to be registered for components,FELIX-1230,12427736,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,12/Jun/09 12:10,12/Jun/09 12:12,14/Mar/19 02:47,12/Jun/09 12:12,webconsole-1.2.10,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"The configuration page retrieves configuration to edit from the configuration admin and checks for ManagedService services for the respective PIDs.

This gets incomplete results if there are no ManagedService services or if a component is backed by a ManagedServiceFactory (like factory components). Since FELIX-1223 will effectively remove the used of ManagedService[Factory] services, this current mechanism is bound to fail anyway.

The fix is to use the MetaTypeService to return all MetaTypeInformation available for pids (singleton configurations) or factory pid (factory configurations).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57788,,,Fri Jun 12 12:12:30 UTC 2009,,,,,,0|i0vyrj:,184605,,,,,,,,12/Jun/09 12:12;fmeschbe;Implemented the use of the MetaTypeService to get available descriptors in Rev. 784089,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix File Install - Spaces in File Names,FELIX-1228,12427731,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmahon,fmahon,12/Jun/09 11:31,17/Jun/09 15:13,14/Mar/19 02:47,17/Jun/09 15:13, fileinstall-1.0.0,,,,,,,,,,fileinstall-1.2.0,,,,File Install,,,,,,,0,,,,,,"Note: In terms of creating a patch for this issue - there was already a patch created yesterday for a different issue relating to felix install. I don't think the patch has been released yet - so just to make sure there are not overwrites.

Issue is below....

Just in terms of the issue with the spaces, Guido suggested I put quotes around the directory. However this causes the system to go into an endless loop!

Behaviour is as follows:
When I define felix.fileinstall.dir=watchedDir (i.e. without quotes), and when 'watchedDir' actually resolves to E:\Documents and Settings\some\path\watchedDir, then I get the following error when I drop a bundle into that directory:

ERROR    20090612 10:01:28 bid#11       - Failed to install bundle: /E:/Documents and Settings/some/path/watchedDir/print-service-0.0.2.jar (java.net.URISyntaxException: Illegal character in path at index 13: /E:/Documents and Settings/some/path/watchedDir/print-service-0.0.2.jar)
java.net.URISyntaxException: Illegal character in path at index 13: /E:/Documents and Settings/some/path/watchedDir/print-service-0.0.2.jar
       at java.net.URI$Parser.fail(Unknown Source)
       at java.net.URI$Parser.checkChars(Unknown Source)
       at java.net.URI$Parser.parseHierarchical(Unknown Source)
       at java.net.URI$Parser.parse(Unknown Source)
       at java.net.URI.<init>(Unknown Source)
       at org.apache.felix.fileinstall.Jar.<init>(Jar.java:58)
       at org.apache.felix.fileinstall.DirectoryWatcher.install(DirectoryWatche
r.java:686)
       at org.apache.felix.fileinstall.DirectoryWatcher.install(DirectoryWatche
r.java:587)
       at org.apache.felix.fileinstall.DirectoryWatcher.doInstalled(DirectoryWa
tcher.java:351)
       at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.ja
va:121)

When I define felix.fileinstall.dir=""watchedDir"" (i.e. with quotes around the directory) I get the endless loop, when I start up the container. here's a bit of the output:
ERROR    20090612 10:08:33 bid#11       - In main loop, we have serious trouble
(java.lang.NullPointerException)
java.lang.NullPointerException
       at org.apache.felix.fileinstall.DirectoryWatcher.traverse(DirectoryWatch
er.java:439)
       at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.ja
va:120)
ERROR    20090612 10:08:33 bid#11       - In main loop, we have serious trouble
(java.lang.NullPointerException)
java.lang.NullPointerException
       at org.apache.felix.fileinstall.DirectoryWatcher.traverse(DirectoryWatch
er.java:439)
       at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.ja
va:120)

(this is an endless loop of output)

If I do the same things in a directory that doesn't contain spaces i.e. if I move the whole set up to directly under the E: directory, this doesn't happen.

This is actually an issue since I can't guarantee that anyone else who will checkout and use this code will not be also on Windows and in their home directory (i.e. C:/Documents and Settings/${username}. Really it becomes useless to me as a project solution.

Thanks,
Fiona. ",,,,,,,,,,,,,,,,,,,,12/Jun/09 13:12;sahoo;Felix-1228.patch;https://issues.apache.org/jira/secure/attachment/12410483/Felix-1228.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-12 13:12:02.729,,,no_permission,,,,,,,,,,,57790,,,Wed Jun 17 15:13:45 UTC 2009,,,,,,0|i1arqf:,270959,,,,,,,,"12/Jun/09 13:12;sahoo;We should try to treat the bundle location as a file path when it can't be converted to a URI. Attached patch addresses the issue. I tested it on Unix with watchedDir having space as well as watchedDir with files having space char in their name. 
e.g., watchedDir=/tmp/foo bar/, where /tmp/foo bar/ contains ""foo baz.jar.""

Please test it on Windows and let us know.

This patch does not affect files touched by patch uploaded for issue #1216. So, if you need to test both patches for 1216 and this issue, then you can apply both the patches.","15/Jun/09 16:14;sahoo;Fiona,

Did you get a chance to test it on Windows? We are waiting for your feedback about the patch before integrating it. The sooner you do it, the better, else this bug may miss the next maintenance release.

Sahoo","17/Jun/09 11:08;sahoo;In users@ alias, submitter has confirmed the patch to be working. SO, someone, please integrate it in workspace.",17/Jun/09 15:13;rickhall;Patch confirmed. Committed. Issue closed. Thanks.,,,,,,,,,,,,,,,,,,,,,,,
The MetaType service should ignore the pid attribute of Designate elements if factoryPid is set.,FELIX-1226,12427727,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,12/Jun/09 11:09,12/Jun/09 11:32,14/Mar/19 02:47,12/Jun/09 11:16,metatype-1.0.2,,,,,,,,,,metatype-1.0.4,,,,Metatype Service,Specification compliance,,,,,,0,,,,,,"According to Section 105.6.2, Use of the Designate Element, the Designate element may contain pid attribute alone or a pid attribute and a factoryPid attribute. In the latter case the pid attribute should be ignored unless the Designate contains an Object element for consumption by the Configuration Admin to create a factory configuration instance.

Since the MetaType service is interested in the type descriptors, the pid should really be ignored in these situations. Currently both the pid and the factoryPid are recorded.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57792,,,Fri Jun 12 11:32:43 UTC 2009,,,,,,0|i0w0in:,184889,,,,,,,,12/Jun/09 11:10;fmeschbe;This is also a Specification Compliance issue.,12/Jun/09 11:16;fmeschbe;Fixed in Rev. 784075 by ignoring the pid if the factoryPid attribute is set when building the pid and factory pid lists.,12/Jun/09 11:32;fmeschbe;After deploying SNAPSHOT 1.0.3-20090612.113147-1 closing this issue.,,,,,,,,,,,,,,,,,,,,,,,,
factoryPid attribute of Designate elements for metatype data is not set,FELIX-1225,12427721,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,12/Jun/09 09:42,23/Sep/09 07:23,14/Mar/19 02:47,28/Jul/09 14:43,maven-scr-plugin-1.2.0,,,,,,,,,,maven-scr-plugin-1.4.0,,,,SCR Tooling,,,,,,,0,,,,,,"The Maven SCR plugin currently only emits the pid attribute for Designate elements when MetaType files are written. According to Section 105.6.2, Use of the Designate Element, the Designate element may contain pid attribute alone or a pid attribute and a factoryPid attribute. In the latter case the pid attribute should be ignored unless the Designate contains an Object element for consumption by the Configuration Admin to create a factory configuration instance.

The fix is to emit the factoryPid attribute for factory components.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-12 10:17:08.401,,,no_permission,,,,,,,,,,,57793,,,Tue Jul 28 14:43:26 UTC 2009,,,,,,0|i0vzt3:,184774,,,,,,,,"12/Jun/09 10:17;cziegeler;I just committed a fix for this problem; please check and close this bug.
Thanks","12/Jun/09 11:03;fmeschbe;Thanks for this quick fix.

I just noticed, thata accroding to the MetaType spec, the pid attribute is required. Will just fix it.",12/Jun/09 11:07;fmeschbe;Fix the description to be spec compliant.,12/Jun/09 11:13;fmeschbe;With applying the patch in Rev. 784071 this issue is really solved.,28/Jul/09 14:27;cziegeler;Reopening as the handling of the Designate@factoryPID attribute is wrong: it should only be set if this is not a component factory. Therefore we need a new scr attribute setMetatypeFactoryPID which can be used to optionally set the Designate@factoryPID,28/Jul/09 14:43;cziegeler;added a new attribute in revision: 798540. The attribute defaults to false and should only be used with non factory components.,,,,,,,,,,,,,,,,,,,,,
Component display depends on ManagedService[Factory] instances to be registered for components,FELIX-1224,12427713,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,12/Jun/09 06:03,12/Jun/09 06:07,14/Mar/19 02:47,12/Jun/09 06:07,webconsole-1.2.10,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"To decided whether a component has configuration to edit or not, the ComponentsServlet uses existing configurations from the configuration admin and checks for ManagedService services for the respective PIDs.

This gets incomplete results if there are no ManagedService services or if a component is backed by a ManagedServiceFactory (like factory components). Since FELIX-1223 will effectively remove the used of ManagedService[Factory] services, this current mechanism is bound to fail anyway.

The fix is to use the bundle providing the component and the components PID to check for MetaTypeInformation for the component. If such information is available, the component is configurable.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57794,,,Fri Jun 12 06:07:54 UTC 2009,,,,,,0|i0w0fj:,184875,,,,,,,,12/Jun/09 06:07;fmeschbe;Applied the proposed fix in Rev. 783995.,,,,,,,,,,,,,,,,,,,,,,,,,,
Existing configurations are not retrieved when installing a feature,FELIX-1218,12427660,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,tmoloney,tmoloney,11/Jun/09 15:50,11/Aug/09 18:46,14/Mar/19 02:47,10/Aug/09 08:46,,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,"When installing a feature, one property value is used to search for the configuration, but another property value is used to create the configuration.",,,,,,,,,,,,,,,,,,,,11/Jun/09 16:15;tmoloney;FELIX-1218-features-configuration.patch;https://issues.apache.org/jira/secure/attachment/12410410/FELIX-1218-features-configuration.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-10 08:46:28.387,,,no_permission,,,,,,,,,,,57800,,,Mon Aug 10 08:46:28 UTC 2009,,,,,,0|i1arqv:,270961,,,,,,,,11/Jun/09 15:53;tmoloney;Patch that uses the same property value for both searching and creating a configuration.,"11/Jun/09 16:15;tmoloney;Patch that uses the same property value when searching and creating configurations.
Updated to change the filter in FileMonitor.","10/Aug/09 08:46;gnt;Patch included in the following commit:

URL: http://svn.apache.org/viewvc?rev=802692&view=rev
Log: FELIX-1220: Remove unnecssary parts of a filter
",,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException when running FileInstall with Knopflerfish,FELIX-1216,12427625,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fdiotalevi,fdiotalevi,11/Jun/09 09:26,12/Jun/09 15:26,14/Mar/19 02:47,12/Jun/09 15:20, fileinstall-1.0.0,,,,,,,,,,fileinstall-1.2.0,,,,File Install,,,,,,,0,,,,,,"See also mailing list thread at:
http://www.nabble.com/Felix-File-Install-td23964511.html

When running FileInstall on Knopflerfish, adding a property file in the watched directory can cause a ClassCastException.

This is caused by some additional entries added by Knopflerfishin the configuration dictionary that may not be Strings.

(I'm working on a patch).",,,,,,,,,,,,,,,,,,,,11/Jun/09 11:20;fdiotalevi;FELIX-1216-2.txt;https://issues.apache.org/jira/secure/attachment/12410379/FELIX-1216-2.txt,11/Jun/09 10:08;fdiotalevi;FELIX-1216.txt;https://issues.apache.org/jira/secure/attachment/12410373/FELIX-1216.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-06-12 15:20:01.189,,,no_permission,,,,,,,,,,,57802,,,Fri Jun 12 15:20:01 UTC 2009,,,,,,0|i0w08n:,184844,,,,,,,,11/Jun/09 10:08;fdiotalevi;The patch checks if the value of a property is a String before trying to apply substitution.,11/Jun/09 11:20;fdiotalevi;Second version of the patch.,12/Jun/09 15:20;rickhall;I have applied the patch. Please close the issue if you are satisfied and thanks for submitting the patch!,,,,,,,,,,,,,,,,,,,,,,,,
"Four unclear points in the ""iPOJO for Eclipse"" example",FELIX-1214,12427588,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,ingomueller.net,ingomueller.net,10/Jun/09 19:56,29/Jul/09 08:03,14/Mar/19 02:47,26/Jun/09 07:58,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"Hi there!

I recently tried out iPOJO in Eclipse for a small projet for the university. Although I quite enjoy the documentation, I found a few unclear points in the Eclipse example [1], which have cost me some time and which I wanted to share.

1) The unpackage target of the build.xml says ""${output.dir}/META-INF/MANIFEST.mf"", although the file is called ""MANIFEST.MF"". This is a problem on Linux (I guess it is not on Windows)

2) The guide doesn't mention to install BND, althoug build.xml supposes its installation: <taskdef resource=""aQute/bnd/ant/taskdef.properties"" classpath=""../../tasks/bnd-0.0.223.jar""/> Maybe it could be included in the lib folder as well.

3) <property name=""lib.dir"" value=""libs""/> The folder libs doesn't exist... The property is not used, but it's a bit confusing.

4) I think that I had to run ant's ""unpackage"" target to make it work, although package is the default one. Unfortunately, I can't retest it right now.

Thanks a lot for your work!

Cheers,
Ingo


[1] http://felix.apache.org/site/apache-felix-ipojo-eclipse-integration.html","Ubuntu 8.10, Eclipse 3.3",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-26 07:58:23.501,,,no_permission,,,,,,,,,,,57804,,,Wed Jul 29 08:03:01 UTC 2009,,,,,,0|i0vyqf:,184600,,,,,,,,"26/Jun/09 07:58;clement.escoffier;Hi,

Thanks for these comments. I fixed the issues:
- MANIFEST.mf => MANIFEST.MF
- BND is now embedded in the project
- the lib.dir is now used to set the library location
- unpackage became the default target (wihich is the one to use)

So, you can redownload the new project from the wiki, or download the SVN version from http://svn.apache.org/viewvc/felix/sandbox/clement/ipojo-utils/eclipse-integration/

Regards,

Clement",29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in fileinstall if a watched bundle is uninstalled by some other means,FELIX-1203,12427302,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,07/Jun/09 17:59,12/Jun/09 15:51,14/Mar/19 02:47,12/Jun/09 15:28, fileinstall-1.0.0,,,,,,,,,,fileinstall-1.2.0,,,,File Install,,,,,,,0,,,,,,"test1.jar is part of watched dir /tmp/autodeploy-bundles/. I accidentally uninstalled test1.jar bundle using the Shell command. Next time, when I actually removed the file from the directory, fileinstall failed with the following NPE:

Jun 7, 2009 11:23:52 PM  
INFO: Failed to uninstall bundle: /tmp/autodeploy-bundles/test1.jar: java.lang.NullPointerException
Jun 7, 2009 11:23:52 PM  
INFO: java.lang.NullPointerException
Jun 7, 2009 11:23:52 PM  
INFO:   at org.apache.felix.fileinstall.DirectoryWatcher.uninstall(DirectoryWatcher.java:717)
Jun 7, 2009 11:23:52 PM  
INFO:   at org.apache.felix.fileinstall.DirectoryWatcher.uninstall(DirectoryWatcher.java:611)
Jun 7, 2009 11:23:52 PM  
INFO:   at org.apache.felix.fileinstall.DirectoryWatcher.doInstalled(DirectoryWatcher.java:350)
Jun 7, 2009 11:23:52 PM  
INFO:   at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:122)

I think it is OK to get the NPE, as user is expected to uninstall the bundle by removing the file unlike what I did in this case. But I am not sure. So, I am filing this bug to share my experience. The fix is pretty simple; we need to log the fact that the bundle has been uninstalled by some other means and add a null check in the code. ",generic,,,,,,,,,,,,,,,,,,,11/Jun/09 12:14;fdiotalevi;FELIX-1203.txt;https://issues.apache.org/jira/secure/attachment/12410387/FELIX-1203.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-11 11:00:16.305,,,no_permission,,,,,,,,,,,57815,,,Fri Jun 12 15:28:13 UTC 2009,,,,,,0|i0w0m7:,184905,,,,,,,,"11/Jun/09 11:00;fdiotalevi;Generally speaking, weird things happen when you try  provision your container with FileInstall and another provisioning system.

Anyway I agree we should at least avoid the NPE and give a more expressive error message.

While looking into the code I realized that there's a very similar error case when you:
1) add a bundle.jar in the /load folder (watched by fileinstall)
2) uninstall bundle.jar via console
3) update the bundle.jar file  in the /load folder (just:> touch bundle.jar f.i.)
Similarly to the error case reported, you have 
Failed to update bundle /opt/myprojects/felix-1.8.0/load/sample.bundle-1.1.0-SNAPSHOT.jar: java.lang.NullPointerException

I'll submit a patch to avoid the NPE and give a more meaningful error message in both cases","11/Jun/09 12:14;fdiotalevi;The patch displays more meaningful logs instead of the NPE.

A question remains open though: consider the case
1) add a bundle.jar in the /load folder (watched by fileinstall) 
2) uninstall bundle.jar via console 
3) update the bundle.jar file in the /load folder (just:> touch bundle.jar f.i.) 

with the current behavior, fileinstall will try to update the bundle on every iteration, every time displaying the message ""Cannot update bundle....""
Is it an acceptable solution?

Some options:
a) leave it as it is. Using fileinstall and another provisioning system is a problem anyway, so it's better to highlight this problem in the logs

b) remove bundle.jar from currentManagedBundles. In this case, fileinstall won't try to update it later, BUT it will install it in the next iteration since it will find the file in the /load folder

c) remove  bundle.jar from currentManagedBundles AND delete the file from /load (or instruct fileinstall to ignore it).

IMHO, a) it's the better solution, since b) and c) can really confuse the user. Wdyt?","11/Jun/09 13:02;sahoo;I vote for option #a.

The patch looks fine to me. Thanks.",12/Jun/09 15:28;rickhall;I have applied this patch. Please close if satisfied. Thanks!,,,,,,,,,,,,,,,,,,,,,,,
Issue with DM and CM,FELIX-1201,12427274,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,pderop,pderop,06/Jun/09 08:52,10/May/11 08:31,14/Mar/19 02:47,16/Nov/09 07:42,dependencymanager-2.0.1,,,,,,,,,,,,,,Dependency Manager,,,,,,,1,,,,,,"I am using DM for configuring my POJOs from Configuration Admin Service.
This issue is actually about a bug, but also ask for a change request:.

1/ first, I think there are two bugs in ConfigurationDependency.java:

- When the configuration is not currently available from CM, POJOs are invoked in their ""updated"" method with a null Dictionary
- Morover, DM requires POJO to implement the ManagedService interface, while in the online doc, it is stated that POJOs just have 
  to provide an ""updated(Dictionary)"" method signature.


Concerning the null dictionary passed to my updated method: for example:

dm.add(createService()
           .setImplementation(new Log4jConfigurator(property))
           .add(createConfigurationDependency()
                .setPid(""log4j"")));

-> My Pojo ""Log4jConfigurator"" is invoked in its ""updated"" method with a null Dictionary if the configuration is not yet available from CM.
I have attached to this issue a proposed patch (in ConfigurationDependency.java).
I just check if CM provides a null Dictionary and I just don't activate the dependencies ...


2/ Now, there is something I would like you to add concerning configuration callbacks (I also have implemeted it in the proposed patch):
Indeed, by default, DM assumes that the pojo implements the org.osgi.service.cm.ManagedService interface.
But the point is: I need my POJOs to be reused outside OSGi; and I don't want to introduce a dependency over the OSGi CM managed service interface.
Moreover, I need to get injected with several PIDS.

That's why I would like to be able to invoke a method ""setCallback"" in the ConfigurationDependency class (like in ServiceDependency.java).
This callback would match a method which takes as parameter a Dictionary.
So, adding such setCallback method would also let me listen to more than one PID like this:

For example:

    dm.add(createService()
           .setImplementation(new Log4jConfigurator(property))
           .add(createConfigurationDependency()
                .setPid(""log4j"")
                .setCallback(""updateLog4jConfig""))
           .add(createConfigurationDependency()
                .setPid(""system"")
                .setCallback(""updateSystemConfig"")));

The patch attached to this issue sounds like to work fine.

Marcel, WDYT ? 
Could you please commit this patch (and then make a new release of DM) ?

Thanks a lot for your help;
/pierre
","linux FC10, jdk 1.5, 1.6",,,,,,,,,,,,,,,,,,,18/Aug/09 22:47;pderop;ConfigurationDependency-2.java;https://issues.apache.org/jira/secure/attachment/12416929/ConfigurationDependency-2.java,14/Nov/09 16:55;pderop;ConfigurationDependency-3.java;https://issues.apache.org/jira/secure/attachment/12424966/ConfigurationDependency-3.java,06/Jun/09 08:54;pderop;ConfigurationDependency.java;https://issues.apache.org/jira/secure/attachment/12410057/ConfigurationDependency.java,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2009-07-25 08:37:02.155,,,no_permission,,,,,,,,,,,57817,,,Tue May 10 08:31:35 UTC 2011,,,,,,0|i1arrj:,270964,,,,,,,,06/Jun/09 08:54;pderop;attached the proposed patch.,"25/Jul/09 08:37;marrs;Regarding invoking the updated() method with a null argument, I agree, that is a bug, it should not activate the dependencies. It's safe to assume that if someone requires a configuration, the configuration actually needs to contain at least something.

I have some doubts about the second part. I like the fact that you don't need to implement ManagedService anymore (even though you can argue about that being an ""OSGi dependency"", you could view that as just an interface to deal with configurability of a POJO, but I see your point)

Getting injected with multiple configurations in OSGi is no real issue, all configurations can go to the same updated() method because each configuration will contain a service.pid which allows you to recognize which configuration it actually is. However, I can see the value of having the option to redirect those to different methods.

What I don't like is the way the updated() signature is changed. Currently it throws ConfigurationException which allows you to explicitly tell the system what property you don't like and why. In the proposed patch, that exception gets lost. I would at least want to change that in such a way that these exceptions do not get lost, and I think that is possible. The ""general"" signature could become ""updated(Dictionary props) throws Exception"" since the JavaDocs of the spec actually state that any exception other than ConfigurationException should be caught and logged by ConfigurationAdmin anyway (we might have to check if implementations actually do this, but other than that we're fine).

So, with a few changes, I think I can apply the patch. WDYT? :)","18/Aug/09 22:45;pderop;You are definitely right: -> my patch introduced a bug regarding the ConfigurationException.
I have attached to this issue a second patch which takes into acount your remark.
The patch does the following:

1) if the callback method throws a org.osgi.service.cm.ConfigurationException -> then this exception is just re-thrown. This use case applies when the Pojo implements directly the
OSGi ManagedService interface.

2) if the callback method throws any other exception (java.lang.Exception, or whatever RuntimeException, like IllegalArgumentException) -> then it is simply wrapped as a ConfigurationException.

Hope that all is Ok for you.



",18/Aug/09 22:47;pderop;added the second patch ...,07/Oct/09 18:48;marrs;Applied the patch.,"14/Nov/09 16:54;pderop;Issue re-opened.

Indeed, in the previous patch, I forgot to remove the java language access check, before invoking the callback.
in the attached patch, I just call ""setAccessible(true)"" on the callback method, just before invoking it.
",14/Nov/09 16:55;pderop;see patch in ConfigurationDependency-3.java,16/Nov/09 07:42;marrs;Applied the setAccessible(true) patch.,10/May/11 08:31;marrs;Part of the 3.0.0 release.,,,,,,,,,,,,,,,,,,
config.properties still refers to old org.osgi.framework.startlevel property,FELIX-1198,12427039,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,bosschaert,bosschaert,03/Jun/09 15:39,10/Jun/09 15:54,14/Mar/19 02:47,10/Jun/09 15:54,framework-1.8.0,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"the config.properties that ships with the 1.8.0 distro still refers to the old startlevel property:

# Sets the initial start level of the framework upon startup.
#org.osgi.framework.startlevel=1

this should really say
# Sets the initial start level of the framework upon startup.
#org.osgi.framework.startlevel.beginning=1
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-10 15:54:55.801,,,no_permission,,,,,,,,,,,57820,,,Wed Jun 10 15:54:55 UTC 2009,,,,,,0|i0vz73:,184675,,,,,,,,"10/Jun/09 15:54;rickhall;I have fixed this issue. Since the issue is so simple, I will just close the bug myself.",,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in ComponentActivatorTask if component is destroyed,FELIX-1195,12426898,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,02/Jun/09 08:48,31/Jul/09 15:07,14/Mar/19 02:47,02/Jun/09 08:50,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"When a ComponentActivatorTask is about to be run, it checks whether the component declaring bundle is active or not. If the component has already been destroyed, getting the bundle from the component throws a NullPointerException. Though, this exception is caught, it is nasty and the logged message does not reflect the actual cause for the problem.

The ComponentActivatorTask.run method must therefore first check whether the component as already been destroyed before checking for the bundle state. If the component has already been destroyed, the task cannot run anyway.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57823,,,Fri Jul 31 15:07:37 UTC 2009,,,,,,0|i0vz07:,184644,,,,,,,,02/Jun/09 08:50;fmeschbe;Added a check for the component state before checking the bundle state in Rev. 780967 and logging the situation separately,31/Jul/09 15:07;fmeschbe;Retargeting fixes for SCR 1.2.0 release. There will be no 1.0.10 release.,,,,,,,,,,,,,,,,,,,,,,,,,
Set parent classloader of bundle classloader to be same as what is actually used for delegation,FELIX-1190,12426690,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,29/May/09 16:27,02/Jun/09 18:22,14/Mar/19 02:47,02/Jun/09 18:22,framework-1.6.1,,,,,,,,,,framework-1.8.1,,,,Framework,,,,,,,0,,,,,,"Refer to a previous discussion in dev alias:
http://mail-archives.apache.org/mod_mbox/felix-users/200804.mbox/%3c487a994c0804010552n35fc44eew34b34a1795e14d6f@mail.gmail.com%3e

Currently, although Felix uses the classloader that loads Felix classes as the parent class loader for delegation, it actually sets system class loader as the parent (ClassLoader.getParent()). It is because when it creates a class loader, it does not set any parent, hence the default value is used. The fix should be particularly simple. e.g., get hold of a Felix framework class and use its classloader as the parent.

",generic,,,,,,,,,,,,,,,,,,,01/Jun/09 15:18;rickhall;FELIX-1190.txt;https://issues.apache.org/jira/secure/attachment/12409566/FELIX-1190.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-29 18:39:15.352,,,no_permission,,,,,,,,,,,57828,,,Tue Jun 02 18:22:29 UTC 2009,,,,,,0|i0vyzr:,184642,,,,,,,,"29/May/09 18:39;rickhall;I think this could be addressed in RFC 132. In there, there is some standardization around this. Regardless, we can straighten it out one way or the other.","30/May/09 01:03;sahoo;I would like this to be addressed in next release instead of waiting till 2.0.0. I don't see the fix being a risky one or causing any compatibility issues. The suggested fix does not class loading for bundles. It just sets the parent (as returned by getDelegate()) same as what is actually used by Felix for delegation.

Thanks,
Sahoo","30/May/09 03:41;rickhall;I don't have an issue including this in the maintenance release, but we will still have to run it by everyone to make sure no issues appear as a result. I am heading out for JavaOne tomorrow morning, but I will try to look at while I am there.","01/Jun/09 15:19;rickhall;Sahoo, check this one-line patch to make sure it is what you wanted. If so, I will make a snapshot so we can test it in GF. Thanks.","02/Jun/09 03:55;sahoo;Thanks, Richard. Yes, that's what I was hoping as a fix.","02/Jun/09 18:22;rickhall;I will close this issue, but we still need a full solution for RFC 132, which I am tracking with a different issue.",,,,,,,,,,,,,,,,,,,,,
RmiConnectorActivator.stop throws exception and prints stack trace,FELIX-1188,12426657,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,sfrenot,alitokmen,alitokmen,29/May/09 09:47,15/Jun/09 18:56,14/Mar/19 02:47,15/Jun/09 08:11,,,,,,,,,,,,,,,MOSGi,,,,,,,0,,,,,,"When stopping the MOSGi RMI registry bundle when there are pending JMX connections, it throws:

java.io.IOException: Cannot bind to URL: javax.naming.CommunicationException [Root exception is java.rmi.NoSuchObjectException: no such object in table]
        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:804)
        at javax.management.remote.rmi.RMIConnectorServer.stop(RMIConnectorServer.java:555)
        at org.apache.felix.mosgi.jmx.rmiconnector.RmiConnectorActivator.stopRmiConnector(RmiConnectorActivator.java:196)
        at org.apache.felix.mosgi.jmx.rmiconnector.RmiConnectorActivator.serviceChanged(RmiConnectorActivator.java:105)
        at org.apache.felix.framework.util.EventDispatcher$4.run(EventDispatcher.java:838)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:835)
        at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:704)
        at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:635)
        at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3420)
        at org.apache.felix.framework.Felix.access$000(Felix.java:39)
        at org.apache.felix.framework.Felix$1.serviceChanged(Felix.java:622)
        at org.apache.felix.framework.ServiceRegistry.fireServiceChanged(ServiceRegistry.java:576)
        at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:110)
        at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:120)
        at org.apache.felix.mosgi.jmx.registry.mx4j.tools.naming.NamingService.stop(NamingService.java:75)
        at org.apache.felix.framework.util.SecureAction$Actions.run(SecureAction.java:1119)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:602)
        at org.apache.felix.framework.Felix.stopBundle(Felix.java:1815)
        at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1001)
        at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
        at java.lang.Thread.run(Thread.java:619)
Caused by: javax.naming.CommunicationException [Root exception is java.rmi.NoSuchObjectException: no such object in table]
        at com.sun.jndi.rmi.registry.RegistryContext.unbind(RegistryContext.java:160)
        at com.sun.jndi.toolkit.url.GenericURLContext.unbind(GenericURLContext.java:254)
        at javax.naming.InitialContext.unbind(InitialContext.java:416)
        at javax.management.remote.rmi.RMIConnectorServer.stop(RMIConnectorServer.java:547)
        ... 21 more
Caused by: java.rmi.NoSuchObjectException: no such object in table
        at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:255)
        at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:233)
        at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:359)
        at sun.rmi.registry.RegistryImpl_Stub.unbind(Unknown Source)
        at com.sun.jndi.rmi.registry.RegistryContext.unbind(RegistryContext.java:156)
        ... 24 more

That behavior is detailed in http://download.java.net/jdk7/docs/api/javax/management/remote/rmi/RMIConnectorServer.html#stop()",SVN Revision 447866,,,,,,,,,,,,,,,,,,,29/May/09 09:50;alitokmen;FELIX-1188.patch;https://issues.apache.org/jira/secure/attachment/12409361/FELIX-1188.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-15 08:11:00.207,,,no_permission,,,,,,,,,,,57830,,,Mon Jun 15 18:56:31 UTC 2009,,,,,,0|i0vyzb:,184640,,,,,,,,"29/May/09 09:50;alitokmen;Behavior detailed in http://download.java.net/jdk7/docs/api/javax/management/remote/rmi/RMIConnectorServer.html#stop()

Solution is simple:

1. Call stop()
2. If there were pending connections, stop() closes all of them but throws an IOException
3. Catch the exception and call stop() again
4. This time, it should not throw anything and stop successfully

Patch attached",15/Jun/09 08:11;sfrenot;I directly applied the patch,15/Jun/09 18:56;alitokmen;Closing since patch applied as of rev. 784671,,,,,,,,,,,,,,,,,,,,,,,,
BundleContext.ungetService() should return false only if the usage count is zero when the method is invoked,FELIX-1187,12426621,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,28/May/09 19:43,28/May/09 19:49,14/Mar/19 02:47,28/May/09 19:49,framework-1.8.0,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Currently, BundleContext.ungetService() returns false if the service usage count is zero or goes to zero as a result of the call. The spec says it should only return false if it was already zero, i.e., true means there was a successful unget.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57831,,,Thu May 28 19:49:58 UTC 2009,,,,,,0|i0vz5r:,184669,,,,,,,,28/May/09 19:49;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
"If a static/mandatory reference to a service is unregistered, the component should be deactivated synchronously instead of asynchronously",FELIX-1185,12426553,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,agemocui,agemocui,28/May/09 05:13,31/Jul/09 15:07,14/Mar/19 02:47,03/Jun/09 13:18,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"In the specification cmpn 112.3.3 Reference Policy, it says ""Component configurations are deactivated before any bound service for a reference having a static policy becomes unavailable.""

My understanding is the deactivate method of the component must be called before any unbind method for a static/mandatory reference is called. And it's reasonable for a static/mandatory reference to be still available in the deactivate method.

If the component is deactivated asynchronously when a static/mandatory reference to a service is unregistered, then it's possible that the unbind method is called before the deactivate method is called, which makes the service unavailable in the deactivate method.

This bug may relate to FELIX-1178.

The fix for this bug should also fix FELIX-1178. No need to add a new flag.",,,,,,,,,,,,,,,,,,,,01/Jun/09 04:22;agemocui;AbstractComponentManager.java;https://issues.apache.org/jira/secure/attachment/12409526/AbstractComponentManager.java,01/Jun/09 04:11;agemocui;AbstractComponentManager.java;https://issues.apache.org/jira/secure/attachment/12409523/AbstractComponentManager.java,01/Jun/09 04:11;agemocui;ComponentFactoryImpl.java;https://issues.apache.org/jira/secure/attachment/12409524/ComponentFactoryImpl.java,30/May/09 15:42;agemocui;scr-changes on revision 778604.zip;https://issues.apache.org/jira/secure/attachment/12409467/scr-changes+on+revision+778604.zip,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,2009-05-28 14:51:04.031,,,no_permission,,,,,,,,,,,57833,,,Fri Jul 31 15:07:36 UTC 2009,,,,,,0|i0vz67:,184671,,,,,,,,"28/May/09 14:29;agemocui;Sorry, the description of the problem is not quite correct.
The unbind method does be called after the deactivate method is called.

The problem is the component is deactivated after the mandatory dependency component is deactivated.
That is to say, a bound service for a reference having a static policy becomes unavailable before the component is deactivated.

For example, component A is dependent on component B. And component A is disposed before component B is disposed.
Since the tasks of disposing components are queued, component A is always deactivated before component B is deactivated. So when the deactivate method of B is called, component A has already been unavailable.","28/May/09 14:33;agemocui;Sorry, correct the example.

Component A is dependent on component B.
And component B is disposed before component A.

So when the deactivate method of A is called, component B has already been disposed and has become unavailable, which means component B cannot be used in the deactivate method of A.","28/May/09 14:51;fmeschbe;Thanks for reporting this issue.

I am fully aware of it, but there is a catch with it: If the component is deactivated the following tasks occurr:

   * unregister the service
   * call deactivate
   * unbind services (mostly statically bound, but may also be dynamic ones)

Now, when the component is deactivated while the dependency is uregistered, we may cause further components to unregister and so forth. And this all takes place in the thread of the initial service unregistration.

And this may lead to deadlock situations, unfortunately. So I decided against synchronous deactivation for now in favor of preventing deadlocks.

And yes, if we would deactivate immediately, then the flag introduced in FELIX-1178 would not be needed.

If you want to test, simply call deactivateInternal() from the AbstractComponentManager.deactivate() method instead of scheduling the call for asynchronous execution.","28/May/09 15:35;agemocui;I understand what you concern.
Since I just looked at the scr code and didn't read it completely, it's a big risk to make the deactivation synchronous.

However, I have the alternate way that could fix this problem too. But I'm not sure whether it will cause other problems or will cause a big code change which is also a big risk.

The dependency relation is in fact a tree. If we look at the dependent component as the parent node of a certain component, then before we schedule a disposal task of a dependent component, could we use Depth First algorithm to schedule all the disposal tasks.
That is to say, if component A is dependent on component B and now B is going to be disposed, could we schedule A's disabling before B's disabling? Since the tasks are queued, that should work though asynchronously.","28/May/09 15:59;agemocui;Actually, if we can take the unregistering of the component's services out of the ""Disable"" task, it will work.

I mean when disabling a component, all the services this component provides should be unregistered synchronously instead of being scheduled to execute along with the deactivation.

What do you think of?","28/May/09 16:21;agemocui;Sorry, I just noticed that the task could also be scheduled to run synchronously if the componentActorThread is not running.
That makes things quite complicated.","28/May/09 16:50;agemocui;It looks like the field m_componentActor is set to null nowhere. So the synchronous execution of the task ""may not"" exist.
I just checked FELIX-550 because of some indirect relation to this problem.

I'm just not clear if all the activation/deactivation tasks are queued to run, why would there be a race condition for the serviceRegistration? If we gonna take the calling unregister services out of the ""Disable"" task, then that would be a race condition for that field.  Or actually the code now is quite different from the code at that time?

Sorry, I'm just trying to learn the current code.

Your advise will be appreciated.
Thanks.","30/May/09 15:42;agemocui;I use State design pattern to have refactoried the class AbstractComponentManager.

There are 8 states in all.
They are: Disabled, Enabled(Unsatisfied), Registered, Factory, Active, Destroyed, Activating and Deactivating.
State Unsatisfied is duplicate to State Enabled so it's removed.
State Registered, Factory and Active are the ""Satisfied"" state in concept. Only DelayedComponentManager can transit to the State Registered. Only FactoryServiceComponentManager can transit to the State Factory.
State Activating and Deactivating are transient ones. They will be changed to other ""stable"" state automatically when the corresponding work is done.

The transition cases are listed below.
1. Disabled --(enable)-> Enabled
2. Disabled --(dispose)-> Destoryed
3. Enabled --(activate)-> Satisfied (Registered, Factory or Active, depends on the type of the component)
4. Enabled --(disable)-> Disabled
5. Enabled --(dispose)-> Destroyed
6. Registered --(getService, SUCCESS)-> Active
7. Registered --(getService, FAIL)-> Enabled
8. Factory --(getService)-> Active
9. Satisfied --(deactivate)-> Enabled


Each event specified above is mapped to a method xxxxxInternal in the code. They are all atomic operation that is ""synchonized"".

If a event is applied to a State, which is not in the above case list, nothing will be done(A debug log will be printed).

So for a enable calling(not the same meaning event in the transition case), it consists of the following primitive operations: enabledInternal and activateInternal.
For a dispose calling(not the same meaning event in the transition case), it consists of the following primitive operations: deactivateInternal and disposeInternal.

With these changes, I have confidence of no deadlock after making the deactivation synchronous which is described in this problem.
Because there's no crossing lock and there's no circular dependency.


All the changed source files are attached.

Please review. If it's OK and you approve, I hope my changes could be committed.

Thanks.
","30/May/09 20:54;fmeschbe;Thanks for providing this patch and the interesting analysis. I came to similar conclusions, but your implementation looks more elegant than mine at first sight.

I will look into it in more depth and check it out.","01/Jun/09 04:11;agemocui;I investigated the state transition case further and found the State Unsatisfied is not a duplicate one to State Enabled. So it cannot be removed. The State Enabled aforementioned is actually the State Unsatisfied. So State Enabled is renamed to Unsatisfied and a ""new"" State Enabled is added. It will be useful when we make changes for R4.2. For now, the behavior is only a little different from before. That is: when method enable is called, the component will transit into State Enabled immediately but the activating work will be run asynchronously, which is just like the R4 spec says.

I fixed the code accordingly.  The changed files are attached.

New transition cases are listed below.

Disabled -(enable)-> Enabled
Disabled -(dispose)-> Destoryed
Enabled -(activate, SUCCESS)-> Satisfied(Registered, Factory or Active)
Enabled -(activate, FAIL)-> Unsatisfied
Enabled -(disable)-> Disabled
Enabled -(dispose)-> Destroyed
Unsatisfied -(activate, SUCCESS)-> Satisfied(Registered, Factory or Active)
Unsatisfied -(activate, FAIL)-> Unsatisfied
Unsatisfied -(disable)-> Disabled
Unsatisfied -(dispose)-> Destroyed
Registered -(getService, SUCCESS)-> Active
Registered -(getService, FAIL)-> Unsatisfied
Satisfied -(deactivate)-> Unsatisfied
","01/Jun/09 04:22;agemocui;Sorry, the AbstractComponentManager.java attached previously has a little problem that Disabled doesn't change to Enabled on an enable event.
Now attach the new fixed one.","01/Jun/09 20:00;agemocui;Sorry, I realized I made a mistake on the AbstractCompnentManager.getSatisfiedState() after reading the code further.



",01/Jun/09 20:00;agemocui;The original implementation of the method AbstractCompnentManager.getSatisfiedState() must be restored.,"02/Jun/09 09:00;fmeschbe;I have applied your latest patches and tested them in our application running on Felix Framework 1.6.0. I only had a small issue:

The AbstractComponentManager.Unsatisfied.activateInternal method does the following at the end:

            acm.registerComponentService();
            acm.changeState( acm.getSatisfiedState() );

This registers the service of the provider component causing any consumer components to try to get the service immediately. If the provider component is a service factory (delayed component), this causes the DelayedComponentManager to try to create the actual component instance, which fails because the state is not active.

The correct order here is probably:

            acm.changeState( acm.getSatisfiedState() );
            acm.registerComponentService();

thus changing the component state _before_ registering the service. This way, the consumer component will get the service, since the new state will be able to create the actual component instance and return it.

This change works in my application, you might want to verify in your environment.","02/Jun/09 13:03;agemocui;Yes, you are right.

And for a natural understanding, only when a component is satisfied then its service could be registered.
So it should enter the satisfied state first.

Many thanks for your reviewing and correction.


","02/Jun/09 14:38;fmeschbe;> And for a natural understanding, only when a component is satisfied then its service could be registered.
> So it should enter the satisfied state first.

Yeah, right. Good explanation.
","02/Jun/09 14:46;fmeschbe;I have now committed your fixes in Rev. 781045. I only changed the order of service registration and status change as described above.

Deplyoed SNAPSHOT version 1.0.9-20090602.144612-4.

If this works for you, please close this issue. Thanks.","02/Jun/09 15:53;agemocui;Sorry, my bad.
I didn't give the final fixed version.

The original implementation of the method AbstractComponentManager.getSatisfiedState has to be restored as follows:

    final State getSatisfiedState()
    {
        if ( m_componentMetadata.isFactory() )
        {
            return Factory.getInstance();
        }
        else if ( m_componentMetadata.isImmediate() )
        {
            return Active.getInstance();
        }
        else
        {
            return Registered.getInstance();
        }
    }

And remove all the override implementations in ImmediateComponentManager, DelayedComponentManager and ServiceFactoryComponentManager.

And in all those debug log in class State, It should use ""m_name"" rather than ""m_state"".

Really sorry, my bad.","02/Jun/09 21:00;agemocui;Hi Felix,

Could you be kind to review the method AbstractComponentManager.getStatisfiedState(also ServiceFactoryComponentManager.getService and ungetService)?
Because my changes give them a different path from the original implementation.
So I'm afraid that could be a problem. Need your help.

Thanks,
Agemo",03/Jun/09 09:34;fmeschbe;Reopening issue to apply cleanup fixes by Agemo Cui,03/Jun/09 09:37;fmeschbe;I have applied the getSatisifiedState() method changes and the debug message changes in Rev. 781316,"03/Jun/09 10:15;agemocui;Hi,

Another problem is that I also made the change to ServiceFactoryComponentManager.getService() and ungetService().
The original implementation was to check state ""Registered"" not the current ""Factory"".
Would that be a problem? I'm not sure about that. Sorry, please review again.

If that's OK, I would close this bug.

Many thanks.","03/Jun/09 10:37;agemocui;OK, I think I understand the original state transition now.
Factory state is only for those factory component and they never transit to Active(Actually, factory means active for them).

So in the getService and ungetService of ServiceFactoryComponentManager, the check for Factory state need be changed back to check for Registered state.

And for the safety of the double check, it's better to add ""volatile"" modifier to the AbstractComponentManager.m_state .


Thanks.","03/Jun/09 10:45;fmeschbe;Thanks for pointing this out, I missed it.

Yes, you are right, this is probably wrong because the ServiceFactoryComponentManager is used if the component is defined as a service factory component (this is not the same as a ComponentFactory). In such a component each consumer bundle gets its own component instance.

The state of a ServiceFactory component is like that of a delayed component, REGISTERED. Only after the first bundle has asked for the service will the state change to ACTIVE.

The factory state is only used for component factories, which create component instances on-demand or upon configuration.

I fixed this in Rev. 781335

So, it this would be all for this bug, you may go ahead and close it. Thanks.","03/Jun/09 10:47;fmeschbe;> And for the safety of the double check, it's better to add ""volatile"" modifier to the AbstractComponentManager.m_state . 

Done in Rev. 781336",03/Jun/09 13:18;agemocui;Got it. Thanks.,31/Jul/09 15:07;fmeschbe;Retargeting fixes for SCR 1.2.0 release. There will be no 1.0.10 release.
iPOJO JMX handler doesn't rethrow exceptions ,FELIX-1183,12426442,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,alitokmen,alitokmen,27/May/09 09:28,29/Jul/09 08:03,14/Mar/19 02:47,30/May/09 10:03,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"When we create an MBean with iPOJO (metadata-based dynamic MBean), if any method invoke throws an exception, the exception is not rethrown to the caller.

Instead, the exception's stack trace is printed back on the OSGi gateway's system.out and the JMX caller gets a ""null"" return.

Normally, we expect the JMX call to throw an exception if the MBean has thrown one.","SNAPSHOT version, SVN revision 37639",,0,0,,0%,0,0,,,,,,,,,,,,28/May/09 12:43;pierre.bourret;JMX-handler-rethrow-exceptions.patch;https://issues.apache.org/jira/secure/attachment/12409260/JMX-handler-rethrow-exceptions.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-28 12:43:03.569,,,no_permission,,,,,,,,,,,57835,,,Wed Jul 29 08:03:01 UTC 2009,,,,,,0|i1arsn:,270969,,,,,,,,"27/May/09 09:29;alitokmen;I guess I've found the source of the issue:

Class: org.apache.felix.ipojo.handlers.jmx.DynamicMBeanImpl
Method: invoke (line 159)

I see that method has a clear ""printStackTrace"" call. It should instead throw it back to the caller.","28/May/09 12:43;pierre.bourret;The invoke method displays the exceptions on the gateway. According to the JMX API, it must wrap the called method exception in a MBeanException, and re-throw it, in order to advise the caller. 

As the InvocationTargetException (thrown from the Callback.call() method) wraps a Throwable, not an Exception, it is directly wrapped in the MBeanException. So if the method throws an exception e , here is the exceptions chain received by the caller :

     MBeanException
     ...
     Caused by : InvocationTargetException
     ...
     Caused by : e

Any reflection exception while trying to invoke the method will result in a ReflectionException (wrapping the cause).

The patch should follow very shortly.

Thx to the reporter for identifying the source of this issue so fast...","29/May/09 09:51;alitokmen;Thanks, Pierre

I'll get you a pint at O'Callaghan shortly","30/May/09 10:03;clement.escoffier;Fixed at revision 780224.
I just applied the patch and check that everything is still working correctly.

I also deployed a the JMX handler on apache.snapshot (so, you should be able to check it Tuesday. 
Please close the issue if it's ok for you.

Pierre, Thanks for this patch.

PS: Can I also have a pint at O'Callaghan during my next trip to Grenoble ;-) ?","02/Jun/09 08:23;alitokmen;Thanks. Tests on our side seem to pass.

PS: We don't use apache.snapshot, we have our internal Hudson that enjoys recompiling many Apache projects...
PPS: sure you can, Clément :)",29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,
Component may remain deactivated after a reference has been unregistered and registered again,FELIX-1178,12426307,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,25/May/09 21:01,08/Dec/09 15:49,14/Mar/19 02:47,25/May/09 21:14,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"If a static/mandatory reference of a component is unregistered, the component is scheduled to be deactivated. If the reference is registered again before the refering component is deactivated, the component is not activated again (since its state is still active or deactivating instead of unsatisifed).

A flag should be added, which is set when the component is scheduled to be deactivated. If this flag is set when the component might have to be activated, the component is scheduled for activation. Scheduling the activation clears this flag. The flag is also cleared as soon as the component has been deactivated. If the component should be scheduled for deactivation and the flag is set, the component is not scheduled for deactivation again.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57840,,,Tue Dec 08 15:49:23 UTC 2009,,,,,,0|i0vzc7:,184698,,,,,,,,"25/May/09 21:14;fmeschbe;Applied fix in Rev. 778511 for AbstractComponentManager and Rev. 778512 for DependencyManager.

The fix is to add a pendingDeactivation flag as described in the issue description.",25/May/09 21:27;fmeschbe;Deployed SNAPSHOT version 1.0.9-20090525.212438-1 containing this fix.,31/Jul/09 15:07;fmeschbe;Retargeting fixes for SCR 1.2.0 release. There will be no 1.0.10 release.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,
Components must correctly be disposed off,FELIX-1177,12426287,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,25/May/09 12:52,08/Dec/09 15:49,14/Mar/19 02:47,25/May/09 21:15,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"When a component is to be disposed off, the following tasks run:

   * unregister the service (if registered)
   * call deactivate method (if any)
   * unbind references

In the current implementation the service unregistration throws an IllegalStateException if the service cannot be unregistered because the registration lock is being held by a nother thread. This exception is forwarded to the caller causing neither the deactivate method being called nor the reference being unbound.

Rather we should continue with the controlled deactivation (and maybe even try to unregister again).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57841,,,Tue Dec 08 15:49:23 UTC 2009,,,,,,0|i0vzbr:,184696,,,,,,,,"25/May/09 21:15;fmeschbe;In Rev. 778511 modified the IllegalStateException handling to log the situation and properly shut down the component regardless of failure to unregister the service or not. If the service fails to unregister in the first attempt, a second one is tried, just in case.",25/May/09 21:27;fmeschbe;Deployed SNAPSHOT version 1.0.9-20090525.212438-1 containing this fix.,31/Jul/09 15:07;fmeschbe;Retargeting fixes for SCR 1.2.0 release. There will be no 1.0.10 release.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,
Concurrency Issues while containing bundle is stopping,FELIX-1173,12426169,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,23/May/09 05:20,08/Dec/09 15:49,14/Mar/19 02:47,25/May/09 21:47,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,1,,,,,,"While a bundle is stopping, there may still be ComponentActivatorTask on the activator queue and be executed. The activator queue/ComponentActivatorTask combo should be enhance to prevent running asynchrounous tasks for components whose owning bundle is in the process of stopping, i.e. is not active.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57845,,,Tue Dec 08 15:49:23 UTC 2009,,,,,,0|i0vzb3:,184693,,,,,,,,"25/May/09 21:47;fmeschbe;Extended ComponentActivatorTask class to check whether the defining bundle is still active before actually running the task.

In addition defined special sentinel object to terminate the ComponentActorThread instead of using the thread instance itself.

Both has been applied in Rev. 778518

Deployed SNAPSHOT version 1.0.9-20090525.214658-2 containing this fix.",31/Jul/09 15:07;fmeschbe;Retargeting fixes for SCR 1.2.0 release. There will be no 1.0.10 release.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,,,,,
MemoryLeak when stopping and restarting Felix,FELIX-1170,12426081,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,jedws,jedws,22/May/09 01:58,26/Aug/09 13:38,14/Mar/19 02:47,16/Jun/09 21:15,framework-1.2.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,1,,,,,,"There is a memory leak caused by a strong reference from the BundleProtectionDomain to a bundle and Felix.

The problem is that a URLClassLoader gets its AccessControlContext from the stack - AccessController.getContext() calls AccessController.getStackAccessControlContext() which is basically arbitrary at the time.

In our case we have a ServletFilter plugin that is being loaded by Felix. When a JasperLoader (a URLClassLoader) is created to load a JSP it inherits the BundleProtectionDomain as part of its AccessControlContext. If we later shut down Felix, it cannot be GC'd due to this reference.

For our purposes we have tested making the m_felix and m_bundle weak references and have verified that it does indeed fix the problem.",Atlassian JIRA,,,,,,,,,,,,,,,,,,,22/May/09 02:17;jedws;BundleProtectionDomain.java.FELIX-1170.patch;https://issues.apache.org/jira/secure/attachment/12408770/BundleProtectionDomain.java.FELIX-1170.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-22 16:02:38.717,,,no_permission,,,,,,,,,,,57848,,,Tue Jun 16 21:15:09 UTC 2009,,,,,,0|i1artj:,270973,,,,,,,,"22/May/09 02:17;jedws;patch attached.

Note that the hashcode and toString are now constructed up front. ",22/May/09 02:22;jedws;The Atlassian Plugins ticket: https://studio.atlassian.com/browse/PLUG-388,22/May/09 16:02;karlpauls;Your patch makes sense to me. Thanks. I will look into applying it soon. ,16/Jun/09 21:15;karlpauls;I commit this to trunk. Please close this issue if it works for you. Thanks.,,,,,,,,,,,,,,,,,,,,,,,
SCR does not rebind ConfigurationAdmin service in Sling jcrinstall tests,FELIX-1166,12425829,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,bdelacretaz,bdelacretaz,19/May/09 14:08,08/Dec/09 15:49,14/Mar/19 02:47,26/May/09 08:11,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"I'm testing the Sling jcrinstall module using Pax Exam, and the SCR reference shown below is not rebound after stopping and restarting the org.apache.felix.configadmin bundle, and waiting up to 5 seconds.

The reference is declared like this in the OsgiControllerImpl class:

    /** @scr.reference cardinality=""0..1"" policy=""dynamic"" */
    private ConfigurationAdmin configAdmin;

To reproduce, apply the attached patch to revision 776315 of  http://svn.apache.org/repos/asf/incubator/sling/trunk/contrib/extensions/jcrinstall, and run the tests with mvn clean install.

The OsgiControllerTest.testDeferredConfigInstall test then fails, because the ConfigurationAdmin service is not rebound to the OsgiControllerImpl class, after waiting up to 5 seconds for that to happen.


",,,,,,,,,,,,,,,,,,,,19/May/09 14:09;bdelacretaz;FELIX-1166-reproduce.patch;https://issues.apache.org/jira/secure/attachment/12408485/FELIX-1166-reproduce.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-25 21:49:11.27,,,no_permission,,,,,,,,,,,57852,,,Tue Dec 08 15:49:23 UTC 2009,,,,,,0|i0vyzj:,184641,,,,,,,,19/May/09 14:09;bdelacretaz;Sling jcrinstall patch to reproduce the problem,"19/May/09 14:10;bdelacretaz;Note that this should not be related to Pax Exam, but I'm mentioning it as the rebinding mechanism seems to generally work in SCR 1.0.8, so there might be a weirdness related to this particular testing environment.",25/May/09 21:49;fmeschbe;Could you test the SNAPSHOT version 1.0.9-20090525.214658-2 I have just deployed. This contains a number of concurrency and service binding fixes and may by that matter also fix this issue.,"26/May/09 08:10;fmeschbe;I found the problem: after previous rework the bound services are not really unbound as of serviceChanged: the unbind method is called but the DependencyManager keeps the service instance instead of ungetting it by calling the BundleContext.ungetService method.

This is only of importance if the reference is dynamic and optional or a replacement service is available. If the reference is static, the component is scheduled for deactivation (or reactivation if a replacement service is available) and thus ungetting the service anyway. If the reference is dynamic but required, the component will also be deactivated because it is not satisifed any longer.

Fixed this issue in Rev. 778604 and deployed new SNAPSHOT version  1.0.9-20090526.081005-3","26/May/09 08:11;fmeschbe;Ungetting the service after unbinding it solves the issue for me.

Please close this issue, if it also fixes your problem. Thanks.",31/Jul/09 15:07;fmeschbe;Retargeting fixes for SCR 1.2.0 release. There will be no 1.0.10 release.,08/Dec/09 15:49;fmeschbe;SCR 1.2.0 has been released. Close all issues.,,,,,,,,,,,,,,,,,,,,
"When restarting a bundle, the config admin reports ""Configuration ... has already been delivered"", and the bundle receives no configuration.",FELIX-1165,12425823,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,james.hanson,james.hanson,19/May/09 13:13,25/Aug/09 08:09,14/Mar/19 02:47,14/Aug/09 21:50,configadmin-1.0.1,configadmin-1.0.10,configadmin-1.0.4,configadmin-1.0.8,,,,,,,configadmin-1.2.0,,,,Configuration Admin,,,,,,,2,,,,,,"When restarting a bundle, the configuration admin reports ""Configuration ... has already been delivered"", and the bundle receives no configuration.

As far as I can tell this only occurs if a bundle is installed and started by the felix.auto.start.1 property in the config.properties.  If Felix is restarted and the bundle is loaded from the cache, the problem disappears.

Test setup:

Create a ""configurable"" bundle, implement ManagedService and register as a ManagedService with a PID from the BundleActivator start() method.
Create a ""configurator"" bundle and send a configuration to the PID.
Extract Felix and add the Felix config admin bundle to the felix.auto.start.1 property in conf/config.properties
Add the two new bundles to the felix.auto.start.1 property.
Start Felix.
Stop the ""configurable"" bundle, and start it again.

* If the configuration is sent from the ""configurator"", the bundle receives it.
* If felix is restarted, the problem disappears unless the felix-cache is deleted.

This can be reproduced with felix 1.8.0 using the example at:

http://www.dynamicjava.org/articles/osgi-compendium/configuration-admin-service

See also bug FELIX-516.","Windows XP, JDK 1.6.0_10, Felix 1.8.0, configadmin 1.0.10",,,,,,,,,,,,,,,,,,,25/May/09 12:20;james.hanson;sample.zip;https://issues.apache.org/jira/secure/attachment/12408945/sample.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-19 18:57:31.931,,,no_permission,,,,,,,,,,,57853,,,Tue Aug 25 08:09:16 UTC 2009,,,,,,0|i1aru7:,270976,,,,,,,,"19/May/09 18:57;fmeschbe;Can you attach the source of your sample bundles to this issue, please ? Thanks.

The problem might be a subtle bug in your configurator bundle: This should use the ConfigurationAdmin.getConfiguration(String pid, String location) method and either set the location parameter to the actual bundle location of the configurable bundle or -- better yet, IMHO -- to null to not create a bound configuration at all.","25/May/09 12:20;james.hanson;The key points are PropertiesConfigManager:61 in the configurator project, and ServletManager:37 and 79 in the configurable project.","05/Jun/09 16:55;james.hanson;When the configurator bundle sends the new configuration via Configuration.update(props), the update is processed by ConfigurationManager$UpdateConfiguration.run().  This method doesn't set the ConfigurationImpl.serviceReference.  When the configured bundle is stopped, the ConfigurationManager$AbstractManagedServiceTracker.removedService() method will not call ConfigurationImpl.setDelivered(false), because it first checks that the serviceReference being removed equals the ConfigurationImpl.serviceReference (which is null).

If the configuration is found by the PersistenceManager, the ConfigurationImpl.serviceReference is set in ConfigurationManager$ManagedServiceUpdate.run().

Suggested solution - set the ConfigurationImpl.serviceReference in ConfigurationManager$UpdateConfiguration.run().","23/Jun/09 02:59;thiloplanz;I think I am running into the same problem, even without using felix.auto.start.

I have both bundles and configuration managed by Felix FileInstall 
(and I am using org.osgi.framework.storage.clean = onFirstInit to get a fresh bundle cache every time).

When a bundle gets updated, it does not receive configuration information.

I need to ""touch"" the configuration file to trigger configuration.

Could this be related to the weird bundle location that FileInstall sets 
(  /C:/bundles/org.osgi.compendium-1.2.0.jar without any protocol, so that the bundle cannot be updated the update shell command) ?

Please raise the priority to something more than ""minor"".
","14/Aug/09 21:50;fmeschbe;Thanks for tracking down this issue - this helped a lot.

And here is the actual way to reproduce the problem:

   * start a bundle registering a ManagedService
   * create and update configuration for the ManagedService
   * --> the ManagedService gets the configuration
   * stop the bundle unregistering the ManagedService (*)
   * start the bundle registering a ManagedService
  * --> the ManagedService does *not* get the configuration

the problem effectively is, that when the configuration is first handed to the ManagedService through the UpdateConfiguration task, the service reference field is not set. Thus the delivered flag is not rest on ManagedService unregistration. When the bundle is restarted and the ManagedService registered again, the ConfigurationAdmin falsely assumes the configuration has already been delivered.

This problem does not occurr if the configuration is created *before* the ManagedService is registered for the first time because then the ManagedServiceUpdate task is called which in fact sets the service reference field and thus on service unregistration, the delivered flag is reset as expected.

In Rev. 804387 I committed the fix along with a new integration test ensuring this behaviour.

Can you please verify and close this issue. Thanks.
",25/Aug/09 08:09;fmeschbe;Close all issues now this version has been released,,,,,,,,,,,,,,,,,,,,,
Updating a configuration containing a property configured with unbound array size,FELIX-1164,12425705,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,18/May/09 06:07,18/May/09 06:09,14/Mar/19 02:47,18/May/09 06:09,webconsole-1.2.10,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"To configure a property to be stored as an unbounded array, the cardinality of the property must be configured as Integer.MIN_VALUE in the metatype definition. This may cause a failure to update such a configuration in the ConfigManager class where the following construct is used to check whether the temporary vector must be resized:

                int maxSize = Math.abs( ad.getCardinality() );
                if ( vec.size() > maxSize )
                {
                    vec.setSize( maxSize );
                }

The problem is that Math.abs(Integer.MIN_VALUE) is still Integer.MIN_VALUE and thus negative (see also the Javadoc of the Math.abs(int) method). This causes the test to pass but calling Vector.setSize(int) with a negative value causes an ArrayIndexOutOfBoundsException.

The fix is to ensure the maxSize is not negative before resetting the size. Since the negative value in this case means ""unbounded"" anyway, we can safely skip resizing the vector.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57854,,,Mon May 18 06:09:18 UTC 2009,,,,,,0|i0vyyv:,184638,,,,,,,,18/May/09 06:09;fmeschbe;Applied fix in Rev. 775823.,,,,,,,,,,,,,,,,,,,,,,,,,,
Component.getReferences returns null if a component that has references is not enabled.,FELIX-1162,12425644,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,agemocui,agemocui,16/May/09 03:28,31/Jul/09 15:07,14/Mar/19 02:47,25/May/09 21:07,scr-1.0.8,,,,,,,,,,scr-1.2.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The implementation of method {color:blue}org.apache.felix.scr.Component.getReferences{color} in class {color:blue}org.apache.felix.scr.impl.AbstractComponentManager{color} doesn't use {color:red}m_componentMetadata{color} but {color:red}m_dependencyManagers{color} to return the service references of a component, which causes a calling of {color:blue}getReferences{color} to return null before ""enable component"" is scheduled.
",,,,,,,,,,,,,,,,,,,,16/May/09 05:32;fmeschbe;FELIX-1162.patch;https://issues.apache.org/jira/secure/attachment/12408308/FELIX-1162.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-16 05:32:42.464,,,no_permission,,,,,,,,,,,57856,,,Fri Jul 31 15:07:38 UTC 2009,,,,,,0|i1aruf:,270977,,,,,,,,"16/May/09 05:32;fmeschbe;I agree that for management for components this is unsatisfactory. So the attached patch creates the dependency manager list upfront and only enables them in the enableInternal() method.

Also I encapsulated all dependency manager operations (load, enable, verify, dispose) into separate methods.

WDYT ?",25/May/09 12:39;fmeschbe;Applied the patch in Rev. 778407. Please close this issue if it satisfies your needs. Thanks.,"25/May/09 14:09;fmeschbe;This patch is not correct, since it does not correctly handle reference counting.

When a bundle is activated all its component are created (along with the DependencyManagers). This sets all reference counters of the DependencyManagers (the m_size field) to the number of already registered services matching the reference. For references to services in the same bundle, this number is always zero.

After setting up the component they are scheduled for enablement. Thus all components are asynchronously enabled.

Now it may (and will) happen that services may be registered matching references of DependencyManagers without the respective reference counter being incremented because the DependencyManager is not yet enabled and thus not listening for service events.

When the component in question is then enabled, the DependencyManager still has the m_size field set to zero, where actually it should be 1 (or more). Consequently the reference may not be assumed satisified and hence the component may fail to activate.

The probable fix is to setup the initial value of the m_size not in the DependencyManager constructor but in the enable() method along with the service listener registration.","25/May/09 21:07;fmeschbe;Moved the calculation of the initial value for the m_size field to the enable method in Rev. 778505

This should do it now.

So you may close it now, if it works for you. Thanks.",25/May/09 21:27;fmeschbe;Deployed SNAPSHOT version 1.0.9-20090525.212438-1 containing this fix.,27/May/09 17:16;agemocui;It works perfect. Thanks.,31/Jul/09 15:07;fmeschbe;Retargeting fixes for SCR 1.2.0 release. There will be no 1.0.10 release.,,,,,,,,,,,,,,,,,,,,
WebConsole Manifest.MF should specify required version for Servlet API (2.4),FELIX-1160,12425577,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,thiloplanz,thiloplanz,15/May/09 11:06,18/May/09 00:22,14/Mar/19 02:47,15/May/09 11:45,webconsole-1.2.10,webconsole-1.2.8,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"WebConsole does not work with Servlet API prior to 2.4.

This should either be fixed (so that it works with 2.3) or specified in the Import-Package header in Manifest.MF (so that package resolution fails).

At the moment I get an ugly runtime exception: 

java.lang.NoSuchMethodError: javax.servlet.http.HttpServletResponse.setCharacterEncoding(Ljava/lang/String;)V
	at org.apache.felix.webconsole.AbstractWebConsolePlugin.startResponse(AbstractWebConsolePlugin.java:157)
	at org.apache.felix.webconsole.AbstractWebConsolePlugin.doGet(AbstractWebConsolePlugin.java:111)
	at org.apache.felix.webconsole.internal.core.BundlesServlet.doGet(BundlesServlet.java:117)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:697)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:311)
	at org.eclipse.equinox.http.servlet.internal.ServletRegistration.handleRequest(ServletRegistration.java:90)
	at org.eclipse.equinox.http.servlet.internal.ProxyServlet.processAlias(ProxyServlet.java:111)
	at org.eclipse.equinox.http.servlet.internal.ProxyServlet.service(ProxyServlet.java:67)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
",Tomcat 4.1.x (Servlet API 2.3),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-15 11:45:43.797,,,no_permission,,,,,,,,,,,57858,,,Fri May 15 11:46:01 UTC 2009,,,,,,0|i1arun:,270978,,,,,,,,"15/May/09 11:45;fmeschbe;Explicitly declared dependency on Servlet API 2.4 in Rev. 775089.

Please close this issue, if this is ok for you. Thanks.",15/May/09 11:46;fmeschbe;also affects new version 1.2.10,,,,,,,,,,,,,,,,,,,,,,,,,
Strange NoClassDefFoundError in WebLogic 9.2 when creating URLStreamHandlersProxyFactory,FELIX-1158,12425550,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,mrdon,mrdon,15/May/09 03:00,26/Aug/09 13:36,14/Mar/19 02:47,26/Aug/09 13:32,framework-1.2.1,,,,,,,,,,framework-1.8.0,,,,Framework,,,,,,,0,,,,,,"This bug really makes no sense, and the fix makes even less, but here it goes:  

In WebLogic 9.2, in some cases, the URLHandlers class is unable to create a URLStreamHandlersProxyFactory due to a NoClassDefFoundError.  The really weird bit is you can load the class using the class's classloader just fine via loadClass().  Attached is the hack that implements this workaround.

",,,,,,,,,,,,,,,,,,,,15/May/09 03:01;mrdon;FELIX-1158.diff;https://issues.apache.org/jira/secure/attachment/12408215/FELIX-1158.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-19 08:46:42.562,,,no_permission,,,,,,,,,,,57860,,,Wed Aug 26 13:32:10 UTC 2009,,,,,,0|i0w16n:,184997,,,,,,,,"15/May/09 03:02;mrdon;<Apr 30, 2009 4:17:21 PM EST> <Error> <HTTP> <BEA-101017> <[weblogic.servlet.internal.WebAppServletContext@3206e3 - appName: 'confluence', name: 'confluence', context-path: '/confluence'] Root cause of ServletException.
java.lang.NoClassDefFoundError: org/apache/felix/framework/URLHandlersStreamHandlerProxy
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:362)
	at java.net.URL.getURLStreamHandler(URL.java:1104)
	at java.net.URL.<init>(URL.java:572)
	at java.net.URL.<init>(URL.java:464)
	at java.net.URL.<init>(URL.java:413)
	Truncated. see log file for complete stacktrace
",19/Jun/09 08:46;karlpauls;Can you please rerun this with the latest felix  as I think this issue should be fixed already...,"26/Aug/09 13:32;rickhall;Reported as fixed:

""Yep, this looks good.  I didn't yet test it with WebLogic, but I looked
through the code and it looks like it'll do the trick.""",,,,,,,,,,,,,,,,,,,,,,,,
NPE results in OBR if a resource does not have a presentation name,FELIX-1157,12425506,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,14/May/09 19:40,14/May/09 20:04,14/Mar/19 02:47,14/May/09 20:04,bundlerepository-1.4.0,,,,,,,,,,bundlerepository-1.4.1,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"When listing available resources, OBR tries to group them by symbolic name and sort them within by presentation name. If a resource does not have a presentation name, then an NPE results.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57861,,,Thu May 14 20:04:13 UTC 2009,,,,,,0|i1aruv:,270979,,,,,,,,14/May/09 20:04;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
Module class loader must be created in privileged block,FELIX-1154,12425472,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,14/May/09 15:20,30/Jun/09 18:20,14/Mar/19 02:47,14/May/09 20:36,framework-1.6.0,framework-1.6.1,framework-1.8.0,,,,,,,,framework-1.8.1,,,,Framework,,,,,,,0,,,,,,"Due to some refactoring, the module class loader is no longer being created in a privileged block. Since creating a secure class loader is a protected operation, this is causing difficulties when running Felix with the security manager enabled. The refactoring made our existing SecureAction approach for performing secure actions in feasible (because the class loader became an instance inner class and cannot be created externally anymore). We need to think of a new way to do this, but at a minimum we should just put a doPriv() block right in the ModuleImpl class.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57864,,,Thu May 14 20:36:48 UTC 2009,,,,,,0|i0vyz3:,184639,,,,,,,,14/May/09 20:36;rickhall;Committed a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
wrapper scripts fail to start Karaf,FELIX-1152,12425329,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,tmoloney,tmoloney,13/May/09 13:49,11/Aug/09 19:30,14/Mar/19 02:47,11/Aug/09 06:45,,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,"Running ""features/install wrapper"" is successful.

Running ""wrapper/install"" is successful.

Running either ""bin/karaf-service start"" or ""bin/karaf-service console"" reports the following:

STATUS | wrapper  | 2009/05/13 09:15:48 | WARNING: Could not write lock file /var/lock/subsys/karaf: Permission denied
STATUS | wrapper  | 2009/05/13 09:15:48 | --> Wrapper Started as Daemon
STATUS | wrapper  | 2009/05/13 09:15:49 | Launching a JVM...
INFO   | jvm 1    | 2009/05/13 09:15:49 | Exception in thread ""main"" java.lang.NoClassDefFoundError: org/tanukisoftware/wrapper/Wrap
perSimpleApp
INFO   | jvm 1    | 2009/05/13 09:15:49 | Caused by: java.lang.ClassNotFoundException: org.tanukisoftware.wrapper.WrapperSimpleApp
INFO   | jvm 1    | 2009/05/13 09:15:49 | 	at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
INFO   | jvm 1    | 2009/05/13 09:15:49 | 	at java.security.AccessController.doPrivileged(Native Method)
INFO   | jvm 1    | 2009/05/13 09:15:49 | 	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
INFO   | jvm 1    | 2009/05/13 09:15:49 | 	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
INFO   | jvm 1    | 2009/05/13 09:15:49 | 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
INFO   | jvm 1    | 2009/05/13 09:15:49 | 	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
INFO   | jvm 1    | 2009/05/13 09:15:49 | 	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
INFO   | jvm 1    | 2009/05/13 09:15:49 | Could not find the main class: org.tanukisoftware.wrapper.WrapperSimpleApp.  Program will 
exit.
ERROR  | wrapper  | 2009/05/13 09:15:49 | JVM exited while loading the application.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-11 06:45:04.083,,,no_permission,,,,,,,,,,,57866,,,Tue Aug 11 06:45:04 UTC 2009,,,,,,0|i0vz2f:,184654,,,,,,,,"11/Aug/09 06:45;gnt;URL: http://svn.apache.org/viewvc?rev=803007&view=rev
",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE during bundleall goal,FELIX-1148,12425236,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,will.horn@gmail.com,will.horn@gmail.com,12/May/09 16:37,24/Jun/11 12:36,14/Mar/19 02:47,02/Sep/09 19:00,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"I have attached a test case where I get an NPE while running the bundleall goal.  The scenario is this: 

bundle-all-test: root project, defines dependency on log4j with a version range and runtime scope in dependencyManagement 

proj1: jar project depending on log4j, reducing scope to compile 

proj2: pom project depending on proj1 

To reproduce, run 'mvn install org.apache.felix:maven-bundle-plugin:bundleall' in the base directory.","vista, maven 2.0.9",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-02 16:32:37.439,,,no_permission,,,,,,,,,,,57870,,,Wed Sep 02 19:00:58 UTC 2009,,,,,,0|i0vy7z:,184517,,,,,,,,12/May/09 17:50;will.horn@gmail.com;I think this is due to a bug in maven-dependency-tree: http://jira.codehaus.org/browse/MNG-4159,"02/Jul/09 16:32;mcculls;See if we can work around this bug, schedule for the next maintenance release (2.0.1)",02/Sep/09 19:00;mcculls;Applied slightly modified patch in r810669 to a local copy of the affected file.,,,,,,,,,,,,,,,,,,,,,,,,
ConfigAdmin can deliver updates to a managed service factory more than once,FELIX-1146,12425201,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,angelovds,angelovds,12/May/09 12:01,25/Aug/09 08:52,14/Mar/19 02:47,20/Aug/09 08:21,configadmin-1.0.8,,,,,,,,,,configadmin-1.2.0,,,,Configuration Admin,,,,,,,0,,,,,,"When the update of a ManagedServiceFactoryConfiguration, and the registration of that ManagedServiceFactory are close together or 'crossing', it is possible that the update is delivered twice to the factory.

This seems to happen because of the following interleaving, with line numbers from current trunk, rev 763614
Some notes:
- I would have preferred to add some ascii art MSC, but unfortunately Jira does not allow this
- Time order is top to bottom; I left out many methods for clarity

User thread:
- createFactoryConfiguration(user code)
- config.update(user code)
- factory.addPID(ConfigurationImpl.java:329)
(preempted)

Managed Service Factory Tracker thread:
- ManagedServiceFactoryTracker.addingService(ConfigurationManager.java:1505)
- cm.configure(ConfigurationManager.java:1512)
- updateThread.schedule(ConfigurationManager.java:622) (Schedules a ManagedServiceFactoryUpdate task)
- schedule(UpdateThread.java:109)

Update thread:
- task.run(UpdateThread.java:89)
- ManagedServiceFactoryUpdate.run, cfg.isDelivered()(ConfigurationManager:1096) (is false now)
- cfg.setDelivered( true )(ConfigurationManager:1129)

User thread:
- setDelivered( false )(ConfigurationImpl:338)
- updateThread.schedule(ConfigurationManager:482)
- schedule(UpdateThread.java:109) (Schedules a 'regular' UpdateTask)

Update thread:
- task.run(UpdateThread.java:89)
- UpdateConfiguration.run, config.isDelivered() (is false now, so the configuration is delivered twice!)

In short, there is a possibility in which the ManagedServiceFactoryUpdate task and ConfigurationImpl influence the setDelivered in such a way, that they interfere with eachother.

I do not have a contained testcase at the moment, nor an easy fix. Sorry about that...",,,,,,,,,,,,,,,,,,,,21/Jun/09 18:25;angelovds;Activator.java;https://issues.apache.org/jira/secure/attachment/12411346/Activator.java,21/Jun/09 18:25;angelovds;ActivatorWithDependencyManager.java;https://issues.apache.org/jira/secure/attachment/12411347/ActivatorWithDependencyManager.java,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-08-20 08:21:27.31,,,no_permission,,,,,,,,,,,57871,,,Tue Aug 25 08:52:51 UTC 2009,,,,,,0|i1aql3:,270773,,,,,,,,"21/Jun/09 18:25;angelovds;I created a minimal example that shows the described behavior. I also found out that this behavior is more easily reproducable when using the dependency manager (I didn't have the time to find out why).

ActivatorWithDependencyManager.java contains a bundle activator that, when used as an activator for a bundle, will demonstrate the problem. Activator.java contains the same situation, just using basic service primitives.","20/Aug/09 08:21;fmeschbe;I think with the change in Rev. 805668 the probability of such a case has been reduced and I tend to think this issue can be resolved.

Unfortunately, since this is a very time-critical issue, I cannot test it really for now and guarantee it works.

But if you could use a current trunk build and try again with your test case in your environment. That would be great. Thanks.",25/Aug/09 08:09;fmeschbe;Close all issues now this version has been released,"25/Aug/09 08:52;angelovds;I have not been able to reproduce the issue with 1.2.0, so this looks fine to me! Thanks for the fix!",,,,,,,,,,,,,,,,,,,,,,,
[PATCH] Shell TUI pom has incorrect Bundle-DocURL tag,FELIX-1137,12425036,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,fdiotalevi,fdiotalevi,10/May/09 10:22,11/May/09 15:28,14/Mar/19 02:47,11/May/09 15:23,shell.tui-1.2.0,,,,,,,,,,shell.tui-1.4.0,,,,Shell TUI,,,,,,,0,,,,,,"Playing with the webconsole I realized that the shell.tui bundle points to not-existent urls in the bundle definition
<Bundle-DocURL>http://oscar-osgi.sf.net/obr2/${pom.artifactId}/</Bundle-DocURL>
<Bundle-Url>http://oscar-osgi.sf.net/obr2/${pom.artifactId}/${pom.artifactId}-${pom.version}.jar</Bundle-Url>
<Bundle-Source>http://oscar-osgi.sf.net/obr2/${pom.artifactId}/${pom.artifactId}-${pom.version}-src.jar</Bundle-Source>
",,,,,,,,,,,,,,,,,,,,10/May/09 10:26;fdiotalevi;FELIX-1137.txt;https://issues.apache.org/jira/secure/attachment/12407717/FELIX-1137.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-11 15:23:28.546,,,no_permission,,,,,,,,,,,57880,,,Mon May 11 15:23:28 UTC 2009,,,,,,0|i1aqlz:,270777,,,,,,,,"10/May/09 10:26;fdiotalevi;Deleted Bundle-Url and Bundle-Source elements that are not used by any Felix module, afaik.
Corrected the Bundle-DocURL.",11/May/09 15:23;rickhall;I applied this patch. Please close if you are satisfied. Thanks for contributing!,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceReference.isAssignableTo fails when using a factory that can not see the exported class and the bundle exporting the service does not have a direct wire to this class,FELIX-1131,12424812,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,07/May/09 12:51,10/Jul/13 09:55,14/Mar/19 02:47,09/Jul/13 14:25,framework-1.6.0,,,,,,,,,,framework-4.4.0,,,,Framework,,,,,,,0,,,,,," * bundle A defines an interface R and a class S in different packages, whith S implementing R
 * bundle B defines a class T extending S, it has an import statement on S package, but not on R package
 * bundle C defines a ServiceFactory that export T service without any import on any package from R, S, T

in this case, the line 426 of ServiceRegistrationImpl is executed:

                       allow = getServiceRegistration().isClassAccessible(requestClass);

which looks like:

   protected boolean isClassAccessible(Class clazz)
   {
       try
       {
           // Try to load from the service object or service factory class.
           Class sourceClass = (m_factory != null)
               ? m_factory.getClass() : m_svcObj.getClass();
           Class targetClass = Util.loadClassUsingClass(sourceClass, clazz.getName());
           return (targetClass == clazz);
       }
       catch (Exception ex)
       {
           // Ignore this and return false.
       }
       return false;
   }

So felix checks if the classloader used to load the factory can also load the interface, which is not the case in my example.
So isClassAccessible returns false and the event is not dispatched to the service listener.",,,,,,,,,,,,,,,,,,,,18/Jun/13 08:05;gnt;FELIX-1131.txt;https://issues.apache.org/jira/secure/attachment/12588306/FELIX-1131.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-07 19:11:56.385,,,no_permission,,,,,,,,,,,57886,,,Wed Jul 10 09:55:54 UTC 2013,,,,,,0|i0vw4v:,184179,,,,,,,,"07/May/09 19:11;rickhall;The only thing we could do in this case is get the service object and test that, which loses lazy creation.

The real question here is whether or not we should be forced to do this, since this example shows, it may not be sufficient to look at the factory class, since it could be registering something via reflection and may not be wired to the same definition of the package as the service object. In other words, we might always have to get the service object eagerly. Thoughts?","07/May/09 21:25;rickhall;Thinking about this some more, I believe that even though service factories were not necessarily intended to address laziness, it is the case that this is a major use case nowadays (e.g., iPOJO, DS, etc.), so breaking this by eagerly getting the service object would be a mistake.

The use case here is not particularly clear to me, but I would have to almost say it is invalid. The situation for the framework is that it needs to try to make some sort of good faith guarantee for the client that it won't get a class cast exception. It can only do this based on knowledge of the provider and the client.

This use case basically hides the provider and wants to get a guarantee from the framework that everything will be okay for the client. That doesn't really seem possible. Is it possible that bundle C could register the service factory using the bundle context of whoever the actual provider is, which does have a wire for the package?","13/May/09 13:49;gnt;Just had a chat with Peter Kriens and B.J. about that and their answer was that the isAssignable should only fail if you *know* that the classes are incompatible (wired to different packages).
So if the exporter has no wire to the package, we should just return true and not try to load the class at all.","13/May/09 14:27;rickhall;The JavaDoc sort of says the opposite, see #2 below:

""This method performs the following checks:
1 Get the package name from the specified class name.
2 For the bundle that registered the service referenced by this ServiceReference
(registrant bundle); find the source for the package. If no source is
found then return true if the registrant bundle is equal to the specified
bundle; otherwise return false.
3 If the package source of the registrant bundle is equal to the package
source of the specified bundle then return true; otherwise return false.""","13/May/09 14:32;gnt;Well, my understanding of ""if no source if found then returns true"" is not really ambiguous.
IIUC, this is the case when no provider wire is found, so we should just return true.","13/May/09 14:44;rickhall;Yeah, if you can stop reading a sentence whenever you like you can probably make the spec bend to any interpretation. :-)

The full sentence is:

""If no source is found then return true if the registrant bundle is equal to the specified bundle; otherwise return false.""

Notice the ""...return true if..."" portion.","14/May/09 07:31;gnt;Right.  This means the framework is more conservative.
 I guess this means we should then return false.  We still need to avoid the class loading imho.","14/May/09 13:17;rickhall;I agree we should avoid loading the class, so the question remains...how do you resolve your situation? It would be nice if we could find some way to improve the check, but I don't see how in this case. Even if you registered the factory using B's context, it wouldn't solve the issue if I understand correctly.","22/May/09 23:15;rickhall;So, can we close this?",12/Jun/09 15:41;rickhall;I am closing this for now. I think the current behavior is correct as far as the spec is concerned.,"18/Jun/13 06:41;gnt;I have another use case which may be possibly improved.
 * bundle A defines a package in version v1, exports it using a factory and registers a service with an interface from this package
  * bundle B defines the same package with version v2, exports it using a factory and registers a service with this pacakge
  * bundle C imports that package and grabs a service reference. Both references are deemed compatible by the framework

The reason why this use case could be improved is that both bundles A and B can see the package and the service object is supposed to implement the interface.  So this is different from the original use case where the registrant bundle did not even see the package.
This checks is not performed because felix only verify imported packages, not exported packages.  I'll try to see if I can provide a patch.
","18/Jun/13 07:17;gnt;In this use case, isAssignableTo falls into the case #3 (The provider does not have a wire for the package.) because the provider exports the package, but it's not the one imported, so both are incompatible.
So the getRegistration().isClassAccessible(requestClass) method is called but returns true because of the use of a factory.
I wonder if we could, even when using a factory, try to load the exposed class from the provider bundle and compare it with the requested one instead of simply returning true in that case.","18/Jun/13 07:24;gnt;Proposing the following patch which fixes the problem:
{code}
diff --git a/framework/src/main/java/org/apache/felix/framework/ServiceRegistrationImpl.java b/framework/src/main/java/org/apache/felix/framework/ServiceRegistrationImpl.java
index b41d900..51571cf 100644
--- a/framework/src/main/java/org/apache/felix/framework/ServiceRegistrationImpl.java
+++ b/framework/src/main/java/org/apache/felix/framework/ServiceRegistrationImpl.java
@@ -165,6 +165,18 @@ class ServiceRegistrationImpl implements ServiceRegistration
             && !((BundleReference) m_factory.getClass()
                 .getClassLoader()).getBundle().equals(m_bundle))
         {
+            try
+            {
+                Class providedClazz = m_bundle.loadClass(clazz.getName());
+                if (providedClazz != null)
+                {
+                    return providedClazz == clazz;
+                }
+            }
+            catch (ClassNotFoundException ex)
+            {
+                // Ignore and try interface class loaders.
+            }
             return true;
         }
{code}","18/Jun/13 08:05;gnt;Attached is a better diff which, in addition to checking imported packages, also checks exported packages and early succeed / fail when one bundle is importing and the other one exporting the same package.","18/Jun/13 13:54;rickhall;I don't think you can do short circuiting early based on whether the bundles export/import the package because you still have the case that the provider of the service factory is exporting the package, but is providing a service factory on behalf of another bundle.

Also, I'm confused about your scenario, since I don't know what ""exports it using a factory and registers a service with an interface from this package"" means.

If your bundle exports a package and registers a service factory for a service object implementing an interface from that package, then it shouldn't be hitting case 2 in isClassAccessible() since that is for the case where the factory provider and the service registerer aren't the same bundle. It sounds like you should hit case 1 in isClassAccessible(), since your bundle is the creator of the service factory as well as the bundle context used to register the service factory. For case 1, we explicitly load the classes to determine whether to filter or not, which would then fail.

So, perhaps I don't understand your scenario.","19/Jun/13 08:10;gnt;My use case is using blueprint which registers service factories on behalf of the extended bundle.

When using service factories on behalf of other bundles, the extender is supposed to use the extended bundle context to register the services. If it doesn't, the class space consistency is lost. 
As we can imagine the extender exporting a package and the extended bundle exporting the same package.  If the extender registers a service created for the extendee on its own bundle context (or the opposite), you'll soon hit a ClastCastException. 

On my patch, it's a short circuit only when the consumer and the provider have direct visibility (either import or export) on a package.  I don't see how things could go wrong here, because if both see the package, either it's the same and that's ok, or those are different and the consumer can't see the service, or one has no visibility and we use additional checks.  The use of service factories is irrelevant here, as we're considering the exposed classes, not the factory class, and only the consumer and provider exports, not the possible extender class space.



","19/Jun/13 13:26;rickhall;Ok, in your original description it was unclear that it was registering a service factory using the context of another bundle. So, yes, what you describe is case 2 in isClassAccessible().

Unfortunately, we did have a case where the extender did have access to the service package, but it was different than the extendee, but it was still expected to inject. In this case, I don't remember if the extender was importing or exporting the service package. Consider a simple scenario of a log service, the extender may have access to the service, but it is not clear whether that should impact which log service the extendee can be injected with.

This is the problem with service factories, we cannot know for certain unless we get the service object and check which class it is using.

I feel that if we make the change you are proposing we'll just break the other case, so it is a question of which case should we break? Another possibility is to aggressively get the service object, but only in case 2.","03/Jul/13 13:16;gnt;Are you saying a bundle's context can be used to register services that are known incompatible with that bundle class space ?

Because that's what your use case leads to, even if it's done through an extender and a service factory.  Actually, I think the current implementation allows registering such a service (even if not using an extender or a service factory), but that will certainly lead to a ClassCastException because the ServiceReference#isAssignableTo() check assumes that registered services are compatible with the bundle class space of the provider.","03/Jul/13 14:14;rickhall;I looked more closely at your patch and I don't really have any issues with it. It seems reasonable, so I'll commit it after I can run it against the CT. If we run across a degenerate case that fails with the patch, we'll address it at that time.","09/Jul/13 14:25;rickhall;I committed the patch after checking it against the R4.3 CT. Please close if satisfied, thanks.",10/Jul/13 09:55;gnt;Thx for applying the patch.,,,,,,
"Bundle.getHeaders() returns a Dictionary<java.util.jar.Attribute.Name,String>",FELIX-1130,12424782,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,alexberger,alexberger,07/May/09 05:57,15/May/09 06:09,14/Mar/19 02:47,11/May/09 16:08,framework-1.6.1,,,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"Bundle.getHeaders() returns a Dictionary whose key type is java.util.jar.Attribute.Name but the key type should be 
java.lang.String. For some unknown reasons (I guess different implementations of equals() and hashCode()) this
causes no problems with SUN's JRE but a lot of trouble with IBM's JRE. Especially bundles that rely on bundle 
headers (like for example Felix SCR) do not work on IBM's JRE due to this bug.

The suspicious code is in the getManifestHeader() member of org.apache.felix.framework.cache.JarRevision and DirectoryRevision:

            Manifest mf = jarFile.getManifest();
            // Create a case insensitive map of manifest attributes.
            return new StringMap(mf.getMainAttributes(), false);

So either org.apache.felix.framework.cache.JarRevision and DirectoryRevision should be changed in order for 
their getManifestHeader() member to return a Dictionary<String,String> 

            Manifest mf = jarFile.getManifest();
            // Create a case insensitive map of manifest attributes.
            final Attributes attributes = mf.getMainAttributes();
            final StringMap m = new StringMap(false);
            for ( final Object name : attributes.keySet() ) {
                final String text = name.toString();
                m.put(text, attributes.getValue(text));
            }
            return m;

or as Richard suggested the org.apache.felix.framework.util.StringMap
class should override putAll(Map) and ensure that all keys are of type String (like StringMap.put(...)) does.

Corresponding mailing list entries:

http://www.mail-archive.com/users@felix.apache.org/msg04248.html
http://www.mail-archive.com/users@felix.apache.org/msg04249.html
","IBM J9 VM (build 2.4, J2RE 1.6.0 IBM J9 2.4 AIX ppc64-64 jvmap6460-20090215_29883 (JIT enabled, AOT enabled)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-11 16:08:00.967,,,no_permission,,,,,,,,,,,57887,,,Fri May 15 06:09:33 UTC 2009,,,,,,0|i0vz1j:,184650,,,,,,,,"11/May/09 16:08;rickhall;I committed a patch that overrides putAll() and calls put() on each entry, where put() overrides the super class to do a toString() on each key. Please close this issue if you are satisfied. Thanks for the feedback.","15/May/09 06:09;alexberger;Thanks Richard. 

As the patch is very simple and is identically with the one I use for Felix 1.6.1 I close this issue as it works.",,,,,,,,,,,,,,,,,,,,,,,,,
"Features installed via the deploy directory aren't listed by the ""features/list"" command",FELIX-1128,12424714,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,tmoloney,tmoloney,06/May/09 15:07,06/May/09 15:52,14/Mar/19 02:47,06/May/09 15:52,,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,See http://www.mail-archive.com/users@felix.apache.org/msg04236.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57889,,,Wed May 06 15:52:59 UTC 2009,,,,,,0|i0w0zz:,184967,,,,,,,,06/May/09 15:52;tmoloney;This is fixed in the trunk (verified in revision 772309).,,,,,,,,,,,,,,,,,,,,,,,,,,
"""features/list -i"" returns ""ERROR CommandLineExecutionFailed: org.apache.geronimo.gshell.command.CommandException: java.lang.ArrayStoreException: org.apache.servicemix.kernel.gshell.features.internal.FeatureImpl""",FELIX-1125,12424707,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,tmoloney,tmoloney,06/May/09 14:48,06/May/09 15:58,14/Mar/19 02:47,06/May/09 14:56,karaf-1.0.0,,,,,,,,,,karaf-1.0.0,,,,Karaf,,,,,,,0,,,,,,"The bug can be replicated as follows:

bash> tar zxf apache-servicemix-kernel-1.1.0.tar.gz
bash> cd apache-servicemix-kernel-1.1.0
bash> cat >webconsole-feature.xml<<EOF
> <features>
>   <feature name=""webconsole"" version=""0.1.0-SNAPSHOT"">
>     <bundle>mvn:org.mortbay.jetty/jetty-util/6.1.11/jar</bundle>
>     <bundle>mvn:org.mortbay.jetty/jetty-sslengine/6.1.11/jar</bundle>
>     <bundle>mvn:org.mortbay.jetty/jetty/6.1.11/jar</bundle>
>     <bundle>mvn:org.apache.felix/org.apache.felix.http.jetty/1.0.0/jar</bundle>
>     <config name=""org.apache.felix.http"">
>       org.osgi.service.http.port=8080
>     </config>
>     <bundle>mvn:org.apache.felix/org.apache.felix.webconsole/1.2.8/jar</bundle>
>     <config name=""org.apache.felix.webconsole.internal.servlet.OsgiManager"">
>       username=tester
>       password=testing
>     </config>
>   </feature>
> </features>
> EOF
bash> bin/servicemix
 ____                  _          __  __ _      
/ ___|  ___ _ ____   _(_) ___ ___|  \/  (_)_  __
\___ \ / _ \ '__\ \ / / |/ __/ _ \ |\/| | \ \/ /
 ___) |  __/ |   \ V /| | (_|  __/ |  | | |>  < 
|____/ \___|_|    \_/ |_|\___\___|_|  |_|_/_/\_\

 ServiceMix Kernel (1.1.0)

Type 'help' for more information.
-----------------------------------------------------------------------------------------------------------------------------------
smx@root:/> cp webconsole-feature.xml deploy
smx@root:/> features/list -i
ERROR CommandLineExecutionFailed: org.apache.geronimo.gshell.command.CommandException: java.lang.ArrayStoreException: org.apache.servicemix.kernel.gshell.features.internal.FeatureImpl
smx@root:/> log/display-exception 
smx@root:/> log/display
...
10:45:12,919 | INFO  | localShell       | CommandLineExecutorImpl          | om.shell.CommandLineExecutorImpl   64 | Executing (String): features/list -i
10:45:12,920 | INFO  | localShell       | CommandLineExecutorImpl          | om.shell.CommandLineExecutorImpl  104 | Executing (features/list): [-i]
10:46:19,302 | INFO  | localShell       | CommandLineExecutorImpl          | om.shell.CommandLineExecutorImpl   64 | Executing (String): log/display-exception
10:46:19,303 | INFO  | localShell       | CommandLineExecutorImpl          | om.shell.CommandLineExecutorImpl  104 | Executing (log/display-exception): []
10:46:25,709 | INFO  | localShell       | CommandLineExecutorImpl          | om.shell.CommandLineExecutorImpl   64 | Executing (String): log/display
10:46:25,711 | INFO  | localShell       | CommandLineExecutorImpl          | om.shell.CommandLineExecutorImpl  104 | Executing (log/display): []
smx@root:/> osgi/shutdown
smx@root:/> bash> 
","java version ""1.6.0_13""
Java(TM) SE Runtime Environment (build 1.6.0_13-b03)
Java HotSpot(TM) Client VM (build 11.3-b02, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-06 14:56:06.985,,,no_permission,,,,,,,,,,,57892,,,Wed May 06 15:58:37 UTC 2009,,,,,,0|i0vz1b:,184649,,,,,,,,"06/May/09 14:56;gertvanthienen;Tim,

I think this bug was fixed just before ServiceMix Kernel became Apache Felix Karaf (cfr. https://issues.apache.org/activemq/browse/SMX4KNL-266)

Regards,

Gert",06/May/09 15:58;tmoloney;This is fixed in the trunk (verified in revision 772309). ,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceNotFoundException too verbose,FELIX-1124,12424668,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,tdiesler,tdiesler,06/May/09 06:55,14/Jul/09 14:28,14/Mar/19 02:47,13/Jul/09 13:40,framework-1.6.1,framework-1.8.0,framework-1.8.1,,,,,,,,framework-2.0.0,,,,Framework,,,,,,,0,,,,,,"ModuleImpl logs stack traces for every resource that cannot be found. Often resources are optional or may be located at different locations. 

    public URL getResourceByDelegation(String name)
    {
        try
        {
            return (URL) findClassOrResourceByDelegation(name, false);
        }
        catch (ClassNotFoundException ex)
        {
            // This should never be thrown because we are loading resources.
        }
        catch (ResourceNotFoundException ex)
        {
            m_logger.log(
                Logger.LOG_DEBUG,
                ex.getMessage(),
                ex);
        }
        return null;
    }

Please consider a log message without stack trace and leave it to the client to be more verbose when appropriate. 

To log no message at all and simply return null would also be consistent with 

http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html#getResource(java.lang.String)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-11 18:28:56.207,,,no_permission,,,,,,,,,,,57893,,,Tue Jul 14 14:28:25 UTC 2009,,,,,,0|i0vz0v:,184647,,,,,,,,"11/May/09 18:28;rickhall;Looking at the code for Logger, it looks like it doesn't print the stack trace for LOG_DEBUG, only LOG_ERROR. Are you sure the stack trace is getting printed from this call to log?","18/Jun/09 11:25;tdiesler;Yes, this should be place. I verified this with framework-1.8.0

Here a sample stacktrace

2009-06-18 13:19:45,074 DEBUG [org.jboss.osgi.felix.framework.FelixLogger] META-INF/services/org.apache.xerces.xni.parser.XMLParserConfiguration
org.apache.felix.moduleloader.ResourceNotFoundException: META-INF/services/org.apache.xerces.xni.parser.XMLParserConfiguration
	at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:622)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.getResourceByDelegation(ModuleImpl.java:488)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.getResource(ModuleImpl.java:1631)
	at java.lang.ClassLoader.getResourceAsStream(ClassLoader.java:1168)",30/Jun/09 09:28;tdiesler;Also affects 1.8.1,"30/Jun/09 14:41;rickhall;Thomas, I created the following bundle activator:

public class Activator implements BundleActivator
{
    public void start(final BundleContext context) throws Exception
    {
        getClass().getClassLoader().getResourceAsStream(""does/not/exist.txt"");
    }

    public void stop(BundleContext context)
    {
    }
}

When I run this in Felix I get:

-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (1.9.0.SNAPSHOT)
[   1] [Active     ] [    1] Apache Felix Shell Service (1.3.0.SNAPSHOT)
[   2] [Active     ] [    1] Apache Felix Shell TUI (1.3.0.SNAPSHOT)
[   3] [Active     ] [    1] Apache Felix Bundle Repository (1.5.0.SNAPSHOT)
[   5] [Installed  ] [    1] test.logger
-> start 5
DEBUG: WIRE: 5.0 -> org.osgi.framework -> 0
DEBUG: does/not/exist.txt (org.apache.felix.moduleloader.ResourceNotFoundException: does/not/exist.txt)
->

I do not get a stack trace, which is what I would expect from the code for Logger. Are you passing in a Logger instance to Felix when you construct it or are you just using Felix' launcher? If the former, I would have to assume that the passed in logger is printing the stack trace.

Let me know if I am missing something.","13/Jul/09 07:12;tdiesler;Yes, I confirmed (with the debugger) the stack trace is indeed thrown at the location that I mentioned above.

Here the full stack trace for the example that you show.

2009-07-13 08:55:16,446 DEBUG [org.jboss.osgi.felix.framework.FelixLogger] does/not/exist.txt
org.apache.felix.moduleloader.ResourceNotFoundException: does/not/exist.txt
	at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:631)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.getResourceByDelegation(ModuleImpl.java:497)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.getResource(ModuleImpl.java:1654)
	at java.lang.ClassLoader.getResourceAsStream(ClassLoader.java:1168)
	at org.jboss.test.osgi.example.simple.bundle.SimpleActivator.start(SimpleActivator.java:46)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1461)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:779)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:760)


Perhaps you do not have a LogService installed, which would show you the stack trace of the ResourceNotFoundException.

My suggested fix would be 

ModuleImpl:503

        catch (ResourceNotFoundException ex)
        {  
            // [FELIX-1124] ResourceNotFoundException too verbose
            m_logger.log(Logger.LOG_DEBUG, ex.getMessage());
        }


","13/Jul/09 12:44;rickhall;Sorry for being confusing and/or confused. I know the exception is being thrown from there, my point is that the framework is not responsible for printing the verbose message. So now it seems clear the LogService impl is printing the information. So, in your original description you ask to let the client decide how verbose to be, so isn't this an issue of the LogService impl being too verbose, not the framework?

If we don't include the exception, then no logger would be able to get the information even if they wanted it.","13/Jul/09 13:23;tdiesler;I see what you are saying, on the other hand can a LogService really choose not to log Exceptions in level debug even if a client explicitly asks the LogService to do so? 

IMHO, the client of the LogService should decide whether the Exception stack trace is relevant (i.e. should go to the log file) or not. The LogService cannot make this decision based on the level alone.

Yes, indeed I pass in a Felix logger when I construct the framework. All messages (from the LogService as well as from the Framework itself) get routed to the configured Log4J file. 

https://anonsvn.jboss.org/repos/jbossas/projects/jboss-osgi/projects/runtime/felix/trunk/src/main/java/org/jboss/osgi/felix/framework/FelixLogger.java


","13/Jul/09 13:40;rickhall;Ok, I removed the exception from the logged information.

My original confusion was that I thought you were saying that Felix was printing the information, but it doesn't since Felix' default logger doesn't print stack traces for debug logs.

I am still not convinced that this isn't a lack of configurability in the log service impl, but I removed the exception since it probably doesn't provide much value any way.

Also, make sure your logger doesn't make calls back into Felix, since we witnessed deadlocking, which is why we disabled that by default.

Please close this issue if you are satisfied. Thanks.",14/Jul/09 14:28;tdiesler;merci,,,,,,,,,,,,,,,,,,
Extension bundles are not being removed from the bundle list when uninstalled,FELIX-1122,12424635,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,05/May/09 20:10,28/Aug/09 16:11,14/Mar/19 02:47,28/Aug/09 16:11,framework-1.6.1,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,We need to remove the extension bundle from the installed bundle data structures in Felix.uninstallBundle(). I think the code in there can be merged a little better to bring handling of extension bundles and normal bundles into closer alignment.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57895,,,Fri Aug 28 16:11:02 UTC 2009,,,,,,0|i0w0zb:,184964,,,,,,,,"28/Aug/09 16:11;rickhall;Extensions bundles are now handle in a similar fashion to other bundles, except they are not stopped during uninstall, they are stopped during framework shutdown instead.",,,,,,,,,,,,,,,,,,,,,,,,,,
"PermissionAdmin service can't handle java.ioFilePermission for ""<<ALL FILES>>""",FELIX-1103,12424196,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,udittmer,udittmer,29/Apr/09 18:31,26/Nov/09 07:29,14/Mar/19 02:47,25/Nov/09 20:43,framework-1.6.0,,,,,,,,,,,,,,Conditional Permission Admin,Permission Admin,,,,,,0,,,,,,"The PermissionAdmin service does not handle java.io.FilePermissions correctly that use the special ""<<ALL FILES>>"" syntax for the path. It needs to be special-cased in the org.apache.felix.framework.security.util.Permissions.implies(Permission, Bundle) method instead of being interpreted as a regular file name. I've tested that it's sufficient to wrap all the name/postfix handling in a ""if (! ""<<ALL FILES>>"".equals(name)) { ... }"" block.

Affected Felix version is 1.4, because that's the last one that works with PermissionAdmin service. It would affect Felix 1.6 as well if that could be used at all (see bug Felix-1101).

I'm not sure if this qualifies as a ""Major"" bug, but there's no easy workaround (which the online docs say is what makes a ""Minor"" bug).",,,,,,,,,,,,,,,,,,,,25/Nov/09 18:05;udittmer;Permissions.diff;https://issues.apache.org/jira/secure/attachment/12426126/Permissions.diff,30/Apr/09 15:37;udittmer;Permissions.diff;https://issues.apache.org/jira/secure/attachment/12406928/Permissions.diff,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-04-30 12:44:42.993,,,no_permission,,,,,,,,,,,57910,,,Thu Nov 26 07:29:37 UTC 2009,,,,,,0|i1aqnj:,270784,,,,,,,,30/Apr/09 12:44;karlpauls;Could you point out where in the spec it mentions this special <<ALL FILES>> path?,"30/Apr/09 14:51;udittmer;It doesn't seem to mention that in the OSGi spec, but since it's a standard feature of java.io.FilePermission (mentioned in its javadocs), I think it's a reasonable assumption that it should work in an OSGi context as well.

Searching a bit finds numerous pages that indicate it works with the Spring and Equinox OSGi implementations as well (not a sure sign that that's the right thing to do, of course, but why would an OSGi implementation not support a standard Java feature? It would complicate matters a lot if developers had to assume that there might be differences between ""Java"" and ""Java in an OSGi context"".)","30/Apr/09 14:57;karlpauls;Ah ok, you are talking about the normal FilePermission. Well, we don't do anything special with it so I was assuming it would be already doing what it should. I will investigate.

Just in case, if you have it working, would you mind sharing your patch? You can just attach it to this jira.",30/Apr/09 15:37;udittmer;I attached a patch for Permissions.java as described in the first post; it works against the current trunk version. (Not sure why it looks so complicated - it's just an opening and closing if statement; maybe it's the indentation of the lines in between that throws diff off.),"24/Nov/09 23:38;karlpauls;I did migrate the security provider to felix 2.0.2 as of revision 883923. In case you are still around, could you have a look whether it works for you and if you still have the issue with the <<ALL FILEs>>? In case you do, please reopen this issue and give me more information on what is going wrong as I'm still not sure I understand why the default FilePermission doesn't handle this case already.","25/Nov/09 18:05;udittmer;new version of the patch, just in case the old one no longer works with the updated sources","25/Nov/09 18:11;udittmer;No, it doesn't work - it seems the patch did not get applied to the latest version of the source.

It's needed because the implies(Permission, Bundle) method performs various modifications of the path in case of a FilePermission (in the code block that modifies ""name"" and ""postfix""). And since ""name"" is passed on as parameter of the FilePermission, that would be corrupted in the case of ""<<<ALL FILES>>>"", making this special case inoperable.","25/Nov/09 19:57;karlpauls;Ok, now I understand the issue. I will look into it. Thanks.",25/Nov/09 20:43;karlpauls;Done. Please close this issue if it works for you.,"26/Nov/09 07:29;udittmer;This works fine now, thanks.",,,,,,,,,,,,,,,,,
[PATCH] webconsole silently ignores bundles which have no Bundle-SymbolicName header,FELIX-1061,12423991,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,bdelacretaz,bdelacretaz,28/Apr/09 09:37,11/May/09 13:17,14/Mar/19 02:47,11/May/09 13:04,webconsole-1.2.8,,,,,,,,,,webconsole-1.2.10,,,,Web Console,,,,,,,0,,,,,,"Trying to install a bundle which has no Bundle-SymbolicName header silently fails with the current console, there no error report in the log or in the web browser.

Other exceptions during bundle installation are also invisible from the console web interface, they are only logged.

With the attached patch, exceptions during bundle installation cause a 500 HTTP status and exception report in the web browser, and the InstallAction throws an IOException if a bundle has no Bundle-SymbolicName.",,,0,0,,0%,0,0,,,,,,,,,,,,28/Apr/09 09:38;bdelacretaz;FELIX-1061.patch;https://issues.apache.org/jira/secure/attachment/12406618/FELIX-1061.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-28 12:31:48.447,,,no_permission,,,,,,,,,,,57929,,,Mon May 11 13:17:57 UTC 2009,,,,,,0|i1aqov:,270790,,,,,,,,"28/Apr/09 12:31;cziegeler;Hi Bertrand, I've applied your patch in revision: 769372. Please cross check and close this bug.

Thanks!","11/May/09 06:53;fmeschbe;I don't like this patch because it throws a 500 excetion into the face of the user. I agree, that we should enhance the user response to installation and update requests, but sending a 500 is IMHO not the correct way to do it.

I agree, that we should at least log the situation.",11/May/09 13:17;fmeschbe;Created FELIX-1141 regarding the general problem of providing feeback on executed operations,,,,,,,,,,,,,,,,,,,,,,,,
stopping bundle causes NPE,FELIX-1057,12423764,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,peterd,peterd,25/Apr/09 10:00,25/Apr/09 20:18,14/Mar/19 02:47,25/Apr/09 17:04,shell.remote-1.0.4,,,,,,,,,,shell.remote-1.1.0,,,,Remote Shell,,,,,,,0,,,,,,"Stopping the remote shell bundle itself remotely, causes a NPE:
Exception in thread ""telnetconsole.shell remote=/127.0.0.1:56512"" java.lang.NullPointerException
	at org.apache.felix.shell.remote.TerminalPrintStream.print(TerminalPrintStream.java:52)

I admit that stopping the bundle itself over the remote connection may seem like a silly use case, but under circumstances it is necessary (to release the socket).

The NPE is causes by Activator.getServices() returning null. The fix is trivial:
ServiceMediator services = Activator.getServices();
if (services != null)
   services.error(...)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-25 17:04:05.442,,,no_permission,,,,,,,,,,,57933,,,Sat Apr 25 20:18:23 UTC 2009,,,,,,0|i1aqpb:,270792,,,,,,,,"25/Apr/09 17:04;rickhall;Ok, it turned out to not be so trivial. I could have done the fix you suggested, but the root of the issue was a little uglier since it was using a static-based approach to allow it to pass services around to all classes in the bundle; I highly recommend against this approach.

Also, there were a handful of concurrency issues and service tracking was not correct. I ended up pulling that code and just using ServiceTrackers to track log and shell services. Please run remote shell through its paces to make sure I didn't break anything else, but at least your issue is now gone after a few hours of work. :-)

Close this issue when you are satisfied. Thanks.","25/Apr/09 20:18;peterd;Yeah, i noticed the concurrency issues too, but didn't want to be a nag ;-).

Thanks for fixing this. Keep up the good work!",,,,,,,,,,,,,,,,,,,,,,,,,
SCR: Bound Service Replacement regression ?,FELIX-1053,12423549,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,pderop,pderop,23/Apr/09 08:30,29/Apr/09 08:29,14/Mar/19 02:47,29/Apr/09 08:11,,,,,,,,,,,scr-1.0.8,,,,Declarative Services (SCR),,,,,,,0,,,,,,"With the SCR trunk version, it looks like the ""Bound Service Replacement"" feature does not work anymore, and
I think it might be a regression, because it works fine with the SCR version 1.0.6
I have attached to this issue a sample code which reproduces the problem. In the sample, there are two bundles:

client-1.0.jar
=========

- contains a Client which has a dynamic/required/unary dependency over the ""service.Service"" interface, with the service property ""foo=bar""

- Here is the serviceComponent.xml description:

   <?xml version=""1.0"" encoding=""UTF-8""?>
   <component name=""Client"">
     <implementation class=""client.Client""/>
     <reference name=""SERVICE"" 
       interface=""service.Service""
       policy=""dynamic""
       cardinality=""1..1""
       target=""(foo=bar)""
       bind=""bind""/>
   </component>

service-1.0.jar
==========

- contains the Service interface: ""service.Service""

- contains the Service implementation: ""service.impl.ServiceImpl""

- contains a ComponentFactory (""service.impl.ServiceFactory"") which is in charge of creating component instances of type ""ServiceImpl"".
Here is the serviceComponent.xml:

   <?xml version=""1.0"" encoding=""UTF-8""?>
   <component name=""Service"" factory=""ServiceFactory"">
     <service>
       <provide interface=""service.Service""/>
     </service>
     <implementation class=""service.impl.ServiceImpl""/>
   </component>
   
   <component name=""ServiceFactory"">
     <implementation class=""service.impl.ServiceFactory""/>
     <reference name=""COMPONENT_FACTORY"" 
       interface=""org.osgi.service.component.ComponentFactory""
       target=""(component.name=Service)""
       bind=""bind""/>
   </component>

The ComponentFactory does the following, in a separate thread:

   while (true) {
     1- create a ServiceImpl component instance with property ""foo=bar2""
     2- dispose eventual previously created ServiceImpl with property ""foo=bar2""
     3- create a ServiceImpl component instance with property ""foo=bar""
     4- dispose eventual previously created ServiceImpl with property ""foo=bar""
     5- Sleep 500 seconds
   }

The issue arises in the step 4: Indeed, when the old ServiceImpl (with property ""foo=bar"") is disposed, the Client is deactivated, but
I think it should not, mainly because SCR should actually replace the old bound ServiceImpl with the new one that was created in step 3.
When you will start the test, you will see the following logs:

   ServiceFactory: creating Service instance with property ""foo=bar2"" ...
   ServiceFactory: creating Service instance with property ""foo=bar"" ...
   ServiceFactory: Sleeping 500 ms ...
   Client: bound Service : service.impl.ServiceImpl@1bca5f1
   Client: activated with properties={component.name=Client; component.id=4; SERVICE.target=(foo=bar); }

   ServiceFactory: creating Service instance with property ""foo=bar2"" ...
   ServiceFactory: disposing old Service instance with property ""foo=bar2"" ...
   ServiceFactory: creating Service instance with property ""foo=bar"" ...
   ServiceFactory: disposing old Service instance with property ""foo=bar"" ...
   Client: DEACTIVATED !

Felix, could you please take a look at the sample code and check if my analysis is correct ?
","linux/java version ""1.5.0_18""",,,,,,,,,,,,,,,,,,,23/Apr/09 08:31;pderop;bound-replacement.tgz;https://issues.apache.org/jira/secure/attachment/12406202/bound-replacement.tgz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-26 21:31:45.842,,,no_permission,,,,,,,,,,,57937,,,Wed Apr 29 08:11:54 UTC 2009,,,,,,0|i0vz0f:,184645,,,,,,,,26/Apr/09 21:31;fmeschbe;Thanks for reporting this bug. I will look into this issue certainly before cutting the release.,"27/Apr/09 08:32;fmeschbe;This is actually a regression introduced with FELIX-993: As for this issue I removed the target filter check on removal. The consequence is that the m_size field is decremented on each service removal, regardless of this makes any sense or not.

Will have to investigate various options with respect to target filters:

(1) add service with matching / non-matching filter   --> no issue works right now
(2) remove service with matching / non-matching filter --> used to work before FELIX-993
(3) change service such that the filter match changes --> used to not work before FELIX-993, does not work correctly now.

The problem really is handling the service properties update and its influence on the target filter matching.... Copying with service properties update requires more work than just removing/adding the service.","27/Apr/09 09:47;fmeschbe;Committed a fix in Rev. 768910:

  * The m_size property is not managed in the servicedAdded and serviceRemoved methods any more
  * The serviceChanged method is modified:
       - if the service is registered: check filter and (if matching) increment m_size and all servicedAdded
       - if the service is unregistered: check filter and decrement m_size if matching, serviceRemoved is always called
       - if the service is modified: call serviceRemoved, set m_size to the number of matching services registered and call serviceAdded
  * The setTargetFilter now also sets the m_size property according to the services matching the new filter","29/Apr/09 08:11;fmeschbe;The committed fix is reported to work by Pierre De Rop (Thanks). So I resolve this issue.

If you agree, Pierre, would you mind closing this issue ? Thanks.",,,,,,,,,,,,,,,,,,,,,,,
"Handle fragment bundles differently than ""normal"" bundles",FELIX-1048,12423453,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,22/Apr/09 10:14,11/May/09 12:10,14/Mar/19 02:47,11/May/09 12:10,webconsole-1.2.8,,,,,,,,,,webconsole-1.2.10,,,,Web Console,,,,,,,0,,,,,,Currently fragment bundles are displayed as plain bundles with a start button. As fragment bundles can't be started this button shouldn't be available and the fragment bundles should be marked differently.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-11 06:38:46.174,,,no_permission,,,,,,,,,,,57942,,,Mon May 11 12:10:02 UTC 2009,,,,,,0|i0w12v:,184980,,,,,,,,"27/Apr/09 20:37;cziegeler;In Revision: 769151 I've added initial support for fragment bundles in the bundles list: fragment bundles can't be started or stopped anymore; their status is displayed as ""Fragment"" if they're active - the status line is displayed correctly now
I'll leave this bug open for further comments/improvements.",11/May/09 06:38;fmeschbe;What further comments/improvements do you consider ? Can we not close this issue and create new one for further enhancements ?,"11/May/09 12:10;cziegeler;Actually I was waiting for some comments, but no comments = perfect :)

Therefore closing this bug.",,,,,,,,,,,,,,,,,,,,,,,,
DependencyManager may miss service registrations,FELIX-1044,12423259,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,20/Apr/09 09:06,22/Apr/09 11:04,14/Mar/19 02:47,20/Apr/09 11:14,scr-1.0.6,,,,,,,,,,scr-1.0.8,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Instances of the DependencyManager class are used to track component references and to call the bind/unbind methods as appropriate.

There are timing issues, which may cause instances of this class to miss services.

The serviceAdded method checks whether the component is active before handling a service registration. Generally this works because the activation of the component will call the bind() method for all dependency managers. The problem arises if the service is registered _after_ the DependencyManager has bound registered services but before the component is fully active (e.g. while the activate() method is still running): In this case the service is received but not bound because the component is activating and because the dependency manager has already been called to bind to registered services, the registering service is lost.

An approach to explore is to ignore the component state when deciding on whether to handle the event or not but to add a flag: The flag indicates whether the DependencyManager.bind method has already been called and hence future events should be handled. When the DependencyManager.unbind method is called, the flag should be cleare to prevent event handling. In other words:

   * Add boolean flag ""open""
   * Add open(Object) method to be called during activation. This binds existing services and sets the ""open"" flag
   * Rename undinb(Object) called during deactivation to close(Object) . This unbinds all bound services and clears the ""open"" flag
   * Add a check for the ""open"" flag to the serviceChanged method
   * Remove the ""handleEvent"" method, whose functionality is replaced by the ""open"" flag",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57946,,,Wed Apr 22 11:04:01 UTC 2009,,,,,,0|i0vz0n:,184646,,,,,,,,"20/Apr/09 11:03;fmeschbe;Closer inspection showed, that the component state handling is quite correct. The problem is, that the serviceAdded method must provide the invokeBindMethod with the component instance to call the method on, which may be null.

The reason for this is the following process setting up an immediate component:

  1 set state to ACTIVATING
  2 create instance
  3 call bind methods  (currently calling DependencyManager.bind( Object ))
  4 call the activate method
  5 set the implementation instance field
  6 etc.

What happens is, that the interesting service is being registered _after_ the component has become ACTIVATING (step 1) but _before_ the implementation instance field is set (step 5). This causes the registation to fail and the service to be missed.

The solution is for the bind(Object) method to keep the implementation instance in an internal field, which may subsequently be used by service registration event handling. This will cause all service registration between setting the component to ACTIVATING (step 1) and calling the bind(Object) method (step 3) to not be handled. But since the bind(Object) method calls for all services registered before this time, the service will be correctly picked up.

It turns out, that storing the component instance in a field of the DependencyManager instance can also be used as the ""open"" flag described in the initial report.","20/Apr/09 11:13;fmeschbe;Applied the following fix in Rev. 766652


  * Rename DependencyManager.close() method to DependencyManager.dispose()
      this is the opposite method to the constructor and dispose marks this relation better than close

  * Rename DependencyManager.bind(Object) to open(Object)
      indicates that the DependencyManager is now bound to the component instance and should handle (bind) references

  * Rename DependencyManager.unbind(Object) method to close()
       this is the counterpart to the new open(Object) method and renaming is logical. In addition the instance parameter
       is not needed anymore because it is kept in a file of the DependencyManager instance

  * Changed invokeBindMethod and invokeUnbindMethod signatures to not take an object parameter anymore since
       these methods can rely on the field referring to the component instance

  * invokeUnbindMethod does not return a value anymore because this return value is not used anyway

  * Added lots of logging (mostly DEBUG) to the DependencyManager class",20/Apr/09 11:14;fmeschbe;Considering this issue fixed. Will keep it open for some time to gain more confidence.,22/Apr/09 11:04;fmeschbe;Internal testing shows that the issue is actually fixed. Therefore closing this issue.,,,,,,,,,,,,,,,,,,,,,,,
Inconsistency packaging vs. type,FELIX-1039,12422853,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,tdiesler,tdiesler,15/Apr/09 08:35,11/Oct/11 17:09,14/Mar/19 02:47,24/Jun/11 13:28,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.3.5,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The Maven Bundle Plugin uses 

  <packaging>bundle</packaging>

Scenario #1 - dependency uses type=bundle

    <dependency>
      <groupId>org.jboss.osgi</groupId>
      <artifactId>jboss-osgi-common</artifactId>
      <version>${version}</version>
      <type>bundle</type>
    </dependency>

with type=bundle the the dependency is resolved correctly from the the build reactor. 
'mvn package' succeeds. Note, the artefact is not yet in the local repository.

Scenario #2 - dependency uses unspecified type 

    <dependency>
      <groupId>org.jboss.osgi</groupId>
      <artifactId>jboss-osgi-common</artifactId>
      <version>${version}</version>
    </dependency>

'mvn package' fails if the artefact is not yet in the local repository
'mvn install' succeeds

Scenario #3 - the dependent bundle is not part of the reactor build

'mvn package' or 'mvn install' will always fail when the dependency is declared with type=bundle

Fazit:

If you declare the dependency with type=bundle, the dependency cannot be resolved from the repository.
If you don't declare a dependency type, the dependency can only be resolved from the repository. 'mvn package' will fail if the dependency is not in the repository.

Workaround:

Don't use type=bundle in the dependency and always install. i.e. 'mvn install'







",Maven-2.1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-15 08:58:42.587,,,no_permission,,,,,,,,,,,57951,,,Fri Jun 24 13:28:37 UTC 2011,,,,,,0|i1aqqn:,270798,,,,,,,,15/Apr/09 08:36;tdiesler;Not sure if this is actually a general mvn issue,"15/Apr/09 08:58;mcculls;I really think this needs to be raised with the Maven team, because the maven-bundle-plugin doesn't directly participate in the Maven resolution process. Instead Maven reads the components.xml document from the maven-bundle-plugin to identify the packaging type, update the lifecycle, etc. - that's really the only input we have on dependency resolution in the reactor.

The components.xml document in the maven-bundle-plugin was written based on the published Maven documentation and AFAIK there is nothing wrong with it. So technically there is nothing we can really do from here, the resolution you mention in your issue happens before any of our code gets run.

If there is a problem with our components.xml I'd be happy to change it, but again I can't see any such issue based on the docs. BTW, have you enabled the bundle lifecycle in your plugin descriptor?

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.0.0</version>
        <extensions>true</extensions>    <!-- this tells Maven to read our components.xml -->
      </plugin>

because without <extensions>true</extensions> you will have problems.

Also there have been several related issues regarding custom (ie. non-core) packaging types:

   http://jira.codehaus.org/browse/MNG-2140
   http://jira.codehaus.org/browse/MNG-2426
   (and several more, but they should be fixed)

furthermore I tend to use ""mvn install"" rather than rely on ""mvn package"" in the reactor, because of:

   http://jira.codehaus.org/browse/MNG-2720

but it looks like this was fixed in 2.1.0","02/Jul/09 16:45;mcculls;Look into tweaking the generated artifact type to see if this makes any difference - we have to be careful not to break existing builds though.
If there's no safe/compatible fix then I'll close this as WONTFIX because the safest workaround is to use ""mvn install"" or ""mvn clean install"".","02/Sep/09 16:45;mcculls;Need more time to investigate potential ramifications, so bumping to after 2.0.1 maintenance release.","24/Jun/11 13:28;mcculls;I tweaked the lifecycle/handler metadata in r1139301, but things also seem to be behaving better with Maven3 when using package vs. install and bundle vs. jar.",,,,,,,,,,,,,,,,,,,,,,
"Rename scr.property attribute ""refValues"" to ""valueRefs""",FELIX-1038,12422758,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,14/Apr/09 07:25,14/Apr/09 08:46,14/Mar/19 02:47,14/Apr/09 08:46,maven-scr-plugin-1.0.10,,,,,,,,,,maven-scr-plugin-1.2.0,,,,SCR Tooling,,,,,,,0,,,,,,"The @scr.property tag for the Maven SCR Plugin can name initial values for the property in four ways:

  a single value, using the ""value"" attribute
  mutliple values, using attributes prefixes with ""values.""
  a single reference to a value, using the ""valueRef"" attribute
  multiple references to values, using attributes prefixed with ""refValues.""

Naturally, I would expect the multi-reference value prefix to be ""valueRefs."" instead of ""refValues."", which would be more in line with the direct value specification of ""value"" vs. ""values."".

We might still want to keep support for the ""refValues."" prefix for backwards compatibility. But documentation should be updated to refer to ""valueRef"" and ""valueRefs.""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-14 08:46:11.014,,,no_permission,,,,,,,,,,,57952,,,Tue Apr 14 08:46:11 UTC 2009,,,,,,0|i0vyy7:,184635,,,,,,,,14/Apr/09 08:46;cziegeler;Changed the attribute name to valueRefs and updated the docs.,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstaller spawns multiple watchers for same directory,FELIX-1036,12422635,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,sahoo,sahoo,11/Apr/09 15:58,22/Apr/09 14:20,14/Mar/19 02:47,22/Apr/09 09:27,fileinstall-0.9.2,,,,,,,,,, fileinstall-1.0.0,,,,File Install,,,,,,,0,,,,,,"I am running into a strange issue and I don't know if it has to do with any bad use in my part. I am using fileinstall to monitor two directories. fileinstall is configured using config.properties file to monitor a dir called /space/ss141213/software/felix-1.6.0/bundle. I have a cfg file in modules dir that configures fileinstall to monitor a second dir called /tmp/bundles. During subsequent start of the framework, I see fileinstall spwaning more than one watchers for the second dir as shown in the jstack output below:

""{felix.fileinstall.dir=/space/ss141213/software/felix-1.6.0/bundle, felix.fileinstall.debug=1}"" daemon prio=3 tid=0x0833fc00 nid=0xd waiting on condition [0xcbaea000..0xcbaeaae0]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:122)

""{service.pid=org.apache.felix.fileinstall.bd775a2e-9ed9-41e4-8159-83295f3aaefa, felix.fileinstall.dir=/tmp/bundles, service.factorypid=org.apache.felix.fileinstall, felix.fileinstall.debug=1}"" daemon prio=3 tid=0x083a5800 nid=0x13 waiting on condition [0xcb7ad000..0xcb7adbe0]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:122)

""{service.pid=org.apache.felix.fileinstall.2aac2209-96d0-4dcb-8e33-ac3f6fbf2856, felix.fileinstall.dir=/tmp/bundles, service.factorypid=org.apache.felix.fileinstall, felix.fileinstall.debug=1}"" daemon prio=3 tid=0x08387800 nid=0x12 waiting on condition [0xcb927000..0xcb927a60]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:122)

""{service.pid=org.apache.felix.fileinstall.8997ded4-b1de-46bb-b675-4166734eea73, felix.fileinstall.dir=/tmp/bundles, service.factorypid=org.apache.felix.fileinstall, felix.fileinstall.debug=1}"" daemon prio=3 tid=0x0838a000 nid=0x11 waiting on condition [0xcb979000..0xcb9798e0]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:122)

""{service.pid=org.apache.felix.fileinstall.15c95057-a0f9-4269-b827-44df4fa23f6b, felix.fileinstall.dir=/tmp/bundles, service.factorypid=org.apache.felix.fileinstall, felix.fileinstall.debug=1}"" daemon prio=3 tid=0x0838c800 nid=0x10 waiting on condition [0xcb9cb000..0xcb9cb960]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:122)


The funny thing is the number keeps increasing by one more for every subsequent restart.

I see that as part of initial configuration, fileinstall spwans a directory watcher for modules dir, as this is configured using config.properties. Then that directorywatcher spawns a second one after it discovers the cfg file in modules dir. At the same time, configuration manager also notifies fileinstaller based on what appears to be its cached values.

It is very easy to reproduce. In a standard felix installation, drop fileinstall bundle alonng with configurationmanager bundle into bundle dir. Add it to the auto.start list. Add a cfg file with an entry: felix.fileinstall.dir=/tmp/bundles. Now start Felix. This time you shall see only thread for /tmp/bundles. Restart Felix, now you shall see two threads for that dir. Restart again to see three threads and it continues. If you clean the cache, it goes back to one thread.","Felix 1.6.0, fileinstall 0.9.2, configadmin 1.0.10",,,,,,,,,,,,,,,,,,,16/Apr/09 08:12;fdiotalevi;FELIX-1036.patch;https://issues.apache.org/jira/secure/attachment/12405630/FELIX-1036.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-15 09:23:54.817,,,no_permission,,,,,,,,,,,57954,,,Wed Apr 22 14:20:39 UTC 2009,,,,,,0|i0vyxz:,184634,,,,,,,,"15/Apr/09 09:23;fdiotalevi;Replicated with Felix 1.4.1. I didn't notice it before because I always delete felix cache before starting.

It's quite tricky. FileInstall (a ManagedServiceFactory) is notified twice (or more times ): the first time the configuration contained in the cache is passed, the second the configuration as read in the configuration file.
Trying to work on a patch now.","16/Apr/09 08:12;fdiotalevi;Sahoo, can you give this patch a run? I tried againt you use case and in my application, and it seems to work.

First of all I removed the configuration map and ConfigurationKey object.

Second, every time a property file is detected, I (transparently to the user) add a property ""felix.fileinstall.filename"" with the name of the file as value to the dictionary. In this way the configuration dictionary always contains the filename, and we can just use Configuration Admin service to check if a configuration file has been read and processed.

Finally, when the DirectoryWatcher finds an updated file (or, after Felix startup, simply finds any file) it uses the Configuration Admin service to check if a configuration exist with felix.fileinstall.filename=<filename>
If it already exists, it updates the configuration using the dictionary provided by the configuration file.

The patch assumes that configuration files always ""win"". In other words, at startup, all cached configurations are updated with dictionaries coming from configuration files.
I think it's acceptable, since when you use FileInstall you are not supposed to change the configurations using other tools like WebConsole.","16/Apr/09 14:11;sahoo;Filippo,

I tried the patch. It works as I see only one watcher per every watched directory, but for some reason, I see configuration values getting printed twice for the second directory as shown below:

felix.fileinstall.poll  (ms)   5000
felix.fileinstall.dir            /space/ss141213/WS/gf/v3.trunk.new/publish/glassfish/modules
felix.fileinstall.debug          1
felix.fileinstall.bundles.new.start          false
felix.fileinstall.poll  (ms)   5000
felix.fileinstall.dir            /space/ss141213/WS/gf/v3.trunk.new/publish/glassfish/domains/domain1/autodeploy-modules
felix.fileinstall.debug          1
felix.fileinstall.bundles.new.start          true
Updating configuration from org.apache.felix.fileinstall-autodeploy-modules.cfg
felix.fileinstall.poll  (ms)   5000
felix.fileinstall.dir            /space/ss141213/WS/gf/v3.trunk.new/publish/glassfish/domains/domain1/autodeploy-modules
felix.fileinstall.debug          1
felix.fileinstall.bundles.new.start          true

Pl. also note that, it does not always happen. So, I think there is some timing issue here.","16/Apr/09 15:15;sahoo;Looks like I missed the line ""Updating configuration from org.apache.felix.fileinstall-autodeploy-modules.cfg."" So the second output is expected. So, the patch works for me. 
",22/Apr/09 09:27;clement.escoffier;I committed the patch. Please close the issue if it's ok for you.,22/Apr/09 14:20;sahoo;Issue resolved.,,,,,,,,,,,,,,,,,,,,,
deadlock observed while using fileinstall to monitor multiple directories,FELIX-1035,12422628,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,sahoo,sahoo,11/Apr/09 10:04,30/Apr/09 03:17,14/Mar/19 02:47,23/Apr/09 08:56,framework-1.6.0,,,,,,,,,,framework-1.6.1,,,,Framework,,,,,,,0,,,,,,"I am using fileinstall to monitor two directories. fileinstall is configured using config.properties file to monitor a dir called modules. Then I have a cfg file in modules dir that configures fileinstall to monitor a second dir called autodeploy-modules. During subsequent start of the framework, I see deadlock like this:

Found one Java-level deadlock:
=============================
""{felix.fileinstall.poll=5000, felix.fileinstall.bundles.new.start=false, felix.fileinstall.dir=/space/ss141213/WS/gf/v3.trunk.new/publish/glassfish/modules/, felix.fileinstall.debug=1}"":
  waiting to lock monitor 0x0851dac8 (object 0xa0518300, a java.net.URLClassLoader),
  which is held by ""Configuration Updater""
""Configuration Updater"":
  waiting to lock monitor 0x085202a0 (object 0xa050bd68, a sun.misc.Launcher$ExtClassLoader),
  which is held by ""{felix.fileinstall.poll=5000, felix.fileinstall.bundles.new.start=false, felix.fileinstall.dir=/space/ss141213/WS/gf/v3.trunk.new/publish/glassfish/modules/, felix.fileinstall.debug=1}""

Java stack information for the threads listed above:
===================================================
""{felix.fileinstall.poll=5000, felix.fileinstall.bundles.new.start=false, felix.fileinstall.dir=/space/ss141213/WS/gf/v3.trunk.new/publish/glassfish/modules/, felix.fileinstall.debug=1}"":
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:169)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.class$(URLHandlersStreamHandlerProxy.java:75)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.getStreamHandlerService(URLHandlersStreamHandlerProxy.java:438)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(URLHandlersStreamHandlerProxy.java:297)
        at java.net.URL.<init>(URL.java:596)
        at java.net.URL.<init>(URL.java:464)
        at java.net.URL.<init>(URL.java:413)
        at java.net.JarURLConnection.parseSpecs(JarURLConnection.java:161)
        at java.net.JarURLConnection.<init>(JarURLConnection.java:144)
        at sun.net.www.protocol.jar.JarURLConnection.<init>(JarURLConnection.java:63)
        at sun.net.www.protocol.jar.Handler.openConnection(Handler.java:24)
        at java.net.URL.openConnection(URL.java:945)
        at java.net.URL.openStream(URL.java:1009)
        at java.lang.ClassLoader.getSystemResourceAsStream(ClassLoader.java:1183)
        at java.lang.Class.getResourceAsStream(Class.java:2028)
        at sun.text.normalizer.ICUData.getStream(ICUData.java:43)
        at sun.text.normalizer.ICUData.getRequiredStream(ICUData.java:63)
        at sun.text.normalizer.NormalizerImpl.<init>(NormalizerImpl.java:243)
        at sun.text.normalizer.NormalizerImpl.<clinit>(NormalizerImpl.java:40)
        at sun.text.normalizer.NormalizerBase.decompose(NormalizerBase.java:707)
        at sun.text.normalizer.NormalizerBase$NFKDMode.normalize(NormalizerBase.java:348)
        at sun.text.normalizer.NormalizerBase.normalize(NormalizerBase.java:1592)
        at sun.text.normalizer.NormalizerBase.normalize(NormalizerBase.java:1573)
        at java.text.Normalizer.normalize(Normalizer.java:146)
        at sun.security.x509.AVA.toRFC2253CanonicalString(AVA.java:986)
        at sun.security.x509.RDN.toRFC2253StringInternal(RDN.java:430)
        at sun.security.x509.RDN.toRFC2253String(RDN.java:409)
        at sun.security.x509.X500Name.getRFC2253CanonicalName(X500Name.java:714)
        at sun.security.x509.X500Name.equals(X500Name.java:400)
        at sun.security.pkcs.PKCS7.getCertificate(PKCS7.java:609)
        at sun.security.pkcs.SignerInfo.getCertificate(SignerInfo.java:202)
        at sun.security.pkcs.SignerInfo.verify(SignerInfo.java:328)
        at sun.security.pkcs.PKCS7.verify(PKCS7.java:494)
        at sun.security.pkcs.PKCS7.verify(PKCS7.java:511)
        at sun.security.util.SignatureFileVerifier.processImpl(SignatureFileVerifier.java:199)
        at sun.security.util.SignatureFileVerifier.process(SignatureFileVerifier.java:176)
        at java.util.jar.JarVerifier.processEntry(JarVerifier.java:277)
        at java.util.jar.JarVerifier.update(JarVerifier.java:188)
        at java.util.jar.JarFile.initializeVerifier(JarFile.java:321)
        at java.util.jar.JarFile.getInputStream(JarFile.java:386)
        - locked <0xa00f2c60> (a java.util.jar.JarFile)
        at sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:689)
        at sun.misc.Resource.cachedInputStream(Resource.java:59)
        - locked <0xa00f3530> (a sun.misc.URLClassPath$JarLoader$2)
        at sun.misc.Resource.getByteBuffer(Resource.java:154)
        at java.net.URLClassLoader.defineClass(URLClassLoader.java:249)
        at java.net.URLClassLoader.access$000(URLClassLoader.java:56)
        at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
        - locked <0xa050bd68> (a sun.misc.Launcher$ExtClassLoader)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:299)
        - locked <0xa05078d8> (a sun.misc.Launcher$AppClassLoader)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:276)
        - locked <0xa05078d8> (a sun.misc.Launcher$AppClassLoader)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at sun.security.jca.ProviderConfig$3.run(ProviderConfig.java:234)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.security.jca.ProviderConfig.doLoadProvider(ProviderConfig.java:225)
        at sun.security.jca.ProviderConfig.getProvider(ProviderConfig.java:205)
        - locked <0xa05078d8> (a sun.misc.Launcher$AppClassLoader)
        at sun.security.jca.ProviderList.getProvider(ProviderList.java:215)
        at sun.security.jca.ProviderList$3.get(ProviderList.java:130)
        at sun.security.jca.ProviderList$3.get(ProviderList.java:125)
        at java.util.AbstractList$Itr.next(AbstractList.java:345)
        at java.security.SecureRandom.getPrngAlgorithm(SecureRandom.java:522)
        at java.security.SecureRandom.getDefaultPRNG(SecureRandom.java:165)
        at java.security.SecureRandom.<init>(SecureRandom.java:133)
        at org.apache.felix.cm.impl.ConfigurationManager.createPid(ConfigurationManager.java:787)
        at org.apache.felix.cm.impl.ConfigurationManager.createFactoryConfiguration(ConfigurationManager.java:357)
        at org.apache.felix.cm.impl.ConfigurationAdminImpl.createFactoryConfiguration(ConfigurationAdminImpl.java:85)
        at org.apache.felix.fileinstall.DirectoryWatcher.getConfiguration(DirectoryWatcher.java:294)
        at org.apache.felix.fileinstall.DirectoryWatcher.setConfig(DirectoryWatcher.java:232)
        at org.apache.felix.fileinstall.DirectoryWatcher.doConfigs(DirectoryWatcher.java:162)
        at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:121)
""Configuration Updater"":
        at java.lang.ClassLoader.loadClass(ClassLoader.java:295)
        - waiting to lock <0xa050bd68> (a sun.misc.Launcher$ExtClassLoader)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:299)
        - locked <0xa0518300> (a java.net.URLClassLoader)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:480)
        at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
        at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
        - locked <0xa0a5ef58> (a org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader)
        at org.apache.felix.cm.impl.ConfigurationManager.getPersistenceManagers(ConfigurationManager.java:568)
        at org.apache.felix.cm.impl.ConfigurationManager.getFactory(ConfigurationManager.java:677)
        at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceFactoryUpdate.run(ConfigurationManager.java:1014)
        at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:88)

Found 1 deadlock.

I tried to reproduce the issue using a simple program, but I could not. But, I am able to reproduce the issue in my environment, where I use GlassFish application server which runs on Felix and uses fileinstall.

I understand this deadlock has to do with ""deadlock observed in Sun JVM during parallel classloading,"" given that the threads involved are Felix threads, can we put any workaround in exercised code path to avoid this deadlock?","Solaris 10/x86
java version ""1.6.0_07""
Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
Java HotSpot(TM) Client VM (build 10.0-b23, mixed mode, sharing)
fileinstall version #0.9.2
felix version #1.6.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-11 10:27:21.695,,,no_permission,,,,,,,,,,,57955,,,Thu Apr 30 03:17:00 UTC 2009,,,,,,0|i0w10f:,184969,,,,,,,,"11/Apr/09 10:27;karlpauls;I just commited a quick fix. Could you try with the current trunk and see whether that makes a difference? If not, I will have to investigate it more deeply.","11/Apr/09 15:09;sahoo;Karl,

thanks for the quick turn aroud. After applying your fix, I tried reproducing the original issue. Although I could not get the original deadlock, I sometimes get a different deadlock as shown below:

Found one Java-level deadlock:
=============================
""{felix.fileinstall.poll=5000, felix.fileinstall.bundles.new.start=false, felix.fileinstall.dir=/space/ss141213/WS/gf/v3.trunk.new/publish/glassfish/modules/, felix.fileinstall.debug=1}"":
  waiting to lock monitor 0x080e8160 (object 0xa0517128, a java.net.URLClassLoader),
  which is held by ""FelixStartLevel""
""FelixStartLevel"":
  waiting to lock monitor 0x08524dfc (object 0xa050bca0, a sun.misc.Launcher$ExtClassLoader),
  which is held by ""{felix.fileinstall.poll=5000, felix.fileinstall.bundles.new.start=false, felix.fileinstall.dir=/space/ss141213/WS/gf/v3.trunk.new/publish/glassfish/modules/, felix.fileinstall.debug=1}""

Java stack information for the threads listed above:
===================================================
""{felix.fileinstall.poll=5000, felix.fileinstall.bundles.new.start=false, felix.fileinstall.dir=/space/ss141213/WS/gf/v3.trunk.new/publish/glassfish/modules/, felix.fileinstall.debug=1}"":
        at java.lang.ClassLoader.loadClass(ClassLoader.java:295)
        - waiting to lock <0xa0517128> (a java.net.URLClassLoader)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.getStreamHandlerService(URLHandlersStreamHandlerProxy.java:438)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(URLHandlersStreamHandlerProxy.java:297)
        at java.net.URL.<init>(URL.java:596)
        at java.net.URL.<init>(URL.java:464)
        at java.net.URL.<init>(URL.java:413)
        at java.net.JarURLConnection.parseSpecs(JarURLConnection.java:161)
        at java.net.JarURLConnection.<init>(JarURLConnection.java:144)
        at sun.net.www.protocol.jar.JarURLConnection.<init>(JarURLConnection.java:63)
        at sun.net.www.protocol.jar.Handler.openConnection(Handler.java:24)
        at java.net.URL.openConnection(URL.java:945)
        at java.net.URL.openStream(URL.java:1009)
        at java.lang.ClassLoader.getSystemResourceAsStream(ClassLoader.java:1183)
        at java.lang.Class.getResourceAsStream(Class.java:2028)
        at sun.text.normalizer.ICUData.getStream(ICUData.java:43)
        at sun.text.normalizer.ICUData.getRequiredStream(ICUData.java:63)
        at sun.text.normalizer.NormalizerImpl.<init>(NormalizerImpl.java:243)
        at sun.text.normalizer.NormalizerImpl.<clinit>(NormalizerImpl.java:40)
        at sun.text.normalizer.NormalizerBase.decompose(NormalizerBase.java:707)
        at sun.text.normalizer.NormalizerBase$NFKDMode.normalize(NormalizerBase.java:348)
        at sun.text.normalizer.NormalizerBase.normalize(NormalizerBase.java:1592)
        at sun.text.normalizer.NormalizerBase.normalize(NormalizerBase.java:1573)
        at java.text.Normalizer.normalize(Normalizer.java:146)
        at sun.security.x509.AVA.toRFC2253CanonicalString(AVA.java:986)
        at sun.security.x509.RDN.toRFC2253StringInternal(RDN.java:430)
        at sun.security.x509.RDN.toRFC2253String(RDN.java:409)
        at sun.security.x509.X500Name.getRFC2253CanonicalName(X500Name.java:714)
        at sun.security.x509.X500Name.equals(X500Name.java:400)
        at sun.security.pkcs.PKCS7.getCertificate(PKCS7.java:609)
        at sun.security.pkcs.SignerInfo.getCertificate(SignerInfo.java:202)
        at sun.security.pkcs.SignerInfo.verify(SignerInfo.java:328)
        at sun.security.pkcs.PKCS7.verify(PKCS7.java:494)
        at sun.security.pkcs.PKCS7.verify(PKCS7.java:511)
        at sun.security.util.SignatureFileVerifier.processImpl(SignatureFileVerifier.java:199)
        at sun.security.util.SignatureFileVerifier.process(SignatureFileVerifier.java:176)
        at java.util.jar.JarVerifier.processEntry(JarVerifier.java:277)
        at java.util.jar.JarVerifier.update(JarVerifier.java:188)
        at java.util.jar.JarFile.initializeVerifier(JarFile.java:321)
        at java.util.jar.JarFile.getInputStream(JarFile.java:386)
        - locked <0xa0a50c38> (a java.util.jar.JarFile)
        at sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:689)
        at sun.misc.Resource.cachedInputStream(Resource.java:59)
        - locked <0xa0a50cb0> (a sun.misc.URLClassPath$JarLoader$2)
        at sun.misc.Resource.getByteBuffer(Resource.java:154)
        at java.net.URLClassLoader.defineClass(URLClassLoader.java:249)
        at java.net.URLClassLoader.access$000(URLClassLoader.java:56)
        at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
        - locked <0xa050bca0> (a sun.misc.Launcher$ExtClassLoader)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:299)
        - locked <0xa0507840> (a sun.misc.Launcher$AppClassLoader)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:276)
        - locked <0xa0507840> (a sun.misc.Launcher$AppClassLoader)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at sun.security.jca.ProviderConfig$3.run(ProviderConfig.java:234)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.security.jca.ProviderConfig.doLoadProvider(ProviderConfig.java:225)
        at sun.security.jca.ProviderConfig.getProvider(ProviderConfig.java:205)
        - locked <0xa0507840> (a sun.misc.Launcher$AppClassLoader)
        at sun.security.jca.ProviderList.getProvider(ProviderList.java:215)
        at sun.security.jca.ProviderList$3.get(ProviderList.java:130)
        at sun.security.jca.ProviderList$3.get(ProviderList.java:125)
        at java.util.AbstractList$Itr.next(AbstractList.java:345)
        at java.security.SecureRandom.getPrngAlgorithm(SecureRandom.java:522)
        at java.security.SecureRandom.getDefaultPRNG(SecureRandom.java:165)
        at java.security.SecureRandom.<init>(SecureRandom.java:133)
        at org.apache.felix.cm.impl.ConfigurationManager.createPid(ConfigurationManager.java:787)
        at org.apache.felix.cm.impl.ConfigurationManager.createFactoryConfiguration(ConfigurationManager.java:357)
        at org.apache.felix.cm.impl.ConfigurationAdminImpl.createFactoryConfiguration(ConfigurationAdminImpl.java:85)
        at org.apache.felix.fileinstall.DirectoryWatcher.getConfiguration(DirectoryWatcher.java:294)
        at org.apache.felix.fileinstall.DirectoryWatcher.setConfig(DirectoryWatcher.java:232)
        at org.apache.felix.fileinstall.DirectoryWatcher.doConfigs(DirectoryWatcher.java:162)
        at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:121)
""FelixStartLevel"":
        at java.lang.ClassLoader.loadClass(ClassLoader.java:295)
        - waiting to lock <0xa050bca0> (a sun.misc.Launcher$ExtClassLoader)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:299)
        - locked <0xa0517128> (a java.net.URLClassLoader)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:480)
        at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
        at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
        - locked <0xa0a7a080> (a org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader)
        at java.lang.Class.getDeclaredConstructors0(Native Method)
        at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)
        at java.lang.Class.getConstructor0(Class.java:2699)
        at java.lang.Class.newInstance0(Class.java:326)
        at java.lang.Class.newInstance(Class.java:308)
        at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3341)
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1453)
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:774)
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:755)
        at org.jvnet.hk2.osgimain.Main.start(Main.java:104)
        at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1458)
        at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:984)
        at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
        at java.lang.Thread.run(Thread.java:619)

Found 1 deadlock.

What is this SecureRandom thing? Is it really needed?

Sahoo","15/Apr/09 09:47;karlpauls;Thanks for providing the update. I'm looking into it. 

The reason is that we still try to load classes inside the urlhandlers which in this case happens while we are inside a classload already because the classloader uses urls to load the bytes of the class. I know how to fix it but it is more difficult then it looks mainly because the URLHandlers are a mine field already and I have to be very careful not to make it break in other ways. I'll come back to this issue soon. ",17/Apr/09 12:41;karlpauls;Ok. I did commit another attempt at fixing this issue. Could you update to trunk and see whether it makes any difference? ,"23/Apr/09 08:56;rickhall;Marking as resolved, since we haven't heard otherwise. Please close if you get a chance.","30/Apr/09 03:17;sahoo;It took some time to test, but the fix seems to have fixed the deadlock. So, I am closing this issue.",,,,,,,,,,,,,,,,,,,,,
iPojo whiteboard pattern handler link broken,FELIX-1031,12422319,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,stevelindsay,stevelindsay,08/Apr/09 01:31,15/Apr/09 13:26,14/Mar/19 02:47,15/Apr/09 13:26,iPOJO-1.2.0,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"The link on the felix website to the whiteboard pattern ipojo handler is broken.

The website has the following link which 404s:
http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.white.board.pattern/1.2.0/org.apache.felix.ipojo.handler.white.board.pattern-1.2.0.jar

I think the link should be something like:
http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.whiteboard/1.2.0/org.apache.felix.ipojo.handler.whiteboard-1.2.0.jar

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-15 13:26:13.052,,,no_permission,,,,,,,,,,,57959,,,Wed Apr 15 13:26:13 UTC 2009,,,,,,0|i1aqr3:,270800,,,,,,,,"15/Apr/09 13:26;clement.escoffier;Fixed,

I will be updated during the next synchronization,

Thanks,

Clement",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in configuration view when running webconsole with Equinox,FELIX-1028,12422222,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,psoreide,psoreide,07/Apr/09 10:46,09/May/09 16:39,14/Mar/19 02:47,07/Apr/09 15:24,framework-1.4.1,webconsole-1.2.8,,,,,,,,,framework-1.6.1,webconsole-1.2.10,,,Framework,Web Console,,,,,,0,,,,,,"When using webconsole with Equinox, a NullPointerException is correctly thrown from BundleContext.createFilter(String filter) when filer is null (core spec 4.1 - 6.1.6.5). Felix throws an InvalidSyntaxException when filter is null.
This causes an uncaught NullPointerException in the call to createFilter in org.apache.felix.webconsole.internal.compendium.ConfigManager. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-07 15:24:40.962,,,no_permission,,,,,,,,,,,57962,,,Wed Apr 08 10:25:02 UTC 2009,,,,,,0|i0w0tb:,184937,,,,,,,,"07/Apr/09 15:24;cziegeler;Hi, I've added an extra null check in Revision 762816. Could you please test if this works for you and then close the bug?
Thanks!",08/Apr/09 10:25;psoreide;This works fine now! Thanks for the quick response!,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO Extender Handler hold a lock during its initialization,FELIX-1025,12422069,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,05/Apr/09 13:59,29/Jul/09 08:03,14/Mar/19 02:47,05/Apr/09 14:03,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"iPOJO Extender handler holds a lock during its initialization. So, if bundles are already there during the tracking initialization, the callback method are called with a lock. this can lead to deadlocks.",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57965,,,Wed Jul 29 08:03:01 UTC 2009,,,,,,0|i0vyxj:,184632,,,,,,,,"05/Apr/09 14:03;clement.escoffier;Fixed at revision 762084.
Extender callbacks are called without holding the lock anymore. This avoid potential deadlocks.",29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO imposes to get an empty constructor if another constructor exists,FELIX-1024,12421999,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,03/Apr/09 18:11,29/Jul/09 08:03,14/Mar/19 02:47,05/Apr/09 14:06,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"If a component contains a constructor with arguments (others as the bundle context), iPOJO asks for an empty constructor to create the pojo object.
This constructor can be introduced automatically during the manipulation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57966,,,Wed Jul 29 08:03:01 UTC 2009,,,,,,0|i1415b:,231648,,,,,,,,"05/Apr/09 14:06;clement.escoffier;Fixed at revision 762084.
iPOJO does no more requires a ""suitable"" constructor. If (and only if) none found, one is injected:
public ClassName(InstanceManager im) {
    super();
    _setInstanceManager(im);
    // Return
}",29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,,,,,
Category Information not exported to obr file,FELIX-1023,12421951,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,kkoehler,kkoehler,03/Apr/09 09:25,24/Jun/11 12:36,14/Mar/19 02:47,02/Sep/09 16:36,,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Hi

if your define a '<Bundle-Category>' element in your pom, the information is written to the MANIFEST.MF file of your bundle but will not be exported to the repository.xml file. The file onyl contains the groupId of the project.

Example:
--- 8< ---
<Bundle-Category>Test-Cat, Hoppla</Bundle-Category>
--- 8< ---

results in

--- 8< ---
<category id=""mygroupId""/>
--- 8< ---

but not in

--- 8< ---
<category id=""Test-Cat""/>
<category id=""Hoppla""/>
<category id=""mygroupId""/>
--- 8< ---

Kristian
",,,,,,,,,,,,,,,,,,,,03/Apr/09 09:26;kkoehler;missing_categories.txt;https://issues.apache.org/jira/secure/attachment/12404517/missing_categories.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-02 16:46:52.983,,,no_permission,,,,,,,,,,,57967,,,Wed Sep 02 16:36:24 UTC 2009,,,,,,0|i0vy7r:,184516,,,,,,,,03/Apr/09 09:26;kkoehler;the patch for this issue,02/Jul/09 16:46;mcculls;Apply patch during forthcoming maintenance release (2.0.1),02/Sep/09 16:36;mcculls;Applied slightly modified patch in r810596.,,,,,,,,,,,,,,,,,,,,,,,,
Classifier always used even if not explicitly set in the configuration,FELIX-1021,12421758,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,gdurand,gdurand,01/Apr/09 11:09,24/Jun/11 12:36,14/Mar/19 02:47,02/Sep/09 16:43,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"If I build a bundle specifying a classifier in the command line, this classifier is used even if I did not explicitly used the classifier property in the bundle configuration. This is not consistent with the jar plugin for instance, which requires the classifier property to be set in the plugin configuration in order to really use the classifier.

This behaviour is very problematic for by builds because I use parent projets to build several child projects, some of which needing a classifier (typically bundles containing native code). With the current behaviour, if I build the parent project with classifier linux-x86, all the bundles (even pure java bundles) will be classified. This is not wanted.

With previous versions of maven I could set a classifier property in the pom file to null when I did not want the classifier for a particular bundle, but now this workaround no longer works.

To fix the problem replace in BundlePlugin.java:

* @parameter expression=""${classifier}""
*/
protected String classifier;

with 

* @parameter
*/
protected String classifier;",Maven 2.1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-02 16:48:19.829,,,no_permission,,,,,,,,,,,57969,,,Wed Sep 02 16:43:14 UTC 2009,,,,,,0|i1aqrj:,270802,,,,,,,,02/Jul/09 16:48;mcculls;Schedule for the next maintenance release (2.0.1) but also need to confirm this won't break any existing builds,02/Sep/09 16:43;mcculls;Fixed in r810600.,,,,,,,,,,,,,,,,,,,,,,,,,
Footer redered before content in bundle plugin,FELIX-1020,12421743,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,tdiesler,tdiesler,01/Apr/09 07:09,11/Dec/09 09:29,14/Mar/19 02:47,11/Dec/09 09:29,webconsole-1.2.8,,,,,,,,,,webconsole-2.0.0,,,,Web Console,,,,,,,0,,,,,,"The BundlesServlet incorrectly renders the content like this

        pw.println( ""<div id='plugin_content'/>"");
        Util.startScript( pw );
        pw.print( ""renderBundles("");
        writeJSON(pw, reqInfo.bundle);
        pw.println("");"" );
        Util.endScript( pw );

It should however be 

        pw.println( ""<div id='plugin_content'>"");
        Util.startScript( pw );
        pw.print( ""renderBundles("");
        writeJSON(pw, reqInfo.bundle);
        pw.println("");"" );
        Util.endScript( pw );
        pw.println( ""</div"");

The <script> tag should be enclosed in the <div>

The effect of the bug is that the footer appears before the content 
",,,,,,,,,,,,,,,,,,,,06/Jul/09 08:39;tdiesler;Screenshot-LogService.png;https://issues.apache.org/jira/secure/attachment/12412590/Screenshot-LogService.png,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-01 09:56:48.585,,,no_permission,,,,,,,,,,,57970,,,Fri Dec 11 09:29:19 UTC 2009,,,,,,0|i0vzdr:,184705,,,,,,,,01/Apr/09 07:22;tdiesler;Same is true for EventAdmin,01/Apr/09 09:56;cziegeler;The div is used later on for the dynamic content. That's why the script is actually outside of the div. Can you attach a screen shot which shows the problems?,"27/Apr/09 20:47;cziegeler;Hi Thomas,

I can't reproduce this problem. Can you give more information? Otherwise I'll close the bug.","06/Jul/09 08:39;tdiesler;I attached a screen shot that shows that shows how the footer is rendered at the top of the page instead of the bottom

public class LogServicePlugin extends LogServlet
{
   private static final long serialVersionUID = 1L;

   @Override
   protected String getHeader()
   {
      return PluginHelper.getHeader();
   }

   @Override
   protected void endResponse(HttpServletRequest request, PrintWriter pw)
   {
      String appRoot = (String)request.getAttribute(OsgiManager.ATTR_APP_ROOT);
      String footer = MessageFormat.format(PluginHelper.getFooter(), new Object[]{ appRoot });
      pw.println(footer);
   }
}","06/Jul/09 08:41;tdiesler;Please also note, that I had to modify endResponse(PrintWriter) to take the additional req parameter for attr access","20/Jul/09 20:01;cziegeler;I just fixed one potential problem, the main div has never been closed.
But I'm not sure that this is your problem. I'm wondering what the PluginHelper class which you're refering to in your example is doing? Where does it come from?","10/Sep/09 08:02;fmeschbe;Thomas, can you please check with the latest SNAPSHOT whether this issue still exists ?

You may use top-of-trunk or grab SNAPSHOT version 1.2.11-20090910.080257-2.

Thanks.",11/Dec/09 09:29;cziegeler;The fix has been released with the web console 2.0.0 - therefore I'm now closing this bug.,,,,,,,,,,,,,,,,,,,
"New shell commands ""requirers"" and ""exports"" do not handle invalid bundle case properly",FELIX-1019,12421741,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,01/Apr/09 06:58,11/May/09 15:26,14/Mar/19 02:47,23/Apr/09 08:40,shell-1.2.0,,,,,,,,,,shell-1.4.0,,,,Shell,,,,,,,0,,,,,,"When you specify a non-existing bundle ID for either ""exports"" or ""requirers"" it results in erroneous handling. Both cases should just output an invalid bundle ID message, like the other commands.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57971,,,Thu Apr 23 08:40:06 UTC 2009,,,,,,0|i1aqrr:,270803,,,,,,,,23/Apr/09 08:40;rickhall;Committed a patch.,,,,,,,,,,,,,,,,,,,,,,,,,,
Generic types ignored when generating MANIFEST.MF,FELIX-1017,12421664,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,clovis_at,clovis_at,31/Mar/09 13:05,24/Jun/11 12:36,14/Mar/19 02:47,02/Sep/09 16:05,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Generic information present in the bytecode is not considered when MANIFEST.MF is generated. In the following example, the package ""a"" is not included in the Import-Package list, which causes an Exception at runtime (TypeNotPresentException)

package b;

import java.lang.reflect.*;
import a.A;

public class B {
    java.util.List<A> list;

    public static void main(String[] args) {
       for(Field f : B.class.getDeclaredFields()) {
           ParameterizedType type = (ParameterizedType)f.getGenericType();
           for(Type t : type.getActualTypeArguments()) {
               System.out.println(t); // <--- java.lang.TypeNotPresentException: Type a.A not present
           }
       }
    }
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-02 16:52:03.693,,,no_permission,,,,,,,,,,,57973,,,Tue Mar 29 09:19:35 UTC 2011,,,,,,0|i1aqs7:,270805,,,,,,,,"02/Jul/09 16:52;mcculls;Investigate during the next maintenance release - if the type is in the bytecode then the Bnd Tool should find it.
If the type does not exist in the bytecode (ie. due to type erasure) then need to find out why the exception occurs
as the class should only use the types mentioned in the bytecode.

If this requires a change to the Bnd Tool then we may need to push this out to the next feature release (2.1.0)",02/Sep/09 16:05;mcculls;Fixed by upgrade to 0.0.357 (r810525),"28/Mar/11 14:37;chrst;Hi Stuart,

what exactly did you fix with last upgrade 0.0.357?

We have a similar issue and I'd like to hear your opinion. 
Shortened scenario:
Project with a service-api-module with pom that tells felix to create a MANIFEST.MF because we also use it in an Eclipse / equinox environment.
Felix omits import-package for a certain class 'Type' because no bytecode usage - (generic<Type>) erased.
Client fails to start because (a little bit complicated): Spring Bean creation there checks via org.aspectj.weaver.reflect... the generic type that it thinks it needs 'Type'.

My questions are: 
Is this fixed with your upgrade?
Is this more a bug of Spring checking too much?
We currently use a work-around declaring ""Import-Package: Type"" directly which is a little bit unsatisfactory since it could happen again any time and this 'bug' was hard to find.

Best regards,
Chris",29/Mar/11 09:19;chrst;using Felix 2.3.4 now solved our problem,,,,,,,,,,,,,,,,,,,,,,,
OBR search doesn't take 'categories' into account,FELIX-1007,12419634,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,kkoehler,kkoehler,27/Mar/09 10:27,01/Apr/10 11:48,14/Mar/19 02:47,22/Feb/10 19:51,,,,,,,,,,,bundlerepository-1.6.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Hi

the RFC-0112 Bundle Repository document says: ""The <category> element defines a category. The purpose is to easy the discovery."" and the description of the method org.osgi.servicex.obr. RepositoryAdmin#discoverResources says ""The attributes that can be checked are: [...] category"" but filtering resources with a given category doesn't work. The following filter is ""meaningless"": ""(category:*>sampleCategory)""

Kristian

",,,,,,,,,,,,,,,,,,,,27/Mar/09 10:29;kkoehler;categoriesQueryPatch_2009_03_27.txt;https://issues.apache.org/jira/secure/attachment/12403795/categoriesQueryPatch_2009_03_27.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-27 19:11:47.657,,,no_permission,,,,,,,,,,,57983,,,Mon Feb 22 19:51:46 UTC 2010,,,,,,0|i0vzlb:,184739,,,,,,,,27/Mar/09 10:29;kkoehler;This patch fixes this issue. I also have test cases for this but they depend on the new FilterImpl which is not committed yet (https://issues.apache.org/jira/browse/FELIX-973). ,"27/Mar/09 19:11;rickhall;I am not sure what you mean that filtering resources with a given category doesn't work.

OBR expects the category to be multi-valued. So, the property is an array of Strings. You should be able to do filter with an array value, just specify the value you want and if it is in the array, then it will match.

I don't think we want to take the multi-valued category property and turn it into a single comma-delimited string value.

I guess I am confused, since this set operator should be working on the array...assuming you are using the patched FilterImpl that supports set operators.","30/Mar/09 06:19;kkoehler;Ok. Now we are both confused ;-) Sorry.

I tried to find resources within the BundleRepository with a specific category value calling the RepositoryAdmin#discoverResources Method. This method takes a filter String. within this method all resources of the OBR are checked via the Filter#match Method of the Filter Implementation. This is done via a Dictionary Object which is passed to the method. This dictionary is filled with 

--- 8< ---
Map properties = resources[resIdx].getProperties();
dict.setSourceMap(properties);
--- 8< ---

... and these properties, if i'm right, don't include the category value.

So my attempt to call RepositoryAdmin#discoverResources(""(category:*>sampleCategory)"") 'fails'.

Are I'm doing something wrong here? Is there a better way to do this?

Kristian","03/Apr/09 08:01;rickhall;Ok, I think I see your (and my) confusion.

Yes, you are correct, the categories are not included in the properties; however, it probably should be. This could probably be added to the properties as it is set in ResourceImpl.addCategory(). It might actually be the case that we don't need to put them into the category array list at all and we can just aggregate them into an array in the properties map.

I think this was just something that was never really completed.","22/Feb/10 19:51;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/ResourceImpl.java
	A	bundlerepository/src/test/java/org/apache/felix/bundlerepository/RepositoryAdminTest.java
	M	org.osgi.service.obr/src/main/java/org/osgi/service/obr/Resource.java
Committed r915039
",,,,,,,,,,,,,,,,,,,,,,
Strange list of imported packages returned by the package admin,FELIX-1005,12419580,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,26/Mar/09 22:37,27/Mar/09 10:47,14/Mar/19 02:47,27/Mar/09 07:26,framework-1.6.0,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"When asking to imported package, the package admin returns a huge list containing all the package exported by the system bundle. This issue has appeared in the current developed version. 
I get the issue inside the web console but it just relies on the package admin. 
So, to reproduce it just look at packages imported by any bundles (maybe except the system bundle?).

Here is the list I get for a bundle importing nothing:
javax.accessibility,version=1.5.0 from org.apache.felix.framework (0)
javax.activity,version=1.5.0 from org.apache.felix.framework (0)
javax.crypto,version=1.5.0 from org.apache.felix.framework (0)
javax.crypto.interfaces,version=1.5.0 from org.apache.felix.framework (0)
javax.crypto.spec,version=1.5.0 from org.apache.felix.framework (0)
javax.imageio,version=1.5.0 from org.apache.felix.framework (0)
javax.imageio.event,version=1.5.0 from org.apache.felix.framework (0)
javax.imageio.metadata,version=1.5.0 from org.apache.felix.framework (0)
javax.imageio.plugins.bmp,version=1.5.0 from org.apache.felix.framework (0)
javax.imageio.plugins.jpeg,version=1.5.0 from org.apache.felix.framework (0)
javax.imageio.spi,version=1.5.0 from org.apache.felix.framework (0)
javax.imageio.stream,version=1.5.0 from org.apache.felix.framework (0)
javax.management,version=1.5.0 from org.apache.felix.framework (0)
javax.management.loading,version=1.5.0 from org.apache.felix.framework (0)
javax.management.modelmbean,version=1.5.0 from org.apache.felix.framework (0)
javax.management.monitor,version=1.5.0 from org.apache.felix.framework (0)
javax.management.openmbean,version=1.5.0 from org.apache.felix.framework (0)
javax.management.relation,version=1.5.0 from org.apache.felix.framework (0)
javax.management.remote,version=1.5.0 from org.apache.felix.framework (0)
javax.management.remote.rmi,version=1.5.0 from org.apache.felix.framework (0)
javax.management.timer,version=1.5.0 from org.apache.felix.framework (0)
javax.naming,version=1.5.0 from org.apache.felix.framework (0)
javax.naming.directory,version=1.5.0 from org.apache.felix.framework (0)
javax.naming.event,version=1.5.0 from org.apache.felix.framework (0)
javax.naming.ldap,version=1.5.0 from org.apache.felix.framework (0)
javax.naming.spi,version=1.5.0 from org.apache.felix.framework (0)
javax.net,version=1.5.0 from org.apache.felix.framework (0)
javax.net.ssl,version=1.5.0 from org.apache.felix.framework (0)
javax.print,version=1.5.0 from org.apache.felix.framework (0)
javax.print.attribute,version=1.5.0 from org.apache.felix.framework (0)
javax.print.attribute.standard,version=1.5.0 from org.apache.felix.framework (0)
javax.print.event,version=1.5.0 from org.apache.felix.framework (0)
javax.rmi,version=1.5.0 from org.apache.felix.framework (0)
javax.rmi.CORBA,version=1.5.0 from org.apache.felix.framework (0)
javax.rmi.ssl,version=1.5.0 from org.apache.felix.framework (0)
javax.security.auth,version=1.5.0 from org.apache.felix.framework (0)
javax.security.auth.callback,version=1.5.0 from org.apache.felix.framework (0)
javax.security.auth.kerberos,version=1.5.0 from org.apache.felix.framework (0)
javax.security.auth.login,version=1.5.0 from org.apache.felix.framework (0)
javax.security.auth.spi,version=1.5.0 from org.apache.felix.framework (0)
javax.security.auth.x500,version=1.5.0 from org.apache.felix.framework (0)
javax.security.cert,version=1.5.0 from org.apache.felix.framework (0)
javax.security.sasl,version=1.5.0 from org.apache.felix.framework (0)
javax.sound.midi,version=1.5.0 from org.apache.felix.framework (0)
javax.sound.midi.spi,version=1.5.0 from org.apache.felix.framework (0)
javax.sound.sampled,version=1.5.0 from org.apache.felix.framework (0)
javax.sound.sampled.spi,version=1.5.0 from org.apache.felix.framework (0)
javax.sql,version=1.5.0 from org.apache.felix.framework (0)
javax.sql.rowset,version=1.5.0 from org.apache.felix.framework (0)
javax.sql.rowset.serial,version=1.5.0 from org.apache.felix.framework (0)
javax.sql.rowset.spi,version=1.5.0 from org.apache.felix.framework (0)
javax.swing,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.border,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.colorchooser,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.event,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.filechooser,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.plaf,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.plaf.basic,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.plaf.metal,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.plaf.multi,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.plaf.synth,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.table,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.text,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.text.html,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.text.html.parser,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.text.rtf,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.tree,version=1.5.0 from org.apache.felix.framework (0)
javax.swing.undo,version=1.5.0 from org.apache.felix.framework (0)
javax.transaction,version=1.5.0 from org.apache.felix.framework (0)
javax.transaction.xa,version=1.5.0 from org.apache.felix.framework (0)
javax.xml,version=1.5.0 from org.apache.felix.framework (0)
javax.xml.datatype,version=1.5.0 from org.apache.felix.framework (0)
javax.xml.namespace,version=1.5.0 from org.apache.felix.framework (0)
javax.xml.parsers,version=1.5.0 from org.apache.felix.framework (0)
javax.xml.transform,version=1.5.0 from org.apache.felix.framework (0)
javax.xml.transform.dom,version=1.5.0 from org.apache.felix.framework (0)
javax.xml.transform.sax,version=1.5.0 from org.apache.felix.framework (0)
javax.xml.transform.stream,version=1.5.0 from org.apache.felix.framework (0)
javax.xml.validation,version=1.5.0 from org.apache.felix.framework (0)
javax.xml.xpath,version=1.5.0 from org.apache.felix.framework (0)
org.apache.felix.fileinstall,version=0.0.0 from org.apache.felix.fileinstall (3)
org.ietf.jgss,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CORBA,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CORBA.DynAnyPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CORBA.ORBPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CORBA.TypeCodePackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CORBA.portable,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CORBA_2_3,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CORBA_2_3.portable,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CosNaming,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CosNaming.NamingContextExtPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.CosNaming.NamingContextPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.Dynamic,version=1.5.0 from org.apache.felix.framework (0)
org.omg.DynamicAny,version=1.5.0 from org.apache.felix.framework (0)
org.omg.DynamicAny.DynAnyFactoryPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.DynamicAny.DynAnyPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.IOP,version=1.5.0 from org.apache.felix.framework (0)
org.omg.IOP.CodecFactoryPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.IOP.CodecPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.Messaging,version=1.5.0 from org.apache.felix.framework (0)
org.omg.PortableInterceptor,version=1.5.0 from org.apache.felix.framework (0)
org.omg.PortableInterceptor.ORBInitInfoPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.PortableServer,version=1.5.0 from org.apache.felix.framework (0)
org.omg.PortableServer.CurrentPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.PortableServer.POAManagerPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.PortableServer.POAPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.PortableServer.ServantLocatorPackage,version=1.5.0 from org.apache.felix.framework (0)
org.omg.PortableServer.portable,version=1.5.0 from org.apache.felix.framework (0)
org.omg.SendingContext,version=1.5.0 from org.apache.felix.framework (0)
org.omg.stub.java.rmi,version=1.5.0 from org.apache.felix.framework (0)
org.omg.stub.javax.management.remote.rmi,version=1.5.0 from org.apache.felix.framework (0)
org.osgi.framework,version=1.4.0 from org.apache.felix.framework (0)
org.osgi.framework.hooks.service,version=1.4.0 from org.apache.felix.framework (0)
org.osgi.service.cm,version=1.2.0 from org.apache.felix.fileinstall (3)
org.osgi.service.log,version=1.3.0 from org.apache.felix.fileinstall (3)
org.osgi.service.packageadmin,version=1.2.0 from org.apache.felix.framework (0)
org.osgi.service.startlevel,version=1.1.0 from org.apache.felix.framework (0)
org.osgi.service.url,version=1.0.0 from org.apache.felix.framework (0)
org.osgi.util.tracker,version=1.3.3 from org.apache.felix.framework (0)
org.w3c.dom,version=1.5.0 from org.apache.felix.framework (0)
org.w3c.dom.bootstrap,version=1.5.0 from org.apache.felix.framework (0)
org.w3c.dom.css,version=1.5.0 from org.apache.felix.framework (0)
org.w3c.dom.events,version=1.5.0 from org.apache.felix.framework (0)
org.w3c.dom.html,version=1.5.0 from org.apache.felix.framework (0)
org.w3c.dom.ls,version=1.5.0 from org.apache.felix.framework (0)
org.w3c.dom.ranges,version=1.5.0 from org.apache.felix.framework (0)
org.w3c.dom.stylesheets,version=1.5.0 from org.apache.felix.framework (0)
org.w3c.dom.traversal,version=1.5.0 from org.apache.felix.framework (0)
org.w3c.dom.views,version=1.5.0 from org.apache.felix.framework (0)
org.xml.sax,version=1.5.0 from org.apache.felix.framework (0)
org.xml.sax.ext,version=1.5.0 from org.apache.felix.framework (0)
org.xml.sax.helpers,version=1.5.0 from org.apache.felix.framework (0)",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-26 23:29:34.983,,,no_permission,,,,,,,,,,,57985,,,Fri Mar 27 10:47:46 UTC 2009,,,,,,0|i0w0q7:,184923,,,,,,,,"26/Mar/09 23:29;rickhall;Well, it would probably be good to verify this independently, since PackageAdmin does not have methods to get imported packages for a bundle. Therefore, this information needs to be calculated, so it is possible that the Web Console is calculating it incorrectly. However, I am not trying to pass the buck. ;-)","27/Mar/09 06:24;rickhall;Well, after more investigation, it definitely appears to be a bug in trunk.","27/Mar/09 07:26;rickhall;Fixed this in trunk, please close. Thanks.","27/Mar/09 10:47;clement.escoffier;Works perfectly. 

Thanks !

Clement",,,,,,,,,,,,,,,,,,,,,,,
Saving Apache Felix OSGI Management Console on Safari cause Error 404,FELIX-1003,12419576,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,fdiotalevi,fdiotalevi,26/Mar/09 22:00,11/Jun/09 12:55,14/Mar/19 02:47,11/Jun/09 12:55,webconsole-1.2.2,webconsole-1.2.8,,,,,,,,,webconsole-1.2.10,,,,Web Console,,,,,,,0,,,,,,"1- Click on Configuration Tab
2- Choose Configurations:  Apache Felix OSGI Management Console (... OsgiManager)
3- Click on Configure
4- Click on Save

I get:
HTTP ERROR: 404
NOT_FOUND
RequestURI=/system/console/configMgr/org.apache.felix.webconsole.internal.servlet.OsgiManager

On Firefox the same functionality works well.


","Safari 3.2.1, Mac Os X 10.5.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-01 11:34:15.883,,,no_permission,,,,,,,,,,,57987,,,Thu Jun 11 12:55:48 UTC 2009,,,,,,0|i1aqtb:,270810,,,,,,,,"27/Mar/09 14:39;fdiotalevi;It seems to be a ""natural"" problem.

When an updated configuration is saved, the method OsgiManager.updateConfiguration(..) is called. 

At OsgiManager, line 765 the servlet is unregistered and it's registered with a new configuration shortly after. That's correct and I don't see how it could be improved (I tried to move unbind and binding ""closer"", but with no luck... I guess the re-registration takes some millisec to be effective).

Since the redirect happens while the new servlet registration is not effective yet, the 404 error is returned.

The only workaround I could find is to place a Thread.sleep(200l) (conditioned to the fact that the Console configurations are changed) just before the 
 this.sendRedirect(request, response, redirect);
at ConfigManager, line 115 

Ugly hack. Can anybody suggest a better solution?","01/Apr/09 11:34;cziegeler;We have similar issues at other places like when you start a bundle we have to wait a little bit just to return the started state of the bundle etc.
In all these cases, we do a sleep already :)
Therefore I think your suggestion makes sense, I'll change the code accordingly",11/Jun/09 12:55;cziegeler;The fix has been released with 1.2.10 - therefore closing this bug,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO Static binding policy is not compliant with the Declarative Service static binding policy.,FELIX-1002,12419548,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,26/Mar/09 16:27,29/Jul/09 08:03,14/Mar/19 02:47,26/Mar/09 17:43,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"iPOJO static policy does not stop and start the instance when a static service dependency is broken. The DS specification mentions that the component has to be deactivated, so component instances are lost. ",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,57988,,,Wed Jul 29 08:03:01 UTC 2009,,,,,,0|i0w0vr:,184948,,,,,,,,"26/Mar/09 17:43;clement.escoffier;Static binding policy now stop the entire instance and restart it when the dependency is broken. POJO objects are lost, and service tracking is reinitialized (this means that services may be injected in a different order).",29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,,,,,
Updating an bundle which was installed via OBR fails,FELIX-1000,12419399,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,kkoehler,kkoehler,25/Mar/09 15:16,11/May/09 16:16,14/Mar/19 02:47,28/Apr/09 11:16,bundlerepository-1.4.0,,,,,,,,,,bundlerepository-1.4.1,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Updating an bundle which was installed via the obr functionality results in an exception (update was triggered via the shell):

--- 8< ---
java.net.MalformedURLException: Unknown protocol: obr
	at java.net.URL.<init>(URL.java:601)
	at java.net.URL.<init>(URL.java:464)
	at java.net.URL.<init>(URL.java:413)
	at org.apache.felix.framework.cache.JarRevision.initialize(JarRevision.java:149)
	at org.apache.felix.framework.cache.JarRevision.<init>(JarRevision.java:78)
	at org.apache.felix.framework.cache.JarRevision.<init>(JarRevision.java:56)
	at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(BundleArchive.java:986)
	at org.apache.felix.framework.cache.BundleArchive.revise(BundleArchive.java:614)
	at org.apache.felix.framework.BundleImpl.revise(BundleImpl.java:916)
	at org.apache.felix.framework.Felix.updateBundle(Felix.java:1592)
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:792)
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:779)
	at org.apache.felix.shell.impl.UpdateCommandImpl.execute(UpdateCommandImpl.java:96)
	at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:276)
	at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:167)
	at java.lang.Thread.run(Thread.java:619)
--- 8< ---",,,,,,,,,,,,,,,,,,,,21/Apr/09 10:26;kkoehler;FELIX-1000-21_04_2009.patch.txt;https://issues.apache.org/jira/secure/attachment/12406020/FELIX-1000-21_04_2009.patch.txt,23/Apr/09 14:20;kkoehler;FELIX-1000-23_04_2009.patch.txt;https://issues.apache.org/jira/secure/attachment/12406236/FELIX-1000-23_04_2009.patch.txt,27/Apr/09 20:09;kkoehler;FELIX-1000-27_04_2009.patch.txt;https://issues.apache.org/jira/secure/attachment/12406565/FELIX-1000-27_04_2009.patch.txt,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2009-03-25 21:45:20.063,,,no_permission,,,,,,,,,,,57990,,,Tue May 05 18:07:03 UTC 2009,,,,,,0|i0vyyn:,184637,,,,,,,,"25/Mar/09 21:45;rickhall;This is a known issue. I think there was a JIRA issue on it, but I couldn't find it quickly.

At any rate, one idea we had was to have OBR implement a custom URL stream handler to properly handle this situation in some way.","21/Apr/09 10:26;kkoehler;Hi

this is a patch for this issue.

The patch includes a Simple URLStreamHandler which handles obr urls in the follwoing schema:

obr://<symbolicName>/<timeStamp>/<realUrl>

Example:

obr://org.apache.felix.javax.servlet/1240305961998/http://repo1.maven.org/maven2/org/apache/felix/javax.servlet/1.0.0/javax.servlet-1.0.0.jar

(The obr url is generated within the ResolverImpl.) 

The StreamHandler parses the url and delegates the actual connection creation to the real url handler.

Kristian","21/Apr/09 13:00;rickhall;I don't think such an approach makes sense.

The whole reason why the OBR location string is meaningless is because there cannot be a relationship between what the location is and what is installed there. While perhaps the symbolic name and time stamp portions of the URL make sense in your URL, the ""real URL"" does not. As soon as you update, then it is no longer the real URL, nor would it be the version specified in the real URL. Remember, the location will never change.

That is why we ended up with a location that means nothing. Probably a better approach is to have the URL handler use the location to look up the bundle and just query the metadata about the bundle, e.g., its symbolic name and version. Then use this metadata to determine how to update the bundle from OBR.","22/Apr/09 08:13;kkoehler;Oh ok, the patch doesn't work if you update a bundle with a new location, but I'm not sure if this works with the current implementation without obr... (just tested to clearify the issue)

I tested the following without obr:

* install a bundle from location1 -> gets id ID_X
* move the bundle to location2 in the filesystem
* update bundle ID_X with location2
* update bundle ID_X

-> results in a FileNotFoundException because the bundle is not found at location1. - this should also be location2, or I'm wrong?

Kristian
","23/Apr/09 14:20;kkoehler;ok. This is the updated version as discussed this morning. 
Hope you could apply it (it's out of my local git repo). I could also generate a svn diff if neccessary ;-)

Kristian","26/Apr/09 07:54;rickhall;Yes, this patch looks better. However, I do have a question, what semantic are you trying to achieve here? It is purely to eliminate the exception you receive when updating an OBR installed bundle? If so, then I guess the current patch achieves this. I guess I thought you actually wanted OBR to attempt to update the bundle.

For example, if you update a given OBR-installed bundle, you could actually have OBR check to see if there is a newer version of the bundle in the repo and if so return an input stream to it. If there is no new version, then OBR could just return the same input stream. The current approach always updates to the same version.

What do you and others think?","26/Apr/09 09:21;kkoehler;Hi

two things I'm trying to achive here:
* eliminate the exception
* update the bundle
;-)

In my first scenario I deployed all my bundles through the OBR. I install them using maven in my local repo and the deploy them to Felix using OBR. Normal versions and SNAPSHOT versions. So an update of the same version means different things ;-). SNAPSHOTs are updated, normal versions ""stay"" the same.

Updating to a new (bundle) version may also be problematic, i think. Which version should be updated to? The newest or the next available. A customer has the requirement to update to the next available version and not to the newest. For example: currently version 1.1 is installed. Version 1.2, 1.3 and 2.0 are available from OBR. The customer wants to update to 1.2. 

Not sure if the update should try to use a newer version. If I'm right the none OBR stuff also doesn't try to update to a newer version...

Kristian","26/Apr/09 14:14;rickhall;I think when you want to update a bundle, you would likely want to update to the newest, otherwise you'd likely specify the version you wanted. This is the typical ""check for updates"" type of scenario where you want to update to the newest.

Ultimately, I don't disagree that there are different policies available. I don't think it is typical people want to upgrade to the next available as opposed to the newest, however, I can imagine some people might. One policy definitely doesn't fit all. However, either way we are encoding a specific policy. With your policy in place then updating to the newest version becomes a manual process, with my policy updating to the next available becomes a manual process.

So, the real question is what people think the default policy should be?

As for OBR not trying to update, that is not really true. When Resolver.deploy() is called, it tries to minimize the number of bundles it installs, so if possible it will update an existing bundle to a newer version.","27/Apr/09 20:09;kkoehler;I dont't give up ;-)

Apllied patch includes different strategies for updating bundles. You can configure the strategy to use with the property ""obr.update.strategy"". Currently there are two strategies vailable: same and newest. Default is 'newest'. 

One point is ""open"": I don't know how to update the version information of the installed bundle. If you ""ps"" on the console the old version is printed. Is it possible to update this info?

Kristian","27/Apr/09 20:12;rickhall;Sounds odd. The ""ps"" command just reads the info out of the bundle's manifest, so if the bundle is updated, it should automatically appear in the listing.","28/Apr/09 05:38;kkoehler;OK. This is odd because of my test. 
Works if you use different bundles. ;-) In my testcase I moved the same bundle to different locations and added them to the obr file with different version (not adjusted the files). 
Sorry.

Kristian","28/Apr/09 11:16;rickhall;Ok, I committed the patch. I think your approach, while valid, was a little over engineered, so I tried to simplify it a little. I also removed the use of statics since it isn't a good idea to have variables with a different life cycle than the bundle, especially when those variables use the bundle context.

Please verify that I didn't break anything. If you are satisfied, then please close this bug. Thanks for the patch and your contributions.","05/May/09 18:07;kkoehler;works. Thanks

Kristian",,,,,,,,,,,,,,
The OBR ResolverImpl shouldn't try to start fragment bundles,FELIX-999,12419388,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,kkoehler,kkoehler,25/Mar/09 13:26,27/Mar/09 06:32,14/Mar/19 02:47,26/Mar/09 16:25,framework-1.4.1,,,,,,,,,,bundlerepository-1.4.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"If a fragment bundle is deployed via the OBR ResolverImpl the resolver tries to start this one. This results in an exception:

--- 8< ---
ERROR: Resolver: Start error - XXX
org.osgi.framework.BundleException: Fragment bundles can not be started.
	at org.apache.felix.framework.Felix._startBundle(Felix.java:1614)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1588)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:382)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:363)
	at org.apache.felix.bundlerepository.ResolverImpl.deploy(ResolverImpl.java:560)
	at de.brz.stratos.goa.OSGiUtil.startBundles(OSGiUtil.java:61)
	at de.brz.stratos.goa.GoaFelixLoader.run(GoaFelixLoader.java:53)
	at de.brz.stratos.goa.GoaFelixLoader.main(GoaFelixLoader.java:121)

--- 8< ---

Kristian",,,,,,,,,,,,,,,,,,,,25/Mar/09 13:27;kkoehler;fragment-patch.txt;https://issues.apache.org/jira/secure/attachment/12403609/fragment-patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-26 16:25:34.659,,,no_permission,,,,,,,,,,,57991,,,Fri Mar 27 06:32:02 UTC 2009,,,,,,0|i0w0pr:,184921,,,,,,,,25/Mar/09 13:27;kkoehler;a patch for this issue,"26/Mar/09 16:25;rickhall;Thanks for the patch, I applied it. Please close this issue if satisfied.","27/Mar/09 06:32;kkoehler;Works ;-)
Thanks for applying the patch.

Kristian",,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException while Architecture on a composite with a provided service,FELIX-994,12417393,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,jonathan.bardin,jonathan.bardin,20/Mar/09 15:09,29/Jul/09 08:03,14/Mar/19 02:47,22/Mar/09 13:46,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"An exception occurred while I try to see the architecture of a composite which provide a service.

---------------------------------------------------------------------------------------------------------------------------
metadata

 	<composite name=""RemoteServiceManagerComposite"" architecture=""true"">
         .....
           <instance component=""Remote Service Manager"" />
	   <provides action=""export"" specification=""fr.imag.adele.homega.framework.remote.compendium.DistributionProvider""/>
        </composite>

----------------------------------------------------------------------------------------------------------------------------
Exception

-> arch -instance Remote Services Manager
Unable to execute command: java.lang.ClassCastException: 
org.apache.felix.ipojo.composite.service.provides.SpecificationMetadata cannot be cast to org.apace.felix.ipojo.composite.service.provides.ProvidedService 
java.lang.ClassCastException: org.apache.felix.ipojo.composite.service.provides.SpecificationMetadata cannot be cast to org.apache.felix.ipojo.composite.service.provides.ProvidedService
        at org.apache.felix.ipojo.composite.service.provides.ProvidedServiceHandlerDescription.getHandlerInfo(ProvidedServiceHandlerDescription.java:68)
        at org.apache.felix.ipojo.architecture.InstanceDescription.getDescription(InstanceDescription.java:163)
        at org.apache.felix.ipojo.composite.CompositeInstanceDescription.getDescription(CompositeInstanceDescription.java:78)
        at org.apache.felix.ipojo.arch.ArchCommandImpl.__printInstance(ArchCommandImpl.java:172)
        at org.apache.felix.ipojo.arch.ArchCommandImpl.printInstance(ArchCommandImpl.java)
        at org.apache.felix.ipojo.arch.ArchCommandImpl.__execute(ArchCommandImpl.java:103)
        at org.apache.felix.ipojo.arch.ArchCommandImpl.execute(ArchCommandImpl.java)
        at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:276)
        at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:167)
        at java.lang.Thread.run(Unknown Source)","Java 1.6, Felix 1.4.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-22 13:46:58.913,,,no_permission,,,,,,,,,,,57996,,,Wed Jul 29 08:03:01 UTC 2009,,,,,,0|i0w0xb:,184955,,,,,,,,"22/Mar/09 13:46;clement.escoffier;Fixed at revision 757188.
The handler description didn't receive the good/correct list. 

Jonathan, could you try it and keep me posted?",22/Mar/09 14:55;jonathan.bardin;The fix works for me.,29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,,,,
Reference target filters not handled correctly,FELIX-993,12417291,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,sorenp,sorenp,19/Mar/09 16:01,29/Apr/09 08:12,14/Mar/19 02:47,29/Apr/09 08:12,scr-1.0.6,,,,,,,,,,scr-1.0.8,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The SCR implementation does not handle references with target filter correctly. When the properties of a bound service is modified so that the service no longer matches the reference filter it isn't unbound as it should.

Suppose we have an event broadcaster component defined by:

	<component name=""EventBroadcaster"">
		<implementation class=""example.EventBroadcaster"" />
		<reference 
			name=""eventListeners"" 
			interface=""example.EventListener""
			cardinality=""0..n""
			policy=""dynamic""
			bind=""addListener""
			unbind=""removeListener"" 
			target=""(listener.state=Active)"" 
		/>
	</component>

If an event listener is registered by the code

	Dictionary<String, Object> props = new Hashtable<String, Object>();
	props.put(""listener.state"", ""Active"");
	ServiceRegistration reg = context.registerService(EventListener.class.getName(), new EventListener(), props);

the new service will be bound to our event broadcaster and the addListener method will be called. This is as it should be. Now, suppose we changed the properties of the service by executing

	Dictionary<String, Object> props2 = new Hashtable<String, Object>();
	props2.put(""listener.state"", ""Inactive"");
	reg.setProperties(props2);

At this point, the event listener service should be unbound from the event broadcaster component since it does no longer match the target filter. However, due to a bug in org.apache.felix.scr.impl.DependencyManager, this the service stays bound and isn't even unbound if

	reg.unregister();

is executed.

The problem is, basically, caused by the following two segments of code:

	public void serviceChanged( ServiceEvent event )
	{
		switch ( event.getType() )
		{
			case ServiceEvent.REGISTERED:
				serviceAdded( event.getServiceReference() );
				break;

			case ServiceEvent.MODIFIED:
				serviceRemoved( event.getServiceReference() );
				serviceAdded( event.getServiceReference() );
				break;

			case ServiceEvent.UNREGISTERING:
				serviceRemoved( event.getServiceReference() );
				break;
		}
	}

and

	private void serviceRemoved( ServiceReference reference )
	{
		// ignore the service, if it does not match the target filter
		if ( !targetFilterMatch( reference ) )
		{
			[...]
			return;
		}

		[...]
	}

Since the properties of the service has already been modified when serviceChanged is called, the filter will no longer match the service and serviceRemoved will ignore it.",,,,,,,,,,,,,,,,,,,,03/Apr/09 13:43;sorenp;DependencyManager.patch;https://issues.apache.org/jira/secure/attachment/12404544/DependencyManager.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-20 11:24:04.556,,,no_permission,,,,,,,,,,,57997,,,Wed Apr 29 08:12:44 UTC 2009,,,,,,0|i0vztr:,184777,,,,,,,,"19/Mar/09 17:04;sorenp;I've made a shot at resolving this issue. It might not live up to several of the project coding standards, but it seems to solve my problem for now.

The idea is basically to keep track of the services that matched the target filter when it was fed to the serviceAdd(ServiceReference) method. Then, when serviceRemove(ServiceReference) is called, instead of checking whether the service matches the filter now, we check if the service matched the filter when added.

Hope this helps.","03/Apr/09 13:43;sorenp;The first patch was a classroom example on how things can go wrong when you try to solve a problem without understanding the context in which the problem  appears...

I've made another attempt.

Regards,

Soren","20/Apr/09 11:24;fmeschbe;Thanks for reporting the issue and providing a patch.

In Rev. 766654 I have just removed the test for the target filter: You remark correctly, that the target filter match might return a false negative. But since the check for whether the service is actually bound/used or not takes place anyway (next check after decrementing the counter), your replacement check is not actually required.

Please close this issue, if this works for you. Thanks.","27/Apr/09 09:19;fmeschbe;The fix applied creates a regression with another test where services need to be replaced without the service properties being changed. See FELIX-1053 for details.

Reopening for applying a new fix","27/Apr/09 09:48;fmeschbe;Committed a fix in Rev. 768910. See comment [1] in FELIX-1053 for details.

[1] https://issues.apache.org/jira/browse/FELIX-1053?focusedCommentId=12703047&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12703047","29/Apr/09 08:12;fmeschbe;WIth the modifications applied as per FELIX-1053, this issue should also be fixed by now.",,,,,,,,,,,,,,,,,,,,,
iPOJO analyzes already installed bundle by holding a lock,FELIX-985,12416980,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,16/Mar/09 16:03,29/Jul/09 08:03,14/Mar/19 02:47,19/Mar/09 16:07,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"When iPOJO starts, it analyzes already installed bundles. However this is down by holding the lock on the Extender object. So, processed bundles are initialized by holding the lock. This can lead to a deadlock in some cases (for example when iPOJO wants to register a service and the framework thread is waiting on the Extender to add another bundle in the iPOJO management thread.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58005,,,Wed Jul 29 08:03:00 UTC 2009,,,,,,0|i0w0wn:,184952,,,,,,,,"19/Mar/09 16:07;clement.escoffier;Fixed at revision 756042.
Now, already active bundles are queued in the list of bundle to process and are analyzed in another thread (without holding the lock).",29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,,,,,
site's <Bundle-Version> documentation is wrong,FELIX-984,12416899,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,lukewpatterson,lukewpatterson,14/Mar/09 20:20,24/Jun/11 12:36,14/Mar/19 02:47,02/Sep/09 16:58,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The site's <Bundle-Version> property documentation is wrong.
http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html
(Can't give a direct link to the property.  A direct link would be possible if the site was generated with the standard Maven site plugin.)

Site says:
""<Bundle-Version> is assumed to be ""${pom.version}"" with '-' character separator of the qualifier replaced with a '.' character.""
when in actuality the conversion behavior is more advanced/thorough. [1]

If you look at FELIX-960, you can see that fixing this documentation defect could help avoid confusion.


[1] http://svn.apache.org/repos/asf/maven/shared/trunk/maven-osgi/src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-16 11:36:21.838,,,no_permission,,,,,,,,,,,58006,,,Wed Sep 02 16:58:41 UTC 2009,,,,,,0|i1aqvj:,270820,,,,,,,,"16/Mar/09 11:36;mcculls;agreed, just figuring out where to put the generated doc on the current site (which is mirrored from the wiki)",02/Sep/09 16:58;mcculls;Updated the doc with a better description of the normalization process along with an example.,,,,,,,,,,,,,,,,,,,,,,,,,
Warning about split packages even with -split-package directive [maven-bundle-plugin-2.0.0],FELIX-981,12416633,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,clovis_at,clovis_at,11/Mar/09 11:24,24/Jun/11 12:36,14/Mar/19 02:47,02/Sep/09 18:03,maven-bundle-plugin-2.0.0,,,,,,,,,,maven-bundle-plugin-2.0.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,A warning about split packages is issued even if you use -split-package in your Export-Package instruction.,"Maven version: 2.0.9
Java version: 1.6.0_12
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""",,,,,,,,,,,,,,,,,,,11/Mar/09 11:26;clovis_at;split-packages.zip;https://issues.apache.org/jira/secure/attachment/12401926/split-packages.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-12 08:18:45.98,,,no_permission,,,,,,,,,,,58009,,,Wed Sep 02 18:03:16 UTC 2009,,,,,,0|i1aqvr:,270821,,,,,,,,"11/Mar/09 11:26;clovis_at;type 
mvn install
to reproduce the problem","12/Mar/09 08:18;mcculls;Tentatively targeting this for maven-bundle-plugin 2.0.1, expected end of April.","12/Mar/09 08:30;mcculls;FYI, this only appears to occur when a package appears in both Private-Package and Export-Package and the directive appears on one but not the other. While BND will favour Export-Package over Private-Package and export it, it appears the split package check is performed twice for each instruction hence the warning. Previously the bundleplugin default for Private-Package often didn't match the packages in the bundle, which would explain why you see this in 2.0.0 but not 1.4.3, because in 1.4.3 the foo package wouldn't be in the default Private-Package whereas in 2.0.0 it will be (without the split-package directive).

There are several ways we can fix this - either by adjusting the default private packages in the bundleplugin, or by only checking once in the bndlib code.

Until then you can safely ignore this warning, because the actual generation of the bundle is still the same.",02/Sep/09 18:03;mcculls;Fixed in r810634.,,,,,,,,,,,,,,,,,,,,,,,
Config Admin throwing NPE,FELIX-979,12416575,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,rickhall,rickhall,10/Mar/09 20:21,25/Aug/09 08:09,14/Mar/19 02:47,26/Mar/09 16:47,configadmin-1.0.10,,,,,,,,,,configadmin-1.2.0,,,,Configuration Admin,,,,,,,0,,,,,,"BJ is working on a test case for DS that uses CM, which is resulting in the following exception:

java.lang.NullPointerException
	at org.apache.felix.cm.impl.ConfigurationManager.getCachedConfiguration(ConfigurationManager.java:281)
	at org.apache.felix.cm.impl.ConfigurationManager.bundleChanged(ConfigurationManager.java:509)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:941)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:220)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:330)

He says, ""It seems CM is trying to clean up unbound configurations and barfing."" Let me know if more information is needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-26 16:15:32.654,,,no_permission,,,,,,,,,,,58011,,,Tue Aug 25 08:09:16 UTC 2009,,,,,,0|i0w1an:,185015,,,,,,,,"10/Mar/09 20:44;rickhall;Additional comments from BJ:

It seems like CM might be garbage collecting configurations, which is not part of the spec. It might be the case you uninstall a bundle and re-install a new one at the same location and want it to have the previous configuration.","26/Mar/09 16:15;fmeschbe;This is most probably a corner case being hit upon, since this case of NullPointerException can only be thrown if the bundleChanged event is called _after_ the BundleActivator.stop method has already terminated when the Configuration Admin bundle.

This may be the case, when the framework is stopping the Configuration Admin bundle while the framework event dispatcher still has an event pending to be delivered to the BundleListener of the stopped Configuration Admin bundle.

The fix in fact is rather simple: I add a flag indicating whether the BundleListener.bundleChanged method should actually be handling events received or not.","26/Mar/09 16:47;fmeschbe;I committed the addition of the flag in Rev. 758736.

This should fix this issue.",25/Aug/09 08:09;fmeschbe;Close all issues now this version has been released,,,,,,,,,,,,,,,,,,,,,,,
Resolver does not clean up properly on a failed recursive attempt to resolve,FELIX-978,12416438,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,09/Mar/09 14:08,09/Mar/09 17:13,14/Mar/19 02:47,09/Mar/09 17:13,framework-1.4.1,,,,,,,,,,framework-1.6.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"When the resolver is calculating the set of potential candidates for module being resolved, it uses a map to store the potential candidates associated with each module that needs to be resolved. It also uses this map to detect cycles. In the case there are no potential candidates to resolve a dependency, the attempt to populate candidates for the given module fails. However, the failed module is not removed from the candidates map. The result is in certain situations, the resolver may end up wiring to the failed module since it still has candidates in the candidate map. This typically can only happen if there are multiple dependencies on the failed module with at least one of them being optional.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58012,,,Mon Mar 09 17:13:34 UTC 2009,,,,,,0|i1aqw7:,270823,,,,,,,,"09/Mar/09 17:13;rickhall;I have committed a patch to address this issue, so I will close it. I have also added a test case to the BND testing harness in my sandbox to check for this situation in the future.",,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle resolving runs extreme long,FELIX-977,12416307,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,kkoehler,kkoehler,06/Mar/09 14:06,30/Mar/09 15:19,14/Mar/19 02:47,30/Mar/09 15:04,,,,,,,,,,,bundlerepository-1.4.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Hi

I encountered problems while resolving rependencies via the bundle repository.

Here is the scenario:
I have a simple obr file with a resource definition which has an unresolved dependency. In this file the resource with the name ""org.springframework.core"" has a requirement for the ""org.apache.commons.logging"".
When I start felix with the obr repository location poniting to that file and type 'obr start com.kkoehler.osgi.repo-test' I'm gettiing the following:

--- 8< ---
Unsatisfied requirement(s):
---------------------------
   (&(package=org.springframework.context)(version>=2.5.0))
      Unnamed - com.kkoehler.osgi:repo-test:bundle:1.0-SNAPSHOT
   (&(package=org.apache.commons.logging)(version>=1.0.4)(!(version>=2.0.0)))
      Spring Context
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Beans
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
      Spring Core
--- 8< ---

I seems to me that felix tries to resolve the bundle ""Spring Core"" more than once ;-)

The wrong unsatisfied dependency information can easily be fixed when checking for existing information in the current list before added it (org.apache.felix.bundlerepository.ResolverImpl). But I think this is only a workaround for the problem of 'double resolving' (I also tried with a larger project and the resolving seems to run 'endless').

In the ResolverImpl I found a statement which 'causes' my problem but there is also a comment for the code.

--- 8< ---
        // If the resource did not resolve, then remove it from
        // the resolve set, since to keep it consistent for iterative
        // resolving, such as what happens when determining the best
        // available candidate.
        if (!result)
        {
            m_resolveSet.remove(resource);
        }
--- 8< ---

Removing the line solved my problem but I'm not sure if I'm running in new ones...

Thanks

Kristian",,,,,,,,,,,,,,,,,,,,30/Mar/09 14:41;kkoehler;FELIX-977-2009-03-30.txt;https://issues.apache.org/jira/secure/attachment/12404144/FELIX-977-2009-03-30.txt,30/Mar/09 13:46;rickhall;FELIX-977-new.txt;https://issues.apache.org/jira/secure/attachment/12404129/FELIX-977-new.txt,27/Mar/09 22:32;rickhall;FELIX-977.txt;https://issues.apache.org/jira/secure/attachment/12403850/FELIX-977.txt,26/Mar/09 14:35;kkoehler;bundlerepo-patch-2009_03_26.txt;https://issues.apache.org/jira/secure/attachment/12403717/bundlerepo-patch-2009_03_26.txt,06/Mar/09 14:08;kkoehler;myrepo.xml;https://issues.apache.org/jira/secure/attachment/12401628/myrepo.xml,,,,,,,5.0,,,,,,,,,,,,,,,,,,,2009-03-26 22:57:26.095,,,no_permission,,,,,,,,,,,58013,,,Mon Mar 30 15:19:30 UTC 2009,,,,,,0|i0w0qf:,184924,,,,,,,,"06/Mar/09 14:08;kkoehler;a repo file to reproduce the ""failure""","26/Mar/09 14:35;kkoehler;Hi

this patch also includes some optimization within the search for cababilities (should run much faster - in my environement this seems to be factor of 3-4). The current implementation checks the capabilities of a resource more than one time...


Also added a test case for the resolver.

Kristian","26/Mar/09 22:57;rickhall;Thanks for the patch. I looked it over. Generally speaking, I think your optimizations make sense, but there is one change that introduces a bug.

When a bundle cannot be resolved, you no longer remove it from m_resolvedSet. This set serves two purposes:

1. It is used for cycle detection.
2. It is the set of resolved bundles.

As you can see, by not removing it, you are saying it is resolved. This is problematic when we searchResolvingResources() since it returns bundles as resolved which were not.

Perhaps we need to break the set into two, one for cycle detection and one for resolved bundles. I can make this change to your patch next week, but if you want to have a go at it, feel free. Thanks.","27/Mar/09 06:40;kkoehler;Thanks for your reply. 
As mentioned before I wasn't sure if this is a good idea to remove the line. That's why I commented out ;-)

Ok, now I see the problem... Not sure if I find the time today...

Thanks

Kristian",27/Mar/09 22:32;rickhall;I tried to modify your patch to eliminate the one issue. I created a separate failed set to keep track of bundles that failed to resolve so we don't try to resolve them again. Let me know if it works for you. Thanks.,"30/Mar/09 08:03;kkoehler;I'm not sure but... where do you add entries to the failed set?

Kristian","30/Mar/09 13:30;rickhall;Yeah, I think my changes are incomplete. I had modified it, but broke things, which eventually led me to revert and start over with a different approach, but apparently I didn't actually complete it. I will look into it again.","30/Mar/09 13:49;rickhall;Ok, as far as I can see, I forgot to add the line to add a resource to the failed set when it is removed from the resolve set due to a resolution failure. I have attached a new patch that adds this line and I tested it locally again and it is still correctly resolving dependencies. Let me know if it works for you. Thanks.","30/Mar/09 14:41;kkoehler;Hi Richard

yes. works great. 

I modified your patch a bit because within the searchResolvingResources Method there was a array coping which is not neccessary IMO. 

I have also some Unit Tests for the resolver but they depend on the Filter patch ;-)
https://issues.apache.org/jira/browse/FELIX-973
Do I have a chance to get it in?

Kristian","30/Mar/09 15:04;rickhall;I applied the patch. Thanks for helping with it. Please close if you are satisfied.

I will try look at the FilterImpl patch next.","30/Mar/09 15:19;kkoehler;Thanks!

Kristian",,,,,,,,,,,,,,,,
Several UI Problems with IE,FELIX-975,12416204,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,05/Mar/09 13:16,06/Mar/09 16:17,14/Mar/19 02:47,06/Mar/09 16:17,webconsole-1.2.2,,,,,,,,,,webconsole-1.2.8,,,,Web Console,,,,,,,0,,,,,,"There are several UI problems with IE:
- Buttons in lists (bundles, components) do not work
- Buttons are not displayed next to each other, but beneath each other
- Save of configurations does not work properly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58015,,,Fri Mar 06 16:17:17 UTC 2009,,,,,,0|i140xz:,231615,,,,,,,,"05/Mar/09 19:56;cziegeler;I've applied a number of fixes for the above problems. By default jquery is now added as the javascript library to all plugins; this makes the cross-browser 
compatibility much easier.
I've unified the bundles, components and event ui's and cleaned the code a little bit to use more jquery features
I've fixed several bugs in the config manager ui:
- checkboxes were not selected (if value is true) in IE6 and IE7 as the IE discards the ""checked"" value when the input element is added to the DOM. So the checked attribute has to be set after the element is added.
- Changing values in text fields etc. did not work in IE7 - changed method to POST (all uppercase)
- Multi-Values did not work in all browsers as the value got lost due to some use of innerhtml which has been replaced now

I'll leave the bug open for some days for further testing.","06/Mar/09 16:17;cziegeler;Further testing did not reveal new problems, so closing this bug now.",,,,,,,,,,,,,,,,,,,,,,,,,
FilterImpl from Felix Framework does not support non-standard LDAP operators,FELIX-973,12416194,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,kkoehler,kkoehler,05/Mar/09 08:44,14/May/09 14:43,14/Mar/19 02:47,30/Mar/09 23:41,bundlerepository-1.2.1,,,,,,,,,,bundlerepository-1.4.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Hi

as discussed on the user mailing list (http://www.mail-archive.com/users@felix.apache.org/msg03402.html) the framework doesn't support non-standard LDAP operators (see also the RFC-0112 Bundle Repository). 

The filter impl throws an exception while parsing a repository file containing filters with this syntax.

Kristian

sample stack trace
--- 8< ---
ERROR: Error parsing repository metadata
org.osgi.framework.InvalidSyntaxException: expected ~=|>=|<=
    at org.apache.felix.framework.FilterImpl.<init>(FilterImpl.java:81)
    at org.apache.felix.framework.BundleContextImpl.createFilter(BundleContextImpl.java:102)
    at org.apache.felix.bundlerepository.RequirementImpl.setFilter(RequirementImpl.java:57)
    at sun.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.felix.bundlerepository.metadataparser.XmlCommonHandler.startElement(XmlCommonHandler.java:490)
    at org.apache.felix.bundlerepository.metadataparser.kxmlsax.KXml2SAXParser.parseXML(KXml2SAXParser.java:67)
    at org.apache.felix.bundlerepository.RepositoryImpl.parseRepositoryFile(RepositoryImpl.java:256)
    at org.apache.felix.bundlerepository.RepositoryImpl.access$000(RepositoryImpl.java:44)
    at org.apache.felix.bundlerepository.RepositoryImpl$1.run(RepositoryImpl.java:75)
    at java.security.AccessController.doPrivileged(Native Method)
    at org.apache.felix.bundlerepository.RepositoryImpl.<init>(RepositoryImpl.java:71)
    at org.apache.felix.bundlerepository.RepositoryImpl.<init>(RepositoryImpl.java:60)
    at org.apache.felix.bundlerepository.RepositoryAdminImpl.initialize(RepositoryAdminImpl.java:206)
    at org.apache.felix.bundlerepository.RepositoryAdminImpl.discoverResources(RepositoryAdminImpl.java:126)
    at org.apache.felix.bundlerepository.ObrCommandImpl.list(ObrCommandImpl.java:210)
    at org.apache.felix.bundlerepository.ObrCommandImpl.execute(ObrCommandImpl.java:104)
    at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:276)
    at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:167)
    at java.lang.Thread.run(Thread.java:619)
WARNING: RepositoryAdminImpl: Exception creating repository file:/home/kkoehler/repository.xml. Repository is skipped.
java.lang.reflect.InvocationTargetException
    at sun.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.felix.bundlerepository.metadataparser.XmlCommonHandler.startElement(XmlCommonHandler.java:490)
    at org.apache.felix.bundlerepository.metadataparser.kxmlsax.KXml2SAXParser.parseXML(KXml2SAXParser.java:67)
    at org.apache.felix.bundlerepository.RepositoryImpl.parseRepositoryFile(RepositoryImpl.java:256)
    at org.apache.felix.bundlerepository.RepositoryImpl.access$000(RepositoryImpl.java:44)
    at org.apache.felix.bundlerepository.RepositoryImpl$1.run(RepositoryImpl.java:75)
    at java.security.AccessController.doPrivileged(Native Method)
    at org.apache.felix.bundlerepository.RepositoryImpl.<init>(RepositoryImpl.java:71)
    at org.apache.felix.bundlerepository.RepositoryImpl.<init>(RepositoryImpl.java:60)
    at org.apache.felix.bundlerepository.RepositoryAdminImpl.initialize(RepositoryAdminImpl.java:206)
    at org.apache.felix.bundlerepository.RepositoryAdminImpl.discoverResources(RepositoryAdminImpl.java:126)
    at org.apache.felix.bundlerepository.ObrCommandImpl.list(ObrCommandImpl.java:210)
    at org.apache.felix.bundlerepository.ObrCommandImpl.execute(ObrCommandImpl.java:104)
    at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:276)
    at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:167)
    at java.lang.Thread.run(Thread.java:619)
Caused by: org.osgi.framework.InvalidSyntaxException: expected ~=|>=|<=
    at org.apache.felix.framework.FilterImpl.<init>(FilterImpl.java:81)
    at org.apache.felix.framework.BundleContextImpl.createFilter(BundleContextImpl.java:102)
    at org.apache.felix.bundlerepository.RequirementImpl.setFilter(RequirementImpl.java:57)
    ... 18 more",,,,,,,,,,,,,,,,,,,,10/Mar/09 07:09;kkoehler;filter.patch;https://issues.apache.org/jira/secure/attachment/12401812/filter.patch,09/Mar/09 17:19;kkoehler;filter.patch;https://issues.apache.org/jira/secure/attachment/12401766/filter.patch,26/Mar/09 13:14;kkoehler;new_patch.txt;https://issues.apache.org/jira/secure/attachment/12403711/new_patch.txt,05/Mar/09 08:45;kkoehler;patch.txt;https://issues.apache.org/jira/secure/attachment/12401501/patch.txt,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,2009-03-05 15:13:50.107,,,no_permission,,,,,,,,,,,58017,,,Tue Mar 31 06:18:31 UTC 2009,,,,,,0|i0w0sf:,184933,,,,,,,,05/Mar/09 08:45;kkoehler;patch for this problem. I added this functionality to the original parser impl.,"05/Mar/09 15:13;rickhall;This is actually a Bundle Repository issue, not a framework issue. I don't think it is a good idea to update Felix' filter implementation to include non-standard features because it will allow people to create bundles which are dependent upon Felix. I think we have to investigate using this FilterImpl in OBR, rather than the standard implementation.

I edited this issue to move it to the OBR component.","09/Mar/09 17:19;kkoehler;Hi

ok. This is the filter patch for the obr component. It uses the implementation from Peter with some smaller adjustements (the additional parameters for non-lpad operators didn't worked for me). 

I also added some test cases.

Kristian",10/Mar/09 07:09;kkoehler;fatch with right copyright notice... sorry,"26/Mar/09 13:14;kkoehler;Hi

i changed to caseSensitive functionality a bit.

Kristian","30/Mar/09 23:41;rickhall;Ok, I applied this. Please close if you are satisfied and thanks a lot!","31/Mar/09 06:18;kkoehler;Thanks!

Kristian",,,,,,,,,,,,,,,,,,,,
Exception thrown in ServiceTracker at shutdown ,FELIX-971,12416151,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,gnt,gnt,04/Mar/09 21:23,21/Nov/12 09:22,14/Mar/19 02:47,09/Mar/09 20:13,,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"ERROR: EventDispatcher: Error during dispatch. (java.lang.IllegalStateException: Invalid BundleContext.)
java.lang.IllegalStateException: Invalid BundleContext.
	at org.apache.felix.framework.BundleContextImpl.checkValidity(BundleContextImpl.java:393)
	at org.apache.felix.framework.BundleContextImpl.ungetService(BundleContextImpl.java:362)
	at org.osgi.util.tracker.ServiceTracker.removedService(ServiceTracker.java:429)
	at org.osgi.util.tracker.ServiceTracker$Tracked.untrack(ServiceTracker.java:1126)
	at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:957)
	at org.apache.felix.framework.util.EventDispatcher$4.run(EventDispatcher.java:812)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:809)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:678)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:609)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3379)
	at org.apache.felix.framework.Felix.access$000(Felix.java:39)
	at org.apache.felix.framework.Felix$1.serviceChanged(Felix.java:620)
	at org.apache.felix.framework.ServiceRegistry.fireServiceChanged(ServiceRegistry.java:571)
	at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:105)
	at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:120)
	at org.apache.felix.framework.ServiceRegistry.unregisterServices(ServiceRegistry.java:146)
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:1815)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:999)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
	at java.lang.Thread.run(Thread.java:613)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-04 22:02:54.217,,,no_permission,,,,,,,,,,,58019,,,Mon Mar 09 20:13:47 UTC 2009,,,,,,0|i0l7bb:,121835,,,,,,,,"04/Mar/09 22:02;rickhall;It looks like ServiceTracker.close() was not called. When we stop a bundle, we unregister all services, release any used services, and unregister any events listeners for the bundle. This is the order that the spec says they should be done. However, it appears like it might be the case that since the listeners are removed last, that the unclosed ServiceTracker sees events after its context is invalid. Can you verify if the ServiceTracker is closed and if not, try to close it and see if it goes away?",09/Mar/09 18:10;rickhall;I wonder if it would be ok for us to avoid sending events to bundles with an invalid context.,09/Mar/09 18:19;rickhall;Or should we invalidate the bundle context after removing listeners?,"09/Mar/09 20:13;rickhall;After thinking about this some more, I decided to move bundle context invalidation after all bundle shutdown tasks. The reason I decided to do this, is because there is no way we can guarantee a bundle cannot receive events between the time its BundleActivator.stop() method returns and until we invalidate its context, so it makes sense to keep the context valid until the bundle can no longer receive events.

Further, the spec can be interpreted this way, since it says the context should be valid while the bundle is STARTING, ACTIVE, and STOPPING. A bundle is STOPPING during all of the bundle shutdown tasks, so this implies the context should be valid during this.

Guillaume, could you see if your example works with out exceptions now? If so, please close this issue. Thanks.",,,,,,,,,,,,,,,,,,,,,,,
System bundle does not correctly handle (export) package attributes,FELIX-969,12416082,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,alexberger,alexberger,04/Mar/09 08:18,11/May/09 18:43,14/Mar/19 02:47,05/May/09 20:18,framework-1.4.1,,,,,,,,,,framework-1.6.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"This issue is related to the follwing mailing list thread:
http://www.mail-archive.com/users@felix.apache.org/msg03403.html

Section 3.5.5 of the OSGi core specification (4.1) states:

  The Framework will automatically associate each package export definition
  with the following attributes:

    • bundle-symbolic-name - The bundle symbolic name of the exporting
      bundle. In the case of a Fragment bundle, this is the host bundle's symbolic
      name.
    • bundle-version - The bundle version of the exporting bundle. In the case
      of a Fragment bundle, this is the host bundle's version.
      
And section 3.6.5 specifies how these attributes must be applied when resolving
packages.

Using Apache Felix Version 1.4.1 I have encountered the following behaviour 
when using different approaches to import packages exported by the system bundle
(org.apache.felix.framework respectively system.bundle) when using attribute
matching:

For the following test cases the bundle manifest of the system bundle looks like
this:

  Bundle-Version = 1.4.1
  Bundle-Name = System Bundle
  Bundle-SymbolicName = org.apache.felix.framework
  Export-Package = my.package; provider=""xxx"", ...

Test Case 1:

   Import-Package: my.package;bundle-symbolic-name=""system.bundle""

 Result: Package my.package could not be resolved!
 
 
Test Case 2:

   Import-Package: my.package;bundle-symbolic-name=""org.apache.felix.framework""

 Result: Package my.package could not be resolved!
 
 
Test Case 3:

   Import-Package: my.package;provider=""xxx""

 Result: Package my.package was resolved successfully.
 
 
Test Case 4:

   DynamicImport-Package: *;bundle-symbolic-name=""system.bundle""

 Result: Package my.package could not be resolved (class not found at runtime)!
 
 
Test Case 2:

   DynamicImport-Package: *;bundle-symbolic-name=""org.apache.felix.framework""

 Result: Package my.package could not be resolved (class not found at runtime)!
 
 
Test Case 3:

   DynamicImport-Package: my.package;provider=""xxx""

 Result: Package my.package was resolved successfully (at runtime).

The same behaviour is also true for packages that are added to the list of 
exported packages of the system bundle by extension bundles (fragment bundles 
with extension:=framework). For such packages another problem arises as the 
matching attributes as defined in the Export-Package header of the extension 
bundle are not taken over by the system bundle. So for example if the extension
bundle has the following export:

   Export-Package my.package;provider=""xxx"";version=""1.0.0""

Then the system bundle seems to discard the attribute ""provider"" but respects the
version attribute:

   Export-Package my.package;version=""1.0.0""

So it looks as if the framework should be fixed to always add the automatic attributes to 
exported packages (as defined in 3.5.5). Furthermore it should also make sure that all
other (non automatic) attributes are respected especially for exorts that are added by
extension bundles.
","java version ""1.6.0_07""
Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
Java HotSpot(TM) 64-Bit Server VM (build 10.0-b23, mixed mode)
SunOS castor 5.10 Generic_137111-08 sun4u sparc SUNW,Sun-Fire-V890",,,,,,,,,,,,,,,,,,,30/Apr/09 09:29;alexberger;Test_cases.zip;https://issues.apache.org/jira/secure/attachment/12406893/Test_cases.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-06 20:24:24.355,,,no_permission,,,,,,,,,,,58021,,,Tue May 05 20:18:03 UTC 2009,,,,,,0|i0vxzz:,184481,,,,,,,,"06/Mar/09 20:24;rickhall;Yes, this definitely is a bug. I have modified the trunk so that system bundle exports correctly have bundle symbolic name and bundle version attributes attached to them. The symbolic name is properly alias to be ""system.bundle"" as well as ""org.apache.felix.framework"". So, in the normal case, this should now be working in the trunk.

Regarding system bundle extensions, they are currently broken in the trunk due to other refactoring work, so I will not close this issue until I get them working again, which will include a fix for this.",17/Mar/09 12:59;rickhall;We just committed a patch for system bundle extensions and have some tests indicating it is working. I deployed new snapshots. Please close this issue if satisfied. Thanks.,"30/Apr/09 09:27;alexberger;I reopen this issue as it is still not completely fixed. The test cases show
(see below) that imports using the ""bundle-symblic-name"" attribute still do not
work for packages that are added by extension bundles (fragment bundles
with extension:=framework).

I have created the following test scenario consisting of two bundles. The
first bundle (called the Provider bundle) looks like this:

 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Provider
 Bundle-SymbolicName: Provider
 Bundle-Version: 1.0.0
 Export-Package: normal.export;provider=bundle

The second bundle (called the Fragment bundle) looks like this:

 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Fragment
 Bundle-SymbolicName: Fragment
 Bundle-Version: 1.0.0
 Fragment-Host: system.bundle;extension:=framework
 Export-Package: fragment.export;provider=  


Then I created the following bundles to test each single scenario:

Case 1: Import using the bundle-symbolic-name attribute:
--------------------------------------------------------------------------------

 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Case 1
 Bundle-SymbolicName: Case.1
 Bundle-Version: 1.0.0
 Bundle-Activator: dummy.Activator
 Import-Package: org.osgi.framework,
  normal.export;bundle-symbolic-name=""Provider"";resolution:=optional,
  fragment.export;bundle-symbolic-name=""system.bundle"";resolution:=optional
  
Result:
    package                   resolved
    ----------------------------------
    normal.export             ok
    fragment.export           failed


Case 2: Import using the bundle-symbolic-name attribute 2:
--------------------------------------------------------------------------------

 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Case 2
 Bundle-SymbolicName: Case.2
 Bundle-Version: 1.0.0
 Bundle-Activator: dummy.Activator
 Import-Package: org.osgi.framework,
  normal.export;bundle-symbolic-name=""Provider"";resolution:=optional,
  fragment.export;bundle-symbolic-name=""org.apache.felix.framework"";resolution:=optional

Result:
    package                   resolved
    ----------------------------------
    normal.export             ok
    fragment.export           failed


Case 3: Import using the bundle-symbolic-name attribute 3:
--------------------------------------------------------------------------------
    
 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Case 3
 Bundle-SymbolicName: Case.3
 Bundle-Version: 1.0.0
 Bundle-Activator: dummy.Activator
 Import-Package: org.osgi.framework,
  normal.export;bundle-symbolic-name=""Provider"";resolution:=optional,
  fragment.export;bundle-symbolic-name=""Fragment"";resolution:=optional

Result:
    package                   resolved
    ----------------------------------
    normal.export             ok
    fragment.export           failed

  
Case 4: Import using custom attribute:
--------------------------------------------------------------------------------

 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Case 4
 Bundle-SymbolicName: Case.4
 Bundle-Version: 1.0.0
 Bundle-Activator: dummy.Activator
 Import-Package: org.osgi.framework,
  normal.export;provider=""bundle"";resolution:=optional,
  fragment.export;provider=""fragment"";resolution:=optional

Result:
    package                   resolved
    ----------------------------------
    normal.export             ok
    fragment.export           ok


Case 5: DynamicImport-Package using the bundle-symbolic-name attribute:
--------------------------------------------------------------------------------

 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Case 5
 Bundle-SymbolicName: Case.5
 Bundle-Version: 1.0.0
 Bundle-Activator: dummy.Activator
 Import-Package: org.osgi.framework
 DynamicImport-Package: normal.export;bundle-symbolic-name=""Provider"",
  fragment.export;bundle-symbolic-name=""system.bundle""

Result:
    package                   resolved
    ----------------------------------
    normal.export             ok
    fragment.export           failed

    
Case 6: DynamicImport-Package using the bundle-symbolic-name attribute 2:
--------------------------------------------------------------------------------

 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Case 6
 Bundle-SymbolicName: Case.6
 Bundle-Version: 1.0.0
 Bundle-Activator: dummy.Activator
 Import-Package: org.osgi.framework
 DynamicImport-Package: normal.export;bundle-symbolic-name=""Provider"",
  fragment.export;bundle-symbolic-name=""org.apache.felix.framework""

Result:
    package                   resolved
    ----------------------------------
    normal.export             ok
    fragment.export           failed


Case 7: DynamicImport-Package using custome attribute:
--------------------------------------------------------------------------------

 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Case 7
 Bundle-SymbolicName: Case.7
 Bundle-Version: 1.0.0
 Bundle-Activator: dummy.Activator
 Import-Package: org.osgi.framework
 DynamicImport-Package: normal.export;provider=""bundle"",
  fragment.export;provider=""fragment""
 
Result:
    package                   resolved
    ----------------------------------
    normal.export             ok
    fragment.export           ok",30/Apr/09 09:29;alexberger;The bundles used in the Test cases (binary + source),05/May/09 20:18;rickhall;We are tracking this on FELIX-1123 for a future Felix release.,,,,,,,,,,,,,,,,,,,,,,
Avoid classloading issue if an alreday manipulated class is used by the API,FELIX-965,12415906,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,02/Mar/09 08:16,29/Jul/09 08:03,14/Mar/19 02:47,02/Mar/09 08:25,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,"iPOJO API manipulates automatically non-manipulated class, and loads them in the internal iPOJO classloader. Already manipulated classes are also loaded with the classloader. This can be avoided if the class is already manipulated by using the ""bundle/regular"" classloader.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58025,,,Wed Jul 29 08:03:00 UTC 2009,,,,,,0|i0w0x3:,184954,,,,,,,,"02/Mar/09 08:25;clement.escoffier;Fix in revision 749228.
Factories using already manipulated class doesn't use the Factory classloader to load the class, but use the normal bundle classloader.",29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,,,,,
Erroneous class loading delegation to the application launcher classloader in some cases,FELIX-962,12415644,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,rickhall,gnt,gnt,26/Feb/09 08:32,12/Mar/09 20:08,14/Mar/19 02:47,12/Mar/09 19:52,,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"Here is an example stack trace:

{code}
ProcessStoreImpl-1@50 daemon, priority=5, in group 'main', status: 'RUNNING'
	  at org.apache.felix.framework.searchpolicy.ModuleImpl.searchDynamicImports(ModuleImpl.java:1,215)
	  at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:558)
	  at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
	  at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1,382)
	  at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	  at org.apache.felix.framework.searchpolicy.ModuleImpl.getClassByDelegation(ModuleImpl.java:428)
	  at org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1,341)
	  at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:737)
	  at org.springframework.osgi.util.BundleDelegatingClassLoader.findClass(BundleDelegatingClassLoader.java:99)
	  at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:156)
	  at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	  at org.apache.xbean.classloader.MultiParentClassLoader.loadClass(MultiParentClassLoader.java:184)
	  at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	  at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:374)
	  at java.lang.ClassLoader.defineClass1(ClassLoader.java:-1)
	  at java.lang.ClassLoader.defineClass(ClassLoader.java:675)
	  at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)
	  at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)
	  at java.net.URLClassLoader.access$100(URLClassLoader.java:56)
	  at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
	  at java.security.AccessController.doPrivileged(AccessController.java:-1)
	  at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	  at org.apache.xbean.classloader.MultiParentClassLoader.loadClass(MultiParentClassLoader.java:200)
	  at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	  at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:374)
	  at org.apache.openjpa.util.ProxyMaps.afterEntrySet(ProxyMaps.java:74)
	  at org.apache.openjpa.util.java$util$HashMap$proxy.entrySet(Unknown Source:-1)
	  at org.apache.openjpa.util.ProxyMaps.values(ProxyMaps.java:65)
	  at org.apache.openjpa.util.java$util$HashMap$proxy.values(Unknown Source:-1)
	  at org.apache.openjpa.kernel.SingleFieldManager.delete(SingleFieldManager.java:335)
	  at org.apache.openjpa.kernel.SingleFieldManager.delete(SingleFieldManager.java:283)
	  at org.apache.openjpa.kernel.StateManagerImpl.cascadeDelete(StateManagerImpl.java:2,861)
	  at org.apache.openjpa.kernel.BrokerImpl.delete(BrokerImpl.java:2,566)
	  at org.apache.openjpa.kernel.SingleFieldManager.delete(SingleFieldManager.java:387)
	  at org.apache.openjpa.kernel.SingleFieldManager.delete(SingleFieldManager.java:372)
	  at org.apache.openjpa.kernel.SingleFieldManager.delete(SingleFieldManager.java:329)
	  at org.apache.openjpa.kernel.SingleFieldManager.delete(SingleFieldManager.java:283)
	  at org.apache.openjpa.kernel.StateManagerImpl.cascadeDelete(StateManagerImpl.java:2,861)
	  at org.apache.openjpa.kernel.BrokerImpl.delete(BrokerImpl.java:2,566)
	  at org.apache.openjpa.kernel.BrokerImpl.delete(BrokerImpl.java:2,531)
	  at org.apache.openjpa.kernel.DelegatingBroker.delete(DelegatingBroker.java:1,046)
	  at org.apache.openjpa.persistence.EntityManagerImpl.remove(EntityManagerImpl.java:659)
	  at org.apache.ode.store.jpa.JpaObj.delete(JpaObj.java:34)
	  at org.apache.ode.store.jpa.DeploymentUnitDaoImpl.delete(DeploymentUnitDaoImpl.java:114)
	  at org.apache.ode.store.ProcessStoreImpl$3.call(ProcessStoreImpl.java:303)
	  at org.apache.ode.store.ProcessStoreImpl$3.call(ProcessStoreImpl.java:300)
	  at org.apache.ode.store.ProcessStoreImpl$Callable.call(ProcessStoreImpl.java:701)
	  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:269)
	  at java.util.concurrent.FutureTask.run(FutureTask.java:123)
	  at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	  at java.lang.Thread.run(Thread.java:613)
{code}

The interesting bit is the following exerpt:
{code}
	  at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
	  at java.security.AccessController.doPrivileged(AccessController.java:-1)
	  at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
{code}

The current code in ModuleImpl#searchDynamicImports() does not really handle this case.  The reason is that the {{java.net.URLClassLoader$1}} class is an anonymous PrivilegedExceptionAction.
The result is that the loop is aborted too soon and the launcher classloader is used to delegate the call.   In my application, it leads to all kinds of LinkageError being thrown.

Note that this problem mostly happen on macs, which has a weird thing in the classloader, trying to handle some org.apache.crimson / org.apache.xalan / org.apache.xml / org.apache.xpath in some weird way.
Anyway, I have a patch to support this anonymous classes I will attach now.",,,,,,,,,,,,,,,,,,,,26/Feb/09 10:55;gnt;FELIX-962-bis.patch;https://issues.apache.org/jira/secure/attachment/12401018/FELIX-962-bis.patch,12/Mar/09 19:00;gnt;FELIX-962-newerer.patch;https://issues.apache.org/jira/secure/attachment/12402081/FELIX-962-newerer.patch,04/Mar/09 12:43;gnt;FELIX-962-quarter.patch;https://issues.apache.org/jira/secure/attachment/12401404/FELIX-962-quarter.patch,04/Mar/09 15:08;rickhall;FELIX-962-quinquies.patch;https://issues.apache.org/jira/secure/attachment/12401415/FELIX-962-quinquies.patch,03/Mar/09 14:29;rickhall;FELIX-962-richard.txt;https://issues.apache.org/jira/secure/attachment/12401315/FELIX-962-richard.txt,04/Mar/09 17:02;rickhall;FELIX-962-septies.patch;https://issues.apache.org/jira/secure/attachment/12401422/FELIX-962-septies.patch,04/Mar/09 16:53;gnt;FELIX-962-sexies.patch;https://issues.apache.org/jira/secure/attachment/12401421/FELIX-962-sexies.patch,04/Mar/09 11:48;gnt;FELIX-962-ter.patch;https://issues.apache.org/jira/secure/attachment/12401403/FELIX-962-ter.patch,11/Mar/09 23:57;gnt;FELIX-962.new.patch;https://issues.apache.org/jira/secure/attachment/12401990/FELIX-962.new.patch,12/Mar/09 17:03;rickhall;FELIX-962.newer.patch;https://issues.apache.org/jira/secure/attachment/12402059/FELIX-962.newer.patch,26/Feb/09 08:33;gnt;FELIX-962.patch;https://issues.apache.org/jira/secure/attachment/12401002/FELIX-962.patch,11.0,,,,,,,,,,,,,,,,,,,2009-02-26 08:51:03.639,,,no_permission,,,,,,,,,,,58028,,,Thu Mar 12 20:08:48 UTC 2009,,,,,,0|i0vwfj:,184227,,,,,,,,26/Feb/09 08:51;mcculls;isn't getEnclosingClass a Java 5 method?,26/Feb/09 08:52;mcculls;Perhaps getDeclaringClass would be better - could you see if that also fixes the problem?,"26/Feb/09 08:58;mcculls;dang, anonymous inner classes aren't defined to be part of the class where they appear (as they aren't really ""declared"" with a name)

so, what to do... use reflection to see if getEnclosingClass is available, or use some other technique to get the enclosing class (ie. chop off the $ part) ?","26/Feb/09 10:35;gnt;Argh, I had not paid attention to that.
I suppose using reflection will not fix the problem on Java 4, so maybe removing the $ part could work.
Let me try that.",26/Feb/09 10:56;gnt;This other patch seems to work too and avoids the Java 5 call.,27/Feb/09 16:59;gnt;Are you guys happy with this patch or should I try something else ?,"27/Feb/09 17:02;rickhall;I have been stuck working on a different issue, so I haven't really looked at it. It is probably ok, we just need some time to review and apply it.","03/Mar/09 14:31;rickhall;Guillaume, could you try my patch against trunk and see if it resolves your issue. It is basically just your patch moved into the existing 'if' statement. If it works, then I will apply it. Thanks.","04/Mar/09 11:46;gnt;RIchard, the problem with your patch is that an NPE can be thrown because classes[i].getClassLoader() can be null if the class has been loaded from the system class loader.


After modifying the test to guard against this NPE, I've hit another one which was caused by the loadClass() returning null as a result of ModuleImpl#getClassByDelegation() returning null.
After removing this NPE,


Caused by: java.lang.StackOverflowError
at sun.security.provider.PolicyFile.implies(PolicyFile.java:1170)
at java.security.ProtectionDomain.implies(ProtectionDomain.java:195)
at java.security.AccessControlContext.checkPermission(AccessControlContext.java:249)
at java.security.AccessController.checkPermission(AccessController.java:427)
at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)
at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:728)
at org.springframework.osgi.util.BundleDelegatingClassLoader.findClass(BundleDelegatingClassLoader.java:99)
at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:156)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.xbean.classloader.MultiParentClassLoader.loadClass(MultiParentClassLoader.java:184)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.felix.framework.searchpolicy.ModuleImpl.searchDynamicImports(ModuleImpl.java:1218)
at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:558)
at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1377)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.felix.framework.searchpolicy.ModuleImpl.getClassByDelegation(ModuleImpl.java:428)
at org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1343)
at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:737)
at org.springframework.osgi.util.BundleDelegatingClassLoader.findClass(BundleDelegatingClassLoader.java:99)
at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:156)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.xbean.classloader.MultiParentClassLoader.loadClass(MultiParentClassLoader.java:184)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.felix.framework.searchpolicy.ModuleImpl.searchDynamicImports(ModuleImpl.java:1218)
at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:558)
at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1377)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:160)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.xbean.classloader.MultiParentClassLoader.loadClass(MultiParentClassLoader.java:184)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.felix.framework.searchpolicy.ModuleImpl.searchDynamicImports(ModuleImpl.java:1218)
at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:558)
at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1377)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:160)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.xbean.classloader.MultiParentClassLoader.loadClass(MultiParentClassLoader.java:184)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.felix.framework.searchpolicy.ModuleImpl.searchDynamicImports(ModuleImpl.java:1218)
at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:558)
at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1377)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:160)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.xbean.classloader.MultiParentClassLoader.loadClass(MultiParentClassLoader.java:184)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.apache.felix.framework.searchpolicy.ModuleImpl.searchDynamicImports(ModuleImpl.java:1218)
at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:558)
at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1377)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:160)

I'm investigating a bit more","04/Mar/09 11:48;gnt;Richard, attached is a modified version of your patch which guards against NullPointerExceptions and avoid a stack overflow by moving the cycling check in findClassOrResourceByDelegation.
This patch seems to work great for me.","04/Mar/09 12:43;gnt;This patch should be slightly faster and avoids multiple calls to loadClass / lastIndexOf.
Also a bit easier to read imho.","04/Mar/09 15:09;rickhall;Excellent patches, Guillaume. I have uploaded a slightly refactored version of your patch. I don't think I changed any of the substance, but could you please check it again to verify it is ok. Thanks.","04/Mar/09 16:32;gnt;Weird, with your patch, I end up with the following exception:
   java.lang.LinkageError: duplicate class definition: org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder
I'll try to investigate...","04/Mar/09 16:37;rickhall;Odd, considering I really didn't try to change it.

That error typically occurs because the call to defineClass() is not properly guarded with synchronization when it checks to verify whether the class was already loaded or not before defining the class.

Felix actually checks twice if a class is loaded already, once at the beginning and then once again before defining the class.","04/Mar/09 16:44;rickhall;It is because it no longer returns null in the case of a detected cycle?

In findClassOrResourceByDelegation(), add:

    else
    {
        return null;
    }

To the ""if (requestSet.add(name))"" statement and see if that makes a difference, since that is the only content change I really made. This will have it return null in the case of a detected cycle, but throw an exception in all other cases.

If this makes a difference, then we will have to think about it to make sure it is correct.","04/Mar/09 16:53;gnt;Yes, i've spotted the problem.  It comes from the fact that if the class / resource to be searched is already in the cycleCheck set, the method should return null and not throw an exception.

The attached patched is a modified version of yours which fix the problem.","04/Mar/09 17:04;rickhall;Not to completely beat this dead horse, but I uploaded hopefully the final version of the patch. My original intent with my last patch was to eliminate some of the internal return statements in the method to make it a little clearer what the return result was by having most returns at the end of the method. So, this last patch just attempts to implement that again. Please let me know if it works, so we can put this to bed. Thanks for your assistance.",04/Mar/09 17:22;gnt;This one works for me :-),"04/Mar/09 17:57;rickhall;Excellent. I just committed the patch, please close if you are satisfied.",04/Mar/09 18:31;gnt;Thanks !,11/Mar/09 23:55;gnt;I have found a small problem with the current code. I will attach a patch,"11/Mar/09 23:57;gnt;The attached patch fixes two problems:
  * the first one which happen when the class is loaded from the boot classloader (in which case, we now use the system classloader to load the enclosing class)
  * the second one which is the fact that all kind of linkage errors can happen when loading the class and this would really disturb the classloader correct behavior","12/Mar/09 14:34;rickhall;Make me wonder if we are doing the right thing here, because you are correct, it is not a good idea to try to do a class load in the middle of doing a class load.","12/Mar/09 17:02;rickhall;Guillaume, in an effort to lessen the possibility of receiving class loading errors, I modified the patch to use getEnclosingClass() if it is available and to use the manual approach if it is not. What do you think? Please test to see if this resolves the situation for you. Thanks.","12/Mar/09 19:00;gnt;Your patch does not work because it calls 
   clazz.getMethod(""getEnclosingClass"")
instead of
   Class.class.getMethod(""getEnclosingClass"")

The attached patch fix this issue and works great for me.
I've also slightly modified the patch to cache the method.","12/Mar/09 19:52;rickhall;Ok, I applied the patch. I made your cache variables volatile so we don't have to synchronize access to them for different threads. Please close this issue (again) if you are satisfied. Thanks.",12/Mar/09 20:08;gnt;Thanks!
100% CPU looping inside uses calculation,FELIX-961,12415535,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,mcculls,mcculls,25/Feb/09 07:04,06/Mar/09 16:26,14/Mar/19 02:47,27/Feb/09 17:34,framework-1.4.1,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"While investigating a problem report against pax-runner (http://article.gmane.org/gmane.comp.java.ops4j.general/6778) I found it was actually caused by a 100% CPU loop inside the ""uses"" calculation code. In Felix 1.4.1 this was stopping the shell bundle from activating, hence the lack of console. Using the trunk build I can get a console, but the looping still occurs with the testcase.",,,,,,,,,,,,,,,,,,,,25/Feb/09 07:14;mcculls;USES_TESTCASE.zip;https://issues.apache.org/jira/secure/attachment/12400914/USES_TESTCASE.zip,25/Feb/09 07:50;mcculls;USES_TESTCASE2.zip;https://issues.apache.org/jira/secure/attachment/12400918/USES_TESTCASE2.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-02-25 12:49:12.223,,,no_permission,,,,,,,,,,,58029,,,Fri Mar 06 16:26:43 UTC 2009,,,,,,0|i1aqx3:,270827,,,,,,,,"25/Feb/09 07:14;mcculls;The attached testcase (Felix + config + bundles) reproduces the uses calculation problem while reducing the amount of bundles from the original testcase (which also included Spring-DM). Note the problem is a bit intermittent, but isn't rare.

Adding more bundles to the testcase increases the chance of the problem occurring.","25/Feb/09 07:28;mcculls;Just to clarify, this is not technically a hang because the framework is still doing work - it can just take a long time to complete.
For example, the attached testcase can take a few minutes before everything resolves and if more bundles are added then it
takes much longer (perhaps exponential, but I don't have the evidence yet).",25/Feb/09 07:50;mcculls;Larger testcase that takes a very long time to resolve.,"25/Feb/09 12:49;bdelacretaz;I have seen similar problems when working on the Sling jcrinstall module, framework seems to hang but is really only spending *lots* of time in the R4SearchPolicyCore.findConsistentClassSpace() method.

Looks like my problem is more likely to happen with JDK 1.6 than with JDK 1.5: the test scenario below always passes with 1.5 but ""hangs"" almost every time with 1.6 (macosx, java versions ""1.6.0-dp"" and ""1.5.0_16"").

Note that I'm still running V1.0.4 of the Felix framework for those tests, so not sure if it's the same problem.

Here's my test scenario FWIW.

Uses the Felix webconsole mounted at /system/console.

1. Install about 80 bundles (can't share those, sorry) via the console, using a loop of CURL commands like

curl -F action=install -Fbundlefile=@$f http://admin:admin@localhost:4502/system/console/bundles

2. Try to start all bundles using a loop of CURL commands like

curl -d action=start http://admin:admin@localhost:4502/system/console/bundles/N

with N ranging from 20 (the number of bundles installed before 1.) to 150

With JDK 1.6, step 2. very often hangs when the first bundle is started (HTTP response does not come), and jconsole shows the SCR Actor thread spending all its time inside R4SearchPolicyCore.findConsistentClassSpace() ","25/Feb/09 14:36;rickhall;It is certainly a known issue that finding a consistent class space may take a long time, since the algorithm is very simplistic and the search space is potentially very big. It should not hang or loop indefinitely, however. If it is, that sounds like a bug.","26/Feb/09 14:57;rickhall;Looking at TESTCASE2, it does indeed lead to long delays, although it does appear to be making progress in all cases. Interestingly, some executions do finish quickly, which is dependent upon the ordering we get when we iterate over the entries in a hash map. In short, the algorithm is working as expected, which can be slow in some scenarios. I am looking into implementing some heuristics that may help us out, but worst case will always be bad unless we come up with a completely different algorithm. Hopefully, I can improve this case.","26/Feb/09 15:43;mcculls;FWIW, I believe Equinox now attempts the correct algorithm for a certain period and then switches to a less accurate ""best-effort"" approach if it takes too long.","27/Feb/09 17:18;rickhall;As a side note, from my understanding of how Equinox works, if it detects a resolve is taking too long, it just takes the best result it has so far and excludes any bundles that could not resolve and resolves the rest. This approach may make sense for Equinox because it resolves all unresolved bundles every time it resolves any, but Felix' resolver is incremental, meaning it only resolves the bundles it needs to resolve.

Thus, in Felix if you resolve bundle foo, only bundles related to foo through dependencies will be resolved. There are no other byproducts. If foo fails to resolve, then there is no change to the resolved state. This is not true for Equinox. However, we could potentially modify Felix' resolver to simply fail if it starts to take too long, rather than run until it finds a solution or fails (which could take a long time).

Keep in mind that Equinox' ""best effort"" approach is just a way to end a long resolve, it doesn't necessarily result in a solution for a particular bundle, it just results in whatever it could accomplish, which may or may not include the bundle you wanted to resolve.","27/Feb/09 17:34;rickhall;I think TESTCASE2 was interesting, since it demonstrated that it is fairly easy to get into fairly long running ""uses"" constraint violations without a really complicated use case. In this particular case, the issue arose because bundles were overriding packages provided by the system bundle. This resulted in lots of imports that had two candidates, one from the system bundle and one from another bundle.

This ended up being a worst case scenario since the system bundle export was chosen first, since it was resolved already and resolved packages are given preference. I noticed that some bundles eliminated the system bundle by including a version range on their imports, but others did not. If all bundles imported with an appropriate version range, then this issue would not have appeared, since there wouldn't have been so many imports with multiple candidates.

As a result, I implemented two ""fixes"" for this:

1. I noticed that some runs wouldn't take long depending on the order of the bundles when calculating uses constraints, which changed since they were pulled out of a map. If bundles with lots of potential candidates for their imports were handled first, it seemed to be quicker. Thus, I modified the resolver to first sort the bundles based the number of potential candidates they had. This change got the resolver completing consistently in about 15 seconds with testcase2.

2. The algorithm for permutating from one set of potential candidates to another when a constraint violation is detected is exhaustive, but not very smart. In an effort to make it a little smarter, I thought of a way to make it permutate the candidates for a specific bundle when a constraint is detected without losing the ability to be exhaustive; now the resolver rotates the potential candidates for the bundle where the constraint violation was detected and retests. This change got the resolver completing consistently in about 1 second with testcase2.

It is not clear if these fixes are general or specific to testcase2, but my intuition says they should provide general improvements. However, they have not fixed the worst case situation and it is still possible some set of bundles could cause the resolver to go on for a very long time trying to find a solution. The only solution here is to fail after a certain amount of time or to completely rewrite the resolver.","27/Feb/09 17:35;rickhall;I forgot to add, I'd be interested in others reporting any results they have and for this issue to be closed if the original issue is resolved.","06/Mar/09 16:26;mcculls;Just tried the latest framework compiled from trunk with the original testcase (~40 bundles)
While it still takes some time resolve (around 1 minute) I think this is reasonable given this
particular selection of imports, uses constraints, and version ranges.

So I'll close this issue, but as Richard says - if anyone has more scenarios let us know :)",,,,,,,,,,,,,,,,
Bundle#loadClass sometimes return null instead of throwing a CNFE,FELIX-953,12415258,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,rickhall,gnt,gnt,20/Feb/09 20:49,24/Feb/09 15:10,14/Mar/19 02:47,24/Feb/09 14:51,,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"Here is a patch:
{code}
Index: src/main/java/org/apache/felix/framework/Felix.java
===================================================================
--- src/main/java/org/apache/felix/framework/Felix.java (revision 746347)
+++ src/main/java/org/apache/felix/framework/Felix.java (working copy)
@@ -1338,7 +1338,12 @@
                 throw new ClassNotFoundException(name, ex);
             }
         }
-        return bundle.getCurrentModule().getClassByDelegation(name);
+        Class clazz = bundle.getCurrentModule().getClassByDelegation(name);
+        if (clazz == null)
+        {
+            throw new ClassNotFoundException(name);
+        }
+        return clazz;
     }
 
     /**
{code}

I'm wondering if there any reason why ModuleImpl#getClassByDelegation(String) returns null instead of throwing a NPE.
Browsing through the code, it seems there are several places where a null value is checked, then a CNFE thrown.
This would also avoid possible NPE in felix code as in Felix#createBundleActivator.

I think it would be nice to iron the definition of IModule#getClassByDelegation to either remove the thrown CNFE or never returns null, as currently both can happen.
The IWire interface has exactly the same problem.

I will try to come up with a patch which will never return a null value for both interfaces.",,,,,,,,,,,,,,,,,,,,21/Feb/09 12:30;gnt;FELIX-953.patch;https://issues.apache.org/jira/secure/attachment/12400656/FELIX-953.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-23 15:40:40.017,,,no_permission,,,,,,,,,,,58037,,,Tue Feb 24 15:10:22 UTC 2009,,,,,,0|i0vwbb:,184208,,,,,,,,"20/Feb/09 20:58;gnt;I guess that the reason for not throwing CNFE was maybe performances.
In such a case, both IWire and IModule should not throw CNFE at all and delegate to classes upper in the stack trace to throw exceptions.

Btw, I think the exact same thing applies to resources, which sometimes throw a ResourceNotFoundException or not.","20/Feb/09 21:06;gnt;Looking at history on the ModuleImpl class:
 * in 1.0.4, ModuleImpl#getClass() never throws a CNFE
 * in 1.2.2 and 1.4.1 ModuleImpl#getClass() never returns null and throws a CNFE
 * in trunk, both can happen","20/Feb/09 21:12;gnt;Ok, I'll stop digging further.
Should IWire and IModule behave consistently: both throwing CNFE or always return null ? Has the mixed case any value ?  Should Resource loading behave consistently too ?
I'd be willing to help and provide a patch, but I need some directions. 
",21/Feb/09 12:30;gnt;Simple patch to fix the issue and a possible NPE,"23/Feb/09 15:40;rickhall;The functionality around IModule.getClass() has changed a lot lately, so not everything may be so well thought out yet, but it is unclear to me if you have uncovered a specific issue or just something you see as an inconsistency?

Regarding IWire.getClass(), this specifically works differently. An exception aborts the search, whereas a null continues the search. Terrible documentation on this, I know. I will use this issue to improve the JavaDoc on IWire.","23/Feb/09 15:54;gnt;There are two things.

The first problem is stated by the issue description: Bundle.loadClass() sometimes returns null instead of throwing a ClassNotFoundException which is against the ClassLoader specification (it is supposed to either returns the loaded class or throw an exception, but never return a null value).  This issue, along with a possible NPE are solved in the attached patch.

The second issue is more about inconsistencies / bad documentation.  Usually, I do tend to think that loading classes always follow the ClassLoader specifiation: i.e. never returns null.  So any change from that should be explicitely stated in the javadoc imho.  I guess this issue has more to deal with me not fully understanding the code though.","23/Feb/09 16:02;gnt;I might see why IWire sometimes returns null and sometimes throw an exception (though not really confident about that yet), but but afaik, IModule really represents the bundle, so I don't really see why that one would return a null value instead of throwing a CNFE.   Would that makes sense to you that IModule#getClassByDelegation() always throw an exception ?

Looking deeper in the code, i've just found another possible NPE in ServiceRegistrationImpl#isClassAccessible where the clazz parameter can be null from a call to ServiceRegistrationImpl#isAssignableTo().
That one is harmless because catched, but it could be avoided nevertheless (which is good when debugging when i sometimes but a breakpoint exception on NPE).","23/Feb/09 17:09;rickhall;IWire could be for an Import-Package (R4Wire) or a Require-Bundle (R4WireModule). If a class is not found from an Import-Package, then an exception is thrown because this must terminate the search. If a class is not found from a Require-Bundle, then null is returned because the search must continue.

Regarding, IModule.getClassByDelegation() (this name will probably still change as part of my refactoring), I am not necessarily against making this always return an exception, but I will have to look into it some more. The reason we are a little inconsistent here is because we have boiled down two abstractions into one in the trunk, we merged IContentLoader and IModule and I believe these two handled the situation differently before. I don't think IModule.getClass() ever threw an exception previously.

In short, I think you are correct we probably need to make sure we have this issue handled in a reasonable way. So, I will look into it as part of the ongoing work for FELIX-851.","23/Feb/09 19:08;rickhall;Guillaume, I looked at the code more closely. Could you describe the situation in which you are seeing a null being returned? The only time ModuleImpl.getClassByDelegation() should return null is if it has detected a cycle, but this is not intended to be returned to the caller, it just marks the end of the cycle. Perhaps we have a logic bug. This is part of a more recent refactoring, so it is likely the issue appeared as a result. I think the intent is that the method should always result in an exception if the class cannot be found.","23/Feb/09 20:17;gnt;I suspect the problem mainly comes from ExtensionManager.
The following code should return null:

{code}
bundleContext.getBundle(0).loadClass(""foo.bar"");
{code}

In ServiceMix 4, we're creating our own classloaders so that we can be compliant with the JBI spec (though we do push people to use plain OSGi bundles).  In doing so, the system bundle is used as a parent for those classloaders.   

It may be just about fixing ExtensionManager.ExtensionManagerModule.getClassByDelegation() to not return null.","23/Feb/09 22:51;rickhall;You are correct that the extension manager module was incorrect. It should have just been calling loadClass() on its class loader and letting the exception fly rather than catching and logging it. This could be a mistake from the refactoring. I have fixed this. I also investigated the cycle checking code and I am fairly confident it will not return a null to user code, so I think this issue is resolved. Please close it if you are satisfied.","24/Feb/09 07:10;ffang;Hi,
seems only change ExtensionManager can't completely fix this issue.
The error as Guillaume described still exist, which means the system bundle classloader still return null sometimes.
If I build the code myself with Guillaume's patch, then It works.
Freeman","24/Feb/09 07:25;gnt;Richard, I think your changes are not sufficient.
The current {{ExtensionManager}} code looks like:
{code}
        public Class getClassByDelegation(String name) throws ClassNotFoundException
        {
            if (!m_exportNames.contains(Util.getClassPackage(name)))
            {
                return null;
            }

            return getClass().getClassLoader().loadClass(name);
        }
{code}

Imho, it should be:
{code}
        public Class getClassByDelegation(String name) throws ClassNotFoundException
        {
            if (!m_exportNames.contains(Util.getClassPackage(name)))
            {
                throw new ClassNotFoundException(name);
            }
            return getClass().getClassLoader().loadClass(name);
        }
{code}","24/Feb/09 14:51;rickhall;Yes, you are correct, I missed that. Fixed now. This should be consistent with ModuleImpl.getClassByDelegation() which will also throw an exception if you ask it for a class it cannot load. Please close if satisfied.","24/Feb/09 14:59;gnt;I have tested this patch, so I'm closing this issue.
Would you mind deploying a snapshot please ?",24/Feb/09 15:10;rickhall;Snapshots deployed. Thanks.,,,,,,,,,,,
Exception thrown when unregistering services because the bundle is stopped,FELIX-952,12415238,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,20/Feb/09 15:44,20/Feb/09 17:23,14/Mar/19 02:47,20/Feb/09 16:38,,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"I have a bundle which happens to unregister some services from a ServiceListener.
What happens is that when the bundle is stopped, ServiceRegistry#unregisterServices(Bundle) is called.
This method unregister services one by one.   When one service has been unregistered, my listener is called which unregister another service.
When the loop iterator to this very service, an exception is thrown.

{code}
Caused by: java.lang.IllegalStateException: Service already unregistered.
        at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:108)
        at org.apache.felix.framework.ServiceRegistry.unregisterServices(ServiceRegistry.java:135)
        at org.apache.felix.framework.Felix._stopBundle(Felix.java:2032)
        at org.apache.felix.framework.Felix.stopBundle(Felix.java:1952)
        at org.apache.felix.framework.Felix._uninstallBundle(Felix.java:2106)
        at org.apache.felix.framework.Felix.uninstallBundle(Felix.java:2076)
        at org.apache.felix.framework.BundleImpl.uninstall(BundleImpl.java:425)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-20 16:38:50.188,,,no_permission,,,,,,,,,,,58038,,,Fri Feb 20 17:23:43 UTC 2009,,,,,,0|i1419r:,231668,,,,,,,,"20/Feb/09 16:38;rickhall;I modified ServiceRegistry.unregisterServices() to check to see if the registration is valid before calling unregister(), so I think this should solve your issue. Please close this issue if you are satisfied.","20/Feb/09 17:23;gnt;I was about to upload the exact same patch.  Haven't tested it yet, but I'm quite confident it should work ;-)
Will reopen if needed.",,,,,,,,,,,,,,,,,,,,,,,,,
service.ranking property not respected for singular service reference,FELIX-950,12415164,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,19/Feb/09 19:43,19/Feb/09 20:11,14/Mar/19 02:47,19/Feb/09 20:11,scr-1.0.6,,,,,,,,,,scr-1.0.8,,,,Declarative Services (SCR),,,,,,,0,,,,,,"For a service reference with singular cardinality (0..1 or 1..1), the service ranking has to be applied as per the service.ranking and service.id properties as defined in section 112.3.2, Reference Cardinality, of the OSGi Compendium Specification.

Currently the service.ranking property is never obeyed resulting in the following non-conforming situations:

* If a service is bound and a new service is registered with a higher service.ranking, the bound service is not replaced. Correct is to replace the bound service with the new service.
* If multiple services are registered, the service with the highest ranking (or the lowest id for equal rankings) must be bound. Currently, the first service returned by BundleContext.getServiceReferences(String, String) is returned. Since this method is not specified to return the services in any order, the wrong service is almost certainly selected.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58040,,,Thu Feb 19 20:11:44 UTC 2009,,,,,,0|i0vzxj:,184794,,,,,,,,"19/Feb/09 20:11;fmeschbe;Implemented the fix in Rev. 745981:

* A bound service is replaced if a service with a higher ranking is registered. Replacement takes place as specified by first binding the new service and then unbinding the replaced service.

* When accessing a single service, either through ComponentContext.locateService, or when first binding a service to a component, ensure that the service with the highest service ranking is bound.

These changes have no effect for multiple service references, since in this case always all services are bound.",,,,,,,,,,,,,,,,,,,,,,,,,,
Website documentation on embedding is out of date,FELIX-949,12415075,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,bramk,bramk,18/Feb/09 17:47,18/Feb/09 19:26,14/Mar/19 02:47,18/Feb/09 18:00,,,,,,,,,,,,,,,Documentation,,,,,,,0,,,,,,"The website documentation and code examples on embedding felix are not update to date with the recent felix api changes.

http://felix.apache.org/site/launching-and-embedding-apache-felix.html

Some problem areas:

    m_felix = new Felix(configMap, list);                      <<<<< activator no longer exists

    m_felix.stopAndWait();                                             <<<<< replaced by waitForStop();


",Felix website,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-18 17:57:34.398,,,no_permission,,,,,,,,,,,58041,,,Wed Feb 18 19:26:04 UTC 2009,,,,,,0|i1aqyv:,270835,,,,,,,,"18/Feb/09 17:57;rickhall;The link you are refering to is invalid, the correct link is:

http://felix.apache.org/site/apache-felix-framework-launching-and-embedding.html

When you change the name of the page in the wiki it doesn't remove the generated page for the old name. It looks like we need to do some sort of a clean.
",18/Feb/09 18:00;rickhall;I manually removed the invalid page. I assume it will update shortly. Please close this issue if you are satisfied. Thanks.,18/Feb/09 19:26;bramk;satisfied :) thanks!,,,,,,,,,,,,,,,,,,,,,,,,
ServiceReferenceImpl.compareTo should handle other types than integer for service ranking,FELIX-948,12415074,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,cziegeler,cziegeler,18/Feb/09 17:15,18/Feb/09 17:43,14/Mar/19 02:47,18/Feb/09 17:28,,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"The ServiceReferenceImpl#compareTo() method currently directly casts the service ranking properties to Integer.
In Constants.java it reads:
	 * If the supplied property value is not of type
	 * <code>java.lang.Integer</code>, it is deemed to have a ranking value
	 * of zero.
therefore I think we should check the type before casting and assume a ranking of zero if the type is not integer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-18 17:22:31.301,,,no_permission,,,,,,,,,,,58042,,,Wed Feb 18 17:43:00 UTC 2009,,,,,,0|i1419j:,231667,,,,,,,,"18/Feb/09 17:22;rickhall;Yes, you are probably correct.","18/Feb/09 17:28;rickhall;I have applied a patch in trunk to address this, please close this issue if you are satisfied. Thanks.","18/Feb/09 17:35;cziegeler;I removed the spurious casts to Integer and then this looks great :)

Thanks!","18/Feb/09 17:43;rickhall;D'oh! Yes, you are correct. Thanks for reviewing it.",,,,,,,,,,,,,,,,,,,,,,,
Behaviour of startlevel comman doesn't adhere to spec,FELIX-947,12415068,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,megamac,megamac,18/Feb/09 16:13,04/Mar/09 09:37,14/Mar/19 02:47,18/Feb/09 16:34,framework-1.4.1,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"I have a bundle installed, that has set it's bundlelevel to 2, and always throws an execption in the BundleActivator.start() method.
If i am in startlevel 1, and issue the shell-command 'startlevel 2', the framework tries to start the bundle and logs an ERROR, as expected.
However, if i now (being already in startlevel 2) repeat the command  'startlevel 2', the framework again tries to start the bundle and repeatedly logs an ERROR. 

This behaviour violates the core-spec, which states in §8.2.2 : 
If the requested start level is the active start level, the Framework will not start or stop any bundles.
",,,,,,,,,,,,,,,,,,,,18/Feb/09 16:18;megamac;Felix.java.patch;https://issues.apache.org/jira/secure/attachment/12400426/Felix.java.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-18 16:34:20.256,,,no_permission,,,,,,,,,,,58043,,,Wed Mar 04 09:37:12 UTC 2009,,,,,,0|i1aqz3:,270836,,,,,,,,18/Feb/09 16:18;megamac;This patch against the SVN HEAD (Rev 745200) fixes the problem.,18/Feb/09 16:34;rickhall;I applied the patch. Thanks for reporting it. Please close this issue if you are satisfied with the result.,04/Mar/09 09:37;megamac;Behavious is now as stated by the spec.,,,,,,,,,,,,,,,,,,,,,,,,
Fix Whiteboard pattern handler symbolic name,FELIX-944,12414861,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,16/Feb/09 10:34,29/Jul/09 08:03,14/Mar/19 02:47,16/Feb/09 11:12,iPOJO-1.2.0,,,,,,,,,,iPOJO-1.4.0,,,,iPOJO,,,,,,,0,,,,,,The whiteboard pattern handler symbolic name is not consistent with the others symbolic names.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58046,,,Wed Jul 29 08:03:00 UTC 2009,,,,,,0|i14193:,231665,,,,,,,,16/Feb/09 11:12;clement.escoffier;Fixed in the revision 744882,29/Jul/09 08:03;clement.escoffier;Fixed in the iPOJO-1.4.0 version.,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall starts a stopped bundles even if it is stopped transiently by user,FELIX-938,12414763,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,sahoo,sahoo,13/Feb/09 17:51,08/Sep/09 13:19,14/Mar/19 02:47,18/Aug/09 16:22,,,,,,,,,,,fileinstall-0.9.2,fileinstall-2.0.0,,,File Install,,,,,,,0,,,,,,"Configure File Install to watch a directory. Add some bundles there. File Install will install and start them. Now, using Felix shell or some other utility, stop one of these bundles, wait for File Install to loop again. You shall notice that File Install will start the bundle again. I think this behavior is not desirable. if user has explicitly stopped a bundle, why should File Install start it immediately? In act, there is no way to stop a bundle other than removing it from watched directory. Removing a bundle from watched dir may not always be practical because of file system permission issues. So, I think File Install should not automatically restart a stopped bundle, at least not in the same framework instance.",generic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-20 09:53:25.383,,,no_permission,,,,,,,,,,,58052,,,Tue Aug 18 16:22:08 UTC 2009,,,,,,0|i0w00n:,184808,,,,,,,,"20/Feb/09 09:53;pkriens;Same comments as in other bug report. I think you do not use File Install as intended. The primary idea of FI was that you have a directory and what is in there is running in your system. If it fails for some reason, you attempt to start it again. The advantage of this model is that you can incrementally drop bundles in there until you get no more errors. I think it is very confusing that there is a bundle in the watched directory and it is not started.

So whatever you do, please do not change the original behavior. I have no problem if you add some configuration flag for a directory that is watched that it should not attempt to start it, but I would not like to loose the current behavior. Are you sure you need File Install? It sounds more that you want a method to just install and start bundles from a directory and get going?","20/Feb/09 11:23;kkoehler;Hi

by the way, there is a property to define auto start behaviour for new installed bundles via fileinstall (svn trunk, not sure if it available in felix 1.4.1):

felix.fileinstall.bundles.new.start

Default value is true

Kristian","20/Feb/09 13:23;sahoo;Peter,

How do you expect user to stop a bundle that's part of watchedDir temporarily? As I said, removing it from watchedDir is not always an option in a secured environment. 

What I need is a management agent that installs & optionally starts bundles from one or more directories and subsequently watch those directories for changes. If a user stops a bundle in the running system, the system should not automatically start it. So, I thought fileinstall would do the job. 

Kristian,

Yes, I know about felix.fileinstall.bundles.new.start. I was the one who supplied the patch to introduce that property.

Sahoo","02/Mar/09 15:15;rickhall;Committed patch to address this, please close.",24/Mar/09 10:55;sahoo;Thanks Richard for committing the patch. I am closing the issue.,"18/Aug/09 07:43;gnt;As discussed in FELIX-1482, the bundles are all started instead of starting only the one that needs to be.","18/Aug/09 16:22;gnt;URL: http://svn.apache.org/viewvc?rev=805479&view=rev
Log:
FELIX-938: fileinstall try to start too many bundles

Modified:
   felix/trunk/fileinstall/src/main/java/org/apache/felix/fileinstall/DirectoryWatcher.java
",,,,,,,,,,,,,,,,,,,,
FileInstall can't handle autostart bundles that are part of watched directory,FELIX-937,12414762,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,13/Feb/09 17:42,24/Mar/09 10:55,14/Mar/19 02:47,02/Mar/09 15:15,,,,,,,,,,,fileinstall-0.9.2,,,,File Install,,,,,,,0,,,,,,"Let's say you configure File Install to watch directory /tmp/modules and there is a bundle called /modules/foo.jar which is specified as an autostart bundle. In Felix's config.properties, autostart bundles are specified using URLs (file:///modules/foo.jar in this case) which is internally used as the location of the bundle as well. On the other hand, File Install uses ""absolute path"" (/modules/foo.jar in this case) as the location. As a result, when File Install tries to install the same bundle, it gets the following error:

INFO: failed to install/start bundle: : org.osgi.framework.BundleException: Could not create bundle object.
This is caused by org.osgi.framework.BundleException: Bundle symbolic name and version are not unique.
",generic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-20 09:50:02.533,,,no_permission,,,,,,,,,,,58053,,,Tue Mar 24 10:55:09 UTC 2009,,,,,,0|i0w0ov:,184917,,,,,,,,"20/Feb/09 09:50;pkriens;I think the problem is that there should be no overlap so the error is what you want.

The purpose of FileInstall is to act as a manager. That is, you reuse the operating systems file management tools (which are usually terrific: drag and drop, shell, wildcard) to manage your bundle. The power is that it is very simple to understand. I think you will make file install a lot more murky when you start making it handle other management agents.  ","20/Feb/09 13:06;sahoo;Peter,

I like to keep all the bundles including fileinstall in one directory. I am sure many people do so. Since I configure the framework to autostart fileinstall bundle, I get an exception in every loop of the fileinstall when it tried to install itself again. So, I thought it would be a good idea to identify a problematic bundle and not try to install it again and again. Of course, we can configure fileinstall to try ""N"" times before giving up and the default can be infinite to make it behave like the old one. Is this what you want? 

Sahoo","20/Feb/09 15:59;rickhall;I have been toying with the idea of using File Install as a new Felix launcher of sorts, so the ability to auto-start File Install and have it in the same directory as the other bundles it manages without erroring, sounds like a good idea to me.","20/Feb/09 20:27;fdiotalevi;I actually tried the same thing that Richard and Sahoo describe... autostarting fileinstall from the bundle directory. As far as I am concerned, the patch would be welcome.","02/Mar/09 15:15;rickhall;Committed patch to address this, please close.",24/Mar/09 10:55;sahoo;Thanks Richard for committing the patch. I am closing the issue.,,,,,,,,,,,,,,,,,,,,,
Bootdelegation bug,FELIX-934,12414566,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,koszegir,koszegir,11/Feb/09 13:23,14/Feb/09 11:44,14/Mar/19 02:47,13/Feb/09 19:54,framework-1.4.1,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"Bootdelegation does not work as supposed in 1.4.1
Let's say I provide the following parameter at startup org.osgi.framework.bootdelegation=org.acme.foo.bar.*

Then the class org.acme.foo.bar.ClassA should be loaded by the boot classloader meanwhile org.acme.foo.ClassB should not, however currently both classes will be loaded by the boot classloader.

This is due to a bug in R4SearchPolicyCore with checking if the bootdelegation should be applied for a given package:
if ((m_bootPkgWildcards[i] &&
                    (pkgName.startsWith(m_bootPkgs[i]) ||
                    m_bootPkgs[i].regionMatches(0, pkgName, 0, pkgName.length())))
                    || (!m_bootPkgWildcards[i] && m_bootPkgs[i].equals(pkgName))) 

That is  m_bootPkgs[i].regionMatches(0, pkgName, 0, pkgName.length()) will pass for org.acme.foo if the bootdelegation is set for org.acme.foo.bar.* - but it should not!

Regards,
Robert",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-11 15:06:35.852,,,no_permission,,,,,,,,,,,58056,,,Sat Feb 14 11:44:12 UTC 2009,,,,,,0|i1414v:,231646,,,,,,,,"11/Feb/09 15:06;rickhall;Yes, you are correct. The condition should have been:

    if ((m_bootPkgWildcards[i] &&
        (pkgName.startsWith(m_bootPkgs[i]) ||
        pkgName.regionMatches(0, m_bootPkgs[i], 0, m_bootPkgs[i].length() - 1)))
        || (!m_bootPkgWildcards[i] && m_bootPkgs[i].equals(pkgName)))

This correctly checks for subpackages with ""startsWith()"" or an exact match of a wildcarded package with ""regionMatches()"".

Please close this bug if you are satisfied and thanks for reporting it!","13/Feb/09 13:09;koszegir;I tested the solution on 1.4.1 and it is not a 100% fix. 

The condition pkgName.regionMatches(0, m_bootPkgs[i], 0, m_bootPkgs[i].length() - 1))) will pass for any javax.pakagename because java. is always in the bootdelegation array - the result is that all javax packages will be bootdelegated, but they should not. 

The correct condition in my opinion is:
pkgName.regionMatches(0, m_bootPkgs[i], 0, m_bootPkgs[i].length())))  

The -1 in the length calculation excluded the trailing period allowing unwanted matches.

This is true for explicitly defined bootdelegations as well : if com.foo.* is bootdelegated then com.foobar will be as well.

Regards,
Robert","13/Feb/09 15:26;rickhall;You are right, my fix is not complete, but your suggestion is also not correct. See? It isn't so easy. ;-)

Your fix will not match package ""foo"" against ""foo.*"", since it will compare ""foo"" to ""foo."", which is the case my original patch is trying to get. The mistake I made, is that we only want to do the regionMatches() if the package names are the same length, otherwise we get the bug you discovered (i.e., my original fix matches ""foo"" with ""foo."", but also ""foop"" with ""foo."").

So, the actual fix should be:

                if ((m_bootPkgWildcards[i] &&
                    (pkgName.startsWith(m_bootPkgs[i]) ||
                    ((pkgName.length() == m_bootPkgs[i].length() - 1) &&
                        pkgName.regionMatches(0, m_bootPkgs[i], 0, m_bootPkgs[i].length() - 1))))
                    || (!m_bootPkgWildcards[i] && m_bootPkgs[i].equals(pkgName)))

You can see here that we only do the regionMatches() if the two package names are the same length (ignoring the dot). Whew!

Thanks for double checking this...feel free to triple check! :-)","13/Feb/09 19:54;rickhall;Forgot to resolve. Robert, please close if satisfied.","14/Feb/09 11:44;koszegir;I had a feeling it is not so simple as I thought :)

I am happy with the solution. Issue is closed.

Regards,
Robert",,,,,,,,,,,,,,,,,,,,,,
FileInstall does not read all values from Configuration properties,FELIX-926,12414298,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,sahoo,sahoo,07/Feb/09 10:29,13/Feb/09 17:27,14/Mar/19 02:47,11/Feb/09 21:30,,,,,,,,,,,fileinstall-0.9.2,,,,File Install,,,,,,,0,,,,,,"In DirectoryWatcher.java, felix.fileinstall.poll and felix.fileinstall.debug values are read using context.getProperties(). Instead they should be read from the properties object passed by Configuration Admin service.",generic,,,,,,,,,,,,,,,,,,,09/Feb/09 20:55;fdiotalevi;Felix926.patch;https://issues.apache.org/jira/secure/attachment/12399855/Felix926.patch,11/Feb/09 13:39;fdiotalevi;Felix926_v2.patch;https://issues.apache.org/jira/secure/attachment/12400018/Felix926_v2.patch,11/Feb/09 22:05;fdiotalevi;Felix926_v3.patch;https://issues.apache.org/jira/secure/attachment/12400048/Felix926_v3.patch,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2009-02-09 15:13:48.353,,,no_permission,,,,,,,,,,,58063,,,Fri Feb 13 17:27:23 UTC 2009,,,,,,0|i1aqaf:,270725,,,,,,,,09/Feb/09 15:13;rickhall;I briefly talked with Peter about this and he thought it sounded reasonable. Someone want to take a crack at a patch?,"09/Feb/09 20:55;fdiotalevi;Properties are all loaded from the Dictionary object in the patch.

A small modification in the FileInstall (activator) start method also: I added a line to set the START_NEW_BUNDLES from the context properties at startup, in the same way the other properties are handled.",11/Feb/09 13:39;fdiotalevi;Updated patch (to revision 743334).,"11/Feb/09 21:30;rickhall;Filippo, for your second patch, you didn't grant us the right to use it (by checking the one box when you create an attachment). I just manually applied the changes from the first patch. Thanks. Sahoo, please close this issue if you are satisfied.","11/Feb/09 22:03;fdiotalevi;Code is not compiling. 

DirectoryWatcher.java, Line 546, it should be
String value = (String) properties.get(property);
instead of
String value = (String) properties.getProperty(property);

Patch attached",11/Feb/09 22:41;rickhall;My bad. Another example of why you should always try to compile before committing. It is fixed now. Thanks.,"13/Feb/09 17:27;sahoo;issue resolved, closing the same.",,,,,,,,,,,,,,,,,,,,
Relative redirect on config page does not work in WebSphere,FELIX-918,12414094,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,05/Feb/09 11:13,05/Feb/09 14:55,14/Mar/19 02:47,05/Feb/09 14:55,webconsole-1.2.2,,,,,,,,,,webconsole-1.2.8,,,,Web Console,,,,,,,0,,,,,,"The redirect in the config page is done relativ. All servers except WebSphere handle this redirect relative to the redirect of the current request. WebSphere
handles this relative to the web context.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58071,,,Thu Feb 05 14:55:25 UTC 2009,,,,,,0|i0w0d3:,184864,,,,,,,,05/Feb/09 14:55;cziegeler;I'Ve added a helper method in revision 741116 which makes a relative redirect server absolute.,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade QDox dependency for maven-scr-plugin to 1.8,FELIX-917,12414015,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,david.illsley,david.illsley,04/Feb/09 17:39,05/Feb/09 23:29,14/Mar/19 02:47,04/Feb/09 19:05,maven-scr-plugin-1.0.8,,,,,,,,,,maven-scr-plugin-1.0.10,,,,SCR Tooling,,,,,,,0,,,,,,"I'm having problems using maven-scr-plugin due to QDOX-114 [1]

maven-scr-plugin currently depends on QDox 1.6.3 which includes a problem parsing classes containing code like
int i = 0x1 <<1

It results in an exception beig thrown in the maven-scr-plugin execution and the build failing.

This is fixed in later versions of QDox. See [2] for a list of changes from 1.6.3.

I tried a local modification of the plugin using 1.8 and the problem I was experiencing was fixed.

Thanks,
David

[1] http://jira.codehaus.org/browse/QDOX-114
[2] http://jira.codehaus.org/browse/QDOX?report=com.atlassian.jira.plugin.system.project:changelog-panel",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-04 19:05:12.873,,,no_permission,,,,,,,,,,,58072,,,Thu Feb 05 23:29:57 UTC 2009,,,,,,0|i1411b:,231630,,,,,,,,"04/Feb/09 19:05;cziegeler;I've updated the qdox version to the latest release 1.8; some quick tests with my projects didn't reveal any problems.
Could you please check if your problem is solved and then close this bug?

Thanks",04/Feb/09 19:09;cziegeler;Correct component,"05/Feb/09 18:02;david.illsley;Yes, your fix corrected the problem. I'd prefer to not close the issue until the change is available at least in the snapshot repo as until that time I can't commit changes to Axiom to use the plugin.
Thanks for your quick fix,
David",05/Feb/09 19:19;cziegeler;I've deployed a snapshot; so I'll close the bug. Thanks for the feedback,"05/Feb/09 23:29;david.illsley;Excellent, thanks.",,,,,,,,,,,,,,,,,,,,,,
Web Console does not start if the org.osgi.service.log package is missing,FELIX-916,12413945,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,03/Feb/09 20:51,04/Mar/09 13:42,14/Mar/19 02:47,03/Feb/09 20:53,webconsole-1.2.2,,,,,,,,,,webconsole-1.2.8,,,,Web Console,,,,,,,0,,,,,,"The Logger class requires the LogService class just to register the ServiceTracker. This is of course wrong. By just using a String constant, the Web Console can perfectly run without an LogService.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-04 13:42:55.197,,,no_permission,,,,,,,,,,,58073,,,Wed Mar 04 13:42:55 UTC 2009,,,,,,0|i0vzuv:,184782,,,,,,,,"03/Feb/09 20:53;fmeschbe;Implemented then String constant approach in Rev. 740435.

Keeping open waiting for feedback.",04/Mar/09 13:42;cziegeler;Closing for release,,,,,,,,,,,,,,,,,,,,,,,,,
PackageAdmin returns null on getBundle(...) with system classes,FELIX-915,12413859,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,angelovds,angelovds,03/Feb/09 08:55,03/Feb/09 16:19,14/Mar/19 02:47,03/Feb/09 15:40,framework-1.4.1,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"When calling getBundle(clazz) on the PackageAdmin with a class from one of the system packages, the system bundle should be returned. In stead, PackageAdmin now returns null.
This applies not only to the 'standard' system classes (e.g., BundleContext or PackageAdmin), but also to packages in org.osgi.framework.system.packages.extra.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-03 15:31:39.464,,,no_permission,,,,,,,,,,,58074,,,Tue Feb 03 16:19:40 UTC 2009,,,,,,0|i1aqbj:,270730,,,,,,,,"03/Feb/09 15:31;rickhall;Yes, for some reason the code doing this was removed between 1.2.2 and 1.4.0. I am not sure why, perhaps it was causing another issue. I will look into it.","03/Feb/09 15:40;rickhall;Ok, I committed a fix and ran it against the TCK and we still pass all of the normal tests, so I am not sure why it was removed, but it is back now. Please see if it makes a difference for you. Thanks.","03/Feb/09 16:19;angelovds;Working correctly now, thanks!",,,,,,,,,,,,,,,,,,,,,,,,
Stopping remote shell bundle does not close existing sessions,FELIX-914,12413760,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,02/Feb/09 07:23,02/Feb/09 08:29,14/Mar/19 02:47,02/Feb/09 08:29,shell.remote-1.0.2,,,,,,,,,,shell.remote-1.0.4,,,,Remote Shell,,,,,,,0,,,,,,"When the Remote Shell bundle is stopped, the listener thread is stopped, but any threads currently handling remote shell connections are
not stopped. If such connections receive commands, they cause NullPointerExceptions (since the service is not available any more due to
the bundle stop) and the remote end seems to hang.

The right handling would be to terminate any remote handling threads and to close the respective connections.

This would also clean up the threads and allow for proper garbage collection in case of bundle uninstallation or upgrade.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58075,,,Mon Feb 02 08:29:55 UTC 2009,,,,,,0|i1418f:,231662,,,,,,,,"02/Feb/09 08:29;fmeschbe;Implemented in Rev 739941: All remote shell connections are registered when started and unregistered when terminated. When the remote shell bundle is stopped, all remote shell connections still registered are closed down to ensure the bundle is properly stopped and can be garbage collected.",,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException thrown on startup due to OsgiManager trying to unregister a not yet registered resource,FELIX-913,12413680,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,fmeschbe,wimpi,wimpi,31/Jan/09 02:07,04/Mar/09 13:43,14/Mar/19 02:47,01/Feb/09 10:09,webconsole-1.2.2,,,,,,,,,,webconsole-1.2.8,,,,Web Console,,,,,,,0,,,,,,"ERROR root  - ResourceModel{id=org.ops4j.pax.web.service.internal.model.ResourceModel-3,urlPatterns=[/system/console/res/*],alias=/system/console/res,servlet=org.ops4j.pax.web.service.internal.ResourceServlet@1bcb7c74,initParams={},context=ContextModel{,id=org.ops4j.pax.web.service.internal.model.ContextModel-1,name=,httpContext=org.apache.felix.webconsole.internal.servlet.OsgiManagerHttpContext@1d489e0e,contextParams={}}} was not found
java.lang.IllegalStateException: ResourceModel{id=org.ops4j.pax.web.service.internal.model.ResourceModel-3,urlPatterns=[/system/console/res/*],alias=/system/console/res,servlet=org.ops4j.pax.web.service.internal.ResourceServlet@1bcb7c74,initParams={},context=ContextModel{,id=org.ops4j.pax.web.service.internal.model.ContextModel-1,name=,httpContext=org.apache.felix.webconsole.internal.servlet.OsgiManagerHttpContext@1d489e0e,contextParams={}}} was not found
	at org.ops4j.pax.web.service.internal.JettyServerImpl.removeServlet(JettyServerImpl.java:217)
	at org.ops4j.pax.web.service.internal.ServerControllerImpl$Started.removeServlet(ServerControllerImpl.java:219)
	at org.ops4j.pax.web.service.internal.ServerControllerImpl.removeServlet(ServerControllerImpl.java:95)
	at org.ops4j.pax.web.service.internal.HttpServiceStarted.unregister(HttpServiceStarted.java:230)
	at org.ops4j.pax.web.service.internal.HttpServiceProxy.unregister(HttpServiceProxy.java:69)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager.unbindHttpService(OsgiManager.java:594)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager.updateConfiguration(OsgiManager.java:720)
	at org.apache.felix.webconsole.internal.servlet.ConfigurationListener.updated(ConfigurationListener.java:57)

Thrown on a clean startup; subsequently the webconsole is completely broken.

Probably the environment plays a role in this issue, nonetheless, the OsgiManager should probably never try to unregister something it didn't register in first place.

","org.eclipse.osgi_3.4.2.R34x_v20080826-1230
org.eclipse.equinox.cm_1.0.0.v20080509-1800
org.ops4j.pax.web.service_0.5.1
org.apache.felix.webconsole_1.2.2

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-31 19:09:43.15,,,no_permission,,,,,,,,,,,58076,,,Wed Mar 04 13:43:24 UTC 2009,,,,,,0|i0vwbz:,184211,,,,,,,,"31/Jan/09 19:09;fmeschbe;You are completely right, this code is wrong -- it should be more clever to not try to unregister if not registered.

As a workaround you might want to start the configuration admin service after the web console (just so you have a working console for now)","01/Feb/09 10:09;fmeschbe;Applied a fix to Rev. 739726.

Also deployed a SNAPSHOT version 1.2.3-20090201.100544-4 containing this fix.

Can you please verify the fix and close this issue if your problem is solved ? Thanks alot.","04/Feb/09 06:58;wimpi;While the web-console is now working, the exception is still thrown and reported at WARN level in the log:

2009-02-04 00:48:01,504 [ManagedService Update Queue] WARN  root  - unbindHttpService: Failed unregistering Resources
java.lang.IllegalStateException: ResourceModel{id=org.ops4j.pax.web.service.internal.model.ResourceModel-3,urlPatterns=[/system/console/res/*],alias=/system/console/res,servlet=org.ops4j.pax.web.service.internal.ResourceServlet@7c271d34,initParams={},context=ContextModel{,id=org.ops4j.pax.web.service.internal.model.ContextModel-1,name=,httpContext=org.apache.felix.webconsole.internal.servlet.OsgiManagerHttpContext@5fa52ad1,contextParams={}}} was not found
	at org.ops4j.pax.web.service.internal.JettyServerImpl.removeServlet(JettyServerImpl.java:217)
	at org.ops4j.pax.web.service.internal.ServerControllerImpl$Started.removeServlet(ServerControllerImpl.java:219)
	at org.ops4j.pax.web.service.internal.ServerControllerImpl.removeServlet(ServerControllerImpl.java:95)
	at org.ops4j.pax.web.service.internal.HttpServiceStarted.unregister(HttpServiceStarted.java:230)
	at org.ops4j.pax.web.service.internal.HttpServiceProxy.unregister(HttpServiceProxy.java:69)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager.unbindHttpService(OsgiManager.java:625)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager.updateConfiguration(OsgiManager.java:765)
	at org.apache.felix.webconsole.internal.servlet.ConfigurationListener.updated(ConfigurationListener.java:57)






",04/Mar/09 13:43;cziegeler;Close for release,,,,,,,,,,,,,,,,,,,,,,,
Potential deadlock between Bundle.stop() and BundleContext.registerService(),FELIX-911,12413602,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmeschbe,fmeschbe,30/Jan/09 10:11,02/May/13 02:29,14/Mar/19 02:47,06/Feb/09 18:26,framework-1.0.0,framework-1.0.1,framework-1.0.3,framework-1.0.4,framework-1.2.0,framework-1.2.1,framework-1.2.2,framework-1.4.0,framework-1.4.1,framework-1.6.0,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"When a bundle tries to register a service (in thread T1) and the framework is at the same time stopping the bundle (in thread T2), it may be that thread T2 holds the bundle's lock. T1 trying to register the service is thus blocked since it cannot get the bundle lock.

This may cause a deadlock in Felix SCR, which also works with synchronized instances: T1 may be SCR Actor thread starting a component and registering a service and thus holding a lock on the component instance. T2 may be the StartLevel service trying to stop the bundle, which causes the SCR to immediately stop the component. Since the component is locked by T1, T2 cannot acquire the lock. But since T2 already has the bundle lock, T1 cannot continue.

The problem is, that in this concrete case it is the Component's activate() method which registers the service and not the SCR ComponentManager (the latter deadlock situation has been taken care of in FELIX-384).

Looking at the code of Felix.registerService it looks like we could check for the bundle state before holding the bundle lock (and we could recheck after
the lock just to be sure, if needed) and thus prevent the deadlock situation.",,,,,,,,,,,,,,,,,,,,30/Jan/09 10:16;fmeschbe;FELIX-911.patch;https://issues.apache.org/jira/secure/attachment/12399110/FELIX-911.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-01-30 10:22:54.163,,,no_permission,,,,,,,,,,,58078,,,Fri Feb 06 19:24:22 UTC 2009,,,,,,0|i0vxzj:,184479,,,,,,,,"30/Jan/09 10:16;fmeschbe;Proposed patch: Do the check before and after getting the bundle lock. Check before to fail early and check after to be sure, there was no bundle state change.","30/Jan/09 10:22;karlpauls;We are currently reworking parts of the locking stuff around bundles in trunk. So perfect timing :-) 

I will discuss this with richard. I assume you tested your patch and it did make a difference, right?","30/Jan/09 12:59;fmeschbe;Yes, I tested it and I get an IllegalStateException now, which is then handled in the component code, which tries to register. Next the component lock is released in SCR Actor Thread T1 and the StartLevel service can continue with the shutdown in T2.","02/Feb/09 16:37;rickhall;The main issue with the patch is that it only narrows the possibility of a deadlock. I think I have an idea on how we could eliminate it in this situation, so I will try to look into it this week.

The main gist is to have threads waiting for bundle locks get notified whenever the bundle state changes so they can check to see if the bundle is in the state they need and fail if it isn't. In your example, the registering thread would need the bundle to be active, when it was notified that the stopping thread caused the bundle's state to become stopping, it would return a failure for the register operation.","02/Feb/09 19:06;fmeschbe;> The main issue with the patch is that it only narrows the possibility of a deadlock.

Unfortunately, yes.

> I think I have an idea on how we could eliminate it in this situation, so I will try to look into it this week.

Cool. Thanks.
","06/Feb/09 18:26;rickhall;I have committed a patch that causes threads waiting for a bundle lock to evaluate the state of the bundle they are trying to lock and fail if the state changes in an incompatible way. I think this should address this bug, since a thread waiting to register a service will now fail if the bundle switches to the STOPPING state. Please close this issue if you are satisfied.",06/Feb/09 19:24;fmeschbe;Thanks alot. This looks good to me and it also works in my tests.,,,,,,,,,,,,,,,,,,,,
Framework may ignore framework startlevel on startup,FELIX-910,12413596,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmeschbe,fmeschbe,30/Jan/09 08:11,31/Jan/09 18:58,14/Mar/19 02:47,31/Jan/09 00:59,framework-1.6.0,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"When calling the Felix.start() method, a check is done, whether the init method must be called. After that, the state is checked again to see whether it is STARTING and hence the framework target startlevel should be set according to the org.osgi.framework.startlevel property:

            final int state = getState();
            if ((state == Bundle.INSTALLED) || (state == Bundle.RESOLVED)) {
                init();
            }

            if (state == Bundle.STARTING) {
                ....

Unfortunately this code is broken, since the state variable is still INSTALLED or RESOLVED after the init() method has been called even though the actual state really is STARTING.

A workaround for client code encountering this issue, is to call the init() method itself as in :

    Felix felix = new Felix(map);
    felix.init();
    felix.start();",,,,,,,,,,,,,,,,,,,,30/Jan/09 08:14;fmeschbe;FELIX-910.patch;https://issues.apache.org/jira/secure/attachment/12399104/FELIX-910.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-01-31 00:59:13.887,,,no_permission,,,,,,,,,,,58079,,,Sat Jan 31 18:58:30 UTC 2009,,,,,,0|i0vzzz:,184805,,,,,,,,30/Jan/09 08:14;fmeschbe;Proposed patch: The state variable is not final again and set to the actual state after calling the init() method.,"31/Jan/09 00:59;rickhall;I committed a variant of your patch. There was no need to play around with getting the value since we were holding the lock the entire time, so I just changed the patch to just use method calls. I think this was just a refactoring omission.",31/Jan/09 18:58;fmeschbe;Thanks alot.,,,,,,,,,,,,,,,,,,,,,,,,
Regression in latest BND code: negated exports are applied to private packages,FELIX-907,12413523,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pkriens,mcculls,mcculls,29/Jan/09 11:00,12/Mar/09 08:05,14/Mar/19 02:47,02/Feb/09 10:04,,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The latest version of the Bnd Tool has a bug where it combines the Export-Package instructions with the Private-Package instructions:

        all.putAll(replaceWitInstruction(getHeader(EXPORT_PACKAGE),
                EXPORT_PACKAGE));

        all.putAll(replaceWitInstruction(getHeader(PRIVATE_PACKAGE),
                PRIVATE_PACKAGE));

this ordering means that any negated packages in Export-Package are erroneously applied to the list of packages in Private-Package.

For example, when you have instructions like the following:

  <Export-Package>!org.foo.internal.*,org.foo.*</Export-Package>
  <Private-Package>org.foo.internal.*</Private-Package>

the Bnd Tool will end up excluding the internal packages from the final bundle.

Reversing the statements to be:

        all.putAll(replaceWitInstruction(getHeader(PRIVATE_PACKAGE),
                PRIVATE_PACKAGE));

        all.putAll(replaceWitInstruction(getHeader(EXPORT_PACKAGE),
                EXPORT_PACKAGE));

appears to fix the problem, although you could then have problems with negated packages in the Private-Package affecting the Export-Package - but this is less likely.",,,,,,,,,,,,,,,,,,,,29/Jan/09 11:16;mcculls;FELIX-907-20090129.patch;https://issues.apache.org/jira/secure/attachment/12398994/FELIX-907-20090129.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-02 10:04:36.747,,,no_permission,,,,,,,,,,,58082,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i0vzzb:,184802,,,,,,,,29/Jan/09 11:16;mcculls;Proposed patch (this might not fix the problem completely),02/Feb/09 10:04;pkriens;I have fixed this in bnd-310. I have not used the given patch because it did not solve the problem in all cases (as you said). I now do them separately and then add the results. The tricky part was not to mess with the split package detecting logic.,12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,,,,,,,
Felix needs an RFC 126 EventHook,FELIX-906,12413459,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,bosschaert,bosschaert,28/Jan/09 14:43,09/Jun/09 14:31,14/Mar/19 02:47,08/Jun/09 15:22,,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"RFC 126 defines an EventHook that Felix needs to implement.

For more information see: http://www.osgi.org/download/osgi-4.2-early-draft2.pdf
Note that in this document the hook is called 'PublishHook'. It has since been renamed to EventHook.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-06 22:19:07.411,,,no_permission,,,,,,,,,,,58083,,,Mon Jun 08 15:22:05 UTC 2009,,,,,,0|i14133:,231638,,,,,,,,"28/Jan/09 15:30;bosschaert;Since there's not much point of using a FindHook (FELIX-905) without also using a PublishHook, I'm also looking at creating a patch for this one.",30/Jan/09 17:07;bosschaert;Patch for the EventHook (and FindHook) attached to FELIX-905.,"06/Mar/09 22:19;rickhall;Patch from FELIX-905 applied, see notes over there.","08/Jun/09 15:22;rickhall;Patches have been applied. Please close if satisfied, thanks.",,,,,,,,,,,,,,,,,,,,,,,
Felix needs an RFC 126 FindHook,FELIX-905,12413458,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,bosschaert,bosschaert,28/Jan/09 14:36,09/Jun/09 14:31,14/Mar/19 02:47,08/Jun/09 15:21,,,,,,,,,,,framework-2.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"RFC 126 defines a FindHook that Felix needs to implement.
For more information see: http://www.osgi.org/download/osgi-4.2-early-draft2.pdf",,,,,,,,,,,,,,,FELIX-906,,,,,01/Apr/09 15:55;bosschaert;hooks_servicefactory.patch;https://issues.apache.org/jira/secure/attachment/12404345/hooks_servicefactory.patch,30/Jan/09 17:06;bosschaert;rfc126_eventhook_findhook.patch;https://issues.apache.org/jira/secure/attachment/12399137/rfc126_eventhook_findhook.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-03-06 21:02:20.502,,,no_permission,,,,,,,,,,,58084,,,Tue Jun 09 14:31:08 UTC 2009,,,,,,0|i1412n:,231636,,,,,,,,28/Jan/09 14:44;bosschaert;I'm currently working on providing a patch for this.,"30/Jan/09 17:06;bosschaert;Attached is a patch that implements the FindHook and EventHook (the new name for the PublishHook).

I also wrote some unit tests for the more complex parts, but no unit tests for the really simple bits are included yet.
If the unit tests are going to be committed, I'll be more than happy to provide additional tests for the rest of the changes.

BTW I verified the behaviour of these hooks with the implementation in the Equinox trunk: the behaviour is consitent.","06/Mar/09 21:02;rickhall;I notice in the ServiceRegistry.addHooks() method, the m_eventHooks list is guarded by svcObj, but I assume this is a mistake and it should actually be guarded by m_eventHooks.","06/Mar/09 22:18;rickhall;David, I applied the patch. I made some minor modifications and one major modification. The major modification dealt with getting the hooks. The patch creates a new array each time there is a request for any hook. I modified it to return a collection backed by an array instead. Although, now I think I might have been over zealous, since I don't think my approach saves anything and could actually be worse.

Perhaps we can change it back to your original approach later or think of a better approach that doesn't require that we create new object instances, unless something has changed. Oh well. An ""A"" for effort. ;-)

We will keep these issues open, since the functionality isn't complete yet.","07/Mar/09 18:00;bosschaert;Great - thanks. 

We can talk about the array/collection thing when I've got the rest of the functionality done. I'm going to work on that soon.","01/Apr/09 15:55;bosschaert;The hooks_servicefactory.patch adds support for ServiceFactories to the RFC 126 hooks. It also includes unit tests.

Still to do for the hooks:
 - Bundle.getServicesInUse() support / ServiceReference.getUsingBundles() support for the hooks.
 - need to add ListenerHook.ListenerInfo.isRemoved() to support the final Service Registry Hooks APIs.
I'll sumbit separate patches for these things...",08/Jun/09 15:21;rickhall;I applied the patch. Please close this issue if satisfied. Thanks.,"09/Jun/09 11:18;bosschaert;Hi Richard,

Thanks for applying the patch. Something seems to have gone wrong with the following file though: 
http://svn.apache.org/repos/asf/felix/trunk/framework/src/test/java/org/apache/felix/framework/util/EventDispatcherTest.java

It has a size of 0 (zero). The patch contains some modifications to this file, but not the intention to wipe it out :)","09/Jun/09 14:19;rickhall;Actually, I remember what was going on here now. When we did the last release of the framework we had to delete this test case since it was not compatible with the new version of mocking library, which were changed to make things ""simpler"". We need a patch to bring the old test case up to speed.","09/Jun/09 14:31;bosschaert;Ok - makes sense. I'm happy to upgrade the test and submit a patch for it. Have created a separate JIRA for that: FELIX-1208
Also, we still need to implement ListenerHookInfo.isRemoved(). I've also added a separate JIRA for that: FELIX-1209

Closing this bug now.",,,,,,,,,,,,,,,,,
Version attribute missing from Import-Package on provided dependencies,FELIX-899,12413156,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,nairb774,nairb774,24/Jan/09 06:58,12/Mar/09 08:05,14/Mar/19 02:47,29/Jan/09 13:17,,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"I have been using and testing out the maven-bundle-plugin-1.5.0-20081205.125536-1 (SNAPSHOT) and ran across what I believe is a bug.

Suppose there is a project a:a:1.0.0-SNAPSHOT.  This project has a single class: a.a.A.  The bundle plugin has the following instructions:
<instructions>
	<_versionpolicy>[$${version;===;${@}},$${version;=+;${@}})</_versionpolicy>
	<Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
	<Export-Package>$${replace;${Bundle-SymbolicName};\W;.}.*;version=${project.version}</Export-Package>
</instructions>

This results in an Export-Package line of:
Export-Package: a.a;version=""1.0.0.SNAPSHOT""

So far so good.  Now suppose there is a project b:b:1.0.0-SNAPSHOT.  This project depends on a:a:1.0.0-SNAPSHOT (scope: provided) and the project also has a single class b.b.B which extends a.a.A.  The maven-bundle-plugin is given the same instructions as project a:a above.  The resulting Import-Package line is:
Import-Package: a.a,b.b;version=""[1.0.0,1.1)""

This is not what is expected.  What is expected is the following:
Import-Package: a.a;version=""[1.0.0,1.1)"",b.b;version=""[1.0.0,1.1)""

Digging into the code I found that in org.apache.felix.bundleplugin.BundlePlugin (trunk rev: 723704) in function ""protected Jar[] getClasspath( MavenProject currentProject ) throws ZipException, IOException"" line 708 reads:
final Collection artifacts = getSelectedDependencies( currentProject.getArtifacts() );

When the plugin is running ""currentProject.getArtifacts()"" returns an empty set.  This then causes the classpath not to be set properly when calling BND (none of the dependencies are available for reading their manifests).  I changed the line to use ""currentProject.getDependencyArtifacts()"" and the manifest for b:b was correct.

I am going to attach a file with two very simple projects which mirror what I have described here.","Maven version: 2.0.9
Java version: 1.6.0_11
OS name: ""linux"" version: ""2.6.25-gentoo-r7"" arch: ""amd64"" Family: ""unix""",,,,,,,,,,,,,,,,,,,24/Jan/09 06:59;nairb774;projects.tar.bz2;https://issues.apache.org/jira/secure/attachment/12398633/projects.tar.bz2,24/Jan/09 17:43;nairb774;projects2.tar.bz2;https://issues.apache.org/jira/secure/attachment/12398659/projects2.tar.bz2,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-01-24 08:27:16.461,,,no_permission,,,,,,,,,,,58090,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i0w1fz:,185039,,,,,,,,24/Jan/09 06:59;nairb774;Attached are the two projects I describe previously.,"24/Jan/09 08:27;niclas;I disagree that BND should ""guess"" the Import package version ranges. I think there is no ""normal case"". For you above, being a user of a.A has a very narrow version range due to the subclassing, but in many use cases a much wider version range are expected to work, and still yet for some projects even the exact dot dot release are needed. Unless you know the policies of the project, it is hard to predict a range that will actually work.

I think that there are some discussions going on in the OSGi community to formalize the range expectations, but right now, with all the third-party stff being bundlized, I think this feature will be more harming than helping.","24/Jan/09 17:43;nairb774;We can take version ranges out of the game -  just remove the ""<versionpolicy />"" instruction.  The projects2 file is the same concept as before with this modification.  I would expect in project b:b's pom for there to be the line:
Import-Package: a.a;version=""1.0"",b.b;version=""1.0""

However the following line is there instead:
Import-Package: a.a,b.b;version=""1.0""

All of this version range stuff misses the point.  The ""-classpath"" directive to BND is not being filled out with the dependencies from the pom.  Reading BND's documentation, it seems that the ""-classpath"" directive should be filled out with all the dependencies.

I take a look at the code in teh getClasspath() function mentioned previously and it has provisions for allowing compile, system, and provided scope dependencies onto BND's classpath directive.  The problem is that when this code is run, MavenProject.getArtifacts() is not returning anything.  To be honest I think this part might be a bug in maven, but due to the lack of javadoc it is hard to tell if this is the case.  This problem also exibits in maven 2.0.8 so I doubt it though.

What is expected to be on the classpath directive to BND?  This is the key question.","25/Jan/09 15:26;mcculls;IMHO the same classpath used to compile the project should be passed to BND. However, this appears to be harder than it should be in Maven because of the way it lazily discovers transitive dependencies (as this is computationally expensive). Maven provides a mojo setting for plugins that forces resolution of project dependencies to a certain scope phase (@requiresDependencyResolution). Without this setting a plugin gets the same dependency resolution as the previous plugin in the build, which could vary a lot depending on what plugins are configured in your POM.

Historically, @requiresDependencyResolution has always been set to ""runtime"" in the bundleplugin - which means that all compile and runtime dependencies will be resolved. Unfortunately this means that provided dependencies won't be resolved, and therefore won't be passed onto BND (see the note at the top of the bundleplugin docs: http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html).

For some weird reason Maven doesn't let you set @requiresDependencyResolution to ""provided"", which would be the obvious choice, but I've been looking into setting it to ""test"". This would bring in the complete classpath, but could break projects that depend on the original reduced classpath, which is why I've not yet made this change to 1.5.0-SNAPSHOT (although it is definitely planned).

FYI changing over to use ""getDependencyArtifacts()"" is definitely not a good idea, as this only provides *direct* project dependencies. It completely ignores any transitive dependencies. So while it works for your test POM, it would break most of the other POMs out there that rely on having the current transitive classpath.","25/Jan/09 18:43;nairb774;I missed that note on the docs, good call.  (NOTE: only compile, runtime and system scoped dependencies are passed to BND. Provided and test dependencies are not included in the classpath seen by BND.)  Looking at the code, it seems that only compile, system, and provided are allowed on the classpath (org.apache.felix.bundleplugin.BundlePlugin, trunk rev: 723704, lines 714-716).  Does the code and the doc disagree or am I missing somethig else?","26/Jan/09 16:57;lukewpatterson;What information is needed that can't be retrieved from MavenProject methods?

Are you looking for direct or transitive provided dependencies?

If looking for transitive, I've only found hacky ways to do that using DependencyNode and a cut-and-paste custom MavenMetadataSource and MavenMetadataSource.  Just let me know if you want me to send an example.

If looking for direct, is the problem that 
  * MavenProject.getArtifacts() isn't including provided dependencies 
  or 
  * the provided dependencies from MavenProject.getArtifacts() have Artifact.getFile() of null ?","27/Jan/09 02:11;mcculls;Brian - this check matches the core Maven code that assembles the compilation classpath artifacts (see getCompileArtifacts in MavenProject.java) because runtime artifacts by definition aren't used for compilation. So it's technically correct, but because of the complex interaction between this check and the lazy dependency I mentioned previously it means just compile (or default) and system scope artifacts currently reach BND. (ie. the docs shouldn't list runtime)

However, I'm also considering passing *all* jars to Bnd so it has the complete set of dependency information - the lack of these jars mostly means BND has a reduced set of version information, but it also stops people from inadvertently pulling in all sorts of classes when they use ""Export-Package: *"" and expect that to only include compile dependencies (which is why I discourage people from setting it to *).

The focus of the current release is all about sorting this out, while trying not to break too many projects - as well as making more jars available to BND, I'm also planning on improving the default settings so that just changing a project from ""jar"" to ""bundle"" packaging will result in the same content inside the final bundle.

Luke - I have a fairly good grasp of Maven internals and have written various code to get transitive dependencies before when I couldn't rely on the default resolution rules. The problem isn't that we don't know what to do, we've just been waiting for the right time in development to make this breaking change.

Actually this might turn out to be a 2.0.0 release, just to stress to people that there are major changes to how the bundleplugin processes the classpath.","27/Jan/09 04:09;lukewpatterson;Stuart wrote: ""I have a fairly good grasp of Maven internals and have written various code to get transitive dependencies before when I couldn't rely on the default resolution rules. The problem isn't that we don't know what to do...""

I'm certainly not trying to question anyone's competency/judgement.  I'm just trying to fully understand the dilemma at hand.  I'm interested in the future behavior because I hope to start using this plugin in my projects.

I tend to agree with your view that 
""IMHO the same classpath used to compile the project should be passed to BND.""

I don't understand why that goal isn't reachable.  Please correct me if I'm wrong, it seems you want the same thing that maven-compiler-plugin passes to javac.  (i.e. compile is included, runtime is excluded, direct provided is included, transitive provided is excluded)  Is that correct?

Also, I don't understand this code from BundlePlugin:
714 :  if ( Artifact.SCOPE_COMPILE.equals( artifact.getScope() )
715 : || Artifact.SCOPE_SYSTEM.equals( artifact.getScope() )
716 : || Artifact.SCOPE_PROVIDED.equals( artifact.getScope() ) )
717 : {
718 : File file = getFile( artifact );
719 : if ( file == null )
720 : {
721 : getLog().warn(
722 :	""File is not available for artifact "" + artifact + "" in project ""
723 :      + currentProject.getArtifact() );
724 : 	continue;
725 : 	 	} 
If the artifact file is null, it seems like it would be better to programmatically request resolution and fail build if it can't be resolved.  I think you could safely consider an unresolvable dependency to be an error.","27/Jan/09 04:40;mcculls;To recap: the current @requiresDependencyResolution setting means we don't get any provided scope artifacts resolved by Maven. This setting has been in place since this project started (before I took over) hence I've been wary in changing it. Several developers have tweaked this code over the years, adding checks like the warning on the missing file, but no-one has had any time to do a comprehensive review. Work on it recently has been mostly driven by JIRA issues.

But we do know what we want, which is to give Bnd more of the classpath, possibly even runtime artifacts - as this would be useful for versioning even if they're not required on the compilation classpath. We also know how to change the code to make this happen. What I'm currently trying to minimize is the impact on projects that might rely the old behaviour (this is definitely a non-zero number) - we need to provide them with a clear migration path.

Summary:  we know it needs fixing,  we know how to fix it,  we haven't yet fixed it        (hope to fix it Q1...)","27/Jan/09 05:09;lukewpatterson;Stuart wrote:
""IMHO the same classpath used to compile the project should be passed to BND.""
and
""But we do know what we want, which is to give Bnd more of the classpath, possibly even runtime artifacts - as this would be useful for versioning even if they're not required on the compilation classpath.""

It seems like those two statements above are at odds with each other.

When you say ""runtime artifacts"", do you literally mean artifacts declared with <scope>runtime</scope> or just optional compile dependencies (<optional>true</optional>)?  Maybe I just don't understand bnd well enough, how would passing runtime stuff to bnd be useful for versioning?
","27/Jan/09 05:26;mcculls;To be consistent with other uses of Bnd (Ant task, command-line) the minimum we need to pass to Bnd is the compilation classpath... but we could do better:

Bnd takes information from any JARs (version details, etc.) that the final bundle depends on and uses it to augment the OSGi metadata (specifically imports).
It doesn't really care whether it's a compile-time or run-time dependency (or even provided) - if the final bundle needs to import a package from another bundle, and it was built against a particular JAR with version information for that package, then it will apply that version to the import. Now because Bnd can detect certain indirect uses of packages, it could add imports for code that you don't need at compile time but would need at runtime - so runtime version information would be useful here too.

Now as Niclas pointed out at the start of this thread, you should really version imports yourself rather than rely on automatic versioning - but it's in our interest to give Bnd as much information about the classpath that the bundle was compiled against, as well as the potential runtime classpath. Excluding runtime artifacts just limits what Bnd knows about the project.","27/Jan/09 06:20;lukewpatterson;Good to know.  I would never have imagined bnd would find useful information from the runtime-only deps.

""Now because Bnd can detect certain indirect uses of packages, it could add imports for code that you don't need at compile time but would need at runtime""

I'm trying to imagine an example of that.  (I probably just don't understand all the scenarios where it would add imports)  My guess is that it would be for the situation where a class was interacted with exclusively through reflection.  If that's the case, on the Maven side the runtime dep is considered to be ""required"" anyway so I wonder why it wouldn't just be directly coded to instead of through reflection.  Like I said, I must be missing some fundamental background information in this area.


Where did you learn those finer details of what bnd is capable of?  I tried the usual, the bnd homepage, but it didn't explain exactly which scenarios package imports would and wouldn't be auto-detected.


Thanks,

Luke","27/Jan/09 22:44;nairb774;It seems that right now I have stepped on a part of the plugin which seems to be undergoing planning for improvement.  I took a quick poke around (2 min maybe), but is there a roadmap anywhere for upcoming versions?  I am willing to help knock out some of the planned improvements/write javadoc/unit tests if you would like the help.","28/Jan/09 14:16;mcculls;The current roadmap is here:

   https://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&mode=hide&sorter/order=DESC&sorter/field=priority&resolution=-1&pid=12310100&fixfor=12313302

One or two of the issues require a fix in the Bnd Tool itself, and there are several issues around generating better defaults for imports/exports/versioning. If you'd like to write some unit tests or patches then you're very welcome - basically my plan is to change the @requiresDependencyResolution setting in the various mojos to ""test"" instead of ""runtime"", widen the check on the artifacts passed to Bnd, and then test it against various builds (Felix, GlassFish, etc...)

Unfortunately the major issue I've had recently is finding a sizable enough chunk of spare time to do this :(","29/Jan/09 13:17;mcculls;This issue is now fixed in trunk, however I want to run through a few more tests before deploying a new snapshot",12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,
"Empty system package is exported when a semicolon is present in ""extra"" configuration",FELIX-897,12413067,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,pderop,pderop,23/Jan/09 07:52,23/Jan/09 16:28,14/Mar/19 02:47,23/Jan/09 16:03,framework-1.4.0,framework-1.4.1,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"Felix exports an empty system package when the felix ""extra"" configuration property starts with a semicolon.
For instance, with the following configuration 

org.osgi.framework.system.packages.extra=${jre-${java.specification.version}}

jre-1.5=; \
 com.sun.accessibility.internal.resources; \
 com.sun.beans; \
 ...

Then, Felix interprets the semicolon (the one after ""jre-1.5="") as an empty system package, which is exported to other bundles.
This may lead to tricky issues, especially for bundles using ""DynamicImport-Package: *"".

For instance, the following code returns null, when getting a resource from the bundle archive (and when there is 
""DynamicImport-Package: *"" in the manifest):

->

  InputStream in = getClass().getClassLoader().getResourceAsStream(""MyResource.properties"");
",linux/jdk1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-23 16:03:42.629,,,no_permission,,,,,,,,,,,58092,,,Fri Jan 23 16:28:56 UTC 2009,,,,,,0|i1aqd3:,270737,,,,,,,,"23/Jan/09 16:03;rickhall;I have committed a patch against the manifest parser to check for empty package names in both imports and exports, which will catch the situation in the system bundle as well as an other installed bundle. Pierre, if you could verify the fix and then close this issue it would be great. Thanks for reporting it.",23/Jan/09 16:28;pderop;The fix is OK. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle lock acquisition should not record lock until it verifies the bundle is lockable,FELIX-891,12412850,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,20/Jan/09 17:14,20/Jan/09 22:04,14/Mar/19 02:47,20/Jan/09 22:04,framework-1.4.1,,,,,,,,,,framework-1.6.0,,,,Framework,,,,,,,0,,,,,,"Felix 1.4.1 introduced a global bundle lock for multi-bundle refresh/resolve operations. The acquireBundleLock() was modified to record which bundles were holding bundle locks, but it does so improperly. As long as the global lock is free, it records the calling thread as acquiring its requested lock, then it checks to see if the bundle is actually lockable and waits until it is. It should not record the calling thread as acquiring its requested lock until after it verifies the bundle is lockable.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58098,,,Tue Jan 20 22:04:42 UTC 2009,,,,,,0|i0w0hb:,184883,,,,,,,,20/Jan/09 22:04;rickhall;Fixed in trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,
Configuration.getProperty returns a Dictionary which is not entirely private,FELIX-890,12412732,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,19/Jan/09 09:55,27/Jan/09 20:49,14/Mar/19 02:47,27/Jan/09 20:49,configadmin-1.0.4,configadmin-1.0.8,,,,,,,,,configadmin-1.0.10,,,,Configuration Admin,,,,,,,0,,,,,,"According to the specification of the Configuration.getProperties() method in 104.15.2.6, the dictionary returned ""is a private copy for the caller and may be changed without influencing the stored configuration"".

This is not currently the case for array and vector/collection properties: Updating the array or vector/collection is reflected in the internal data structure kept by the configuration manager because only the internal Dictionary is copied into a new Dictionary while the values are copied by reference.

Actually a full deep copy of the dictionary is required.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58099,,,Tue Jan 27 20:49:42 UTC 2009,,,,,,0|i1412f:,231635,,,,,,,,19/Jan/09 10:41;fmeschbe;In Rev. 735651 modified Configuraiton.getProperties() implementation such that not only the internal dictionary is copied but also any array and colleciton stored in the dictionary. In addition I added a number of testcases ensuring we really get deep copies.,"27/Jan/09 20:49;fmeschbe;Deep copy of properties is required and Vector (instead of Collection) should be returned.

This is now correctly implemented and this issue can be closed.",,,,,,,,,,,,,,,,,,,,,,,,,
Arrays of primitives not supported by Configuration Admin,FELIX-889,12412731,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,19/Jan/09 09:31,19/Jan/09 09:50,14/Mar/19 02:47,19/Jan/09 09:50,configadmin-1.0.4,configadmin-1.0.8,,,,,,,,,configadmin-1.0.10,,,,Configuration Admin,,,,,,,0,,,,,,"Code inspection and additional unit tests show, that the CaseInsensitiveDictionary used to store the configuration properties does not accept and support values of primitive array type.

The bug lies with the CaseInsensitiveDictionary.checkValue(), which checkes arrays with

    value instanceOf Object[]

which is never true for an array of primitive. The check must be whether the class of the value is an array type as in

    value.getClass().isArray()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58100,,,Mon Jan 19 09:50:12 UTC 2009,,,,,,0|i140vb:,231603,,,,,,,,"19/Jan/09 09:50;fmeschbe;Modified the value check to ensure arrays of primitives are recognized as arrays and thus are accepted. Previously primitive arrrys where not recognized and caused an IllegalArgumentException being thrown.

Fixed in Rev. 735640.",,,,,,,,,,,,,,,,,,,,,,,,,,
Saving a factory configuraiton instance creates a new instance instead of updating the old instance,FELIX-885,12412699,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,18/Jan/09 12:35,27/Jan/09 11:28,14/Mar/19 02:47,18/Jan/09 13:14,webconsole-1.2.2,,,,,,,,,,webconsole-1.2.8,,,,Configuration Admin,,,,,,,0,,,,,,"When modifying and saving an existing factory configuration instance in the web console, a new instance is created with the new configuraiton values instead of updating the actual existing configuraiton instance with the new values.

This behaviour has also been reported on the Sling Developers list [1]

[1] http://markmail.org/message/4zelcrodtfisqa5m",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58104,,,Fri Jan 23 20:45:23 UTC 2009,,,,,,0|i1410n:,231627,,,,,,,,"18/Jan/09 13:14;fmeschbe;The problem is the ConfigManager.getConfiguration(ConfigurationAdming, String, String) method which created a new factory configuration instance whenever factoryPid was not null. This is wrong, since a new instance should only be created if the pid is null or the placeholder pid used to create a temporary configuration instance used to build configuration form.

Applied fix in Rev. 735450 and deployed SNAPSHOT version 1.2.3-20090118.131353-3.

Keeping this issue open until I get feedback from the reporting user.","23/Jan/09 20:45;fmeschbe;User reported success, so this can be closed",,,,,,,,,,,,,,,,,,,,,,,,,
Stopping the Configuration Admin bundle causes a NullPointerException,FELIX-881,12412447,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,fmeschbe,fmeschbe,fmeschbe,15/Jan/09 08:45,15/Jan/09 09:48,14/Mar/19 02:47,15/Jan/09 09:02,configadmin-1.0.8,,,,,,,,,,configadmin-1.0.8,,,,Configuration Admin,,,,,,,0,,,,,,"When the Configuration Admin bundle is stopped a message is logged, which causes a NullPointerException:

ERROR: Error stopping bundle. (java.lang.NullPointerException) java.lang.NullPointerException
	at org.apache.felix.cm.impl.ConfigurationManager.log(ConfigurationManager.java:777)
	at org.apache.felix.cm.impl.UpdateThread.schedule(UpdateThread.java:113)
	at org.apache.felix.cm.impl.UpdateThread.terminate(UpdateThread.java:104)
	at org.apache.felix.cm.impl.ConfigurationManager.stop(ConfigurationManager.java:215)
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:611)
	at org.apache.felix.framework.Felix._stopBundle(Felix.java:2047)
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2004)
	at org.apache.felix.framework.Felix.setFrameworkStartLevel(Felix.java:1188)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:265)
	at java.lang.Thread.run(Thread.java:613)
ERROR: Error stopping file:/XXX/.m2/repository/org/apache/felix/org.apache.felix.configadmin/1.0.6/org.apache.felix.configadmin-1.0.6.jar (org.osgi.framework.BundleException: Activator stop error in bundle org.apache.felix.configadmin [30].)
java.lang.NullPointerException
	at org.apache.felix.cm.impl.ConfigurationManager.log(ConfigurationManager.java:777)
	at org.apache.felix.cm.impl.UpdateThread.schedule(UpdateThread.java:113)
	at org.apache.felix.cm.impl.UpdateThread.terminate(UpdateThread.java:104)
	at org.apache.felix.cm.impl.ConfigurationManager.stop(ConfigurationManager.java:215)
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:611)
	at org.apache.felix.framework.Felix._stopBundle(Felix.java:2047)
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2004)
	at org.apache.felix.framework.Felix.setFrameworkStartLevel(Felix.java:1188)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:265)
	at java.lang.Thread.run(Thread.java:613)

This is caused by the log method calling getReference() on  the configurationAdminRegistration field which has already been set to null",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58108,,,Thu Jan 15 09:48:08 UTC 2009,,,,,,0|i0vwcv:,184215,,,,,,,,"15/Jan/09 09:02;fmeschbe;Applied fixes in Rev. 734634 and 734635: The service reference is now to be retrieved using a getServiceReference() method which guards against the case where the service registration is already null. In addition the service registration field is cleared before the service is unregistered to prevent an IllegalStateExcetion in the getServiceReference() method in extreme cases, where the field is not null but the service has already been unregistered.",15/Jan/09 09:48;fmeschbe;Confirmed to work also by Clément Escoffier.,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceReference of ConfigurationEvent is null,FELIX-880,12412423,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,14/Jan/09 22:25,14/Jan/09 23:02,14/Mar/19 02:47,14/Jan/09 22:29,configadmin-1.0.4,,,,,,,,,,configadmin-1.0.8,,,,Configuration Admin,,,,,,,0,,,,,,"The ServiceReference field of the ConfigurationEvent must provide the ServiceReference of the ConfigurationAdmin service sending the event. This is currently null, because it refers to a field which is not set to a concrete value.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58109,,,Wed Jan 14 23:02:41 UTC 2009,,,,,,0|i0vyh3:,184558,,,,,,,,"14/Jan/09 22:29;fmeschbe;Using the ServiceRegistration to provide the ServiceReference instead of using the field, which is not set anyway.

Fixed in Rev. 734535.",14/Jan/09 23:02;fmeschbe;Fix is confirmed,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle startlevel of new bundle cannot be set from the bundle installation form,FELIX-874,12412183,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,12/Jan/09 11:19,12/Jan/09 11:23,14/Mar/19 02:47,12/Jan/09 11:23,webconsole-1.2.2,,,,,,,,,,webconsole-1.2.8,,,,Web Console,,,,,,,0,,,,,,"The bundle start level is intended to be set on the bundle update/installation form in the bundle page. This is not possible, though because the form field contains a typo: it reads

    bundlestartelevel

instead of

    bundlestartlevel",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58115,,,Mon Jan 12 11:23:36 UTC 2009,,,,,,0|i1417j:,231658,,,,,,,,12/Jan/09 11:23;fmeschbe;Fixed in Rev. 733690.,,,,,,,,,,,,,,,,,,,,,,,,,,
Server Stop should be Framework stop and does not work correctly,FELIX-873,12412176,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,12/Jan/09 08:42,12/Jan/09 09:55,14/Mar/19 02:47,12/Jan/09 09:55,webconsole-1.2.2,,,,,,,,,,webconsole-1.2.8,,,,Web Console,,,,,,,0,,,,,,"The ""System Information"" page of the web console allows to stop the framework (called the server currently). This is labeled as ""System: Stop"". It would probably be better to label this as ""Framework: Stop.""

Furhter the confirmation message talks about system instead of framework, which may also be confusing.

In addition, a button to cause the framework to be restarted by calling the update method on the system bundle would be a practical addition.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58116,,,Mon Jan 12 09:55:31 UTC 2009,,,,,,0|i1417b:,231657,,,,,,,,"12/Jan/09 08:51;fmeschbe;Looking at the code shows, that the actual implementation already does a stop call on the system bundle, but the GUI still says system stop. This should be fixed nevertheless.",12/Jan/09 09:14;fmeschbe;Renaming issue because System.exit is not actually called. But since the reordnization of the WebConsole for release 1.2.0 the mechanism does not actually work any more.,"12/Jan/09 09:55;fmeschbe;Implemented this enhancement in Rev. 733664.

The VMStatRender, ShutdownAction and ShutdownRender classes have been folded into the new VMStatPlugin. Now also framework restart is supported by calling update on the system bundle. When restarting the framework, the manager display will automatically reload the vmstat page after a delay of roughly ten seconds.",,,,,,,,,,,,,,,,,,,,,,,,
Bundle Repository page displays NullPointerException if no RepositoryAdmin service is available,FELIX-871,12411613,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,03/Jan/09 16:30,03/Jan/09 16:33,14/Mar/19 02:47,03/Jan/09 16:33,webconsole-1.2.0,webconsole-1.2.2,,,,,,,,,webconsole-1.2.8,,,,Web Console,,,,,,,0,,,,,,"The following Stacktrace is displayed if the Bundle Repository page (OSGi Repository) is addressed in case no RepositoryAdmin service is available:

java.lang.NullPointerException
	at org.apache.felix.webconsole.internal.obr.BundleRepositoryRender.listResources(BundleRepositoryRender.java:266)
	at org.apache.felix.webconsole.internal.obr.BundleRepositoryRender.render(BundleRepositoryRender.java:190)
	at org.apache.felix.webconsole.internal.servlet.RenderBridge.renderContent(RenderBridge.java:66)
	at org.apache.felix.webconsole.AbstractWebConsolePlugin.doGet(AbstractWebConsolePlugin.java:119)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:307)


The problem is that the listResources method is not correctly handling the situation of missing repositories.

Actually the page should display a not about missing RepositoryAdmin service in this case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58118,,,Sat Jan 03 16:33:52 UTC 2009,,,,,,0|i0vxyv:,184476,,,,,,,,03/Jan/09 16:33;fmeschbe;Fixed in Rev. 731016,,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO @Component don't support factory methods,FELIX-868,12411420,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,29/Dec/08 18:50,08/Feb/09 14:49,14/Mar/19 02:47,29/Dec/08 19:31,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,"iPOJO Component annotation does not allow configuring a factory method. However, it should be supported.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58121,,,Sun Feb 08 14:47:55 UTC 2009,,,,,,0|i1aqev:,270745,,,,,,,,"29/Dec/08 19:31;clement.escoffier;Fixed at revision 729971.
The Component annotation didn't support the factory methods. So, the 'factory_method' attribute was added to support the configuration of factory methods.
",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO @ServiceProperty can target method,FELIX-867,12411419,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,29/Dec/08 18:47,08/Feb/09 14:49,14/Mar/19 02:47,29/Dec/08 19:30,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,The iPOJO ServiceProperty annotation can target method. However this is not possible only @Property can target method. @ServiceProperty targets fields only.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58122,,,Sun Feb 08 14:47:54 UTC 2009,,,,,,0|i0vydj:,184542,,,,,,,,"29/Dec/08 19:30;clement.escoffier;Fixed at revision 729971.
The ServiceProperty annotation was able to target Method. However this is not possible. Service properties can only be attached to fields.
The ServiceProperty annotation can now target only fields.
",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO Provides 'interface' attribute should be 'specifications',FELIX-866,12411417,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,29/Dec/08 18:44,08/Feb/09 14:49,14/Mar/19 02:47,29/Dec/08 19:29,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,"iPOJO Provides element use the 'interface' word. However, to be consistent with iPOJO terminology, it should be 'specifications'
This attribute has the same semantic as 'interface'.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58123,,,Sun Feb 08 14:47:53 UTC 2009,,,,,,0|i1aqf3:,270746,,,,,,,,"29/Dec/08 19:29;clement.escoffier;Fixed at revision 729971
The 'interface attribute of the 'provides' element becomes 'specifications' The semantic doesn't change.
When using 'interface' a warning message is logged or printed.",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException on stopping bundle managed by SCR,FELIX-861,12411202,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,adreghiciu,adreghiciu,23/Dec/08 02:09,29/Dec/08 14:43,14/Mar/19 02:47,29/Dec/08 14:42,scr-1.0.6,,,,,,,,,,scr-1.0.8,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Situation (is about Pax Shell using SCR):

Bundle 1:
<component name='org.ops4j.pax.shell.threadio.internal.ThreadIOImpl'>
  <implementation class='org.ops4j.pax.shell.threadio.internal.ThreadIOImpl'/>
  <service>
    <provide interface='org.osgi.service.threadio.ThreadIO'/>
  </service>
</component>

Bundle 2:
<component name='org.ops4j.pax.shell.runtime.internal.CommandProcessorImpl'>
  <implementation class='org.ops4j.pax.shell.runtime.internal.CommandProcessorImpl'/>
  <service>
    <provide interface='org.osgi.service.command.CommandProcessor'/>
  </service>
  <reference name='threadIO' interface='org.osgi.service.threadio.ThreadIO' bind='setThreadIO' unbind='unsetThreadIO'/>

When I stop the bundle 1 I get the following exception:

ERROR: EventDispatcher: Error during dispatch. (java.lang.NullPointerException)
java.lang.NullPointerException
	at org.apache.felix.scr.impl.DependencyManager.getBindingMethod(DependencyManager.java:735)
	at org.apache.felix.scr.impl.DependencyManager.getBindingMethod(DependencyManager.java:794)
	at org.apache.felix.scr.impl.DependencyManager.invokeUnbindMethod(DependencyManager.java:932)
	at org.apache.felix.scr.impl.DependencyManager.unbind(DependencyManager.java:691)
	at org.apache.felix.scr.impl.ImmediateComponentManager.disposeImplementationObject(ImmediateComponentManager.java:296)
	at org.apache.felix.scr.impl.ImmediateComponentManager.deleteComponent(ImmediateComponentManager.java:150)
	at org.apache.felix.scr.impl.AbstractComponentManager.deactivateInternal(AbstractComponentManager.java:554)
	at org.apache.felix.scr.impl.AbstractComponentManager.deactivate(AbstractComponentManager.java:238)
	at org.apache.felix.scr.impl.DependencyManager.serviceRemoved(DependencyManager.java:242)
	at org.apache.felix.scr.impl.DependencyManager.serviceChanged(DependencyManager.java:124)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:765)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:623)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:554)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3566)
	at org.apache.felix.framework.Felix.access$200(Felix.java:37)
	at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:833)
	at org.apache.felix.framework.ServiceRegistry.fireServiceChanged(ServiceRegistry.java:559)
	at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:96)
	at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:118)
	at org.apache.felix.scr.impl.AbstractComponentManager.unregisterComponentService(AbstractComponentManager.java:715)
	at org.apache.felix.scr.impl.AbstractComponentManager.deactivateInternal(AbstractComponentManager.java:549)
	at org.apache.felix.scr.impl.AbstractComponentManager.deactivate(AbstractComponentManager.java:238)
	at org.apache.felix.scr.impl.DependencyManager.serviceRemoved(DependencyManager.java:242)
	at org.apache.felix.scr.impl.DependencyManager.serviceChanged(DependencyManager.java:124)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:765)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:623)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:554)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3566)
	at org.apache.felix.framework.Felix.access$200(Felix.java:37)
	at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:833)
	at org.apache.felix.framework.ServiceRegistry.fireServiceChanged(ServiceRegistry.java:559)
	at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:96)
	at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:118)
	at org.apache.felix.scr.impl.AbstractComponentManager.unregisterComponentService(AbstractComponentManager.java:715)
	at org.apache.felix.scr.impl.AbstractComponentManager.deactivateInternal(AbstractComponentManager.java:549)
	at org.apache.felix.scr.impl.AbstractComponentManager.disableInternal(AbstractComponentManager.java:579)
	at org.apache.felix.scr.impl.AbstractComponentManager.disposeInternal(AbstractComponentManager.java:616)
	at org.apache.felix.scr.impl.AbstractComponentManager.dispose(AbstractComponentManager.java:272)
	at org.apache.felix.scr.impl.ImmediateComponentManager.dispose(ImmediateComponentManager.java:120)
	at org.apache.felix.scr.impl.BundleComponentActivator.dispose(BundleComponentActivator.java:258)
	at org.apache.felix.scr.impl.Activator.disposeComponents(Activator.java:264)
	at org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:177)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:690)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:619)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:532)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3555)
	at org.apache.felix.framework.Felix._stopBundle(Felix.java:2039)
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2004)
	at org.apache.felix.framework.BundleImpl.stop(BundleImpl.java:418)
	at org.apache.felix.framework.BundleImpl.stop(BundleImpl.java:405)

","Felix 1.4.0, SCR 1.0.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-23 10:30:03.183,,,no_permission,,,,,,,,,,,58128,,,Mon Dec 29 14:43:10 UTC 2008,,,,,,0|i0w0kv:,184899,,,,,,,,"23/Dec/08 10:30;fmeschbe;It could be that the class loader of the target class is null here. This may be the case if the class has been loaded by the boot class loader. Therefore using the system class loader instead may help here:

Index: /usr/src/felix/trunk/scr/src/main/java/org/apache/felix/scr/impl/DependencyManager.java
===================================================================
--- /usr/src/felix/trunk/scr/src/main/java/org/apache/felix/scr/impl/DependencyManager.java	(revision 721117)
+++ /usr/src/felix/trunk/scr/src/main/java/org/apache/felix/scr/impl/DependencyManager.java	(working copy)
@@ -732,8 +732,14 @@
             try
             {
                 // Case2 - Service object parameter
-                parameterClass = targetClass.getClassLoader().loadClass(
-                    parameterClassName );
+                ClassLoader loader = targetClass.getClassLoader();
+                if ( loader == null )
+                {
+                    // use the system class loader here
+                    loader = ClassLoader.getSystemClassLoader();
+                }
+                
+                parameterClass = loader.loadClass( parameterClassName );
                 return AbstractComponentManager.getMethod( targetClass, methodname, new Class[]
                     { parameterClass }, true );
             }
","23/Dec/08 21:54;adreghiciu;The exception is gone if I apply your fix.
Related to this:
The exception that I reported does not appear on console when running with the standard console from felix. Only when I run with Pax Shell. Is that by design? Is there a switch to turn some debugging on?
","24/Dec/08 11:07;fmeschbe;Thanks for the feedback.

I am reopeing this to actually apply the fix.","24/Dec/08 11:10;fmeschbe;> The exception that I reported does not appear on console when running with the
> standard console from felix. Only when I run with Pax Shell. Is that by design?

The problem might be tha a class which is being used might be loaded from the parent class loader, probably by means of a system package exported from the system bundle or by the boot package mechanism.

This may be related to the Pax Shell setup, which might inject classes from the outside into the framework.

Anyway, the SCR must correctly cope with this situation and therefore, I will apply this fix.

> Is there a switch to turn some debugging on? 

There is not too much logging for the moment in this context.",29/Dec/08 14:42;fmeschbe;Applied the proposed patch in Rev. 729903.,"29/Dec/08 14:43;fmeschbe;Since the patch has already been reported to fix the problem, I close this issue.",,,,,,,,,,,,,,,,,,,,,
Event display shows double lines between event properties for some events,FELIX-859,12411145,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,22/Dec/08 11:04,22/Dec/08 11:31,14/Mar/19 02:47,22/Dec/08 11:31,webconsole-1.2.2,,,,,,,,,,webconsole-1.2.2,,,,Web Console,,,,,,,0,,,,,,"The Event display page of the web console shows double lines for events having multiple properties, for example for the FrameworkEven.PACKAGES_REFRESHED.

These double lines should either be removed or collaped.",,,,,,,,,,,,,,,,,,,,22/Dec/08 11:06;fmeschbe;FELIX-859.png;https://issues.apache.org/jira/secure/attachment/12396588/FELIX-859.png,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-12-22 11:31:57.285,,,no_permission,,,,,,,,,,,58130,,,Mon Dec 22 11:31:57 UTC 2008,,,,,,0|i140yf:,231617,,,,,,,,22/Dec/08 11:06;fmeschbe;Screenshot of double lines,22/Dec/08 11:31;cziegeler;Fixed in revision 728650 by clearing the border style attribute in the inner table elements.,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console fails to start if HttpService is only available after the WebConsole bundle start,FELIX-856,12411141,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,22/Dec/08 10:12,22/Dec/08 11:12,14/Mar/19 02:47,22/Dec/08 11:12,webconsole-1.2.0,,,,,,,,,,webconsole-1.2.2,,,,Web Console,,,,,,,0,,,,,,"The Web Console is started through the bundle activator when the web console bundle is started. And even though a ServiceTracker is used to track the HttpService, the initial plugins are started and initialized before the HttpService may be available. In this case startup of the web console may fail.

The web console startup must be modified to only start registering plugins once the HttpService is really available.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58133,,,Mon Dec 22 11:12:44 UTC 2008,,,,,,0|i140y7:,231616,,,,,,,,22/Dec/08 11:12;fmeschbe;In Rev. 728646 reorganized the startup and shutdown process of the OSGiManager: The core of the setup is now done when the servlet is initialized when registering with the HttpService. Likewise the core of the shutdown now takes place when the servlet is destroyed upon unregistration from the HttpService.,,,,,,,,,,,,,,,,,,,,,,,,,,
The javax.security.cert package is missing from the JRE 1.5 well-known packages,FELIX-854,12411063,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,bosschaert,bosschaert,19/Dec/08 17:40,19/Dec/08 20:18,14/Mar/19 02:47,19/Dec/08 18:21,framework-1.4.0,,,,,,,,,,framework-1.4.1,,,,Framework,,,,,,,0,,,,,,"Felix has default values for all the packages in JRE 1.5 which are automatically exposed through the System Bundle. However this list is missing the javax.security.cert package.
This is an issue when you try to install a bundle that depends on this package (e.g. Jetty).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-19 18:21:34.095,,,no_permission,,,,,,,,,,,58135,,,Fri Dec 19 20:18:28 UTC 2008,,,,,,0|i0w0jj:,184893,,,,,,,,19/Dec/08 18:21;rickhall;It was also missing from JRE 1.4. I added it to both. Will be included in the next release. Please close if you are satisfied. Thanks!,19/Dec/08 20:18;bosschaert;Thanks for the super-quick turnaround!,,,,,,,,,,,,,,,,,,,,,,,,,
Fragment support is currently limited to directly resolved hosts,FELIX-852,12411051,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,19/Dec/08 14:22,20/Jan/09 17:00,14/Mar/19 02:47,20/Jan/09 17:00,framework-1.4.1,,,,,,,,,,framework-1.6.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Currently, fragments will only be attached to hosts that are directly resolved (either by calling resolve on them or by starting them). If a host is resolved as a byproduct of resolving some other bundle (i.e., the other bundle depends on the host), then fragments will not be attached to the host. Fragments should attach in both cases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58137,,,Tue Jan 20 17:00:53 UTC 2009,,,,,,0|i140r3:,231584,,,,,,,,20/Jan/09 17:00;rickhall;This issue is resolved in the trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong symbolic name computed when groupId is a single segment string.,FELIX-850,12410941,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,talios,talios,18/Dec/08 00:49,12/Mar/09 08:05,14/Mar/19 02:47,29/Jan/09 17:55,maven-bundle-plugin-1.4.3,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"According to the documentation, a bundles symbolic name should follow respect the following:

- if artifactId starts with last section of groupId that portion is removed. eg. org.apache.maven:maven-core -> org.apache.maven.core

however, when the groupId a single segment, this rule is ignored.  Thus a groupId of smx3 and artifactId of smx3.testing gets a symbolic name of smx3.smx3.testing.  When it should just be smx3.testing.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-18 16:52:03.612,,,no_permission,,,,,,,,,,,58139,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i1aqg7:,270751,,,,,,,,"18/Dec/08 16:52;mcculls;We currently use the shared maven OSGi component (http://jira.codehaus.org/browse/MSHARED/component/13273) to compact the bundle symbolic name, so we'll either need to raise the request there or fix it locally. I'll probably end up doing both to avoid further delay of the next bundleplugin release (the shared component seems to have a slow release cycle - see http://jira.codehaus.org/browse/MSHARED-53).","29/Jan/09 17:55;mcculls;I've fixed this locally in trunk (see r738941) the actual patch is as follows:

Index: src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java
===================================================================
--- src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java  (revision 738817)
+++ src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java  (working copy)
@@ -78,7 +78,7 @@
      */
     public String getBundleSymbolicName( Artifact artifact )
     {
-        if ( ( artifact.getFile() != null ) && artifact.getFile().exists() )
+        if ( ( artifact.getFile() != null ) && artifact.getFile().isFile() )
         {
             Analyzer analyzer = new Analyzer();

@@ -121,7 +121,7 @@
         }

         int i = artifact.getGroupId().lastIndexOf( '.' );
-        if ( ( i < 0 ) && ( artifact.getFile() != null ) && artifact.getFile().exists() )
+        if ( ( i < 0 ) && ( artifact.getFile() != null ) && artifact.getFile().isFile() )
         {
             String groupIdFromPackage = getGroupIdFromPackage( artifact.getFile() );
             if ( groupIdFromPackage != null )
",12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,,,,,,,
"checking a ""self-defined"" permission (extends java.security.Permission) does not work",FELIX-849,12410801,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,hasan,hasan,16/Dec/08 14:32,16/Dec/08 17:02,14/Mar/19 02:47,16/Dec/08 15:52,,,,,,,,,,,,,,,Conditional Permission Admin,,,,,,,0,,,,,,"I have problems in using Permission derived from java.security.Permission
with the felix ConditionalPermissionAdmin.

I have 3 bundles:
- PermissionManagement: defines MyPermission class and assigns this permission to all bundles
- Provider: exposes a function f with security check on MyPermission
- Consumer: try to use function f

I run these bundles in felix + framework.security + scr and got access denied
(Consumer is not allowed to use function f although MyPermission is already assigned to all bundles)

Problems in detail:

I have a bundle named PermissionManagement which defines a new Permission class
as follows:

public class MyPermission extends Permission {
   private String actions;

   public MyPermission(String name, String actions) {
       super(name);
       this.actions = actions;
       System.out.println(""MyPermission constructor called with params: "" +
           name + "", "" + actions);
   }
   ...

   @Override
   public String getActions() {
       System.out.println(""MyPermission getActions method called"");
       return this.actions;
   }

}

PermissionManagement also defines a class called ""PermissionManager"" to assign
MyPermission to all bundles using ConditionalPermissionAdmin as follows:

   cpa.addConditionalPermissionInfo(new ConditionInfo[]{
       null
   },
   new PermissionInfo[]{
       new PermissionInfo(
       MyPermission.class.getName(), ""MyName"", ""MyAction"")
   });

Provider bundle defines a class DummyProvider which exposes a function F guarded with security check

   public String f() {
       MyPermission myPerm = new MyPermission(""MyName"", ""MyAction"");
       SecurityManager security = System.getSecurityManager();
       if (security != null) {
           security.checkPermission(myPerm);
       }
       return ""test"";
   }

Consumer bundle has an Activator as follows:
public class Activator implements BundleActivator {

   @Override
   public void start(BundleContext arg0) throws Exception {
       DummyProvider dp = new DummyProvider();
       System.out.println(dp.f());
   }
   ...
}

in felix shell
-> start file:///.../consumer-1.0-SNAPSHOT.jar
DummyProvider constructor called
MyPermission constructor called with params: MyName, MyAction
MyPermission hashCode method called
MyPermission hashCode method called
MyPermission hashCode method called
MyPermission hashCode method called
MyPermission getActions method called

java.security.AccessControlException: access denied (testbundles.permissionmanagement.MyPermission MyName MyAction) ",,,,,,,,,,,,,,,,,,,,16/Dec/08 14:34;hasan;felix_security_issue.tgz;https://issues.apache.org/jira/secure/attachment/12396190/felix_security_issue.tgz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-12-16 15:52:01.343,,,no_permission,,,,,,,,,,,58140,,,Tue Dec 16 17:02:13 UTC 2008,,,,,,0|i1aqgf:,270752,,,,,,,,"16/Dec/08 15:52;karlpauls;We did miss a doPriv block when trying to access the PackageAdmin service. Because of that, we haven't been able to load the permission. This is sort of an edge case but I fixed it. Please do an svn up and see whether it works for you. If so, then please close this issue.
",16/Dec/08 17:02;hasan;Thanks for resolving this issue. It works for me.,,,,,,,,,,,,,,,,,,,,,,,,,
Regression: BND 0.0.295 does not augment Ignore-Package with excluded import packages,FELIX-843,12410058,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pkriens,mcculls,mcculls,05/Dec/08 10:49,12/Mar/09 08:05,14/Mar/19 02:47,02/Feb/09 10:06,,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Earlier releases of BND used to augment the Ignore-Package directive with any import packages the developer had explicitly excluded (for example when Bnd detects a package referred to by some class in the bundle, but the developer knows this will never actually be used at runtime, he/she would exclude it with !org.foo.bar). This was necessary so the verifier knew to ignore these packages during verification, and not report them as build errors.",,,,,,,,,,,,,,,,,,,,29/Jan/09 11:19;mcculls;FELIX-843-20090129.patch;https://issues.apache.org/jira/secure/attachment/12398998/FELIX-843-20090129.patch,05/Dec/08 11:03;mcculls;FELIX-843-BND-PATCH.txt;https://issues.apache.org/jira/secure/attachment/12395398/FELIX-843-BND-PATCH.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-02-02 10:06:11.471,,,no_permission,,,,,,,,,,,58146,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i0w1fb:,185036,,,,,,,,"05/Dec/08 11:03;mcculls;Suggested patch that lets the analyzer update the ignored package map

(note: this patch also fixes a potential bug in looking up the BND version - the current method uses getClass() to find the bnd.info file - this is not guaranteed to work when the Analyzer has been subclassed, safer to use Analyzer.class instead)","29/Jan/09 11:19;mcculls;Updated patch based on Bnd 0.0.308

This lets you explicitly ignore certain packages (for example, ones detected by Bnd that aren't actually needed) without the verifier throwing all sorts of warnings about missing code.",02/Feb/09 10:06;pkriens;Applied the patch in bnd.310,12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,,,,,,
Linkage-Error when embedding Felix inside Tomcat 6,FELIX-842,12410050,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,dbremer-tonn,dbremer-tonn,05/Dec/08 09:28,06/Jan/09 13:18,14/Mar/19 02:47,19/Dec/08 22:10,framework-1.4.0,,,,,,,,,,framework-1.4.1,,,,Framework,,,,,,,0,,,,,,"When embedding Felix in Tomcat I get the following Exception on Felix-Startup:

ERROR: Unable to start system bundle. (java.lang.LinkageError: org/osgi/service/url/URLStreamHandlerService)
java.lang.LinkageError: org/osgi/service/url/URLStreamHandlerService
   at java.lang.Class.forName0(Native Method)
   at java.lang.Class.forName(Class.java:164)
   at org.apache.felix.framework.URLHandlersStreamHandlerProxy.class$(URLHandlersStreamHandlerProxy.java:77)
   at org.apache.felix.framework.URLHandlersStreamHandlerProxy.getStreamHandlerService(URLHandlersStreamHandlerProxy.java:391)
   at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(URLHandlersStreamHandlerProxy.java:267)
   at java.net.URL.<init>(URL.java:596)
   at java.net.URL.<init>(URL.java:464)
   at java.net.URL.<init>(URL.java:413)
   at java.net.URI.toURL(URI.java:1081)
   at org.apache.catalina.loader.WebappClassLoader.getURI(WebappClassLoader.java:2355)
   at org.apache.catalina.loader.WebappClassLoader.findResourceInternal(WebappClassLoader.java:2008)
   at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:1786)
   at org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:890)
   at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1354)
   at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1233)
   at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
   at java.lang.Class.forName0(Native Method)
   at java.lang.Class.forName(Class.java:164)
   at org.apache.felix.framework.URLHandlersStreamHandlerProxy.class$(URLHandlersStreamHandlerProxy.java:77)
   at org.apache.felix.framework.URLHandlersStreamHandlerProxy.getStreamHandlerService(URLHandlersStreamHandlerProxy.java:391)
   at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(URLHandlersStreamHandlerProxy.java:267)
   at java.net.URL.<init>(URL.java:596)
   at java.net.URL.<init>(URL.java:464)
   at java.net.URL.<init>(URL.java:413)
   at java.net.URI.toURL(URI.java:1081)
   at org.apache.catalina.loader.WebappClassLoader.getURI(WebappClassLoader.java:2355)
   at org.apache.catalina.loader.WebappClassLoader.findResourceInternal(WebappClassLoader.java:2008)
   at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:1786)
   at org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:890)
   at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1354)
   at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1233)
   at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
   at org.apache.felix.framework.Felix.registerService(Felix.java:2694)
   at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:252)
   at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:230)
   at org.apache.felix.framework.StartLevelActivator.start(StartLevelActivator.java:39)
   at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
   at org.apache.felix.framework.Felix$SystemBundleActivator.start(Felix.java:3761)
   at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
   at org.apache.felix.framework.Felix.init(Felix.java:849)
   at org.apache.felix.framework.Felix.start(Felix.java:881)
   at ... osgi.FelixStartupServlet.init(FelixStartupServlet.java:118)
   at javax.servlet.GenericServlet.init(GenericServlet.java:212)
   at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1172)
   at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:992)
   at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4058)
   at org.apache.catalina.core.StandardContext.start(StandardContext.java:4371)
   at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
   at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)
   at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
   at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)
   at org.apache.catalina.core.StandardService.start(StandardService.java:516)
   at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
   at org.apache.catalina.startup.Catalina.start(Catalina.java:578)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
   at java.lang.reflect.Method.invoke(Method.java:585)
   at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)
   at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413) ","Windows XP SP3, Java 1.5.0, Tomcat 6.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-05 10:32:01.659,,,no_permission,,,,,,,,,,,58147,,,Tue Jan 06 13:18:52 UTC 2009,,,,,,0|i1aqhb:,270756,,,,,,,,05/Dec/08 09:29;dbremer-tonn;Workaround: Disabling URLHandlersservice,"05/Dec/08 10:32;karlpauls;This looks bad. The issue is that the tomcat WebappClassLoader is creating URL's while doing a classload. Now, what happens is that when we set our URLHandlers it is asked to get  a handler for a URL needed for a classload. Getting the handler involves loading classes which triggers another classload via the WebappClassLoader and there we go... 

As mentioned, one solution is to diable URLHandlers for now if you run into this. Another could be to do what I will do internally to resolve this issue externally namely, preload all classes that we need inside a handlers lookup. I will add a comment with all the classes you need to preload soon. 

Thanks for reporting! ","19/Dec/08 22:10;karlpauls;The WebAppClassloader is creating urls during a classload while we are creating url handlers which gets us into a recursive attempt to create a handler resulting in the error. I addressed this in trunk by creating a couple of known built-in handlers up front (i.e., http, https, ftp, jar, file) which we can fallback to in case we get a Linkage-Error while trying to create the handler. Furthermore, a couple of classes are forced to be loaded eagerly. 

Thanks again for reporting. This will make it into the upcoming 1.4.1 release. Please close this issue if it works for you.",06/Jan/09 13:18;dbremer-tonn;With Felix 1.4.1 we can start Felix within Tomcat 6 without any problems. Thank you for the fix.,,,,,,,,,,,,,,,,,,,,,,,
Invalid descriptors in dependent bundles break build,FELIX-840,12409554,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,01/Dec/08 14:46,01/Dec/08 15:06,14/Mar/19 02:47,01/Dec/08 15:06,maven-scr-plugin-1.0.8,,,,,,,,,,maven-scr-plugin-1.0.10,,,,SCR Tooling,,,,,,,0,,,,,,"The maven-scr-plugin tries to read scr descriptor files contained in dependent bundles.
If (for whatever reason) these descriptor files are not valid xml files, currently the own module can't be built.
The scr plugin should rather print out a warning but continue with the build of the own module.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58149,,,Mon Dec 01 15:06:51 UTC 2008,,,,,,0|i1417z:,231660,,,,,,,,01/Dec/08 15:06;cziegeler;Fixed in revision 722090,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting the SecurityManager in a bundle generate an infinite loop,FELIX-837,12409385,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,loris,loris,27/Nov/08 10:58,05/Jan/09 09:38,14/Mar/19 02:47,19/Dec/08 22:13,framework-1.4.0,,,,,,,,,,framework-1.4.1,,,,Framework,,,,,,,3,,,,,,"Since Felix 1.4.0, each method invocation is now check in the class SecureAction. When we DON'T set the security manager as argument of the command line and a started bundle tries to set this one, we always get an infinite loop:

	at java.net.URL.<init>(URL.java:413)
	at sun.security.provider.PolicyFile$3.run(PolicyFile.java:676)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.security.provider.PolicyFile.initStaticPolicy(PolicyFile.java:617)
	at sun.security.provider.PolicyFile.<init>(PolicyFile.java:314)
	at java.security.Policy.getPolicyNoCheck(Policy.java:145)
	at java.security.ProtectionDomain.implies(ProtectionDomain.java:195)
	at java.security.AccessControlContext.checkPermission(AccessControlContext.java:249)
	at java.security.AccessController.checkPermission(AccessController.java:427)
	at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)
	at java.lang.reflect.AccessibleObject.setAccessible(AccessibleObject.java:107)
	at org.apache.felix.framework.util.SecureAction$Actions.run(SecureAction.java:1123)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.felix.framework.util.SecureAction.invoke(SecureAction.java:754)
	at org.apache.felix.framework.URLHandlersStreamHandlerProxy.getStreamHandlerService(URLHandlersStreamHandlerProxy.java:400)
	at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(URLHandlersStreamHandlerProxy.java:267)
	at java.net.URL.<init>(URL.java:596)
	at java.net.URL.<init>(URL.java:464)
	at java.net.URL.<init>(URL.java:413)
	at sun.security.provider.PolicyFile$3.run(PolicyFile.java:676)

... until a stack overflow.

To reproduce it, just start the attached bundle that does:

System.setSecurityManager(new RMISecurityManager());
URL wantBug = new URL(""http://felix.apache.org"");
System.out.println(""I want a bug: "" + wantBug.toExternalForm());

If the security manager is set in the command line, there is no bug.
",,,,,,,,,,,,,,,,,,,,27/Nov/08 11:00;loris;sm-test.zip;https://issues.apache.org/jira/secure/attachment/12394838/sm-test.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-27 12:07:31.56,,,no_permission,,,,,,,,,,,58152,,,Mon Jan 05 09:38:47 UTC 2009,,,,,,0|i1aqhr:,270758,,,,,,,,27/Nov/08 12:07;karlpauls;I will look into it today.,"27/Nov/08 14:40;karlpauls;First, let me say that I don't think specifying a security manager inside a bundle is a good idea. It doesn't seem to be very portable and it should be up to the framework to specify the security manager anyways. Second, specifying an RMISecurityManager at run time does require you to start the jvm with a -Djava.security.policy=<path-to-policy> property. Otherwise, you will not be able to do much after you set the security manager. 

That said, we do have an issue. It should be possible to set a security manager dynamically but the problem is that our URLHandlers does need to do some privileged stuff which triggers a load of the default policy. That in turn creates a URL to the policy file which gets us in the mentioned loop. I don't have a good idea how to avoid that atm and am not sure its possible at all. Need to think about it some more. 

However, there are a couple of workarounds:

1) disable URLHandlers if you don't need it (i.e., -Dfelix.service.urlhandlers=false). In your case you would although want to specific a valid policy file as mentioned above. 

2) set a custom Policy that doesn't create a URL before you set the security manager (then you wouldn't need to specify a policy on startup either) e.g.,

           Policy.setPolicy(new Policy()
                          {
                                  public void refresh(){}
                                  public PermissionCollection getPermissions(CodeSource source)
                                  {
                                           return new PermissionCollection()
                                           {
                                                  public void add(Permission perm){}
                                                  public boolean implies(Permission perm){return true;}
                                                  public Enumeration elements()
                                                  {
                                                             return new Enumeration()
                                                             {
                                                                  private volatile boolean more=true;
                                                                  public Object nextElement()
                                                                  {
                                                                      more = false;
                                                                      return new AllPermission();
                                                                  } 
                                                                 public boolean hasMoreElements()
                                                                {
                                                                      return more;
                                                                }
                                                  };
                                            }
                                  };
                       }
        });
        System.setSecurityManager(new RMISecurityManager());

Please let me know if one of the workarounds is good for you.
","27/Nov/08 14:56;loris;Thank you Karl to consider my request.
I recognize that's not a good idea of specifying a security manager inside a bundle, but it's needed to support legacy codes :-(
I'm going to try the 2nd workaround (I need URLHandlers).","05/Dec/08 15:52;fornacif;Hi Karl,

In fact, we don't really set the SecurityManager inside a bundle, but just before launching the Felix framework (we have a custom Felix launcher). So maybe this bug is more serious that it seems.
We have tested the second workarround by setting a custom Policy and it seems to fix the bug.
We also need some investigations to understand exactly what happens as we just migrate from Felix 1.0.3 to 1.4.0. 

Best Regards,
François",05/Dec/08 16:16;karlpauls;Interesting. I still need to find the time to look into a fix. I'll come back to this issue soon. ,"19/Dec/08 22:13;karlpauls;Setting a security manager when the framework already was started is causing a recursive lookup of handlers as 

a) not all security sensitive calls where done from inside a doPriv and 
b) invoking built-in handlers is causing a recursive attempt to create the url to the policy file. 

Fixed in trunk by adding the doPrivs and makeing sure to only use setAccessible where needed and then (if possible) before the URLHandlers are registered. Additionally, we create urls for the known built-in handler up front to be able to set the handler of a new url without causing a security check. 

This will make it into the upcoming 1.4.1 release. Thanks again for reporting and please close this issue if it works for you.",05/Jan/09 09:38;loris;Fixed in Felix 1.4.1. Thanks!,,,,,,,,,,,,,,,,,,,,
Deadlocks caused by Declarative Services,FELIX-836,12409383,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,27/Nov/08 09:49,02/May/13 02:29,14/Mar/19 02:47,06/Feb/09 14:07,scr-1.0.6,,,,,,,,,,scr-1.0.8,,,,Declarative Services (SCR),,,,,,,0,,,,,,"We experience deadlocks with Declarative Services every now and then related to the interaction between the framework and SCR. The situation most often happens when multiple bundles are uptated and packages are refreshed.

One thread involved is the ""SCR Component Actor"" thread, which is the thread of SCR running asynchronous operations on registered components. The other thread is the framework PackageAdmin thread which stops and starts bundles during refresh:

---- thread dump excerpt ----
""SCR Component Actor"" daemon prio=5 tid=0x0107f9c0 nid=0xab2400 in Object.wait() [0xb18a2000..0xb18a2d90]
	at java.lang.Object.wait(Native Method)
	- waiting on <0x075e2d58> (a [Ljava.lang.Object;)
	at java.lang.Object.wait(Object.java:474)
	at org.apache.felix.framework.Felix.acquireBundleLock(Felix.java:4167)
	- locked <0x075e2d58> (a [Ljava.lang.Object;)
	at org.apache.felix.framework.Felix.registerService(Felix.java:2665)
	at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:254)
	at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:232)
	at org.apache.sling.scripting.core.impl.ScriptEngineConsolePlugin.activate(ScriptEngineConsolePlugin.java:171)
	at org.apache.sling.scripting.core.impl.ScriptEngineConsolePlugin.initPlugin(ScriptEngineConsolePlugin.java:52)
	at org.apache.sling.scripting.core.impl.SlingScriptAdapterFactory.activate(SlingScriptAdapterFactory.java:223)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.felix.scr.impl.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:226)
	at org.apache.felix.scr.impl.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:133)
	at org.apache.felix.scr.impl.AbstractComponentManager.activateInternal(AbstractComponentManager.java:476)
	- locked <0x0976ca30> (a org.apache.felix.scr.impl.ImmediateComponentManager)
	at org.apache.felix.scr.impl.AbstractComponentManager.enableInternal(AbstractComponentManager.java:398)
	at org.apache.felix.scr.impl.AbstractComponentManager.access$000(AbstractComponentManager.java:36)
	at org.apache.felix.scr.impl.AbstractComponentManager$1.run(AbstractComponentManager.java:99)
	at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:85)


""FelixPackageAdmin"" daemon prio=5 tid=0x0106f330 nid=0xaad000 waiting for monitor entry [0xb171f000..0xb171fd90]
	at org.apache.felix.scr.impl.AbstractComponentManager.deactivateInternal(AbstractComponentManager.java:540)
	- waiting to lock <0x0976ca30> (a org.apache.felix.scr.impl.ImmediateComponentManager)
	at org.apache.felix.scr.impl.AbstractComponentManager.disableInternal(AbstractComponentManager.java:579)
	at org.apache.felix.scr.impl.AbstractComponentManager.disposeInternal(AbstractComponentManager.java:616)
	at org.apache.felix.scr.impl.AbstractComponentManager.dispose(AbstractComponentManager.java:272)
	at org.apache.felix.scr.impl.ImmediateComponentManager.dispose(ImmediateComponentManager.java:120)
	at org.apache.felix.scr.impl.BundleComponentActivator.dispose(BundleComponentActivator.java:258)
	at org.apache.felix.scr.impl.Activator.disposeComponents(Activator.java:264)
	at org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:177)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:690)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:619)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:532)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3601)
	at org.apache.felix.framework.Felix._stopBundle(Felix.java:1989)
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:1954)
	at org.apache.felix.framework.Felix$RefreshHelper.stop(Felix.java:3972)
	at org.apache.felix.framework.Felix.refreshPackages(Felix.java:3257)
	at org.apache.felix.framework.PackageAdminImpl.run(PackageAdminImpl.java:259)
	at java.lang.Thread.run(Thread.java:613)
---- thread dump excerpt ----

The problem is that on the one hand we need some kind of synchronization inside SCR and on the other hand SCR has a synchronous bundle listener. This is used to hear about started bundles and bundles about to stop (which is the case in the PackageAdmin thread dump above). Since synchronous listeners are called synchronously while the framework is trying to change the bundle state, the framework bundle locks are held while the listener is called.

To prevent this kind of deadlock the bundle listener should probably dispose off the components asynchronously while the framework is stopping the bundles.

Looking at when components are being disabled, we find four situations:

(1) A bundle is stopped and its components must be disposed off. This may be done in the SCR thread asynchronous to the actual bundle stop processing.
(2) A factory configuration object of a ComponentFactory instance is deleted. This may also be done asynchronously because IMHO it is not time critical to dispose off an instance of a ComponentFactory in this situation.
(3) A ComponentInstance explicitly disposed of by calling the ComponentInstance.dispose() method. This request must also be acted upon immediately and the component disposed off synchronously.
(4) The Declarative Services bundle is stopped. Here we have to immediately dispose off all components in the system. We cannot do this asynchronously.",,,,,,,,,,,,,,,,,,FELIX-911,,27/Nov/08 09:52;fmeschbe;FELIX-836.patch;https://issues.apache.org/jira/secure/attachment/12394831/FELIX-836.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58153,,,Fri Feb 06 14:07:15 UTC 2009,,,,,,0|i0w1qn:,185087,,,,,,,,"27/Nov/08 09:52;fmeschbe;Proposed patch:

* Add parameter to ComponentManager.dispose method to indicate whether to dispose immediately or asynchronously
* Call modified ComponentManager.dispose(boolean) method depending on the use cases listed in the issue report.","06/Feb/09 13:31;fmeschbe;I have to revise, what I wrote above with respect to stopping the components of a bundle being stopped: If a bundle is stopped, its component must be immediately removed, otherwise unexpcted things may happen.

In fact, it would probably be best to immediately stop components, if :

  -- their containing bundle is stopped
  -- if a factory configuration instance is deleted
  -- if a component's deactivation is requested by ComponentInstance.dispose()
  -- if the SCR bundle is going down

On the other hand a component may be (and should be) asynchronously stopped, if:

  -- configuration has been updated
  -- a reference has changed, which causes a component to stop or by cycled

We have to stop a component, for which a change in a reference (dependency) requires the component to by cycled, asynchronously to not provoke a list of deadlocks.","06/Feb/09 13:32;fmeschbe;Actually this deadlock situation is related to the case of the framework blocking on trying to register a service. Richard Hall is currently working on a fix to this situation, which is very promising.","06/Feb/09 14:07;fmeschbe;In Rev. 741567 modified asynchronicity as follows:

   - deactivate() is always asynchronous
          (dispose() directly calls deactivateInternal() and thus remains synchronous)
   - reactive() is always asynchronous",,,,,,,,,,,,,,,,,,,,,,,
Module is not removed from factory after failed install/update,FELIX-835,12409304,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,karlpauls,karlpauls,26/Nov/08 21:30,18/Dec/08 21:02,14/Mar/19 02:47,18/Dec/08 21:02,framework-1.4.0,,,,,,,,,,framework-1.4.1,,,,Framework,,,,,,,0,,,,,,"When a bundle is installed or updated we create a module in Felix.createModule and add it to the factory. If an exception is thrown later (e.g., because there is a native library missing) the module is not removed. We do clean up the contentloader, the archive, and the bundle so it is not a big memory leak but it might be a small one. Furthermore, it is possible that this might screw up subsequent resolves. We need to revisit that when we're done with the current resolver refactoring. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-18 21:02:50.554,,,no_permission,,,,,,,,,,,58154,,,Thu Dec 18 21:02:50 UTC 2008,,,,,,0|i1aqhz:,270759,,,,,,,,18/Dec/08 21:02;rickhall;Committed a fix to properly dispose of the created module.,,,,,,,,,,,,,,,,,,,,,,,,,,
Bind method not invoked when the unbind method is unspecified after reference is changed,FELIX-832,12408998,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,jassuncao,jassuncao,21/Nov/08 15:22,05/Jul/10 06:42,14/Mar/19 02:47,06/Feb/09 15:31,scr-1.0.6,,,,,,,,,,scr-1.0.8,,,,Declarative Services (SCR),,,,,,,0,,,,,,"I have a declarative service with a dynamic reference with cardinality 0..1, and since I'm not interested in the unbind notification I did not specified the unbind method.
I noticed that Felix (1.2.1) invokes the bind method the first time, but it does not invoke it when the reference is changed. After I add a unbind method it works as expected.
",Felix 1.2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-06 15:12:02.951,,,no_permission,,,,,,,,,,,58157,,,Fri Feb 06 15:31:11 UTC 2009,,,,,,0|i1aqif:,270761,,,,,,,,"29/Nov/08 21:37;jassuncao;This seems to occur because DependencyManager.ungetService(...) is invoked in DependencyManager.invokeUnbindMethod(...). In the situation where unbind is undefined, the reference isn't removed from the list of bound services, and because of that, serviceAdded(...) will find the service still bound and will not invoke the bind method.
The following change seems to fix this problem:
...
if ( m_dependencyMetadata.getUnbind() != null )
{
  invokeUnbindMethod( instance, reference );
}
+ungetService( reference );
...","06/Feb/09 15:12;fmeschbe;Thanks for reporting this issue. It is in fact two-fold: The service must not only be ""ungotten"" if the reference goes away, but also if the component itself is being cleanup (though in the second case there is a general cleanup at then end of the disposal)","06/Feb/09 15:31;fmeschbe;Moved the call to the ungetService method in Rev. 741593, so that service unbinding does not depend on the presence of an unbind method anymore.

Actually, this problem might also be present if services are not bound by a bind method but are accessed by locateService. In this case the service must also be ungotten in case of its unregistration

I have deployed SNAPSHOT version 1.0.7-20090206.153010-1 containing this fix.

Could you please verify its working in your use case and close the bug then ? Thanks.",,,,,,,,,,,,,,,,,,,,,,,,
bndlib unnecessary modifies valid OSGi Bundle-Version numbers (update to bndlib 0.0.293),FELIX-831,12408918,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,rzanner,rzanner,20/Nov/08 16:34,12/Mar/09 08:05,14/Mar/19 02:47,03/Dec/08 15:26,maven-bundle-plugin-1.4.3,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,5,,,,,,"The current release of the plugin uses bndlib version 0.0.255.

In this version there is a bug converting valid OSGi Bundle-Version values to a different one.

A short summary: In my company we have a unusual versioning scheme - here is one example: 

1.3.0.0-0-01-0

in development cycles extended by -SNAPSHOT: 1.3.0.0-0-01-0-SNAPSHOT. Both versions are - from the point of view of the OSGi spec - a valid Bundle-Version value (see the API here: http://www.osgi.org/javadoc/r4v41/org/osgi/framework/Version.html#Version(java.lang.String)). 
In spite of this fact the maven-bundle-plugin (resp. bndlib) converts it to 

1.3.0.0

or - when using -SNAPSHOT - 1.3.0.SNAPSHOT. 

I already asked Peter Kriens to fix that and he quickly came up with a fix (version 0.0.293, to be downloaded from http://www.aqute.biz/repo/biz/aQute/bndlib/0.0.293/bndlib-0.0.293.jar). 
I tried to replace the bndlib dependency with the new version. Unfortunately there seems to have been a significant change in the API of bndlib:

java.lang.NoClassDefFoundError: aQute/lib/reporter/Reporter
	at org.apache.felix.bundleplugin.BundlePlugin.buildOSGiBundle(BundlePlugin.java:360)
	at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:273)
	at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:227)
	at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:218)

Since it's not acceptable that a valid Bundle-Version is modified and I cannot use the most current version of bndlib, I ask you to update the maven-bundle-plugin to use a newer version of bndlib to fix the bug I mentioned above.

Thank you!

Regards,

René",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-11-20 16:44:07.443,,,no_permission,,,,,,,,,,,58158,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i1aqin:,270762,,,,,,,,"20/Nov/08 16:44;mcculls;Yes, the latest development version of Bnd is very different and requires Java5 - so this will be a major version update to the bundleplugin (1.6.0)
There are a number of other potentially breaking changes targeting this version, and so I don't yet know exactly when it will be ready for release.","28/Nov/08 08:52;rzanner;Since I require this fixed rather urgently, I want this to be in the next planned version...","03/Dec/08 15:26;mcculls;Fixed in trunk with the update to Bnd 0.0.295 - however, note that I'm still testing this against various projects to check for any build breaks.

I also hope to have a stable snapshot that people can start testing themselves by the end of this week.",12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,,,,,,
iPOJO JMX Handler: the sub-element should refer to the handler namespace,FELIX-829,12408911,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,20/Nov/08 15:05,08/Feb/09 14:49,14/Mar/19 02:47,20/Nov/08 16:53,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,The 'config' element of the iPOJO JMX handler description contains 'property' and 'method' sub-elements. Those sub-elements should use the JMX handler namespace to fit with the JMX Handler XML Schema.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58160,,,Sun Feb 08 14:47:53 UTC 2009,,,,,,0|i14173:,231656,,,,,,,,"20/Nov/08 16:53;clement.escoffier;Fixed at revision 719260

The JMX handler's 'config' sub-elements ('property' and 'method') must use the JMX handler namespace to be compliant with the XML-Schema.",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO JMX Handler: the name attribute has not the expected behavior,FELIX-828,12408909,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,20/Nov/08 15:02,08/Feb/09 14:49,14/Mar/19 02:47,20/Nov/08 16:54,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,"The name attribute of the config element of the JMX handler expect something like ""name=myname"" instead of just ""myname"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58161,,,Sun Feb 08 14:47:55 UTC 2009,,,,,,0|i1414f:,231644,,,,,,,,"20/Nov/08 16:54;clement.escoffier;Fixed at revision 719260

The name attribute of the iPOJO handler JMX's 'config' element is now mapped to ""name=given_value"".
",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,,
unable to rename / delete bundle cache location on update or uninstall,FELIX-819,12408670,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,wgedeon,wgedeon,17/Nov/08 18:55,21/Nov/08 13:19,14/Mar/19 02:47,20/Nov/08 22:19,framework-1.4.1,,,,,,,,,,framework-1.4.1,,,,Framework,,,,,,,0,,,,,,"Hello all,

It looks like the revision.location is missing from the bundle cache after the shutdown purge. Steps:

- install bundle
- update bundle
- shutdown

The next start shows a:
ERROR: org.apache.felix.framework.cache.BundleCache: Error creating archive. (java.io.FileNotFoundException: .\felixcache\bundle24\version2.0\revision.location (The system cannot find the file specified))

Looking in the directory, the file is not there.

Stepping through the code shows that the BundleArchive.purge() attempts to rename the last bundle revision to a fresh one... except that the File.rename is not platform independent (it fails on windows quite often).
When BundleCache.getSecureAction().renameFile(revisionDir, currentDir) returns false (rename failed), createRevisionFromLocation follows and does not include a new revision.location file.

Maybe a call to setRevisionLocation() is to be made after createRevisionFromLocation (BundleArchive:866)? I'll try that out...",Windows (XP Pro),,,,,,,,,,,,,,,,,,,18/Nov/08 15:07;wgedeon;test-bundles.zip;https://issues.apache.org/jira/secure/attachment/12394172/test-bundles.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-17 19:02:44.269,,,no_permission,,,,,,,,,,,58170,,,Fri Nov 21 13:19:23 UTC 2008,,,,,,0|i1aqkf:,270770,,,,,,,,"17/Nov/08 18:58;wgedeon;Adding a call to:
  setRevisionLocation(location, 0);
after createRevisionFromLocation seems to fix it.

I've attached a patch.
--w","17/Nov/08 19:02;rickhall;I wonder why there would be a failure in renaming. Typically under Windows failures occur because the file is open, but the revision.location file should not remain open. Do you have any ideas about why it is failing? Thanks for the feedback.","17/Nov/08 21:00;wgedeon;I don't have one yet, I've seen it happen before. The directory is not open or used by the other applications...","18/Nov/08 05:01;mcculls;FYI, in various other projects I've found File.renameTo to fail more on Windows than other platforms. Sometimes this is because of filesystem differences (you can't rename across certain boundaries) other times due to missing access rights, and now and again it seems to fail for no reason at all - the Windows OS believes that the file is open/locked and won't  let you rename or delete it :)

The standard fallback when File.renameTo fails (i.e. returns false) is to perform a copy-then-delete operation, which is more expensive but works in more situations. For a concrete example, take a look at the moveDirectory method from Apache Commons-IO:

   http://svn.apache.org/viewvc/commons/proper/io/trunk/src/java/org/apache/commons/io/FileUtils.java?view=markup

HTH","18/Nov/08 15:07;wgedeon;I've managed to reproduce a similar effect in a tiny test environment (attached as ""test-bundles.zip"").
Steps to reproduce:
#1- run
#2- install host
#3- install fragment
#4- start host
#5- shutdown
#6- run
#7- uninstall fragment
#8- shutdown -> error message

I've tried to see what happens, everything deletes fine except for the bundle jar. Could it be still locked by the BundleArchive (or the class loader?) at the moment when we're trying to delete it?
Anyway, still looking.

Can someone please try the example to make sure it's not something that's specific to some messed-up situation in my environment? Thanks :-)

The logs are below:

#1-run

Listening for transport dt_socket at address: 8787

Welcome to Felix.
=================

->
-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (1.5.0.SNAPSHOT)
[   1] [Active     ] [    1] Apache Felix Shell Service (1.0.2)
[   2] [Active     ] [    1] Apache Felix Shell TUI (1.0.2)
[   3] [Active     ] [    1] Apache Felix Bundle Repository (1.2.1)
[   4] [Active     ] [    1] Java XML Binding API (2.1.7)
[   5] [Active     ] [    1] Java Activation API (1.1.1)
[   6] [Active     ] [    1] Java XML Stream API (StAX) (1.0.1)
[   8] [Active     ] [    1] Jaxen XPath Engine (1.1.1)
[   9] [Active     ] [    1] JDOM DOM Processor (1.0.0)
[  10] [Active     ] [    1] Apache ANT (1.7.0)
[  11] [Active     ] [    1] Apache Commons Lang (2.4.0)
[  12] [Active     ] [    1] Apache Commons Collections (3.2.0)
[  13] [Active     ] [    1] Apache Velocity Engine (1.5.0)
->
->

#2- install host

-> install file:///D|/projects/drawingboard/host/target/test.host-0.0.1-SNAPSHOT.jar
Bundle ID: 100

#3- install fragment

-> install file:///D|/projects/drawingboard/fragment/target/test.fragment-0.0.1-SNAPSHOT.jar
Bundle ID: 101

#4- start host

-> start 100
bundle://100.0:2/fragment/loadme.txt
vvvvvvvv
###
###
^^^^^^^^

#5- shutdown

-> shutdown
->

#6- run

C:\Programs\Development\felix-1.4.0>run

C:\Programs\Development\felix-1.4.0>java -server -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n -jar bin/org.apache.felix.main-1.4.0.jar
Listening for transport dt_socket at address: 8787

Welcome to Felix.
=================

-> bundle://100.0:2/fragment/loadme.txt
vvvvvvvv
###
###
^^^^^^^^

#7- uninstall fragment

-> uninstall 101

#8- shutdown -> error message

-> shutdown
-> ERROR: org.apache.felix.framework.cache.BundleArchive: Unable to delete archive directory - .\felix-cache\bundle101","19/Nov/08 10:48;wgedeon;I've renamed the issue to reflect findings.

PS: attached patch does not address issue resolution anymore, should it be deleted? or is there a way to invalidate it?","19/Nov/08 13:43;rickhall;I finally have Windows available to test this, so I will try to look into it more closely. Thanks.","20/Nov/08 22:19;rickhall;I have committed a fix for this. It appears the issue was how we remove uninstalled bundles during shutdown. The uninstalled fragment was getting removed, but the host bundle still had its JAR file open so it could not be successfully removed. I modified the shutdown routine to close all bundles first, then to remove uninstalled bundles to make sure all references to the bundle JAR files are closed.

Walid, if this resolves the issue for you, please close it. Thanks for reporting it!","21/Nov/08 13:19;wgedeon;Yep it does. I've closed it.
Thanks!",,,,,,,,,,,,,,,,,,
iPOJO Service Exported throw an error when stopping,FELIX-817,12408489,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,14/Nov/08 10:57,08/Feb/09 14:49,14/Mar/19 02:47,14/Nov/08 12:18,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,iPOJO Composite service exporter throws an IllegalStateException during the stop method because the service can be unregister twice. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58172,,,Sun Feb 08 14:47:55 UTC 2009,,,,,,0|i0w1hb:,185045,,,,,,,,"14/Nov/08 12:18;clement.escoffier;Fixed at r713977 
The service exporter unregisters services only once.

",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,,
MonitorAdmin - Unregistration of Monitorable causes IllegalArgumentException in MonitoringJob,FELIX-811,12408079,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,donsez,theli,theli,09/Nov/08 08:47,16/Nov/08 15:40,14/Mar/19 02:47,13/Nov/08 14:36,,,,,,,,,,,,,,,Sandbox,,,,,,,0,,,,,,"If a Monitorable service is unregistered from the framework but there is still a scheduled MonitorJob monitoring StatusVariables of the unregistered Monitorable, an IllegalArgumentException is thrown in the MonitoringJobImpl and the whole MonitoringJob thread dies.

The stracktrace:
------------
|> Exception in thread ""Thread-24"" java.lang.IllegalArgumentException: no such monitorable service for this pid
|>         at org.apache.felix.sandbox.monitor.MonitorAdminImpl$MonitorAdminProxy.getStatusVariable(MonitorAdminImpl.java:322)
|>         at org.apache.felix.sandbox.monitor.MonitorAdminImpl$MonitoringJobImpl$MyRunnable.run(MonitorAdminImpl.java:142)
|>         at java.lang.Thread.run(Thread.java:595)
------------

The OSGi spec defines the following:
   ""Whether a monitoring job keeps track dynamically of the StatusVariables it
   monitors is not specified. This means that if we monitor a StatusVariable of
   a Monitorable service which disappears and later reappears then it is imple-
   mentation specific whether we still receive updates of the StatusVariable
   changes or not.""

From my point of view the MonitoringJob should just ignore disappeared variables and should continue to monitor all other variables.",,,,,,,,,,,,,,,,,,,,10/Nov/08 06:45;theli;FELIX-811.patch;https://issues.apache.org/jira/secure/attachment/12393615/FELIX-811.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-13 14:36:53.693,,,no_permission,,,,,,,,,,,58178,,,Sun Nov 16 15:40:16 UTC 2008,,,,,,0|i0w1dz:,185030,,,,,,,,10/Nov/08 06:45;theli;A patch to fix this issue.,"13/Nov/08 14:36;donsez;the patch was applied and tested with the demo script felix/sandbox/donsez/script/monitor.txt
and commited at revision: 713734",16/Nov/08 15:40;theli;I'm now using the new snapshot version for a few days in my environment and it works fine. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,
MonitorAdmin -  NullPointerException while calling MonitoringJob.stop(),FELIX-810,12407997,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,donsez,theli,theli,07/Nov/08 10:14,16/Nov/08 15:40,14/Mar/19 02:47,13/Nov/08 14:36,,,,,,,,,,,,,,,Sandbox,,,,,,,0,,,,,,"I've started a scheduled job with:

|> this.monitorService.startScheduledJob(
|>    PID, // listener.id
|>    variableNames.toArray(new String[variableNames.size()]),
|>    60, // seconds
|>    0   // Forever
|> );	

If I then need to stop the job via 
|> this.currentMonitorJob.stop();

e.g. because the variableName list has changed I'm getting the following NullpointerException:

-----
|> java.lang.NullPointerException
|>         at org.apache.felix.sandbox.monitor.MonitorAdminImpl$MonitoringJobImpl.unsubscribeStatusVariables(MonitorAdminImpl.java:185)
|>         at org.apache.felix.sandbox.monitor.MonitorAdminImpl$MonitoringJobImpl.stop(MonitorAdminImpl.java:162)
-----

The problem seems to be that there are no subscriptions in a scheduled job and therefore the variable ""list"" shown in the code fragment below is null.
|> private void unsubscribeStatusVariables() {
|> [...]
|> 		List list=(List)subscriptions.get(statusVariableName);
|> 		if(list!=null) {
|> 			list.remove(this);
|> 		} // else never occurs
|> 		if(list.isEmpty())
|> 			subscriptions.remove(statusVariableName);
|> 	}		
|> }


",,,,,,,,,,,,,,,,,,,,10/Nov/08 06:10;theli;FELIX-810.patch;https://issues.apache.org/jira/secure/attachment/12393612/FELIX-810.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-13 14:36:31.458,,,no_permission,,,,,,,,,,,58179,,,Sun Nov 16 15:40:29 UTC 2008,,,,,,0|i0w027:,184815,,,,,,,,10/Nov/08 06:10;theli;Here is a patch to fix this issue.,"13/Nov/08 14:36;donsez;the patch was applied and tested with the demo script felix/sandbox/donsez/script/monitor.txt
and commited at revision: 713734",16/Nov/08 15:40;theli;I'm now using the new snapshot version for a few days in my environment and it works fine. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,
MonitorAdmin - mon.statusvariable.value should be a String,FELIX-809,12407996,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,donsez,theli,theli,07/Nov/08 09:56,16/Nov/08 15:40,14/Mar/19 02:47,13/Nov/08 14:33,,,,,,,,,,,,,,,Sandbox,,,,,,,0,,,,,,"As defined in the OSGi spec 4.1 the MonitorAdminImpl should send the StatusVariable value as String:

""The events posted by MonitorAdmin contain the following properties:
[...]
• mon.statusvariable.value: The value of the StatusVariable, represented as a String""


Currently the value is converted into Integer/Float/Boolean or String:
-----
| switch (statusVariable.getType()) { // TODO float->double, int->long
| case StatusVariable.TYPE_BOOLEAN:
|	value = new Boolean(statusVariable.getBoolean());
| 	break;
| case StatusVariable.TYPE_FLOAT:
|	value = new Float(statusVariable.getFloat());
|	break;
| case StatusVariable.TYPE_INTEGER:
|	value = new Integer(statusVariable.getInteger());
|	break;
| case StatusVariable.TYPE_STRING:
|	value = statusVariable.getString();
|	break;
| }
| properties.put(MON_STATUSVARIABLE_VALUE, value);
-----


",,,,,,,,,,,,,,,,,,,,10/Nov/08 06:32;theli;FELIX-809.patch;https://issues.apache.org/jira/secure/attachment/12393614/FELIX-809.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-13 14:33:29.793,,,no_permission,,,,,,,,,,,58180,,,Sun Nov 16 15:40:41 UTC 2008,,,,,,0|i0w1g7:,185040,,,,,,,,10/Nov/08 06:32;theli;Here is a patch to fix this issue.,"13/Nov/08 14:33;donsez;the patch was applied and tested with the demo script felix/sandbox/donsez/script/monitor.txt
and commited at revision: 713734",16/Nov/08 15:40;theli;I'm now using the new snapshot version for a few days in my environment and it works fine. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,
conversion of JAR into bundle fails if there are classes is the default name space,FELIX-807,12407958,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pkriens,bebbo,bebbo,06/Nov/08 20:42,12/Mar/09 08:05,14/Mar/19 02:47,02/Feb/09 10:06,maven-bundle-plugin-1.4.3,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The conversion of JAR into bundle fails if there are classes is the default name space, like hsqldb does.

Try this pom.xml:

<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
  <modelVersion>4.0.0</modelVersion>
  <groupId>bug.maven.plugin</groupId>
  <artifactId>felix-bundle</artifactId>
  <packaging>bundle</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>hsqldb</name>
  <url>http://maven.apache.org</url>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
        <extensions>true</extensions>
        <configuration>
          <manifestLocation>META-INF</manifestLocation>
          <instructions>
            <Bundle-ClassPath>target/dependency/hsqldb-1.8.0.7.jar</Bundle-ClassPath>
            <Import-Package>*</Import-Package>
            <Export-Package>*</Export-Package>
            <Embed-Dependency>*;scope=compile|runtime;inline=false</Embed-Dependency>
            <Embed-Directory>target/dependency</Embed-Directory>
            <Embed-StripGroup>true</Embed-StripGroup>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.7</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
</project> 

To fix this I suggest a modification inside biz.aQute.bndlib.bndlib-0.0.255.jar inside class aQute.lib.osgiProcessor:

	private void analyzeJar(Jar jar, String prefix, Map classSpace,
			Map contained, Map referred, Map uses) throws IOException {
		next: for (Iterator r = jar.getResources().keySet().iterator(); r
				.hasNext();) {
			String path = (String) r.next();
			if (path.startsWith(prefix)) {
				String relativePath = path.substring(prefix.length());
				String pack = getPackage(relativePath);

				if (pack != null && !contained.containsKey(pack)) {
					if (!(pack.equals(""."") || isMetaData(relativePath))) {

The last line is the line where the default name space ""."" is expicit excluded. I don't understand why, but for class files it must be enabled. I suggest

				if (pack != null && !contained.containsKey(pack)) {
					if (!(pack.equals(""."") || realtivePath.endsWith("".class"") || isMetaData(relativePath))) {

to solve this issue.",any,,1800,1800,,0%,1800,1800,,,,,,,,,,,,29/Jan/09 13:01;mcculls;FELIX-807-20090129.patch;https://issues.apache.org/jira/secure/attachment/12399004/FELIX-807-20090129.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-07 04:46:50.09,,,no_permission,,,,,,,,,,,58182,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i1aptr:,270650,,,,,,,,"07/Nov/08 04:46;mcculls;I have not looked at this closely, but please note that it's a bad idea for a bundle to export the default package.
This is why Peter explicitly checks the default namespace - probably it should be a warning, not an error, and
it should definitely allow adding of classes in the default namespace if you're _not_ going to export them.

but exporting of classes in the default namespace should definitely be flagged, so your patch isn't quite right

if you want to workaround this error, you can tell BND to ignore it and create the bundle anyway:

   <_failok>true</_failok>

BTW, the bundleplugin docs:

   http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html#ApacheFelixMavenBundlePlugin(BND)-EmbedDependencyandExportPackage

clearly state why you shouldn't use <Export-Package>*</Export-Package> if you're embedding dependencies,
because you _will_ end up duplicating content, especially when you're embedding jar files with ""inline=false"".

if you look at the jar generated by your original pom it contains both the embedded jar files and their contents,
because the Embed-Dependency instruction tells BND to embed the jars and the Export-Package instruction
tells it to pull in everything on the compilation classpath (ie. inline all classfiles)

few other things: I don't think you need the extra bundle:manifest goal, the Import-Package defaults to * so you
can remove that, and Embed-Dependency takes care of updating Bundle-ClassPath with any embedded jars.

so you could trim your instructions to something like the following, perhaps:

          <instructions>
            <_exportcontents>org.hsqldb.*</_exportcontents>
            <Embed-Dependency>*;scope=compile|runtime;type=!pom;inline=false</Embed-Dependency>
            <Embed-Directory>target/dependency</Embed-Directory>
            <Embed-StripGroup>true</Embed-StripGroup>
            <_failok>true</_failok>
          </instructions>
","07/Nov/08 06:04;bebbo;since there is a workaround using

  <_failok>true</_failok> 

this is no longer urgent.","07/Nov/08 06:14;bebbo;Thanks for your input Stuart.

I agree on the default namespace, but there are JARs haveing classes in the default name space like hsqldb and I would like to have one pom.xml to convert all into a bundle. And I even dont want to export the default name space!

The   <_failok>true</_failok> suppresses the abortion and thus it works now. And _failok is not mentioned in   http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html#ApacheFelixMavenBundlePlugin(BND)-EmbedDependencyandExportPackage

so I will use now either

            <Import-Package>!*</Import-Package>
            <Export-Package>org.hsqldb.*</Export-Package>
            <Embed-Dependency>hsqldb*;scope=compile|runtime;inline=true</Embed-Dependency>
            <Embed-Directory>target/dependency</Embed-Directory>
            <Embed-StripGroup>true</Embed-StripGroup>
            <_failok>true</_failok>

or

            <Import-Package>!*</Import-Package>
            <_exportcontents>org.hsqldb.*</_exportcontents>
            <Embed-Dependency>hsqldb*;scope=compile|runtime;inline=false</Embed-Dependency>
            <Embed-Directory>target/dependency</Embed-Directory>
            <Embed-StripGroup>true</Embed-StripGroup>
            <_failok>true</_failok>

and the tags starting with an underscore still look wrong.

IMHO there should be no need for <_exportcontents>: The hint ""inline=false"" is enough information to avoid unpacking the JAR(s)
Also <_failok> is ugly. It should run smooth without.","07/Nov/08 07:50;mcculls;> I agree on the default namespace, but there are JARs haveing classes in the default name space like hsqldb and I would like to have one pom.xml to convert all into a bundle. And I even dont want to export the default name space!

yes - I totally agree that you should be allowed to have classes in the default namespace, as long as you don't export them

btw, if you don't want to export the default namespace then definitely don't use <Export-Package>*</Export-Package> as that exports everything!

> The   <_failok>true</_failok> suppresses the abortion and thus it works now. And _failok is not mentioned in   http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html#ApacheFelixMavenBundlePlugin(BND)-EmbedDependencyandExportPackage

true, the bundleplugin docs don't describe all of the possible BND instructions (as more are added over time) - it does point to the BND docs at http://aqute.biz/Code/Bnd in the first paragraph of the page and later on when it discusses certain instructions, but failok is one that should probably be mentioned explicitly

> so I will use now either
>
>            <Import-Package>!*</Import-Package>

hmm, here you're telling BND not to import anything at all, which means you'll get exceptions at runtime because hsqldb needs various javax.* packages to work - the OSGi framework only boot delegates java.* packages, so you need to import javax.* to see the JVM packages exported via the system bundle

FYI, unless you're adding attributes (like resolution:=optional for optional imports) or version ranges (to limit resolution to a specific API level) then it's often best to keep the default Import-Package instruction to * ... then BND will automatically calculate the correct imports for you (see http://aqute.biz/Code/Bnd for details)

>            <Export-Package>org.hsqldb.*</Export-Package>
>            <Embed-Dependency>hsqldb*;scope=compile|runtime;inline=true</Embed-Dependency>

again, please do not use overlapping Export-Package and Embed-Dependency instructions!

  <Export-Package> tells BND to add matching packages to the bundle and export them (ie. make them visible to other bundles)

  <Private-Package> adds matching packages to the bundle but doesn't export them (ie. they are not then visible to other bundles)

  <Embed-Dependency> tells BND to embed or inline the contents of matching dependencies, but doesn't specify their visibility

  <_exportcontents> tells BND to make certain packages visible from the bundle *without* changing the contents of the bundle 

so if you're using Embed-Dependency then just use exportcontents to mark which packages you want to export ... unless you have classes in the compilation classpath (for example locally compiled classes) that you also want to add to the bundle, in which case you use Private-Package or Export-Package with the relevant package name to pull them in as well

>            <Embed-Directory>target/dependency</Embed-Directory>
>            <Embed-StripGroup>true</Embed-StripGroup>
>            <_failok>true</_failok>
>
> or
>
>            <Import-Package>!*</Import-Package>

[see above]

>            <_exportcontents>org.hsqldb.*</_exportcontents>
>            <Embed-Dependency>hsqldb*;scope=compile|runtime;inline=false</Embed-Dependency>

this is correct - you can also use ""inline=true"" and exportcontents, because exportcontents acts just like Export-Package except it doesn't change the actual content of the bundle (doesn't pull in classes)

>            <Embed-Directory>target/dependency</Embed-Directory>
>            <Embed-StripGroup>true</Embed-StripGroup>
>            <_failok>true</_failok>
>
> and the tags starting with an underscore still look wrong.

wrong in what way?  bundleplugin works on top of BND, and a number of BND instructions like failok happen to start with a dash (-) like -failok

unfortunately in XML <-failok> is not a valid tag because of the leading dash, so we are forced to use <_failok> instead... it's the same with -exportcontents / <_exportcontents>

> IMHO there should be no need for <_exportcontents>: The hint ""inline=false"" is enough information to avoid unpacking the JAR(s)

this has nothing to do with unpacking the jar... exportcontents just says what packages you want to make visible to other bundles without changing the contents (see above for the full description of what the different instructions do). If you just use Embed-Dependency then you're telling BND to add the contents of the jar (or the jar itself) but don't say which packages should be made public

so you can leave out exportcontents, but then you won't be exporting any packages (this is ok if you're not expecting other bundles to use the packages)

> Also <_failok> is ugly. It should run smooth without.

of course, that's why it's called a workaround :)
","07/Nov/08 15:02;rickhall;In OSGi there is no way to export the default package, since it has no name and exports need a name.","08/Dec/08 17:31;bebbo;Again:

1. I don't want to export something on the default scope.
2. But if there is a class on the dfault scope - which is not exported - the plugin fails.

The plugin MUST never fail on classes it MUST ignore.","29/Jan/09 13:01;mcculls;Suggested patch, based on 0.0.308 - it keeps the default package in the list of contained packages, but disallows its export.
For a simple testcase, create a class in the default package and use Private-Package: . to include the class but not export it.",02/Feb/09 10:06;pkriens;Applied the patch in bnd-310,12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,
Instance not created if the factory becomes valid later,FELIX-805,12407855,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,05/Nov/08 13:04,08/Feb/09 14:49,14/Mar/19 02:47,05/Nov/08 13:27,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,"When an instance is declared, and  uses a non valid factory, the instance creation fails. However, when the factory becomes valid (later), the instance must be re-created (successfully). 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58184,,,Sun Feb 08 14:47:53 UTC 2009,,,,,,0|i140v3:,231602,,,,,,,,"05/Nov/08 13:27;clement.escoffier;Fixed at revision: 711559.

Instances targeting non valid factories are created as soon as the factory becomes valid.",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO Core schema needs to be fixed,FELIX-803,12407796,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,sauthieg,sauthieg,04/Nov/08 16:02,08/Feb/09 14:49,14/Mar/19 02:47,25/Nov/08 14:14,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,"The @interface attribute is still defined in the RequiresType complexType in the core.xsd
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-11-05 13:14:16.539,,,no_permission,,,,,,,,,,,58186,,,Sun Feb 08 14:47:55 UTC 2009,,,,,,0|i0w0h3:,184882,,,,,,,,"05/Nov/08 13:14;clement.escoffier;Fixed at revision: 711559.
The 'interface' attribute is now prohibited in service dependencies. This old attribute was replaced by specification to be consistent with other service dependencies.

Guillaume, do you see another inconsistency in the XML-Schema?",25/Nov/08 14:14;clement.escoffier;Fixed in a previous commit,08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,
Bundle and other displays incomplete and show JavaScript error(s),FELIX-802,12407737,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,03/Nov/08 22:18,04/Nov/08 15:45,14/Mar/19 02:47,04/Nov/08 15:45,webconsole-1.2.0,,,,,,,,,,webconsole-1.2.2,,,,Web Console,,,,,,,0,,,,,,"Running the WebConsole on an IBM J9 VM breaks the bundles (and other) displays in the console. The reason for this is, that obviously the J9 java.vm.info property is a multilline value with line separators in it, which break the JavaScript code assigning this value to a JavaScript variable.

The fix is to either account for the potentially multiline nature of this property or to not use this property at all.",,,,,,,,,,,,,,,,,,,,03/Nov/08 22:21;fmeschbe;bundles.html;https://issues.apache.org/jira/secure/attachment/12393270/bundles.html,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58187,,,Tue Nov 04 15:45:11 UTC 2008,,,,,,0|i0w0fz:,184877,,,,,,,,03/Nov/08 22:20;fmeschbe;HTML output with the corrupt assignment.,03/Nov/08 22:21;fmeschbe;HTML output exhibiting the faulting JavaScript variable assignment,"04/Nov/08 15:45;fmeschbe;Reorganized extraction of JVM info such that this is only done when required.

In Rev. 711275.",,,,,,,,,,,,,,,,,,,,,,,,
URLHandlersBundleStreamHandler.openConnection(URL) fails when extending Felix,FELIX-800,12407703,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,naddaf,naddaf,03/Nov/08 13:18,05/Nov/08 04:16,14/Mar/19 02:47,03/Nov/08 17:19,framework-1.0.4,framework-1.2.0,framework-1.2.1,framework-1.2.2,,,,,,,framework-1.4.0,,,,Framework,,,,,,,0,,,,,,"I am seeing an exception in the URLHandlersBundleStreamHandler.openConnection(URL) method. Here is the part I am referring to:

if (framework != null)
       {
           // TODO: optimize this to not use reflection if not needed
           try
           {
               Class targetClass = framework.getClass().getClassLoader().loadClass(
                   URLHandlersBundleURLConnection.class.getName());
                             return (URLConnection) m_action.invoke(m_action.getConstructor(targetClass,
                   new Class[]{URL.class, framework.getClass()}),
                   new Object[]{url, framework});
           }
           catch (Exception ex)
           {
               throw new IOException(ex.getMessage());
           }
       }
       throw new IOException(""No framework context found"");

The problem happens when reflection fails to find the appropriate constructor and throws a NoSuchMethodException; here the targetClass resolves to ""org.apache.felix.framework.URLHandlersBundleURLConnection"" and
the exception is:

java.lang.NoSuchMethodException: org.apache.felix.framework.URLHandlersBundleURLConnection.<init>(java.net.URL, org.simplecenter.application.SimpleCenterApplication)

Note that SimpleCenterApplicaion extends Felix and  URLHandlersBundleURLConnection has the constructor URLHandlersBundleURLConnection(URL, Felix). ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-11-03 13:29:40.322,,,no_permission,,,,,,,,,,,58189,,,Wed Nov 05 04:16:17 UTC 2008,,,,,,0|i1apuf:,270653,,,,,,,,03/Nov/08 13:29;karlpauls;The issue is that we didn't assume somebody could extend the org.apache.felix.framework.Felix class. The fix is to use framework.getClass().getClassloader().loadClass(Felix.class.getName()) instead of framework.getClass(). This needs to be changed in more then one place and should make it into 1.4.0.,03/Nov/08 17:19;karlpauls;Should be fixed in trunk and the upcoming 1.4.0 release. Please test it and close this issue if it works for you.,"05/Nov/08 04:16;naddaf;I tested the fix in the trunk and worked perfectly fine, thank you Karl.",,,,,,,,,,,,,,,,,,,,,,,,
ServiceReferenceImpl does not support the compareTo() method,FELIX-799,12407652,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,mcculls,mcculls,01/Nov/08 14:57,05/Nov/08 16:51,14/Mar/19 02:47,04/Nov/08 18:06,framework-1.2.2,,,,,,,,,,framework-1.4.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"The current ServiceReferenceImpl does not support the compareTo() method, introduced in release 4.1 of the OSGi spec:

   http://www.osgi.org/javadoc/r4v41/org/osgi/framework/ServiceReference.html#compareTo(java.lang.Object)

I'm also going to link to the general contract for compareTo() in the Java spec, as it explains what happens when comparing against different types:

   http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Comparable.html#compareTo(java.lang.Object)

I'll attach an initial patch which should work according to the spec, although I have not tested it thoroughly.",,,,,,,,,,,,,,,,,,,,01/Nov/08 15:12;mcculls;FELIX-799.txt;https://issues.apache.org/jira/secure/attachment/12393196/FELIX-799.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-04 18:06:45.618,,,no_permission,,,,,,,,,,,58190,,,Wed Nov 05 16:51:55 UTC 2008,,,,,,0|i140vr:,231605,,,,,,,,"01/Nov/08 15:12;mcculls;This patch follows the algorithm specified in the R4.1 OSGi javadoc, and uses a utility method to convert number based properties to longs for simpler comparison (because service.id is defined as a Long, but service.ranking is an Integer).","04/Nov/08 18:06;rickhall;I applied the patch, but (perhaps for personal preference reasons) I didn't see the need for the utility method, so I just pulled that functionality up into the compareTo() method. I also modified BundleContextImpl.getBestServiceReference() to use the ServiceReference.compareTo() method rather than duplicate the functionality. I ran it through the TCK and everything appears to be ok. Thanks for the patch Stuart. Please close this issue if you are satisfied with the result.",05/Nov/08 16:51;mcculls;Tested and it works great - closing issue.,,,,,,,,,,,,,,,,,,,,,,,,
Current implementation of ServiceRegistration.getReference() does not follow the spec,FELIX-798,12407585,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,mcculls,mcculls,31/Oct/08 10:45,31/Oct/08 17:53,14/Mar/19 02:47,31/Oct/08 17:14,framework-1.2.2,,,,,,,,,,framework-1.4.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"According to the javadoc for getReference() it should throw an exception if the service is unregistered:

  java.lang.IllegalStateException - If this ServiceRegistration object has already been unregistered.

see http://www.osgi.org/javadoc/r4v41/org/osgi/framework/ServiceRegistration.html#getReference()

However, the current ServiceRegistration implementation in Felix continues to return a valid reference
even after the service is unregistered (discovered this when working on service examples for the book)

I'll attach a patch for review.",,,,,,,,,,,,,,,,,,,,31/Oct/08 10:47;mcculls;FELIX-798.txt;https://issues.apache.org/jira/secure/attachment/12393140/FELIX-798.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-10-31 17:14:25.006,,,no_permission,,,,,,,,,,,58191,,,Fri Oct 31 17:53:29 UTC 2008,,,,,,0|i140qv:,231583,,,,,,,,"31/Oct/08 10:51;mcculls;FYI, the spec also mentions throwing an IllegalArgumentException when setting properties that have duplicate keys with different cases, but I can't tell where this is checked in the current implementation...","31/Oct/08 17:14;rickhall;Stuart, I have applied your patch and fixed the other issue you raised. Please close this bug if you are satisfied. Thanks.","31/Oct/08 17:53;mcculls;Hi Richard - I've tested the new code and it works perfectly, thanks!",,,,,,,,,,,,,,,,,,,,,,,,
Composite Architecture contains dupliacte instances,FELIX-797,12407421,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,29/Oct/08 14:32,08/Feb/09 14:49,14/Mar/19 02:47,29/Oct/08 14:44,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,"When the arch command introspects an iPOJO composite instance, contained instances are displayed twice. Moreover, there is a redundancy between the instance handler description and the contained instance part of the composite structure description. Instances are described twice.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58192,,,Sun Feb 08 14:47:54 UTC 2009,,,,,,0|i1418n:,231663,,,,,,,,"29/Oct/08 14:44;clement.escoffier;Fixed at revision 708917.
Contained instance description is now contained once and avoids redundancy.",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,,
Event Admin handler reject correctly formed topics,FELIX-794,12407186,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,24/Oct/08 15:44,08/Feb/09 14:49,14/Mar/19 02:47,24/Oct/08 16:42,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,"When receiving events, the Event Admin handler rejects valid topics. The issue comes from using a bad method validating topics. The used method is the one used to send topics, and so reject the '*' character. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58195,,,Sun Feb 08 14:47:55 UTC 2009,,,,,,0|i1416v:,231655,,,,,,,,"24/Oct/08 16:42;clement.escoffier;Fix committed in the trunk.

The method validating topics is now compliant with the OSGi Event Admin specification.",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in ResourceComparator if no presentationname given,FELIX-789,12407100,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,dirk.mahler,dirk.mahler,23/Oct/08 16:08,28/Oct/08 08:43,14/Mar/19 02:47,24/Oct/08 20:37,bundlerepository-1.2.0,,,,,,,,,,framework-1.4.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"If the OBR repository is created using the latest bindex version available from the OSGi web site there may be resource entries without presentationnames. Processing such an entry results in a NullPointerException in the class org.apache.felix.bundlerepository.ResourceComparator if the variable name1 becomes null:

        String name1 = (String) r1.getPresentationName();        
        String name2 = (String) r2.getPresentationName();        
        return name1.compareToIgnoreCase(name2) ;

Replacing the last line with

        return name1 != null ? name1.compareToIgnoreCase(name2) : -1;

fixes the issue.

See also discussion (especially the latest posting by Peter Kriens) under 
http://markmail.org/message/spi5uuceaqhll2t5#query:felix%20obr%20bindex%20nullpointerexception+page:1+mid:spi5uuceaqhll2t5+state:results","Eclipse Equinox 3.4.0
org.apache.felix.bundlerepository_1.2.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-23 16:13:56.129,,,no_permission,,,,,,,,,,,58200,,,Tue Oct 28 08:43:24 UTC 2008,,,,,,0|i1416n:,231654,,,,,,,,"23/Oct/08 16:13;rickhall;I am working on OBR right now on a different issue, so I will look into this too.","24/Oct/08 20:37;rickhall;I have committed a patch to fix this. Dirk, please close the issue if you are satisfied. Thanks.",28/Oct/08 08:43;dirk.mahler;the fix works as expected. thanx ;-),,,,,,,,,,,,,,,,,,,,,,,,
Failed to create object that extends super class with BundleContext argument,FELIX-788,12407098,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,xeraph,xeraph,23/Oct/08 15:38,08/Feb/09 14:49,14/Mar/19 02:47,24/Oct/08 08:43,iPOJO-1.0.0,,,,,,,,,,iPOJO-1.2.0,,,,iPOJO,,,,,,,0,,,,,,"In this situation:

Bundle 1:
public interface I {
}

public abstract class A implements I {
}

public abstract class B extends A implements Runnable {
  public B(BundleContext context) {
  }
}

Bundle 2:

public class C extends B {
  public B(BundleContext context) {
    super(context);
  }
}

I used org.apache.felix.iPOJO.Factory.createComponentInstance(null);
But iPOJO failed to create instance like this:

[C] ERROR: [instance.name] createInstance -> The POJO constructor invocation failed : (class: C, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;Lorg/osgi/framework/BundleContext;)V) Expecting to find object/array on stack
","JDK 1.6
Felix 1.2.1
iPOJO 1.0.0 and 0.8.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-24 08:43:19.008,,,no_permission,,,,,,,,,,,58201,,,Sun Feb 08 14:47:53 UTC 2009,,,,,,0|i1apvr:,270659,,,,,,,,"24/Oct/08 08:43;clement.escoffier;Fixed at revision 707578.
The super constructor invocation can use the bundle context given in parameter of the constructor.","24/Oct/08 13:08;xeraph;Thank you. problem solved.
Note that maven-ipojo-plugin 1.1.0-SNAPSHOT should be used, I was confused because of it.",08/Feb/09 14:47;clement.escoffier;issue fixed in iPOJO 1.2.0,,,,,,,,,,,,,,,,,,,,,,,,
Webpage about maven plugin gone ,FELIX-786,12406979,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,pkriens,pkriens,22/Oct/08 10:21,22/Oct/08 14:25,14/Mar/19 02:47,22/Oct/08 14:25,,,,,,,,,,,,,,,Documentation,,,,,,,0,,,,,,"http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html gets a 404 on the website, there are quite a few people linking to this and you do not get a site map or site search facility",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-22 10:32:28.952,,,no_permission,,,,,,,,,,,58203,,,Wed Oct 22 14:25:37 UTC 2008,,,,,,0|i1415z:,231651,,,,,,,,"22/Oct/08 10:32;mcculls;That link works fine for me - can you try it again?

You can also get there via documentation -> subprojects -> Apache Felix Maven Bundle Plugin (BND)","22/Oct/08 14:25;pkriens;Agree, now it works. This morning I got a 404",,,,,,,,,,,,,,,,,,,,,,,,,
Manifest goal ignores version attribute specified in _exportcontents,FELIX-782,12406686,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,sahoo,sahoo,17/Oct/08 14:45,12/Mar/09 08:05,14/Mar/19 02:47,29/Jan/09 17:12,maven-bundle-plugin-1.4.3,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"I am using maven-bundle-plugin version 1.4.3. We use the manifest goal and configure the plugin to read bnd instructions from a file called osgi.bundle like this:
                       <_include>-${basedir}/osgi.bundle</_include>

In thet artifact's osgi.bundle file, we use _exportcontents to list the packages to be exported. I am observing that even if I set a version attribute explicitly as part of _exportcontents instruction, the generated Export-Package headers in the manifest always contains version as 3.0-Prelude-SNAPSHOT, which is the version of the artifact being built. If I switch to using Export-Package, the generated manifest contains whatever version I specify in the osgi.bundle file. This looks like a bug to me.","OpenSolaris, JDK 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-29 17:12:44.923,,,no_permission,,,,,,,,,,,58207,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i0w1f3:,185035,,,,,,,,"29/Jan/09 17:12;mcculls;My local tests suggest this has been fixed by the changes in trunk, which include an update to BND.
I haven't deployed a new 1.5.0-SNAPSHOT, but will do so tomorrow morning (about 8hrs from now).",12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException in webconsole,FELIX-780,12406565,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,apanday,apanday,16/Oct/08 07:13,19/Dec/16 17:25,14/Mar/19 02:47,16/Oct/08 07:37,,,,,,,,,,,webconsole-1.2.2,,,,Web Console,,,,,,,0,,,,,,"I just bumped into this exception in the webconsole module:

java.lang.ArrayIndexOutOfBoundsException: 1
    at org.apache.felix.webconsole.internal.compendium.ComponentConfigurationPrinter.printConfiguration(ComponentConfigurationPrinter.java:81)


And indeed, looking at the code in the trunk, it looks like a typo.. (should be ""Components components = components[i];"")

               // order components by id
               TreeMap componentMap = new TreeMap();
               for ( int i = 0; i < components.length; i++ )
               {
                   Component component = components[1];
                   componentMap.put( new Long( component.getId() ), component );
               }


thanks,
Arjun ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-16 07:37:18.39,,,no_permission,,,,,,,,,,,58209,,,Thu Oct 16 07:37:18 UTC 2008,,,,,,0|i0vtqf:,183790,,,,,,,,"16/Oct/08 07:37;fmeschbe;Thanks for reporting. This is fixed in Rev. 705158.

Please close this issue, if it works for you. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,
The resolver does not correctly mark attached fragment modules as resolved,FELIX-777,12406525,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,15/Oct/08 20:26,15/Oct/08 20:31,14/Mar/19 02:47,15/Oct/08 20:31,framework-1.2.1,,,,,,,,,,framework-1.4.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"The resolver was not correctly marking modules of resolved fragments as resolved, although the bundle was correctly marked as resolved. This caused a failure in the TCK.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58212,,,Wed Oct 15 20:31:50 UTC 2008,,,,,,0|i0w04f:,184825,,,,,,,,15/Oct/08 20:31;rickhall;I committed a patch for this.,,,,,,,,,,,,,,,,,,,,,,,,,,
Candidates for Require-Bundle dependencies should be sorted by bundle version,FELIX-775,12406510,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,15/Oct/08 16:36,15/Oct/08 16:49,14/Mar/19 02:47,15/Oct/08 16:49,framework-1.2.1,,,,,,,,,,framework-1.4.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Currently, candidates for require-bundle dependencies are not sorted according to their bundle version as required by the spec, thus the requiring bundle will not always wire to the newest version of the required bundle.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58214,,,Wed Oct 15 16:49:05 UTC 2008,,,,,,0|i0vzxb:,184793,,,,,,,,15/Oct/08 16:49;rickhall;I just committed a fix for this.,,,,,,,,,,,,,,,,,,,,,,,,,,
Checkboxes do not work in configuration admin,FELIX-774,12406483,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,15/Oct/08 12:13,15/Oct/08 12:14,14/Mar/19 02:47,15/Oct/08 12:14,webconsole-1.2.0,,,,,,,,,,webconsole-1.2.2,,,,Web Console,,,,,,,0,,,,,,"If a configuration has a boolean value which is displayed by a checkbox it is not possible to unset the value as in the case of checkboxes, the request parameter is not submitted (when unset) and therefore the server doesn't get any value for this property and still uses the default value",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58215,,,Wed Oct 15 12:14:11 UTC 2008,,,,,,0|i1415j:,231649,,,,,,,,15/Oct/08 12:14;cziegeler;Solved the issue by adding a hidden field.,,,,,,,,,,,,,,,,,,,,,,,,,,
"NOTICE file should list OSGi under ""includes"" and ""uses""",FELIX-767,12406393,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,14/Oct/08 13:08,22/Dec/08 10:23,14/Mar/19 02:47,22/Dec/08 10:23,webconsole-1.2.0,,,,,,,,,,webconsole-1.2.2,,,,Web Console,,,,,,,0,,,,,,"The NOTICE file should list OSGi under ""includes"" and ""uses"", since it does embed the OBR interface files into the JAR file.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58222,,,Mon Dec 22 10:23:33 UTC 2008,,,,,,0|i140xr:,231614,,,,,,,,22/Dec/08 10:23;fmeschbe;Added the inclusion notice in Rev. 728637.,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in SecureAction.invoke when running with SecurityManager,FELIX-766,12406383,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,14/Oct/08 11:17,15/Oct/08 23:00,14/Mar/19 02:47,14/Oct/08 11:41,framework-1.2.1,,,,,,,,,,framework-1.2.2,,,,Framework,,,,,,,0,,,,,,It is possible that a NullPointerException happens when running with SecurityManager. The issue is that starting with Felix-1.2.1 it is possible that we have a recursive call to SecureAction within the same thread. That wasn't the case before but now it might happen. This will reset the members of the actions object to null which will cause the exception. The fix is to keep references to the member on the local stack. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-15 23:00:57.572,,,no_permission,,,,,,,,,,,58223,,,Wed Oct 15 23:00:57 UTC 2008,,,,,,0|i1415r:,231650,,,,,,,,14/Oct/08 11:41;karlpauls;Fixed in trunk as of revision 704475.,"15/Oct/08 23:00;rickhall;Closing, since the release is now being voted on.",,,,,,,,,,,,,,,,,,,,,,,,,
ExportedPackage.getImportingBundles() should include bundles that do require-bundle,FELIX-764,12406322,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,13/Oct/08 17:43,14/Oct/08 17:54,14/Mar/19 02:47,14/Oct/08 17:54,framework-1.2.1,,,,,,,,,,framework-1.4.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"When we implemented Require-Bundle functionality, we did not update ExportedPackage.getImportingBundles() to include bundles that require the package as well as import it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58225,,,Tue Oct 14 17:54:37 UTC 2008,,,,,,0|i1413z:,231642,,,,,,,,14/Oct/08 17:54;rickhall;This should be fixed now.,,,,,,,,,,,,,,,,,,,,,,,,,,
Jetty6 version of Http doesn't resolve aliases according to OSGi spec,FELIX-763,12406277,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,walkerr,walkerr,13/Oct/08 05:49,13/Jun/14 09:27,14/Mar/19 02:47,14/Oct/08 19:59,,,,,,,,,,,,,,,HTTP Service,,,,,,,0,,,,,,"We have both of the following aliases mounted for resource serving:

  * /VtWebUi - served by a ""WebUiContext"" class
  * /VtWebUi/logs - served by a ""LogsContext"" class

A request to

  http://localhost:8084/VtWebUi

is getting directed to the LogsContext class (which serves /VtWebUi/logs) -
and the attached resource path is empty

According to my understanding (and the previous Jetty 4 version) - this
should get directed to the ""WebUiContext"" 

====

Form further analysis:

This looks definitely wrong to me in the current SVN rev, albeit our usage is a strange case that perhaps not many use, I think the new internal operation is wrong

We have a very similar example to the table in 102.4 of the R4 companion spec. 

alias 1 - /VtWebUi
alias 2 - /VtWebUi/logs

To me - a request for /VtWebUi - should only get routed to the getResource of alias 1?

I can't see any way according to the spec, the getResource of alias 2 should be called - it's not a matching substring, even if the getResource for alias 1 returned null (which it wouldn't in our case anyhow).

===

Additional info:

Hmmm - some further clues that something may be amiss here:

         //fails:
         //srvHttp.registerResources(alias, """", myContext);
         //srvHttp.registerResources(alias + logsAlias, """", this.envLogsContext);

         //works:
         srvHttp.registerResources(alias + logsAlias, """", this.envLogsContext);
         srvHttp.registerResources(alias, """", myContext);

Simply swapping the order of registration changes the behaviour , not quite to fully working - but a lot closer.

I'm fairly sure the order of registration shouldn't change any behaviour, except in the case of a duplicate alias exception - which this isn't. The OSGi rules for walking back down a substring of aliases until there's a match aren't based on which got registered first

Looking at the traces, Jetty seems to be using later registered aliases first - hence why the swap makes a difference. I suspect what is broken here is how Jetty does path matching to servlets - it doesn't look like it matches according to alias rules for OSGi in this newer Jetty version.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-13 06:07:34.675,,,no_permission,,,,,,,,,,,58226,,,Tue Oct 14 19:59:14 UTC 2008,,,,,,0|i0vtr3:,183793,,,,,,,,"13/Oct/08 06:07;niclas;AFAIR, not Jetty 4 nor Jetty 5 did it any differently. The described problem has been in the org.ungoverned codebase since we first used it 2-3 years ago. The scary part is that the TCK doesn't test this, and a few other spec bits where org.ungoverned doesn't fully comply (can't recall what it was).","13/Oct/08 06:33;walkerr;Agree that the earlier Jetty4 version didn't fully follow spec, but this is a new error case - our original code worked fine against the Jetty4 version and now totally breaks under the above.  The Jetty4 version definitely didn't send getResource requests to aliases that didn't match the base path, at least not for the codebase / examples we have here.

Totally agree that it'd be nice if a TCK of some form existed to verify this specific part.","14/Oct/08 19:59;walkerr;Have marked as ""resolved"" for now.

Managed with a relatively small number of changes to get Jetty mapping paths to aliases in a way that looks much closer to the spec so far. Certainly for our examples here, it's much more according to spec.

Changes comitted to SVN - will leave a few weeks before feedback before closing the issue.",,,,,,,,,,,,,,,,,,,,,,,,
Activator should be set to null on Bundle.stop(),FELIX-762,12406206,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,karlpauls,karlpauls,10/Oct/08 21:31,10/Oct/08 21:33,14/Mar/19 02:47,10/Oct/08 21:33,framework-1.2.1,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,We should set the activator to null when a bundle is stopped. This way we allow for earlier garbage collection when the bundle is not directly started again or uninstalled.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58227,,,Fri Oct 10 21:33:28 UTC 2008,,,,,,0|i1apy7:,270670,,,,,,,,10/Oct/08 21:33;karlpauls;Done as of revision 703577.,,,,,,,,,,,,,,,,,,,,,,,,,,
The calculation for isRemovalPending() is too fine-grained,FELIX-761,12406204,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,10/Oct/08 21:15,14/Oct/08 15:19,14/Mar/19 02:47,10/Oct/08 21:35,framework-1.2.1,,,,,,,,,,framework-1.4.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"ExportedPackage.isRemovalPending() should return true if the bundle has been updated or uninstalled and not yet refreshed. Currently, the framework returns true if the exported package is from a module other than the bundle's current module. I believe the removal pending flag should be associated with the bundle, not the individual modules.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58228,,,Fri Oct 10 21:35:54 UTC 2008,,,,,,0|i140vj:,231604,,,,,,,,"10/Oct/08 21:35;rickhall;I committed a fix for this. The removal pending flag is now associated with the bundle, rather than the module.",,,,,,,,,,,,,,,,,,,,,,,,,,
"Version range in import declaration creates a filter using invalid operators (<,>)",FELIX-759,12406172,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,dirk.mahler,dirk.mahler,10/Oct/08 12:47,11/Oct/11 17:09,14/Mar/19 02:47,27/Jun/11 14:00,,,,,,,,,,,maven-bundle-plugin-2.3.4,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"If a version range is given for an import-declaration (e.g. bundle http://www.springsource.com/repository/app/bundle/version/detail?name=com.springsource.javax.jms&version=1.1.0) the maven bundle plugin creates version filters for the OBR repository which might contain the operators < and >, e.g.:

<require extend=""false"" filter=""(&amp;(package=javax.transaction.xa)(version&gt;=1.0.1)(version&lt;2.0.0))"" multiple=""false"" name=""package"" optional=""true"">Import package javax.transaction.xa ;version=[1.0.1,2.0.0)</require>

These operators are currently not supported by Felix and Equinox, the OSGi specification (at least 4.0.1) only states ""<="" and "">="" as valid ones.
The resulting problem are exceptions while reading the repository descriptor:

Caused by: org.osgi.framework.InvalidSyntaxException: expected ~=|>=|<=
        at org.apache.felix.framework.FilterImpl.<init>(FilterImpl.java:81)
        at org.apache.felix.framework.BundleContextImpl.createFilter(BundleContextImpl.java:104)
        at org.apache.felix.bundlerepository.RequirementImpl.setFilter(RequirementImpl.java:57)

A simple patch for the class org.osgi.impl.bundle.obr.resource.BundleInfo.java is attached to this issue. The solution is to replace (version<2.0.0) by (!(version>=2.0.0))","Maven Bundle Plugin 1.4.3
Apache Felix Bundle Repository (1.2.0)
Apache Felix 1.2.1/Equinox 3.4.0
",,,,,,,,,,,,,,,,,,,10/Oct/08 12:48;dirk.mahler;BundleInfo.java.diff;https://issues.apache.org/jira/secure/attachment/12391885/BundleInfo.java.diff,05/Nov/08 07:06;prange;Parser.java;https://issues.apache.org/jira/secure/attachment/12393355/Parser.java,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-10-10 13:33:45.244,,,no_permission,,,,,,,,,,,58230,,,Mon Jun 27 14:00:58 UTC 2011,,,,,,0|i1apyn:,270672,,,,,,,,"10/Oct/08 13:33;mcculls;But note that the OBR RFC:

  http://www.osgi.org/download/rfc-0112_BundleRepository.pdf

contains the following sentence:

  ""The filter supports now all comparison operators: <, >, >=, <=. The absence of the < and > operators should have been fixed in R4.""

so the bundle repository should in theory support < and > (it doesn't at the moment because Felix re-uses the framework filter code)

Changing the local bundleplugin code to avoid using < and > is really a band-aid, and won't help people who use bindex:

  http://www.osgi.org/Repository/BIndex

(which is the original source for the org.osgi.impl.bundle.obr.resource code used in the bundleplugin) or other OBR tools...

Of course, if bindex decided to also not use < or >, and the OBR spec was updated accordingly then that would be a different matter...","10/Oct/08 14:32;mcculls;I can see two options, and would like to hear the views of other Felix devs:

  1)  fix the bundle repository to support < and > (or wait for the framework filters to support < and >)

or

  2)  update RFC 112 to clarify that < and > are not supported, in which case the tools need to change

I'd like to avoid the middle ground where the RFC says < and > are valid, but no-one uses them because they aren't supported in practice.","05/Nov/08 07:05;prange;Hi,

i am starting to be a heavy felix user, and i think that if the OBR bundle is to be really useful, the Felix filters should at least support the > and < operators. I have taken the liberty of downloading the head and adding the two operators in the o.a.f.framwork.util.ldap.Parser. (See attachment)

One should also have a better strategy when an unparseable filter is encountered, now the OBR bundle just skips the repository. I changed the bundle so that a ""impossible"" filter is created when an InvalidSyntaxException is encountered: (false=false). Not optimal, but at least i can load the rest of the resources from the repository. ",05/Nov/08 07:06;prange;Added org.apache.felix.framework.util.ldap.Parser with added > and < operators.,"17/Nov/08 19:10;rickhall;I will see if I can push on this a little more, since it is cropping up regularly.","29/Jan/09 18:19;mcculls;Removing this issue from the bundleplugin component because the new Bindex code (updated in trunk) now generates filters that are accepted by the existing OBR implementation. However, I'm leaving this issue open against the bundlerepository component as the version range parser still doesn't accept all the operators listed in the OBR spec.","25/Feb/10 09:07;rickhall;Just as a follow up, since I saw this issue again due to some JIRA change emails...this was discussed in CPEG at one point in time and the idea of adding such operators to Filter was rejected...at least for now.","25/Feb/10 10:34;gnt;Btw, I've just changed the filter implementation used in bundlerepository and it doesn't support '<' and '>' anymore.",27/Jun/11 14:00;mcculls;This was fixed in 2.3.4 when we switched to the Felix bundlerepository OBR code,,,,,,,,,,,,,,,,,,
webconsole 1.2.0 seems to depend on SCR,FELIX-752,12405718,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,wimpi,wimpi,03/Oct/08 21:37,19/Dec/16 17:25,14/Mar/19 02:47,22/Dec/08 10:18,webconsole-1.2.0,,,,,,,,,,webconsole-1.2.2,,,,Web Console,,,,,,,0,,,,,,"It seems like the webconsole-1.2.0 has a dependency on SCR; see Exception:

org.osgi.framework.BundleException: Exception in org.apache.felix.webconsole.internal.OsgiManagerActivator.start() of bundle org.apache.felix.webconsole.
Caused by: java.lang.NoClassDefFoundError: org.apache.felix.scr.ScrService
	at org.apache.felix.webconsole.internal.compendium.ComponentsServlet.class$(ComponentsServlet.java:60)
	at org.apache.felix.webconsole.internal.compendium.ComponentsServlet.<clinit>(ComponentsServlet.java:60)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:169)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager.class$(OsgiManager.java:55)
	at org.apache.felix.webconsole.internal.servlet.OsgiManager.<clinit>(OsgiManager.java:105)
	at org.apache.felix.webconsole.internal.OsgiManagerActivator.start(OsgiManagerActivator.java:35)


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-22 10:18:33.135,,,no_permission,,,,,,,,,,,58237,,,Mon Dec 22 10:18:33 UTC 2008,,,,,,0|i0vufz:,183905,,,,,,,,"22/Dec/08 10:18;fmeschbe;Finally came around to fixing this in Rev. 728636.

The OsgiManager class now loads the classes through its own class loader manually to catch issues when loading the classes. This should solve the issue of depending on the Felix SCR implementation.

Please close this issue, if this also works for you. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong access for setter methods,FELIX-751,12405644,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,02/Oct/08 17:44,22/Oct/08 14:00,14/Mar/19 02:47,03/Oct/08 10:54,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"The access of the setter method for field array should be 0 instead of private in order to support inner and nested classes.
Despite the actual implementation works on Sun VMs, there are issues on less tolerant VM such as JamVM or MIKA.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58238,,,Wed Oct 22 14:00:40 UTC 2008,,,,,,0|i140yv:,231619,,,,,,,,"03/Oct/08 10:54;clement.escoffier;Fixed in the 701348 revision.
Just change the access of the generated method( setter for array field) from PRIVATE to 0.",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock with class loading and URLHandlers,FELIX-748,12405384,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,fmeschbe,fmeschbe,29/Sep/08 14:52,21/Oct/08 21:53,14/Mar/19 02:47,21/Oct/08 21:53,framework-1.0.4,,,,,,,,,,framework-1.4.0,,,,Framework,,,,,,,0,,,,,,"We have a tricky dead lock issue involving Java ClassLoaders and the Felix framework URLHandlers class. We have two web apps: An Apache Sling web app using Felix as its framework and a second Web App providing a JCR repository.

While starting up, someone is accessing the JCR repository web app which causes a JSP compilation. This involves class loading and calls into the Felix URLHandlers to create some URL.

The deadlock description is:

Found one Java-level deadlock:
=============================
""SimpleQuartzScheduler_QuartzSchedulerThread"":
  waiting to lock monitor 0x0aaa6634 (object 0x03256ac0, a java.net.URLClassLoader),
  which is held by ""SCR Component Actor""
""SCR Component Actor"":
  waiting to lock monitor 0x0aaa65cc (object 0x02ebba58, a java.net.URLClassLoader),
  which is held by ""127.0.0.1 [1222693412656] GET /crx/browser/index.jsp HTTP/1.1""
""127.0.0.1 [1222693412656] GET /crx/browser/index.jsp HTTP/1.1"":
  waiting to lock monitor 0x0aaa6634 (object 0x03256ac0, a java.net.URLClassLoader),
  which is held by ""SCR Component Actor""


Looking at the code, it seems, that the URLHandlers.createURLStreamHandler class is using a synchronized blog which looks too big. In addition it uses the SecureAction.forName method, which in turn uses Class.forName, which has its issues, too.

So maybe the URLHandlers.createURLStreamHandler method should employ a different synchronization mechanism so as to avoid deadlocks through classloaders.",,,,,,,,,,,,,,,,,,,,29/Sep/08 14:53;fmeschbe;FELIX-748-deadlock.txt;https://issues.apache.org/jira/secure/attachment/12391140/FELIX-748-deadlock.txt,30/Sep/08 12:44;karlpauls;URLHandlers.patch;https://issues.apache.org/jira/secure/attachment/12391214/URLHandlers.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-09-29 16:50:28.835,,,no_permission,,,,,,,,,,,58241,,,Tue Oct 21 21:53:38 UTC 2008,,,,,,0|i0vzzr:,184804,,,,,,,,29/Sep/08 14:53;fmeschbe;Here is the full stacktrace of the three deadlocking threads.,"29/Sep/08 16:50;karlpauls;I think it should be enough to make both, the addToStreamCache and the addToContentCache methods synchronized. Then the sychronized block in both, the createUrlStreamHandler and createContentHandler methods can be narrowed down to protect the first line. 

Maybe you could try whether that works. I can create a patch but not before tomorrow evening...",29/Sep/08 17:17;fmeschbe;Thanks for the feedback. Will have a look into this -- we are still on framework 1.0.4 so a first step would be to 1.2.1 ;-),"30/Sep/08 12:44;karlpauls;This patch should work with felix-1.0.4 and felix-1.2.1 

Can you please test it and see whether it makes your issues go away (and doesn't create new :-)","30/Sep/08 19:39;fmeschbe;Thanks for the quick fix/patch. I will try to reproduce our issue without and with your patch as soon as poosible -- since I am only half-working this week, this may take until next week.",15/Oct/08 08:59;karlpauls;Any news on this one?,21/Oct/08 14:05;fmeschbe;Just tested your patch with framework trunk and it seems to work. Thanks.,21/Oct/08 21:53;karlpauls;I commited the patch to trunk (rev 706790).,,,,,,,,,,,,,,,,,,,
ConfigurationManager throws NPE when bundle that registered service is uninstalled,FELIX-740,12405256,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,peterd,peterd,26/Sep/08 17:30,25/Sep/13 14:06,14/Mar/19 02:47,14/Jan/09 20:01,configadmin-1.0.4,,,,,,,,,,configadmin-1.0.8,,,,Configuration Admin,,,,,,,0,,,,,,"Sometimes, a NullPointerException is thrown in the ConfigAdmin's update thread, that is originating from the following piece of code (ConfigurationManager):

private class ManagedServiceFactoryUpdate implements Runnable

(...)

       public void run()
       {
           Factory factory;
           try
           {
               factory = getFactory( factoryPid );
           }
           catch ( IOException ioe )
           {
               log( LogService.LOG_ERROR, ""Cannot get factory mapping for factory PID "" + factoryPid, ioe );
               return;
           }

           String bundleLocation = sr.getBundle().getLocation();


The NPE occurs in the last line. From the context it is clear that ""sr"" is not null, hence, sr.getBundle() returns null.
Probably, this is caused by a bundle that is stopped concurrently.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-14 20:01:04.302,,,no_permission,,,,,,,,,,,58249,,,Wed Sep 25 14:06:28 UTC 2013,,,,,,0|i0vvlj:,184092,,,,,,,,"14/Jan/09 20:01;fmeschbe;The ManagedServiceUpdate.run method has the same issue. I fixed both in Rev. 734500 by checking the bundle and aborting the processing if it became null.

Please close this issue, if it fixes your problem. Thanks.",25/Sep/13 14:06;fmeschbe;Close issues after release,,,,,,,,,,,,,,,,,,,,,,,,,
iPojo and annotations support when manipulating,FELIX-739,12405156,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,dgay,dgay,25/Sep/08 16:17,22/Oct/08 14:00,14/Mar/19 02:47,06/Oct/08 09:19,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"The iPojo byte code manipulation replace real public method with private one.
For exemple :
public class MyClass {
  public void myMethod() {
     //my code here
 }
}

is transformed into :

public class MyClass {
  public void myMethod() {
     // iPojo code here
 }
 private void _myMethod() {
   // my code here
 }
}

There is no problem here. But if I have annotations on the myMethod(), there are moved also to the private one,
for exemple :
public class MyClass {
  @MyAnnotation
  public void myMethod() {
     //my code here
 }
}

is transformed into :

public class MyClass {
  public void myMethod() {
     // iPojo code here
 }
 @MyAnnotation
 private void _myMethod() {
   // my code here
 }
}

I think that method annotations (other than iPojo ones) should stay on the public one to have a correct behavior.",Java 6 / Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-25 16:58:42.632,,,no_permission,,,,,,,,,,,58250,,,Wed Oct 22 14:00:40 UTC 2008,,,,,,0|i1aq1r:,270686,,,,,,,,"25/Sep/08 16:58;clement.escoffier;Hi,

I agree, I forget to move annotations when I replace the method. I will modify it.

Thanks,

Clement","02/Oct/08 17:40;clement.escoffier;Just an update.

I'm investigating how to migrate annotations. The idea is to collect annotation during the first visit and then to recreate them when I write the iPOJO method.

Clement","06/Oct/08 09:19;clement.escoffier;Solved in the trunk version.
Visible annotations are moved to generated methods. 
The test case was added to the Java 5 manipulator test suite.",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,
"First access to ""Bundles"" web console tab takes a long time if the server has no internet access ",FELIX-738,12405133,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,mikep,mikep,25/Sep/08 10:02,22/Dec/08 13:16,14/Mar/19 02:47,22/Dec/08 13:16,webconsole-1.2.0,,,,,,,,,,webconsole-1.2.2,,,,Web Console,,,,,,,0,,,,,,"Log entries:
[...]
RepositoryAdminImpl: Exception creating repository - java.net.ConnectException: Operation timed out
RepositoryAdminImpl: Ignoring repository http://oscar-osgi.sourceforge.net/obr2/repository.xml
[...]

I know that the repo URL is outdated, but even with the new URL http://felix.apache.org/obr/releases.xml we would have the same problem, as the box has no internet access.

Possible solutions and ideas:
- Make it possible to disable the lookup and/or the entire ""bundle repository""  bundle by some config value.
- Set the timeout to a lower value (maybe 5 or 10 seconds)
- Is it really necessary for the ""bundle repository"" bundle to access the repo URL when you go to the ""Bundle"" web console tab? (It makes sense for the ""OSGi Repository"" web console tab).
- Stopping/Uninstalling the ""bundle repository"" bundle poses some kind of chicken/egg problem, as one would have to use the ""Bundle"" web console tab - which is where the problem occurs - for that.
",Linux box without internet access (firewalled intranet),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-26 06:46:06.421,,,no_permission,,,,,,,,,,,58251,,,Mon Dec 22 13:16:27 UTC 2008,,,,,,0|i1aq1z:,270687,,,,,,,,"26/Sep/08 06:46;fmeschbe;> we would have the same problem, as the box has no internet access.

If the box is behind a firewill, the firewall admin should actually have set up the firewall to send back an error in case of trying to connect to the internet. So a timeout should not happen.

> Make it possible to disable the lookup and/or the entire ""bundle repository"" bundle by some config value. 

We could define a framework property and or a Config Admin property, which would disable the OBR lookup for the bundle list. Of course, I would think to enable OBR by default ;-)

> Is it really necessary for the ""bundle repository"" bundle to access....

The bundle list page provides the ""Update"" buttons. These are enabled if the OBR might have a more recent version of the respective bundle. To be able to check the OBR, the URL must of course be accessed. If you can go by without OBR updates from within the bundles list, then OBR access may be switched off (see above).


So I propose to define a property -- say org.apache.felix.webconsole.bundle.obr.disable -- which is false by default (if missing or wrong value). It is checked as a framework propery and as a ConfigurationAdmin configuration property, where the ConfigurationAdmin setting overruels the framework property.

WDYT ?","22/Dec/08 12:56;fmeschbe;Reconsidering the above proposal:

  * OBR functionality should be consolidated on the OBR page
  * Currently we miss functionality to explicitly refresh a single bundle

Therefore, I take another route: I replace the ""Update"" button by a Refresh button causing the bundle to be refreshed","22/Dec/08 13:16;fmeschbe;Replaced the ""Update"" button by a new ""Refresh"" button on the bundles page. This should prevent the display delay and adds new functionality to forcibly refresh, that is re-wire, a single bundle.",,,,,,,,,,,,,,,,,,,,,,,,
Resolver does not correctly discard export when module imports the same package (part 2),FELIX-737,12405099,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,24/Sep/08 22:17,24/Feb/17 13:52,14/Mar/19 02:47,24/Feb/17 13:52,framework-1.2.1,,,,,,,,,,,,,,Framework,Specification compliance,,,,,,0,,,,,,"FELIX-736 addressed a related aspect of this issue, it dealt with making sure that the capabilities of resolved bundles are correctly recorded so that attempts to resolve subsequent bundles do not see the discarded export, when a resolved bundle both exports and imports the same package and is wired to a provider other than itself.

The resolver is also affected by a similar bug during the resolve process itself, when it resolves transitively dependent modules. The way the resolver works is that it creates a list of all possible candidates to resolve every requirement for all transitively dependent modules. Unfortunately, some candidates might not actually be candidates because their exports might be discarded at the end if they both import and export the same package and are wired to some other provider. In this case, the export is discarded so any other transitively dependent bundles that were using the discarded export as a candidate are no longer valid. Currently, the resolver lets these bundles wire to the discarded export, which is not correct.

I think the only way to fix this is during the class consistency checking phase of the resolver. During that phase we loop through all combinations of candidates to find a consistent class space. We must extend this phase to also look to see if a candidate for a requirement has been discarded and if it has then we must ignore it and try another.

This will be a little tricky since we must make sure that we do not disturb the ordered candidate permutation of the class space checking phase, since it is the only way we know that we have tried all combinations. I think what we will need to do is if we notice an invalid candidate, we will have to locally permutate that candidate, but remember that we did so if we get a class consistency error we can set the local permutation back to the previous value so that the global permutation can continue.

This probably doesn't make sense to anyone, but me, so I will stop now. :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2014-04-03 13:51:24.678,,,no_permission,,,,,,,,,,,58252,,,Fri Feb 24 13:52:31 UTC 2017,,,,,,0|i1aq27:,270688,,,,,,,,"10/Mar/11 19:33;rickhall;Just a note to myself, the new resolver could potentially make this check a little simpler. Ultimately, an approach similar to what the description suggests is probably still the best, where we simply treat a substituted export as a constraint violation when checking class space consistency. The biggest downside to such an approach is that it could end up trying lots of permutations.","03/Apr/14 13:51;tjwatson;I fixed this in Equinox's use of the felix resolver with:

http://git.eclipse.org/c/equinox/rt.equinox.framework.git/commit/?id=217853bb6600317f28b76dd7c6521a626435f2a4

It probably could use some improvements but I needed to get *something* in here because the current behavior creates invalid wires which would be very hard to diagnose and understand if they occurred.

The basic approach I took was to find all possible candidate Capabilities that may be substituted during the prepare phase of Candidates.  Then during each permutation I check if any requirements are pointing to substituted capabilities.  If so I add a new permutation that selects the next candidate for the substitutable capability (which may be the substituted capability itself) then for the current permutation I remove the substituted capability from all other dependant requirements so they will not get wires to the substituted capability for the current permutation.

There may be a better place to do this substituted check in the consistency check, but I needed to get a basic approach working first to prevent invalid wirings from the resolver.","24/Feb/17 13:52;karlpauls;This likely doesn't apply anymore - hence, I'm closing this issue. Let's create a new one if this still needs to be addressed by the framework at a later point.",,,,,,,,,,,,,,,,,,,,,,,,
Resolver does not correctly discard export when module imports the same package,FELIX-736,12405095,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,24/Sep/08 21:03,14/Oct/08 15:19,14/Mar/19 02:47,24/Sep/08 22:06,framework-1.2.1,,,,,,,,,,framework-1.4.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"If a module both imports and exports the same package, this means the resolver has a choice to honor either the export or the import of the package. In the case where the resolve decides to honor the import, then the module's export for that same package is effectively discarded. Unfortunately, the resolver was not actually discarding the export in this case, so it is possible that another module might be wired to the effectively discarded export, even though the exporting module is importing the package from another provider. This results in some form of a re-export of the package, which is not spec compliant. We need to modify the resolver to check for this case.",,,,,,,,,,,,,,,FELIX-737,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58253,,,Wed Sep 24 22:06:37 UTC 2008,,,,,,0|i14147:,231643,,,,,,,,"24/Sep/08 22:06;rickhall;I have applied a patch to address this issue so I will close it, but there is still a related issue for which I will open a new issue.",,,,,,,,,,,,,,,,,,,,,,,,,,
Preferences.putByteArray() does not work,FELIX-735,12405090,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,gnt,gnt,24/Sep/08 17:51,23/Sep/09 07:22,14/Mar/19 02:47,14/May/09 07:00,prefs-1.0.2,,,,,,,,,,prefs-1.0.4,,,,Preferences Service,,,,,,,0,,,,,,The method calls Base64.decodeBase64 instead of Base64.encodeBase64,,,,,,,,,,,,,,,,,,,,08/May/09 13:28;fdiotalevi;FELIX-735.txt;https://issues.apache.org/jira/secure/attachment/12407618/FELIX-735.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-08 13:28:10.969,,,no_permission,,,,,,,,,,,58254,,,Thu May 14 07:00:53 UTC 2009,,,,,,0|i14127:,231634,,,,,,,,"08/May/09 13:28;fdiotalevi;As pointed out by Guillaume, the putByteArray method erroneously  store the value using Base64.decode instead of Base64.encode

Patch attached","14/May/09 07:00;cziegeler;Thanks Guillaume for your patch; I've appled it in revision 774660.
Please cross check and close this bug.

",,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate instance created of a managed service,FELIX-732,12404951,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,jassuncao,jassuncao,23/Sep/08 11:28,22/Oct/08 14:00,14/Mar/19 02:47,24/Sep/08 14:33,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"I noticed that when I start felix, sometimes are created two instances of a iPOJO managed service. This only happens when there is a configuration in ConfigurationAdmin. 
The culprit seems to be InstanceManager.getPojoObject(). The synchronization block does not prevent duplicate calls of createPojoObject() when there are two threads requesting a pojo instance that wasn't created.
One of the threads seems to be the one parsing the metadata descriptor and the other is the configuration updater thread from Configuration Admin.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-23 13:54:52.272,,,no_permission,,,,,,,,,,,58257,,,Wed Oct 22 14:00:40 UTC 2008,,,,,,0|i1412v:,231637,,,,,,,,"23/Sep/08 13:54;clement.escoffier;I agree, the synchronization protocol is wrong. It does not prevent of double object creation. It needs a more sophisticated protocol stopping threads during the creation of an instance.","24/Sep/08 14:33;clement.escoffier;Fixed in the revision 698589.
The getPOJOObject() method now avoids concurrent creation of pojo objects.",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,
Installation of referenced files which contain whitepaces fails,FELIX-731,12404875,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fornacif,fornacif,22/Sep/08 14:09,14/Oct/08 15:19,14/Mar/19 02:47,23/Sep/08 16:40,framework-1.2.1,,,,,,,,,,framework-1.4.0,,,,Framework,,,,,,,0,,,,,,"The installation of bundles which contain whitespaces by using the reference prefix fails.
When not using the reference prefix, the solution is to replace whitespaces by %20, 
Unfortunately, the same approach does not fix the issue for referenced files. 

Below the error message when installing a bundle with whitespaces:
-> install reference:file:D:/.m2/repository/org/ow2/bundles/util-plan-deployer/1.0.8-SNAPSHOT/util-plan-deployer 1.0.8-SNAPSHOT.jar
java.io.IOException: Referenced file does not exist: D:\.m2\repository\org\ow2\bundles\util-plan-deployer\1.0.8-SNAPSHOT\util-plan-deployer
java.net.MalformedURLException: no protocol: 1.0.8-SNAPSHOT.jar


Below the error message when installing a bundle by replacing whitespaces by %20:
-> install reference:file:D:/.m2/repository/org/ow2/bundles/util-plan-deployer/1.0.8-SNAPSHOT/util-plan-deployer%201.0.8-SNAPSHOT.jar
java.io.IOException: Referenced file does not exist: D:\.m2\repository\org\ow2\bundles\util-plan-deployer\1.0.8-SNAPSHOT\util-plan-deployer%201.0.8-SNAPSHOT.jar",Windows XP,,,,,,,,,,,,,,,,,,,23/Sep/08 04:31;mcculls;FELIX-731.patch;https://issues.apache.org/jira/secure/attachment/12390714/FELIX-731.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-09-22 15:12:27.804,,,no_permission,,,,,,,,,,,58258,,,Wed Sep 24 06:14:51 UTC 2008,,,,,,0|i1413j:,231640,,,,,,,,"22/Sep/08 15:12;mcculls;Forget my earlier comment - I misread the description :)

Yes, the reference: code appears to take the substring and use that as a plain filename, whereas I think it should instead attempt to create a URI (or URL) first and then pass that into the File constructor. The %20 escaped character would then be handled as part of the normal URI/URL processing.","22/Sep/08 20:21;rickhall;Well, the File constructor that accepts a URI is from Java 1.4, so I am not sure if we should use that. I couldn't quickly see how to convert the string to an URL and get the escaped version to pass into File. Where am I missing it?",23/Sep/08 04:31;mcculls;Suggested patch: for 1.3 we can use the URLDecoder class to decode escaped sequences.,"23/Sep/08 15:14;rickhall;Stuart, I am confused. Doesn't that patch attempt to decode, not encode, the string? Even then, I don't think this encoding/decoding is going to do the trick for us, since I imagine the created file name will end up taking the encoded value literally.

After closer inspection, this issue is not related to File at all. The issue is in the shell ""install"" command. It doesn't have a sophisticated parser, so it only breaks up the command line at whitespaces, which cause the line to be improperly parsed. To solve this, we would need to make the parser understand the ""\"" escape character and then you could escape the space.

The install command uses StringTokenizer, which doesn't support escaping, and to keep things simple we cannot go to the regex stuff.","23/Sep/08 15:36;mcculls;> Stuart, I am confused. Doesn't that patch attempt to decode, not encode, the string?

Correct, we want to go from the encoded URL ""...util-plan-deployer%201.0.8-SNAPSHOT.jar"" to the decoded path ""...util-plan-deployer 1.0.8-SNAPSHOT.jar"", which is exactly the same as what the file URL handler does when the bundle is installed without the reference schema.

ie. at the moment:

   install file:/tmp/a%20b/foo.jar                          works
   install reference:file:/tmp/a%20b/foo.jar        doesn't work

> Even then, I don't think this encoding/decoding is going to do the trick for us, since I imagine the created file name will end up taking the encoded value literally.

it does work, I've tested it locally - the escaped %20 is translated back into the space which is what the filesystem expects.

> After closer inspection, this issue is not related to File at all.

well it is related to URLs, which shouldn't really contain spaces - the install command accepts a series of URLs so the spaces should be escaped (%20) - this patch is just making the reference: logic work the same way as the standard install code (the URL decoding in that case is done internally when the URL connection is opened when copying it to the cache)

> The issue is in the shell ""install"" command. It doesn't have a sophisticated parser, so it only breaks up the command line at whitespaces, which cause the line to be improperly parsed.

correct, but I think it's clearer to break the arguments on spaces and require that URLs are properly encoded - otherwise we could easily run into other problems because we're essentially creating our own encoding scheme which is different from the spec'd URL scheme.

> To solve this, we would need to make the parser understand the ""\"" escape character and then you could escape the space.

the problem is that standard encoded URLs like ""file:/tmp/a%20b/foo.jar"" would still need decoding before they can be used as direct filenames.

> The install command uses StringTokenizer, which doesn't support escaping, and to keep things simple we cannot go to the regex stuff.

we don't need to change the parser - just decode the URL path into a filesystem path...",23/Sep/08 15:47;rickhall;Ah! I wasn't even thinking about it from that perspective. Makes sense.,"23/Sep/08 16:40;rickhall;Ok, I applied Stuart's patch. Francois, if you can test the trunk it would be great. I deployed a new snapshot version in Maven that you can use. If everything looks ok, please close this issue. Thanks.",24/Sep/08 06:14;fornacif;I've tested the last version of the trunk and now the bundle installation works fine. Thanks.,,,,,,,,,,,,,,,,,,,
Can't import highest package version,FELIX-730,12404826,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,pderop,pderop,21/Sep/08 21:12,14/Oct/08 15:19,14/Mar/19 02:47,24/Sep/08 20:58,,,,,,,,,,,framework-1.4.0,,,,Framework,,,,,,,0,,,,,,"This issue follows up the thread: http://www.mail-archive.com/users@felix.apache.org/msg02152.html

- I use jdk 1.6, and all the jdk packages are re-exported from the felix.properties file, with version = 1.6.0
- I have a bundle ""jaxb.jar"" which exports package ""javax.xml.bind"" with version 2.1.4 
(and the jdk also exports that package, but with version = 1.6.0).
- a bundle ""SipServletDeployer"" simply imports ""javax.xml.bind"" (but without any versions)

-> the issue is: the bundle ""SipServletDeployer"" gets wired to the 1.6.0 (jdk) version of javax.xml.bind, instead of version 2.1.4.
(but if I force ""version=2.1.4"" in  ""SipServletDeployer"", then it is properly wired to the jaxb.jar bundle).

Richard; could you please take a look at the log attached to this issue, because I don't think package ""javax.xml.bind"" is 
already loaded from system bundle (version 1.6.0) at the time ""SipServletDeployer"" is loaded ...

you can grep ""javax.xml.bind"" from the log file:

DEBUG: WIRE: 64.0 -> javax.xml.bind.annotation -> 15.0     (bundle 64 is wired to 15 (jaxb.jar) because it imports javax.xml.bind;version=2.1.4
DEBUG: WIRE: 62.0 -> javax.xml.bind -> 15.0                     (bundle 62 is wired to  15 (jaxb.jar) because it imports javax.xml.bind;version=2.1.4
DEBUG: WIRE: 30.0 -> javax.xml.bind -> 0                         (but bundle 30 (SipServletDeployer) is wired to jdk (system bundle) because it does not import with v=2.1.4 ...
etc ...
",linux,,,,,,,,,,,,,,,,,,,21/Sep/08 21:14;pderop;framework.log;https://issues.apache.org/jira/secure/attachment/12390594/framework.log,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-09-22 20:01:50.308,,,no_permission,,,,,,,,,,,58259,,,Mon Sep 29 14:45:03 UTC 2008,,,,,,0|i1aq2f:,270689,,,,,,,,"22/Sep/08 20:01;rickhall;I am able to reproduce this issue. It definitely is the case that we are considering the exported packages from system bundle as ""in use"". I need to investigate the proper definition of ""in use"" some more, but from my POV, I think we are not defining it correctly. So, that might mean that we will change this behavior. I will report back when I know more.","22/Sep/08 21:41;rickhall;After discussing this with Tom Watson, I think Felix might be implementing it correctly after all. The R4.1 spec states at the end of 3.7 that the preference is for ""resolved"" exporters over unresolved ones. I was originally thinking it was ""in use"" exporters, which would be ones that actually have a wire to them, but a ""resolved"" exporter is simply one that has been previously resolved. The system bundle must be resolved, so since the importer matches both, then the resolved state of the system bundle gives it higher priority, version number has a lower precedence. I will still look into this a little more before resolving the issue.","24/Sep/08 20:58;rickhall;I will mark this bug as ""fixed"", although it wasn't really a bug per se, since the resolver was doing the correct thing. However, I did realize that there was perhaps some confusion regarding whether the resolver should be keeping track of ""in use"" vs ""resolved"" packages. As a result, I modified the resolver to make it clear that we are dealing with ""resolved"" packages and improved some of the data structure handling that was not previously correct since it was assuming ""in use"" semantics. I did uncover a bug in the resolver, but I will open a new issue for that.

Peirre, if you are satisfied with this, please close this issue.","29/Sep/08 12:49;pderop;Hi Richard;

I have checked the latest trunk and i still have the same behaviour: If I don't provide explicitly the version number, then my bundle is
wired to the system bundle.

I am not sure whether I understand correctly your last message regarding this issue: 
Do you assume that, after your last fix, I should be able to be wired to the highest version (without providing it) ?
I just wan't to be sure, because the behaviour has not changed since the previous trunk version (before your fix).

(please close this ticket if every thing is ok ...)

Best Regards
/pierre

","29/Sep/08 14:45;rickhall;Yes, Pierre, you should see the same behavior. The reason is that the resolver favors ""resolved"" exports when chosing a candidate. The exports from the system bundle are always resolved, so they will always have priority over unresolved ones. To do a test, you could try to resolve your other exporter. If both the system bundle and your other exporter are resolved, then when you resolve the client, it should wire to the higher version of the package.

I did make a change as a result of this bug, but it won't change your scenario. The issue I changed was that the resolver was using ""in use"" (i.e., if there was a wire to the package) instead of ""resolved"" as the state to determine whether the export was given higher priority or not. This was a spec compliance bug, since it doesn't matter whether the package is used or not, it only matters if the exporter is resolved.",,,,,,,,,,,,,,,,,,,,,,
Shell-TUI causes 100% CPU load when using javaw launcher,FELIX-729,12404688,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,doejohn,doejohn,18/Sep/08 22:22,31/Mar/09 14:56,14/Mar/19 02:47,26/Sep/08 16:08,framework-1.0.4,framework-1.2.0,,,,,,,,,shell.tui-1.2.0,,,,Shell TUI,,,,,,,0,,,,,,"I ran into this issue at work with Felix 1.0.4 on Win2k SP4 and reproduced it at home with Felix 1.2.1 on Vista Enterprise, both on JDK 1.6. I only discovered it by accident, as I normally use the console during development. I suspect the people reading this do, too :-).

When using the javaw.exe launcher rather than the java.exe launcher, Felix-shell-TUI permanently draws 100% CPU (divide by the number of cores, home PC reports 50%). After removing shell-TUI from the autostart list, Felix can be run with the javaw launcher without issue, demonstrating that the problem originates from that bundle.

Steps to reproduce:
1)  unzip a fresh copy of Felix-1.2.1.zip
2)  in the install dir, create two batch files: felix-console.bat and felix-noconsole.bat, one executes `java -Dfelix.cache.profile=consoletest -jar bin\felix.jar`, the other executes `javaw -Dfelix.cache.profile=consoletest -jar bin\felix.jar`
3) double-click either from Windows Explorer, note that when you run the ""javaw"" one, CPU shoots to 100% and stays there.

Running them from within Windows Explorer isn't strictly necessary to reproduce the issue, the problem will also show when you start the batch file from the command line.","Windows 2000 SP4, Windows Vista Enterprise, JDK 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-23 14:28:31.51,,,no_permission,,,,,,,,,,,58260,,,Fri Sep 26 16:09:04 UTC 2008,,,,,,0|i0w0t3:,184936,,,,,,,,"23/Sep/08 14:28;rickhall;I was not able to test this under windows, but I was able to recreate a similar situation under Linux by redirecting stdin to /dev/null. As a result, I modified Shell TUI to look for a null input line, in which case it now assumes that there is no stdin and exits its thread's run() method.

Barend, I deployed a snapshot of ShellTUI 1.1.0 into the maven snapshot repo, could you please test it to see if it solves the issue for you? If so, please close this JIRA issue. Thanks.","25/Sep/08 21:19;doejohn;Using org.apache.felix.shell.tui-1.1.0-20080923.140259-2.jar, the problem is still present on Vista. I haven't checked at work, but I assume it's the same thing. I wrote a quick little Java class that dumps the vm properties to a text file then pokes at System.in a bit and logs those results as well. Ran it with both launchers. 

The system properties are identical with both launchers, but I found that invoking `System.in.available()` returns 0 using the java launcher but throws an IOException using the javaw launcher, so the two launchers can be distinguished:

java.io.IOException: The handle is invalid
	at java.io.FileInputStream.available(Native Method)
	at java.io.BufferedInputStream.available(BufferedInputStream.java:381)
	at foo.StdinTest.main(StdinTest.java:47)

Aside from this, invoking System.console() returns non-null for the `java` launcher and null for the `javaw` launcher. That'd be cleaner, but since that's a Java 1.6 feature, it's of no use here.","25/Sep/08 22:36;rickhall;Ok, I just committed and deployed a new snapshot that exits if it gets an IOException while reading from stdin...if this doesn't work, then I am not sure what will. I am not sure if it will impact any other scenarios, but I don't think I have too many other options at this point. Barend, please try again and see if it makes any difference. Thanks.","26/Sep/08 08:19;mcculls;FYI, ""checking for an IOException from System.in.available()"" is what we ended up using in Pax-Runner for a similar problem (and it did fix it)","26/Sep/08 16:08;doejohn;That last change fixed the problem. Thank you for your time, Richard.",26/Sep/08 16:09;doejohn;closed.,,,,,,,,,,,,,,,,,,,,,
MD5 checksum handling issue with Felix download pages/mirrors,FELIX-726,12404292,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,okock,okock,13/Sep/08 10:19,22/Dec/08 07:07,14/Mar/19 02:47,21/Dec/08 18:15,,,,,,,,,,,,,,,,,,,,,,0,,,,,,"Hi there,
I understand MD5 checksums as means to detect if the file that I've just downloaded is a) complete and b) the one I expected to download. While I never check a) unless I get an error unpacking, b) is very important.

As Apache is relying heavily on mirrors, I'd like to have to trust Apache but I can't trust every mirror server. As the MD5 sums that are linked on the download server point to the mirrors themselves, this is of no value. I'd rather like them to point to the central Apache server. The few bytes for the checksums shouldn't matter much.

Compromised mirrors would make it easy to exchange the downloaded file together with their MD5 sum - this would be somewhat more difficult to discover than getting the MD5 from an authoritative source.",http://felix.apache.org/site/downloads.cgi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-21 18:15:12.582,,,no_permission,,,,,,,,,,,58263,,,Mon Dec 22 07:07:35 UTC 2008,,,,,,0|i140vz:,231606,,,,,,,,"21/Dec/08 16:20;okock;Is there anything I can do in order to raise sensitivity for this issue? It's basically opening felix downloads to compromized servers - not that it will over all stay undetected, but linking the MD5 sums to the mirror servers does enable attackers to compromize a mirror server, provide their own changed version of felix together with their own MD5 checksum.

It's not that much a change - the download links would just need to point to the apache site instead of the mirrors for the MD5sums. Or get rid of MD5 completely and just use kryptographic signatures (asc), though these are probably not as easy to handle for everybody and thus this would lower security again...",21/Dec/08 18:15;cziegeler;This was actually a bug (oversight) in our macro generating the links for the checksums. I've corrected our macro and the correct links should be up when the site gets synced again in some hours.,22/Dec/08 07:07;cziegeler;New site is live.,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic imports should not be searched if the bundle already has required or exported the package,FELIX-724,12404270,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,12/Sep/08 19:33,14/Oct/08 15:19,14/Mar/19 02:47,15/Sep/08 21:00,framework-1.2.1,,,,,,,,,,framework-1.4.0,,,,Framework,,,,,,,0,,,,,,"When searching for a class, we search a bundle's imports, then required bundles, then content, and finally its dynamic imports. Currently, dynamic imports are not searched if we have an import for the specific package; however, we should also not search dynamic imports if the package is visible in a require-bundle or export as well, otherwise we allow splitting across to an import, which is not correct.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58265,,,Mon Sep 15 21:00:49 UTC 2008,,,,,,0|i1413r:,231641,,,,,,,,"15/Sep/08 21:00;rickhall;I addressed this issue by modifying the class loader search order to perform a check before trying to dynamically import a package to make sure that the package is not imported, exported, or required by the current bundle. Previously, we were only checking if the package was already imported.",,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException in aQute.lib.osgi.Clazz.parseClassFile,FELIX-723,12404239,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pkriens,bradcox,bradcox,12/Sep/08 11:20,01/Sep/14 10:13,14/Mar/19 02:47,02/Feb/09 10:02,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,1,,,,,,"> I integrated the recommended changes (pom enclosed below) but that
> com.ibm.icu error turned up again. Bad chinese locale class out there
> somewhere? com/ibm/icu/impl/data/LocaleElements_zh__PINYIN.class.

Seems to be triggered by  <Embed-Dependency>*;scope=compile|runtime;inline=true</Embed-Dependency>. 
At least removing that eliminates the symptom.

I'll work towards a small test case once I understand this a bit better. 
This bug is ephemeral so I want to capture what I have first.

I tried erasing it in .m2 but that didn't help. POM and stacktrace below

<?xml version=""1.0"" encoding=""UTF-8""?>
> <project
>        xmlns=""http://maven.apache.org/POM/4.0.0""
>        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
>        xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0
> http://maven.apache.org/maven-v4_0_0.xsd""
> > >
>  <modelVersion>4.0.0</modelVersion>
>  <groupId>soakit</groupId>
>  <artifactId>soakit.core</artifactId>
>  <version>1.0-SNAPSHOT</version>
>  <name>soakit.core</name>
>  <description>SoaKit Core Abstraction Layer. Defines interfaces and
> abstract classes for the components defined in sub-modules. Provides a
> service (factory class) for defining soakit composites with an XML
> configuration file.</description>
>
>  <packaging>bundle</packaging>
>
>  <parent>
>    <groupId>soakit</groupId>
>    <artifactId>soakit</artifactId>
>    <version>1.0-SNAPSHOT</version>
>  </parent>
>
>  <dependencies>
>    <dependency>
>      <groupId>commons-collections</groupId>
>      <artifactId>commons-collections</artifactId>
>      <version>3.2</version>
>    </dependency>
>                <dependency>
>                        <groupId>jdom</groupId>
>                        <artifactId>jdom</artifactId>
>                        <version>1.0</version>
>                </dependency>
>                <!--
>                <dependency>
>                        <groupId>javax.xml.parsers</groupId>
>                        <artifactId>jaxp-api</artifactId>
>                        <version>1.4</version>
>                </dependency>
>                <dependency>
>                        <groupId>javax.xml.ws</groupId>
>                        <artifactId>jaxws-api</artifactId>
>                        <version>2.1-1</version>
>                </dependency>
>                <dependency>
>                        <groupId>xerces</groupId>
>                        <artifactId>xercesImpl</artifactId>
>                        <version>2.8.1</version>
>                </dependency>
>     <dependency>
>                        <groupId>org.eclipse</groupId>
>                        <artifactId>osgi</artifactId>
>                        <version>3.4.0.v20080605-1900</version>
>    </dependency>
>    <dependency>
>                        <groupId>jaxen</groupId>
>                <artifactId>jaxen</artifactId>
>                  <version>1.1-beta-9</version>
>    </dependency>
>                -->
>  </dependencies>
>
>  <build>
>    <resources>
>      <resource>
>        <directory>src/main/resources</directory>
>      </resource>
>      <resource>
>        <directory>.</directory>
>        <includes>
>          <include>plugin.xml</include>
>        </includes>
>      </resource>
>    </resources>
>
>    <plugins>
>                        <plugin>
>        <artifactId>maven-eclipse-plugin</artifactId>
>        <configuration>
>          <pde>true</pde>
>        </configuration>
>      </plugin>
>      <plugin>
>        <groupId>org.apache.felix</groupId>
>        <artifactId>maven-bundle-plugin</artifactId>
>        <version>1.4.3</version>
>        <extensions>true</extensions>
>        <configuration>
>                                        <unpackBundle>true</unpackBundle>
>          <manifestLocation>META-INF</manifestLocation>
>          <instructions>
>            <Bundle-Version>${pom.version}</Bundle-Version>
>            <Bundle-Name>${artifactId}</Bundle-Name>
>            <Bundle-SymbolicName>${artifactId}</Bundle-SymbolicName>
>                                                <Bundle-Description>Soakit
> Core Bundle</Bundle-Description>
>
> <Bundle-Activator>com.gestalt.soakit.core.CoreActivator</Bundle-Activator>
>
> <Embed-Dependency>*;scope=compile|runtime;inline=true</Embed-Dependency>
>
>  <Embed-Transitive>true</Embed-Transitive>
>            <Embed-Directory>target/dependency</Embed-Directory>
>
> <Bundle-RequiredExecutionEnvironment>J2SE-1.5</Bundle-RequiredExecutionEnvironment>
>            <Import-Package>
>                                                        *,
>                                                        <!--
>
>  org.apache.commons.collections.*;version=""3.2""
>
>  org.apache.commons.collections.iterators.*;version=""3.2"",
>
>  org.jdom;version=""1.0"",
>
>  org.jdom.*;version=""1.0"",
>
>  org.jdom.input.*;version=""1.0"",
>
>  org.jdom.output.*;version=""1.0"",
>
>  org.apache.xerces.parsers,
>                                                        javax.*,
>                                                        javax.jws.*,
>                                                        javax.xml.bind.*,
>                                                        javax.annotation.*,
>                                                        javax.xml.soap.*,
>                                                        javax.xml.stream.*,
>                                                        javax.activation.*,
>                                                        -->
>                                                </Import-Package>
>            <Export-Package>
>                                                        .,
>
>  com.gestalt.soakit.core.*,
>
>  org.jdom;version=""1.0"",
>
>  org.jdom.*;version=""1.0"",
>
>  org.jdom.input.*;version=""1.0"",
>
>  org.jdom.output.*;version=""1.0"",
>                                                        <!--
>
>  org.apache.commons.collections.*;version=""3.2"",
>
>  org.apache.commons.collections.iterators.*;version=""3.2"",
>
>  org.apache.xerces.parsers.*,
>                                                        javax.*,
>                                                        javax.jws.*,
>                                                        javax.xml.bind,
>                                                        javax.annotation,
>                                                        javax.xml.soap,
>                                                        javax.xml.stream,
>                                                        javax.activation,
>
>                                                        -->
>                                                </Export-Package>
>          </instructions>
>        </configuration>
>      </plugin>
>                        <!--
>            <plugin>
>                                <groupId>org.apache.maven.plugins</groupId>
>
>  <artifactId>maven-eclipse-plugin</artifactId>
>                                <configuration>
>
>  <projectNameTemplate>[artifactId]-[version]</projectNameTemplate>
>                                        <wtpmanifest>true</wtpmanifest>
>
>  <wtpapplicationxml>true</wtpapplicationxml>
>                                        <wtpversion>2.0</wtpversion>
>
>  <manifest>${basedir}/src/main/resources/META-INF/MANIFEST.MF</manifest>
>                                </configuration>
>      </plugin>
>                        -->
>    </plugins>
>    <extensions>
>    </extensions>
>  </build>
> </project>



> >
> > To reproduce, with the enclosed pom.
> > mvn clean
> > mvn pde:clean -Dverbose # to be ""safe""
> > mvn eclipse:clean -Dverbose # to be ""safe""
> > mvn -e install
> >
> > + Error stacktraces are turned on.
> > [INFO] Scanning for projects...
> > [INFO] Reactor build order:
> > [INFO]   soakit root pom
> > [INFO]   soakit.core
> > [INFO]   soakit.main
> > [INFO]   soakit.port
> > [INFO]   soakit.port.file
> > [INFO]   soakit.port.http
> > [INFO]   soakit.transform
> > [INFO]   soakit.transform.identity
> > [INFO]   soakit.transform.log
> > [INFO]   soakit.transform.pep
> > [INFO]   soakit.transform.xsl
> > [INFO]   soakit.component
> > [INFO]   soakit.test
> > [INFO]
> > ------------------------------------------------------------------------
> > [INFO] Building soakit root pom
> > [INFO]    task-segment: [install]
> > [INFO]
> > ------------------------------------------------------------------------
> > [INFO] [site:attach-descriptor]
> > [INFO] [install:install]
> > [INFO] Installing /SoftwareDevelopment/soakit/pom.xml to
> > /Users/bradcox/.m2/repository/soakit/soakit/1.0-SNAPSHOT/soakit-1.0-SNAPSHOT.pom
> > [INFO]
> > ------------------------------------------------------------------------
> > [INFO] Building soakit.core
> > [INFO]    task-segment: [install]
> > [INFO]
> > ------------------------------------------------------------------------
> > [INFO] [resources:resources]
> > [INFO] Using default encoding to copy filtered resources.
> > [INFO] [compiler:compile]
> > [INFO] Nothing to compile - all classes are up to date
> > [INFO] [resources:testResources]
> > [INFO] Using default encoding to copy filtered resources.
> > [INFO] [compiler:testCompile]
> > [INFO] No sources to compile
> > [INFO] [surefire:test]
> > [INFO] No tests to run.
> > [INFO] [bundle:bundle]
> > java.lang.ArrayIndexOutOfBoundsException: 60
> >        at aQute.lib.osgi.Clazz.parseClassFile(Clazz.java:130)
> >        at aQute.lib.osgi.Clazz.<init>(Clazz.java:65)
> >        at aQute.lib.osgi.Processor.analyzeJar(Processor.java:159)
> >        at
> > aQute.lib.osgi.Processor.analyzeBundleClasspath(Processor.java:77)
> >        at aQute.lib.osgi.Analyzer.analyze(Analyzer.java:194)
> >        at aQute.lib.osgi.Builder.analyze(Builder.java:95)
> >        at aQute.lib.osgi.Analyzer.calcManifest(Analyzer.java:293)
> >        at aQute.lib.osgi.Builder.build(Builder.java:45)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.buildOSGiBundle(BundlePlugin.java:391)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:273)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:227)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:218)
> >        at
> > org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:499)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:478)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)
> >        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
> >        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
> >        at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
> >        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> >        at
> > sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> >        at
> > sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> >        at java.lang.reflect.Method.invoke(Method.java:585)
> >        at
> > org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
> >        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
> >        at
> > org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
> >        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> > java.lang.ArrayIndexOutOfBoundsException: 60
> >        at aQute.lib.osgi.Clazz.parseClassFile(Clazz.java:130)
> >        at aQute.lib.osgi.Clazz.<init>(Clazz.java:65)
> >        at aQute.lib.osgi.Processor.analyzeJar(Processor.java:159)
> >        at
> > aQute.lib.osgi.Processor.analyzeBundleClasspath(Processor.java:77)
> >        at aQute.lib.osgi.Verifier.verify(Verifier.java:354)
> >        at aQute.lib.osgi.Builder.doVerify(Builder.java:216)
> >        at aQute.lib.osgi.Builder.build(Builder.java:52)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.buildOSGiBundle(BundlePlugin.java:391)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:273)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:227)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:218)
> >        at
> > org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:499)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:478)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)
> >        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
> >        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
> >        at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
> >        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> >        at
> > sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> >        at
> > sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> >        at java.lang.reflect.Method.invoke(Method.java:585)
> >        at
> > org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
> >        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
> >        at
> > org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
> >        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> > [WARNING] Warning building bundle soakit:soakit.core:bundle:1.0-SNAPSHOT :
> > Instructions for Export-Package that are never used:
> > org\.jdom\.input\..*|org\.jdom\.input,
> > org\.jdom\.output\..*|org\.jdom\.output, \.
> > [WARNING] Warning building bundle soakit:soakit.core:bundle:1.0-SNAPSHOT :
> > Superfluous export-package instructions: [., org.jdom.input.*,
> > org.jdom.output.*]
> > [ERROR] Error building bundle soakit:soakit.core:bundle:1.0-SNAPSHOT :
> > Invalid class file: com/ibm/icu/impl/data/LocaleElements_zh__PINYIN.class 60
> > [ERROR] Error building bundle soakit:soakit.core:bundle:1.0-SNAPSHOT :
> > Invalid class file: com/ibm/icu/impl/data/LocaleElements_zh__PINYIN.class 60
> > [ERROR] Error building bundle soakit:soakit.core:bundle:1.0-SNAPSHOT :
> > Unresolved references to [.] by class(es) on the Bundle-Classpath[Jar:dot]:
> > [JDOMAbout$Info.class, JDOMAbout.class, JDOMAbout$Author.class]
> > [ERROR] Error(s) found in bundle configuration
> > [INFO]
> > ------------------------------------------------------------------------
> > [ERROR] BUILD ERROR
> > [INFO]
> > ------------------------------------------------------------------------
> > [INFO] Error(s) found in bundle configuration
> > [INFO]
> > ------------------------------------------------------------------------
> > [INFO] Trace
> > org.apache.maven.lifecycle.LifecycleExecutionException: Error(s) found in
> > bundle configuration
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:583)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:499)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:478)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)
> >        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
> >        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
> >        at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
> >        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> >        at
> > sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> >        at
> > sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> >        at java.lang.reflect.Method.invoke(Method.java:585)
> >        at
> > org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
> >        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
> >        at
> > org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
> >        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> > Caused by: org.apache.maven.plugin.MojoExecutionException: Error(s) found
> > in bundle configuration
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:344)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:227)
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:218)
> >        at
> > org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)
> >        at
> > org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)
> >        ... 16 more
> > Caused by: org.apache.maven.plugin.MojoFailureException: Error(s) found in
> > bundle configuration
> >        at
> > org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:296)
> >        ... 20 more
> > [INFO]
> > ------------------------------------------------------------------------
> > [INFO] Total time: 7 seconds
> > [INFO] Finished at: Thu Sep 11 17:15:15 EDT 2008
> > [INFO] Final Memory: 17M/254M
> > [INFO]
> > ------------------------------------------------------------------------


",MacOSX,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-12 14:38:45.479,,,no_permission,,,,,,,,,,,58266,,,Mon Sep 01 10:13:42 UTC 2014,,,,,,0|i1aq3b:,270693,,,,,,,,"12/Sep/08 14:38;mcculls;FYI, removing the embed instruction just means you won't be adding
any of the classfiles from the dependencies - so I'd fully expect that to
eliminate the symptom, as BND will never see that particular class.

So it's now just a matter of finding which dependency contains that
class and then we can confirm whether or not this is a broken class,
or a bug in BND.","12/Sep/08 14:57;mcculls;OK, here's a much simpler testcase pom that shows the same bug:

<?xml version=""1.0"" encoding=""UTF-8""?>
<project xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"" xmlns=""http://maven.apache.org/POM/4.0.0"">

  <modelVersion>4.0.0</modelVersion>

  <groupId>examples</groupId>
  <artifactId>com.ibm.icu.icu4j</artifactId>
  <version>2.6.1</version>

  <packaging>bundle</packaging>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>1.4.3</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Private-Package>*</Private-Package>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>2.6.1</version>
    </dependency>
  </dependencies>

</project>
",12/Sep/08 15:03;mcculls;Hi Peter - do you have any time to look into this?  it's either a bad classfile or a bug in the BND classfile parser...,"13/Sep/08 22:48;bradcox;The file causing this has been reported at http://bugs.icu-project.org/trac/ticket/6505 by the eclipse team. Lots of people are hitting this. Maybe originates in BPEL? Hope you can wrap the exception somehow, this has me stopped cold.","16/Sep/08 16:42;pkriens;Though bnd prints a stacktrace, that is just because the error is unexpected. However, bnd keeps processing and just reports an error at the end. -failok can be used but an invalid class is really a reason to fail the project ...
","02/Feb/09 10:02;pkriens;The stacktrace is just a warning, so this is not an error",01/Sep/14 10:13;kaufholdr;If someone else hit this issue. It's fixed in version 2.5.0 of the maven-bundle-plugin.,,,,,,,,,,,,,,,,,,,,
Can't manage split packages with Require-Bundle header,FELIX-722,12404224,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,pderop,pderop,12/Sep/08 07:21,14/Oct/08 15:19,14/Mar/19 02:47,15/Sep/08 21:04,framework-1.2.1,,,,,,,,,,framework-1.4.0,,,,Framework,,,,,,,0,,,,,,"Attached to this post a sample code which tries to manage split packages with the
""Require-Bundle"" header. 
It does not work with felix 1.2.1 (but sounds like working with knoperfish).

Please have a look at the following felix forum post:
http://www.mail-archive.com/users@felix.apache.org/msg02044.html
",Linux,,,,,,,,,,,,,,,,,,,12/Sep/08 07:25;pderop;test-splitpackage.tgz;https://issues.apache.org/jira/secure/attachment/12389990/test-splitpackage.tgz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-09-12 07:56:33.867,,,no_permission,,,,,,,,,,,58267,,,Thu Sep 18 10:55:43 UTC 2008,,,,,,0|i1aq3j:,270694,,,,,,,,"12/Sep/08 07:25;pderop;In this archive, you will find the three bundles (generated under ""test-splitpackages/bundles/"" dir).
(it's already compiled, but there is a ""build.xml"" ni test-splitpackages/ dir).
","12/Sep/08 07:56;mcculls;FYI, I've also confirmed this works in Equinox using a similar setup","12/Sep/08 18:14;rickhall;I think I have gotten to the bottom of this, but I uncovered another issue that I now need to address first. Expect a fix before long.","15/Sep/08 21:04;rickhall;Committed a fix for this issue. Basically, the class loader delegation was incorrect; it was only delegating to the module content in all cases instead of the module wire in the case of a require-bundle dependency. The attached example now behaves correctly for me. Pierre, could you please test the trunk (or the snapshot which I will deploy shortly) and close this issue if you are satisfied. Thanks.","15/Sep/08 21:13;rickhall;Just more clarification as to what was going wrong here and why it wasn't noticed a long time ago...

This only impacted the situation where a bundle required other bundles and then aggregated a split package from those bundles and re-exported the split package. The error occurred when an Import-Package was then wired to the re-exported packages, since the delegation was being sent directly to the exporting module's content instead of through its require-bundle wires. Delegation worked correctly for the bundle doing the require-bundle, just not for any bundles importing a re-exported package.","18/Sep/08 10:53;pderop;Richard, 

It works ! I close the issue. 
Thank you !


","18/Sep/08 10:55;pderop;I verified the fix in our application server, and it works just fine.
thanks a million !

/pierre",,,,,,,,,,,,,,,,,,,,
Several bundle depends on org.osgi.core:1.1.0-SNAPSHOT,FELIX-715,12403983,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,stefano.lenzi,stefano.lenzi,09/Sep/08 11:30,21/Nov/08 21:49,14/Mar/19 02:47,21/Nov/08 21:49,,,,,,,,,,,,,,,Log Service,MOSGi,Service Binder,Shell,UPnP Subproject,Wire Admin,,0,,,,,,Several bundles depends on org.osgi.core:1.1.0-SNAPSHOT and org.apache.felix.bundlerepository:1.1.0-SNAPSHOT which have never been released so the trunk fails to compile.,"Empty local m2 repository, and SVN verion of Felix ",,,,,,,,,,,,FELIX-821,,,,,,,09/Sep/08 11:42;stefano.lenzi;trunk.r693405.patch;https://issues.apache.org/jira/secure/attachment/12389741/trunk.r693405.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-21 21:49:39.179,,,no_permission,,,,,,,,,,,58274,,,Fri Nov 21 21:49:39 UTC 2008,,,,,,0|i1aq4v:,270700,,,,,,,,09/Sep/08 11:42;stefano.lenzi;A simple patch for let the trunk compile with an empty m2 maven repository,21/Nov/08 21:49;rickhall;I guess we didn't see this duplicate earlier. I will close this since we fixed it in FELIX-821.,,,,,,,,,,,,,,,,,,,,,,,,,
Needless component reactivation on startup,FELIX-714,12403972,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,fmeschbe,fmeschbe,09/Sep/08 10:00,06/Feb/09 16:55,14/Mar/19 02:47,06/Feb/09 14:51,scr-1.0.0,scr-1.0.2,scr-1.0.4,scr-1.0.6,,,,,,,scr-1.0.8,,,,Declarative Services (SCR),,,,,,,0,,,,,,"SCR registers a ManagedService on behalf of each component to receive configuration from the Configuration Admin Service.

During component activation, SCR executes the following steps:

  * registers a ManagedService on behalf of the Component
  * activates the Component
  * forwards configuration updates to the Component be reactivating it

If on first component activation, the Configuration Admin Service has not yet updated the ManagedService the component will actually be activated twice: first without configuration and the second time with the configuration. If the Configuration Admin Service does not actually have configuration for the Component, the second activation is not needed and should be prevented.

See also http://markmail.org/message/64kiv5nah4bc2ys4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-04 23:27:03.393,,,no_permission,,,,,,,,,,,58275,,,Fri Feb 06 16:55:11 UTC 2009,,,,,,0|i1aq53:,270701,,,,,,,,"04/Feb/09 23:27;pderop;Hello Felix,
I come back to you about this old problem of double reactivation (it's really an issue for us).

So far, I have made the following patch in ImmediateComponentManager.java ->

    public void reconfigure( Dictionary configuration )
    {
        // (Pierre) ignore initial configuration admin callback if there's not configuration at all
        if (configuration == null) {
	  return;
	}
       ....

But I am not sure if this quick patch is really sufficient (probably not).
Do you plan to fix this issue ?

Thanks.","05/Feb/09 12:21;fmeschbe;Yes, this makes perfect sense, with one caveat: This method may be called with a null argument if there is no configuration on first startup and if any existing configuration has been deleted.

So, we would have to take care of this situation like this:

   public void reconfigure( Dictionary configuration )
    {
        // (Pierre) ignore initial configuration admin callback if there's not configuration at all
        if (configuration == null && m_configurationProperties == null) {
            return;
        }
       .... 

WDYT ?","05/Feb/09 15:26;pderop;yes Felix, it sounds ok for me.

Are you willing to commit this fix in the trunk ?

","06/Feb/09 10:42;fmeschbe;Yes, I will do this today.","06/Feb/09 14:51;fmeschbe;Applied the change in Rev. 741578.

Can you please test whether this also works for you ? Thanks.",06/Feb/09 15:31;fmeschbe;I have deployed SNAPSHOT version 1.0.7-20090206.153010-1 containing this fix. ,"06/Feb/09 16:29;pderop;yes -> it works perfectly.
thanks 
",06/Feb/09 16:55;fmeschbe;Thanks. So this can be closed.,,,,,,,,,,,,,,,,,,,
Cannot install ShellGUIPlugin with OBR,FELIX-703,12403239,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sauthieg,sauthieg,28/Aug/08 09:44,31/Mar/09 14:51,14/Mar/19 02:47,28/Aug/08 14:07,framework-1.0.4,,,,,,,,,,shell-1.2.0,,,,Shell,,,,,,,0,,,,,,"The pom.xml of the shell.gui.plugin project has incorrect Import-Service definition:
http://svn.apache.org/viewvc/felix/trunk/shell.gui.plugin/pom.xml?view=markup

If you look closely, you will see that it expects an org.apache.felix.bundlerepository.RepostioryAdmin service to be available.

First, there is a typo RepostioryAdmin should be RepositoryAdmin
And then, the package is all wrong :)
the OBR service interface is org.osgi.service.obr.RepositoryAdmin",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-28 14:07:31.928,,,no_permission,,,,,,,,,,,58286,,,Fri Aug 29 07:53:40 UTC 2008,,,,,,0|i14187:,231661,,,,,,,,"28/Aug/08 14:07;rickhall;Well, the typo is definitely wrong, but the package name used to be correct at one time, but then we moved the OBR interfaces and apparently forgot to update it here. I applied a quick fix, please close this issue if you are satisfied. Thanks.",29/Aug/08 07:53;sauthieg;Thanks for the fix,,,,,,,,,,,,,,,,,,,,,,,,,
Installation failure when updating bundles with required bundles,FELIX-701,12403175,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,27/Aug/08 18:46,30/Aug/08 20:19,14/Mar/19 02:47,30/Aug/08 20:19,,,,,,,,,,,bundlerepository-1.2.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Consider a system with two bundles installed:

   Bundle A, Version 1, imports package B.x with version 1, started
   Bundle B, Version 1, exports package B.x with version 1, started

Now, Bundle A should be updated to version 2:

   Bundle A, Version 2, imports package B.x with version 2

This causes OBR to select version 2 of Bundle B to satisfy the requirement of version 2 of Bundle A.

   Bundle B, Version 2, exports package B.x with version 2

Now, the ResolverImpl will try to update Bundle A with the new version, which fails because Bundle A is automatically started again by the framework but does not resolve due to the version mismatch on the package import. This throws an exception causing the ResolverImpl to abort the deployment.

A simple fix to this problem is, that the ResolverImpl temporarily stops Bundle A before updating it and starting Bundle A again after the update. This allows the resolver to continue with the deployment of the required bundle and finally starting everything again.
",,,,,,,,,,,,,,,,,,,,27/Aug/08 18:50;fmeschbe;FELIX-701.patch;https://issues.apache.org/jira/secure/attachment/12389028/FELIX-701.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58288,,,Sat Aug 30 20:19:04 UTC 2008,,,,,,0|i140zj:,231622,,,,,,,,"27/Aug/08 18:50;fmeschbe;Proposed fix, which stops the bundle to be updated before the update and starting the bundle again, if everything is done.

Possibly the ResolverImpl.deploy should be modified to not abort on any exception from bundle update or installation ?",30/Aug/08 20:19;fmeschbe;Applied the patch in Rev. 690574.,,,,,,,,,,,,,,,,,,,,,,,,,
Metatype XML uses unqalified local elements,FELIX-700,12402988,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,25/Aug/08 11:56,25/Aug/08 11:58,14/Mar/19 02:47,25/Aug/08 11:58,maven-scr-plugin-1.0.7,,,,,,,,,,maven-scr-plugin-1.0.8,,,,Metatype Service,SCR Tooling,,,,,,0,,,,,,The scr plugin generates wrong xml documents.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58289,,,2008-08-25 11:56:18.0,,,,,,0|i0w1kf:,185059,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
manifest goal does not interprete _include instruction correctly,FELIX-699,12402980,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,sahoo,sahoo,25/Aug/08 09:25,12/Mar/09 08:05,14/Mar/19 02:47,27/Aug/08 12:52,maven-bundle-plugin-1.4.3,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"I have a multi-module project. I configure the maven-bundle-plugin (version 1.4.3) in <builds><plugins> section of parent pom.xml. One of the configuration instruction is to include a bnd configuration file called osgi.bundle. I use manifest goal of maven-bundle-plugin. I see that the plugin/bnd is complaining about a missing osgi.bundle file, although the module being built has such a file. If I switch to using bundle packaging type, the problem goes away. I am attaching a simple test case to demonstrate the problem. What is more interesting to note is that, if I cd to the submodule and do a build, it builds fine.","Maven version: 2.0.7
Java version: 1.5.0_13-rev
OS name: ""sunos"" version: ""5.11"" arch: ""x86""",,,,,,,,,,,,,,,,,,,25/Aug/08 09:40;sahoo;Feliz-699.zip;https://issues.apache.org/jira/secure/attachment/12388835/Feliz-699.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-08-27 10:58:26.075,,,no_permission,,,,,,,,,,,58290,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i0w1en:,185033,,,,,,,,25/Aug/08 09:40;sahoo;Test case with README,"25/Aug/08 10:36;sahoo;Work around:
Fortunately, there is a simple work around to this bug. While including the file, use fully qualified path like this:
<_include>${basedir}/osgi.bundle</_include>
","27/Aug/08 10:58;mcculls;I believe this is because in the manifest goal we're setting the base directory after processing the instructions - reversing these statements should fix the problem.

targeting next major release (1.6.0) of the maven-bundle-plugin",27/Aug/08 12:52;mcculls;Fixed in trunk,12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,,,,,
"SCR logs ""java.lang.IllegalStateException: Invalid BundleContext"" when activating components",FELIX-698,12402972,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,25/Aug/08 06:57,27/Aug/08 19:38,14/Mar/19 02:47,27/Aug/08 19:38,scr-1.0.4,scr-1.0.6,,,,,,,,,scr-1.0.6,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Reported by Jared Mac in [1]: The SCR Activator may log an ""java.lang.IllegalStateException: Invalid BundleContext"" error when trying to activate the components of bundles. This may be the case if the bundle whose components are to be activated has been stopped in the mean time.

We cannot prevent this from happening, but we may do better logging here: We should catch the IllegalStateException and check whether the bundle is not activate any more. If so, we just log an informational message because the bundle's components will be loaded later when the bundle is started again.

[1] http://markmail.org/message/herp3qd4ts4t73tc",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58291,,,Wed Aug 27 19:38:18 UTC 2008,,,,,,0|i0w0gv:,184881,,,,,,,,25/Aug/08 07:01;fmeschbe;Simple addition of an INFO log message instead of an ERROR message in case the bundle has been stopped while the components should be loaded in Rev. 688638.,"27/Aug/08 19:38;fmeschbe;I think this is as good as we can do in this situation. Therefore, I close this issue for now.",,,,,,,,,,,,,,,,,,,,,,,,,
Generation of a duplicated field when using generics,FELIX-697,12402948,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,loris,loris,24/Aug/08 11:08,09/Oct/08 08:42,14/Mar/19 02:47,09/Sep/08 17:48,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"Here an extract of my test case:

In an abstract Class AbsI, I have:

public abstract class AbsI<T extends Serializable> implements I {
[...]
    protected abstract T getName();

    public String getPlip() {
        return getName().toString();
    }
[...]
}
In a child A:
public class A extends AbsI<String> {
    protected String getName() {
        return ""a"";
    }
}

Generated code for A is:

public class A extends AbsI<String>
{
  private InstanceManager __IM;
  private boolean jdField___MgetName_of_type_Boolean;
  private boolean jdField___MgetName_of_type_Boolean;
[...]
}

=> jdField___MgetName_of_type_Boolean is duplicated and cannot be loaded.",Felix 1.0.4,,,,,,,,,,,,,,,,,,,24/Aug/08 11:09;loris;ipojo-testcase.zip;https://issues.apache.org/jira/secure/attachment/12388813/ipojo-testcase.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-09-09 15:16:40.936,,,no_permission,,,,,,,,,,,58292,,,Tue Oct 07 12:18:13 UTC 2008,,,,,,0|i14153:,231647,,,,,,,,24/Aug/08 11:09;loris;The test-case,"09/Sep/08 15:16;clement.escoffier;So, this issue comes from an ""unexpected"" behavior of the compiler. In fact, the method 'getName' is duplicated in the bytecode. The only difference is the returned type (String against Serializable). So, the generated bytecode sounds like incorrect, but works anyway. Here is the generated class (decompiled)
    protected String getName() {
        return ""a"";
    }
    
    protected volatile Serializable getName() {
        return getName();
    }

This duplication comes from the generics. iPOJO has not expected this kind of code, and so generate twice the same identifier (based on the method name and the argument list). 
I will fix this issue by inserting the field only once. The two methods will then used the same flag. It makes sense as the two methods are associated (the generated one always call the written one).

PS : I don't know why the generated method becomes volatile.
","09/Sep/08 17:09;clement.escoffier;Just an update,

This behavior requires Java 1.5. It also appears when implementing an interface and providing a method returning a subtype of the expected type such as in : 
 
public interface Foo {
    Object getFoo();
}

public class FooImpl implements Foo {
   public String getFoo() {
    return ""foo"";
   }
}

So, the compiled class will contain two getFoo method : one returning a String, and one returning an Object. The second one is generated by the compiler, and invokes the first 'written' one.
","09/Sep/08 17:48;clement.escoffier;Fixed in the revision 693520.
I commit a patch and add the test case in my test suite. 
Loris, could you confirm the fix?",07/Oct/08 12:18;loris;Good. Thank you Clément!,,,,,,,,,,,,,,,,,,,,,,
Dependency type is not checked when the plugin searches for scr configuration files,FELIX-696,12402936,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,24/Aug/08 04:27,11/Sep/08 07:05,14/Mar/19 02:47,11/Sep/08 07:05,maven-scr-plugin-1.0.7,,,,,,,,,,maven-scr-plugin-1.0.8,,,,SCR Tooling,,,,,,,0,,,,,,"The plugin tries to find scr configuration files in the artifacts of the dependencies. This search does not take the type of the artifact (jar, pom, war etc.) into account which results in exceptions when trying to open the artifact as a jar:

[DEBUG] Configuring mojo 'org.apache.felix:maven-scr-plugin:1.0.8-SNAPSHOT:scr' -->
[DEBUG]   (f) finalName = serviceComponents.xml
[DEBUG]   (f) generateAccessors = true
[DEBUG]   (f) metaTypeName = metatype.xml
[DEBUG]   (f) outputDirectory = /Users/ifeulner/Dev/svn/trunk/src/oc-card-services/target/scr-plugin-generated
[DEBUG]   (f) project = MavenProject: net.openconnector:oc-card-services:1.0-SNAPSHOT @ /Users/ifeulner/Dev/svn/trunk/src/oc-card-services/pom.xml
[DEBUG] -- end configuration --
[INFO] [scr:scr {execution: generate-scr-scrdescriptor}]
[DEBUG] Starting SCRDescriptorMojo....
[DEBUG] ..generating accessors: true
[DEBUG] Setting up QDox
[DEBUG] Adding source tree /Users/ifeulner/Dev/svn/trunk/src/oc-card-services/src/main/java
[DEBUG] Checking artifact net.openconnector.build:provision:pom:1.0-SNAPSHOT:provided
[DEBUG] Resolving artifact net.openconnector.build:provision:pom:1.0-SNAPSHOT:provided
[DEBUG] Trying to get manifest from artifact net.openconnector.build:provision:pom:1.0-SNAPSHOT:provided
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Unable to get manifest from artifact net.openconnector.build:provision:pom:1.0-SNAPSHOT:provided

Embedded error: error in opening zip file
[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Unable to get manifest from artifact net.openconnector.build:provision:pom:1.0-SNAPSHOT:provided
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:583)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:499)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:478)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)
    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
    at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
    at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
    at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
    at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Unable to get manifest from artifact net.openconnector.build:provision:pom:1.0-SNAPSHOT:provided
    at org.apache.felix.scrplugin.tags.JavaClassDescriptorManager.<init>(JavaClassDescriptorManager.java:170)
    at org.apache.felix.scrplugin.SCRDescriptorMojo.execute(SCRDescriptorMojo.java:106)
    at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)
    ... 16 more
Caused by: java.util.zip.ZipException: error in opening zip file
    at java.util.zip.ZipFile.open(Native Method)
    at java.util.zip.ZipFile.<init>(ZipFile.java:114)
    at java.util.jar.JarFile.<init>(JarFile.java:133)
    at java.util.jar.JarFile.<init>(JarFile.java:97)
    at org.apache.felix.scrplugin.tags.JavaClassDescriptorManager.getManifest(JavaClassDescriptorManager.java:270)
    at org.apache.felix.scrplugin.tags.JavaClassDescriptorManager.<init>(JavaClassDescriptorManager.java:150) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58293,,,2008-08-24 04:27:02.0,,,,,,0|i0vzz3:,184801,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XML configuration file uses unqualified locals,FELIX-695,12402849,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,22/Aug/08 07:17,08/Sep/08 07:28,14/Mar/19 02:47,08/Sep/08 07:28,maven-scr-plugin-1.0.7,scr-1.0.2,,,,,,,,,maven-scr-plugin-1.0.8,scr-1.0.6,,,Declarative Services (SCR),SCR Tooling,,,,,,0,,,,,,"According to the spec, the xml configuration file uses unqualified local elements which means they don't have a namespace.
Currently the scr plugin generates elements that all have a namespace and the scr implementation requires all elements
to have this namespace.
The scr plugin should not generate the namespace for the inner elements of component and the scr implementation should
either except inner elements with or without the namespace to be compatible to existing configuration files.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58294,,,Mon Sep 08 07:28:09 UTC 2008,,,,,,0|i1413b:,231639,,,,,,,,08/Sep/08 07:28;cziegeler;Forget to close this...,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException on shutdown,FELIX-694,12402776,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,21/Aug/08 10:10,25/Aug/08 09:45,14/Mar/19 02:47,25/Aug/08 09:45,scr-1.0.4,,,,,,,,,,scr-1.0.6,,,,Declarative Services (SCR),,,,,,,0,,,,,,"On shutdown a NPE occurs when trying to invoke the unbind method (as serviceReference.getBundle() returns null):

java.lang.NullPointerException
	at org.apache.felix.scr.impl.DependencyManager.getBindingMethod(DependencyManager.java:735)
	at org.apache.felix.scr.impl.DependencyManager.invokeUnbindMethod(DependencyManager.java:932)
	at org.apache.felix.scr.impl.DependencyManager.unbind(DependencyManager.java:691)
	at org.apache.felix.scr.impl.ImmediateComponentManager.disposeImplementationObject(ImmediateComponentManager.java:296)
	at org.apache.felix.scr.impl.ImmediateComponentManager.deleteComponent(ImmediateComponentManager.java:150)
	at org.apache.felix.scr.impl.AbstractComponentManager.deactivateInternal(AbstractComponentManager.java:554)
	at org.apache.felix.scr.impl.AbstractComponentManager.deactivate(AbstractComponentManager.java:238)
	at org.apache.felix.scr.impl.DependencyManager.serviceRemoved(DependencyManager.java:242)
	at org.apache.felix.scr.impl.DependencyManager.serviceChanged(DependencyManager.java:124)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58295,,,Mon Aug 25 09:45:25 UTC 2008,,,,,,0|i0w1if:,185050,,,,,,,,"22/Aug/08 08:45;cziegeler;This bug seems to be caused by the changes of
https://issues.apache.org/jira/browse/FELIX-624",25/Aug/08 09:45;cziegeler;Fixed by traversing up the class hierarchy to load the class and find the method.,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException when services are inherited across bundles,FELIX-679,12402213,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,12/Aug/08 14:29,12/Aug/08 14:33,14/Mar/19 02:47,12/Aug/08 14:33,maven-scr-plugin-1.0.6,,,,,,,,,,maven-scr-plugin-1.0.7,,,,SCR Tooling,,,,,,,0,,,,,,There is a class cast exception in the ClassLoaderJavaClassDescription in line 197,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58310,,,2008-08-12 14:29:20.0,,,,,,0|i1411z:,231633,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parser throws error when DynamicImport-Package contains attributes,FELIX-677,12402060,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,sahoo,sahoo,09/Aug/08 14:50,12/Mar/09 08:05,14/Mar/19 02:47,03/Dec/08 15:19,maven-bundle-plugin-1.4.1,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"If I try to specify a matching attribute in DynamicImport-Package as shown below, I get a build error.
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>RELEASE</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Private-Package>bar</Private-Package>
                        <Bundle-Activator>bar.MyActivator</Bundle-Activator>
                        <DynamicImport-Package>* ; password=foo</DynamicImport-Package>
                    </instructions>
                </configuration>
            </plugin>


The error is given below:
[INFO] [bundle:bundle]
[ERROR] Error building bundle sahoo.dynamic-import-attr:dynamic-importer:bundle:1.0-SNAPSHOT : Invalid value for DynamicImport-Package, * ; password=foo does not match ((\p{Alnum}|_)+(\.(\p{Alnum}|_)+)*(\.\*)?)|\*
[ERROR] Error(s) found in bundle configuration
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error(s) found in bundle configuration
[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Error(s) found in bundle configuration
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:564)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:280)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Error(s) found in bundle configuration
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:341)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:227)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:218)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        ... 16 more
Caused by: org.apache.maven.plugin.MojoFailureException: Error(s) found in bundle configuration
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:296)
        ... 20 more
",NA,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-09 15:30:09.801,,,no_permission,,,,,,,,,,,58312,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i0w1ef:,185032,,,,,,,,09/Aug/08 15:30;mcculls;This will require a fix to the Bnd library - could you let Peter know about this issue (I'm getting ready for my trip),"11/Aug/08 07:09;pkriens;I am getting afraid there is no end to the places where I have to clean up maven version. I therefore have added a macro ${maven_version;1.0-SNAPSHOT} that will convert the maven version string to an OSGi version string. You can use macros and properties inside macros.

Anyway, I am having a hard time understanding why Dynamic Import is used here? Should that not be just Import-Package?","11/Aug/08 07:40;sahoo;No, DynamicImport-Package was intentionally used. I don't see anything wrong with the specification. As a work around, I used maven-jar-plugin to add the necessary header in my manifest.","03/Dec/08 15:19;mcculls;Fixed in trunk with the update to Bnd 0.0.295 - however, note that I'm still testing this against various projects to check for any build breaks.",12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,,,,,
Mandatory attribute matching not working for  DynamicImport-Package,FELIX-676,12402059,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,09/Aug/08 14:33,12/Aug/08 05:08,14/Mar/19 02:47,11/Aug/08 18:08,framework-1.0.4,,,,,,,,,,framework-1.2.0,,,,Framework,,,,,,,0,,,,,,"Section #3.8.2 of R4 spec says the following:

/All mandatory arbitrary attributes (as specified by the exporter, see Mandatory Attributes on page 45) must be specified in the dynamic import definition and match./

I suspect it is *not* working in Felix yet. I am using Felix v1.0.4. Mandatory attributes are considered while resolving static imports, but not for dynamic imports. I have two bundles that have identical contents, except that bundle #10 uses regular import, where as bundle #11 uses dynamic import. They both are trying to load a class foo.A. Package foo is exported by bundle #12 and it has a mandatory attribute defined like this:
/
Export-Package = foo;password=foo;mandatory:=password/

As shown below, when I start bundle #10, I get resolution error, where as bundle #11 happily wires to bundle #12.

-> start 10
org.osgi.framework.BundleException: Unresolved package in bundle 10: package; (package=foo)
-> start 11
DEBUG: WIRE: 11.0 -> org.osgi.framework -> 0
DEBUG: WIRE: 12.0 -> foo -> 12.0
DEBUG: WIRE: 11.0 -> foo -> 12.0
class foo.A is loaded by 12.0

The diff between manifest files of bundle #10 and #11 is supplied below:

diff dynamic-importer/target/classes/META-INF/MANIFEST.MF static-importer/target/classes/META-INF/MANIFEST.MF
5,6c5,6
< Import-Package: org.osgi.framework;version=""1.3""
< Bnd-LastModified: 1218274803828
---
> Import-Package: foo,org.osgi.framework;version=""1.3""
> Bnd-LastModified: 1218274805799
8c8
< Bundle-Name: dynamic-importer
---
> Bundle-Name: static-importer
12,13c12,13
< Bundle-SymbolicName: sahoo.dynamic-import-mandatory-attr.dynamic-impor
<  ter
---
> Bundle-SymbolicName: sahoo.dynamic-import-mandatory-attr.static-import
>  er
15d14
< DynamicImport-Package: *

I am attaching a simple test case demonstrating the same.

I suspect it has to do with the way filters are used to match requirements with capabilities. The filter is not aware of mandatory attributes, so it matches even when they are not specified.",NA,,,,,,,,,,,,,,,,,,,09/Aug/08 14:36;sahoo;dynamic-import-mandatory-attr.zip;https://issues.apache.org/jira/secure/attachment/12387876/dynamic-import-mandatory-attr.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-08-11 18:08:50.965,,,no_permission,,,,,,,,,,,58313,,,Tue Aug 12 05:08:57 UTC 2008,,,,,,0|i1411r:,231632,,,,,,,,09/Aug/08 14:36;sahoo;Unzip. Read README,"11/Aug/08 18:08;rickhall;I applied a patch to resolve this issue. The short explanation is that we were just ignoring matching attributes altogether when it came to dynamic import resolution. The supplied example now works as expected. I even got around to fixing our diagnostic message for dynamic imports, which has been broken since we added support for require-bundle.

Sahoo, please see if trunk resolves your issues. If so, please close this bug. Thanks.","12/Aug/08 03:57;sahoo;Richard,

Yes, I have now verified the fix in my environment. Thanks for the quick turn around.

Sahoo",12/Aug/08 05:08;rickhall;Closing since Sahoo says it works for him.,,,,,,,,,,,,,,,,,,,,,,,
ConfigManager should check for empty value before converting into a specific type,FELIX-662,12401759,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,cziegeler,cziegeler,06/Aug/08 06:37,29/Sep/08 15:37,14/Mar/19 02:47,29/Sep/08 11:20,webconsole-1.0.0,,,,,,,,,,webconsole-1.2.0,,,,Web Console,,,,,,,0,,,,,,"When a field for a property of a non-type is left empty in the web console, the empty string is tried to be converted into the type, which results in an exception.
One example is in the ConfigManager#648:
                        // scalar of non-string
                        String prop = request.getParameter( propName );
                        props.put( propName, this.toType( ad.getType(), prop ) );
The value should be checked before it is tried to be converted. There might be other places where this should be checked as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-29 11:20:21.271,,,no_permission,,,,,,,,,,,58327,,,Mon Sep 29 15:37:01 UTC 2008,,,,,,0|i140sn:,231591,,,,,,,,"29/Sep/08 11:20;fmeschbe;Fixed in Rev. 700063.

Please close if this is suitable for you. Thanks.",29/Sep/08 15:37;cziegeler;Works fine. Thanks,,,,,,,,,,,,,,,,,,,,,,,,,
maven bundle plugin does not close the accessed fie /jar streams,FELIX-661,12401739,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,mcculls,hg2008,hg2008,05/Aug/08 22:57,27/Aug/08 10:50,14/Mar/19 02:47,06/Aug/08 17:55,maven-bundle-plugin-1.4.2,,,,,,,,,,maven-bundle-plugin-1.4.3,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Maven bundle plugin is doing the following.

i)  When someone (from a pom.xml)  uses this plug-in, to bundlize their project jars,  this plugin  first opens  a jar file for reading. And then later after in some other method call, it opens the SAME file for writing.  Basically it dynamically changes the content of the jar for reading and writing.  

ii)  This plugin forgets to call the close() method on the file / zip/jar/ resource of  jdk and aQute packages.

How to fix:

i)  Please call close() at places wherever your are trying to read and write ZipFile  JarFile or aQute's  Analyzer , ZipResource , Jar class files from 
                  biz/aQute/bndlib/0.0.255/.. /OSGI-OPT/src/aQute/lib/osgi
    And also at 

                 org/apache/maven/shared/maven-osgi/0.2.0/tt/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java

ii) At    org/apache/felix/bundleplugin/BundlePlugin.java

         where  where ""classpath"" variable is actually an Array of Jar files that need to closed upon task is done.
        Note that  the Jar here is from aQute and it has got resource map. So each Jar object might have recursive resources. So, please walk through the map 
       and close each resource if it is  FileResource/ JarResource / ZipResource.

        
iii)   At    org/apache/felix/bundleplugin/BundlePlugin.java
       I also suspect the place in the same BundlePlugin.java,  where we  call unpackBundle(...) and call  ManifestPlugin.writeManifest(... , ..)
       Please make sure the streams are closed.

-- A generic message.
We need this very urgently.  We appreciate your timely action.  Any comments, questions please send it to me directly.
I can work with you to provide the fix and verify the fix.

Many thanks in advance.

Harsha","maven 2
jdk 5 or 6 
any OS where JDK is supported",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-06 03:57:11.729,,,no_permission,,,,,,,,,,,58328,,,Wed Aug 27 10:50:16 UTC 2008,,,,,,0|i0vwb3:,184207,,,,,,,,"05/Aug/08 23:03;hg2008;Please take a look at the following bug for more information:
http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6713913","06/Aug/08 03:57;mcculls;This issue relates mostly to code in Bnd, so setting fix target to 1.4.3 where we plan to upgrade Bnd.","06/Aug/08 04:06;mcculls;A couple of questions:

  1)  is there a publicly available testcase I can use to recreate this problem?  (I've never seen it before on any Windows/Mac/Linux build)

  2)  you set the affected version to 1.4.2 (which isn't released yet)  -  does the same problem occur with 1.4.1 and 1.4.0?

thanks in advance - please note that I will be away for the next few weeks until 24th August.","06/Aug/08 04:26;mcculls;> Maven bundle plugin is doing the following.
> 
> i) When someone (from a pom.xml) uses this plug-in, to bundlize their project jars, this plugin first opens a jar file for reading. And then later after in some other method call, it opens the SAME file for writing. Basically it dynamically changes the content of the jar for reading and writing.

Could you be a bit clearer about which jarfile is being read and written - Bnd actually does most of the building of the bundle in memory, and only writes this out to ""target/classes"" when that particular build is complete. This file is then installed to the local repository, and subsequent builds in the Maven reactor will either use the file from the local repository, or the one in ""target/classes"" which is at that point no longer being written.

There is some potential for confusion, because the Bnd Jar class can actually work off a jarfile, a directory, or its own internal storage (memory) - so not all the places you mention technically need to be closed, because for some of them there is no underlying jarfile to close. However, it is definitely good practice to be consistent and call close in all places where we're done with that Bnd Jar object :)

> ii) This plugin forgets to call the close() method on the file / zip/jar/ resource of jdk and aQute packages.
> 
> How to fix:
> 
> i) Please call close() at places wherever your are trying to read and write ZipFile JarFile or aQute's Analyzer , ZipResource , Jar class files from
>                   biz/aQute/bndlib/0.0.255/.. /OSGI-OPT/src/aQute/lib/osgi

could you work with Peter Kriens (http://aqute.biz/Code/Bnd) to get the appropriate fixes into Bnd?  then we can pick up the new Bnd library in the next release.

>     And also at
> 
>                  org/apache/maven/shared/maven-osgi/0.2.0/tt/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java

this will need to be handled by the Maven team - contact Carlos Sanchez (carlos@apache.org) or raise an issue at http://jira.codehaus.org/browse/MSHARED
 
> ii) At org/apache/felix/bundleplugin/BundlePlugin.java
> 
>          where where ""classpath"" variable is actually an Array of Jar files that need to closed upon task is done.
>         Note that the Jar here is from aQute and it has got resource map. So each Jar object might have recursive resources. So, please walk through the map
>        and close each resource if it is FileResource/ JarResource / ZipResource.

well we can definitely loop through the array and call close on the jars, but will need to rely on Bnd to close the internal resource map.

> iii) At org/apache/felix/bundleplugin/BundlePlugin.java
>        I also suspect the place in the same BundlePlugin.java, where we call unpackBundle(...) and call ManifestPlugin.writeManifest(... , ..)
>        Please make sure the streams are closed.

unpackBundle uses the Maven archiver component, which does close the stream - similarly writeManifest closes its stream with a finally block.

> -- A generic message.
> We need this very urgently. We appreciate your timely action. Any comments, questions please send it to me directly.
> I can work with you to provide the fix and verify the fix.
> 
> Many thanks in advance.
> 
> Harsha","06/Aug/08 06:06;sahoo;To reproduce, follow the instructions below:
svn co https://svn.dev.java.net/svn/glassfish-svn/trunk/v3
mvn clean install -f v3/pom.xml

Run the above mvn command in a loop, you shall eventually hit the issue.
","06/Aug/08 09:27;mcculls;Ok, here's my proposed plan:

1.4.2 has already been cut and the release vote is in progress, so because this issue existed in earlier releases I don't see any reason to abort this release (because that wouldn't save any time in fixing this problem) - so I'll release 1.4.2 once the vote ends.

In the meantime I'm running the failing build on various machines (although I have yet to recreate the failure) - once I receive the patches I will review them and make the necessary commits to the bundleplugin. The other components, such as Bnd, can be temporarily patched by adding the patched source directly to the bundleplugin build - this will be removed when we update Bnd.

The patched bundleplugin will become 1.4.3, and the next stable release with the new version of Bnd will become 1.6.0 - this is because the Bnd tool now requires Java5 which is a potentially big change, so we should reflect that in the bundleplugin version.

WDYT?","06/Aug/08 14:18;mcculls;Although I haven't been able to reproduce the build failure, I have been running some diagnostics and believe that most of the problems are due to omissions in the bundleplugin code - the Bnd library will close all the classpath zipfiles if we call the close method on the builder/analyzer instance.

I have some initial patches, which I'm currently testing to check that all opened zipfiles are eventually closed - hopefully this will resolve the issue.","06/Aug/08 16:20;mcculls;I've committed an initial round of patches - mostly to the bundleplugin, plus one minor Bnd patch - that should fix the problem in the GlassFish build.",06/Aug/08 17:05;mcculls;I've opened http://jira.codehaus.org/browse/MSHARED-53 for the JarFile leak in the Maven shared component.,"06/Aug/08 17:55;mcculls;OK, I think I've nailed down all the missing close statements - when I run an instrumented plugin against the GlassFish build I now see that every ZipFile and JarFile opened, is also closed.

Could you try the 1.4.3-SNAPSHOT that I've just deployed and see if it fixes the problem on your build machines (I've still been unable to recreate the original failure on my local machines)

   http://people.apache.org/repo/m2-snapshot-repository/org/apache/felix/maven-bundle-plugin/1.4.3-SNAPSHOT/maven-bundle-plugin-1.4.3-20080806.174605-1.jar

please let me know asap if this snapshot works without error across your build machines, so I can start the release process.","06/Aug/08 18:03;hg2008;Hi Stuart,

Thanks a lot for the quick response. I'm in Pacific time zone.  I'm going through your comments and other emails. I will download the latest bundle plugin and try to test this bug.

More later. Stay tuned.

Thanks,
Harsha","06/Aug/08 18:10;mcculls;No problem, it's 2am over here so I'm off to bed for a few hours sleep - let me know how the testing goes :)","06/Aug/08 22:18;hg2008;Hi Stuart,

First, many many thanks for providing the 1.4.3-xx maven-bundle-plugin snapshot.

I've locally used your jar in a local build system. Mostly it was like an off line build to just use the supplied jar here.
Good news is that, the bug is gone.
(One question: . Was there a debug line or version verification string in this jar to check during runtime?)

Please wait for some more time. We are planning to use the provided jar here in our build system where we hit the bug very badly.
We just changed our parent pom to use your plug-in from :
   http://people.apache.org/repo/m2-snapshot-repository
This will be online build.

This is just an update. I will provide more to confirm if the fix is working. Thanks!

Regards,
Harsha","07/Aug/08 00:41;mcculls;Hi Harsha, excellent news - btw, although there isn't an explicit version string in the normal snapshot plugin output, you can use the -X Maven option to enable debug trace. The plugin version should appear in the trace output (you'll need to pipe this to a file because it will produce a lot of output). HTH","07/Aug/08 01:52;hg2008;Hi Stuart,  We need another 8-10Hrs (max) to test the jar.  The bits are now injected into the system.  Thanks!!
-Harsha","07/Aug/08 17:10;hg2008;Hi Stuart, 

I confirm that the fix works great.  

Thank a lot for your very swift response and action on this issue.

Please add this fix your next (1.4.3?) release.   
Currently, we are using :     
                            http://people.apache.org/repo/m2-snapshot-repository/ 
org/apache/felix/maven-bundle-plugin/ 
1.4.3-SNAPSHOT/maven-bundle-plugin-1.4.3-20080806.174605-1.jar

Would you be able to keep it intact at that location. (until 1.4.3 ) is out.

It also seems like we need to follow up with BND too.  I will check with them.

Regards,
Harsha
GlassFish v3 team","07/Aug/08 17:20;mcculls;Cool - yes, this fix will be in the 1.4.3 release (I will cut this release very soon and begin the release vote)
Also, the plugin snapshot will stay intact at that location - we typically don't overwrite or delete snapshots.",27/Aug/08 10:50;mcculls;Fixed in latest release of the maven-bundle-plugin (1.4.3),,,,,,,,,
"""Class in different directory than declared"" error when bundle classes in a directory other than bundle root",FELIX-660,12401614,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pkriens,ugopalak@in.ibm.com,ugopalak@in.ibm.com,04/Aug/08 16:55,12/Mar/09 08:05,14/Mar/19 02:47,02/Feb/09 10:05,maven-bundle-plugin-1.4.0,maven-bundle-plugin-1.4.1,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,1,,,,,,"Per the message http://www.mail-archive.com/users@felix.apache.org/msg01814.html in Felix mailing list, 

When classes are not in a subdirectory under bundle root bundle:bundle fail with the error like:

[INFO] [bundle:bundle]
[ERROR] Error building bundle test:test:bundle:0.0.1-SNAPSHOT : Class in different directory than declared. Path from class name is test/Test.class but the path in the jar is /test/Test.class from Jar:dot
[ERROR] Error building bundle test:test:bundle:0.0.1-SNAPSHOT : Class in different directory than declared. Path from class name is test/Test.class but the path in the jar is /test/Test.class from Jar:dot
[ERROR] Error(s) found in bundle configuration
[ERROR] 

My maven-bundle-plugin configuration is :

  <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>                        
                        <Include-Resource>{maven-resources},classes=target/classes</Include-Resource>
                        <Implementation-Title>Test</Implementation-Title>
                        <Implementation-Version>${pom.version}</Implementation-Version>
                        <Implementation-Vendor>XXX</Implementation-Vendor>
                        <Implementation-Vendor-Id>XXX</Implementation-Vendor-Id>
                        <Private-Package>test*</Private-Package>
                        <Bundle-ClassPath>classes</Bundle-ClassPath>
                    </instructions>
                </configuration>
            </plugin>   
        </plugins>  

A simple test project is attached. Run ""mvn install"" to recreate the problem.","Maven version: 2.0.9
Java version: 1.6.0_04
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""",,,,,,,,,,,,,,,,,,,29/Jan/09 11:17;mcculls;FELIX-660-20090129.patch;https://issues.apache.org/jira/secure/attachment/12398997/FELIX-660-20090129.patch,04/Dec/08 08:54;mcculls;FELIX-660-BND-PATCH.txt;https://issues.apache.org/jira/secure/attachment/12395274/FELIX-660-BND-PATCH.txt,04/Aug/08 17:00;ugopalak@in.ibm.com;test_felix_660.zip;https://issues.apache.org/jira/secure/attachment/12387495/test_felix_660.zip,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2008-08-04 20:43:20.149,,,no_permission,,,,,,,,,,,44016,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i1apj3:,270602,,,,,,,,"04/Aug/08 17:00;ugopalak@in.ibm.com;A simple test eclipse project to recreate the problem. Unzip/Import the project into eclipse and run ""mvn install' to recreate the problem.","04/Aug/08 20:43;ncampion;Verified on linux (SLES 10 2.6.16.60), arch ""x86"", java version java 1.5.0 SR7","05/Aug/08 06:44;mcculls;Thanks for the testcase - setting fix target to 1.4.3 because this will require a change to the Bnd library, specifically the analyzeJar method in Processor.java:127 where it removes the prefix from the path, but doesn't check for leftover slashes at the beginning. This causes the failing check, because the relative path still has a slash at the beginning but the path computed from the class doesn't.","04/Sep/08 02:06;topping;For some reason, adding 

           <Include-Resource>src/main/resources</Include-Resource>

avoids this problem.","04/Dec/08 08:54;mcculls;The following patch to Bnd 0.0.295 fixes two problems:

1) path entries on the Bundle-ClassPath won't end in '/', but analyzeJar expects the given path prefix to end in '/' - so we need to either add it before analyzeJar (as done in this patch) or make analyzeJar more forgiving of path prefixes that don't end in '/'

2) the Verifier class has a bug where embedded directories always cause a NPE because there is no embedded resource (possible copy-paste error as the TODO comment suggests this is not finished, so have just removed that line for now)
","04/Dec/08 08:57;mcculls;Hi Peter, please see attached patch for Bnd 0.0.295",29/Jan/09 11:17;mcculls;Updated patch based on Bnd 0.0.308,02/Feb/09 10:05;pkriens;Applied the patch in bnd-310,12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,
Devices get lost after a certain period of time (SSDP sockets do not get closed properly in cyberlink lib),FELIX-657,12401582,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,daniel123,daniel123,04/Aug/08 08:43,15/Jul/09 11:46,14/Mar/19 02:47,15/Jul/09 11:46,upnp-basedriver-0.8.0,,,,,,,,,,upnp-basedriver-0.8.0,,,,UPnP Subproject,,,,,,,0,,,,,,"Under Linux Systems every Socket uses a ""file descriptor"" in the system
which is in most unix systems default value of 1024 max descriptors.
Now i tried to push that value to 65535 and vuala everything is running > 8
hours.

If i check my open file descriptors with lsof -p pidofmyjavaprogram i see
now MANY open ports that have not been closed properly (right now > 1400 for
10 hours of operation).

Ok..that made me let a bit deeper into the code of cyberlink library.

I saw a fix that was introduced by someone because of ""non-closed"" ssdp udp
sockets in the announce method of org/cybergarage/upnp/Device.java

1240            SSDPNotifySocket ssdpSock = new SSDPNotifySocket(bindAddr);
 1241 
 1242           SSDPNotifyRequest ssdpReq = new SSDPNotifyRequest();
 1243           ssdpReq.setServer(UPnP.getServerName());
 1244           ssdpReq.setLeaseTime(getLeaseTime());
 1245           ssdpReq.setLocation(devLocation);
 1246           ssdpReq.setNTS(NTS.ALIVE);
 1247 
 1248           // uuid:device-UUID(::upnp:rootdevice)*
 1249           if (isRootDevice() == true) {
 1250                   String devNT = getNotifyDeviceNT();
 1251                   String devUSN = getNotifyDeviceUSN();
 1252                   ssdpReq.setNT(devNT);
 1253                   ssdpReq.setUSN(devUSN);
 1254                   ssdpSock.post(ssdpReq);
 1255 
 1256                   String devUDN = getUDN();
 1257                   ssdpReq.setNT(devUDN);
 1258                   ssdpReq.setUSN(devUDN);
 1259                   ssdpSock.post(ssdpReq);
 1260           }
 1261 
 1262           //
uuid:device-UUID::urn:schemas-upnp-org:device:deviceType:v
 1263           String devNT = getNotifyDeviceTypeNT();
 1264           String devUSN = getNotifyDeviceTypeUSN();
 1265           ssdpReq.setNT(devNT);
 1266           ssdpReq.setUSN(devUSN);
 1267           ssdpSock.post(ssdpReq);
 1268 
 1269           // Thanks for Mikael Hakman (04/25/05)
 1270           ssdpSock.close();

Ok seems fine so far...


Ok now i looked into org/cybergarage/upnp/Service.java and there the ""socket
close fix"" was NOT introduced for both announce and byebye.....

  599   public void announce(String bindAddr)
  600   {
  601           //
uuid:device-UUID::urn:schemas-upnp-org:service:serviceType:v
  602           Device rootDev = getRootDevice();
  603           String devLocation = rootDev.getLocationURL(bindAddr);
  604           String serviceNT = getNotifyServiceTypeNT();
  605           String serviceUSN = getNotifyServiceTypeUSN();
  606 
  607           Device dev = getDevice();
  608 
  609           SSDPNotifyRequest ssdpReq = new SSDPNotifyRequest();
  610           ssdpReq.setServer(UPnP.getServerName());
  611           ssdpReq.setLeaseTime(dev.getLeaseTime());
  612           ssdpReq.setLocation(devLocation);
  613           ssdpReq.setNTS(NTS.ALIVE);
  614           ssdpReq.setNT(serviceNT);
  615           ssdpReq.setUSN(serviceUSN);
  616 
  617           SSDPNotifySocket ssdpSock = new SSDPNotifySocket(bindAddr);
  618           Device.notifyWait();
  619           ssdpSock.post(ssdpReq);
                    // PLACE FIX HERE (by Daniel)
                   ssdpSock.close();
  620   }


  622   public void byebye(String bindAddr)
  623   {
  624           //
uuid:device-UUID::urn:schemas-upnp-org:service:serviceType:v
  625 
  626           String devNT = getNotifyServiceTypeNT();
  627           String devUSN = getNotifyServiceTypeUSN();
  628 
  629           SSDPNotifyRequest ssdpReq = new SSDPNotifyRequest();
  630           ssdpReq.setNTS(NTS.BYEBYE);
  631           ssdpReq.setNT(devNT);
  632           ssdpReq.setUSN(devUSN);
  633 
  634           SSDPNotifySocket ssdpSock = new SSDPNotifySocket(bindAddr);
  635           Device.notifyWait();
  636           ssdpSock.post(ssdpReq);
                    // PLACE FIX HERE (by Daniel)
                   ssdpSock.close();
  637   }



kind regards,
Daniel",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-15 11:46:49.349,,,no_permission,,,,,,,,,,,58331,,,Wed Jul 15 11:46:49 UTC 2009,,,,,,0|i1apjj:,270604,,,,,,,,15/Jul/09 11:46;furfari;Fixed in CyberDomo 1.9 ,,,,,,,,,,,,,,,,,,,,,,,,,,
Subject.doAs not supported,FELIX-654,12401486,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,01/Aug/08 11:58,25/Aug/08 13:19,14/Mar/19 02:47,20/Aug/08 16:44,framework-1.0.4,,,,,,,,,,framework-1.2.0,,,,Framework,,,,,,,0,,,,,,"Subject.doAs allows to perform work as a particular Subject. It first retrieves the current Thread's AccessControlContext via AccessController.getContext, and then instantiates a new AccessControlContext using the retrieved context along with a new SubjectDomainCombiner (constructed using the provided Subject). Finally, this method invokes AccessController.doPrivileged, passing it the provided PrivilegedAction, as well as the newly constructed AccessControlContext. 

The issue is that the SubjectDomainCombiner does update the relevant ProtectionDomains with the Principals from the Subject associated with this SubjectDomainCombiner by creating a new ProtectionDomain instance for each ProtectionDomain in the currentDomains array. Each new ProtectionDomain instance is created using the CodeSource, Permissions and ClassLoader from the corresponding ProtectionDomain in currentDomains, as well as with the Principals from the Subject associated with this SubjectDomainCombiner. 

This doesn't work well with the OSGi spec due to the fact that each bundle (or revision to be precise) has its own custom ProtectionDomain which is lost when Subject.doAs is used. There is a way to make it work for most scenarios namely, make the custom ProtectionDomain return a speciall PermissionCollection because that is reused by the ProtectionDomain created by the SubjectDomainCombiner if no custom policy is installed (in the later case a different workaround would be needed). 

Currently, Felix doesn't work when Subject.doAs is used and security is enabled. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58334,,,Mon Aug 25 13:19:36 UTC 2008,,,,,,0|i0vxx3:,184468,,,,,,,,"06/Aug/08 16:02;karlpauls;As of revision 683310 Subjec.doAs is working based on the java security policy installed. I need more time to think about a better solution -- hence, will not resolve the issue for now. However, this workaround should make it possible to use felix when security is enabled and subject.doAs is used. ","20/Aug/08 16:44;karlpauls;I think the current fix is reasonable and seems to work -- hence, I will close this issue soon. ",25/Aug/08 13:19;karlpauls;The reporter of the issue did test it and it seems to work. ,,,,,,,,,,,,,,,,,,,,,,,,
Value of Java field is not used if property is specified by a name reference,FELIX-653,12401484,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,01/Aug/08 11:39,01/Aug/08 11:47,14/Mar/19 02:47,01/Aug/08 11:47,maven-scr-plugin-1.0.6,,,,,,,,,,maven-scr-plugin-1.0.7,,,,SCR Tooling,,,,,,,0,,,,,,"The following does work:

    /** @scr.property name=""adapters"" */
    private static final String[] ADAPTER_CLASSES = {
            LR_CLASS.getName(),
    };

while this does not work:
  static final String ADAPTERS = ""adapters"";

    /** @scr.property nameRef=""ADAPTERS"" */
    private static final String[] ADAPTER_CLASSES = {
            LR_CLASS.getName(),
    };
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58335,,,2008-08-01 11:39:03.0,,,,,,0|i0vzyv:,184800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle-SymbolicName not handled correctly when header contains parameters,FELIX-650,12401231,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,adreghiciu,adreghiciu,29/Jul/08 12:12,08/Aug/08 18:50,14/Mar/19 02:47,01/Aug/08 15:43,,,,,,,,,,,framework-1.2.0,,,,Framework,,,,,,,0,,,,,,"The OSGi specs mandates that syntax for Bundle-Symbolicname is:
Bundle-SymbolicName ::= symbolic-name ( ';' parameter ) * 
meaning that you can add parameters to symbolic name as for example singleton:=true.

Let's use the following as an example:
Bundle-SymbolicName: org.ops4j.pax.url.mvn; singleton:=true

If I use such an parameter the bundle symbolic name returned by Felix Bundle.getSymbolicName will be inclusive the parameters which is not correct. In the example above the returned value will be org.ops4j.pax.url.mvn; singleton:=true.
The problem is that some places in Felix lookup the symbolic name using a pattern like: 
((FelixBundle) bundle).getInfo().getCurrentHeader().get(Constants.BUNDLE_SYMBOLICNAME)
so, searching the headers for symbolic name not the parsed value.

This had the side effect of being able to install two bundles with same symbolic name and version, fact that is prohibited by the specs. Felix has the code to verify that you cannot install but the problem is that when installing a bundle the symbolic name comparation is doen between the parsed symbolic name of the bundle to be installed and the symbolic name of the other bundles (already installed) where the symbolic name is determined using the pattern above.
You can see this behavior in the example bellow.

I wil atach a path that solves this problem by changing the getSymbolicName to lookup the symbolic name in the parsed values (""module"" ICapability of the current IModule) and change all the places that did it's own lookup of the symbolic name to use Bundle.getSymbolicName. 
But this is if we do not want an ""invasive"" change and it may not perform well as the lookup is done all the time. A better cleaner/solution would be to add symbolic name (and maybe version) to IModuleDefinition (I would say but I'm not very aware of Felix implementation internals) and set the values while creating the module as the values are already parsed by ManifestParser (same place as when the capabilities/requirements are parsed/created).

-> install file:/Users/alindreghiciu/.m2/repository/org/ops4j/pax/url/pax-url-mvn/0.3.0/pax-url-mvn-0.3.0.jar
Bundle ID: 5

-> ps -s
START LEVEL 1
  ID   State         Level  Symbolic name
[   0] [Active     ] [    0] System Bundle (1.0.4)
[   1] [Active     ] [    1] org.apache.felix.shell (1.0.1)
[   2] [Active     ] [    1] org.apache.felix.shell.tui (1.0.1)
[   3] [Active     ] [    1] org.apache.felix.bundlerepository (1.0.3)
[   5] [Installed  ] [    1] org.ops4j.pax.url.mvn; singleton:=true   (0.3.0)

-> install file:/Users/alindreghiciu/work/pax-url-mvn-0.3.0.jar
Bundle ID: 7

-> ps -s
START LEVEL 1
   ID   State         Level  Symbolic name
[   0] [Active     ] [    0] System Bundle (1.0.4)
[   1] [Active     ] [    1] org.apache.felix.shell (1.0.1)
[   2] [Active     ] [    1] org.apache.felix.shell.tui (1.0.1)
[   3] [Active     ] [    1] org.apache.felix.bundlerepository (1.0.3)
[   5] [Installed  ] [    1] org.ops4j.pax.url.mvn; singleton:=true   (0.3.0)
[   7] [Installed  ] [    1] org.ops4j.pax.url.mvn; singleton:=true   (0.3.0)
",,,,,,,,,,,,,FELIX-100,,,,,,,29/Jul/08 12:13;adreghiciu;FELIX-650.patch;https://issues.apache.org/jira/secure/attachment/12387092/FELIX-650.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-07-29 14:50:32.936,,,no_permission,,,,,,,,,,,58338,,,Fri Aug 01 16:04:00 UTC 2008,,,,,,0|i0vxwv:,184467,,,,,,,,"29/Jul/08 14:50;rickhall;I will look into this patch when I look into your other patch, later this week. Thanks for the feedback. Keep in mind that Felix does not currently implement singleton support.","29/Jul/08 15:22;adreghiciu;I know that Felix does not implement the singleton support. But that is another story that I'm working on. I will create an issue/pacth for that also as I'm pretty close to have it done.
But even without the support the current behavior is incorrect in case that the Bundle-SymbolicnNme is not just a simple string without attributes/directives.

BTW, I do not know what to do now regrading the singleton support. Shall I base the patch on the patch from this issu or on the current code base? Right now I'm working against the current code base.

It would had been more simpler if I would have commit rights :). But maybe in the future when Pax Web will become a Felix project.","29/Jul/08 15:29;rickhall;Agreed, the current behavior is incorrect, I just didn't want you disappointed. :-)

If you create your singleton jira patch before this one is applied, then just include them together and close this bug.

I agree that commit rights would make this simpler and supplying patches is the primary way to gain commit rights, so you are on the right path regardless what happens with Pax Web. :-)","01/Aug/08 15:43;rickhall;I have applied this patch. There was a small bug in that it assume that all bundles have symbolic names, but since that is not the case, I had to add a check for null.

Alin, please close this bug if you are satisfied. Thanks.","01/Aug/08 15:55;adreghiciu;Interesting. Bundle-SymbolicName is a mandatory header. Are we talking about R3?
","01/Aug/08 16:04;rickhall;Yes, Felix still has to be compatible with R3 bundles.",,,,,,,,,,,,,,,,,,,,,
"""Expecting to find object/array on stack"" Error when asking for instance of an iPOJO component",FELIX-649,12401166,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,strappab,strappab,28/Jul/08 15:44,22/Oct/08 14:00,14/Mar/19 02:47,28/Jul/08 17:23,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"Here is my case, I have these two classes in a bundle
public class A {

    private String name;

    public A(final String n) {
        name = n;
    }
}

public class B extends A {

    public B() {
        super(""test"");
        System.out.println(""plop"");
    }
}

What I want to do is to create a component with class B and ask for an instance, this is the content of metadata.xml :

<iPOJO>
  <component className=""myPackage.B"" immediate=""true"" factory=""false"">
  </component>
  <instance component=""myPackage.B"" name=""b""></instance>
</iPOJO>

When I try to install this bundle on a felix gateway I get the following error : 

ERROR: EventDispatcher: Error during dispatch. (java.lang.VerifyError: (class: org/ow2/shelbie/cli/B, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;)V) Expecting to find object/array on stack)
java.lang.VerifyError: (class: org/ow2/shelbie/cli/B, method: <init> signature: (Lorg/apache/felix/ipojo/InstanceManager;)V) Expecting to find object/array on stack
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)
	at java.lang.Class.getConstructor0(Class.java:2671)
	at java.lang.Class.getDeclaredConstructor(Class.java:1953)
	at org.apache.felix.ipojo.InstanceManager.createPojoObject(InstanceManager.java:538)
	at org.apache.felix.ipojo.InstanceManager.getPojoObject(InstanceManager.java:698)
	at org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.__stateChanged(LifecycleCallbackHandler.java:157)
	at org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.stateChanged(LifecycleCallbackHandler.java)
	at org.apache.felix.ipojo.InstanceManager.setState(InstanceManager.java:409)
	at org.apache.felix.ipojo.InstanceManager.start(InstanceManager.java:299)
	at org.apache.felix.ipojo.ComponentFactory.createInstance(ComponentFactory.java:146)
	at org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:250)
	at org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:194)
	at org.apache.felix.ipojo.InstanceCreator$ManagedInstance.create(InstanceCreator.java:316)
	at org.apache.felix.ipojo.InstanceCreator.addInstance(InstanceCreator.java:76)
	at org.apache.felix.ipojo.Extender.parse(Extender.java:238)
	at org.apache.felix.ipojo.Extender.startManagementFor(Extender.java:180)
	at org.apache.felix.ipojo.Extender.bundleChanged(Extender.java:101)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:690)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:619)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:532)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3568)
	at org.apache.felix.framework.Felix._startBundle(Felix.java:1591)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1519)
	at org.apache.felix.framework.Felix.setFrameworkStartLevel(Felix.java:1104)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:258)
	at java.lang.Thread.run(Thread.java:595)

","iPOJO 0.8.0
felix 1.0.3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-28 17:23:21.874,,,no_permission,,,,,,,,,,,58339,,,Wed Oct 22 14:00:39 UTC 2008,,,,,,0|i1apkn:,270609,,,,,,,,"28/Jul/08 17:23;clement.escoffier;Nice catch !
The issue comes from the super constructor arguments that were not loaded. This corrupts the class, as the super constructor cannot be called (linked) correctly.

I commit a fix in the trunk version (revision 680406).
I also add your test case in my test suite.",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
Error during bundle update is not completely rolled back,FELIX-647,12401042,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,25/Jul/08 18:45,25/Jul/08 18:48,14/Mar/19 02:47,25/Jul/08 18:48,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"There is a bug when a bundle update throws an exception. In the attempt to rollback the bundle revision, it was not correctly rolling back the array of revisions in BundleArchive.undoRevise(). It was correctly creating a new revision array that was one element smaller and copying the existing revisions to this smaller array, but it was forgetting to assign the new smaller array to the BundleArchive.m_revisions member field. Thus, it was not actually rolling back the revision array itself, even though it was rolling back everything else.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58341,,,Fri Jul 25 18:48:04 UTC 2008,,,,,,0|i140wn:,231609,,,,,,,,25/Jul/08 18:48;rickhall;Applied a patch to fix this.,,,,,,,,,,,,,,,,,,,,,,,,,,
Reconfiguration of factory components is not possible,FELIX-646,12401004,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,25/Jul/08 12:05,25/Jul/08 12:10,14/Mar/19 02:47,25/Jul/08 12:07,scr-1.0.2,,,,,,,,,,scr-1.0.4,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Instances of factory components may be created by calling the ComponentFactory.newInstance() method or by creating configuration objects whose factoryPID is set to the factory name of the ComponentFactory. When calling the ComponentFactory.newInstance() method, a Dictionary object may be given containing configuration data for the new instance. This configuration data overwrites and configuration admin provided or default configuration (from the descriptor).

Currently when creating a component instance by creating a configuration object, the component is created with its factory configuration set as if the newInstance() method is called. Changing the original configuration supplies the new configuration to the component instance. But because the initial configuration is treated as the factory configuration, the initial configuration can never be replaced.

To fix this, component instances created as per configuration objects should not be created with the initial configuration as its factory configuration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58342,,,Fri Jul 25 12:10:18 UTC 2008,,,,,,0|i140uf:,231599,,,,,,,,25/Jul/08 12:07;fmeschbe;Fixed in Rev. 679771 as described.,25/Jul/08 12:10;fmeschbe;Clsoing after deployment of new SNAPSHOT version 1.0.3-20080725.120933-2.,,,,,,,,,,,,,,,,,,,,,,,,,
ClassNotFound exception when inheriting references from a class contained in another bundle,FELIX-644,12400984,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,25/Jul/08 07:30,25/Jul/08 10:11,14/Mar/19 02:47,25/Jul/08 10:11,maven-scr-plugin-1.0.6,,,,,,,,,,maven-scr-plugin-1.0.7,,,,SCR Tooling,,,,,,,0,,,,,,"Example:
Bundle A contains abstract class A1 with reference to service S comming from a different bundle/jar X
Bundle B contains class B1 extendind A1

If Bundle B does not have X as a dependency and scope ""provided"" is used for the dependency to Bundle A, the class X is not found when the reference to X is checked in Bundle B.

We can skip these checks as Bundle A has already checked the reference.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58344,,,Fri Jul 25 10:11:00 UTC 2008,,,,,,0|i140uv:,231601,,,,,,,,"25/Jul/08 10:11;cziegeler;Actually this problem can't be solved completly as maven itself suffers from the same problem.
Therefore I just added a simple check for not re-checking a reference of a superclass if it is already checked there successfully. This solves the problem in most cases.
However, if you implement a subclass that does not inherit the scr information from the super class but defines the same references, the super class can't be loaded and therefore not checked. In this case a dependency to the external module has to be added. (I think this is more a maven problem than a scr one!)",,,,,,,,,,,,,,,,,,,,,,,,,,
Inheritance of references is not working if there is more than one bundle involved in the hierarchy,FELIX-643,12400983,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,25/Jul/08 07:28,25/Jul/08 09:00,14/Mar/19 02:47,25/Jul/08 09:00,maven-scr-plugin-1.0.6,,,,,,,,,,maven-scr-plugin-1.0.7,,,,SCR Tooling,,,,,,,0,,,,,,"Example:
Bundle A contains abstract class A1 with reference to to service S
Bundle B contains abstract class B1 extending A1
Bundle C contains class C1 extending B1

In this case you get a duplicate definition error for reference to service S, as C is transitivly inheriting the reference to service S twice: from bundle B and from Bundle A.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58345,,,Fri Jul 25 09:00:37 UTC 2008,,,,,,0|i140tz:,231597,,,,,,,,25/Jul/08 09:00;cziegeler;The class hierarchy was traversed twice for references. Fixed in revision 679714.,,,,,,,,,,,,,,,,,,,,,,,,,,
upnp event delivery to OSGi event listeners fails on random devices after a certain period of time,FELIX-642,12400922,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,,daniel123,daniel123,24/Jul/08 15:52,30/Jun/09 21:36,14/Mar/19 02:47,30/Jun/09 21:36,upnp-basedriver-0.8.0,,,,,,,,,,upnp-basedriver-0.8.0,,,,UPnP Subproject,,,,,,,0,,,,,,"Ok...overall problem is as follows:

upnp event delivery to OSGi event listeners fails on random devices after a certain period of time

Overall Environment Setup
-------------------------
- i have two hosts A and B => A is a Bridge exporting about 20 devices at the moment (will get more - it's a X10 like system), B acts as a central server for the devices (Smart Home implementation)
- A is a SensorBridge...and B a central controlpoint importing all those devices
- both ends use upnpbasedriver 0.8 and extra bundle from felix project
- the two hosts are connected through a Gigabit Switch (NO WIRELESS USED!)
- all the devices on the server (so the central smart home controller) that get imported get refined. They subscribe to the upnp device it refines to get notified on event change.
- on the central server (Host B) i subscribe to UPnP Devices exported by Host A using UPnPSubscriber Helper class of the extra bundle


Issues
------
- ""SOMETIMES"" on INITIAL subscription not all devices get notified about the initial status (devices get found properly though)
  ( see also http://www.mail-archive.com/users@felix.apache.org/msg01781.html for that)

- after some time of operation random devices begin to fail - that means..they do not get notified about event changes anymore, but devices are still present (so they are still there as UPnPDevice instances in the central server)... 

=> i had debug enabled....and as i see i still receive the event-change notifies on my Host B (=central server)....if i ""resubscribe"" to the event listener of the failed device everything works again (i dont need to restart the whole basedriver or osgi framework to let it work again - just my refining driver must be restarted which does the subscription to the devices using UPnPSubscriber class) ...

SO this STILL GETS DELIVERED, but listeners do not get notified about the change:
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:956d-a11b-fe88-e08e
SEQ: 0
Content-Length: 165
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>off</Status>
   </property>
</propertyset>
-------------------------------------------- 


Tests:
-----------------
- yes - every device exported by the upnpsensorbridge (=Host A) gets found by the central server (=Host B) 

- upnp tester of felix project experiences same issues

- the REFINED devices on the SERVER themselves are using the felix helper class to subscribe to the events:
		// create upnp listener - if evented is true
		subscriber = new UPnPSubscriber(bundleContext, this);
		subscriber.subscribeAllServicesOf(super.getUPnPDeviceUDN());

- i also tried: 		EventListener test = new EventListener();
		                servReg = context.registerService(UPnPEventListener.class.getName(), test, null);
(so not using UPnPSubscriber) => same problem...so UPnPSubscriber may not be the root of the problem

- the upnp device implementation on the host exporting the upnp devices ( =Host A, sensorbridge) are using the following line to expose event notifier
		// setup event notifier
		notify_switch = new UPnPEventNotifier(context, this, switchdevswitchservice, switchDev);




================================================================================
Is it possible that my issue is connected to this one mentioned in the cyberlink forum?

Stefano answered to it in the cyberlink forum!!
http://sourceforge.net/forum/forum.php?thread_id=1952657&forum_id=258158
----------------------------------------------------------------------------------------------------------------------------

if you need something else please contact me! :)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-04 10:24:46.706,,,no_permission,,,,,,,,,,,58346,,,Tue Jun 30 21:36:22 UTC 2009,,,,,,0|i0vwbj:,184209,,,,,,,,"24/Jul/08 17:17;daniel123;i have one additional information which may be valuable........

=> this is not happening per ""device"" but also it may be that one service of a device is sending the initial value...and the second one not ... just for information :)","24/Jul/08 18:04;daniel123;i have a log which may be valuable...(from the central smart home server which imports the devices...)
i ran the upnp event tester which is registering the upnpeventlistener to get ALL initial events.....
i set the log level of the basedriver to 4......
the two lines like -->
uuid:AT-SM-FHZ1-motionsensor1 urn:upnp-org:serviceId:GetEstimate:1EstimatedValue 0
#diff Devices:1
between the other messages of the log are showing the output of the TESTER.....the rest are logs from basedriver

only 16 of the17 devices have shown initial values...
dunnow how about services...it may be that one of the 16 shown devices has also single services missing (like already mentioned...its a per service, not per device issue)


==> 72 is the tester device
osgi> start 72debug    20080724 19:54:47 bid#78       - [Importer] deviceNotifyReceived
debug    20080724 19:54:47 bid#78       - 
================REQUEST=====================
NOTIFY * HTTP/1.1
Server: Linux/2.6.20-17-generic UPnP/1.0 CyberDomo/1.8
Cache-Control: max-age=1800
Location: http://192.168.0.11:4020/gen-desc.xml
NTS: ssdp:alive
NT: upnp:rootdevice
USN: uuid:AT-SM-FHZ1-rainsensor1::upnp:rootdevice
HOST: 239.255.255.250:1900

--------------------------------------------
debug    20080724 19:54:47 bid#78       - [Importer] ssdpPacket.isAlive
debug    20080724 19:54:47 bid#78       - [Importer] Device already discovered
debug    20080724 19:54:47 bid#78       - [Importer] deviceNotifyReceived
debug    20080724 19:54:47 bid#78       - 
================REQUEST=====================
NOTIFY * HTTP/1.1
Server: Linux/2.6.20-17-generic UPnP/1.0 CyberDomo/1.8
Cache-Control: max-age=1800
Location: http://192.168.0.11:4020/gen-desc.xml
NTS: ssdp:alive
NT: uuid:AT-SM-FHZ1-rainsensor1
USN: uuid:AT-SM-FHZ1-rainsensor1
HOST: 239.255.255.250:1900

--------------------------------------------
debug    20080724 19:54:47 bid#78       - [Importer] ssdpPacket.isAlive
debug    20080724 19:54:47 bid#78       - [Importer] Device already discovered
debug    20080724 19:54:47 bid#78       - [Importer] deviceNotifyReceived
debug    20080724 19:54:47 bid#78       - 
================REQUEST=====================
NOTIFY * HTTP/1.1
Server: Linux/2.6.20-17-generic UPnP/1.0 CyberDomo/1.8
Cache-Control: max-age=1800
Location: http://192.168.0.11:4020/gen-desc.xml
NTS: ssdp:alive
NT: urn:schemas-upnp-org:device:FHZRainSensor:1
USN: uuid:AT-SM-FHZ1-rainsensor1::urn:schemas-upnp-org:device:FHZRainSensor:1
HOST: 239.255.255.250:1900

--------------------------------------------
debug    20080724 19:54:47 bid#78       - [Importer] ssdpPacket.isAlive
debug    20080724 19:54:47 bid#78       - [Importer] Device already discovered

debug    20080724 19:54:48 bid#78       - [Importer] deviceNotifyReceived
debug    20080724 19:54:48 bid#78       - 
================REQUEST=====================
NOTIFY * HTTP/1.1
Server: Linux/2.6.20-17-generic UPnP/1.0 CyberDomo/1.8
Cache-Control: max-age=1800
Location: http://192.168.0.11:4020/gen-desc.xml
NTS: ssdp:alive
NT: urn:schemas-upnp-org:service:GetName:1
USN: uuid:AT-SM-FHZ1-rainsensor1::urn:schemas-upnp-org:service:GetName:1
HOST: 239.255.255.250:1900

--------------------------------------------
debug    20080724 19:54:48 bid#78       - [Importer] ssdpPacket.isAlive
debug    20080724 19:54:48 bid#78       - [Importer] Device already discovered
debug    20080724 19:54:48 bid#78       - [Importer] check for service updating
info     20080724 19:54:48 bid#72       - [51;org.osgi.service.upnp.UPnPEventListener] ServiceEvent REGISTERED
debug    20080724 19:54:48 bid#78       - [Importer] serviceChanged
debug    20080724 19:54:48 bid#78       - Event::org.osgi.framework.ServiceEvent[source={org.osgi.service.upnp.UPnPEventListener}={service.id=51}]

osgi> info     20080724 19:54:48 bid#72       - BundleEvent STARTED
CyberDomo message : sock = /192.168.0.11:46700
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:48 bid#78       - [Importer] deviceNotifyReceived
debug    20080724 19:54:48 bid#78       - 
================REQUEST=====================
NOTIFY * HTTP/1.1
Server: Linux/2.6.20-17-generic UPnP/1.0 CyberDomo/1.8
Cache-Control: max-age=1800
Location: http://192.168.0.11:4020/gen-desc.xml
NTS: ssdp:alive
NT: urn:schemas-upnp-org:service:GetStatus:1
USN: uuid:AT-SM-FHZ1-rainsensor1::urn:schemas-upnp-org:service:GetStatus:1
HOST: 239.255.255.250:1900

--------------------------------------------
debug    20080724 19:54:48 bid#78       - [Importer] ssdpPacket.isAlive
debug    20080724 19:54:48 bid#78       - [Importer] Device already discovered
debug    20080724 19:54:48 bid#78       - [Importer] check for service updating
debug    20080724 19:54:48 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:48 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:8fed-a11b-e80b-e0ca
SEQ: 0
Content-Length: 179
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <EstimatedValue>0</EstimatedValue>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:48 bid#78       - [Importer] Notify Request
debug    20080724 19:54:48 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-motionsensor1 urn:upnp-org:serviceId:GetEstimate:1EstimatedValue 0
#diff Devices:1
CyberDomo message : sock = /192.168.0.11:43768
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:48 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:48 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:90b8-a11b-c447-e0f0
SEQ: 0
Content-Length: 160
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Event></Event>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:48 bid#78       - [Importer] Notify Request
debug    20080724 19:54:48 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-motionsensor1 urn:upnp-org:serviceId:GetEvent:1Event 
#diff Devices:1
CyberDomo message : sock = /192.168.0.11:50031
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:48 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:48 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9183-a11b-c553-e08c
SEQ: 0
Content-Length: 164
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>on</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:48 bid#78       - [Importer] Notify Request
debug    20080724 19:54:48 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-dimswitch4 urn:upnp-org:serviceId:GetStatus:1Status on
#diff Devices:2
CyberDomo message : sock = /192.168.0.11:43741
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:49 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:49 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:924a-a11b-ebf6-e072
SEQ: 0
Content-Length: 162
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>34</Level>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:49 bid#78       - [Importer] Notify Request
debug    20080724 19:54:49 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-dimswitch4 urn:upnp-org:serviceId:GetLevel:1Level 34
#diff Devices:2
CyberDomo message : sock = /192.168.0.11:60193
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:49 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:49 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9316-a11b-e0cb-e01d
SEQ: 0
Content-Length: 165
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>off</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:49 bid#78       - [Importer] Notify Request
debug    20080724 19:54:49 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-dimmablelight1 urn:upnp-org:serviceId:SwitchDevice:1Status off
#diff Devices:3
CyberDomo message : sock = /192.168.0.11:56040
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:49 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:49 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:93db-a11b-f0c5-e07b
SEQ: 0
Content-Length: 161
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>0</Level>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:49 bid#78       - [Importer] Notify Request
debug    20080724 19:54:49 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-dimmablelight1 urn:upnp-org:serviceId:DimDevice:1Level 0
#diff Devices:3
CyberDomo message : sock = /192.168.0.11:48067
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:49 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:49 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:94a6-a11b-eb43-e007
SEQ: 0
Content-Length: 164
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>on</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:49 bid#78       - [Importer] Notify Request
debug    20080724 19:54:49 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-switch3 urn:upnp-org:serviceId:GetStatus:1Status on
#diff Devices:4
CyberDomo message : sock = /192.168.0.11:39333
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:49 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:49 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:956d-a11b-fe88-e08e
SEQ: 0
Content-Length: 165
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>off</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:49 bid#78       - [Importer] Notify Request
debug    20080724 19:54:49 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch3 urn:upnp-org:serviceId:GetStatus:1Status off
#diff Devices:5
CyberDomo message : sock = /192.168.0.11:34372
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:50 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:50 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9637-a11b-7b53-e0af
SEQ: 0
Content-Length: 161
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>0</Level>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:50 bid#78       - [Importer] Notify Request
debug    20080724 19:54:50 bid#78       - [Importer] newEventArrived
CyberDomo message : sock = /192.168.0.11:58961
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:50 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:50 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9701-a11b-eafd-e075
SEQ: 0
Content-Length: 165
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>off</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:50 bid#78       - [Importer] Notify Request
debug    20080724 19:54:50 bid#78       - [Importer] newEventArrived
CyberDomo message : sock = /192.168.0.11:50563
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:50 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:50 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:97cb-a11b-3f58-e10b
SEQ: 0
Content-Length: 161
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>0</Level>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:50 bid#78       - [Importer] Notify Request
debug    20080724 19:54:50 bid#78       - [Importer] newEventArrived
CyberDomo message : sock = /192.168.0.11:37457
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:50 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:50 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9893-a11b-c7b3-e082
SEQ: 0
Content-Length: 164
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>on</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:50 bid#78       - [Importer] Notify Request
debug    20080724 19:54:50 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch7 urn:upnp-org:serviceId:GetStatus:1Status on
#diff Devices:6
CyberDomo message : sock = /192.168.0.11:50267
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:50 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:50 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:995d-a11b-2121-e018
SEQ: 0
Content-Length: 163
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>100</Level>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:50 bid#78       - [Importer] Notify Request
debug    20080724 19:54:50 bid#78       - [Importer] newEventArrived
CyberDomo message : sock = /192.168.0.11:42546
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:51 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:51 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9a2a-a11b-b56a-e0a8
SEQ: 0
Content-Length: 165
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>off</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:51 bid#78       - [Importer] Notify Request
debug    20080724 19:54:51 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch4 urn:upnp-org:serviceId:GetStatus:1Status off
#diff Devices:7
CyberDomo message : sock = /192.168.0.11:50869
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:51 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:51 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9afc-a11b-f9e8-e103
SEQ: 0
Content-Length: 161
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>0</Level>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:51 bid#78       - [Importer] Notify Request
debug    20080724 19:54:51 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch4 urn:upnp-org:serviceId:GetLevel:1Level 0
#diff Devices:7
CyberDomo message : sock = /192.168.0.11:35584
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:51 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:51 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9bc2-a11b-a1db-e06c
SEQ: 0
Content-Length: 164
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>on</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:51 bid#78       - [Importer] Notify Request
debug    20080724 19:54:51 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch5 urn:upnp-org:serviceId:GetStatus:1Status on
#diff Devices:8
CyberDomo message : sock = /192.168.0.11:39669
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:51 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:51 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9c8d-a11b-d4e0-e073
SEQ: 0
Content-Length: 163
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>100</Level>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:51 bid#78       - [Importer] Notify Request
debug    20080724 19:54:51 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch5 urn:upnp-org:serviceId:GetLevel:1Level 100
#diff Devices:8
CyberDomo message : sock = /192.168.0.11:44317
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:51 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:51 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9d53-a11b-fdd2-e06a
SEQ: 0
Content-Length: 164
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>on</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:51 bid#78       - [Importer] Notify Request
debug    20080724 19:54:51 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-simplelight1 urn:upnp-org:serviceId:SwitchDevice:1Status on
#diff Devices:9
CyberDomo message : sock = /192.168.0.11:54870
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:52 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:52 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9e1b-a11b-a048-e0be
SEQ: 0
Content-Length: 164
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>on</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:52 bid#78       - [Importer] Notify Request
debug    20080724 19:54:52 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch2 urn:upnp-org:serviceId:GetStatus:1Status on
#diff Devices:10
CyberDomo message : sock = /192.168.0.11:38177
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:52 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:52 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9ee3-a11b-ff74-e0c5
SEQ: 0
Content-Length: 163
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>100</Level>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:52 bid#78       - [Importer] Notify Request
debug    20080724 19:54:52 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch2 urn:upnp-org:serviceId:GetLevel:1Level 100
#diff Devices:10
CyberDomo message : sock = /192.168.0.11:46611
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:52 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:52 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:9fac-a11b-7a23-e116
SEQ: 0
Content-Length: 165
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>off</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:52 bid#78       - [Importer] Notify Request
debug    20080724 19:54:52 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-funksteckdose1 urn:upnp-org:serviceId:SwitchDevice:1Status off
#diff Devices:11
CyberDomo message : sock = /192.168.0.11:49532
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:52 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:52 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:a072-a11b-4847-e0d4
SEQ: 0
Content-Length: 165
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>off</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:52 bid#78       - [Importer] Notify Request
debug    20080724 19:54:52 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-dawnsensor2 urn:upnp-org:serviceId:GetStatus:1Status off
#diff Devices:12
CyberDomo message : sock = /192.168.0.11:58959
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:52 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:52 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:a13a-a11b-a345-e00a
SEQ: 0
Content-Length: 164
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>on</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:52 bid#78       - [Importer] Notify Request
debug    20080724 19:54:52 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch1 urn:upnp-org:serviceId:GetStatus:1Status on
#diff Devices:13
CyberDomo message : sock = /192.168.0.11:46776
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
CyberDomo message : sock = /192.168.0.11:57175
debug    20080724 19:54:53 bid#78       - [Importer] httpRequestRecieved event
CyberDomo message : httpServThread ...
debug    20080724 19:54:53 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:a1fe-a11b-de65-e110
SEQ: 0
Content-Length: 163
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>100</Level>
   </property>
</propertyset>
--------------------------------------------
CyberDomo message : accept ...
debug    20080724 19:54:53 bid#78       - [Importer] Notify Request
debug    20080724 19:54:53 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch1 urn:upnp-org:serviceId:GetLevel:1Level 100
#diff Devices:13
debug    20080724 19:54:53 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:53 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:a2c2-a11b-220f-e020
SEQ: 0
Content-Length: 165
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>off</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:53 bid#78       - [Importer] Notify Request
debug    20080724 19:54:53 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-S20_Switch6 urn:upnp-org:serviceId:GetStatus:1Status off
#diff Devices:14
CyberDomo message : sock = /192.168.0.11:52541
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:53 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:53 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:a38c-a11b-696e-e0ad
SEQ: 0
Content-Length: 161
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Level>0</Level>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:53 bid#78       - [Importer] Notify Request
debug    20080724 19:54:53 bid#78       - [Importer] newEventArrived
CyberDomo message : sock = /192.168.0.11:54229
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
CyberDomo message : sock = /192.168.0.11:53133
CyberDomo message : httpServThread ...
CyberDomo message : accept ...
debug    20080724 19:54:53 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:53 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:a454-a11b-982e-e023
SEQ: 0
Content-Length: 164
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>on</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:53 bid#78       - [Importer] Notify Request
debug    20080724 19:54:53 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-rainsensor1 urn:upnp-org:serviceId:GetStatus:1Status on
#diff Devices:15
debug    20080724 19:54:53 bid#78       - [Importer] httpRequestRecieved event
debug    20080724 19:54:53 bid#78       - 
================REQUEST=====================
NOTIFY /evetSub HTTP/1.0
Content-Type: text/xml; charset=""utf-8""
HOST: 192.168.0.5
NT: upnp:event
NTS: upnp:propchange
SID: uuid:a51a-a11b-feda-e08d
SEQ: 0
Content-Length: 164
Connection: close

<?xml version=""1.0"" encoding=""utf-8""?>
<propertyset xmlns:e=""urn:schemas-upnp-org:event-1-0"">
   <property>
      <Status>on</Status>
   </property>
</propertyset>
--------------------------------------------
debug    20080724 19:54:53 bid#78       - [Importer] Notify Request
debug    20080724 19:54:53 bid#78       - [Importer] newEventArrived
uuid:AT-SM-FHZ1-shutter1 urn:upnp-org:serviceId:SwitchDevice:1Status on
#diff Devices:16","04/Aug/08 10:24;brucej;It sounds like there's some kind of timeout happening in the base driver which is causing un-subscription to occur. Have you tried spawning a thread in A that generates regular ""alive"" events that don't do anything but just keep the system up?

I've just looked at page 62 of the UPnP spec, and its clear that subscriptions have a duration field, and in the base driver code (in org.apache.felix.upnp.basedriver.importer.core.event.thread.SubScriber.java) this is hard coded to 12000. Thus, the subscription will indeed timeout after 12000 milliseconds, and will need to be refreshed. It doesn't look like this value can be changed: perhaps this should be raised as a bug?","04/Aug/08 21:01;furfari;Actually the timeout you refer is 120.000 that  means about 33 hours. This value is used in the header of the UPnP subscription message, that is 120000 seconds. It's true that this value is hard coded, further more this value is used for all the subscription managed by the Base Driver, but it cannot be considered a bug. 
Looking at the Cyberlink (CL) code (upnp.Renewsubscriber) you can see that each subscription renew is checked every 120 seconds, and this is a constraint that is important to know. However if the subscription renew fails after about 120 seconds, CL tries automatically to do a new subscription. What is strange is that CL not seems to check the timeout received with the response of the previous subscription, and in any case the renew of the subscription is proposed with an infinite timeout.

","05/Aug/08 21:24;furfari;Hi Daniel,

I  should have fixed the bug. It was in the basedriver see comment on Subversion commits.
If you build the snapshot version of the basedriver you should see the difference.

I tested the UPnP subscription mechanism instantiating 100 BinaryLight on a Felix platform and running a modified version of the tester on another one. It seems stable now, but I noticed that with 100 devices already instantiated, launching the tester the first time almost 50 devices are discovered  and ( with the fix ) all the initial events are properly reported for these devices. By using the menu ""SEARCH/root devices""  of the UpnP Tester the rest of the devices are discovered with the related initial state. This behavior is due to the loss of multicast messages as Stefano discussed with you (http://sourceforge.net/forum/forum.php?thread_id=1952657&forum_id=258158).

a snippet of the code used for the tester is:

	public void doTest(){
		System.out.println(""starting test"");
		listener = new RootDeviceListener();
		listener.setDeviceNodeListener(new DeviceNodeListener(){
			HashMap map = new HashMap();
		    int countNotify = 1;
		    int countDevices = 1;
			public void deviceDetected(DeviceNode d) {
				String udn = d.toString();
				System.out.println(""device DETECTED "" + udn + "" ### "" + countDevices++);
			   UPnPSubscriber subscriber = new UPnPSubscriber(context, new UPnPEventListener(){
					public void notifyUPnPEvent(String arg0, String arg1, Dictionary arg2) {
						System.out.println(arg0 + "" "" + arg1 + arg2.toString() + ""  "" + countNotify++);
					}			        	
			    });
			   map.put(udn, subscriber);
			   subscriber.subscribeAllServicesOF(udn);				
			}
			
			public void rootDeviceUnplugged(String udn) {
				System.out.println(""device REMOVED "" + udn + "" ### "" + (--countDevices));
				UPnPSubscriber subscriber = (UPnPSubscriber)map.remove(udn);
				subscriber.unsubscribeAllServicesOF(udn);
				if (countDevices==1) countNotify =1;
			}
			
		});
		listener.activate();
		
	}


---------------
note that I used the RootDeviceListener class you find in the UPnP Tester code.
It will be part of the upnp.extra bundle in the future.

Best Regards,
francesco
","06/Aug/08 13:58;furfari;I forgot to say that you can change the MX paramenter of the M-Search in order to overcome the inconvenient of receiving only 50/60 announcements.
For example by launching the Tester bundle with the system property -Dcyberdomo.ssdp.mx=10 , that's 10 seconds to receive MSearch responses (default is 5), will give time to the Tester to receive 100 replies from the different BinaryLight devices.


",30/Jun/09 21:36;furfari;The issue has been solved by adding a synchronize block in the subscribe method in the base driver (see  commit #685555 - 13 Aug 2008). A better solution would imply the redisign  of the renewer mechanism in the CyberDomo library.,,,,,,,,,,,,,,,,,,,,
OBR resolution process does not consider capability namespace,FELIX-638,12400660,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,21/Jul/08 13:58,27/Aug/08 19:30,14/Mar/19 02:47,21/Jul/08 14:42,,,,,,,,,,,bundlerepository-1.2.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Originally, capabilities/requirements did not have a namespace; instead, the namespace was just another property to be filtered. It was later separated out because Peter Kriens thought it made more sense this way. Unfortunately, it appears that the resolution process did not get updated to check the separate namespace. This hasn't caused any major issues since we don't have namespace overlap yet, but it should be resolved.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58350,,,Mon Jul 21 14:42:56 UTC 2008,,,,,,0|i0vyhr:,184561,,,,,,,,"21/Jul/08 14:42;rickhall;I applied a simple patch to fix this. I will close this issue for now, but I didn't do significant testing.",,,,,,,,,,,,,,,,,,,,,,,,,,
Composite service implementation does not support long argument,FELIX-637,12400454,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,17/Jul/08 09:07,22/Oct/08 14:00,14/Mar/19 02:47,17/Jul/08 09:31,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"When a composite implements a service, the generated class is incorrect if one of the delegated method contains an argument of the type ""long"". The error comes form an issue when computing the stack size. long argument use two ""spaces"" instead of one, so the computed stack size is wrong.",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58351,,,Wed Oct 22 14:00:39 UTC 2008,,,,,,0|i140zz:,231624,,,,,,,,"17/Jul/08 09:31;clement.escoffier;Fixed in the revision 677545
Improves stack size computation and argument loading to avoid issues with the generated class. ",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle-SymbolicName is generated incorrectly,FELIX-636,12400387,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,kenpaulsen,kenpaulsen,16/Jul/08 16:11,27/Aug/08 10:50,14/Mar/19 02:47,04/Aug/08 11:29,maven-bundle-plugin-1.4.1,,,,,,,,,,maven-bundle-plugin-1.4.2,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"I have the following in the pom.xml:

  <groupId>org.glassfish.jsftemplating</groupId>
  <artifactId>jsftemplating</artifactId>

After I build, I get the following in the MANIFEST.MF:

   Bundle-SymbolicName: org.glassfish.jsftemplating

Notice it only has 1 ""jsftemplating"" in the symbolic name.  If I change the artifactId to something else and make no other changes, I get the expected results.  For example, if I put this in the pom.xml:

  <groupId>org.glassfish.jsftemplating</groupId>
  <artifactId>jsft</artifactId>

I get this in the MANIFEST.MF:

   Bundle-SymbolicName: org.glassfish.jsftemplating.jsft

Notice now both the full groupId AND artifact id appear in the symbolic name.  This is what I expected to see. ",Ubuntu,,,,,,,,,,,,,,,,,,,16/Jul/08 16:15;kenpaulsen;pom.xml;https://issues.apache.org/jira/secure/attachment/12386193/pom.xml,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-07-16 16:34:32.163,,,no_permission,,,,,,,,,,,58352,,,Wed Aug 27 10:50:16 UTC 2008,,,,,,0|i1aplj:,270613,,,,,,,,"16/Jul/08 16:15;kenpaulsen;This is the pom.xml file which I am using to repackage jsftemplating.  This pom.xml exhibits the problem described in this issue.

Thanks,

Ken Paulsen","16/Jul/08 16:34;mcculls;This is working as designed - by default we use the Maven2OsgiConverter provided by the Maven team to convert the groupId and artifactId combination to a unique Bundle-SymbolicName, and only fall back to use ""groupId.artifactId"" as a last resort. This gives us the best compatibility with other Maven plugins that use the same (shared) component:

   http://svn.apache.org/repos/asf/maven/shared/tags/maven-osgi-0.2.0/src/main/java/org/apache/maven/shared/osgi/DefaultMaven2OsgiConverter.java

The Maven2OsgiConverter component uses the following algorithm to compute the symbolic name:

    /**
     * Get the symbolic name as groupId + ""."" + artifactId, with the following exceptions
     * <ul>
     * <li>if artifact.getFile is not null and the jar contains a OSGi Manifest with
     * Bundle-SymbolicName property then that value is returned</li>
     * <li>if groupId has only one section (no dots) and artifact.getFile is not null then the
     * first package name with classes is returned. eg. commons-logging:commons-logging ->
     * org.apache.commons.logging</li>
     * <li>if artifactId is equal to last section of groupId then groupId is returned. eg.
     * org.apache.maven:maven -> org.apache.maven</li>
     * <li>if artifactId starts with last section of groupId that portion is removed. eg.
     * org.apache.maven:maven-core -> org.apache.maven.core</li>
     * </ul>
     */

If you want to force the bundleplugin to always use ""groupId.artifactId"" as the symbolic name then just use:

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>1.4.1</version>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${pom.groupId}.${pom.artifactId}</Bundle-SymbolicName>
            <!-- etc... -->
          </instructions>
        </configuration>
      </plugin>

and this will override the default setting.","16/Jul/08 16:51;sahoo;It will be good to put this information in the documentation page: http://felix.apache.org/site/maven-bundle-plugin-bnd.html, which currently gives the impression that the default is always ${groupId}.${artifactId}. If we don't want to put too much details, in the main documentation section, then it will be good to just let users know that policy is driven by Maven2OSGiConverter. IMO, this can be converted to a doc bug for this plugin.","16/Jul/08 18:02;kenpaulsen;Thanks for the clarification!  Your explanation makes sense and describes how it is functioning.

I agree w/ Sahoo, it would be nice if it were documented with the maven-bundle-plugin-bnd.html documentation.

Thanks!

Ken Paulsen","01/Aug/08 20:01;lukewpatterson;One preference is [1]
	Bundle-SymbolicName = ${project.groupId}.${project.artifactId}
and the other is [2]  
	Bundle-SymbolicName = ${project.artifactId}

If (Bundle-SymbolicName = ${project.artifactId}) is preferred, it seems that the conventional configuration for a pom would be:

        <groupId>someGroupId</groupId>
        <artifactId>${project.groupId}.someArtifactId</artifactId>



It is unfortunate that their isn't agreement on a standard convention.

--------------------------------
Here is an example that has caused me problems:

	SWT has gone from 

	<groupId>org.eclipse.swt</groupId> 
	<artifactId>org.eclipse.swt</artifactId> 
	see [3]

to

	<groupId>org.eclipse</groupId> 
	<artifactId>swt</artifactId> 
	see [4]


Now it sounds like it might go to 
	<groupId>org.eclipse</groupId> 
	<artifactId>org.eclipse.swt</artifactId> 


It's hard to managed mixed transitive dependencies, especially when no relocation poms have been deployed.
--------------------------------



Does anyone have any ideas for forming a more unified approach in the community?


[1] - http://jira.codehaus.org/browse/MECLIPSE-238
[2] - http://mail-archives.apache.org/mod_mbox/maven-dev/200805.mbox/%3C69ECB380-90D7-4718-BD2D-A0E22A85B555@maven.org%3E
[3] - versions 3.2.0 and 3.2.1 @ http://repo1.maven.org/eclipse/
[4] - versions 3.3.0-v3339b, 3.3.0-v3345b and 3.3.0-v3346 @http://repo1.maven.org/eclipse/, versions 3.2.1-v3235e and 3.3.0-v3346 @http://repo1.maven.org/maven2/
",02/Aug/08 17:00;mcculls;Will update online docs with the current algorithm for determining the symbolic name.,04/Aug/08 11:29;mcculls;Updated the wiki: http://cwiki.apache.org/confluence/display/FELIX/Apache+Felix+Maven+Bundle+Plugin+(BND) - changes will appear on the website after an hour or so.,27/Aug/08 10:50;mcculls;Fixed in latest release of the maven-bundle-plugin (1.4.3),,,,,,,,,,,,,,,,,,,
Simplify factory name computation,FELIX-635,12400236,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,14/Jul/08 18:15,22/Oct/08 14:00,14/Mar/19 02:47,14/Jul/08 18:44,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"The factory name is computed by using the name attribute, the factory attribute and the implementation class name. The factory attribute has a strange role as it can indicate both the factory name and the factory advertising (public or private). 

The factory attribute should not be used. In fact, a cleanest way to compute the factory name would be : 
 - use name if specified, class name otherwise
 - use a (new) ""public"" attribute specifying if the factory is accessible by other bundles (public=""true"", default case) or not (public=""false"")  ",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58353,,,Wed Oct 22 14:00:39 UTC 2008,,,,,,0|i1410f:,231626,,,,,,,,"14/Jul/08 18:44;clement.escoffier;Fixed in the revision 676672
Simplifies factory name computation. Be aware that the factory attribute is no more supported and is replaced by the public attribute or the name attribute. The factory name is now computed as following:
if name not null use this, otherwise use the classname.
The factory advertising is now set with the public attribute (true by default).
",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
Component are set to immediate despite they are already immediate,FELIX-632,12400231,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,14/Jul/08 17:58,22/Oct/08 14:00,14/Mar/19 02:47,14/Jul/08 18:42,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"A recent improvement allows iPOJO to detect if a component should be immediate or not. However, the actual implementation introduces a small issue. A component specifying its immediate attribute to true, they iPOJO overrides this. Of course, this has no impact, but could be avoided.",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58356,,,Wed Oct 22 14:00:39 UTC 2008,,,,,,0|i1apm7:,270616,,,,,,,,"14/Jul/08 18:42;clement.escoffier;Fix in the revision 676672
Improves immediate component detection in order to avoid to re-set a component as immediate when it is already immediate. The detection is applied only when the immediate attribute is not set.
",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
Architecture service should not publish the instance.name property,FELIX-628,12399834,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,clement.escoffier,clement.escoffier,08/Jul/08 16:24,22/Oct/08 14:00,14/Mar/19 02:47,08/Jul/08 16:50,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"The Architecture service is published with the instance.name property. However, this property should be use only by ""functional"" interfaces. So, this property name should be change in ""architecture.instance"". This allows discovering all services provided by an instance (without interfering with the Architecture service). The property value stills the instance name.",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58360,,,Wed Oct 22 14:00:38 UTC 2008,,,,,,0|i1apn3:,270620,,,,,,,,"08/Jul/08 16:50;clement.escoffier;Fixed in the revision 674872.
Now, the Architecture service is published the architecture.instance property instead of the instance.name property (used by functional services). This property indicates the instance name.
This change was made for the two Architecture handlers (atomic components and composite components).",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong classloader is used to detect bind/unbind methods,FELIX-624,12399707,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,cziegeler,cziegeler,07/Jul/08 10:31,25/Aug/08 09:44,14/Mar/19 02:47,08/Jul/08 06:58,scr-1.0.2,,,,,,,,,,scr-1.0.4,,,,Declarative Services (SCR),,,,,,,0,,,,,,"I have two bundles:
Bundle a exporting an abstract class which has a reference to another class (in my test scenario to a class from commons-collections)
Bundle b has a class inheriting from the abstract class from Bundle a

The import package statement in Bundle b does not include the commons-collections class which results in class not found exceptions
when bundle b is started.

This might either be a buig in the maven-bundle-plugin or the used bnd version.

I'll add a simple test case",,,,,,,,,,,,,,,,,,,,07/Jul/08 12:51;cziegeler;Archiv.zip;https://issues.apache.org/jira/secure/attachment/12385393/Archiv.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-07-07 10:39:03.793,,,no_permission,,,,,,,,,,,58364,,,Mon Aug 25 09:44:05 UTC 2008,,,,,,0|i14113:,231629,,,,,,,,07/Jul/08 10:32;cziegeler;Test case with two bundles.,"07/Jul/08 10:39;mcculls;I'm not sure that the import is actually needed - have you checked the bytecode to see if the subclass uses the reference?

Note that there is a bug in Eclipse/PDE which does require this import (due to how PDE is grafted on top of JDT) but the bundles will typically deploy without error onto OSGi frameworks.","07/Jul/08 10:47;cziegeler;No, the subclass is not directly using the class from commons-collections. 

Ah, i see (dumb me)  - yes, the bundle is loaded correctly - it's a problem later on with SCR - the scr implementation is not able to instantiate
an instance of this class.

So I guess that this is rather an SCR bug then, right?","07/Jul/08 10:53;mcculls;I ran javap over the subclass and cannot find any reference to commons-collections in the bytecode, so it seems odd this bundle threw a CNFE because it should not need the import during classloading if there is no reference to it in the bytecode / constant pool (at least according to the JVM spec). Also I started the two bundles and the commons-collections bundle (v3.2.1) successfully in Felix and saw no problem - all the bundles resolved ok.","07/Jul/08 10:55;mcculls;Yes, that sounds like an SCR issue - is it using the correct classloader?",07/Jul/08 11:00;mcculls;Moving issue over to SCR for further investigation.,"07/Jul/08 12:50;cziegeler;Ok, i've updated my test case and it seems to be an SCR problem...however I haven't dug into the code yet.

Here's the exception I get when deploying bundle B (after deploying bundle c and a)
07.07.2008 14:48:14.005 *ERROR* [SCR Component Actor] com.cziegeler.test.b [com.c2.Test] Cannot load class used as parameter org.apache.commons.collections.bag.TreeBag (java.lang.ClassNotFoundException: org.apache.commons.collections.bag.TreeBag) java.lang.ClassNotFoundException: org.apache.commons.collections.bag.TreeBag
	at org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1504)
	at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:358)
	at org.apache.felix.scr.impl.DependencyManager.getBindingMethod(DependencyManager.java:734)
	at org.apache.felix.scr.impl.DependencyManager.getBindingMethod(DependencyManager.java:793)
	at org.apache.felix.scr.impl.DependencyManager.getBindingMethod(DependencyManager.java:793)
	at org.apache.felix.scr.impl.DependencyManager.invokeBindMethod(DependencyManager.java:827)
	at org.apache.felix.scr.impl.DependencyManager.bind(DependencyManager.java:651)
	at org.apache.felix.scr.impl.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:203)
	at org.apache.felix.scr.impl.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:133)
	at org.apache.felix.scr.impl.AbstractComponentManager.activateInternal(AbstractComponentManager.java:476)
	at org.apache.felix.scr.impl.AbstractComponentManager.enableInternal(AbstractComponentManager.java:398)
	at org.apache.felix.scr.impl.AbstractComponentManager.access$000(AbstractComponentManager.java:36)
	at org.apache.felix.scr.impl.AbstractComponentManager$1.run(AbstractComponentManager.java:99)
	at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:85)
07.07.2008 14:48:14.006 *ERROR* [SCR Component Actor] com.cziegeler.test.b [com.c2.Test] bind() method not found
",07/Jul/08 12:51;cziegeler;Updated test case with three bundles,"07/Jul/08 14:50;cziegeler;As discussed in the list, the SCR implementation should not use the classloader of the component itself to load
the parameter classes for the bind/unbind methods. It should rather use the classloader of the class implementing
the bind/unbind methods.
I've implemented a simpler variant which uses the classloader of the bundle exporting the service. This classloader
is definitly able to load the class (and has already loaded it as the service is available). Available with revision 674514.",25/Aug/08 09:44;cziegeler;This has been reimplemented to use the correct classloader with FELIX-694,,,,,,,,,,,,,,,,,
iPOJO Composite Service Instance can use factories twice to create service instance,FELIX-622,12399540,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,03/Jul/08 14:43,22/Oct/08 14:00,14/Mar/19 02:47,03/Jul/08 15:09,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"When instantiating a service, an iPOJO composite can use a factory several time (for the same service). This must be avoid, as these instances are no disposed when the factory leaves or when the composite stops. This issue occurs when managing an aggregate & optional service instantiation.",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58366,,,Wed Oct 22 14:00:38 UTC 2008,,,,,,0|i1416f:,231653,,,,,,,,03/Jul/08 15:09;clement.escoffier;Issue fix by avoiding using twice the same factory to instantiate a service. ,22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
Instances not disposed when instances creation failed,FELIX-621,12399537,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,03/Jul/08 14:16,22/Oct/08 14:00,14/Mar/19 02:47,03/Jul/08 15:08,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"When the instance creation failed, the instance itself is not disposed. Moreover, handler attached on this instance are not disposed too.
Furthermore as the instance cannot start, this instance is not returned to creator who can't dispose it.",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58367,,,Wed Oct 22 14:00:38 UTC 2008,,,,,,0|i1apo7:,270625,,,,,,,,"03/Jul/08 15:08;clement.escoffier;Catch configuration and starting exceptions to manage instance destruction. So, the instance is now disposed when the creation failed. Moreover, attached handlers are also disposed.",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
manifest goal of maven-bundle-plugin ignores _include instruction,FELIX-620,12399509,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,sahoo,sahoo,03/Jul/08 04:39,27/Aug/08 10:50,14/Mar/19 02:47,07/Jul/08 13:21,maven-bundle-plugin-1.4.1,,,,,,,,,,maven-bundle-plugin-1.4.2,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"It appears to me that if I just invoke *manifest* goal of maven-bundle-plugin, it ignores *_include* instruction, where as if I use *bundle* goal, it is used by the plugin. There are various ways to test it. The easiest seems to be using a non-existent file name. Attached are two sets of pom files, pom.xml uses bundle goal, where as pom.xml.notworking uses manifest goal. While using the first one, bnd complains about missing osgi.bundle3 file, where as it does not report any such error while using the first one. That makes me think that the manifest Mojo is not sending the file name to bnd. 

I am attaching a very simple test case along with a README describing the issue.
","Maven version: 2.0.7
Java version: 1.5.0_13-rev
OS name: ""sunos"" version: ""5.11"" arch: ""x86""
",,,,,,,,,,,,,,,,,,,03/Jul/08 04:52;sahoo;Felix-620.zip;https://issues.apache.org/jira/secure/attachment/12385164/Felix-620.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-07-07 09:41:45.723,,,no_permission,,,,,,,,,,,58368,,,Wed Aug 27 10:50:15 UTC 2008,,,,,,0|i1apof:,270626,,,,,,,,03/Jul/08 04:52;sahoo;Test case along with README,"07/Jul/08 09:41;mcculls;Actually the include instruction is being processed, but the manifest goal is not reporting the errors/warnings from Bnd.
I have just added code to report these errors/warnings, and the testcase now behaves the same for both of the goals.","07/Jul/08 09:58;sahoo;That's good. But, as I mentioned in the README, the problem is not about missing warning. I also felt that manifest goal was not processing the instructions file. To reproduce this, please do the following (copied and pasted from the README):
Just change pom.xml to use osgi.bundle and 
pom.xml.notworking to use osgi.bundle2. Both these files exist. Now generate
two jars one with each pom.xml. Look at their manifest files. The one created
with bundle goal has only sahoo.osgitest2.foo.api exported, where as the one
with manifest goal exports sahoo.osgitest2.foo.impl as well as api package. So,
it completely ignored the instructions found in osgi.bundle2 file.
","07/Jul/08 10:27;mcculls;No - it does read the instructions from osgi.bundle2 (you can confirm this by adding a unique entry like ""TEST:ME"") - the issue here is actually that the manifest goal is overwriting the included property with a default export based on the contents of the jar, because it checks for the existence of the export instruction in the original POM instructions rather than the merged instructions.

BTW, there is also a typo in osgi.bundle2 where it uses ""_exportcontents"", rather than  ""-exportcontents"".

Instructions inside included files are processed by Bnd, so it expects the notation described on Peter's website (http://aqute.biz/Code/Bnd#directives) i.e. ""-exportcontents"".  However, because XML doesn't allow tags that start with '-' we can't have <-exportcontents> in the POM, so instead we accept <_exportcontents> and transform this internally to ""-exportcontents"" before passing it onto Bnd. But this is only for the POM to get around the XML tag restriction.

","07/Jul/08 13:00;sahoo;Thanks for pointing out the typo in osgi.bundl2. Will the merge behavior of the manifest goal be addressed as part of this issue, or do you want a separate issue (enhancement request) to be filed?",07/Jul/08 13:21;mcculls;Fixed in trunk - manifest goal now follows export instructions from included property files.,08/Jul/08 03:21;sahoo; Thanks for fixing the bug so quickly. When is the next version of maven-bundle-plugin scheduled to be released?I can plan my activity accordingly. ,"08/Jul/08 14:17;mcculls;No firm date yet - but at least by the end of July, if that's any help.","03/Aug/08 18:34;mcculls;This is available for testing in the latest 1.4.2-SNAPSHOT, I expect to start the release vote tomorrow",27/Aug/08 10:50;mcculls;Fixed in latest release of the maven-bundle-plugin (1.4.3),,,,,,,,,,,,,,,,,
SCR information is not inherited when super class is in a 'provided' bundle,FELIX-617,12399379,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,01/Jul/08 16:21,01/Jul/08 16:46,14/Mar/19 02:47,01/Jul/08 16:46,maven-scr-plugin-1.0.1,maven-scr-plugin-1.0.2,maven-scr-plugin-1.0.3,maven-scr-plugin-1.0.4,maven-scr-plugin-1.0.5,,,,,,maven-scr-plugin-1.0.6,,,,SCR Tooling,,,,,,,0,,,,,,"The mechanism to detect abstract scr configurations from dependencies currently checks the scope for either being runtime or compile. Very often ""provided"" is used for bundle dependencies, so this scope should be allowed as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58371,,,Tue Jul 01 16:46:36 UTC 2008,,,,,,0|i0w01r:,184813,,,,,,,,01/Jul/08 16:46;cziegeler;Fixed in revision 673133,,,,,,,,,,,,,,,,,,,,,,,,,,
Extender pattern handler issue when bundles are leaving,FELIX-613,12398716,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,20/Jun/08 17:46,22/Oct/08 14:00,14/Mar/19 02:47,03/Jul/08 15:06,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,The instances can be notified twice when a bundle is leaving.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58375,,,Wed Oct 22 14:00:38 UTC 2008,,,,,,0|i0w0lr:,184903,,,,,,,,"03/Jul/08 15:06;clement.escoffier;The handler always call the callback to avoid the issue. Indeed, the instance must be notified when a bundle is leaving regardless its state to release all internal references on the leaving bundle.",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigurationAdmin.createFactoryConfiguration should not persist Configuration,FELIX-612,12398500,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,18/Jun/08 12:59,06/Aug/08 08:32,14/Mar/19 02:47,06/Aug/08 08:28,configadmin-1.0.0,configadmin-1.0.1,,,,,,,,,configadmin-1.0.4,,,,Configuration Admin,,,,,,,0,,,,,,"Currently the ConfigurationAdmin.createFactoryConfiguration methods immediately persist factory configurations upon creating them. This is not really incorrect as per the spec.

The problem comes with this opening the gate for potential garbage configuration to remain. Consider this sample method:

    public void createGarbage( String factoryPid )
    {
        getConfigurationAdmin().createFactoryConfiguration( factoryPid );
    }

This method creates a new factory configuration object on each call and immediately drops any reference to it. Because the configuration PID of the configurations returned is created randomly, there is no way to ever retrieve this configuration again. Why ? getConfiguration cannot be used because the PID is unkown and listConfigurations will not return it because the configuration has no properties yet.

So in the interest of not potentially producing garbage, the createFactoryConfiguration method should not immediately persist the configuration object.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58376,,,Wed Aug 06 08:32:57 UTC 2008,,,,,,0|i0w087:,184842,,,,,,,,06/Aug/08 08:28;fmeschbe;Commited the fix in Rev. 683162: a configuration object created through one of the createFactoryConfiguration methods is neither registered with the (internal) factory nor is it persisted nor is it cached internally. Only when it is first stored will it be persisted and registered.,"06/Aug/08 08:32;fmeschbe;Deployed snapshot version 1.0.2-20080806.083202-1.

Closing this now.",,,,,,,,,,,,,,,,,,,,,,,,,
ConfigurationAdmin.listConfigurations returns empty configurations,FELIX-611,12398499,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,18/Jun/08 12:48,06/Aug/08 08:33,14/Mar/19 02:47,06/Aug/08 07:43,configadmin-1.0.0,configadmin-1.0.1,,,,,,,,,configadmin-1.0.4,,,,Configuration Admin,,,,,,,0,,,,,,"The current implementation of the ConfigurationAdmin.listConfigurations method returns all matching configurations even those with no properties.

On the other hand the specification of the listConfigurations method states:

    Only Configuration objects with non- null properties are considered cur-
    rent. That is, Configuration.getProperties() is guaranteed not to return null
    for each of the returned Configuration objects.

Configuration.getProperties() may return null on newly created configuration objects which never have been updated with actual configuration such as Configuration objects created upon calling ConfigurationAdmin.getConfiguration(String)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58377,,,Wed Aug 06 08:33:12 UTC 2008,,,,,,0|i0w08f:,184843,,,,,,,,"18/Jun/08 12:50;fmeschbe;The fix is probably rather easy with this potential patch:

Index: /usr/src/felix/trunk/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java
===================================================================
--- /usr/src/felix/trunk/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java	(revision 667421)
+++ /usr/src/felix/trunk/configadmin/src/main/java/org/apache/felix/cm/impl/ConfigurationManager.java	(working copy)
@@ -422,7 +422,11 @@
                         cfg = new ConfigurationImpl( this, pmList[i], config );
                     }
 
-                    configList.add( cfg );
+                    // FELIX-611: Ignore configuration objects without props
+                    if ( cfg.getProperties() != null )
+                    {
+                        configList.add( cfg );
+                    }
                 }
             }
         }


This is still to be tested....","06/Aug/08 07:43;fmeschbe;Committed the following fixes in Rev. 683144:

(1) Don't return configurations from listConfiguration, which have no properties set (yet).
(2) Return null from listConfiguration instead of empty array in case no applicable configurations can be found

Deffering closing this issue until deploying a new snapshot","06/Aug/08 08:33;fmeschbe;Deployed snapshot version 1.0.2-20080806.083202-1.

Closing this now.",,,,,,,,,,,,,,,,,,,,,,,,
PreferencesService might return invalid Preferences object for a user,FELIX-609,12398362,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,angelovds,angelovds,16/Jun/08 19:19,22/Jun/09 15:40,14/Mar/19 02:47,23/Jun/08 19:52,prefs-1.0.2,,,,,,,,,,prefs-1.0.4,,,,Preferences Service,,,,,,,0,,,,,,"When a Preferences object has been obtained for a given user, it can be removed using removeNode(). A following call to getUserPreferences(...) will then return the old, now invalid, Preferences object, leading to an IllegalStateException when trying to add new data to the node. From this moment on, it is not possible to obtain a valid Preferences object for this user.

The spec does not provide a definite answer about this case; 106.4 comes closest with ""getUserPreferences(String) - Return a Preferences object associated with the user name that is given as argument. If the user does not exist, a new root is created atomically."" Intuitively, one might expect that removeNode() restores the PreferencesService to the same state it was before getUserPreferences(...) was called.

The invalid Preferences object is caused by caching behavior in PreferencesServicesImpl's getUserPreferences(...), which checks whether a user's root node has already been created; if so, it will be returned, if not, it will be created. 

91        PreferencesImpl result = (PreferencesImpl) this.trees.get(name);
92        // if the tree does not exist yet, create it
93        if (result == null) {
94            result = new PreferencesImpl(new PreferencesDescription(this.bundleId, name), this.storeManager);
95            this.trees.put(name, result);
96        }

The most plausible solution is to add an extra clause to the if-statement on line 93, stating something like 
93        if (result == null || !result.isValid()) {
provided that isValid() will then return the valid field of PreferencesImpl.

An alternative would be to detect the removal of a node which does not have a parent (is a root node), and then remove it from the PreferencesServiceImpl's trees; this is not that complicated, but requires some extra code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-23 19:52:17.357,,,no_permission,,,,,,,,,,,58379,,,Tue Feb 03 09:29:06 UTC 2009,,,,,,0|i0w0rz:,184931,,,,,,,,17/Jun/08 12:43;angelovds;Typo.,23/Jun/08 19:52;marrs;Someone please confirm the fix has the desired effect.,"03/Feb/09 09:29;angelovds;It has been a while, but yes, the trunk behavior is now OK.",,,,,,,,,,,,,,,,,,,,,,,,
Meta type localization incorrectly resolved in the meta type folder,FELIX-607,12398322,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,16/Jun/08 11:33,16/Jun/08 11:45,14/Mar/19 02:47,16/Jun/08 11:44,metatype-1.0.0,,,,,,,,,,metatype-1.0.2,,,,Metatype Service,,,,,,,0,,,,,,"Currently the MetaType service assumes the localization of meta type descriptors as declared in the ""localization"" attribute of the ""metatype"" element to be specified relative to the meta type data directory OSGI-INF/metatype. This assumption is actually wrong and results from the incorrect interpretation of the Specification.

Correct would be that this is the full path of a basename to entries in the bundle. So if the localization would be ""sample"" the current interpretation is to look for ""OSGI-INF/metatype/sample*.properties"" files, where ""*"" is replaced by the locale name. Instead the localization ""sample"" should looked up as ""sample*.properties"" directly in the root of the bundle.

A fix for this problem, must still support the old style - yet wrong, of course - way for backwards compatibility with version 1.0.0 of the implementation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58381,,,Mon Jun 16 11:45:01 UTC 2008,,,,,,0|i0vxvz:,184463,,,,,,,,16/Jun/08 11:44;fmeschbe;Implemented this change in Rev. r668120,16/Jun/08 11:45;fmeschbe;.... and deployed new snapshot version 1.0.1-20080616.114434-1,,,,,,,,,,,,,,,,,,,,,,,,,
Exception when loading a class through DynamicImport-Package,FELIX-606,12398229,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,13/Jun/08 12:25,10/Oct/08 13:45,14/Mar/19 02:47,10/Oct/08 13:45,framework-1.0.4,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"ERROR: Unable to dynamically import package. (java.lang.ArrayStoreException)
java.lang.ArrayStoreException
        at java.lang.System.arraycopy(Native Method)
        at org.apache.felix.framework.searchpolicy.R4SearchPolicyCore.attemptDynamicImport(R4SearchPolicyCore.java:711)
        at org.apache.felix.framework.searchpolicy.R4SearchPolicyCore.searchDynamicImports(R4SearchPolicyCore.java:526)
        at org.apache.felix.framework.searchpolicy.R4SearchPolicyCore.findClassOrResource(R4SearchPolicyCore.java:480)
        at org.apache.felix.framework.searchpolicy.R4SearchPolicyCore.findClass(R4SearchPolicyCore.java:187)
        at org.apache.felix.framework.searchpolicy.R4SearchPolicy.findClass(R4SearchPolicy.java:45)
        at org.apache.felix.moduleloader.ModuleImpl.getClass(ModuleImpl.java:146)
        at org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1501)
        at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:358)",,,,,,,,,,,,,,,,,,,,14/Jun/08 13:38;rickhall;FELIX-606.patch;https://issues.apache.org/jira/secure/attachment/12384010/FELIX-606.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-06-14 13:38:35.003,,,no_permission,,,,,,,,,,,58382,,,Fri Oct 10 13:45:52 UTC 2008,,,,,,0|i0vyif:,184564,,,,,,,,"14/Jun/08 13:38;rickhall;Yes, I think I see the problem. Let me know if the attached patch fixes it.","24/Jun/08 20:32;rickhall;Ok, I committed the patch, since I am fairly certain that it fixes the issue. However, I am still waiting for a response from Guillaume.","10/Oct/08 10:44;gertvanthienen;Richard,

We recently came across this issue again in ServiceMix 4 and we fixed it by upgrading to Felix 1.2.1, so I guess your fix works.  Feel free to mark this issue resolved.

Regards,

Gert",10/Oct/08 13:45;rickhall;They say it is fixed.,,,,,,,,,,,,,,,,,,,,,,,
Symbolic name system.bundle is not recognized,FELIX-602,12397945,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,miteshm,miteshm,10/Jun/08 19:27,08/Nov/11 08:05,14/Mar/19 02:47,07/Jul/08 01:40,framework-1.0.4,,,,,,,,,,,,,,,,,,,,,0,,,,,,"A test jar has following Manifest entries


Manifest-Version: 1.0
Built-By: mitesh
Export-Package: bar
Bundle-Version: 1.0.0.SNAPSHOT
Require-Bundle: system.bundle
Bundle-Name: test1
Build-Jdk: 1.5.0_15
Bundle-ManifestVersion: 2
Bundle-SymbolicName: mitesh.osgi.test

When I try to start the bundle. I get following
-> start 11
org.osgi.framework.BundleException: Unresolved package in bundle 11: module; (bundle-symbolic-name=system.bundle)

The spec says following ( Release 4, Version 4.1, section 4.5)
<snip>
The system bundle has a bundle symbolic name that is unique for a specific
version. However, the name system.bundle must be recognized as
an alias to this implementation-defined name
</snip>
",,,,,,,,,,,,,,,,,,,,10/Jun/08 19:28;miteshm;test.jar;https://issues.apache.org/jira/secure/attachment/12383773/test.jar,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-06-11 06:05:54.678,,,no_permission,,,,,,,,,,,58386,,,Wed Jul 09 00:50:02 UTC 2008,,,,,,0|i1appz:,270633,,,,,,,,10/Jun/08 19:28;miteshm;A test bundle that can be used to reproduce the issue,"11/Jun/08 06:05;fmeschbe;It looks like the Felix class implementing the system bundle returns the predefined location string instead of the symbolic name. The fix is rather simple IMHO:

-------------------------------- patch ---------------------------------------------
Index: /usr/src/felix/trunk/framework/src/main/java/org/apache/felix/framework/Felix.java
===================================================================
--- /usr/src/felix/trunk/framework/src/main/java/org/apache/felix/framework/Felix.java	(revision 666535)
+++ /usr/src/felix/trunk/framework/src/main/java/org/apache/felix/framework/Felix.java	(working copy)
@@ -563,7 +563,7 @@
 
     public String getSymbolicName()
     {
-        return Constants.SYSTEM_BUNDLE_LOCATION;
+        return Constants.SYSTEM_BUNDLE_SYMBOLICNAME;
     }
 
     public boolean hasPermission(Object obj)
-------------------------------- patch ---------------------------------------------

I assume that this is the cause for the issue you are encountering.","24/Jun/08 21:31;miteshm;If the patch is waiting for a verification from submitter, prior to checkin, I do not have the environment to build Felix and test the patch. Please go ahead and checkin if you are able to start the attached jar.","26/Jun/08 19:05;rickhall;As a status report, the above patch is not sufficient, I will look into it some more.","26/Jun/08 20:27;rickhall;The issue is that the system bundle is not creating a capability to declare itself as a ""require-bundle"" provider. I have added this in my workspace and it appears to work, but there are still some issues I would like to iron out. I will commit as soon as I can.","07/Jul/08 01:40;rickhall;I believe I have resolved this issue. Mitesh, if possible, could you test the trunk to see if it resolves the issue for you? If so, could you please close this issue? Thanks for the feedback.",09/Jul/08 00:50;miteshm;Verified that issue is fixed with sources as of revision 675067,,,,,,,,,,,,,,,,,,,,
Reactivation of a component after a configuration update should be completely asynchronous,FELIX-601,12397679,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,06/Jun/08 13:49,10/Jun/08 08:40,14/Mar/19 02:47,10/Jun/08 08:40,scr-1.0.2,,,,,,,,,,scr-1.0.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,Currently the component is taken down immediately upon receiving new configuration. This may create issues when components are currently being activated. Therefore the cycling of the component after receiving configuration is to be scheduled for asynchronous execution.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58387,,,Tue Jun 10 08:40:46 UTC 2008,,,,,,0|i0vxwn:,184466,,,,,,,,06/Jun/08 13:52;fmeschbe;Implemented completely asynchronous cycling after configuration update in Rev. 663943,10/Jun/08 08:40;fmeschbe;This has been implemented and verified and can be closed.,,,,,,,,,,,,,,,,,,,,,,,,,
Insert Delay before refreshing packages after install/update,FELIX-600,12397678,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,06/Jun/08 13:30,19/Dec/14 14:39,14/Mar/19 02:47,12/Jun/08 22:10,webconsole-1.0.0,,,,,,,,,,webconsole-1.2.0,,,,Web Console,,,,,,,0,,,,,,"The WebConsole can be instructed to do a PackageAdmin.refreshPackages(null) after installing or updating a bundle. As there may be some things going on asynchronously behind the scenes after an installation/update, the call of the refreshPackages method should be delayed. Because the install/update actually works in a background thread, we can add such a delay without delaying client interactivity.

I insert a delay of 2 seconds for now. This is an empiric number, not a scientifically computed one, but I assume it should work out fine.",,,,,,,,,,,,,,,FELIX-4734,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-06 13:40:15.564,,,no_permission,,,,,,,,,,,58388,,,Thu Jun 12 22:10:27 UTC 2008,,,,,,0|i14107:,231625,,,,,,,,06/Jun/08 13:40;karlpauls;Could you not listen to the installed/updated events and then do the refresh?,"06/Jun/08 13:55;fmeschbe;I could, but this would not, I fear. The problem here is, that the framework signals successfull installation/update when it is done. At this time the Declarative Services manager has scheduled the components to be activated.

So when the framework has finished updating the bundles Declarative Services is still working. So whether I wait for an event or not does not matter.","06/Jun/08 14:05;karlpauls;o.k., I'm not claiming I understand what the issue is anyways - it just looked like it would be more sound this way then introducing a magic timeout value :-)","06/Jun/08 14:37;fmeschbe;No problem with that at all. In fact, I value your input very much, because it may in fact be a mistake on my part.

(also my alert system also goes off on words like ""delay"" and ""poll"" ;-) )",12/Jun/08 22:10;fmeschbe;This has been implemented and tested and confirmed successfull. Therefore closing this issue for now.,,,,,,,,,,,,,,,,,,,,,,
Service Registration Lock: Do not release not-owned lock and don't wait so long for the lock,FELIX-599,12397674,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,06/Jun/08 13:10,10/Jun/08 08:40,14/Mar/19 02:47,10/Jun/08 08:40,scr-1.0.2,,,,,,,,,,scr-1.0.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"While fixing a asynchronicity issue in the AbstractComponentManager class, I introduced a locking mechanism for the service registration field. This implementation has two issues:

(1) The unlockServiceRegistration lock simply releases the lock regardless of who is calling the method. This causes wrong threads to be able to release the lock of other threads. A secondary to this issue is, that the unlockServiceRegistration method is called by the getServiceReference() and unregisterComponentService methods, regardless of whether the lock could be acquired or not.

(2) When trying to acquire the lock, the lockServiceRegistration method tries to acquire the lock and if not possible waits for 10 * 10 seconds (at most) until giving up. This is probably too much. If the lock cannot be acquired within a short time frame, chances are, the lock will never be acquirable. Therefore, this time frame is cut down to 10 * 1 second before failing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58389,,,Tue Jun 10 08:40:14 UTC 2008,,,,,,0|i0w1l3:,185062,,,,,,,,"06/Jun/08 13:22;fmeschbe;Mutliple changes to service registration locking:
- only log once (at info level) when waiting for the lock release
- wait at most 10 * 1 seconds
- unlock only allowed for the lock owner
- prevent calling the unlock method if lock acquisition failed

Fixed in Rev. 663930.",10/Jun/08 08:40;fmeschbe;This has been implemented and can be closed.,,,,,,,,,,,,,,,,,,,,,,,,,
Meta type service incorrectly parses attribute element content when the content is specified in value child tags,FELIX-597,12397495,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cvs,cvs,cvs,04/Jun/08 18:19,04/Jun/08 18:28,14/Mar/19 02:47,04/Jun/08 18:20,metatype-1.0.0,,,,,,,,,,metatype-1.0.2,,,,Metatype Service,,,,,,,0,,,,,,"Metatype resources can specify attribute content as <Attribute content=""my,Content""> or as <Attribute><Value>my</Value><Value>Content</Value></Attribute>. In the first form content should be split on comma, in the latter it shouldn't. At the moment the latter form is also split on comma. See the compendium spec 105.6.1 for details.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58391,,,Wed Jun 04 18:20:42 UTC 2008,,,,,,0|i1apqf:,270635,,,,,,,,04/Jun/08 18:20;cvs;Fixed in r663149.,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix handling of immediate attribute of component factories,FELIX-593,12397326,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,03/Jun/08 06:18,02/May/13 02:29,14/Mar/19 02:47,03/Jun/08 08:25,maven-scr-plugin-1.0.4,scr-1.0.0,,,,,,,,,maven-scr-plugin-1.0.5,scr-1.0.2,,,Declarative Services (SCR),SCR Tooling,,,,,,0,,,,,,"According to the clarification regarding the immediate attribute of the <component> element of a Declarative services component, the validation of the component element has to be changed.

Currently the validation assumes this definition of the immediate attribute 112.4.3:

""immediate - Controls whether component configurations must be immediately activated after becoming satisfied or whether activation should be delayed. The default value is false if the service element is specified and true otherwise. If this attribute is specified, its value must be true unless the service element is also specified.""

which does not take into account factory components.

A better description would be:

""immediate - Controls whether component configurations must be immediately activated after becoming satisfied or whether activation should be delayed. The default value is false if the factory attribute or if the service element is specified and true otherwise. If this attribute is specified, its value must be false if the factory attribute is also specified or must be true unless the service element is also specified.""

This means:

* The ""scr"" ComponentMetadata class must assume a different default value for the immediate attribute for component factories and validate differently.
* The ""maven-scr-plugin"" Component class must assume a different default value for the immediate attribute for component factories and validate differently.


[1] http://www.mail-archive.com/osgi-dev@mail.osgi.org/msg00092.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58395,,,Tue Jun 03 08:25:47 UTC 2008,,,,,,0|i0vxwf:,184465,,,,,,,,"03/Jun/08 08:01;fmeschbe;Implemented this change in the scr (Declarative Service) module in Rev. 662680 and deployed new SNAPSHOT version 1.0.1-20080603.075917-4.

This change also includes unit tests to verify validation and default values for the immediate attribute with respect to the factory attribute, the service element and service factory attribute.","03/Jun/08 08:25;fmeschbe;Fixed the handling of the immediate attribute in the mave-scr-plugin in Rev. 662692:

  * The attribute is only set if explicitly declared
  * The attribute is verified if set against the setting of the factory attribute
","03/Jun/08 08:25;fmeschbe;Both places have been fixed, so I close this issue for now.",,,,,,,,,,,,,,,,,,,,,,,,
Console does not work properly in Internet Explorer,FELIX-592,12397277,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,mirko,mirko,02/Jun/08 11:03,29/Sep/08 10:14,14/Mar/19 02:47,29/Sep/08 10:14,webconsole-1.0.0,,,,,,,,,,webconsole-1.2.0,,,,Web Console,,,,,,,0,,,,,,"The links on the following web console pagesproduce javascript errors in IE7:

- Bundles: Clicking on a Bundle link
- Components: Clicking on a Component link
- Configuration:  Selecting a configuration from the drop down, clicking the 'Configure' Button
",Internet Explorer 6 & 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-13 12:06:31.389,,,no_permission,,,,,,,,,,,58396,,,Mon Sep 29 10:14:23 UTC 2008,,,,,,0|i1apr3:,270638,,,,,,,,13/Jun/08 12:06;fmeschbe;Can you please elaborate on the errors produced ? Thanks.,23/Jun/08 07:22;fmeschbe;Adapting summary and environment to include Internet Explorer 6,"23/Jun/08 07:25;fmeschbe;I tracked to problem down to Internet Explorer's ""feature"" to have the innerHTML property be read-only on <tr> elements. See [1] for the official documentation, esp. the note about tables.

The fix involves rewritting the DHTML stuff to probably do plain DOM operations instead of doing innerHTML settings. This should -- theoretically -- also have a positive impact on perceived client-side performance.

[1] http://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx","25/Jun/08 08:45;fmeschbe;In Rev. 671466 I refactored the client side HTML drawing to create DOM objects for in-place replacement. For initial document rendering these DOM objects are serialized. 

It might probably be worth it to put further work into the initial rendering so as to not require this serilization any more.","29/Sep/08 10:14;fmeschbe;This has been fixed and works, so I close this issue for now.",,,,,,,,,,,,,,,,,,,,,,
NPE in AbstractComponentManager,FELIX-591,12397271,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,cziegeler,cziegeler,02/Jun/08 09:42,02/Jun/08 13:04,14/Mar/19 02:47,02/Jun/08 10:41,scr-1.0.0,,,,,,,,,,scr-1.0.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"After fixing FELIX-579, a new NPE occurs in AbstractComponentManager, line 515 - it seems that the dependency managers are already null.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-02 10:41:49.169,,,no_permission,,,,,,,,,,,58397,,,Mon Jun 02 13:04:38 UTC 2008,,,,,,0|i0w00f:,184807,,,,,,,,"02/Jun/08 10:41;fmeschbe;Guarded disableInternal and disposeInternal against multiple disablement and disposal in Rev. 662387.

Please close if this fixes your issue. Thanks.",02/Jun/08 13:04;cziegeler;Works perfect - thanks!,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.felix.webconsole.internal.compendium.AjaxConfigManagerAction.configForm(): Configuration instance for a ManagedServiceFactory will cause Exception,FELIX-587,12397239,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,wimpi,wimpi,01/Jun/08 05:46,02/May/13 02:29,14/Mar/19 02:47,06/Aug/08 16:41,,,,,,,,,,,webconsole-1.2.0,,,,Web Console,,,,,,,0,,,,,,"A Configuration instance for  a ManagedServiceFactory will cause an Exception in org.apache.felix.webconsole.internal.compendium.AjaxConfigManagerAction.configForm(), because the implementation will try to obtain an ObjectClassDefinition for the Configuration pid, rather than for the corresponding factoryPid.

Fix:
The method should verify if a factoryPid is assigned to the Configuration instance and handle this case properly.",,,,,,,,,,,,,,,,,,FELIX-585,FELIX-584,01/Jun/08 05:52;wimpi;AjaxConfigManagerAction.java.diff;https://issues.apache.org/jira/secure/attachment/12383183/AjaxConfigManagerAction.java.diff,13/Jun/08 11:23;fmeschbe;FELIX-587-fmeschbe.patch;https://issues.apache.org/jira/secure/attachment/12383956/FELIX-587-fmeschbe.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-06-13 11:18:17.603,,,no_permission,,,,,,,,,,,58401,,,Wed Aug 06 16:41:13 UTC 2008,,,,,,0|i0vzkf:,184735,,,,,,,,01/Jun/08 05:48;wimpi;Depends on fixes for FELIX-584 and FELIX-585.,"01/Jun/08 05:52;wimpi;Obtained using:
svn diff AjaxConfigManagerAction.java > AjaxConfigManagerAction.java.diff
","13/Jun/08 11:18;fmeschbe;AFAIK the ConfigManagerBase.getObjectClassDefinition() takes care of looking at the object class definition for the factory PID if there is no object class definition for the PID.

On the other hand your patch only looks at the object class definition for the factory PID ignoring the PID altogether. While this is certainly not wrong, I wonder what the exact problem is you are getting.

And if we agree, that for a configuration with a factory PID only the that value should be considered for finding an object class definition I would rather prefer a different patch, which I will attach.","13/Jun/08 11:23;fmeschbe;Patch modifying ConfigManagerBase.getObjectClassDefinition method to consider the factory PID if not null otherwise to only consider the PID.

WDYT ?","13/Jun/08 22:15;wimpi;I have checked out a fresh working copy.

Creation is possible, but it does not seem to work properly, because it reports:
This configuration has no associated description

Here are the values returned from the Ajax call:
{""pid"":""net.wimpi.telnetd.service.TelnetListenerServiceFactory-1213394666652-2"",""isFactory"":false,""title""
:""net.wimpi.telnetd.service.TelnetListenerServiceFactory-1213394666652-2"",""description"":""Please enter
 configuration properties for this configuration in the field below. This configuration has no associated
 description"",""propertylist"":""properties"",""properties"":{}}

There is a corresponding metatype description.

The way you approached to fix the chain of issues I reported (sorry for the messed up patch), it occurs difficult to me to track them properly. Also, I have a question for you: 
Do you actually have a test case? If yes, which one is it?

Regards,
Dieter


","06/Aug/08 16:41;wimpi;The updated version of the webconsole takes a different approach, but resolves this issue.",,,,,,,,,,,,,,,,,,,,,
org.apache.felix.webconsole.internal.compendium.BaseConfigManager.getAttributeDefinitionMap(): implementation does not properly handle Configuration instances of a ManagedServiceFactory,FELIX-586,12397238,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,wimpi,wimpi,01/Jun/08 05:25,02/May/13 02:29,14/Mar/19 02:47,06/Aug/08 16:40,,,,,,,,,,,webconsole-1.2.0,,,,Web Console,,,,,,,0,,,,,,"The implementation of org.apache.felix.webconsole.internal.compendium.BaseConfigManager.getAttributeDefinitionMap(): does not properly handle Configuration instances of a ManagedServiceFactory.

In fact, if such a Configuration instance is passed in as a parameter, the method will throw an exception, because there is no ObjectClassDefinition available for the instance.

Example:
A Configuration instance for the ManagedServiceFactory ""net.wimpi.telnetd.service.TelnetListenerServiceFactory"" was created through the ConfigurationAdmin that assigned the pid ""net.wimpi.telnetd.service.TelnetListenerServiceFactory-1212198114040-7"". Given that the method will try to obtain an ObjectClassDefinition for ""net.wimpi.telnetd.service.TelnetListenerServiceFactory-1212198114040-7"", an exception will be thrown, because no such OCD is available.

Fix:
The method needs to check if the Configuration instance has a factoryPid assigned, and should use the factoryPid to obtain the  ObjectClassDefinition corresponding to the ManagedServiceFactory.

Also observed in revision 662145 SVN repository.


",,,,,,,,,,,,,,,,,,FELIX-584,FELIX-585,01/Jun/08 05:40;wimpi;ConfigManagerBase.java.diff;https://issues.apache.org/jira/secure/attachment/12383182/ConfigManagerBase.java.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-06-13 11:51:35.767,,,no_permission,,,,,,,,,,,58402,,,Wed Aug 06 16:40:28 UTC 2008,,,,,,0|i140qn:,231582,,,,,,,,"01/Jun/08 05:27;wimpi;Without a fix for FELIX-584 it may not be possible to create the Configuration instance; without a fix for FELIX-585, it will not be possible to select the Configuration instance, because the list will no longer appear in the console form.","01/Jun/08 05:40;wimpi;Obtained using:
svn diff ConfigManagerBase.java > ConfigManagerBase.java.diff

","13/Jun/08 11:51;fmeschbe;With my patch [1] attached to FELIX-587, this issue should also be solved as for a configuration with factory PID only the factory PID would be considered.

WDYT ?

[1] https://issues.apache.org/jira/secure/attachment/12383956/FELIX-587-fmeschbe.patch","06/Aug/08 16:40;wimpi;The updated version of the webconsole takes a different approach, but resolves this issue.",,,,,,,,,,,,,,,,,,,,,,,
org.apache.felix.webconsole.internal.compendium.ConfigManager.listConfigurations(): Configuration instances for ManagedServiceFactoy instances cause IllegalArgumentException,FELIX-585,12397237,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,wimpi,wimpi,01/Jun/08 05:10,02/May/13 02:29,14/Mar/19 02:47,06/Aug/08 16:39,,,,,,,,,,,webconsole-1.2.0,,,,Web Console,,,,,,,0,,,,,,"Once a Configuration can be created for a ManagedServiceFactory instance, this instance will cause a IllegalArgumentException in 
org.apache.felix.webconsole.internal.compendium.ConfigManager.listConfigurations(): 
java.lang.IllegalArgumentException: Object Class Definition ID not found

The reason for this is the fact that the code does not properly look for the ObjectClassDefinition of the factory (which would apply in the case of ManagedServiceFactory instances).

Example:
When creating a Configuration instance for the factory ""net.wimpi.telnetd.service.TelnetListenerServiceFactory"", the ConfigurationAdmin will assign a unique identifier (pid) for the Configuration instance e.g. ""net.wimpi.telnetd.service.TelnetListenerServiceFactory-1212198114040-7"". This Configuration has the pid ""net.wimpi.telnetd.service.TelnetListenerServiceFactory-1212198114040-7"", but there will never be any ObjectClassDefinition for this pid available from the MetaTypeService.

Given that the code does not check for an associated factoryPid FIRST, the exception will happen and nothing will appear in the list in the console form.

",,,,,,,,,,,,,,,,,,FELIX-584,,13/Jun/08 21:30;wimpi;ConfigManager.java.diff;https://issues.apache.org/jira/secure/attachment/12383993/ConfigManager.java.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-06-13 11:56:09.831,,,no_permission,,,,,,,,,,,58403,,,Wed Aug 06 16:39:53 UTC 2008,,,,,,0|i0w0db:,184865,,,,,,,,01/Jun/08 05:13;wimpi;In revision 662145 it may not be possible to create a Configuration instance for a ManagedServiceFactory without fixing FELIX-584.,"01/Jun/08 06:39;wimpi;This patch includes the fix for FELIX-583.

Obtained using:
svn diff ConfigManager.java > ConfigManager.java.diff
","13/Jun/08 11:56;fmeschbe;Isn't this (almost) the same as FELIX-586 ? At least the patch seems to be the same...

With my patch [1] attached to FELIX-587, this issue should also be solved as for a configuration with factory PID only the factory PID would be considered.

WDYT ?

[1] https://issues.apache.org/jira/secure/attachment/12383956/FELIX-587-fmeschbe.patch","13/Jun/08 21:05;wimpi;Looks to me as if I messed up the patches.

I will take a look at your updates and check if it fixes the problem.","13/Jun/08 21:30;wimpi;I think it should have been this one.
","06/Aug/08 16:39;wimpi;The updated version of the webconsole takes a different approach, which resolves this issue.",,,,,,,,,,,,,,,,,,,,,
"org.apache.felix.webconsole.internal.compendium.AjaxConfigManagerAction.applyConfiguration(): ""create"" action is not handled properly",FELIX-584,12397236,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,wimpi,wimpi,01/Jun/08 05:00,02/May/13 02:29,14/Mar/19 02:47,06/Aug/08 16:37,,,,,,,,,,,webconsole-1.2.0,,,,Web Console,,,,,,,0,,,,,,"The current revision of the code (662145) creates the configuration, and returns true.

else if ( request.getParameter( ""create"" ) != null )
{
    // pid is a factory PID and we have to create a new configuration
    // we should actually also display that one !
    Configuration config = ca.createFactoryConfiguration( pid, null );

     // request.setAttribute(ATTR_REDIRECT_PARAMETERS, ""pid="" +
    // config.getPid());
    return true;
 }

The problem with this approach is the fact that in many cases the Configuration instance will not be persisted or available until the update() method is used to set new properties.

Based on the fact that the ""create"" action may be called already with a complete set of properties edited in the form, I would suggest to only  differentiate between factory ""create"" and ""save"" in the way the Configuration instance is created. i.e.:

 if ( request.getParameter( ""create"" ) != null )
 {
     // pid is a factory PID and we have to create a new configuration
     config = ca.createFactoryConfiguration( pid, null );
} else {
     // pid is managed service, get configuration
     config = ca.getConfiguration( pid, null );
}


",,,,,,,,,,,,,,,,,,,,01/Jun/08 05:59;wimpi;AjaxConfigManagerAction.java.diff;https://issues.apache.org/jira/secure/attachment/12383184/AjaxConfigManagerAction.java.diff,13/Jun/08 12:25;fmeschbe;FELIX-584-1.png;https://issues.apache.org/jira/secure/attachment/12383958/FELIX-584-1.png,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-06-13 11:47:48.688,,,no_permission,,,,,,,,,,,58404,,,Thu Aug 07 07:21:36 UTC 2008,,,,,,0|i0vzkn:,184736,,,,,,,,"01/Jun/08 05:59;wimpi;Obtained using:
svn diff AjaxConfigManagerAction.java > AjaxConfigManagerAction.java.diff
","13/Jun/08 11:47;fmeschbe;> The problem with this approach is the fact that in many cases the Configuration instance
> will not be persisted or available until the update() method is used to set new properties

This is not quite correct: A new configuration object is immediately persisted but _not_ delivered. Only when the update method is first called on the Configuration will the configuration be delivered.

Hence the operation of first creating and in a second request updating the configuration is not completely wrong.

Anyway, the current implementation of the GUI is problematic as it tries (and fails) to mix a selection mix for configuration objects and factories. A better approach, which you are also using, is to have two selection lists: One for concrete configurations (existing and non-existing for ManagedService instances) and one for factory configurations.

Now, the implementation would -- upon creation of a factory configuration -- show that factory configuration with default values filled in. The user may then update (aka save) the configuration and it will be delivered.","13/Jun/08 12:25;fmeschbe;Committed a first step towards the enhancement of the Configuration Admin GUI. The page now displays two selection list (see attachement), one for regular configurations and one for factory configurations.

When selecting a regular configuration (also a factory configuration instance is a regular configuration) it is displayed for editing.

When selecting a factory configuration, a new configuration object is created and displayed for editing.

Implemented in Rev. 667498 and deployed SNAPSHOT build 1.0.1-20080613.123406-2","13/Jun/08 20:59;wimpi;I have tried to fix the problem this way, because created instances did not appear in the Configuration listing for ""updating"". I am using Equinox though, so maybe it is also a bug in the Equinox ConfigurationAdmin implementation.

I will take a look at your updates and report back as soon as possible.
","06/Aug/08 16:37;wimpi;The new version resolves the issue. 

However, we realized that the Equinox implementation of the configuration admin behaves differently from the Apache Felix one: the methods that create a new instance of a Managed Service Factory do not imply that the Configuration instances ""exist"" (i.e. they cannot be listed or obtained otherwise if they are not updated using the instance returned by the methods themselves).

Even though it seems unimportant, as a matter of fact it can make a big difference for management agents. Thus, it seems as if there is a need to  have a clear statement as to whether the standard specifications (Service Compendium, 104.7.2) implicitly assume that using one of the two methods ""to create a new instance of a Managed Service Factory"" automatically implies that the created Configuration instance ""exists"" in the meaning of ""existence"" as used in 104.7.3.

","07/Aug/08 07:21;fmeschbe;Yes, you are right there was a difference between the Equinox and Felix implementations: Apache Felix configadmin used to persist _all_ configuration objects immediately upon creation regardless of whether it was obtained by getConfiguration or by createFactoryConfiguration. Equinox on the other hand only persist configuration objects obtained from getConfiguration immediately.

After clarifying this difference on the OSGi developers list [1], I have created an issue here as FELIX-612. This changes the Apache Felix configadmin behaviour to only persist the configuration created by createFactoryConfiguration when update with properties is called. The fix for FELIX-612 will be contained in the forth-coming configadmin 1.0.4 release.

Hope this helps.

[1] http://www.mail-archive.com/osgi-dev@mail.osgi.org/msg00189.html",,,,,,,,,,,,,,,,,,,,,
org.apache.felix.webconsole.internal.compendium.ConfigManager.listConfigurations(): ManagedServiceFactory instances are listed twice: with pid and factoryPid,FELIX-583,12397235,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,wimpi,wimpi,01/Jun/08 04:43,07/Aug/08 07:26,14/Mar/19 02:47,07/Aug/08 07:26,,,,,,,,,,,webconsole-1.2.0,,,,Web Console,,,,,,,0,,,,,,"ManagedServiceFactory instances are listed twice, with pid and factoryPid in org.apache.felix.webconsole.internal.compendium.ConfigManager.listConfigurations().

The factoryPid will be added by the loop over the ServiceReference instances obtained from the framework for the type (class) ManagedServiceFactory:
// find all ManagedServiceFactories to get the factoryPIDs
ServiceReference[] refs = this.getBundleContext().getServiceReferences(ManagedServiceFactory.class.getName(), null );
 for ( int i = 0; refs != null && i < refs.length; i++ )
 
Given that it is not removed from  the map metaDataPids, it will also be added as ""pid"" by the loop: 
if ( !metaDataPids.isEmpty() )
{
    for ( Iterator mdpi = metaDataPids.entrySet().iterator(); mdpi.hasNext(); )
....

SVN revision 662145.

A fix for this problem is to consistently remove the identifier from metaDataPids; this is done in some cases using:
// remove from the list of known pids
metaDataPids.remove( pid );
",,,,,,,,,,,,,,,,,,,,02/Jun/08 11:19;ppedruzzi;webconsole.patch;https://issues.apache.org/jira/secure/attachment/12383219/webconsole.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-06-02 11:19:02.266,,,no_permission,,,,,,,,,,,58405,,,Thu Aug 07 07:26:40 UTC 2008,,,,,,0|i0w0kn:,184898,,,,,,,,01/Jun/08 06:42;wimpi;The patch attached to FELIX-585 includes a fix for this bug.,"02/Jun/08 11:19;ppedruzzi;Patch attached with some minor fixes in the Configuration render.
It fixes this issue.","13/Jun/08 12:00;fmeschbe;Pedro, thanks for the patch.

After looking into this some deeper, I must say my code is completely crazy ;-)

  * It looks for ManagedServiceFactory services
  * It looks for existing configuration
  * It looks for Metatype Descriptors

But it does _not_ look for ManagedService services ....

So, I must say, this is wrong and I am currently taking a completely different approach. As described for FELIX-584 [1], I will provide two lists: One with the ManagedServiceFactory services looking for configuration and one with ManagedService services (and existing configuration) looking for configuration.

[1] https://issues.apache.org/jira/browse/FELIX-584?focusedCommentId=12604810#action_12604810","13/Jun/08 12:12;ppedruzzi;I noticed that we were missing the ManagedService services. I actually wrote some code to include those, but did not share because I knew that was not the right approach.

Your proposal sounds very good to me. I will wait for this!","13/Jun/08 12:36;fmeschbe;Implemented new configuration gui in Rev. 667498 and deployed SNAPSHOT build 1.0.1-20080613.123406-2. See FELIX-584 for details.

",07/Aug/08 07:26;fmeschbe;This issue can be considered solved by the implementation of a different approach in displaying the configuration factories and configurations. Therefore it can be closed.,,,,,,,,,,,,,,,,,,,,,
NPE in AbstractComponentManager,FELIX-579,12397179,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,cziegeler,cziegeler,30/May/08 15:05,02/Jun/08 09:17,14/Mar/19 02:47,30/May/08 19:56,scr-1.0.0,,,,,,,,,,scr-1.0.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Sometimes an NPE occurs in the AbstractCompnentManager in line 327 and line 288. It seems that at this point the component manager is already disposed, and the activator is set to null. However the activator is used to log. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-30 19:56:57.416,,,no_permission,,,,,,,,,,,58409,,,Mon Jun 02 09:17:32 UTC 2008,,,,,,0|i140yn:,231618,,,,,,,,"30/May/08 19:56;fmeschbe;Implemented guarding of the BundleComponentActivator for logging in Rev. 661839.

Please close this issue, if it solves your problem. Thanks.",02/Jun/08 09:17;cziegeler;Works- thanks!,,,,,,,,,,,,,,,,,,,,,,,,,
ComponentFactoryImpl.newInstance() must create the component synchronously,FELIX-578,12397171,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,30/May/08 13:25,02/Jun/08 09:16,14/Mar/19 02:47,30/May/08 19:31,,,,,,,,,,,scr-1.0.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The ComponentFactoryImpl.newInstance() method internally calls the AbstractComponentManager.enable() method to enable and activate the newly created component instance. The enable() method in turn schedules the enableInternal() method to run asynchronously.

In the context of the ComponentFactoryImpl.newInstance() method this asynchronous enablement is not correct, as the caller expects the ComponentInstance returned from the newInstance to be active.

Hence the ComponentFactoryImpl.newInstance() method must be able to enable the created component synchronously.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-02 09:16:54.402,,,no_permission,,,,,,,,,,,58410,,,Mon Jun 02 09:16:54 UTC 2008,,,,,,0|i0vxw7:,184464,,,,,,,,"30/May/08 19:31;fmeschbe;Fixed in Rev. 661830: ComponentFactoryImpl.newInstance() now ensures the component is enabled synchronously, that is the ComponentInstance returned will provide the actual component instance in its getInstance() method.

Please close this bug, if it fixes your issue. Thanks.",02/Jun/08 09:16;cziegeler;Works - thanks!,,,,,,,,,,,,,,,,,,,,,,,,,
Remote OBR deployment does not support the obrRepository property,FELIX-571,12396357,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,clement.escoffier,clement.escoffier,19/May/08 23:25,20/May/08 11:51,14/Mar/19 02:47,20/May/08 11:51,maven-bundle-plugin-1.4.1,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The obrRepository property seems to not be supported when deploying on a remote repository.
When specified, the local repository is correctly created in specified file but when deploying, the used file is always repository.xml.

I wonder if two different properties could  be useful to differentiate the local file and the remote file.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-20 03:03:26.034,,,no_permission,,,,,,,,,,,58417,,,Tue May 20 11:51:15 UTC 2008,,,,,,0|i1apt3:,270647,,,,,,,,"20/May/08 03:03;mcculls;FYI, there already is a property for the remote file, it's called remoteOBR - from the online docs:

    *  deploy - adds the current bundle project to a remote OBR
      configuration options:
          o remoteOBR name of remote OBR, defaults to NONE (which means no remote OBR deployment)
          o obrRepository used when the remoteOBR name is blank, defaults to repository.xml
          o altDeploymentRepository alternative remote repository, id::layout::url
          o ignoreLock ignore remote locking when updating the OBR

So if remoteOBR is set to either the empty string or ""true"" (case-ignored) then it will use the obrRepository value, otherwise it will take the remoteOBR value as the remote filename. This lets you use different names for the local and remote OBR files when installing and deploying in the same build.",20/May/08 11:51;clement.escoffier;This property works fine. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,
Add support to access the Felix ShellService,FELIX-563,12393623,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,10/Apr/08 08:03,07/Aug/08 19:24,14/Mar/19 02:47,07/Aug/08 19:24,,,,,,,,,,,webconsole-1.2.0,,,,Web Console,,,,,,,1,,,,,,It would be an interesting enhancement to the sling console to add functionality to enter Felix ShellService commands and get back the result of executing these commands in the remote Sling instance.,,,,,,,,,,,,,,,,,,,,19/Jul/08 09:28;frkj;shell.patch;https://issues.apache.org/jira/secure/attachment/12386460/shell.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-07-19 09:28:45.216,,,no_permission,,,,,,,,,,,58425,,,Thu Aug 07 19:24:26 UTC 2008,,,,,,0|i140zb:,231621,,,,,,,,"19/Jul/08 09:28;frkj;I've attached a patch to add this functionality. Tested using Firefox 3, IE 6/7 and Safari on Windows.",07/Aug/08 19:22;fmeschbe;Thanks alot for supplying this patch. I applied it in Rev. 683680 and deployed snapshot version 1.0.1-20080807.192143-1.,"07/Aug/08 19:24;fmeschbe;From my perspective applying this patch resolves this issue.

Assuming that the Felix Shell bundle is installed a new tab - Shell - is displayed at the top. Going to the Shell page shows an entry field into which Shell commands may be typed and which displays the results just like a regular shell.","07/Aug/08 19:24;fmeschbe;Ok, I think, I can close this now.",,,,,,,,,,,,,,,,,,,,,,,
"bundle:install and bundle:deploy goals check artifact type is ""bundle"" instead of using the supportedProjectTypes list",FELIX-560,12396116,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,mcculls,mcculls,15/May/08 16:12,27/Aug/08 10:50,14/Mar/19 02:47,15/May/08 16:16,maven-bundle-plugin-1.4.0,maven-bundle-plugin-1.4.1,,,,,,,,,maven-bundle-plugin-1.4.2,,,,Maven Bundle Plugin,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-16 12:24:52.628,,,no_permission,,,,,,,,,,,58428,,,Wed Aug 27 10:50:15 UTC 2008,,,,,,0|i1ap8v:,270556,,,,,,,,"15/May/08 16:16;mcculls;Fixed in trunk, will deploy 1.4.2-SNAPSHOT later today","16/May/08 12:24;mraible;I don't see a 1.4.2-SNAPSHOT at the following URL.

http://people.apache.org/maven-snapshot-repository/org/apache/felix/maven-bundle-plugin/

Have you had a chance to deploy this yet?

Thanks,

Matt","16/May/08 17:26;mcculls;unfortunately not yet, been too busy - the change is in trunk if you want to compile from source:

   http://svn.apache.org/repos/asf/felix/trunk/bundleplugin
",03/Aug/08 18:33;mcculls;This is available for testing in the latest 1.4.2-SNAPSHOT,27/Aug/08 10:50;mcculls;Fixed in latest release of the maven-bundle-plugin (1.4.3),,,,,,,,,,,,,,,,,,,,,,
Factories still living when a primitive component does not have its manipulation metadata,FELIX-557,12396045,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,14/May/08 19:08,22/Oct/08 14:00,14/Mar/19 02:47,14/May/08 20:07,iPOJO-0.8.0,,,,,,,,,,iPOJO-1.0.0,,,,iPOJO,,,,,,,0,,,,,,"When a primitive component does not have correct manipulation metadata (not component type metadata), the factory returns systematically an error but the factory stills living and stills accessible as a service.
",,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58431,,,Wed Oct 22 14:00:38 UTC 2008,,,,,,0|i14167:,231652,,,,,,,,"14/May/08 20:07;clement.escoffier;Fixed in the revision 656371.
The fix just creates the ManipulationMetadata object during the initialization of the factory instead of when they are used for the first time. So, iPOJO can catch if an exception occurs and stops the factory before the creation of the first instance.",22/Oct/08 14:00;clement.escoffier;Issue fixed included in the iPOJO 1.0.0 release.,,,,,,,,,,,,,,,,,,,,,,,,,
File Install tries to installa a bundle that is installed already,FELIX-551,12395715,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,musachy,musachy,09/May/08 13:43,03/May/09 07:32,14/Mar/19 02:47,03/May/09 07:32,,,,,,,,,,,,,,,File Install,,,,,,,0,,,,,,"traverse(...) adds the found files to a map, keyed by the absolute path. The problem is that in doInstalled:

           String location = bundle.getLocation();
            File file = (File) installed.get(location);
            if (file != null) 

Location is a URL string (file:/....) instead of an absolute path, so the file is never found in the map, and fileinstall tries to install it again. Attached is a patch, which I am not sure if would break something else.",,,,,,,,,,,,,,,,,,,,09/May/08 13:44;musachy;patch.diff;https://issues.apache.org/jira/secure/attachment/12381760/patch.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-08-25 13:12:30.547,,,no_permission,,,,,,,,,,,58437,,,Sun May 03 07:32:44 UTC 2009,,,,,,0|i1apan:,270564,,,,,,,,09/May/08 13:45;musachy;I forgot to mention that this causes an exception on every watch iteration,"25/Aug/08 13:12;pkriens;I looked at the code and can't see the problem ...

Fileinstall makes sures that the location == the file path (without file:). It compares this to the watch directory path to see if it is managed. So the code looks perfect, it just fails for bundles that are not managed, but it should not throw an exception? Could the exceptions be attached?",03/May/09 07:32;clement.escoffier;Was fixed in the 0.9.2 released version.,,,,,,,,,,,,,,,,,,,,,,,,
SCR registers service component twice after stopping/starting a bundle,FELIX-550,12395629,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,pneyens,pneyens,08/May/08 15:16,10/Jun/08 08:47,14/Mar/19 02:47,03/Jun/08 09:59,scr-1.0.0,,,,,,,,,,scr-1.0.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"When stopping and starting a bundle (from the shell) that has a component which is also registered as a service, this service is registered twice from time to time.

What I am seeing, is that when starting the bundle (after stopping it first), the enable method (AbstractComponentManager) is called starting an enableInternal' (including an activateInternal) on the component actor thread.
Approximately at the same time, an update call is made from the configuration manager (on some thread from the CM, through method 'update' in ImmediateComponentManager's anonymous ManagedService inner class) resulting eventually in a call to 'reactivate' which first deactivates (deactivateInternal) on the current thread (CM thread). That's where things clash, I guess.

I cannot reproduce this behaviour when logging level is set to debug.",JDK 1.6.0_03 / WinXP SP2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-02 11:04:02.939,,,no_permission,,,,,,,,,,,58438,,,Tue Jun 10 08:47:38 UTC 2008,,,,,,0|i0w1kn:,185060,,,,,,,,"02/Jun/08 11:04;fmeschbe;What can happen is the following:

activateInternal will set the state to active _before_ the component is registered as a service. If now between setting the state to active and registering the service, the configuration comes in and reactivation is triggered, the component may be deactivated immediatly while still registering the service.

Now, the component is deactivated, the service registered and the component is activated again and the service registered again.

The problem is to not cycle the component while the component is being registered as a service.

My first step is to investigate whether it is feasible to set the component to active only _after_ the component's state is marked active. (yes this would probably be the right thing, I have to find out, whether it is not done like that !)","02/Jun/08 12:00;fmeschbe;In Rev. 662404 I committed a tentative fix for this issue. This fix introduces a lock guarding access to the component's service registration field. This lock has the following background and working:

The activateInternal method sets the component state to satisfied (aka ready) before the component is registered as a service and the internal service registration field is set. 

If now in the time between setting the state to satisified and the service registration field being set, the component is deactivated -- possibly through reconfiguration -- the service may not be unregistered because the field is not set, but re-activation of the component may register the service again thus resulting in two services being registered, the active and the deactivated. Which of both is being used is framework implementation dependent but chances are, the wrong is used resulting in system failure.

To fix this, all access to the service registration field is guarded by a lock. Only if a thread is able to set the lock flag, can the service registration field be accessed.

To circumvent the above mentioned situation, the activateInternal method locks the field _before_ setting the component satisfied. This prevents the deactivateInternal method from deactivating the component until the service has been registered and the lock been freed. Only then can the deactivateInternal method start its deactivation task by unregistering the service.

I deployed a new SNAPSHOT version 1.0.1-20080602.115831-3 including this tentative fix. Please verify and provide feedback. Thanks.",03/Jun/08 09:59;fmeschbe;I am pretty confident this fix works. So I resolve this issue for now.,"10/Jun/08 08:47;fmeschbe;No feedback received on this one. Assuming it works, therefore closing.",,,,,,,,,,,,,,,,,,,,,,,
"Import-Package should not include ""snapshot"" from snapshot dependencies ",FELIX-549,12395581,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,musachy,musachy,08/May/08 01:05,12/Mar/09 08:05,14/Mar/19 02:47,29/Jan/09 17:46,maven-bundle-plugin-1.4.0,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"I have a jar named:

struts2-core-2.1.3-SNAPSHOT

and a bundle that depends on it (imported with ""compile"" scope). The pom section in the bundle is:

                      <plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<version>1.4.0</version>
				<configuration>
					<instructions>
						<manifestLocation>META-INF</manifestLocation>
						<Export-Package>
							org.apache.struts2.osgi.admin*
						</Export-Package>
						<Import-Package>*,com.opensymphony.xwork2</Import-Package>
						<Bundle-Activator>
							org.apache.struts2.osgi.admin.MyBundleActivator
						</Bundle-Activator>
					</instructions>
				</configuration>
			</plugin>

The generated Import-Package is:

Import-Package: org.apache.struts2.dispatcher; version=""2.1.3.SNAPSHOT""

Which prevents the package from being resolved. (I tried exporting it as ""2.1"" and ""2.1.3.SNAPSHOT""). The default Maven2OsgiConverter just converts ""-"" to ""."" and leaves ""SNAPSHOT"" in place.",,,,,,,,,,,,,,,,,,,,07/Sep/08 19:05;sahoo;Felix-549.zip;https://issues.apache.org/jira/secure/attachment/12389641/Felix-549.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-07-02 08:58:00.686,,,no_permission,,,,,,,,,,,58439,,,Thu Mar 12 08:05:00 UTC 2009,,,,,,0|i1apav:,270565,,,,,,,,02/Jul/08 08:58;mcculls;Quick update - I haven't had time to progress these issues because I've been working at a customer site - but I hope to devote some cycles when I'm back in Malaysia next week. If any of these need fixing urgently feel free to keep bugging me until they're fixed ;),"02/Aug/08 14:26;mcculls;The import version actually comes straight from Bnd when it generates the manifest, not the Maven2OsgiConverter - the next update of Bnd is planned to be integrated with bundleplugin 1.4.3, so setting the fix target to that version.","06/Aug/08 12:28;pkriens;I need more information ... Where is the 2.1.3.SNAPSHOT picked up from? The manifest or from a packaginfo?

The problem is that as far as I can see the exporter explicitly says this version string. How do I know this is not intended?

Peter Kriens","05/Sep/08 15:33;sahoo;Has a decision been made about this bug? I am seeing a slightly different issue while using maven-bundle-plugin's *manifest* goal. My project A1depends on an OSGi artifact called A2. A2 exports a package p with version 0.3.19-SNAPSHOT. In the Import-Package of A1, I see the version as 0.3 only! I am using v1.4.3 of the plugin.","06/Sep/08 07:53;mcculls;Hi Sahoo,

Could be similar - if you have a concrete testcase please attach it to the issue, so Peter has something to work from.
FYI, the update of BND was postponed to the 1.6.0 release of the bundleplugin so 1.4.3 is still using the old version.

Cheers, Stuart","07/Sep/08 19:04;sahoo;Stuart,

It was my mistake. In my test case (refer to my previous comment), A2 exports p with version 0.3.18 instead of 0.3.19-SNAPSHOT. In A1, I see the Import-Package as 0.3 only. BND document as shown below suggests that it should be 0.3.18:
""During processing, bnd will attempt to find the exported version of imported packages. If no version or version range is specified on the import instruction, the exported version will then be used though the micro part and the qualifier are dropped. That is, when the exporter is 1.2.3.build123, then the import version will be 1.2.3.""

I am attaching a simple test case (Felix-549.zip). In the test case. The relevant portion of generated manifest for both the artifacts are given below:

A2/target/classes/META-INF/MANIFEST.MF 
----------------------------------------------------------
Import-Package: p;version=""0.3.18""
Export-Package: p;version=""0.3.18""

A1/target/classes/META-INF/MANIFEST.MF 
-----------------------------------------------------------
Import-Package: org.osgi.framework;version=""1.3"",p;version=""0.3""

So, I still think it is a bug. 

Thanks,
Sahoo",07/Sep/08 19:05;sahoo;Test case that shows that Import-Package uses upto minor component of the version string.,"29/Jan/09 17:46;mcculls;I ran the testcase against trunk and both manifests now see the same import version (""0.3"") which is major.minor, as per the latest Bnd documentation at http://aqute.biz/Code/Bnd - note that Peter has also added a new setting called -versionpolicy (see http://aqute.biz/Code/Bnd#versionpolicy) to give more control over how import versions are derived from the exported version.

I'll deploy a new 1.5.0-SNAPSHOT tomorrow morning (8hrs from now).",12/Mar/09 08:05;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,
Import-Package version qualifiers vary depending on dependency scope.,FELIX-548,12395537,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,tomdewire,tomdewire,07/May/08 17:10,05/Feb/09 07:36,14/Mar/19 02:47,04/Aug/08 11:50,maven-bundle-plugin-1.4.0,,,,,,,,,,maven-bundle-plugin-1.4.2,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The produced Import-Package directive appears to vary depending on the declared scope of a dependency.

Assuming that a dependency is a valid OSGi bundle:

- ""compile"" scope will include a version qualifier (eg. Import-Package: org.springframework.core;version=""2.5.4"").
- ""provided"" scope will not include a version qualifier (eg. Import-Package: org.springframework.core).

In this case, I believe the 'compile' behavior is correct.

I have not tested all possible scopes. A similar inconsistency might exist for runtime, test, etc.



",N/A,,,,,,,,,,,,,,,,,,,07/May/08 17:11;tomdewire;bugtest3.tar.gz;https://issues.apache.org/jira/secure/attachment/12381609/bugtest3.tar.gz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-08 00:29:52.635,,,no_permission,,,,,,,,,,,58440,,,Thu Feb 05 07:36:55 UTC 2009,,,,,,0|i1apb3:,270566,,,,,,,,07/May/08 17:11;tomdewire;A small demo project. Alter the dependency scope to see the difference in the output.,"08/May/08 00:29;mcculls;That is correct - the bundleplugin only adds the compile and runtime dependencies to the classpath passed to BND.

This has always been the case, since before I joined the project - the bundle mojo has @requiresDependencyResolution set to runtime, which means Maven will only resolve the compile and runtime dependencies on the project classpath, not provided ones (AFAIK Maven doesn't allow you to set it to provided, and if you omit this tag then you inherit whatever classpath was resolved by previous plugins, which could lead to unreproducible builds).

A beneficial side-effect of this setting is that it avoids people accidentally including content from other bundles (ie. scope provision) when setting Export-Package:*, etc. Removing this setting to add provision dependencies to the BND classpath would definitely break large numbers of existing projects that rely on this behavior.

The unfortunate side-effect is that you lose automatic versioning of imports which means that you need to add versions and ranges explicitly - but again, a lot of projects seem to prefer this rather than nailing down imports to a specific version by default.","08/May/08 13:49;tomdewire;That sounds reasonable enough to me.

Rather than treating this like a bug in the plugin, might we consider this an area where the documentation could be improved? I grant that it is a relatively nit-picky point, but one that seems worth calling out.","08/May/08 14:26;mcculls;Certainly, I think updating the documentation to make this difference clear is a good idea.",02/Jul/08 08:58;mcculls;Quick update - I haven't had time to progress these issues because I've been working at a customer site - but I hope to devote some cycles when I'm back in Malaysia next week. If any of these need fixing urgently feel free to keep bugging me until they're fixed ;),02/Aug/08 17:03;mcculls;Will update online docs to make this clearer.,04/Aug/08 11:50;mcculls;Updated the wiki: http://cwiki.apache.org/confluence/display/FELIX/Apache+Felix+Maven+Bundle+Plugin+(BND) - changes will appear on the website after an hour or so.,27/Aug/08 10:50;mcculls;Fixed in latest release of the maven-bundle-plugin (1.4.3),"04/Feb/09 12:23;sahoo;Stuart,

Per your last comment, this bug has been fixed. I am curious to know what was the fix. As per most of the comments, the behavior was intended.

Thanks,
Sahoo","05/Feb/09 07:36;mcculls;The ""fix"" for 1.4.3 was to document the behaviour in the online and packaged docs [as per comment https://issues.apache.org/jira/browse/FELIX-548?focusedCommentId=12595096#action_12595096]

In the 1.5.0-SNAPSHOT we now pass the complete set of dependencies to the Bnd Tool, and the latest Bnd Tool also handles versioning more consistently (it has a well defined policy setting for managing ranges) so the final versions in the manifest are now consistent.",,,,,,,,,,,,,,,,,
"OBR portion of the plugin balks on singular version range of [1.0.0,1.0.0].",FELIX-547,12395432,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,tomdewire,tomdewire,06/May/08 15:45,27/Aug/08 10:50,14/Mar/19 02:47,08/Jul/08 14:14,maven-bundle-plugin-1.4.0,,,,,,,,,,maven-bundle-plugin-1.4.2,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The OBR portion of the maven-bundle-plugin does not want to allow the syntax:

<Import-Package>com.ea.bugtest1;version=""[1.0.0,1.0.0]""</Import-Package>

It complains with the following message:

java.lang.IllegalArgumentException: Low Range is higher than High Range: 1.0.0-1.0.0

...although this appears to be a legal construct that will in fact load up in Equinox. (Would it do the same in Felix?)",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-06 16:00:39.529,,,no_permission,,,,,,,,,,,58441,,,Wed Aug 27 10:50:15 UTC 2008,,,,,,0|i1411j:,231631,,,,,,,,"06/May/08 16:00;mcculls;This just missed the 1.4.1 release - the offending code is in our local copy of the bindex code:

   org.osgi.impl.bundle.obr.resource.VersionRange

this issue still exists in the latest bindex code, so I'll code up a local fix and get bindex fixed too.","06/May/08 16:05;mcculls;FYI, the resulting bundle would load up in Felix, it's just the OBR resource code that has the faulty test.",02/Jul/08 08:58;mcculls;Quick update - I haven't had time to progress these issues because I've been working at a customer site - but I hope to devote some cycles when I'm back in Malaysia next week. If any of these need fixing urgently feel free to keep bugging me until they're fixed ;),"08/Jul/08 14:14;mcculls;This is now fixed in trunk, but not yet deployed in a snapshot.",03/Aug/08 18:31;mcculls;This is available for testing in the latest 1.4.2-SNAPSHOT,27/Aug/08 10:50;mcculls;Fixed in latest release of the maven-bundle-plugin (1.4.3),,,,,,,,,,,,,,,,,,,,,
Import-Package version inconsistencies.,FELIX-546,12395430,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,tomdewire,tomdewire,06/May/08 15:33,12/Mar/09 08:04,14/Mar/19 02:47,29/Jan/09 17:35,maven-bundle-plugin-1.4.0,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,1,,,,,,"There is an inconsistency in how versions are handled in Import-Package statements.

Style 1: <Import-Package>com.ea.bugtest1;version=1.0.0-SNAPSHOT</Import-Package>

...produces...

 Import-Package: com.ea.bugtest1;version=""1.0.0.SNAPSHOT""

Style 2: <Import-Package>com.ea.bugtest1;version=""1.0.0-SNAPSHOT""</Import-Package>

...produces...

Import-Package: com.ea.bugtest1;version=""1.0.0.SNAPSHOT""

Style 3: <Import-Package>com.ea.bugtest1;version=""[1.0.0-SNAPSHOT,1.0.0-SNAPSHOT]""</Import-Package>

...produces...

Import-Package: com.ea.bugtest1;version=""[1.0.0-SNAPSHOT,1.0.0-SNAPSHOT]""

Note that the 1.0.0-SNAPSHOT has not been converted to 1.0.0.SNAPSHOT. Also, this form breaks the OBR pieces of the plugin. The OBR repository must be set to NONE for this to work at all. I'll file a separate bug on this issue

I realize that having 1.0.0-SNAPSHOT in the import statment isn't exactly ideal, but it is coming in through a maven property. We're trying to find a way to maintain some consistency between our declared maven dependencies and our import-package statements by sharing a single property value.

I will attach a small demo project that will allow you to easily demonstrate the issue.",N/A,,,,,,,,,,,,,,,,,,,06/May/08 15:34;tomdewire;bugtest.tar.gz;https://issues.apache.org/jira/secure/attachment/12381510/bugtest.tar.gz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-06 15:48:59.863,,,no_permission,,,,,,,,,,,58442,,,Thu Mar 12 08:04:59 UTC 2009,,,,,,0|i1apbb:,270567,,,,,,,,"06/May/08 15:34;tomdewire;The issue may be seen in the bugtest2 project. Please read the comments in the pom. By commenting/un-commenting the various instructions, you can see the issues described in the bug report.","06/May/08 15:48;mcculls;This just missed the 1.4.1 release and will require a fix to the Bnd library, as it currently doesn't support cleanup of non-OSGi format versions inside ranges (I'll need to contact PeterK to get this fixed)",02/Jul/08 08:58;mcculls;Quick update - I haven't had time to progress these issues because I've been working at a customer site - but I hope to devote some cycles when I'm back in Malaysia next week. If any of these need fixing urgently feel free to keep bugging me until they're fixed ;),"09/Jul/08 12:55;mcculls;This fix will require a change to the BND library, so moving it to target release 1.4.3 of the bundleplugin","29/Jan/09 17:35;mcculls;Ran bugtest2 against trunk and it now works as expected, will deploy a new 1.5.0-SNAPSHOT for testing tomorrow morning (8hrs from now).

For anyone else running this test, note there is a small typo in the third example:

   ""[${bugtest1.version},${bugtest1..version}]""

should be:

   ""[${bugtest1.version},${bugtest1.version}]""
",12/Mar/09 08:04;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,,,,
Export-Package version inconsistencies.,FELIX-545,12395429,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,tomdewire,tomdewire,06/May/08 15:23,12/Mar/09 08:04,14/Mar/19 02:47,29/Jan/09 17:27,maven-bundle-plugin-1.4.0,,,,,,,,,,maven-bundle-plugin-2.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The version associated with an Export-Package statement can vary depending on the method used to create it. In both cases, the input is identical, but the output is not.

Case 1: Created from packageinfo files in the source tree. In this case, the input of ""1.0.0-SNAPSHOT"" will be shortened down to ""1.0.0"".
Case 2: Created from an Export-Package directive. In this case, the input of ""1.0.0-SNAPSHOT"" will be converted to 1.0.0.SNAPSHOT"".

I will attach a small sample project that demonstrates the behavior.",N/A,,,,,,,,,,,,,,,,,,,06/May/08 15:24;tomdewire;bugtest.tar.gz;https://issues.apache.org/jira/secure/attachment/12381509/bugtest.tar.gz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-06 15:42:03.057,,,no_permission,,,,,,,,,,,58443,,,Thu Mar 12 08:04:59 UTC 2009,,,,,,0|i1apbj:,270568,,,,,,,,"06/May/08 15:24;tomdewire;For this issue, please refer to the 'bugtest1' project, and read the comments in the pom.","06/May/08 15:42;mcculls;This just missed the 1.4.1 release and will require a fix to the Bnd library, as it currently trims packageinfo versions instead of munging them like it does with versions from Export-Package (I'll send a note to PeterK)",02/Jul/08 08:58;mcculls;Quick update - I haven't had time to progress these issues because I've been working at a customer site - but I hope to devote some cycles when I'm back in Malaysia next week. If any of these need fixing urgently feel free to keep bugging me until they're fixed ;),"09/Jul/08 12:55;mcculls;This fix will require a change to the BND library, so moving it to target release 1.4.3 of the bundleplugin","29/Jan/09 17:27;mcculls;Ran bugtest1 against trunk and it now works as expected, will deploy a new 1.5.0-SNAPSHOT for testing tomorrow morning (8hrs from now).",12/Mar/09 08:04;mcculls;Closing as maven-bundle-plugin 2.0.0 has been released.,,,,,,,,,,,,,,,,,,,,,
"Framework doesn't check obejct returned by ServiceFactory.getService(Bundle,ServiceRegistration)",FELIX-540,12394286,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,karlpauls,gvega,gvega,18/Apr/08 08:00,07/May/08 07:46,14/Mar/19 02:47,18/Apr/08 21:53,framework-1.0.3,,,,,,,,,,framework-1.0.4,,,,Framework,,,,,,,0,,,,,,"When the framework invokes ServiceFactory.getService() it doesn't check that the returned object is an instance of all the
classes named when the service was registered, this check is explcitely stated in the specification:

6.1.20.1 public Object getService( Bundle bundle, ServiceRegistration registration )
....
The Framework will check if the returned service object is an instance of all
the classes named when the service was registered. If not, then null is
returned to the bundle.

Returns A service object that must be an instance of all the classes named when the
service was registered.
",,,,,,,,,,,,,,,,,,,,18/Apr/08 08:03;gvega;Starter.java;https://issues.apache.org/jira/secure/attachment/12380474/Starter.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-04-18 08:10:35.816,,,no_permission,,,,,,,,,,,58448,,,Wed May 07 07:46:03 UTC 2008,,,,,,0|i0vwhr:,184237,,,,,,,,18/Apr/08 08:03;gvega;Here is a simple test case showing the problem,"18/Apr/08 08:10;karlpauls;Good catch!

We need to implement this check - I'll look into it.",18/Apr/08 21:53;karlpauls;The check is in trunk - It passes your attached test case. Please close this issue if it works for you. This will make it into 1.0.4. Thanks again.,"07/May/08 07:46;gvega;The corrected version succesfully passed the test, Thanks!",,,,,,,,,,,,,,,,,,,,,,,
Intermittent IllegalArgumentException while using declarative services   ,FELIX-539,12394089,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,rsivaram,rsivaram,16/Apr/08 11:14,10/Jun/08 08:47,14/Mar/19 02:47,03/Jun/08 09:58,framework-1.0.4,,,,,,,,,,scr-1.0.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"I get an intermittent (very rare) exception while running tests using declarative services under Felix. 
 
The exception stack trace shows:
 
java.lang.IllegalArgumentException: Service object cannot be null.
        at org.apache.felix.framework.Felix.registerService(Felix.java:2661)
        at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:254)
        at org.apache.felix.scr.impl.AbstractComponentManager.registerComponentService(AbstractComponentManager.java:598)
        at org.apache.felix.scr.impl.AbstractComponentManager.activateInternal(AbstractComponentManager.java:426)
        at org.apache.felix.scr.impl.AbstractComponentManager.enableInternal(AbstractComponentManager.java:323)
        at org.apache.felix.scr.impl.AbstractComponentManager.access$000(AbstractComponentManager.java:36)
        at org.apache.felix.scr.impl.AbstractComponentManager$1.run(AbstractComponentManager.java:94)
        at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:85)
 
Whenever I have seen the exception, logs suggest that the components were being reactivated at around the same time. The stack trace from the debugger when reactivate occurs shows:
 
        ImmediateComponentManager.disposeImplementationObject(Object, ComponentContext) line: 273
        ImmediateComponentManager.deleteComponent() line: 151
        ImmediateComponentManager(AbstractComponentManager).deactivateInternal() line: 469
        ImmediateComponentManager(AbstractComponentManager).reactivate() line: 142
        ImmediateComponentManager.reconfigure(Dictionary) line: 399
        ImmediateComponentManager$1.updated(Dictionary) line: 90
        ConfigurationManager$ManagedServiceUpdate.run() line: 863
        UpdateThread.run() line: 89
 
Would it be possible to introduce some synchronization during activate/deactivate to avoid the service/component being set to null? I am using Felix framework 1.1.0-SNAPSHOT and SCR 1.0.0.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-03 09:54:51.801,,,no_permission,,,,,,,,,,,58449,,,Tue Jun 10 08:47:57 UTC 2008,,,,,,0|i0w1lb:,185063,,,,,,,,"03/Jun/08 09:54;fmeschbe;In Rev. 662404 I committed an ehancement to synchronize service registration and unregistration to fix FELIX-550. I assume that this fix also would fix this issue.

Reasoning: This situation occurrs if a component has been marked satisfied (aka active) and is working on registering the service. At the same time another thread is taking down the component. This should only be possible after the first thread left the synchronized block.

But when the first thread leaves the synchronized block, the service lock is active while the service is being registered. So the second trhead may enter the synchronized deactivateInternal method to start deactivation but must wait with service unregistration until the servlce lock has been released.

Thus the deactivating thread waits for the service registration by the first thread to finish before actually unregistering the service and deactivating the component.","03/Jun/08 09:58;fmeschbe;According to the reasoning, I assume this issue to be fixed.

If it occurrs again, we should create a new issue, possibly linking back to this one to further work on it.","10/Jun/08 08:47;fmeschbe;No feedback received on this one. Assuming it works, therefore closing.",,,,,,,,,,,,,,,,,,,,,,,,
Threadlocks on ContentClassLoader by FelixDispatchQueue and FelixStartLevel threads when using log bundles,FELIX-536,12393839,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,karlpauls,wimpi,wimpi,13/Apr/08 18:33,14/Apr/08 06:12,14/Mar/19 02:47,13/Apr/08 21:25,framework-1.0.3,,,,,,,,,,framework-1.0.4,,,,,,,,,,,0,,,,,,"Sometimes Felix gets stuck at startup with a threadlock when using a log bundle,  including the Felix provided log bundle.

jdb reveals the following information:

FelixDispatchQueue[1] threadlocks 0x3c1
Monitor information for thread FelixDispatchQueue:
  Owned monitor: instance of org.apache.felix.framework.searchpolicy.ContentClassLoader(id=970)
   Waiting for monitor: instance of org.apache.felix.moduleloader.ModuleFactoryImpl(id=971)

FelixDispatchQueue[1] threadlocks 0x3c0
Monitor information for thread FelixStartLevel:
  Owned monitor: instance of org.apache.felix.moduleloader.ModuleFactoryImpl(id=971)
   Waiting for monitor: instance of org.apache.felix.framework.searchpolicy.ContentClassLoader(id=970)

FelixStartLevel[1] where
  [1] sun.misc.Unsafe.defineClass (native method)
  [2] sun.reflect.ClassDefiner.defineClass (ClassDefiner.java:45)
  [3] sun.reflect.MethodAccessorGenerator$1.run (MethodAccessorGenerator.java:381)
  [4] java.security.AccessController.doPrivileged (native method)
  [5] sun.reflect.MethodAccessorGenerator.generate (MethodAccessorGenerator.java:377)
  [6] sun.reflect.MethodAccessorGenerator.generateMethod (MethodAccessorGenerator.java:59)
  [7] sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:28)
  [8] sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25)
  [9] java.lang.reflect.Method.invoke (Method.java:585)
  [10] org.apache.felix.framework.Logger._logReflectively (Logger.java:163)
  [11] org.apache.felix.framework.Logger._log (Logger.java:143)
  [12] org.apache.felix.framework.Logger.log (Logger.java:81)
  [13] org.apache.felix.framework.searchpolicy.R4SearchPolicyCore.createWires (R4SearchPolicyCore.java:2,154)
  [14] org.apache.felix.framework.searchpolicy.R4SearchPolicyCore.resolve (R4SearchPolicyCore.java:1,034)
  [15] org.apache.felix.framework.Felix._resolveBundle (Felix.java:1,693)
  [16] org.apache.felix.framework.Felix._startBundle (Felix.java:1,566)
  [17] org.apache.felix.framework.Felix.startBundle (Felix.java:1,519)
  [18] org.apache.felix.framework.Felix.setFrameworkStartLevel (Felix.java:1,104)
  [19] org.apache.felix.framework.StartLevelImpl.run (StartLevelImpl.java:258)
  [20] java.lang.Thread.run (Thread.java:613)


FelixDispatchQueue[1] where
  [1] org.apache.felix.framework.searchpolicy.R4SearchPolicyCore.resolve (R4SearchPolicyCore.java:989)
  [2] org.apache.felix.framework.searchpolicy.R4SearchPolicyCore.findClassOrResource (R4SearchPolicyCore.java:374)
  [3] org.apache.felix.framework.searchpolicy.R4SearchPolicyCore.findClass (R4SearchPolicyCore.java:186)
  [4] org.apache.felix.framework.searchpolicy.R4SearchPolicy.findClass (R4SearchPolicy.java:45)
  [5] org.apache.felix.framework.searchpolicy.ContentClassLoader.loadClass (ContentClassLoader.java:109)
  [6] java.lang.ClassLoader.loadClass (ClassLoader.java:251)
  [7] java.lang.ClassLoader.loadClassInternal (ClassLoader.java:374)

I have been reading 
http://www.mail-archive.com/dev@felix.apache.org/msg03142.html

But I think that it does not really provide a ""solution"" to this problem and that this is an issue in the framework implementation. I don't think that the specification of the LogService implies that it cannot be configurable or loading any classes.....

Regards,
Dieter



","1.6.0_03-b05;Sun Microsystems Inc.;mixed mode, sharing;Linux;32 bit JVM
and
1.5.0_13-119;Apple Inc.;mixed mode, sharing;Mac OS X;32 bit JVM
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-13 18:51:14.155,,,no_permission,,,,,,,,,,,58452,,,Mon Apr 14 06:12:12 UTC 2008,,,,,,0|i0vwdj:,184218,,,,,,,,"13/Apr/08 18:51;karlpauls;Well, for now the workaround is to set the following in conf/config.properties:

felix.log.level=3","13/Apr/08 21:25;karlpauls;The issue is that we log messages while holding framework internal locks -- hence, when a log service calls back into the framework (e.g., by loading a class) we might deadlock. This is one instance of this problem. 

I disabled logging to internal log services - we can reintroduce this feature at a later time but - for now it is clear that people keep running into this issue and all we are trying is to be nice. 

Please close this issue if the current trunk works for you.
","14/Apr/08 01:28;wimpi;Karl:

I actually reported this problem, because I was trying to understand the wiring process, with the help of the log messages that are turned off with the workaround and now disabled in the trunk.

In particular, what would you suggest to use for debugging to figure out why bundles with a Manifest Header that includes an ExecutionEnvironment specification
(i.e. Bundle-RequiredExecutionEnvironment=J2SE-1.5) needs to explicitly import certain packages like for example:
javax.xml.parsers
org.xml.sax.helpers

If not imported explicitly, ClassNotFoundExceptions are thrown.

Regards,
Dieter","14/Apr/08 04:10;mcculls;From what I understand, setting Bundle-RequiredExecutionEnvironment (section 3.3 of the spec) is just a way to declare your bundle needs a subset of those Execution Environments to function - so if a framework doesn't support them then you get a BundleException when you try to install / update.

It does not mean you can avoid having to import any non-java.* packages that you use. Packages like javax.xml.parsers and org.xml.sax.helpers would still need to be explicitly imported, unless you set the ""org.osgi.framework.bootdelegation"" property to delegate their lookup to the boot classloader - although by using bootdelegation you are limiting your ability to replace the JDK implementations or have different versions loaded simultaneously.","14/Apr/08 05:47;wimpi;Stuart:

I guess I have to agree, but I think it's a bit counter-intuitive.

The question that remains open is, whether there is a way to debug classloading and wiring if these debugs are simply turned off.

Maybe there should be a way to log these without depending on the presence of an special (because it will need to avoid the deadlocks) LogService (which is part of the compendium, not the core specs).

But then, that may be a new feature request, so I better close this issue.

Regards,
Dieter

","14/Apr/08 06:12;karlpauls;You can still receive wiring debug messages. They are send to System.out if the debug level is 4. Furthermore, Felix accepts a Logger in it's constructor which it will log to in case stdout is not an option.",,,,,,,,,,,,,,,,,,,,,
Starting Felix with YouKit Profiler causes java.lang.NoClassDefFoundError,FELIX-535,12393837,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,wimpi,wimpi,13/Apr/08 17:45,13/Apr/08 19:23,14/Mar/19 02:47,13/Apr/08 19:23,framework-1.0.3,,,,,,,,,,,,,,,,,,,,,0,,,,,,"I have been trying to profile Felix with the YourKit Profiler using -agentlib:yjpagent.

Each loaded bundle will throw a:
java.lang.NoClassDefFoundError: com/yourkit/runtime/Callback
	at org.apache.felix.shell.impl.Activator.<init>(Activator.java)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
	at java.lang.Class.newInstance0(Class.java:350)
	at java.lang.Class.newInstance(Class.java:303)
	at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3486)
	at org.apache.felix.framework.Felix._startBundle(Felix.java:1580)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1519)
	at org.apache.felix.framework.Felix.setFrameworkStartLevel(Felix.java:1104)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:258)
	at java.lang.Thread.run(Thread.java:613)

This happens on a fresh download, with the standard configuration (bundle repository removed only). i.e.:

felix.auto.start.1= \
 file:install/base/org.apache.felix.shell-1.0.0.jar \
 file:install/base/org.apache.felix.shell.tui-1.0.0.jar 

YourKit seems to think that the problem is caused by the application doing strange classloading, so I decided to report this here.

Regards,
Dieter","java version ""1.5.0_13""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_13-b05-237)
Java HotSpot(TM) Client VM (build 1.5.0_13-119, mixed mode, sharing)

[YourKit Java Profiler 7.0.5] Using JVMTI (1.5.0_13-119;Apple Inc.;mixed mode, sharing;Mac OS X;32 bit JVM)

java version ""1.6.0_03""
Java(TM) SE Runtime Environment (build 1.6.0_03-b05)
Java HotSpot(TM) Server VM (build 1.6.0_03-b05, mixed mode)

[YourKit Java Profiler 7.0.12] Using JVMTI (1.6.0_03-b05;Sun Microsystems Inc.;mixed mode, sharing;Linux;32 bit JVM)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-13 17:51:00.82,,,no_permission,,,,,,,,,,,58453,,,Sun Apr 13 19:23:19 UTC 2008,,,,,,0|i0vxy7:,184473,,,,,,,,"13/Apr/08 17:51;karlpauls;try setting the following in conf/config.properties

org.osgi.framework.bootdelegation=com.yourkit.*

that should do it.

Please close this issue if this works.","13/Apr/08 19:23;wimpi;Works.

YourKit requires:
org.osgi.framework.bootdelegation=com.yourkit.* 
",,,,,,,,,,,,,,,,,,,,,,,,,
Configuration Admin allows configuration keys with illegal characters,FELIX-522,12392329,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,26/Mar/08 10:35,01/Apr/08 14:47,14/Mar/19 02:47,26/Mar/08 10:45,configadmin-1.0.0,,,,,,,,,,configadmin-1.0.1,,,,Configuration Admin,,,,,,,0,,,,,,"As per the Configuration Admin Service specification, the keys of configuration properties must comply with the symbolic-name production as set forth in section 1.3.2 of the Core Specification (see section 104.4.2 Configuration Properties in the Compendium Services Specification).

Currently this requirement is not checked by the Felix implementation. This issue has been reported on the users list in [1]

[1] http://www.mail-archive.com/users%40felix.apache.org/msg01097.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58466,,,Wed Mar 26 10:45:11 UTC 2008,,,,,,0|i140w7:,231607,,,,,,,,26/Mar/08 10:45;fmeschbe;Added a check to the ConfigurationImpl class managing the contents in Rev. 641241.,,,,,,,,,,,,,,,,,,,,,,,,,,
MetaType - optionValues check,FELIX-521,12391985,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,theli,theli,20/Mar/08 18:32,02/May/08 07:26,14/Mar/19 02:47,26/Mar/08 08:48,metatype-1.0.0,,,,,,,,,,metatype-1.0.2,,,,Metatype Service,,,,,,,0,,,,,,"There is a problem in the validation of a value against option-values in ""AD.validate(...)"":

|> String[] optionValues = getOptionValues();
|> if ( optionValues != null )
|> {
|> [...]
|>     // not any of the option values, fail
|>     return VALIDATE_NOT_A_VALID_OPTION;
|> }

Per default the optionValues array is empty but not null. Therefore even if no options are configured the check returns VALIDATE_NOT_A_VALID_OPTION.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-26 08:48:20.453,,,no_permission,,,,,,,,,,,58467,,,Fri May 02 07:26:18 UTC 2008,,,,,,0|i1apef:,270581,,,,,,,,"26/Mar/08 08:48;fmeschbe;Thanks for reporting this issue. I fixed it in Rev. 641206 by ignoring empty option value arrays.

Please close, if this is ok for you. Thanks.","02/May/08 07:26;theli;Sorry, I've never received an email for this. 
Thank you for the bugfix.",,,,,,,,,,,,,,,,,,,,,,,,,
MetaDataReader - ad.setMax,FELIX-520,12391982,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,theli,theli,20/Mar/08 18:21,02/May/08 08:55,14/Mar/19 02:47,26/Mar/08 08:43,metatype-1.0.0,,,,,,,,,,metatype-1.0.2,,,,Metatype Service,,,,,,,0,,,,,,"There is a bug in ""MetaDataReader.readAD()"":

|> ad.setMin( this.getOptionalAttribute( ""min"" ) );
|> ad.setMax( this.getOptionalAttribute( ""min"" ) );

setMax uses the ""min"" attribute.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-26 08:43:41.32,,,no_permission,,,,,,,,,,,58468,,,Fri May 02 08:55:53 UTC 2008,,,,,,0|i1apen:,270582,,,,,,,,"26/Mar/08 08:43;fmeschbe;Thanks for reporting. I fixed this in Rev. 641204.

Please close if this is ok for you. Thanks.",02/May/08 08:55;theli;Thank you for the bugfix.,,,,,,,,,,,,,,,,,,,,,,,,,
maven-bundle-plugin should issue a WARNING for unsupported packaging types,FELIX-519,12391555,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,sahoo,sahoo,16/Mar/08 12:59,08/May/08 16:31,14/Mar/19 02:47,24/Mar/08 02:39,maven-bundle-plugin-1.4.0,,,,,,,,,,maven-bundle-plugin-1.4.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"My pom uses a custom packaging type called hk2-jar, which is similar to jar. I wanted to invoke maven-bundle-plugin:bundle-manifest goal. So, I configured my pom.xml like this (Pleas note the bug in specifying supportedProjectTypes options):
          <plugin>
               <groupId>org.apache.felix</groupId>
               <artifactId>maven-bundle-plugin</artifactId>
               <configuration>
                   <supportedProjectType>hk2-jar</supportedProjectType>
                   <supportedProjectType>jar</supportedProjectType>
                   <supportedProjectType>bundle</supportedProjectType>
               </configuration>
               <executions>
                   <execution>
                       <id>bundle-manifest</id>
                       <phase>process-classes</phase>
                       <goals>
                           <goal>manifest</goal>
                       </goals>
                   </execution>
               </executions>
           </plugin> 
Since, I did not extend the supportedProjectTypes to include hk2-jar, ideally the plugin should have issued a WARNING message. Instead, it issues a DEBUG message if the project type is not suitable. If I run with -X option, I see a debug message that says project type is not compatible. 
Please change the plugin to issue a WARNING from maven-bundle-plugin rather than a DEBUG message.","JDK 1.5 on Solaris x86, but it does not matter for this issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-24 02:39:16.314,,,no_permission,,,,,,,,,,,58469,,,Thu May 08 16:31:59 UTC 2008,,,,,,0|i1apev:,270583,,,,,,,,24/Mar/08 02:39;mcculls;Fixed in trunk,08/May/08 16:31;mcculls;maven-bundle-plugin 1.4.1 has now been released to the maven repository,,,,,,,,,,,,,,,,,,,,,,,,,
"Wrong processing order of Localization-, Bundle and Processed-Resources",FELIX-518,12391547,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jajans,siamak,siamak,15/Mar/08 23:01,16/Jan/16 15:03,14/Mar/19 02:47,14/Jan/16 16:21,,,,,,,,,,,deploymentadmin-0.9.8,,,,Deployment Admin,,,,,,,1,,,,,,"The DeploymentAdmin specification defines in Section 114.3 (File Format), Page 340 and 341, the order of resources in the Jar as follows:

1 META-INF/MANIFEST.MF 
2 META-INF/*.SF, META-INF/*.DSA, META-INF/*.RS 
3 Localization files
4 Bundles 
5 Resources

The current DeploymentAdmin implementation processes the contents of the JarInputStream with the UpdateCommand (handles bundles) and the ProcessResourceCommand (handles resources). If the Jar contains Localization-Resources (which are placed before any other resource or bundle) the UpdateCommand failes, because assumes that the Bundles come at first in the JarInputStream.

As a result a DeploymentException with the message ""Resource '...' is not described in the manifest."" is thrown.

Kind regards,

Siamak Haschemi","Maven version: 2.0.8
Java version: 1.6.0_04
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""",,,,,,,,,,,,,,,,,,,15/Mar/08 23:10;siamak;gps_deployment_package-0.0.1-SNAPSHOT.dp;https://issues.apache.org/jira/secure/attachment/12377982/gps_deployment_package-0.0.1-SNAPSHOT.dp,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-03-18 08:46:03.624,,,no_permission,,,,,,,,,,,3926,,,Thu Jan 14 16:21:44 UTC 2016,,,,,,0|i00yfj:,3510,,,,,,,,"18/Mar/08 08:46;cvs;Correct, l10n (and signing) is not yet supported in the current implementation. Thanks for the details and example package, I'll have a look at adding l10n support.",14/Jan/16 16:21;jajans;Updated DA to correctly handle localised and/or signed deployment packages. Added some utility code to test the installation of signed deployment packages.,,,,,,,,,,,,,,,,,,,,,,,,,
Replacement of {maven-dependencies} in Include-Resource and Bundle-ClassPath can strip Windows path separators,FELIX-517,12391541,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,mcculls,mcculls,15/Mar/08 21:29,08/May/08 16:31,14/Mar/19 02:47,15/Mar/08 21:43,maven-bundle-plugin-1.4.0,,,,,,,,,,maven-bundle-plugin-1.4.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"On Windows platforms, when you use {maven-dependencies} in a custom Include-Resource instruction like the following:

   <Include-Resource>
      additional-resource, {maven-dependencies}, some-other-resource
   <Include-Resource>

then the Windows path separator can be stripped by the String.replaceAll() method - this could also affect other characters that have special meaning in regexp.

Solution is to use the Plexus StringUtils.replace() method which supports simple string replacement without using regexp (which isn't actually required here).",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58470,,,Thu May 08 16:31:59 UTC 2008,,,,,,0|i0vyhj:,184560,,,,,,,,15/Mar/08 21:43;mcculls;Fix committed to trunk,08/May/08 16:31;mcculls;maven-bundle-plugin 1.4.1 has now been released to the maven repository,,,,,,,,,,,,,,,,,,,,,,,,,
ManagedService[Factory] may be updated twice with the same Configuration,FELIX-516,12390644,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,10/Mar/08 10:54,10/Mar/08 12:33,14/Mar/19 02:47,10/Mar/08 12:33,configadmin-1.0.0,,,,,,,,,,configadmin-1.0.1,,,,Configuration Admin,,,,,,,0,,,,,,"The Configuration Admin service implementation has a multi-threading issue in that a configuration may be delivered to a ManagedService[Factory] twice under certain conditions.

Consider the situation of thread Threads T1 registering a ManagedServiceFactory, T2 creating and updating a configuration object for the ManagedServiceFactory registered by T1 and T3 the background thread managed by the Configuration Admin Service to serialize configuration updates.

  Thread T1 was registering a ManagedServiceFactory
   In T1 the ConfigurationAdmin service sees the service and schedules configuration of it
   Thread T2 was creating and setting a configuration C
   In T2 the ConfigurationAdmin service schedules the update of the ManagedServiceFactory
   Thread T3 handles the first scheduled task of initially providing the service with configuration
              (created by T1 in the meantime)
   Thread T3 handles the second scheduled task of updating the configuration

Hence the ManagedServiceFactory is updated twice with the same configuration and thus cycles the service.

The fix is to record in the Configuration object that it was sent to the consuming service and to prevent sending the update of a configuration, which has already been sent.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58471,,,Mon Mar 10 12:33:35 UTC 2008,,,,,,0|i140un:,231600,,,,,,,,"10/Mar/08 12:33;fmeschbe;Implemented a marker in the Configuration object which defines, whether the last change of a configuration update or delete has already been delivered to the owning ManagedService[Factory] or not.

Fixed in Rev. 635540 and deployed new SNAPSHOT version 1.0.1-20080310.123324-2",,,,,,,,,,,,,,,,,,,,,,,,,,
pom.xml file needs to be updated to work with the current HEAD,FELIX-510,12390197,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,stefano.lenzi,siamak,siamak,04/Mar/08 18:44,07/Mar/08 09:27,14/Mar/19 02:47,05/Mar/08 08:22,,,,,,,,,,,,,,,Deployment Admin,,,,,,,0,,,,,,"The pom.xml file for the deploymentadmin project needs to be updated to work with the current HEAD

See attachement diff.


Kind regards,

Siamak Haschemi","Maven version: 2.0.8
Java version: 1.6.0_04
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""",,600,600,,0%,600,600,,,,,,,FELIX-514,,,,,04/Mar/08 19:01;siamak;pom.xml.diff;https://issues.apache.org/jira/secure/attachment/12377105/pom.xml.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-03-05 08:22:35.076,,,no_permission,,,,,,,,,,,58477,,,Wed Mar 05 09:50:01 UTC 2008,,,,,,0|i1apfz:,270588,,,,,,,,"04/Mar/08 19:01;siamak;- add schema reference
- correct the referenced pom versions
- added ""org.osgi.service.deploymentadmin.spi"" to the exported packages","05/Mar/08 08:22;stefano.lenzi;POM updated.

I tested the bundle generated and it seems to be working.

I have also downgraded the version number to 0.9.0-SNAPSHOT because the project has never been released and it is under development.

Please test the changes and close the ticket","05/Mar/08 09:50;siamak;Hello,

works as expected.

Thank You!

Kind regards,

Siamak Haschemi",,,,,,,,,,,,,,,,,,,,,,,,
properties and service names of extended components not always included,FELIX-507,12390151,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,04/Mar/08 11:13,11/Mar/08 07:08,14/Mar/19 02:47,07/Mar/08 12:22,maven-scr-plugin-1.0.1,maven-scr-plugin-1.0.2,maven-scr-plugin-1.0.3,,,,,,,,maven-scr-plugin-1.0.4,,,,SCR Tooling,,,,,,,0,,,,,,"If a bundle B1 contains an abstract component with @scr.* tags, the respective information is added to the bundle in the OSGI-INF/scr-plugin/scrinfo.xml file. This file is read by the maven-scr-plugin if the bundle is referenced during a build.

Unfortunately of this descriptor only the @scr.reference tags are reused while the @scr.service and @scr.property tags are ignored. As the abstract component source file is not available either, the service names and properties of the abstract component are not inherited.

There is no workaround for this except duplicating the tags ...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-04 13:12:04.766,,,no_permission,,,,,,,,,,,58480,,,Wed Mar 05 07:50:54 UTC 2008,,,,,,0|i0w0lj:,184902,,,,,,,,"04/Mar/08 13:12;cziegeler;I added a fix for this, which works for inheritance of abstract components.
However, if the parent component is not abstract, several information like meta type etc. is lost
The problem is that this extra information is not part of the XML which is generated for the SCR bundle.
The solution is to save all components (and not only the abstact onces) into the special scr plugin file.",05/Mar/08 07:50;fmeschbe;This first fix at least fixes my current issue as my base class is in fact abstract.,,,,,,,,,,,,,,,,,,,,,,,,,
scr-plugin-generated resources not always bundled,FELIX-506,12390150,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,04/Mar/08 11:10,11/Mar/08 07:09,14/Mar/19 02:47,04/Mar/08 12:12,maven-scr-plugin-1.0.3,,,,,,,,,,maven-scr-plugin-1.0.4,,,,SCR Tooling,,,,,,,0,,,,,,"Consider a bundle which only contains a single component which does not lead to the creation of a serviceComponents.xml file (that is either only metatypes.xml or an abstract component). In this case the data generated in the target/scr-plugin-generated folder is not included in the generated bundle because the plugin does not add the folder to the plugin resources.

Workaround is to manually include the resources as in:

    <Include-Resource>
        {maven-resources},target/scr-plugin-generated
    </Include-Resource>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58481,,,Wed Mar 05 07:47:03 UTC 2008,,,,,,0|i0w0lz:,184904,,,,,,,,05/Mar/08 07:47;fmeschbe;Thanks for fixing. This works for me.,,,,,,,,,,,,,,,,,,,,,,,,,,
maven-bundle-plugin:bundleall modifies dependencies that are already bundles,FELIX-505,12390009,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,carlos,carlos,02/Mar/08 22:57,08/May/08 16:31,14/Mar/19 02:47,03/Mar/08 02:25,maven-bundle-plugin-1.4.0,,,,,,,,,,maven-bundle-plugin-1.4.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,breaks the signatures when repackaging a bundle because it reorders the entries in the manifest,,,,,,,,,,,,,,,,,,,,02/Mar/08 23:02;carlos;felix.patch.txt;https://issues.apache.org/jira/secure/attachment/12376945/felix.patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-03-03 02:25:03.217,,,no_permission,,,,,,,,,,,58482,,,Thu May 08 16:31:59 UTC 2008,,,,,,0|i1apgf:,270590,,,,,,,,"02/Mar/08 23:02;carlos;Patch with fix, plus new option to limit the bundling to some level of dependencies, plus a test for an old issue tomake sure it doesnt come back","03/Mar/08 02:25;mcculls;Applied slightly modified patch (avoiding a potential name clash) and deployed a new snapshot:

   maven-bundle-plugin-1.4.1-20080303.022208-1.jar
",08/May/08 16:31;mcculls;maven-bundle-plugin 1.4.1 has now been released to the maven repository,,,,,,,,,,,,,,,,,,,,,,,,
Registering an alias direct to a single resource seems to fail,FELIX-503,12389689,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,walkerr,walkerr,27/Feb/08 14:09,13/Jun/14 09:27,14/Mar/19 02:47,26/Mar/08 09:47,,,,,,,,,,,,,,,HTTP Service,,,,,,,0,,,,,,"Registering a direct alias is not so common, but also doesn't seem to be against or forbidden by the OSGi spec, although it'd be worthwhile reviewing the alias rules as part of initial investigations.

The following was reported by Martin.Thelian@gmx.at on the user's list :
----
I have problems registering resources via the HttpService in Apache Felix. I'm using Apache Felix Version 1.0.3 and the HttpService-Bundle org.apache.felix.http.jetty-0.8.0-SNAPSHOT.jar.

My Problem is that:
|> http.registerResources(""/image.png"", ""/image.png"", null);

does not work. It seems that the HttpService-Bundle internally registers the resource as ""image.png/"" because I'm getting the following error message in the console:
|> WARNING: image.png/ (org.apache.felix.moduleloader.ResourceNotFoundException: image.png/)

And my browser is always redirected from ""/image.png"" to ""/image.png/"":
|> ~$ telnet localhost 8080
|> Trying 127.0.0.1...
|> Connected to localhost.
|> Escape character is '^]'.
|> GET /image.png HTTP/1.0
|> Host: localhost
|> |> HTTP/1.1 302 Moved Temporarily
|> Date: Fri, 22 Feb 2008 13:51:09 GMT
|> Server: Jetty/4.2.x (Linux/2.6.20-16-generic i386 java/1.5.0_11)
|> Location: http://localhost/image.png/
|> Connection: close

If I start felix in debugging-mode, put a breakpoint into org.apache.felix.http.jetty.OsgiResourceHandler function ""handle( String pathInContext,...)"" and change the value of the requested resource name from ""/image.png/"" back to ""/image.png"" it works fine.

I've also tested my bundle with knopflerfish where it works without a problem. What can I do to get it to run with Apache felix? Thanks. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-26 09:38:50.491,,,no_permission,,,,,,,,,,,58484,,,Wed Mar 26 09:47:19 UTC 2008,,,,,,0|i0vv3z:,184013,,,,,,,,"26/Mar/08 09:38;fmeschbe;With the patch of FELIX-55 applied, this request does not get a 302 anymore but a 404 because the target is selected by the request.getPathInfo() which is null in case of a direct access. Fixing this by checking for this null situation.","26/Mar/08 09:47;fmeschbe;Thanks for reporting.

This issue is fixed in Rev. 641226 by checking for path info to be null and assuming an empty path in this case.

Please close if this fixes your problem. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,
The preferences service bundle name has a typo,FELIX-502,12389660,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,,gnt,gnt,27/Feb/08 09:12,27/Feb/08 09:26,14/Mar/19 02:47,27/Feb/08 09:26,,,,,,,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,27/Feb/08 09:12;gnt;FELIX-502.patch;https://issues.apache.org/jira/secure/attachment/12376609/FELIX-502.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58485,,,2008-02-27 09:12:00.0,,,,,,0|i1apgv:,270592,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Genearated Source url is not a valid url,FELIX-497,12388956,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,clement.escoffier,clement.escoffier,19/Feb/08 00:29,03/Mar/08 02:28,14/Mar/19 02:47,19/Feb/08 07:40,,,,,,,,,,,maven-bundle-plugin-1.4.0,,,,Maven OBR Plugin (Deprecated),,,,,,,0,,,,,,"When compiling the actual Felix trunk, the generated repository.xml file contains non valid sources. The bundles contains the source information but with an invalid url such as :
<source>scm:svn:https://svn.apache.org/repos/asf/felix/releases/javax.servlet</source>

All bundles have this issue.

Scm:svn:https is not a valid url prefix for Java. So, when the OBR run-time try to create the URL object, from this string,  an exception is thrown. This doesn't impede the  OBR deployment process as the exception is ignored.



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-19 00:50:53.977,,,no_permission,,,,,,,,,,,58490,,,Mon Mar 03 02:28:23 UTC 2008,,,,,,0|i0w0if:,184888,,,,,,,,"19/Feb/08 00:50;mcculls;BTW, I tracked down where the bogus URL actually comes from - when Maven releases the parent pom, it replaces the viewable http address with the tagged ""scm:svn:..."" address (see ~/.m2/repository/org/apache/felix/felix/1.0.2/felix-1.0.2.pom) which isn't really a valid URL. While I think this is a bug in the subversion plugin (because the contract for the URL field is that it's viewable by a browser and ""scm:svn:..."" is not) we can probably work around it in the OBR code.","19/Feb/08 07:40;mcculls;Using the Maven SCM URL for the source entry does not match the RFC or the bundlerepository implementation, both of which expect a jarfile containing the sources rather than a URL pointing into a source repository system. Therefore I have changed the plugin to add the Maven source attachment (if it exists) instead.

As before, bundles can override this by explicitly setting Bundle-Source.

To try this out use:

   mvn clean source:jar install

Fixed in trunk and deployed new snapshot (1.3.0-20080219.073339-2)",03/Mar/08 02:28;mcculls;This fix is now available in the 1.4.0 release of the maven-bundle-plugin,,,,,,,,,,,,,,,,,,,,,,,,
basedriver bundle require split-package,FELIX-494,12388953,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,stefano.lenzi,stefano.lenzi,stefano.lenzi,18/Feb/08 23:26,11/Aug/08 15:28,14/Mar/19 02:47,11/Aug/08 15:28,upnp-basedriver-0.8.0,,,,,,,,,,,,,,UPnP Subproject,,,,,,,0,,,,,,Unable to configure POM for basedriver in order to avoid the spli-package warning,,,,,,,,,,,,,,,,,,,,20/Feb/08 06:09;mcculls;pom.xml;https://issues.apache.org/jira/secure/attachment/12375998/pom.xml,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-20 06:09:40.858,,,no_permission,,,,,,,,,,,58493,,,Mon Aug 11 15:28:49 UTC 2008,,,,,,0|i1aphr:,270596,,,,,,,,"20/Feb/08 06:09;mcculls;Sample pom.xml which removes the split package warning (also adds execution section for FELIX-495)

Here's the reason why the split package warning appeared:

   The split package detection logic in BND basically checks to see if a directory has already been added
   to the bundle, and outputs a warning if it has. Unfortunately this logic can occasionally produce a false
   positive when a private class is located in a package *above* exported classes.

   For example:

      Export-Package:  alpha.bravo.charlie
      Private-Package: alpha.bravo
      Bundle-Activator: alpha.bravo.Activator

   which is similar to the situation in the basedriver.

The simplest solution is to add the "";-split-package:=merge-first"" attribute to the affected packages, which
tells BND to not produce the warning and merge the contents of the packages using a ""first-win"" approach
to resolve overlapping classes.

Another solution would be to refactor the Activator to a package alongside or below the exported packages:

      Export-Package:  alpha.bravo.charlie
      Private-Package: alpha.bravo.internal
      Bundle-Activator: alpha.bravo.internal.Activator

which imho makes things a bit clearer, but it's just a personal preference.

FYI, I also tweaked the other instructions to use wildcards where possible, which you may or may not want.",11/Aug/08 15:28;stefano.lenzi;Patch has been already applied,11/Aug/08 15:28;stefano.lenzi;Done,,,,,,,,,,,,,,,,,,,,,,,,
maven-bundle-plugin bundle:install goal install too many artifact,FELIX-493,12388951,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,stefano.lenzi,stefano.lenzi,18/Feb/08 22:53,20/Feb/08 22:23,14/Mar/19 02:47,19/Feb/08 07:35,,,,,,,,,,,maven-bundle-plugin-1.4.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"After the introduction of classifier in the maven-bundle-plugin and after the adaptation of the bundle:install goal in order to support classifier if you run
mvn source:jar install
the maven-bundle-plugin will install either the <bunlde>.jar and <bundle>-sources.jar in the local OBR repository. 

The repository.xml file seems to be readable by the plugin after the installtion of the duplicated artifact, but I think it won't be usable from OBR client.",maven-bundle-plugin:1.3.0-SNAPSHOT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-19 00:52:33.634,,,no_permission,,,,,,,,,,,58494,,,Wed Feb 20 22:23:15 UTC 2008,,,,,,0|i140pr:,231578,,,,,,,,"18/Feb/08 23:03;stefano.lenzi;The changeset 628824 introduced the bug. Check ObrDeploy:178 and ObrInstall:104
","18/Feb/08 23:11;stefano.lenzi;I don't see a simple solution for this. I would like to propose some idea:

a) attached artifacts must bundle:installed/bundle:deployed manually

b) add a list of classifier to maven-configuration-plugin in order to identify the one that we want to bundle:install and bundle:deploy. A list it is better than a regex pattern because it could be require to have custom OBR metatada for each classified artifact

c) add an ad-hoc behavior for well-know classifier like: sources, javadoc. So that URL to those artifact could be liked as sourcesURL and javadocURL metadata of the main artifact. (the best would be to change the maven-jar-plugin for accomplish it without an ad-hoc setup)

WDYT?","19/Feb/08 00:52;mcculls;There is a simple solution: filter the attached artifacts by type, because the sources and javadoc won't have type ""bundle"", whereas the attached bundle artifact will do.",19/Feb/08 07:35;mcculls;Fixed in trunk and deployed new snapshot (1.3.0-20080219.073339-2),20/Feb/08 22:23;stefano.lenzi;Thank you! ,,,,,,,,,,,,,,,,,,,,,,
Deadlocks may be caused by Declarative Services,FELIX-490,12388647,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,14/Feb/08 10:07,03/Jun/08 10:26,14/Mar/19 02:47,03/Jun/08 10:26,framework-1.0.0,,,,,,,,,,scr-1.0.2,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The Declarative Services implementation has an AbstractComponentManager class which implementa the lifecycles of components in methods like enable, activate, deactivate, disable and dispose. All methods come in two flavors an (private) internal on which is synchronized and executes the action and a public unsynchronized one calling the internal one on a separate thread.

All internal methods are generally called only from the separate thread so are guaranteed to run sequentially on after the other due to the queing in the thread. One exception is the deactivate method which is always called directly and not in the separate thread. So a component may be deactivated while it is actually being activated. This is why the internal methods are synchronized - to delay a deactivation in case an activation already active.

The problem is, that activate calls in to the framework to get at services or to register services. At the same time the deactivate method may be called from within the framework for example because a required or static dependency has been unregistered. This may now create a deadlock between the activate method trying to register a service and the service unregistration trying to call the deactivate method.

The fix is to look at a more finegrained synchronization mechanism in the AbstractComponentManager.

Similar behaviour is reported in FELIX-489, which is currently analysed looking from the framework to the outside.",,,,,,,,,,,,SLING-245,,,,,,,,14/Feb/08 10:10;fmeschbe;threaddump.txt;https://issues.apache.org/jira/secure/attachment/12375569/threaddump.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58497,,,Tue Jun 03 10:26:12 UTC 2008,,,,,,0|i140z3:,231620,,,,,,,,14/Feb/08 10:08;fmeschbe;Link to related issue,14/Feb/08 10:10;fmeschbe;Thread dump showing this deadlock. This dump has been attached to SLING-245.,"03/Jun/08 10:26;fmeschbe;In Rev. 662733 of the AbstractCompeontManager class I modified the deactivate() method to call the deactivateInternal immediately unless the component is currently being activated. In this case deactivation is scheduled for asynchronous execution and a info (Rev. 662734, was WARN initially) is printed.

This should solve this deadlock, as the deactivateInternal method is only called from the separate thread and thus needs not waiting on the activateInternal method to finish, which in turn might be wait for the service registration event call causing the deactivation to terminate.",,,,,,,,,,,,,,,,,,,,,,,,
Intermittent deadlock while using declarative services in Tuscany   ,FELIX-489,12388521,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,rsivaram,rsivaram,13/Feb/08 08:38,30/May/08 18:15,14/Mar/19 02:47,15/Feb/08 22:21,framework-1.0.0,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"One of my tests using declarative services hangs intermittently. The stack trace from a debugger shows two threads waiting for locks owned by the other. I am using Felix framework 1.0.3 and SCR 1.0.0. The call from the main thread to getService is triggered by Tuscany - I am not sure if there are times when it shouldn't call bundleContext.getService. But the order of locking in the two threads are different leading to the deadlock - is it something that could be fixed? The main thread owns the ServiceRegistry lock and is waiting for the lock on ServiceFactoryComponentManager, while the configuration updater owns the ServiceFactoryComponentManager lock and is waiting for the ServiceRegistry lock.
 
 
Thread [main] (Suspended) 
   ServiceFactoryComponentManager.getService(Bundle, ServiceRegistration) line: 111 
   ServiceRegistrationImpl.getFactoryUnchecked(Bundle) line: 245 
   ServiceRegistrationImpl.getService(Bundle) line: 179 
   ServiceRegistry.getService(Bundle, ServiceReference) line: 238 
   Felix.getService(Bundle, ServiceReference) line: 2835 
   BundleContextImpl.getService(ServiceReference) line: 417 
   .............. (Tuscany)
 
Thread [Configuration Updater] (Suspended) 
   ServiceRegistry.unregisterService(Bundle, ServiceRegistration) line: 78 
   ServiceRegistrationImpl.unregister() line: 99 
   ServiceFactoryComponentManager(AbstractComponentManager).unregisterComponentService() line: 610 
   ServiceFactoryComponentManager(AbstractComponentManager).deactivateInternal() line: 464 
   ServiceFactoryComponentManager(AbstractComponentManager).reactivate() line: 142 
   ServiceFactoryComponentManager(ImmediateComponentManager).reconfigure(Dictionary) line: 399 
   ImmediateComponentManager$1.updated(Dictionary) line: 90 
   ConfigurationManager$ManagedServiceUpdate.run() line: 863 
   UpdateThread.run() line: 89 
 
 
",,,,,,,,,,,,,,,FELIX-490,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-13 09:07:42.466,,,no_permission,,,,,,,,,,,58498,,,Mon Feb 18 09:19:59 UTC 2008,,,,,,0|i0w0fr:,184876,,,,,,,,13/Feb/08 09:07;karlpauls;This is due to the fact that we hold the ServiceRegistry lock while calling out to bundle provided service factories. This is an oversight and should be fixed. I'll look into it.,"15/Feb/08 22:21;rickhall;After much discussion with Karl, we have created a patch that makes locking in the service registry more fine-grained to avoid holding locks when performing callbacks to the service factory. Rajini, please test and see if this resolves your issues. If so, please close the bug.","15/Feb/08 22:23;rickhall;If it was not clear, I committed the patch to trunk and deploy snapshots.","18/Feb/08 09:19;rsivaram;Thank you, Karl and Richard. The tests run fine with the latest snapshot.",,,,,,,,,,,,,,,,,,,,,,,
BND: Versions with fourth section all numbers are truncated,FELIX-477,12387498,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,carlos,carlos,30/Jan/08 19:36,18/Feb/08 17:46,14/Mar/19 02:47,12/Feb/08 05:10,maven-bundle-plugin-1.2.0,,,,,,,,,,maven-bundle-plugin-1.2.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"If i set the pom version or the Bundle-Version directive to 

1.1.0-200801301117
1.1.0.200801301117
1.1.0-20080130
1.1.0.20080130

the version in the manifest is truncated to 1.1.0

If version is 
1.1.0-qualifier
1.1.0.qualifier
then it's not truncated",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-31 04:24:27.371,,,no_permission,,,,,,,,,,,58510,,,Mon Feb 18 17:46:47 UTC 2008,,,,,,0|i1ap33:,270530,,,,,,,,30/Jan/08 19:37;carlos;I worked around it by adding a char to the version 1.1.0.v200801301117,31/Jan/08 04:24;mcculls;The BND tool has explicit code to drop the qualifier if it only contains numbers - I'll have to ask PeterK why this is.,"04/Feb/08 15:17;mcculls;Hi Carlos,

Here is Peter's rationale behind removing all-numeric qualifiers:

   ""Well, personally I think it is weird to use a number for the qualifier because it
    is now easily confused. And there is no need for this. It also will give a strange
    sorting order because it is sorted as string, not a number. But if people really
    feel that it should be allowed then I am willing to change it.""

So basically it's because people might see a numeric qualifier and expect it to be sorted
numerically (ie. 10>2), whereas actually the qualifier is always sorted as a string (10<2).

I can see why you might want to use something like 20080204 as a qualifier, because it
would sort correctly due to the fixed date width (but only if you use month before day!)
but currently you need to add a non-numeric character to stop Bnd from truncating it.

Please let me know if you think it's important for Bnd to retain all-numeric qualifiers, so
I can sort out a fix with Peter in time for the 1.2.1 release of the maven-bundle-plugin.
",11/Feb/08 09:28;mcculls;This is fixed in bndlib 0.0.237,12/Feb/08 05:10;mcculls;Updated pom to use bndlib 0.0.238 and deployed a new snapshot (1.2.1-20080212.050832-8),18/Feb/08 17:46;mcculls;Closing issue now that 1.2.1 has been released.,,,,,,,,,,,,,,,,,,,,,
Remote lock file can remain locked when using certain transport protocols,FELIX-474,12387439,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,mcculls,mcculls,30/Jan/08 06:10,18/Feb/08 17:49,14/Mar/19 02:47,30/Jan/08 06:25,framework-1.0.0,,,,,,,,,,maven-bundle-plugin-1.2.0,,,,Maven OBR Plugin (Deprecated),,,,,,,0,,,,,,"The OBR plugin uses a remote 'lock-file' to lock the remote OBR while it is being updated.
To lock the OBR, it uploads a file containing ""LOCKED"", to unlock it uploads an empty file.

For some reason with certain transports (such as file:) uploading an empty file does not
overwrite the existing file, which means the remote OBR will remain locked.

To workaround this issue we should upload a file containing a single space, and change
the lock check to trigger on files that are more than 2 bytes long. (this is simpler than
finding the root cause in maven or wagon and waiting for a fix)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58513,,,Mon Feb 18 17:49:27 UTC 2008,,,,,,0|i0w0g7:,184878,,,,,,,,30/Jan/08 06:25;mcculls;Fixed in trunk,18/Feb/08 17:49;mcculls;Closing now that 1.2.0 is released.,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in org.apache.felix.shell ShellServiceImpl getCommandReference,FELIX-473,12387367,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,npapadop,npapadop,29/Jan/08 10:43,31/Jan/08 12:09,14/Mar/19 02:47,30/Jan/08 22:12,,,,,,,,,,,,,,,,,,,,,,0,,,,,,"The implementation is obviously wrong, since m_commandNameMap contains Command object, not ServiceReference ones.

The bug is inherited from Oscar, but the resolution would have been cleaner back then, since the ServiceReference was readily available in the (now abandoned) CommandRecord objects the Map used to hold.

Nevertheless, the solution is to iterate through the Map.Entry's of the m_commandRefMap entrySet and compare the command names one by one.

Apparently no one ever uses this method, so the complexity/performance-penalty of the suggested solution is not an issue.",,,,,,,,,,,,,,,,,,,,29/Jan/08 10:45;npapadop;getCommandReference.patch;https://issues.apache.org/jira/secure/attachment/12374251/getCommandReference.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-30 22:12:25.73,,,no_permission,,,,,,,,,,,58514,,,Wed Jan 30 22:12:25 UTC 2008,,,,,,0|i1ap3r:,270533,,,,,,,,29/Jan/08 10:45;npapadop;The attached patch provide the simple suggested work around to the issue.,"30/Jan/08 22:12;rickhall;Yes, this is a old bug that was recreated during some code refactoring, apparently. Since the method is not really used, no one ever noticed. I have had some ideas for an improved shell service for a long time, but that is another story for another JIRA issue. :-)

I applied your patch...thanks. Please close the issue if you are satisfied with it.",,,,,,,,,,,,,,,,,,,,,,,,,
FilterImpl.toString() does not add escape characters,FELIX-471,12387080,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,angelovds,angelovds,24/Jan/08 19:20,25/Jan/08 08:47,14/Mar/19 02:47,24/Jan/08 23:30,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"FilterImpl.toString() is not a complete representation of the filter string that was used to create it: four characters ( '(', ')', '/' and '*' ) should be preceded by a '\' if they are to be used in a value.

For example,
  new FilterImpl(""(b=\(*)"").toString();
should return '(b=\(*)', but it returns '(b=(*)'. So, it can happen that a correct Filter f, when used in
  new FilterImpl(f.toString());
causes an InvalidSyntaxException.
(see http://www2.osgi.org/javadoc/r4/org/osgi/framework/Filter.html#toString() for what toString() should do).

See the attached patch for a proposed solution.",,,,,,,,,,,,,,,,,,,,24/Jan/08 19:21;angelovds;FELIX-471.patch;https://issues.apache.org/jira/secure/attachment/12373952/FELIX-471.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-24 19:26:39.45,,,no_permission,,,,,,,,,,,58516,,,Fri Jan 25 08:47:28 UTC 2008,,,,,,0|i0w0ev:,184872,,,,,,,,24/Jan/08 19:26;karlpauls;Good catch. This will make it into 1.0.2. Thanks.,24/Jan/08 23:30;karlpauls;I commited the patch after applying our code style. Please close this issue if everything works for you. ,"25/Jan/08 08:47;angelovds;Works fine, thanks.",,,,,,,,,,,,,,,,,,,,,,,,
Stack overflow with J9 VM & Foundation Profile,FELIX-469,12386874,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,horst.schwarz,horst.schwarz,22/Jan/08 19:14,23/Jan/08 16:40,14/Mar/19 02:47,23/Jan/08 16:40,framework-1.0.1,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"Starting a bundle in Felix with J9 VM (Foundation 1.1 Profile) a stack overflow error happens.

A breakpoint on the method java.net.URLClassLoader.targetURL(URLClassLoader.java:884) shows following parameters: URL base=felix://extensions/, String name=com/ibm/oti/net/www/protocol/felix/Handler.class

Here more infos from console trace:

j9 -jcl:foun11 -Djava.protocol.handler.pkgs=com.ibm.oti.net.www.protocol -Dorg.osgi.service.http.port=8080 -Dfelix.cache.dir=felix -Dfelix.cache.profile=fwdir -Dfelix.config.properties=file:felix.properties -jar felix.jar

Welcome to Felix.
=================

info     ERROR: Error starting file:/homex/demxdrs1/projects/hit73/aps/java/jars/http_all-1.1.0.jar (org.osgi.framework.BundleException: Activator start error.)
java.lang.StackOverflowError
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:587)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
        ...
        ...
        at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findClassImpl(URLClassLoader.java:980)
	at java.net.URLClassLoader$4.run(URLClassLoader.java:549)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:547)
	at com.ibm.oti.vm.URLSystemClassLoader.findClass(URLSystemClassLoader.java:27)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:604)
	at com.ibm.oti.vm.URLSystemClassLoader.loadClass(URLSystemClassLoader.java:60)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:561)
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:114)
	at org.apache.felix.framework.util.SecureAction.forName(SecureAction.java:106)
	at org.apache.felix.framework.URLHandlers.createURLStreamHandler(URLHandlers.java:157)
	at java.net.URL.setupStreamHandler(URL.java:523)
	at java.net.URL.<init>(URL.java:403)
	at java.net.URLClassLoader.targetURL(URLClassLoader.java:884)
	at java.net.URLClassLoader.findResourceImpl(URLClassLoader.java:696)
	at java.net.URLClassLoader$5.run(URLClassLoader.java:604)
	at java.security.AccessController.doPrivileged(AccessController.java:213)
	at java.net.URLClassLoader.findResource(URLClassLoader.java:602)
	at java.lang.ClassLoader.getResource(ClassLoader.java:387)
	at java.lang.ClassLoader.getResourceAsStream(ClassLoader.java:447)
	at java.lang.ClassLoader.getSystemResourceAsStream(ClassLoader.java:546)
	at java.util.ResourceBundle$1.run(ResourceBundle.java:239)
	at java.security.AccessController.doPrivileged(AccessController.java:191)
	at java.util.ResourceBundle.handleGetBundle(ResourceBundle.java:236)
	at java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:120)
	at java.util.ResourceBundle.getBundle(ResourceBundle.java:79)
	at java.util.Locale$3.run(Locale.java:677)
	at java.security.AccessController.doPrivileged(AccessController.java:191)
	at java.util.Locale.getBundle(Locale.java:675)
	at java.util.Currency.getInstance(Currency.java:83)
	at java.text.DecimalFormatSymbols.<init>(DecimalFormatSymbols.java:70)
	at java.text.NumberFormat.getInstance(NumberFormat.java:271)
	at java.text.NumberFormat.getNumberInstance(NumberFormat.java:346)
	at java.text.NumberFormat.getInstance(NumberFormat.java:268)
	at java.text.SimpleDateFormat.<init>(SimpleDateFormat.java:102)
	at java.text.SimpleDateFormat.<init>(SimpleDateFormat.java:95)
	at java.text.SimpleDateFormat.<init>(SimpleDateFormat.java:63)
	at org.knopflerfish.service.log.LogRef.doLog(LogRef.java:263)
	at org.knopflerfish.service.log.LogRef.info(LogRef.java:394)
	at org.knopflerfish.bundle.http.Activator.start(Activator.java:111)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
	at org.apache.felix.framework.Felix._startBundle(Felix.java:1536)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1470)
	at org.apache.felix.framework.Felix.setFrameworkStartLevel(Felix.java:1065)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:258)
	at java.lang.Thread.run(Thread.java:777)


Thanks in advance, Horst Schwarz
","Linux (x86, 2.6.22.13), IBM J9 2.3 Foundation 1.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-22 19:27:11.916,,,no_permission,,,,,,,,,,,58518,,,Wed Jan 23 16:40:10 UTC 2008,,,,,,0|i1ap47:,270535,,,,,,,,22/Jan/08 19:27;karlpauls;This should be fixed in trunk and 1.1.0-SNAPSHOT. Could you please try whether trunk is working for you because I'm planning to cut Felix 1.0.2 from trunk any day now?,"23/Jan/08 16:33;horst.schwarz;Hi Karl, thanks a lot, it works fine with Felix build from trunk (1.1.0-SNAPSHOT) sources!","23/Jan/08 16:40;rickhall;So, I guess that means we can close this issue.",,,,,,,,,,,,,,,,,,,,,,,,
Duplicate Bind and Unbind methods may be created,FELIX-468,12386835,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,22/Jan/08 09:11,11/Mar/08 07:10,14/Mar/19 02:47,22/Jan/08 10:08,maven-scr-plugin-1.0.2,,,,,,,,,,maven-scr-plugin-1.0.3,,,,SCR Tooling,,,,,,,0,,,,,,"Consider an abstract base class BC and a concrete extension CC of the base class. The base class BC defines a reference and has the SCR plugin generate the bind/unbind methods. The extension class CC inherits the reference definition but the bind/unbind methods need not be created as they already exist on the base class.

The SCR plugin correctly handles this situation if the base class BC is treated before the extension class CC. If first the extension class CC is handled, the base class has not be handled yet, so the bind/unbind methods will be generated on the extension class. Next the base class is handled and the bind/unbind methods are created again.

Clearly the definition of the bind/unbind methods on the extension class is not needed - and may even result in runtime errors if the bind/unbind methods in the extension class are created to access private fields of the base class intended for use by the base class bind/unbind methods.

This only happens if both the base class and the extension class are located in the same project. The proposed solution to this issue is to sort the classes to be handled according to their inheritence to ensure handling base classes before their extensions.

Will provide a patch for this.",,,,,,,,,,,,,,,,,,,,22/Jan/08 09:50;fmeschbe;FELIX-468.patch;https://issues.apache.org/jira/secure/attachment/12373737/FELIX-468.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58519,,,Tue Jan 22 10:08:56 UTC 2008,,,,,,0|i0vxxr:,184471,,,,,,,,22/Jan/08 09:50;fmeschbe;Patch implementing a Comparator to sort the list of JavaClassDescriptors to be handled by the plugin.,22/Jan/08 10:06;fmeschbe;Applied the patch in Rev. 614161,"22/Jan/08 10:08;fmeschbe;Deployed new SNAPSHOT build 1.0.3-20080122.100638-1.

Scheduling for next SCR plugin release and closing this issue now.",,,,,,,,,,,,,,,,,,,,,,,,
R4SearchPolicyCore.findResources(String) do not aggregate the Enumeration founds,FELIX-467,12386511,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,sauthieg,sauthieg,17/Jan/08 16:24,02/May/13 02:29,14/Mar/19 02:47,22/Feb/08 10:22,framework-1.0.0,,,,,,,,,,framework-1.0.3,,,,Framework,,,,,,,0,,,,,,"This issue is linked to FELIX-466

The R4SearchPolicyCore.findResources(String) method just exits early on a first hit, and doesn't continue into imported packages.

It should aggregate the different hits and return all matching resources.",,,,,,,,,,,,,,,,,,,,25/Jan/08 13:13;karlpauls;FELIX-467-karl.patch;https://issues.apache.org/jira/secure/attachment/12374034/FELIX-467-karl.patch,25/Jan/08 16:18;rickhall;FELIX-467-rick.patch;https://issues.apache.org/jira/secure/attachment/12374053/FELIX-467-rick.patch,18/Jan/08 12:30;sauthieg;FELIX-467-tests-bundles.zip;https://issues.apache.org/jira/secure/attachment/12373510/FELIX-467-tests-bundles.zip,18/Jan/08 12:24;sauthieg;FELIX-467.patch;https://issues.apache.org/jira/secure/attachment/12373509/FELIX-467.patch,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,2008-01-21 21:31:24.907,,,no_permission,,,,,,,,,,,58520,,,Fri Feb 22 10:22:18 UTC 2008,,,,,,0|i0w0hz:,184886,,,,,,,,"18/Jan/08 12:24;sauthieg;This patch mainly change the R4SearchPolicyCore.findResources() method to create a combined enumeration of available resources.

I've added a CompoundEnumeration class that combine multiple Enumeration in a single one.
There are tests for this new Enumeration that are automatically launched by maven.","18/Jan/08 12:30;sauthieg;Here are a use case / test for this issue.

* 2 bundles :
** Importer, that have a resource locally and that define an import on the package resource
** Exporter, that only export a package that contains a resource file

The importer use its bundle ClassLoader to get access to the resources.

The zip contains 3 eclipse project (1 exporter and 2 importers: the first one that do Import-Package and the second one that do a DynamicImport-Package)","21/Jan/08 21:31;rickhall;I have some doubts about the proposed solution the more I think about it. I am not sure what we can do about this issue, but think about the case we are proposing where we aggregate results from the boot class path as well as from imports and local class path.

If we think about it logically, findResources() returns resources that are accessible from the bundle's class path. However, it would never be possible for the bundle to access classes from the boot class path, imports, and local class path at the same time.

Consider a hypothetical case, where we want to query for some component.xml file which gives us information about component classes we can load and instantiate. If we aggregate everything, it is possible that we will return /org/foo/component.xml from the boot class path, imports, and the local class path, where each one defines potentially different classes (e.g., BootClass.class, ImportClass.class, LocalClass.class) to be loaded. If the bundle then tried to load class corresponding to each resource, the class load will only be delegated to the boot class path, it would never search imports or the local class path and thus never be able to load those classes even though it discovered the corresponding resources. Likewise if we were only talking about imports and the local class path.

In short, it almost seems like our result needs to be filtered so that first found package wins and we filter out later discovered resources of the same package, i.e., the same behavior for resources as for classes. Of course, this would be a pain in the butt.

As a side note, I applied these patches locally and we still pass our normal TCK tests, so we could just go with the proposed approach and not be so pedantic.

Or perhaps my reasoning is just all wrong...anyone?","22/Jan/08 18:13;sauthieg;Thanks for your review Richard

The mean of findResources() in a ClassLoader if to find multiple files at different location, so I cannot see why I should not be able to browse resources from the boot class path and imports and local classpath.

You assume that theses resources are classes centric, and in this case I follow your meaning: If the external resource define a class (that the exporter bundle probably have access to), how can we be sure that the importer bundle will be able to load the defined classes.
OK, this will be the scenario if the importer do not have managed that kind of issue.

And this is an application issue, no ? This is the job of the application to assume that sometimes, ClassNotFoundExceptions are thrown and that it may be good to handle them :)

And if the resources are just images or sounds ? Does this mean anything that the importer bundle will not be able the exporter classes ?","22/Jan/08 19:35;rickhall;Even with resources, I would argue that this is still somewhat problematic. For example, perhaps I want to set up the framework so that I am the sole provider of the package org.foo. To achieve this, I put org.foo on the boot delegation property. The end result of the proposed approach is that for classes I am the sole provider, but for resources, it is possible for other people to provide resources too.

I am not arguing that this is a hugely important issue, but it is an issue nonetheless. The real question is whether we want to ignore it (either completely or just for now).","22/Jan/08 19:40;rickhall;For what its worth, Tom Watson says Equinox works like this:

-----

Here is what we do in Equinox.

1) First of all, we do not do anything tricky for 1.4 vs 1.5. We assume ClassLoader.getResources is final and always delegates to the boot class loader for every package.
2) For Bundle.getResources() we do not actually ask the ClassLoader.getResources. Instead we wire directly into the proper OSGi delegation model. This unfortunately means Bundle.getResources() and ClassLoader.getResources could potentially return different results depending on what was available from the boot class loader.

Lets ignore that little issue and assume we can override ClassLoader.getResources and do proper OSGi delegation. The process should look something like this:

1) Check to see if the resource is in the java/* namespace. If so *only* delegate to boot and return the Enumeration returned from boot.
2) Check to see if the resource is on the o.o.f.bootdelegation list. If so get the Enumeration from boot and pass the result to the next step.
3) Check to see if the resource is imported (using Import-Package). If so delegate to the exporter's local (and fragments) classpath and return the results in a compound Enumeration which includes the results from the previous step. If not imported then pass the incoming Enumeration to the next step.
4) Check to see if the resource is accessed from a required bundle (using Require-Bundle). If so delegate to each required bundle's local (and fragments) classpath which exports the requested resource package and compound the results with the incoming Enumeration. Pass the results to the next step.
5) Delegate to the local bundle's (and fragments) classpath. Compound the results with the incoming Enumeration and return the results.

----

This approach is slightly different than ours, but still can lead to a situation where packages that are boot delegated AND imported can be combined for resources. It is different than our proposal because it explicitly stops if the package is imported.",25/Jan/08 13:13;karlpauls;I massaged the proposed patch a bit and made it behave according to what equinox does. It seems to work for me - what do others think? In case we can agree on this patch I could still make it part of Felix 1.0.2...,"25/Jan/08 16:21;rickhall;I massaged it a little more, mostly just adding support get getResources() for module wires, since it wasn't implemented yet. I think I will go ahead and commit this...we can always continue to make tweaks on it.

Guillaume, if this still resolves your issue, please close. Otherwise, suggest more massaging. :-)",22/Feb/08 10:22;sauthieg;Thanks for the massaging guys :),,,,,,,,,,,,,,,,,,
Cannot retrieve service to be unbound in unbind method taking ServiceReference,FELIX-464,12386264,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,15/Jan/08 11:58,30/May/08 18:16,14/Mar/19 02:47,15/Jan/08 12:25,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Sometimes, the service about to be unbound needs to be retrieved from the ComponentContext if the unbind method takes the ServiceReference instead of the service object itself. In these cases, the service fails to be returned because the AbstractComponentManager.getDependencyManager(String) only returns DependencyManager instances whose size is not zero.

This now constitutes a race condition, as the service count has already been decremented in the DependencyManager when the unbind method is called. The service itself, though, is actually still available.

The fix is to always return any available DependencyManager regardless of the perceived size. The DependencyManager will then return the service or not dependending on whether the service is still available.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58523,,,Tue Jan 15 12:25:05 UTC 2008,,,,,,0|i0w17j:,185001,,,,,,,,15/Jan/08 12:25;fmeschbe;Fixed in Rev. 612093 and deployed new SNAPSHOT 0.9.0-20080115.122018-10,,,,,,,,,,,,,,,,,,,,,,,,,,
"Re: Felix does not start with bootdelegation=""*""",FELIX-463,12386242,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,sahoo,sahoo,15/Jan/08 05:02,16/Jan/08 04:52,14/Mar/19 02:47,16/Jan/08 04:52,framework-1.0.0,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"I am having trouble starting Felix when I use -Dorg.osgi.framework.bootdelegation=""*"". When I run using the following command:
'/usr/bin/java -Dorg.osgi.framework.bootdelegation=""*"" -jar bin/felix.jar', it fails like this:

WARNING: *** Class 'org.apache.felix.shell.impl.Activator' was not found. Bundle 1 does not import package 'org.apache.felix.shell.impl', nor is the package exported by any other bundle or available from the system class loader. *** (java.lang.ClassNotFoundException: *** Class 'org.apache.felix.shell.impl.Activator' was not found. Bundle 1 does not import package 'org.apache.felix.shell.impl', nor is the package exported by any other bundle or available from the system class loader. ***)ERROR: Error starting file:bundle/org.apache.felix.shell-1.1.0-SNAPSHOT.jar (org.osgi.framework.BundleException: Not found: org.apache.felix.shell.impl.Activator)
java.lang.ClassNotFoundException: org.apache.felix.shell.impl.Activator
       at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3438)        at org.apache.felix.framework.Felix._startBundle(Felix.java:1540)
       at org.apache.felix.framework.Felix.startBundle(Felix.java:1479)
       at org.apache.felix.framework.Felix.setFrameworkStartLevel(Felix.java:1074)        at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:258)        at java.lang.Thread.run(Thread.java:595)

Section #3.8.4, Overall Search Order, of OSGi Service Platform Release 4 spec does not clearly (or I don't understand it well enough) state what should be the behavior. Relevant portions of the spec is given below:

/1 If the class or resource is in a java.* package, the request is delegated to the parent class loader; otherwise, the search continues with the next step. If the request is delegated to the parent class loader and the class or resource is not found, then the search terminates and the request fails.
2 If the class or resource is from a package included in the boot delegation list (org.osgi.framework.bootdelegation), then the request is delegated to the parent class loader. If the class or resource is found there, the search ends.
/
Unlike point #1 above, point #2 does not mandate the search to terminate. I can understand the search terminating for java.* packages, but why for other packages? It seems Felix is terminating the search, therefore I am seeing this failure. Can anyone please clarify this? I am using ""*, "" because I want to see how I can make packages from some library jars available to bundles without having to set org.osgi.framework.system.packages property?

I am hoping that if I add my library jars in system classpath and set bootdelegation=""*"", the library jar's content will be automatically available to other bundles even if I don't set org.osgi.framework.system.packages property. Is this not going to work?

Thanks,
Sahoo ",JDK 1.5.0_06 or 1.6 on Solaris 10/x86,,,,,,,,,,,,,,,,,,,15/Jan/08 15:33;rickhall;bootdelegation.patch;https://issues.apache.org/jira/secure/attachment/12373172/bootdelegation.patch,15/Jan/08 10:32;karlpauls;bootdelegation.patch;https://issues.apache.org/jira/secure/attachment/12373156/bootdelegation.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-01-15 08:22:10.984,,,no_permission,,,,,,,,,,,58524,,,Wed Jan 16 04:52:44 UTC 2008,,,,,,0|i1ap4n:,270537,,,,,,,,"15/Jan/08 08:22;karlpauls;No. It doesn't work like this. You still need to make the packages your bundles explicitly import available form the system bundle (i.e., add them to the system.packages property). The bootdelegation is needed only for the case where you want to make packages available to bundles _without_ them needing to import them. However, if they import them then it doesn't work. In other words, this is not a bug in Felix but you will have to adjust your assumptions. 

What happens in your case is that the bootdelegation=* effectively short-cuts the whole resolving process and makes Felix use the bootclassloader _all_ the time. That one, however, doesn't know about classes that come from a bundle -- hence, the CNFE.  Do try to avoid using the bootdelegation feature unless your really need it - it's not a convenience feature but a last resort.","15/Jan/08 08:43;mcculls;Re-opening, because I think we need to at least clarify the spec: it appears to suggest we should continue the search if non java.* bootdelegation packages are not found in the parent classloader - note this is also how the reference implementation behaves (this is just an FYI, as the RI could be wrong)","15/Jan/08 08:45;mcculls;reducing priority, as there are other ways to do this (ie. export packages via the system bundle)","15/Jan/08 08:46;karlpauls;After re-reading the spec, I happen to agree. We should continue normally in case we can not load a class from the bootdelegation. I'll look into it.",15/Jan/08 10:32;karlpauls;I think the attached patch should fix the issue. ,"15/Jan/08 10:59;fmeschbe;Hmm, as m_bootPkgs also contains the java.* specification but step 1 of the resolution process says to abort in case a java.* class cannot be loaded from the parent class loader, this patch would actually try to load java.* classes from within....

So probably, the exception handler should check whether the class (or package) is from java.* and fail if so, otherwise continue.

WDYT ?","15/Jan/08 12:21;lgalfaso;R 4.1 of the standard has a flow describing the expected behavior and it states that this is:
 1. If the class or resource is in a java.* package, the request is delegated to the parent class loader. If the resource or class is not found, the search fails.
 2. If the class or resource is from a package included in the boot delegation list (org.osgi.framework.bootdelegation), then the request is delegated
to the parent class loader. If the class or resource is found there, the search ends, otherwise the search continues with the next step.

So Felix Meschberger is right.
","15/Jan/08 15:34;rickhall;How about my attached patch? It just checks to see if the result was for ""java.*"", if so it always terminates, if not, it only terminates if something was found. If there is a better approach, someone can take a crack at cleaning up the patch.",15/Jan/08 15:39;fmeschbe;To me it looks good.,15/Jan/08 18:29;karlpauls;To me too.,16/Jan/08 04:52;sahoo;I updated my workspace from trunk and it now works. I am closing the issue per mail from Richard in users forum.,,,,,,,,,,,,,,,,
BND: -split-package:=merge-first behaves like merge-last,FELIX-458,12386113,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,mcculls,mcculls,12/Jan/08 17:01,18/Feb/08 17:46,14/Mar/19 02:47,22/Jan/08 02:59,maven-bundle-plugin-1.2.0,,,,,,,,,,maven-bundle-plugin-1.2.1,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"BND has a split-package directive used to combine packages with different/overlapping content. However, the 'merge-first' setting appears to behave like 'merge-last' which means you cannot use this to overlay local classes on top of inlined dependencies, because the local class would be overwritten by the one from the dependency (as it appears after it on the classpath, and is merged last).

The current workaround is to use Include-Resource to explicitly overwrite the affected class with the correct version.

I've raised this issue with Peter, and suggested a fix. This issue will target the next maintenance release after version 1.2.0 of the plugin.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58529,,,Mon Feb 18 17:46:46 UTC 2008,,,,,,0|i1ap5r:,270542,,,,,,,,22/Jan/08 02:59;mcculls;Updated bndlib to 0.0.231 and deployed 1.2.1-SNAPSHOT,18/Feb/08 17:46;mcculls;Closing issue now that 1.2.1 has been released.,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect URI generated by obr-plugin:deploy,FELIX-457,12386094,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,annachen,annachen,11/Jan/08 23:34,18/Feb/08 17:49,14/Mar/19 02:47,29/Jan/08 05:52,framework-1.0.0,,,,,,,,,,maven-bundle-plugin-1.2.0,,,,Maven OBR Plugin (Deprecated),,,,,,,0,,,,,,"When I tried deploying to a remote repository, the URI generated by the maven-obr-plugin was './C:/MAVEN_REPO/foo.jar' instead of './foo.jar'
I believe this is because the extractFileName method in the PathFile class is using '/' instead of File.seperatorChar because after I replaced that, it worked as expected.","Windows XP, Java 1.6.0_02, Maven 2.0.8, maven-obr-plugin-1.0.0 (release)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-22 03:16:54.084,,,no_permission,,,,,,,,,,,58530,,,Mon Feb 18 17:49:27 UTC 2008,,,,,,0|i0w0gn:,184880,,,,,,,,"22/Jan/08 03:16;mcculls;FYI, the change to extractFileName was introduced by FELIX-370 to fix problems with installing files on Windows. Changing it back will break the other goals in the maven-obr-plugin. Instead we should fix the deploy goal(s) so that they normalize the path passed to the PathFile class, as done by the install goal(s).","22/Jan/08 03:25;mcculls;Also, File.separatorChar is not used is because '\' does not represent a path separator for a URI, which is what PathFile expects...","29/Jan/08 05:52;mcculls;I've made several changes to use URIs throughout the code, and removed the PathFile class.
Could you try the latest plugin (either use the 1.2.0-SNAPSHOT build, or compile from trunk)
and let me know if it solves your issue.

FYI, you can use the following snapshot plugin repository to download the 1.2.0-SNAPSHOT:

  <pluginRepositories>
    <pluginRepository>
      <id>ops4j-snapshots</id>
      <url>http://repository.ops4j.org/mvn-snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-obr-plugin</artifactId>
        <version>1.2.0-SNAPSHOT</version>
      </plugin>
    </plugins>
  </build>
",29/Jan/08 22:18;annachen;It worked. Thank you.,18/Feb/08 17:49;mcculls;Closing now that 1.2.0 is released.,,,,,,,,,,,,,,,,,,,,,,
NumberFormatException thrown if bundle manifest contains a version range with spaces,FELIX-456,12386046,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,mcculls,mcculls,11/Jan/08 11:39,18/Feb/08 17:49,14/Mar/19 02:47,11/Jan/08 13:16,framework-1.0.0,,,,,,,,,,framework-1.0.1,,,,Maven OBR Plugin (Deprecated),,,,,,,0,,,,,,"When installing a bundle that has a version range with spaces in its manifest, for example:

   some.pkg.name;version=""(0, 2]""

the OBR install mojo will report a NumberFormatException, because the bindex implementation
does not handle spaces inside the quoted string. However, the OSGi spec says version strings
may contain whitespace.

The VersionRange code needs a small fix to strip whitespace from around the version numbers.",,,,,,,,,,,,,,,,,,,,11/Jan/08 13:15;mcculls;pom.xml;https://issues.apache.org/jira/secure/attachment/12372975/pom.xml,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58531,,,Mon Feb 18 17:49:27 UTC 2008,,,,,,0|i1ap5z:,270543,,,,,,,,11/Jan/08 13:15;mcculls;Example pom that recreates the exception,"11/Jan/08 13:16;mcculls;Committed patch to bindex code: version pattern now accepts whitespace around version numbers, and trims it before passing to the framework version class","12/Jan/08 12:10;mcculls;Forwarded patch to PeterK, as this issue also exists in the bindex code available on the OSGi site.",18/Feb/08 17:49;mcculls;Closing now that 1.2.0 is released.,,,,,,,,,,,,,,,,,,,,,,,
Manifest generated by the bundle:manifest goal contains invalid version strings,FELIX-455,12386017,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,mcculls,mcculls,11/Jan/08 02:09,30/Jan/08 10:39,14/Mar/19 02:47,11/Jan/08 13:36,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,14/Jan/08 00:00,0,,,,,,Reported by Eugene Kuleshov: the manifest generated by the bundleplugin 'manifest' goal can contain invalid version strings.,,,,,,,,,,,,,,,,,,,,11/Jan/08 02:10;mcculls;testcase.zip;https://issues.apache.org/jira/secure/attachment/12372954/testcase.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58532,,,Wed Jan 30 10:39:30 UTC 2008,,,,,,0|i0w0f3:,184873,,,,,,,,11/Jan/08 02:10;mcculls;Sample testcase (assumes you have snapshots of some Maven 2.1 artifacts installed),"11/Jan/08 13:36;mcculls;Resolved the problem with invalid versions from the manifest goal by switching to use the Builder class in place of Analyzer, because it provides additional cleanup of version strings.","30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,,,,,,,,,,
Exporter crashes upon device with UPnPAction without a linked UPnPStateVariable,FELIX-450,12385875,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,stefano.lenzi,stefano.lenzi,stefano.lenzi,09/Jan/08 15:05,18/Feb/08 11:00,14/Mar/19 02:47,09/Jan/08 17:19,,,,,,,,,,,,,,,UPnP Subproject,,,,,,,0,,,,,,If a UPnPDevice service is installed on the framework and it contains a UPnPAction with input or output argument but no UPnPStateVariable with the same of argument exist on the  UPnPService the ThreadExporter fail to create the real UPnP device and it crashes.,UPnP Base Driver 0.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58536,,,Mon Feb 18 11:00:08 UTC 2008,,,,,,0|i1ap6f:,270545,,,,,,,,09/Jan/08 17:19;stefano.lenzi;Resolved with svn commit  610454,18/Feb/08 11:00;stefano.lenzi;Fixed,,,,,,,,,,,,,,,,,,,,,,,,,
Search of activation/deactivation method might get wrong result,FELIX-446,12385493,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,03/Jan/08 14:12,11/Mar/08 07:10,14/Mar/19 02:47,03/Jan/08 14:39,maven-scr-plugin-1.0.1,,,,,,,,,,maven-scr-plugin-1.0.2,,,,SCR Tooling,,,,,,,0,,,,,,The search for the activation and deactivation method might get a wrong method as it is examining the first method with the same name and one parameter. if the class in question has several activation methods with different parameters this might lead to wrong failure messages.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58540,,,2008-01-03 14:12:37.0,,,,,,0|i0vxqf:,184438,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bind/Unbind methods are not found in inherited classes,FELIX-445,12385432,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,02/Jan/08 11:02,11/Mar/08 07:10,14/Mar/19 02:47,02/Jan/08 11:05,maven-scr-plugin-1.0.1,,,,,,,,,,maven-scr-plugin-1.0.2,,,,SCR Tooling,,,,,,,0,,,,,,"If a service extends a class from another bundle and the inherited class implements the bind/unbind methods for a reference, the scr plugin does not always find these methods as getDeclaredMethods() on the Class does not find them.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58541,,,2008-01-02 11:02:56.0,,,,,,0|i0vxq7:,184437,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve implemented service detection,FELIX-444,12385248,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,27/Dec/07 14:36,11/Mar/08 07:10,14/Mar/19 02:47,02/Jan/08 10:12,maven-scr-plugin-1.0.1,,,,,,,,,,maven-scr-plugin-1.0.2,,,,SCR Tooling,,,,,,,0,,,,,,"The current mechanism to detect which services a component implements is buggy: if in the class hierarchy an interface is listed twice, this interface will be added twice to the list of implemented services.
If an interface extends another interface, and the component implements the extension, only the extended interface is added to the list. All inherited should be added as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58542,,,2007-12-27 14:36:29.0,,,,,,0|i0vxpb:,184433,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException during Startup,FELIX-443,12385164,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,cziegeler,cziegeler,24/Dec/07 13:23,07/Jan/08 09:07,14/Mar/19 02:47,07/Jan/08 09:07,,,,,,,,,,,framework-1.0.0,,,,Configuration Admin,,,,,,,0,,,,,,"I get an NPE with latest code from svn; this happens will trying to process the LogbackManager from Sling

java.lang.NullPointerException
	at org.apache.felix.cm.impl.ConfigurationManager.access$400(ConfigurationManager.java:92)
	at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceTracker.addingService(ConfigurationManager.java:1333)
	at org.osgi.util.tracker.ServiceTracker$Tracked.trackAdding(ServiceTracker.java:1021)
	at org.osgi.util.tracker.ServiceTracker$Tracked.trackInitialServices(ServiceTracker.java:882)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:289)
	at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:228)
	at org.apache.felix.cm.impl.ConfigurationManager$AbstractManagedServiceTracker.<init>(ConfigurationManager.java:1297)
	at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceTracker.<init>(ConfigurationManager.java:1322)
	at org.apache.felix.cm.impl.ConfigurationManager.start(ConfigurationManager.java:213)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
	at org.apache.felix.framework.Felix._startBundle(Felix.java:1583)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1517)
	at org.apache.felix.framework.Felix.setFrameworkStartLevel(Felix.java:1102)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:258)
	at java.lang.Thread.run(Thread.java:613)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58543,,,Thu Dec 27 08:36:56 UTC 2007,,,,,,0|i0vxr3:,184441,,,,,,,,"27/Dec/07 08:36;cziegeler;I applied a fix in revision 607019: instead of directly accessing the ConfigurationManager from the embedded classes, the CM is passed as an instance variable and the classes are now static.",,,,,,,,,,,,,,,,,,,,,,,,,,
win32 alias does not work for native clauses,FELIX-438,12384785,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,17/Dec/07 16:50,06/Mar/08 23:49,14/Mar/19 02:47,06/Mar/08 23:49,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"The osname win32 in a native library clause is an alias for all windows platforms but this doesn't seem to work atm (see user list: http://www.mail-archive.com/users@felix.apache.org/msg00697.html).

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58548,,,Thu Mar 06 23:49:05 UTC 2008,,,,,,0|i0w0lb:,184901,,,,,,,,17/Dec/07 22:48;karlpauls;I just commited a patch that should fix this issue. Please test and comment if it works now.,06/Mar/08 23:49;karlpauls;I assume this is working now. ,,,,,,,,,,,,,,,,,,,,,,,,,
"bundleplugin creates ""Import-Package: *"" header in manifest for bundle without classes",FELIX-437,12384764,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,karlpauls,karlpauls,17/Dec/07 13:48,30/Jan/08 10:39,14/Mar/19 02:47,03/Jan/08 09:55,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"It looks to me as if the bundleplugin adds the following header:

Import-Package: *

in case the bundle it should create doesn't contain any real java classes. This is wrong since the Import-Package header should just not be present in this case (and is not allowed to contain a star at any rate). ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-17 14:13:05.934,,,no_permission,,,,,,,,,,,58549,,,Wed Jan 30 10:39:28 UTC 2008,,,,,,0|i1ap7b:,270549,,,,,,,,17/Dec/07 14:13;mcculls;I think this will need a fix to bndlib...,"17/Dec/07 15:28;mcculls;Tracked this down to aQute/lib/osgi/Analyzer.java line 251 (in bndlib 0.0.223)
where it checks ""p.indexOf('*') > 0"" - this will ignore any strings starting with
* as the index will be 0

I changed this locally to use ""indexOf(...) >= 0"" and it resolves the problem.
(there are a couple of checks on the same line which should also be fixed)","26/Dec/07 03:34;mcculls;This has been fixed in Bnd 0.0.226

I've asked for it to be uploaded to central: http://jira.codehaus.org/browse/MAVENUPLOAD-1871",03/Jan/08 09:55;mcculls;Upgraded to 0.0.226 version of bndlib and deployed new snapshot.,"30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,,,,,,,,
Add support for the authentication type and remote user data if HttpContext.handleSecurity is used.,FELIX-434,12384296,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,10/Dec/07 10:56,26/Mar/08 09:25,14/Mar/19 02:47,26/Mar/08 09:25,,,,,,,,,,,,,,,HTTP Service,,,,,,,0,,,,,,"Currently the HttpService implementation calls the HttpContext.handleSecurity method to check authentication and to handle the request depending on the result. But the remote user and authentication type set as request attributes are not used to implement the getRemoteUser() and getAuthType() methods.

Will attach a patch to implement a simple HttpServletRequestWrapper which implements these two methods in terms of the defined request attributes (or fall back to the servlet container implementations if no such attribute is set).",,,,,,,,,,,,,,,,,,,,10/Dec/07 10:57;fmeschbe;FELIX-434.patch;https://issues.apache.org/jira/secure/attachment/12371342/FELIX-434.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58552,,,Wed Mar 26 09:25:12 UTC 2008,,,,,,0|i0vxqn:,184439,,,,,,,,10/Dec/07 10:57;fmeschbe;Patch implementing said simple wrapper and using that wrapper when handling the request,08/Jan/08 10:11;fmeschbe;I will apply this patch.,"10/Jan/08 15:43;fmeschbe;This issue is blocked by FELIX-55 because to use the HttpServletRequestWrapper, we need at least Servlet API 2.3.","26/Mar/08 09:25;fmeschbe;By fixing FELIX-55 applying the respective patch and this patch, I consider this issue fixed in Rev. 641218.

Therefore, I close this issue.",,,,,,,,,,,,,,,,,,,,,,,
On Windows default maven includes may not work due to backslash issues,FELIX-431,12384069,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,06/Dec/07 11:18,06/Dec/07 11:39,14/Mar/19 02:47,06/Dec/07 11:39,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,The BundlePlugin.getMavenResourcePaths method has a fix to convert backslashes to forwards slashes around line 625 of the class in Rev. 596053. Unfortunately this only fixes the part of the FS location path but not the part of the bundle local path. These names may still have backslashes in them. The fix is to just apply the respective character replacement to the name in addtion to the path.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58555,,,Thu Dec 06 11:39:37 UTC 2007,,,,,,0|i0w0b3:,184855,,,,,,,,06/Dec/07 11:39;fmeschbe;Fixed in Rev. 601704 and deployed new snapshot build number 1.1.0-20071206.112315-22.,,,,,,,,,,,,,,,,,,,,,,,,,,
Error with optional dependency : cannot load the associated NullableObject,FELIX-427,12383622,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,fornacif,fornacif,30/Nov/07 12:48,10/Dec/07 15:13,14/Mar/19 02:47,10/Dec/07 15:13,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"An error occurs when iPOJO try to load the NullableObject associated to an optional dependency. More specially, the dependency is declared in the Super Class of the component and this super Class is located in another bundle. So the manifest of the bundle containing the iPOJO component doesn't contain an Import-package for this dependency (BND doesn't generate the import dynamically).

The trace for this error is below : 

java.lang.NullPointerException
    at 
org.apache.felix.ipojo.handlers.dependency.nullable.NullableObjectWriter.dump(NullableObjectWriter.java:52)
    at 
org.apache.felix.ipojo.handlers.dependency.DependencyHandler.createNullableObject(DependencyHandler.java:326)
    at 
org.apache.felix.ipojo.handlers.dependency.DependencyHandler.start(DependencyHandler.java:430)
    at org.apache.felix.ipojo.HandlerManager.start(HandlerManager.java:100)
    at 
org.apache.felix.ipojo.InstanceManager.start(InstanceManager.java:208)
    at 
org.apache.felix.ipojo.ComponentFactory.createComponentInstance(ComponentFactory.java:317)
    at 
org.apache.felix.ipojo.ComponentFactory.createComponentInstance(ComponentFactory.java:256)
    at 
org.apache.felix.ipojo.ComponentFactory.updated(ComponentFactory.java:630)
    at 
org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceFactoryUpdate.run(ConfigurationManager.java:1020)
    at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:89)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-02 13:47:43.847,,,no_permission,,,,,,,,,,,58559,,,Mon Dec 10 15:13:35 UTC 2007,,,,,,0|i0vxrb:,184442,,,,,,,,02/Dec/07 13:47;clement.escoffier;I apply a patch to solve this issue. Can you confirm the fix ?,10/Dec/07 15:13;fornacif;The error has been solved. Thanks,,,,,,,,,,,,,,,,,,,,,,,,,
DependencyManager does not correctly handle service counting,FELIX-425,12383423,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,28/Nov/07 17:46,30/May/08 18:15,14/Mar/19 02:47,28/Nov/07 17:53,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Whenever a referenced service is added to or removed from the framework, the DependencyManager.serviceAdded or serviceRemoved method is called respectively. These methods maintain a counter of services registered in the system matching the selection criteria (service interface and target filter) :

   - when a service added whose ServiceReference does not match the target filter (if any) is ignored. Otherwise the internal
       counter is incremented regardless of whether the service will actually be bound or not
   - when a service is removed it is ignored, if it is not bound. The internal counter is only decremented if the service is bound.

The problem is, that upon service removal the counter should be decremented if the service matches the target filter regardless of whether the service bound or not. Otherwise the counter might not be decremented and the dependency may be marked satisfied even though no (or not enough) service(s) are available.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58561,,,Wed Nov 28 17:53:03 UTC 2007,,,,,,0|i0vxrj:,184443,,,,,,,,"28/Nov/07 17:53;fmeschbe;Fixed in Rev. 599073 by decrementing the service counter after checking whether the removed service matches the target
filter but before checking whether the service is actually bound or not.

Deployed new Snapshot build 0.9.0-20071128.175152-9",,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect URI generated in repository.xml when path contains spaces,FELIX-423,12382774,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,rsivaram,rsivaram,19/Nov/07 09:11,20/Nov/07 14:36,14/Mar/19 02:47,19/Nov/07 10:50,,,,,,,,,,,,,,,Maven OBR Plugin (Deprecated),,,,,,,0,,,,,,"I am using maven-bundle-plugin to create bundles and add entries to repository.xml, using the default repository file, which is ""C:\Documents and Settings\Administrator\.m2\repository\repository.xml"". The URIs generated start with 'null' instead of a relative path. The code in maven-obr-plugin which determines the relative path segment to generate this URI seems to be comparing ""C:\Documents and Settings"" against ""C:\Documents%20and%20Settings"", and returns null since these dont match. I am using maven-bundle-plugin version 1.1.0-SNAPSHOT.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-19 10:50:39.275,,,no_permission,,,,,,,,,,,58563,,,Tue Nov 20 14:35:45 UTC 2007,,,,,,0|i0w18n:,185006,,,,,,,,"19/Nov/07 10:50;mcculls;Made a couple of fixes to PathFile in the OBR code - it now encodes spaces on all platforms (previously just did this on Windows) and changed it so it returns the absolute path when it can't remove the base directory from an existing absolute pathname, which should avoid any bogus ""null"" strings (the only places that use ""getOnlyRelativeFilename"" never check the return value).

The discrepancy between ""C:\Documents and Settings"" and ""C:\Documents%20and%20Settings"" has been fixed by adding a workaround to the bundle plugin code, which was passing an encoded URI - the OBR code appears to expects a decoded URI string with either ""file"" or ""http"" scheme (but afaict this isn't clearly documented)

A lot of the PathFile code (and other checks in the OBR code) could probably be removed by using the standard Java API along with the Plexus FileUtils / PathUtils / StringUtils utility classes to handle file paths and URIs. This would also make the code much clearer.","20/Nov/07 14:35;rsivaram;Stuart,

Thank you for the fix...

- Rajini
",,,,,,,,,,,,,,,,,,,,,,,,,
Version incorrectly converted,FELIX-418,12381516,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,carlos,carlos,31/Oct/07 03:09,30/Jan/08 10:39,14/Mar/19 02:47,19/Nov/07 11:01,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Builder.cleanupVersion( ""0.0.0.4aug2000r7-dev"" );

returns 0.0.0.ug2000r7-dev from the BND lib ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-31 09:25:56.651,,,no_permission,,,,,,,,,,,58568,,,Wed Jan 30 10:39:28 UTC 2008,,,,,,0|i0w0e7:,184869,,,,,,,,31/Oct/07 09:25;mcculls;Have sent suggested patch to Peter for review.,"18/Nov/07 03:43;mcculls;FYI, this is fixed in the latest bndlib:

   http://www.aqute.biz/repo/biz/aQute/bndlib/0.0.212/

I'll update the bundle-plugin POM when it appears on central.","19/Nov/07 09:16;carlos;uploaded, and tested, works!",19/Nov/07 11:01;mcculls;Updated bundle-plugin pom to use bndlib 0.0.212,"16/Dec/07 16:07;mcculls;Hi,

I'd like to get all resolved defects verified before releasing the 1.1.0 version of the bundleplugin - so I'd really appreciate it if you could check things are still ok with the current snapshot, and if so close off the defect.

Thanks in advance!","30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,,,,,,,
MavenProject parameter is bypassed and field is used,FELIX-417,12381515,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,carlos,carlos,31/Oct/07 02:51,30/Jan/08 10:39,14/Mar/19 02:47,31/Oct/07 06:52,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,31/Oct/07 02:51;carlos;felix.txt;https://issues.apache.org/jira/secure/attachment/12368737/felix.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-31 06:52:49.025,,,no_permission,,,,,,,,,,,58569,,,Wed Jan 30 10:39:28 UTC 2008,,,,,,0|i0w0dr:,184867,,,,,,,,"31/Oct/07 06:52;mcculls;Patch applied.

FYI, there are a couple of remaining references to this.baseDir, should they also use project,getBasedir()?","16/Dec/07 16:07;mcculls;Hi,

I'd like to get all resolved defects verified before releasing the 1.1.0 version of the bundleplugin - so I'd really appreciate it if you could check things are still ok with the current snapshot, and if so close off the defect.

Thanks in advance!","30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,,,,,,,,,,
Don't call the URL constructor with a null as the context,FELIX-415,12381497,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,30/Oct/07 22:31,06/Mar/08 23:47,14/Mar/19 02:47,06/Mar/08 23:47,,,,,,,,,,,,,,,,,,,,,,0,,,,,,"At various places we use the URL constructor with a null argument as the context. The javadoc doesn't explicitly disallow this but it is not clear that it is allowed either. Some free VMs have/had an issue with this (like e.g., Mika) and we should try to work around this construction. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58571,,,Thu Mar 06 23:47:39 UTC 2008,,,,,,0|i0vxrz:,184445,,,,,,,,"06/Mar/08 23:47;karlpauls;One place where this was happening is gone now and the other (in the extension manager) should not be a problem because we expect an exception anyways. Furthermore, the problem has been resolved in current versions of mika. ",,,,,,,,,,,,,,,,,,,,,,,,,,
ExtensionManager does not work with Tomcat,FELIX-414,12381372,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,martijnh,martijnh,29/Oct/07 12:44,31/Oct/07 14:52,14/Mar/19 02:47,30/Oct/07 22:24,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"Embedding Felix within a webapp that is deployed on a Tomcat gives the following problem:

Felix is started and the ExtensionManager registers the URL ""felix://extensions/"" with the parent URLClassLoader, which is Tomcats WebappClassLoader. The org.apache.jasper.compiler.TldLocationsCache then fails to initialize because it tries open a connection to this URL (in the scanJars method). As a result, it is at least not possible to use JSPs.

The partial stacktrace is shown below. The message ""Resource not provided by any extension!"" comes from the IOException that the ExtensionManager throws when it is requested to open the URL for ""felix://extensions/"".

SEVERE: Servlet.service() for servlet ShowServlet threw exception
org.apache.jasper.JasperException: Unable to initialize TldLocationsCache: Resource not provided by any extension!
        at org.apache.jasper.compiler.TldLocationsCache.init(TldLocationsCache.java:254)
        at org.apache.jasper.compiler.TldLocationsCache.getLocation(TldLocationsCache.java:225)
        at org.apache.jasper.JspCompilationContext.getTldLocation(JspCompilationContext.java:527)
        at org.apache.jasper.compiler.Parser.parseTaglibDirective(Parser.java:423)","Felix framework 1.0.1
Tomcat 5.5.23",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-30 22:24:48.252,,,no_permission,,,,,,,,,,,58572,,,Wed Oct 31 14:52:42 UTC 2007,,,,,,0|i0vxrr:,184444,,,,,,,,"30/Oct/07 22:24;karlpauls;The issue boils done to the TldLocationCache assuming that it can just open a connection to any URL in a given URLClassloader without catching exceptions. I would argue that this is a bug in Tomcat.

However, I don't see any problem (other then introducing one extra class) with just returning a URLConnection that will throw an IOException on connect() v.s. throwing an IOException directly. This change is in as of revision 590492. 

Please test whether this makes your problem go away and if so close this issue. ","31/Oct/07 14:52;martijnh;Thanks for your quick response, your patch resolves our problem. I agree that this could best be characterized as a bug in Tomcat and it is great that you nevertheless provided this solution.",,,,,,,,,,,,,,,,,,,,,,,,,
Preferences service throws ClassCastException,FELIX-411,12381163,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,angelovds,angelovds,25/Oct/07 15:16,22/Jun/09 15:39,14/Mar/19 02:47,26/Oct/07 13:13,,,,,,,,,,,prefs-1.0.2,,,,Preferences Service,,,,,,,0,,,,,,"The preferences admin throws a ClassCastException when writing its cache. The exception is
java.lang.ClassCastException: [Lorg.apache.felix.prefs.PreferencesImpl; cannot be cast to org.apache.felix.prefs.PreferencesImpl
        at org.apache.felix.prefs.impl.PreferencesManager.save(PreferencesManager.java:179)
        ...

This seems to have to do with the implementation of PreferencesImpl: in its constructor, all preferences are loaded. The system preferences are stored,
61    this.systemTree = prefs[i];
but the user preferences are stored incorrectly:
63    this.trees.put(prefs[i].getDescription().getIdentifier(), prefs);
The full array of prefs is stored, not just prefs[i]; this causes the classcastexception.

A possible fix could be
63    this.trees.put(prefs[i].getDescription().getIdentifier(), prefs[i]);

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-26 13:13:18.44,,,no_permission,,,,,,,,,,,58575,,,Fri Oct 26 13:29:53 UTC 2007,,,,,,0|i0vxsv:,184449,,,,,,,,"26/Oct/07 13:13;cziegeler;Your proposed changed is correct. I just committed a fix, please check if it works for you and then close this bug.

many thanks
Carsten","26/Oct/07 13:29;angelovds;Works like a charm. Thanks!

Angelo",,,,,,,,,,,,,,,,,,,,,,,,,
Plugin should fail if empty @scr.service is specified and the component does not implement an interface,FELIX-409,12381068,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,24/Oct/07 15:07,11/Mar/08 07:12,14/Mar/19 02:47,24/Oct/07 15:17,,,,,,,,,,,maven-scr-plugin-1.0.1,,,,SCR Tooling,,,,,,,0,,,,,,"If @scr.service is used, either an interface name has to be specified or the component must implement an interface (which is automatically detected).
Otherwise the build should fail.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58577,,,2007-10-24 15:07:31.0,,,,,,0|i0w1b3:,185017,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle-ClassPath contains backslashes in windows,FELIX-406,12380931,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,carlos,carlos,22/Oct/07 18:09,23/Oct/07 02:50,14/Mar/19 02:47,23/Oct/07 02:39,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,22/Oct/07 18:10;carlos;felix.txt;https://issues.apache.org/jira/secure/attachment/12368162/felix.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-23 02:39:03.747,,,no_permission,,,,,,,,,,,58580,,,Tue Oct 23 02:39:03 UTC 2007,,,,,,0|i0w0bb:,184856,,,,,,,,22/Oct/07 18:10;carlos;patch attached,23/Oct/07 02:39;mcculls;Applied patch (also used File.getPath instead of File.toString to make it clear what's going on),,,,,,,,,,,,,,,,,,,,,,,,,
Cannot specified custom obr repository,FELIX-405,12380857,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,clement.escoffier,clement.escoffier,21/Oct/07 17:46,22/Oct/07 00:49,14/Mar/19 02:47,22/Oct/07 00:48,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The attribute obrRepository is misunderstand when finishing by .xml instead of repository.xml. 
So if you try to customize the repository with foo.xml, the plugin will create the folder foo.xml and a repository.xml file inside this folder.",,,,,,,,,,,,,,,,,,,,21/Oct/07 17:50;clement.escoffier;patch-obr.txt;https://issues.apache.org/jira/secure/attachment/12368101/patch-obr.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-22 00:48:46.138,,,no_permission,,,,,,,,,,,58581,,,Mon Oct 22 00:49:15 UTC 2007,,,,,,0|i0w0bz:,184859,,,,,,,,"21/Oct/07 17:50;clement.escoffier;This submitted patch just solve the porlbme. Instead of testing the if the obrPath ends with ""repository.xml"" it just tests it ends with "".xml"".
",22/Oct/07 00:48;mcculls;patch applied - thanks,22/Oct/07 00:49;mcculls;deployed new snapshot with this fix,,,,,,,,,,,,,,,,,,,,,,,,
Linebreaks in description element can lead to invalid manifest header,FELIX-403,12380848,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,mcculls,mcculls,21/Oct/07 07:43,21/Oct/07 08:06,14/Mar/19 02:47,21/Oct/07 08:06,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,26/Oct/07 00:00,0,,,,,,"Reported by Olaf Bergner on the users list:

""Sometimes I left a perfectly running build to do some cosmetic work in the
projects that produce my osgi wrapper bundles for external libraries, using
the maven-bundle-plugin. Getting back to the real stuff I fired up maven
only to see my build fail with a compilation error, although I didn't touch
any 'real' code. Eventually, I found out that the compilation failure was
caused by an invalid header in one of my osgi wrapper bundle's manifest
file. It turns out that the maven-bundle-plugin copies the 'description'
section from the pom into the generated MANIFEST.MF. So that description
better be on one line. If you are like me and habitually format each and
every file before saving - strg-shift-F in eclipse - that restriction easily
gets violated. I therefore made it a habit to include the description in a
CDATA-section.""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58583,,,Sun Oct 21 08:06:45 UTC 2007,,,,,,0|i0w0br:,184858,,,,,,,,21/Oct/07 08:06;mcculls;Fixed in trunk - line-breaks in the Maven project description will be removed before using it as the default bundle description.,,,,,,,,,,,,,,,,,,,,,,,,,,
manifest location not working in reactor build,FELIX-402,12380761,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,delasoul,delasoul,19/Oct/07 10:20,30/Jan/08 10:39,14/Mar/19 02:47,19/Oct/07 11:46,framework-1.0.0,,,,,,,,,,framework-1.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The maven-bundle-plugin can be configured to save the MANIFEST.MF file in a folder located in the project directory  when executing the plugin's bundle goal.
<manifestLocation>META-INF</manifestLocation>
When building a maven multi-module project from the parent - thus executing the maven-bundle-plugin:bundle goal for all child projects -
the MANIFEST.MF file is not stored in a child project's directory but in a folder within the parent directory",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-19 11:30:42.89,,,no_permission,,,,,,,,,,,58584,,,Wed Jan 30 10:39:27 UTC 2008,,,,,,0|i1aovr:,270497,,,,,,,,"19/Oct/07 11:30;mcculls;note, as a temporary workaround you can use:

          <manifestLocation>${basedir}/META-INF</manifestLocation>

which will place the manifest in the right directory.","19/Oct/07 11:46;mcculls;Fixed in trunk, and deployed new snapshot.","16/Dec/07 16:07;mcculls;Hi,

I'd like to get all resolved defects verified before releasing the 1.1.0 version of the bundleplugin - so I'd really appreciate it if you could check things are still ok with the current snapshot, and if so close off the defect.

Thanks in advance!","30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,,,,,,,,,
Import packages contains classes after plugin run,FELIX-401,12380755,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,mcculls,cziegeler,cziegeler,19/Oct/07 09:18,03/Nov/07 05:42,14/Mar/19 02:47,23/Oct/07 02:46,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The latest version of the maven bundle plugin from svn creates strange import package structures. We have the case that it adds a class to this package list.

An example for this can be found in Apache Sling (http://svn.apache.org/repos/asf/incubator/sling/trunk/)
I currently have no other repoducable test case appart from sling. If you want to test it, you have to check out sling and then invoke mvn in the root directory. The problematic module is the jackrabbit-client module.

Pleae note that the import package directive in the pom of the jackrabbit-client module contains a a starr. I tried to replace the starr with all required packages and even in that case the maven bundle plugin adds the import to a class.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-19 09:28:45.983,,,no_permission,,,,,,,,,,,58585,,,Sat Nov 03 05:42:35 UTC 2007,,,,,,0|i0vwfb:,184226,,,,,,,,"19/Oct/07 09:28;mcculls;Sounds like it might be the extra analyzing steps recently added to BND (which is why we upgraded - see FELIX-390)
As a temporary workaround, you can explicitly exclude the bad package by using Import-Package: !the.bad.pkg,*","19/Oct/07 10:10;cziegeler;I have to exclude the class (!org.apache.jackrabbit.rmi.remote.RemoteEventCollection), but that works as a  workaround for me - thanks!","19/Oct/07 15:56;mcculls;FYI, this was introduced by Bnd 0.0.199 - there's new code to detect classes referred to by Class.forName, where the class references are stored in an odd format (ie. class$com$foo...) so Bnd changes the $s to dots to get the package - unfortunately when the class is an inner class, this will cause the classname to get picked up in the package.

In this case, the problem caused by a reference to ""org/apache/jackrabbit/rmi/remote/RemoteEventCollection$RemoteEvent.class"".

Will need to sort out a proper fix with PeterK.",23/Oct/07 02:46;mcculls;Updated to Bnd 0.0.208 which contains the fix from PeterK,23/Oct/07 07:29;cziegeler;Works for me - thanks!,"03/Nov/07 05:42;pkriens;Ouch, I should have known this :-( I'll check.

Kind regards,

     Peter Kriens
     
SMJ>     [
SMJ> https://issues.apache.org/jira/browse/FELIX-401?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#action_12536251 ]

SMJ> Stuart McCulloch commented on FELIX-401:
SMJ> ----------------------------------------

SMJ> FYI, this was introduced by Bnd 0.0.199 - there's new code to
SMJ> detect classes referred to by Class.forName, where the class
SMJ> references are stored in an odd format (ie. class$com$foo...) so
SMJ> Bnd changes the $s to dots to get the package - unfortunately
SMJ> when the class is an inner class, this will cause the classname
SMJ> to get picked up in the package.

SMJ> In this case, the problem caused by a reference to
SMJ> ""org/apache/jackrabbit/rmi/remote/RemoteEventCollection$RemoteEvent.class"".

SMJ> Will need to sort out a proper fix with PeterK.




-- 
Peter Kriens                              Tel +33467542167
9C, Avenue St. Drézéry                    AOL,Yahoo: pkriens
34160 Beaulieu, France                    ICQ 255570717
Skype pkriens                             Fax +1 8153772599

","03/Nov/07 05:42;pkriens;I have made a fix in 0.0.205 ... I tested it against sun + eclipse in
1.1-1.6. It is a nasty problem ...

Kind regards,

     Peter Kriens


SMJ>     [
SMJ> https://issues.apache.org/jira/browse/FELIX-401?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#action_12536251 ]

SMJ> Stuart McCulloch commented on FELIX-401:
SMJ> ----------------------------------------

SMJ> FYI, this was introduced by Bnd 0.0.199 - there's new code to
SMJ> detect classes referred to by Class.forName, where the class
SMJ> references are stored in an odd format (ie. class$com$foo...) so
SMJ> Bnd changes the $s to dots to get the package - unfortunately
SMJ> when the class is an inner class, this will cause the classname
SMJ> to get picked up in the package.

SMJ> In this case, the problem caused by a reference to
SMJ> ""org/apache/jackrabbit/rmi/remote/RemoteEventCollection$RemoteEvent.class"".

SMJ> Will need to sort out a proper fix with PeterK.




-- 
Peter Kriens                              Tel +33467542167
9C, Avenue St. Drézéry                    AOL,Yahoo: pkriens
34160 Beaulieu, France                    ICQ 255570717
Skype pkriens                             Fax +1 8153772599

","03/Nov/07 05:42;stuart.mcculloch@jayway.net;

Hi Peter,

Thanks for the quick fix, I can confirm it fixes the problem Carsten saw
with the Sling project.

-- 
Cheers, Stuart

Kind regards,
",,,,,,,,,,,,,,,,,,,
pom resources are not correctly processed,FELIX-400,12380733,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,carlos,carlos,19/Oct/07 00:05,30/Jan/08 10:39,14/Mar/19 02:47,18/Nov/07 04:47,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Resources listed in <build><resources> are not correctly processed into the Include-Resource directive, the includes and excludes are ignored, and if you use <directory>${basedir}</directory> you get an out of bounds exception

The code for processing resources is here
https://svn.apache.org/repos/asf/maven/plugins/trunk/maven-resources-plugin/src/main/java/org/apache/maven/plugin/resources/ResourcesMojo.java

it should be probably factored out for reuse",,,,,,,,,,,,,,,,,,,,19/Oct/07 00:07;carlos;FELIX-400.txt;https://issues.apache.org/jira/secure/attachment/12367984/FELIX-400.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-19 03:10:15.907,,,no_permission,,,,,,,,,,,58586,,,Wed Jan 30 10:39:27 UTC 2008,,,,,,0|i0w0dz:,184868,,,,,,,,"19/Oct/07 00:07;carlos;This is the patch for the ArrayOOB exception, I don't have time right now to do the complete patch","19/Oct/07 03:10;mcculls;Thanks Carlos, I've applied your patch to fix the exception and will look into supporting the includes/excludes settings.",18/Nov/07 04:47;mcculls;Added code to properly handle any includes/excludes - will deploy a new snapshot with this fix,"16/Dec/07 16:07;mcculls;Hi,

I'd like to get all resolved defects verified before releasing the 1.1.0 version of the bundleplugin - so I'd really appreciate it if you could check things are still ok with the current snapshot, and if so close off the defect.

Thanks in advance!","30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,,,,,,,,
Bundle.getEntryPaths NPE on system bundle,FELIX-394,12380463,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,adreghiciu,adreghiciu,15/Oct/07 16:26,30/Nov/07 08:30,14/Mar/19 02:47,22/Oct/07 18:34,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"When calling bundle.getEntryPaths on the system bundle an NPE is thrown:

java.lang.NullPointerException
        at org.apache.felix.framework.GetEntryPathsEnumeration.<init>(GetEntryPathsEnumeration.java:35)
        at org.apache.felix.framework.Felix.getBundleEntryPaths(Felix.java:1338)
        at org.apache.felix.framework.Felix.getEntryPaths(Felix.java:318)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-22 12:59:38.761,,,no_permission,,,,,,,,,,,58592,,,Mon Oct 22 18:34:52 UTC 2007,,,,,,0|i1aowv:,270502,,,,,,,,22/Oct/07 12:59;karlpauls;This looks like it is related to the extension bundle changes (not sure whether it is because of it or always has been an issue). I'm going to look into it.,"22/Oct/07 18:34;karlpauls;I fixed the NPE, the system bundle will not return any entries so. ",,,,,,,,,,,,,,,,,,,,,,,,,
Unable to set OutputArgument if there is an InputArgument with the same name,FELIX-391,12379667,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,stefano.lenzi,stefano.lenzi,stefano.lenzi,04/Oct/07 14:30,04/Jan/08 15:28,14/Mar/19 02:47,04/Jan/08 15:28,,,,,,,,,,,,,,,UPnP Subproject,,,,,,,0,,,,,,"In org.apache.felix.upnp.basedriver.exportGeneralActionListener, after 
successfull invocation of an Action (Dictionary invoke(Dictionary)), 
the basedriver tries to extract the values of the outargs from the 
dictionary and put them in the ArgumentList object of Action. Here 
arises a problem when an Action has in-out arguments. In the 
ArgumentList these are treated seperatly (2 Argument objects with the 
same name, but different argument direction).

For further information look at: 
http://www.mail-archive.com/dev@felix.apache.org/msg01962.html",Felix 1.0.X with UPnP Base Driver 0.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58594,,,2007-10-04 14:30:51.0,,,,,,0|i1aoxb:,270504,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allowing for spaces in VersionRange,FELIX-389,12379588,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,annachen,annachen,03/Oct/07 17:48,03/Oct/07 21:03,14/Mar/19 02:47,03/Oct/07 20:43,framework-1.0.0,,,,,,,,,,,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"VersionRange.java is not allowing for spaces in the version range (example: [1.2.3, 4.5.6] will throw a NumberFormatException because it tries to parse "" 4"").","WinXP, Java 6",,,,,,,,,,,,,,,,,,,03/Oct/07 17:56;annachen;patch.txt;https://issues.apache.org/jira/secure/attachment/12367010/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-03 18:07:35.362,,,no_permission,,,,,,,,,,,58596,,,Wed Oct 03 21:03:35 UTC 2007,,,,,,0|i1aoxr:,270506,,,,,,,,"03/Oct/07 17:56;annachen;Suggested fix: strip spaces out of range string. Caveat: Allows malformed ranges (example: [1  .2  .3, 4.5.   6) through.

Minor tangential fix: Removed extra semicolon on line 77 in XmlCommonHandler.","03/Oct/07 18:07;fmeschbe;The proposed fix requires Java 1.4. Not sure, whether this is acceptable ?

Another less intrusive fix would be to trim the vlo and vhi parts of the ranges as in:


Index: /usr/src/felix/trunk/bundlerepository/src/main/java/org/apache/felix/bundlerepository/VersionRange.java
===================================================================
--- /usr/src/felix/trunk/bundlerepository/src/main/java/org/apache/felix/bundlerepository/VersionRange.java	(revision 578132)
+++ /usr/src/felix/trunk/bundlerepository/src/main/java/org/apache/felix/bundlerepository/VersionRange.java	(working copy)
@@ -84,8 +84,8 @@
         if (range.indexOf(',') >= 0)
         {
             String s = range.substring(1, range.length() - 1);
-            String vlo = s.substring(0, s.indexOf(','));
-            String vhi = s.substring(s.indexOf(',') + 1, s.length());
+            String vlo = s.substring(0, s.indexOf(',')).trim();
+            String vhi = s.substring(s.indexOf(',') + 1, s.length()).trim();
             return new VersionRange (
                 new Version(vlo), (range.charAt(0) == '['),
                 new Version(vhi), (range.charAt(range.length() - 1) == ']'));
","03/Oct/07 19:13;rickhall;Yeah, I think Felix' approach is better. If you look in:

    org.apache.felix.framework.util.VersionRange

You can see that it actually already does this for the framework's version of this class. Perhaps we should just copy the framework version into OBR?","03/Oct/07 20:43;rickhall;I updated OBR's VersionRange to be identical to Framework's VersionRange. If this satisfactorily resolves this issue, then please close it.",03/Oct/07 21:03;annachen;It works. Thank you.,,,,,,,,,,,,,,,,,,,,,,
Fix support for reference service target properties,FELIX-387,12379405,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,01/Oct/07 14:01,30/May/08 18:15,14/Mar/19 02:47,02/Oct/07 12:43,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Currently Felix SCR does not reflect the service reference target settings in the component properties and on the other hand setting such target properties has no influence on the service dependencies.

Reference target properties are defined in Section 112.6, Component Properties, with respect to reflect the reference target setting as properties and 112.7, Deployment, with respect to overwriting the reference target with configuration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58598,,,Tue Oct 02 12:43:21 UTC 2007,,,,,,0|i0vxs7:,184446,,,,,,,,"01/Oct/07 15:00;fmeschbe;Fixed in Rev. 580971.

Uploaded SNAPSHOT build number 20071001.145653-5 containing the fix.

Now closing this issue.",02/Oct/07 12:36;fmeschbe;Adding a service after initial component activation does not work as services matching the target filter (if none is set all filters match implicitly) are ignored instead of being handled,"02/Oct/07 12:43;fmeschbe;Have to revert the method return value check to handle the service if the filter is matched and to return immediately if the filter does NOT match.

Fixed in Rev. 581210.

Deployed fixed SNAPSHOT with build timestamp 20071002.124230-6",,,,,,,,,,,,,,,,,,,,,,,,
Property inheritance does not work,FELIX-386,12379401,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,01/Oct/07 11:42,11/Mar/08 07:12,14/Mar/19 02:47,01/Oct/07 12:16,,,,,,,,,,,maven-scr-plugin-1.0.1,,,,SCR Tooling,,,,,,,0,,,,,,"If an abstract base class declares a property which value should be overwritten by a subclass, the value of the subclass is not used.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58599,,,Mon Oct 01 12:16:29 UTC 2007,,,,,,0|i0vzxz:,184796,,,,,,,,01/Oct/07 12:16;cziegeler;Improved property and reference search mechanism: the fields are search starting from the inspected class and up the hierarchy. This allows to detect overwritten information and duplicate information in the same class. ,,,,,,,,,,,,,,,,,,,,,,,,,,
ReferenceMetadata.setTarget includes the interface name in the target filter,FELIX-385,12379391,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,01/Oct/07 09:29,30/May/08 18:15,14/Mar/19 02:47,01/Oct/07 09:31,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"When the target filter is set on a reference metadata, the interface name is included as a filter term. This is not required as the service access primarily uses the interface directly and service listener registration adds the interface to the target filter, if existing, anyway.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58600,,,Mon Oct 01 14:58:44 UTC 2007,,,,,,0|i140x3:,231611,,,,,,,,"01/Oct/07 09:31;fmeschbe;Not including the reference interface name anymore in the target filter.

Fixed in Rev. 580901.","01/Oct/07 14:58;fmeschbe;Uploaded SNAPSHOT build number 20071001.145653-5 containing the fix.

Now closing this issue.",,,,,,,,,,,,,,,,,,,,,,,,,
Possible deadlock on framework startlevel change,FELIX-384,12379384,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,fmeschbe,fmeschbe,fmeschbe,01/Oct/07 06:57,30/May/08 18:15,14/Mar/19 02:47,01/Oct/07 07:20,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Felix SCR uses java synchronization on component manager instances to prevent synchronous execution of certain actions like activation and deactivation. In concert with the locking implemented by the Felix framework, deadlocks may occurr in certain situations.

For example: If the framework has been started but the SCR Activator queue still has a deadlock and the framework is instructed to shutdown.

The start level service will now stop bundles in the FelixStartLevel thread. At one point in time Bundle X will be stopped and the framework holds the bundle lock while stopping the bundle. Stopping the bundle causes a synchronous STOPPING event being handled by the SCR, which causes immediate deactivation of all components of the bundle. This causes the AbstractComponentManager.deactivateInternal method to be called which is synchronized on the instance.

At the same time, the components of Bundle X may still be scheduled for activation in the SCR Activator queue handled by the  SCR Component Actor thread. This thread may be activating a component of Bundle X trying to register the component as a service in the AbstractComponentManager.activateInternal method (synchronized on the instance). Registering the service tries to acquire the bundle lock first.

The result is a deadlock between the FelixStartLevel thread (holding the bundle lock and waiting for the component manager lock) and the SCR Component Actor thread (holding the component lock and waiting for the bundle lock).

While this is probably a seldom situation, it must be prevent from happening nevertheless.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58601,,,Mon Oct 01 14:59:16 UTC 2007,,,,,,0|i0vwhj:,184236,,,,,,,,"01/Oct/07 07:20;fmeschbe;Taking service registration out of the synchronization on the component manager instance in the AbstractComponentManager.activateInternal method should fix this issue in the Felix implementation.

While this fix targets the Felix framework implementation, I assume, this does not harm any other framework implementation but may prevent similar issues in them.

Fixed in Rev. 580873.

Will close the issue, when deploying a snapshot","01/Oct/07 14:59;fmeschbe;Uploaded SNAPSHOT build number 20071001.145653-5 containing the fix.

Now closing this issue.",,,,,,,,,,,,,,,,,,,,,,,,,
ServletContext.getResource[AsStream] not working correctly,FELIX-382,12379323,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,28/Sep/07 20:28,28/Sep/07 20:32,14/Mar/19 02:47,28/Sep/07 20:32,,,,,,,,,,,framework-1.0.0,,,,HTTP Service,,,,,,,0,,,,,,The ServletContext.getResource and getResourceAsStream methods when used in a Servlet registered with the HttpService should probably return resources using the HttpContext supplied when the servlet was registered.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58603,,,Fri Sep 28 20:32:39 UTC 2007,,,,,,0|i0w0af:,184852,,,,,,,,"28/Sep/07 20:32;fmeschbe;Use OSGi HttpContext supplied when the servlet is registered to access resources through the ServletContext.

Fixed in Rev. 580478 and deployed snapshot",,,,,,,,,,,,,,,,,,,,,,,,,,
Started bundles may change state to RESOLVED,FELIX-381,12379170,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmeschbe,fmeschbe,27/Sep/07 07:15,01/Oct/07 07:23,14/Mar/19 02:47,30/Sep/07 16:55,framework-1.0.0,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"In certain situations a bundle, which has already been started gets its state changed back to RESOLVED.

Consider the following situation: A thread T1 is starting a Bundle A while another thread T2 is starting a Bundle B depending on Bundle A. T2 resolves Bundle B and as T1 has not done it yet assumes to have to resolve Bundle A. Before T2 can resolve Bundle A, T1 resolves Bundle A itself and actually starts Bundle A at the end setting the state to ACTIVE. Then T2 finishes resolving and calls the ResolveListener to inform that Bundle A has been resolved, which causes the state of Bundle A to be set to RESOLVED.

The consequence is that Bundle A has been started  - BundleActivator called, STARTED event fired - and then its state is just set to RESOLVED and a RESOLVED event is fired. This is incorrect as (1) Bundle A has already started and before entering the RESOLVED state (again) it would have to be stopped and (2) getting A back into resolved state would cause STOPPING and STOPPED events to be fired and not a RESOLVED event.

The fix would probably be to ignore the moduleResolved event for bundles, which are not in the INSTALLED state.

Testing this issue is difficult as it heavily depends on timing and environmental issues, yet we have a setup, which produces the situation relatively often times.",,,,,,,,,,,,,,,,,,,,27/Sep/07 07:17;fmeschbe;FELIX-381.patch;https://issues.apache.org/jira/secure/attachment/12366643/FELIX-381.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-27 13:53:57.69,,,no_permission,,,,,,,,,,,58604,,,Mon Oct 01 07:23:24 UTC 2007,,,,,,0|i0vxtb:,184451,,,,,,,,27/Sep/07 07:17;fmeschbe;Addition to moduleResolved method in the Felix class to ignore the event if the owning bundle is not in the INSTALLED state.,"27/Sep/07 13:53;rickhall;I think this should probably be investigated further. If both are actually firing the RESOLVED event, then it seems that the wiring is happening twice for Bundle A and that is incorrect. I will try to investigate it this weekend.","27/Sep/07 14:18;karlpauls;As far as I can see that might be true. There is a race condition between checking whether a module is already resolved and actually getting the lock to resolve it -- hence, there should be the possibility to resolve it twice. It might be enough to move the isResolved check inside the synchronized block. ","30/Sep/07 16:55;rickhall;I have just committed a fix for this, which basically implemented Karl's suggestion of moving the isResolved() check inside the synchronized block. I also tried to simplify the locking protocol by removing the locks on ""this"" from the isResolved/setResolved methods, making them private, and adding a note that they should only be called when holding a lock on m_factory.

I also added a warning if you see a resolved event for a bundle that is not in the INSTALLED state so that we can more easily see when this occurs in the future.

Felix, do your best to see if this patch resolves the issue. If so, please close it.","01/Oct/07 07:23;fmeschbe;Thanks for fixing. This seems to do the trick.

Thanks for fixing. Hence, this can be closed.",,,,,,,,,,,,,,,,,,,,,,
Registering multiple servlets may hide some,FELIX-379,12379080,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,26/Sep/07 06:50,28/Sep/07 15:17,14/Mar/19 02:47,28/Sep/07 14:16,,,,,,,,,,,framework-1.0.0,,,,HTTP Service,,,,,,,0,,,,,,"Consider registering a servlet RootServlet for ""/"" first and then a servlet SomeServlet for ""/some"" with different OSGi HttpContext instances in this order with the http.jetty HttpService. This registration works absolutely correct and also creates the necessary setup internally. Unfortunately, when Jetty now receives a request for ""/some"", it first calls the RootServlet instead of the SomeServlet as would be expected according to the HttpServlet Service specification.

If the servlets are registered SomeServlet first and then RootServlet it works perfectly.

I think it is related to the fact, that the http.jetty bundle registers a jetty context for ""/"" for each different OSGi HttpContext and jetty asks these registrations in registration order, which may not be correct according to the spec. Probably, there should only be one actual web app registration with jetty and the http.jetty bundle should multiplex between the different OSGi HttpContext instances and select the correct servlets.

I am working a possible solution to this right now.",,,,,,,,,,,,,,,,,,,,27/Sep/07 10:05;fmeschbe;FELIX-379.patch;https://issues.apache.org/jira/secure/attachment/12366652/FELIX-379.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-27 14:02:50.726,,,no_permission,,,,,,,,,,,58606,,,Fri Sep 28 15:10:38 UTC 2007,,,,,,0|i0vydz:,184544,,,,,,,,"27/Sep/07 10:05;fmeschbe;Did a rework of the http.jetty bundle such that now only a single Jetty ServletHandler is registered together with a single Jetty ServletHttpContext. This handler/context tuple is used to register all servlets framework wide registered with the http.jetty HttpService. This is required to be able to conform to the ""single namespace for all servlets"" requirement of the Http Service Spec.

In addition, just for completeness, I reformatted the code according to the Felix coding conventions and cleaned up all import lists.

Does anyone mind, if I would apply this patch ?","27/Sep/07 14:02;rickhall;Rob Walker has done most of the hacking on this, so perhaps he might have the most valuable input on whether the patch makes sense. However, I am sure you can go ahead and apply it because if it causes issues we can always fix it or rollback.","28/Sep/07 14:16;fmeschbe;Thanks. 

Ok then, I go ahead just checking it in.

Done in Rev. 580363 and deployed a new SNAPSHOT.","28/Sep/07 14:16;fmeschbe;Done, over and out.","28/Sep/07 14:23;walkerr;Felix

Just one request would be to check that this doesn't disturb session contexts/cookie handling.

It's a long time back I looked at this code, but I seem to remember some wiring was needed between the contexts we hold in the HttpService and those Jetty uses for managing session context. Would guess this is all still ok, but would be good to verify it.

Sorry for being bit late to the party on this one...

-- Rob

","28/Sep/07 14:44;fmeschbe;Hi Rob,

Thanks for the feedback. This is in fact, something I didn't look into. So I would have to crosscheck.

I suggest, if such an issue would arise, we could open a new issue to tackle that.

But if the spec says ""all servlets share the same namespace"" I assume this also means, the share the same namespace for cookies. Maybe I am wrong here ....

> Sorry for being bit late to the party on this one...

Absolutely no problem.

Regards
Felix","28/Sep/07 15:10;walkerr;Thanks Felix.

In the absence of anything specific in Osgi HTTP service spec, it seems safest to fall back to what people would consider ""normal/covnetional HTTP server behaviour"" for session params, cookies etc.

I'd read the ""share same namespace"" aspect as being more to do with Paths than session params etc. - but I'm not an expert in this area.

As per my email, my very old HTTP Test bundle that I used initially to find our original ""hole"" in session param handling and fix it is still in the OBR if needed:

http://oscar-osgi.sourceforge.net/

",,,,,,,,,,,,,,,,,,,,
servicefactory attribute of @scr.service tag not handled correctly,FELIX-378,12378904,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,21/Sep/07 22:59,11/Mar/08 07:12,14/Mar/19 02:47,21/Sep/07 23:13,,,,,,,,,,,maven-scr-plugin-1.0.1,,,,SCR Tooling,,,,,,,0,,,,,,"When the service factory attribute is read, it's value is set in the Component.serviceFactory field. When the descriptor is written, the serviceFactory attribute of the Service object is read, which has never been set, therefore the serviceFactory attribute will never be set in the descriptor.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58607,,,Fri Sep 21 23:13:28 UTC 2007,,,,,,0|i0w07r:,184840,,,,,,,,"21/Sep/07 23:13;fmeschbe;Removed the servicefactory field in the Component model and only handle the attribute in the service model.

Fixed in Rev. 578316 and deployed snapshot.",,,,,,,,,,,,,,,,,,,,,,,,,,
implemented interfaces of base classes from the class path are not recognized,FELIX-375,12378739,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,20/Sep/07 10:00,11/Mar/08 07:12,14/Mar/19 02:47,20/Sep/07 10:05,,,,,,,,,,,maven-scr-plugin-1.0.1,,,,SCR Tooling,,,,,,,0,,,,,,"The @scr.service tag without an interface parameter should cause the plugin to deduce the list of interfaces from the class itself and from any extended classes. If the classes are available to the plugin in compiled form only, the plugin currently does not provide the information on implemented interfaces.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58610,,,Thu Sep 20 10:05:10 UTC 2007,,,,,,0|i0vydr:,184543,,,,,,,,"20/Sep/07 10:05;fmeschbe;Added missing implementation of the ClassLoaderJavaClassDescription.getImplementedInterfaces method.

Fixed in Rev. 577662 and deployed SNAPSHOT",,,,,,,,,,,,,,,,,,,,,,,,,,
The manipulation of static method must be avoided,FELIX-372,12378721,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,clement.escoffier,clement.escoffier,20/Sep/07 07:17,10/Dec/07 08:36,14/Mar/19 02:47,20/Sep/07 07:54,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"iPOJO manipulates methods to adapt field access and detect method entries and exits. Right now, iPOJO does not manipulate the <clinit> and the $class methods. However, it must skip static methods too.
(thanks to Francois Fornaciari who reports this bug).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58613,,,Thu Sep 20 07:54:37 UTC 2007,,,,,,0|i0w1lz:,185066,,,,,,,,"20/Sep/07 07:54;clement.escoffier;Resolve in the revision 577607.
The static methods are no more manipulated.",,,,,,,,,,,,,,,,,,,,,,,,,,
Service binding odities if (un)bind methods take ServiceReferences,FELIX-368,12378417,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,17/Sep/07 09:34,30/May/08 18:15,14/Mar/19 02:47,17/Sep/07 11:02,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"When a service is bound by calling the configured bind method, the service may be given as the service itself or as its ServiceReference. The intent is to be able to first inspect the reference properties before actually getting the service or to delay activation of a service
component until the service is really needed.

Currently, the service object is always accessed before calling the bind method regardless of whether the service object is really needed or not. Likewise for the unbind method, which always requires the service object regardless of whether it is used to call the unbind method.

In addition, the handling of the arguments of the bind and unbind methods using the m_bindUsesServiceReference field is wrong if the on of the methods takes the service instance while the other takes a ServiceReference.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58617,,,Fri May 30 18:11:58 UTC 2008,,,,,,0|i140wf:,231608,,,,,,,,"17/Sep/07 11:00;fmeschbe;Refactored how binding the services works: The bound services are acquired only when the bind or unbind method(s) require
the service object. Otherwise, in case of the (un)bind taking a service reference, the service object is not retrieved.

Nevertheless, an entry in the map of bound services is created when binding the service to ensure the unbind method is called when the service is unregistered.

Fixed in Rev. 576362",21/Sep/07 14:24;fmeschbe;Deployed new snapshot build containing this fix.,30/May/08 18:11;fmeschbe;This may be closed by now.,,,,,,,,,,,,,,,,,,,,,,,,
Autogenerated unbind method may incorrectly drop service,FELIX-367,12378416,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,17/Sep/07 09:28,11/Mar/08 07:13,14/Mar/19 02:47,17/Sep/07 13:10,,,,,,,,,,,maven-scr-plugin-1.0.1,,,,SCR Tooling,,,,,,,0,,,,,,"The SCR plugin may generate an unbind method for references with unary cardinality if no such method is available in the component class. The implementation of this method just sets the internal field to null.

According to the Declarative Services Specification, section 112.5.10, Bound Service Replacement, the replacement of a service reference with unary cardinality occurrs in the following order:

   1. the new (replacement) service is bound by calling the bind method
   2. the old (outgoing) service is unbound by calling the unbind method

In the case of the current implementation unbinding the old (outgoing) service will actually drop the new (replacement) service. A simple fix to this issue is to check whether the service being unbound is actually the one currently bound, hence

    private <Type> <name>
    protected void unbind<Name>(<Type> <name>) {
        if (this.<name> == <name>) {
            this.<name> = null;
        }
    }

This is not currently an issue but become an issue when fixing FELIX-366.",,,,,,,,,,,FELIX-366,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58618,,,2007-09-17 09:28:52.0,,,,,,0|i0vydb:,184541,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bound Service Replacement incorrect,FELIX-366,12378415,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,17/Sep/07 09:28,30/May/08 18:15,14/Mar/19 02:47,18/Sep/07 09:22,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"Currently SCR implements incorrect bound service replacement for references of unary cardinality: Instead of first binding the new (replacement) service and then unbinding the old (outgoing) service, the old service is first unbound and then the replacement bound. This violates the specification in section 112.5.10, Bound Service Replacement, of the Declarative Services Specification.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58619,,,Fri Sep 21 14:24:15 UTC 2007,,,,,,0|i0w09b:,184847,,,,,,,,17/Sep/07 12:31;fmeschbe;Will not modify current behaviour until the SCR plugin has been fixed,"18/Sep/07 09:22;fmeschbe;After the plugin has been updated to take care of the correct service replacement semantics, the SCR is also fixed.

Fixed in Rev. 576795",21/Sep/07 14:24;fmeschbe;Deployed new snapshot build containing this fix.,,,,,,,,,,,,,,,,,,,,,,,,
DependencyManager.getBindingMethod may throw NullPointerException,FELIX-365,12378398,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,17/Sep/07 06:58,17/Sep/07 08:53,14/Mar/19 02:47,17/Sep/07 08:53,,,,,,,,,,,,,,,,,,,,,,0,,,,,,"If a component is activated, the DependencyManager.bind method is called for each service reference. If the reference is configured without a bind method, this method should do nothing at all. Instead currently, it just calls the DependencyManager.invokeBindMethod which ultimately tries to locate the bind method which is null and hence a NullPointerException is thrown.

The DependencyManager.bind method should check whether a bind method is actually configured. If not, the method should do nothing. Likewise, the DependencyManager.unbind method should check whether an unbind method is actually configured.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58620,,,Mon Sep 17 08:53:21 UTC 2007,,,,,,0|i0w09j:,184848,,,,,,,,"17/Sep/07 08:53;fmeschbe;The bind, addingService, unbind and removedService methods now check whether a bind or unbind method
is configured for the component before trying to call such a method.

Fixed in Rev. 576308 (also fixing FELIX-364)",,,,,,,,,,,,,,,,,,,,,,,,,,
0..1 dynamic service reference does not bind properly.,FELIX-364,12378324,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,annachen,annachen,14/Sep/07 20:42,30/May/08 18:15,14/Mar/19 02:47,17/Sep/07 08:58,framework-0.8.0,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,1,,,,,,"There are 2 parts to the issue. Both are with a component with a reference to a service where cardinality=0..1 and policy=dynamic.
1. If the bundle providing the service is stopped (without another bundle providing the same service) and restarted, the service is not re-bound to the component.
2. If the service is started after the component referencing it, then the service is never bound to the component.",Java 1.6,,,,,,,,,,,,,,,,,,,14/Sep/07 20:59;annachen;patch.txt;https://issues.apache.org/jira/secure/attachment/12365897/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-15 19:23:58.151,,,no_permission,,,,,,,,,,,58621,,,Fri Sep 21 14:24:37 UTC 2007,,,,,,0|i0vxtj:,184452,,,,,,,,14/Sep/07 20:59;annachen;Proposed fix.,"15/Sep/07 19:23;fmeschbe;Thanks for reporting this issue. It turns out, that support for non-multiple (cardinality 0..1 or 1..1) dynamically bound services is not implemented properly at all. 

The DependencyManager class internally keeps all services being tracked. In the case of multiple service bindings, this is no issue as the bind and unbind methods must just be called. For non-multiple references, only one service must be bound and this is also the only service, which may be unbound.

The solution to this problem is, that the DependencyManager has to keep track of which service has actually been bound in the case of non-multiple bindings to decide whether to bind a new service and whether to unbind a service being unregistered.","17/Sep/07 08:58;fmeschbe;I have (once again) refactored the DependencyManager class:

> Only the services to which the dependency manager is actually bound is kept in an internal map
> The number of available services is set initially from the number of already available services and then
   updated as part of the ServiceListener.serviceChanged handling
> Access to the service instances is centralized and thus guarantees that service lookup and service binding
   allways use the same references and that bound services are ungot when the dependency manager is
   closed.

Could you please confirm, that this fix solves your issues. I will deploy a new snapshot after getting your confirmation. Thanks.",21/Sep/07 13:45;annachen;This seems to fix my issues. Thanks much. Sorry for the delay in reply.,21/Sep/07 14:10;fmeschbe;Thanks for the feedback. So I close this issue now.,21/Sep/07 14:24;fmeschbe;Deployed new snapshot build containing this fix.,,,,,,,,,,,,,,,,,,,,,
"The ""wrap"" and ""bundleall"" goals fail when artifacts use classifiers.",FELIX-362,12377926,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,tomdewire,tomdewire,10/Sep/07 21:30,30/Jan/08 10:39,14/Mar/19 02:47,01/Oct/07 04:58,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"It appears that the ""bundleall"" and ""wrap"" goals will fail when an dependency uses a classifier. Although these dependencies resolve fine in other maven contexts, the bundle plugin seems to balk.

For a working example, attempt to execute ""bundleall"" or ""wrap"" for any maven project that has the following artifact as a dependency:

<dependency>
  <groupId>org.testng</groupId>
  <artifactId>testng</artifactId>
  <version>5.1</version>
  <scope>test</scope>
  <classifier>jdk15</classifier>
</dependency>","Maven 2.0.7, Windows, Linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-10 21:48:51.892,,,no_permission,,,,,,,,,,,58623,,,Wed Jan 30 10:39:26 UTC 2008,,,,,,0|i0w0dj:,184866,,,,,,,,10/Sep/07 21:48;carlos;You haven't given any detail about the error but i gave it a try with the patch in FELIX-360 and there are no errors,"11/Sep/07 06:49;mcculls;Carlos' patch changes the artifact resolution to include the classifier, so FELIX-360 should fix this issue - I'll let you know when the patch is available in trunk (it depends on some as yet unreleased maven updates).","01/Oct/07 04:58;mcculls;OK, this has been fixed by the partial commit of Carlos' fixes from FELIX-360 - please test the latest 1.1.0-SNAPSHOT","16/Dec/07 16:07;mcculls;Hi,

I'd like to get all resolved defects verified before releasing the 1.1.0 version of the bundleplugin - so I'd really appreciate it if you could check things are still ok with the current snapshot, and if so close off the defect.

Thanks in advance!","30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,,,,,,,,
Client searching for Service with Number in Name throws Exception,FELIX-361,12377857,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,kenrobinsonster,kenrobinsonster,10/Sep/07 04:07,15/Sep/07 20:48,14/Mar/19 02:47,12/Sep/07 18:10,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"Hi.
I found what may be a bug when a service name has a digit (0-9) in it.
The following exception is thrown when a client service looks up the
service.

org.osgi.framework.BundleException: Activator start error.
  at org.apache.felix.framework.Felix._startBundle(Felix.java:1579)
  at org.apache.felix.framework.Felix.startBundle(Felix.java:1469)
  at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:348)
  at org.apache.felix.shell.impl.StartCommandImpl.execute(StartCommandImpl.java:82)
  at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:265)
  at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:167)
  at java.lang.Thread.run(Thread.java:712)
Caused by: org.osgi.framework.InvalidSyntaxException: expected =|~=|>=|<=
  at org.apache.felix.framework.FilterImpl.<init>(FilterImpl.java:75)
  at org.apache.felix.framework.Felix.getServiceReferences(Felix.java:2673)
  at org.apache.felix.framework.Felix.getAllowedServiceReferences(Felix.java:2720)
  at org.apache.felix.framework.BundleContextImpl.getServiceReferences(BundleContextImpl.java:370)
  at au.edu.qut.ranet.p2ps.service.itest.Activator.start(Activator.java:29)
  at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
  at org.apache.felix.framework.Felix._startBundle(Felix.java:1535)
  ...6 more
org.osgi.framework.InvalidSyntaxException: expected =|~=|>=|<=

It seems to emanant from Parser.java and in particular, the following
lines:
if (op == NOOP)
{
   String oplist = ""=|~=|>=|<="";
   throw new ParseException(""expected "" + oplist);
}

What seems to be happening if the char is not a letter of the alphabet
it assumes it must be an operator. 

This happens with the following client code.

public class Activator implements BundleActivator
{
   /**
    * Implements BundleActivator.start().
    *
    * @param context the framework context for the bundle.
    */
   public void start( BundleContext context ) throws Exception
   {
       System.out.println(""Before reference"");
       // Query for all service references matching any language.
       System.out.println(""Class name is "" + P2PS.class.getName());
       ServiceReference[] refs =
           context.getServiceReferences(P2PS.class.getName(),
                                        ""(P2PS=*)"" );
       System.out.println(""Got past reference"");
       // Query for all service references matching any language.
       if ( refs != null )
       {
           // First, get a dictionary service and then check if the
word is correct.
           P2PS p2ps = ( P2PS ) context.getService( refs[0] );

           p2ps.testP2PS();

           // Unget the dictionary service.
           context.ungetService( refs[0] );
       }
       else
       {
           throw new RuntimeException( ""I need a service to test it
properly."" );",Believe it is all operating systems but found it on Linux operating system,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-12 18:10:49.352,,,no_permission,,,,,,,,,,,58624,,,Sat Sep 15 20:48:43 UTC 2007,,,,,,0|i1aoyv:,270511,,,,,,,,"12/Sep/07 18:10;karlpauls;I fixed a couple of issues with the LDAP filter most noticeably, attributes where limited to [a-zA-Z ] so didn't allow for e.g., numbers. Furthermore, I added some functionality to match the 4.1 spec (values may now be Collections not only Vectors). 

Thanks goes to Angelo van der Sijpt and Jorg Hollenberg for providing me with valuable test cases (and pointing out the diff between the 4.0 and 4.1 spec). ",15/Sep/07 20:48;kenrobinsonster;Now works,,,,,,,,,,,,,,,,,,,,,,,,,
Several problems with bundleall,FELIX-360,12377796,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,carlos,carlos,08/Sep/07 00:56,30/Jan/08 10:39,14/Mar/19 02:47,20/Dec/07 15:19,framework-1.0.0,,,,,,,,,,framework-1.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Patch that fixes several problems with bundleall goal

add the ignoreMissingArtifacts option
wrong BundleSymbolicName in some cases
""null"" text in Bundle-License

depends on some changes in the dependencytree and maven-osgi libraries that i'm going to work on release",,,,,,,,,,,,,,FELIX-362,,,,,,16/Dec/07 14:50;mcculls;FELIX-360_rollback.txt;https://issues.apache.org/jira/secure/attachment/12371749/FELIX-360_rollback.txt,08/Sep/07 00:57;carlos;bundleplugin.txt;https://issues.apache.org/jira/secure/attachment/12365384/bundleplugin.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-09-11 02:23:28.953,,,no_permission,,,,,,,,,,,58625,,,Wed Jan 30 10:39:26 UTC 2008,,,,,,0|i1aoz3:,270512,,,,,,,,11/Sep/07 02:23;mcculls;will take a look at the patch today (once I get in the office),"11/Sep/07 06:44;mcculls;Hi Carlos, the changes look reasonable - let me know when the external snapshot dependencies are released on central and I'll apply this fix",11/Sep/07 16:21;carlos;the patch can be applied as the snapshots are deployed. When they are released the pom can be updated.,"21/Sep/07 08:16;mcculls;Hi Carlos, one problem... those snapshots appear to have been built with Java 5, can you deploy snapshots that target 1.4 or 1.3 ?",21/Sep/07 08:51;mcculls;when I can compile with the 1.4.2 JDK I will commit this patch (ie. once the snapshots have the right target level),"01/Oct/07 04:59;mcculls;current status: most of the fixes have been applied, except the parts that depend on the shared maven snapshots (that still contain Java5 bytecode)",02/Oct/07 08:05;carlos;new snapshots have been deployed using target 1.4,"04/Oct/07 13:14;mcculls;thanks Carlos, I've applied the rest of your fixes

can you let me know when those snapshots are released, as it would
be good to do a new release of the bundle plugin in the near future :)",16/Dec/07 14:45;mcculls;Re-opening as I need to rollback part of this patch to prepare for a new release of the bundleplugin,"16/Dec/07 14:50;mcculls;To get the bundleplugin ready for release, I need to depend on non-snapshot versions of the various Maven shared components used by the plugin. In case the current snapshot dependencies are not released by the end of the year, the attached patch should let us rollback to the previous versions.

Once the bundleplugin is released, the reverse patch will be applied to the next snapshot (1.2.0)","20/Dec/07 15:19;mcculls;cool, I see the shared components are now released so closing this once more :)","30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,
activation and deactivation may run concurrently,FELIX-357,12377636,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,06/Sep/07 08:47,30/May/08 18:15,14/Mar/19 02:47,06/Sep/07 09:04,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"In some situations like multiple static service references actively changing state the AbstractComponentManager.activateInternal and AbstractComponentManager.deactivateInternal may run concurrently due to the fixes introduced by FELIX-341 where the deactivateInternal method is now immediately called but the activateInternal method is still scheduled for asynchronous execution.

The current measures in these methods to selectively set the state do not seem to be adequate to prevent concurrent execution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58627,,,Thu Sep 06 09:06:50 UTC 2007,,,,,,0|i140wv:,231610,,,,,,,,"06/Sep/07 09:04;fmeschbe;To fix this issue, I have to synchronize these methods such that only one can be executed at the same time for a given component instance.

Fixed in Rev. 573189.",06/Sep/07 09:06;fmeschbe;Deployed new snapshot 20070906.090557-3 containing the fix.,,,,,,,,,,,,,,,,,,,,,,,,,
DependencyManager.bind may bind to null and does not correctly check for success,FELIX-356,12377635,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,06/Sep/07 08:29,30/May/08 18:15,14/Mar/19 02:47,06/Sep/07 08:39,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"In an active environment a service to be bound may disappear between the access to the service reference and the acquiry of the service itself. As a consequence the DependencyManager.bind(Object) method may call the component's bind method with a null instance, which is not expected.

The DependencyManager.bind method should check whether the service still exists before calling the component's bind method.

As a consequence the checks whether at least one service could be bound for mandatory references and that at most one service is bound for singular references have to be rethought: Currently binding fails if the first service reference cannot be bound for singular references. In such situations the binding also fails if calling the bind method fails.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58628,,,Thu Sep 06 09:07:01 UTC 2007,,,,,,0|i0vyev:,184548,,,,,,,,"06/Sep/07 08:39;fmeschbe;The DependencyManager.bind(Object) method now tracks success with a separate flag: If the dependency is optional, the flag is initially set to true, as we don't care whether there are any services bound or not. If the dependency is mandatory, the flag is initially set to false and only set to true after the first service binding (ignoring the success of actually calling the component's bind method).

Additionally, if the reference is singular the binding loop is aborted after the first service has been bound (again ignoring the success of actually calling the component's bind method).

Fixed in Rev. 573179. Closing after deploying new snapshot.",06/Sep/07 09:07;fmeschbe;Deployed new snapshot 20070906.090557-3 containing the fix.,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigurationAdmin service is unregistered after it has been cleaned up,FELIX-355,12377634,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,06/Sep/07 08:16,06/Sep/07 08:20,14/Mar/19 02:47,06/Sep/07 08:20,,,,,,,,,,,framework-1.0.0,,,,Configuration Admin,,,,,,,0,,,,,,"The ConfigurationManager as the BundleActivator of the Configuration Admin implementation shuts down and cleans up in the stop(BundleContext) method and leaves unregistration of the service to the framework. This causes potential issues in active environments, where the ConfigurationAdmin service may still be used albeit it has already been clean up.

The ConfigurationManager.stop method should actually unregister the service before cleaning up.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58629,,,Thu Sep 06 08:20:41 UTC 2007,,,,,,0|i0w053:,184828,,,,,,,,06/Sep/07 08:20;fmeschbe;Fixed in Rev. 573174 and also deployed a new snapshot 20070906.081947-8,,,,,,,,,,,,,,,,,,,,,,,,,,
Garbled scr.property name when serialVersionUID declaration is present,FELIX-353,12377537,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,bdelacretaz,bdelacretaz,05/Sep/07 09:29,11/Mar/08 07:13,14/Mar/19 02:47,05/Sep/07 15:38,,,,,,,,,,,maven-scr-plugin-1.0.1,,,,SCR Tooling,,,,,,,0,,,,,,"Processing the following code with ""mvn scr:scr"" generates a garbled scr.property name in serviceComponents.xml:

package org.apache.felix.bugreports;

/** @scr.component */
public class TestScrProperty {

    // the scr.property name is correctly generated
    // if the following declaration is commented out
    private static final long serialVersionUID = 5710195320616458465L;

   // this comment should not be part of the
   // scr.property name, but it is

    /** @scr.property value=""something"" */
    private final static String S = ""whatever"";
}

Leads to a bad scr:property name:

<?xml version=""1.0"" encoding=""UTF-8""?>
<components xmlns:scr=""http://www.osgi.org/xmlns/scr/v1.0.0"">
<scr:component enabled=""true"" immediate=""true"" name=""org.apache.felix.bugreports.TestScrProperty"">
<scr:implementation class=""org.apache.felix.bugreports.TestScrProperty""/>
<scr:property name=""// this comment should not be part of the &#10;   // scr.property name, but it is&#10;&#10;       &#10;          &quot;whatever"" value=""something""/>
</scr:component>
</components>",macosx / JDK 1.5 / maven-scr-plugin V0.3.0-SNAPSHOT,,,,,,,,,,,,,,,,,,,05/Sep/07 09:30;bdelacretaz;pom.xml;https://issues.apache.org/jira/secure/attachment/12365151/pom.xml,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-05 15:38:56.004,,,no_permission,,,,,,,,,,,58631,,,Wed Sep 05 15:50:13 UTC 2007,,,,,,0|i1aozr:,270515,,,,,,,,05/Sep/07 09:30;bdelacretaz;the pom.xml that I'm using,"05/Sep/07 15:38;cziegeler;The value of a field is used to determine the name of a property. I committed a fix for this, please cross-check.
","05/Sep/07 15:50;bdelacretaz;Confirmed, revision #572968 processes my example correctly, thanks!",,,,,,,,,,,,,,,,,,,,,,,,
Caught ZipException with 'manifest' goal,FELIX-352,12377531,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,lefou,lefou,05/Sep/07 08:30,30/Jan/08 10:39,14/Mar/19 02:47,11/Sep/07 08:01,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"I'm using the maven-bundle-plugin version 1.0 from the releases/bundleplugin-1.0.0 branch.

The following command fails on a clean project:
mvn org.apache.felix:maven-bundle-plugin:manifest 

The error message is:
[DEBUG] Configuring mojo 'org.apache.felix:maven-bundle-plugin:1.0.0:manifest' -->
[DEBUG]   (f) baseDir = /home/t/work/test
[DEBUG]   (f) buildDirectory = /home/t/work/test/target
[DEBUG]   (f) instructions = {Bundle-Activator=de.example.main.Activator, Export-Package=de.example.main.*}
[DEBUG]   (f) manifestLocation = /home/t/work/test/target/classes/META-INF
[DEBUG]   (f) outputDirectory = /home/t/work/test/target/classes
[DEBUG]   (f) project = org.apache.maven.project.MavenProject@ee7372e9
[DEBUG] -- end configuration --
[INFO] [bundle:manifest]
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error trying to generate Manifest

Embedded error: error in opening zip file
[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Error trying to generate Manifest
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:564)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:493)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:463)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:280)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Error trying to generate Manifest
        at org.apache.felix.bundleplugin.ManifestPlugin.execute(ManifestPlugin.java:63)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:123)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:118)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        ... 16 more
Caused by: java.util.zip.ZipException: error in opening zip file
        at java.util.zip.ZipFile.open(Native Method)
        at java.util.zip.ZipFile.<init>(ZipFile.java:114)
        at java.util.zip.ZipFile.<init>(ZipFile.java:131)
        at aQute.lib.osgi.ZipResource.build(ZipResource.java:39)
        at aQute.lib.osgi.ZipResource.build(ZipResource.java:32)
        at aQute.lib.osgi.Jar.<init>(Jar.java:31)
        at aQute.lib.osgi.Jar.<init>(Jar.java:50)
        at aQute.lib.osgi.Analyzer.setJar(Analyzer.java:619)
        at org.apache.felix.bundleplugin.ManifestPlugin.getAnalyzer(ManifestPlugin.java:116)
        at org.apache.felix.bundleplugin.ManifestPlugin.getManifest(ManifestPlugin.java:87)
        at org.apache.felix.bundleplugin.ManifestPlugin.execute(ManifestPlugin.java:59)
        ... 20 more

After running 'mvn package' the same call of the goal will succeed. 

Quick workarround: log a better error message reporting which zip/jar file was tried to read, when the exception occured.

This problem occurs in a more advanced setup, too. E.g. when configuring the maven-bundle-plugin inside the pom.xml like the following:
<plugin>
  <groupId>org.apache.felix</groupId>
  <artifactId>maven-bundle-plugin</artifactId>
  <configuration>
    <instructions>
      <Export-Package>de.example.main.*</Export-Package>
      <Bundle-Activator>de.example.main.Activator</Bundle-Activator>
    </instructions>
  </configuration>
  <executions>
    <execution>
      <id>export-Manifest-for-Eclipse-PDE</id>
      <phase>generate-resources</phase>
      <goals>
        <goal>manifest</goal>
      </goals>
      <configuration>
        <manifestLocation>${basedir}/META-INF</manifestLocation>
       </configuration>
    </execution>
  </executions>
</plugin>

This construct will always fail in the project.

Sidenote: The above configuration works in another project, so maybe it is an issue in the dependencies declared in the pom.xml. The error message dosn't help in any way to prevent this problem. I can not find out, which Jar/Zip-File is corrupt or missing when the error occurs.","Linux t-quad 2.6.22-gentoo-r5 #1 SMP Thu Aug 23 09:53:07 CEST 2007 i686 Intel(R) Core(TM)2 Quad CPU @ 2.40GHz GenuineIntel GNU/Linux
Sun JDK 1.6.0.02 [sun-jdk-1.6]
$ mvn -version
Maven version: 2.0.7
Java version: 1.6.0_02
OS name: ""linux"" version: ""2.6.22-gentoo-r5"" arch: ""i386""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-11 08:01:36.005,,,no_permission,,,,,,,,,,,58632,,,Wed Jan 30 10:39:26 UTC 2008,,,,,,0|i1aozz:,270516,,,,,,,,"05/Sep/07 10:02;lefou;After more investigation on this issue, I figured out, that the method throwing the Exception is ManifestPlugin.getAnalyzer(). this method doen't ensures, that the output directory retrieved with getOutputDirectory() exists. After a 'mvn clean' the default output directory 'target/classes' doesn't exists. A call to PackageVersionAnalyzer.setJar() with an non existing directory as argument will throw the Exception mentioned above.

The manifest goal should ensure, that the directory exists before using it, at least if the output directory is the default one.
","11/Sep/07 08:01;mcculls;OK, I've added a check that will report a better error message if the file being analyzed is missing:

  [INFO] ------------------------------------------------------------------------
  [ERROR] BUILD ERROR
  [INFO] ------------------------------------------------------------------------
  [INFO] Cannot find /tmp/myProject/myBundle/target/classes (manifest goal must be run after compile phase)

the error message gives the path to the file, along with the probable reason why it's missing.

Note that the manifest goal expects to be executed _after_ the compile phase, because otherwise
it has no bundle or classes to analyze (the mojo is marked with ""@phase process-classes"" but this
doesn't stop people from attaching it to earlier phases or running it on empty projects).

Hope this helps.",21/Sep/07 17:02;mcculls;can this issue be closed?,"16/Dec/07 16:07;mcculls;Hi,

I'd like to get all resolved defects verified before releasing the 1.1.0 version of the bundleplugin - so I'd really appreciate it if you could check things are still ok with the current snapshot, and if so close off the defect.

Thanks in advance!","30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,,,,,,,,
mvn eclipse:eclipse target results in faulty org.apache.felix.main project,FELIX-350,12377100,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,cvs,cvs,29/Aug/07 14:38,06/Mar/08 23:38,14/Mar/19 02:47,06/Mar/08 23:38,,,,,,,,,,,,,,,,,,,,,,0,,,,,,After doing a 'mvn -Dpackaging=bundle eclipse:eclipse' the resulting eclipse project for 'main' has a problem finding it's osgi core dependency. It seems to be fixed if I remove all <exclusions></exclusions> entries from the pom.xml.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-29 14:42:18.32,,,no_permission,,,,,,,,,,,58634,,,Thu Mar 06 23:38:52 UTC 2008,,,,,,0|i140u7:,231598,,,,,,,,29/Aug/07 14:42;karlpauls;I think you are right. After my last change for the 1.0.0 release the dependency exclusion is not needed anymore. I'll have a look at it. Thanks :-),06/Mar/08 23:38;karlpauls;This is resolved by now. ,,,,,,,,,,,,,,,,,,,,,,,,,
metatype.xml generated by Maven SCR plugin is not well-formed,FELIX-349,12377006,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,bdelacretaz,bdelacretaz,28/Aug/07 15:31,11/Mar/08 07:13,14/Mar/19 02:47,28/Aug/07 15:40,,,,,,,,,,,maven-scr-plugin-1.0.1,,,,SCR Tooling,,,,,,,0,,,,,,"I'm using the maven-scr-plugin 0.2.0, and the generated metatype.xml is not well-formed.

From the example below, it looks like only the last <metatype:Option> is closed, inside a <metatype:OCD/>

<metatype:OCD id=""org.apache.sling.core.log.RequestLoggerFilter"" name=""%request.log.name"" description=""%request.log.description"">
<metatype:AD id=""service.description"" name=""%service.description.name"" description=""%service.description.description""/>
<metatype:AD id=""service.vendor"" name=""%service.vendor.name"" description=""%service.vendor.description""/>
<metatype:AD id=""request.log.output"" name=""%request.log.output.name"" description=""%request.log.output.description""/>
<metatype:AD id=""request.log.outputtype"" type=""Integer"" name=""%request.log.outputtype.name"" description=""%request.log.outputtype.description"">
<metatype:Option value=""0"" label=""Logger Name"">
<metatype:Option value=""1"" label=""File"">
<metatype:Option value=""Name"" label=""RequestLog""/>
<metatype:AD id=""request.log.enabled"" type=""Boolean"" name=""%request.log.enabled.name"" description=""%request.log.enabled.description""/>
<metatype:AD id=""access.log.output"" name=""%access.log.output.name"" description=""%access.log.output.description""/>
<metatype:AD id=""access.log.outputtype"" type=""Integer"" name=""%access.log.outputtype.name"" description=""%access.log.outputtype.description"">
<metatype:Option value=""0"" label=""Logger Name"">
<metatype:Option value=""1"" label=""File"">
<metatype:Option value=""Name"" label=""RequestLog""/>
<metatype:AD id=""access.log.enabled"" type=""Boolean"" name=""%access.log.enabled.name"" description=""%access.log.enabled.description""/>
</metatype:OCD>
<",macosx / JDK 1.5,,,,,,,,,,,,,,,,,,,28/Aug/07 15:32;bdelacretaz;metatype.xml;https://issues.apache.org/jira/secure/attachment/12364691/metatype.xml,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-28 15:38:56.373,,,no_permission,,,,,,,,,,,58635,,,Tue Aug 28 15:46:05 UTC 2007,,,,,,0|i0vyg7:,184554,,,,,,,,28/Aug/07 15:32;bdelacretaz;complete metatype.xml,28/Aug/07 15:38;cziegeler;It seems that the Option element is not closed propertly.,"28/Aug/07 15:40;cziegeler;I just committed a fix for this patch which correctly closes the option tag. Please test and close this bug.

Thanks","28/Aug/07 15:46;bdelacretaz;That was quick, thanks!

The metatype.xml is indeed well-formed using the 0.3.0-SNAPSHOT version of the plugin. 

I don't have karma to close this issue, so feel free to do it.",,,,,,,,,,,,,,,,,,,,,,,
Configuration Admin should not send a CM_UPDATED event after first registration of a ManagedService,FELIX-348,12376796,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,24/Aug/07 11:37,24/Aug/07 11:41,14/Mar/19 02:47,24/Aug/07 11:41,,,,,,,,,,,,,,,Configuration Admin,,,,,,,0,,,,,,"As per section 104.5.3 of the Configuration Admin Specification a CM_UPDATED event is created when a ManagedService is first registered. According to BJ Hargrave (see [1]) this is a bug and is now listed as an errata of the R4 Spec (see [2]).

Therefore, the ConfigurationManager sending the event must be fixed.

[1] http://www.mail-archive.com/osgi-dev@www2.osgi.org/msg00477.html
[2] http://www2.osgi.org/Release4/Errata",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58636,,,Fri Aug 24 11:41:14 UTC 2007,,,,,,0|i0w19j:,185010,,,,,,,,24/Aug/07 11:41;fmeschbe;Fix committed in Rev. 569357 and deployed a new snapshot (build 20070824.114010-4).,24/Aug/07 11:41;fmeschbe;Over and out :-),,,,,,,,,,,,,,,,,,,,,,,,,
New Maven SCR Plugin does not emit namespace declaration on JDK 1.4,FELIX-347,12376718,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fmeschbe,fmeschbe,23/Aug/07 14:58,11/Mar/08 07:13,14/Mar/19 02:47,24/Aug/07 07:28,,,,,,,,,,,maven-scr-plugin-1.0.1,,,,SCR Tooling,,,,,,,0,,,,,,"The Java 1.4 Transformer used by the Maven SCR Plugin seems to no emit the namespace declaration needed to parse the scr descriptors containing namespaces. Java 5 and newer transformers work alright.

The workaround is to manually create the namespace declaration as an attribute to the root element. This workaround has been tested on JDK 1.4, 5 and 6.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-24 07:28:54.908,,,no_permission,,,,,,,,,,,58637,,,Fri Aug 24 08:07:16 UTC 2007,,,,,,0|i0w07j:,184839,,,,,,,,"24/Aug/07 07:28;cziegeler;I added a detection mechanism for faulty namespace implementations. Your suggested workaround is installed in this case. While this solution is heavy weight compared to the actual problem, it works in all circumstances and is transparent to the developer sending events (avoiding problems in the future with namespaces)
Please check if it works for you as well",24/Aug/07 08:07;fmeschbe;Thanks for fixing. Seems to work.,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle.getHeaders() fails with NullPointerException,FELIX-346,12376681,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,pkriens,pkriens,23/Aug/07 08:00,23/Aug/07 14:44,14/Mar/19 02:47,23/Aug/07 14:04,framework-1.0.0,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"It seems the code assumes the locale != null, I think the local can be legally null

java.lang.NullPointerException
	at org.apache.felix.framework.BundleInfo.createResourceList(BundleInfo.java:339)
	at org.apache.felix.framework.BundleInfo.getCurrentLocalizedHeader(BundleInfo.java:278)
	at org.apache.felix.framework.Felix.getBundleHeaders(Felix.java:1278)
	at org.apache.felix.framework.BundleImpl.getHeaders(BundleImpl.java:137)
	at org.eclipse.soda.sat.core.util.BundleManifestUtility.getHeader(BundleManifestUtility.java:357)
	at org.eclipse.soda.sat.core.util.BundleManifestUtility.getHeader(BundleManifestUtility.java:343)
	at org.eclipse.soda.sat.core.util.BundleManifestUtility.getBundleVendor(BundleManifestUtility.java:265)
	at org.eclipse.soda.sat.core.internal.record.ExportServiceRecord.setBundleVendorProperty(ExportServiceRecord.java:298)
	at org.eclipse.soda.sat.core.internal.record.ExportServiceRecord.populateWithAdditionalProperties(ExportServiceRecord.java:217)
	at org.eclipse.soda.sat.core.internal.record.ExportServiceRecord.registerServiceWithFramework(ExportServiceRecord.java:285)
	at org.eclipse.soda.sat.core.internal.record.ExportServiceRecord.register(ExportServiceRecord.java:273)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.addExportedService(BundleActivationManager.java:187)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.addExportedService(BundleActivationManager.java:199)
	at org.eclipse.soda.sat.core.framework.BaseBundleActivator.addExportedService(BaseBundleActivator.java:205)
	at org.eclipse.soda.sat.core.internal.framework.bundle.Activator.addExportedBundleDependencyService(Activator.java:97)
	at org.eclipse.soda.sat.core.internal.framework.bundle.Activator.activate(Activator.java:85)
	at org.eclipse.soda.sat.core.framework.BaseBundleActivator$1.activate(BaseBundleActivator.java:308)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.activate(BundleActivationManager.java:151)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.performActivation(BundleActivationManager.java:1283)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.access$0(BundleActivationManager.java:1269)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager$1.acquired(BundleActivationManager.java:411)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer.serviceAcquired(ImportServiceRecordContainer.java:470)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer.access$0(ImportServiceRecordContainer.java:458)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer$4.serviceAcquired(ImportServiceRecordContainer.java:282)
	at org.eclipse.soda.sat.core.internal.record.ImportServiceRecord.acquire(ImportServiceRecord.java:115)
	at org.eclipse.soda.sat.core.internal.record.ImportServiceRecord.acquire(ImportServiceRecord.java:124)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer$1.execute(ImportServiceRecordContainer.java:58)
	at org.eclipse.soda.sat.core.internal.record.container.ServiceRecordContainer.doForService(ServiceRecordContainer.java:353)
	at org.eclipse.soda.sat.core.internal.record.container.ServiceRecordContainer.doForEach(ServiceRecordContainer.java:321)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer.acquire(ImportServiceRecordContainer.java:237)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.acquireImportedServices(BundleActivationManager.java:126)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.startSync(BundleActivationManager.java:1684)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.start(BundleActivationManager.java:1653)
	at org.eclipse.soda.sat.core.framework.BaseBundleActivator.start(BaseBundleActivator.java:1102)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
	at org.apache.felix.framework.Felix._startBundle(Felix.java:1535)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1469)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:348)
	at aQute.fileinstall.DirectoryWatcher.doInstalled(DirectoryWatcher.java:188)
	at aQute.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:59)
Fail to start bundle C:\aQute\aQute.multifw\.\load\org.eclipse.soda.sat.core_1.0.0.200703181504.jar: org.osgi.framework.BundleException: Activator start error.
java.lang.NullPointerException
	at org.apache.felix.framework.BundleInfo.createResourceList(BundleInfo.java:339)
	at org.apache.felix.framework.BundleInfo.getCurrentLocalizedHeader(BundleInfo.java:278)
	at org.apache.felix.framework.Felix.getBundleHeaders(Felix.java:1278)
	at org.apache.felix.framework.BundleImpl.getHeaders(BundleImpl.java:137)
	at org.eclipse.soda.sat.core.util.BundleManifestUtility.getHeader(BundleManifestUtility.java:357)
	at org.eclipse.soda.sat.core.util.BundleManifestUtility.getHeader(BundleManifestUtility.java:343)
	at org.eclipse.soda.sat.core.util.BundleManifestUtility.getBundleVendor(BundleManifestUtility.java:265)
	at org.eclipse.soda.sat.core.internal.record.ExportServiceRecord.setBundleVendorProperty(ExportServiceRecord.java:298)
	at org.eclipse.soda.sat.core.internal.record.ExportServiceRecord.populateWithAdditionalProperties(ExportServiceRecord.java:217)
	at org.eclipse.soda.sat.core.internal.record.ExportServiceRecord.registerServiceWithFramework(ExportServiceRecord.java:285)
	at org.eclipse.soda.sat.core.internal.record.ExportServiceRecord.register(ExportServiceRecord.java:273)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.addExportedService(BundleActivationManager.java:187)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.addExportedService(BundleActivationManager.java:199)
	at org.eclipse.soda.sat.core.framework.BaseBundleActivator.addExportedService(BaseBundleActivator.java:205)
	at org.eclipse.soda.sat.core.internal.framework.bundle.Activator.addExportedBundleDependencyService(Activator.java:97)
	at org.eclipse.soda.sat.core.internal.framework.bundle.Activator.activate(Activator.java:85)
	at org.eclipse.soda.sat.core.framework.BaseBundleActivator$1.activate(BaseBundleActivator.java:308)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.activate(BundleActivationManager.java:151)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.performActivation(BundleActivationManager.java:1283)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.access$0(BundleActivationManager.java:1269)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager$1.acquired(BundleActivationManager.java:411)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer.serviceAcquired(ImportServiceRecordContainer.java:470)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer.access$0(ImportServiceRecordContainer.java:458)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer$4.serviceAcquired(ImportServiceRecordContainer.java:282)
	at org.eclipse.soda.sat.core.internal.record.ImportServiceRecord.acquire(ImportServiceRecord.java:115)
	at org.eclipse.soda.sat.core.internal.record.ImportServiceRecord.acquire(ImportServiceRecord.java:124)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer$1.execute(ImportServiceRecordContainer.java:58)
	at org.eclipse.soda.sat.core.internal.record.container.ServiceRecordContainer.doForService(ServiceRecordContainer.java:353)
	at org.eclipse.soda.sat.core.internal.record.container.ServiceRecordContainer.doForEach(ServiceRecordContainer.java:321)
	at org.eclipse.soda.sat.core.internal.record.container.ImportServiceRecordContainer.acquire(ImportServiceRecordContainer.java:237)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.acquireImportedServices(BundleActivationManager.java:126)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.startSync(BundleActivationManager.java:1684)
	at org.eclipse.soda.sat.core.internal.framework.bundle.BundleActivationManager.start(BundleActivationManager.java:1653)
	at org.eclipse.soda.sat.core.framework.BaseBundleActivator.start(BaseBundleActivator.java:1102)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:589)
	at org.apache.felix.framework.Felix._startBundle(Felix.java:1535)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1469)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:348)
	at aQute.fileinstall.DirectoryWatcher.doInstalled(DirectoryWatcher.java:188)
	at aQute.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:59)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-23 14:04:36.984,,,no_permission,,,,,,,,,,,58638,,,Thu Aug 23 14:44:39 UTC 2007,,,,,,0|i0w05b:,184829,,,,,,,,"23/Aug/07 14:04;rickhall;I have modified the code to use the default locale if null is specified. Peter, please close this bug if the issue is resolved. Thanks.",23/Aug/07 14:44;pkriens;The NullPointer bug has disappeared,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException after updating a ManagedService when no Configuration exists,FELIX-342,12376564,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,22/Aug/07 05:51,22/Aug/07 15:32,14/Mar/19 02:47,22/Aug/07 12:55,,,,,,,,,,,framework-1.0.0,,,,Configuration Admin,,,,,,,0,,,,,,"Tom Remoleur reported the following issue:

In ConfigurationManager$ManagedServiceUpdate task : if the configuration  
is null (by exemple first registration of a ManagedService), at the end,  
you fire a configuration event but the  
ConfigurationManager$FireConfigurationEvent task try to accede to  
configuration to get the pid (line 1261) => NPE",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58642,,,Wed Aug 22 15:32:58 UTC 2007,,,,,,0|i140sv:,231592,,,,,,,,"22/Aug/07 12:54;fmeschbe;Refactored how events are fired: Now the PID and Factory PID for the Event are given as parameters and not as ConfigurationImpl object which in fact may be null in case of a non-existing configuration for a newly registered ManagedService.

Fixed in Rev. 568514.","22/Aug/07 12:55;fmeschbe;And deployed new bundle.

So I mark this resolved.",22/Aug/07 15:32;fmeschbe;Tom confirmed the fix to be good. Hence closing this issue.,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent exception during Felix shutdown,FELIX-341,12376475,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,rsivaram,rsivaram,21/Aug/07 08:32,30/May/08 18:15,14/Mar/19 02:47,30/Aug/07 14:56,framework-1.0.0,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"One of my testcases intermittently throws an exception during shutdown. I have managed to recreate the exception under a debugger, and it shows two threads trying to unregister the same service. The test fails only when declarative services are used. I am using Felix 1.0.0 framework and the latest snapshot of SCR. The test uses multiple versions of a bundle, but I am not sure if that has anything to do with the exception.
 
The exception thrown is:
 
    --- Exception with component : Unexpected problem executing task ---
    java.lang.IllegalStateException: Service already unregistered.
        at org.apache.felix.framework.ServiceRegistrationImpl.unregister (ServiceRegistrationImpl.java:105)
        at org.apache.felix.scr.AbstractComponentManager.unregisterComponentService(AbstractComponentManager.java:503)
        at org.apache.felix.scr.AbstractComponentManager.deactivateInternal (AbstractComponentManager.java:369)
        at org.apache.felix.scr.AbstractComponentManager.access$200(AbstractComponentManager.java:55)
        at org.apache.felix.scr.AbstractComponentManager$3.run(AbstractComponentManager.java :176)
        at org.apache.felix.scr.ComponentActorThread.run(ComponentActorThread.java:81)
 
Here is the stack trace of the two threads under the debugger (both are using the same object):
 
                Thread [FelixStartLevel] (Suspended (breakpoint at line 97 in ServiceRegistrationImpl))
                        ServiceRegistrationImpl.unregister() line: 97
                        ServiceRegistry.unregisterServices (Bundle) line: 119
                        Felix._stopBundle(FelixBundle, boolean) line: 1946
                        Felix.stopBundle(FelixBundle, boolean) line: 1866
                        Felix.setFrameworkStartLevel (int) line: 1080
                        StartLevelImpl.run() line: 258
                        Thread.run() line: 803
                Thread [SCR Component Actor] (Suspended (breakpoint at line 97 in ServiceRegistrationImpl))
                        ServiceRegistrationImpl.unregister() line: 97
                        ImmediateComponentManager(AbstractComponentManager).unregisterComponentService() line: 503 
                        ImmediateComponentManager(AbstractComponentManager).deactivateInternal() line: 369
                        AbstractComponentManager.access$200(AbstractComponentManager) line: 55
                        AbstractComponentManager$3.run() line: 176 
                        ComponentActorThread.run() line: 81
 
 
The exception thrown is the IllegalStateException from
    public void unregister()
    {
        if (m_svcObj != null)
        {
            m_registry.unregisterService(m_bundle, this);
            m_svcObj = null;
            m_factory = null;
        } 
        else
        {
            throw new IllegalStateException(""Service already unregistered."");
        }
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-22 15:29:16.936,,,no_permission,,,,,,,,,,,58643,,,Thu Sep 06 08:45:52 UTC 2007,,,,,,0|i140xb:,231612,,,,,,,,"22/Aug/07 15:29;fmeschbe;I cannot exactly tell, what is going on here. Telling from the code, the deactivate() method, which asynchronously calls the deactivateInternal() method, is only called from the createImplementationObject method to ""deactivate"" the component if activation fails. It is of course not a good thing, that this method calls component deactivation asynchronously. Instead the component should be marked inactive immediately (aka synchronously).

On the other hand, the createImplementationObject method should not actually call deactivate, as all that needs to be undone is

   > object creation: nothing to do, we just ignore the reference to the newly created object
   > reference binding: we need to unbind any bound references
   > activate method: nothing to do (if object creation fails before, activate is not called, otherwise activate failed)

So, the fix is to just make sure, any bound references are unbound and that - in the case of an immediate component - the state is not set to active and - if so configured - no services are registered.

Fixed like this in Rev. 568657","30/Aug/07 11:31;fmeschbe;Rajini provided me with additional testcase instructions, which showed the following behaviour:

Consider Bundle B1 with Component C1 registered as a service and Bundle B2 with Component C2 registered as a service. C1 has a mandatory dependency on C2 and B1 is started before B2.

When the framework is shut down, B2 is stopped before B1. While stopping B2, Component C2 is unregistered as a service and deactivated. As a result C1 is to be deactivated and hence unregistered as a service. This deactivation of C1 is launched asynchronously such that B1 will not deactivate C1 as it already is assumed to be deactivated.

Due to timing issues the asynchronous deactivation of C1 may be delayed such that service registration of C1 is unregistered by the framework due to Bundle B1 stop before C1 deactivation could unregister the service. This could cause  trying to unregister the same service twice and hence the IllegalStateException.

Though this seems to be a multithreading corner case, there is another catch with asynchronously deactivating components due to unregistered services: If a component has a dependency on another service, it should be notified of the removal of the service as fast as possible. Hence, this situation should be handled synchronously to the service unregistration notice. So the fix is to immediately deactivate the depending component and schedule the reactivation asynchronously.

At the same time I add more logging and more security to not activate components while the owning bundle is actually shutting down.","30/Aug/07 14:56;fmeschbe;Fixed in Rev. 571194 as follows:

   * Enhanced logging
   * No activation of components when the owning bundle is (being) stopped
   * Synchronous Component Deactivation (Activation still asynchronous)
   * No more Task Scheduling while a Bundle is stopped or stopping

Also deployed a new snapshot.",06/Sep/07 08:45;fmeschbe;This has been confirmed to be fixed,,,,,,,,,,,,,,,,,,,,,,,
Plug-in fails if dependencies are not all jar files,FELIX-340,12376228,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,mcculls,sauthieg,sauthieg,17/Aug/07 09:11,25/Sep/07 06:59,14/Mar/19 02:47,22/Aug/07 03:30,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"I'm just trying to make my first bundle using the felix maven-bundle-plugin.
As this bundle is intended to have a quite big number of dependencies, I've created a pom module that only defines all the dependencies. The  this module has been placed in the dependencies section of my bundle's pom.xml.
looks like this: a --> b --> (c, d, e, f, g, h, i, ...)

When I just build my bundle, It finish quite soon with a NPE in JarFile!
-> The bundleplugin only manage jar file as dependencies. It should at least check the dependency type before assuming this is a jar file.",,,,,,,,,,,,,,,,,,,,17/Aug/07 09:26;sauthieg;FELIX-340.patch;https://issues.apache.org/jira/secure/attachment/12364013/FELIX-340.patch,17/Aug/07 09:15;sauthieg;FELIX-340.poms.zip;https://issues.apache.org/jira/secure/attachment/12364012/FELIX-340.poms.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-08-22 03:15:52.657,,,no_permission,,,,,,,,,,,58644,,,Tue Sep 25 06:59:16 UTC 2007,,,,,,0|i0vygn:,184556,,,,,,,,"17/Aug/07 09:15;sauthieg;Here are the poms that can be used to reproduce the issue:

1. mvn install in the 'api' module
2. mvn install in the 'bundle' module

This will produce the following Exception (with both 1.0.0 or 1.10-SNAPSHOT)

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error calculating classpath for project org.apache.maven.project.MavenProject@f51209b4

Embedded error: error in opening zip file
[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Error calculating classpath for project org.apache.maven.project.MavenProject@f51209b4
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:564)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Error calculating classpath for project org.apache.maven.project.MavenProject@f51209b4
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:155)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:143)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        ... 16 more
Caused by: java.util.zip.ZipException: error in opening zip file
        at java.util.zip.ZipFile.open(Native Method)
        at java.util.zip.ZipFile.<init>(ZipFile.java:203)
        at java.util.zip.ZipFile.<init>(ZipFile.java:234)
        at aQute.lib.osgi.ZipResource.build(ZipResource.java:39)
        at aQute.lib.osgi.ZipResource.build(ZipResource.java:32)
        at aQute.lib.osgi.Jar.<init>(Jar.java:31)
        at org.apache.felix.bundleplugin.BundlePlugin.getClasspath(BundlePlugin.java:356)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:151)
        ... 19 more
","17/Aug/07 09:26;sauthieg;Here is the patch.

This patch simply select only the dependencies that are .jar files before trying to unpack them.

Just notice that if you try to re-run the pom I provided, you will still have an error, but only telling that the result jar file is empty (as my only dependency is a pom, and because I did not selected it, I have no deps to filter, resulting in an empty jar, and thus an error from BND).

Here is the new exception, for info:

[INFO] [bundle:bundle]
[ERROR] Error building bundle test.osgi:bundle:bundle:1.0.0-SNAPSHOT : The JAR is empty
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Found errors, see log
[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Unknown error occurred
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:564)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Unknown error occurred
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:262)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:156)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:148)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        ... 16 more
Caused by: org.apache.maven.plugin.MojoFailureException: Found errors, see log
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:245)
        ... 20 more
","22/Aug/07 03:15;mcculls;looking at the maven documentation, the correct way to filter classpath artifacts is using:

   artifact.getArtifactHandler().isAddedToClasspath()

I also believe we should be using project.getArtifacts() instead of getDependencyArtifacts
because the compilation classpath used to build Java sources is derived from getArtifacts.

getDependencyArtifacts only returns artifacts directly referenced in the pom, which is why
the provided testcase failed with the provided patch - using getArtifacts it builds a bundle
containing various javax.* classes (because the test pom has Export-Package: javax.*)

FYI, the key difference between the bundleplugin classpath and the compilation classpath is
that the bundleplugin always uses the file in the local repository, whereas maven will use the
output directories (ie. 'target/classes') for any projects in the same reactor.

  (the reason the bundleplugin doesn't use the output directories is because for bundles
   they may not exist, or they may only contain some of the actual classes of the bundle)
","22/Aug/07 03:22;mcculls;I also updated the maven-plugin-testing-harness to 1.1 because the 1.0 version
contained a bug where the maven project stub code always returned a list with
an empty string for getArtifacts() causing a class-cast-exception in the test.",22/Aug/07 03:30;mcculls;I've fixed this in trunk and hope to make a new deployment of the bundleplugin once FELIX-308 is applied.,"22/Aug/07 08:37;sauthieg;Yep you're right, project.getArtifacts() is the good way to obtain all the resolved dependencies.
Thanks to point this out.

",21/Sep/07 17:02;mcculls;can this issue be closed?,"25/Sep/07 06:59;sauthieg;Yep, that's OK for me",,,,,,,,,,,,,,,,,,,
Framework FilterImpl is not thread safe on execution,FELIX-338,12376023,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,fmeschbe,fmeschbe,15/Aug/07 05:52,12/Sep/07 17:54,14/Mar/19 02:47,15/Aug/07 20:14,framework-0.8.0,framework-1.0.0,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"Executing a Filter implemented by the Felix Framework FilterImpl class is not thread safe, as the Filter.Implmatch() methods are not synchronized but use a Mapper and Evaluator instance fields which are modified while matching the filter.

Two options seem to exist:

   1. Make the match() methods synchronized
   2. Create Mapper and Evaluator instances on each match() call

My assumption is that the second method tends to be better because of the synchronization needed with the first approach.

Reported by Tom Remoleur, thanks. The full mail thread leading to this issue may be found at [1].

[1] http://www.mail-archive.com/users@felix.apache.org/msg00145.html",,,,,,,,,,,,,,,,,,,,15/Aug/07 14:56;fmeschbe;FilterImpl_rewrite.patch;https://issues.apache.org/jira/secure/attachment/12363849/FilterImpl_rewrite.patch,15/Aug/07 13:59;karlpauls;filter.patch;https://issues.apache.org/jira/secure/attachment/12363845/filter.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-08-15 13:33:27.753,,,no_permission,,,,,,,,,,,58646,,,Wed Sep 12 17:54:05 UTC 2007,,,,,,0|i140pz:,231579,,,,,,,,"15/Aug/07 13:33;karlpauls;Well, in my experience it never pays to jump to conclusions when Java
is involved. I actually wrote a quick test and see the following
(Apple, JVM 1.3 and 1.5).

syncing the match method adds ~ 5% overhead in a single thread scenario.
syncing the match method adds ~ 40% overhead in a multi thread scenario.

creating new instances adds ~ 40 % overhead in a single thread scenario.
creating new instances adds ~ 40 % overhead in a multi thread scenario.

In other words, the new instances approach doesn't seem that good to
me (your mileage may vary :-).

Fortunately, I wrote a solution that uses a ThreadLocal to only create
a new instance per Thread. I keep the instance in a SoftReference and
for my test the memory looks good to. This solution gives me:

ThreadLocal adds ~ 5% overhead in a single thread scenario
ThreadLocal adds ~ 5% overhead in a multi thread scenario

The downside is that it doesn't necessarily makes the code more pretty ;-).",15/Aug/07 13:59;karlpauls;Using a combination of ThreadLocal and SoftReferences to address the issue. ,"15/Aug/07 14:52;fmeschbe;I have to admit, that I never touched ThreadLocals myself upto now. But It seems to be the best of all possibilities to fix the issues.

On the other hand, looking at the code, it seems like the Evaluator basically just ist a single method whose only data modified during evaluation is the operand stack. So, I assume, the Evaluator.evaluate(Mapper) method might just as well be copied to the FilterImpl class and the operand stack a variable local to the method - this stack would be recreated on each call (instead of the Evaluator) and need not be cleared at the end, as this is left to the GC.

The other object - the mapper - is just a facade to the actual data being used for filter matching.

So besides just not reusing the instances, I would also redo the implementation.","15/Aug/07 14:56;fmeschbe;Here is a patch with what I had in mind. It expectes the following changes in the ldap package:

   Parser.getProgram returns Operator[] to not use a cast on each access. I assume the parser creates
   a ""pure"" list anyway, so the getProgram might as well create the proper array

   The Unknown class must be public for the FilterImpl.evaluate (copied from Evaluator) to see it

Finally, the evaluate and toStringInfix method are copied from the Evaluator to FilterImpl.

I just saw after finishing the patch, that in fact the FilterImpl class is the only LDAP related class not in the ldap package - so the separation of FilterImpl and Evaluator might make sense.... Don't know for sure.","15/Aug/07 15:14;rickhall;The LDAP package is self-contained. I don't think it is a good idea to move LDAP code outside the LDAP package, nor is it a good idea to duplicate that code elsewhere, since code duplication is a maintenance headache. Perhaps it would be possible to modify Evaluator.evaluate() method to accept both the program and the mapper so that it can be re-entrant?
","15/Aug/07 15:35;karlpauls;I agree with Richard, we should try to avoid code duplication and I like the fact that the LDAP package is self-contained. 

Furthermore, I did re-run my tests and for me your solution doesn't help much. Still 35% overhead for both scenarios. The issue is the simple wrapper instance creations on every call - not the evaluator. ","15/Aug/07 19:15;fmeschbe;In this case, of course I agree with you to stick with your patch (on my Linux with Sun JDK 1.4, the differences are not that big, but then...). Will you apply it, or should I do it ?","15/Aug/07 19:58;karlpauls;Yes, I admit that it is always tricky to do performance test. All I can say is that for me the ThreadLocal version runs faster. One issue might be how many native threads your system supports. In case you use much more threads then you really have parallelism must go done. The above, I see on a MacBook Pro with a dual core 2.4 Ghz Intel and under a SunVM under Windows (but that is under VMWare). It is almost the same for 2, 4, and 8 threads but approaches 0 quickly after (at 64 threads I don't see any difference anymore).    

I'll go ahead and commit this patch now so that we have a fix in place. However, I agree with your point that we should look at the ldap code again to see whether we can clean it up some more. Let's pick that up again once we have a bug fix release out of the door.","15/Aug/07 20:14;karlpauls;The patch is in trunk as of r566323. Please try to test whether this makes your issue go away (or not appear in this case). I'll try to run the framework in the project I saw the same issue too. Hopefully, it should be gone now. I'll close this issue if I don't hear anything for some time.","12/Sep/07 17:54;karlpauls;Seems to work now.
",,,,,,,,,,,,,,,,,
Immediate components are registered as delayed,FELIX-337,12375960,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,fmeschbe,jvolkman,jvolkman,14/Aug/07 10:46,01/Aug/15 11:24,14/Mar/19 02:47,14/Aug/07 11:41,framework-0.8.0,framework-1.0.0,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"DS doesn't properly detect implicit immediate components (components with no ""immediate"" attribute and no service registrations). 

From the spec, section 112.2.2:

""A component is an immediate component if it is not a factory
component and either does not specify a service or specifies a service
and the immediate attribute of the component element set to true.""

Currently, a component defaults to 'immediate=""false""', and the only way to change this value is to explicitly define it in the component description.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-14 11:40:35.54,,,no_permission,,,,,,,,,,,58647,,,Tue Aug 14 11:41:05 UTC 2007,,,,,,0|i0vqvb:,183326,,,,,,,,"14/Aug/07 11:40;fmeschbe;Updated the ComponentMetadata class as follows:

1.  m_immediate is now Boolean to support tri-state: undefined, true and false. The latter two are only set if the immediate attribute is set in the descriptor. Otherwise the immediate status of the component is deduced from the presence of a ServiceMetadata (hence a service element in the descriptor.

2. In addition I added a check to ensure, the immediate element is set to ""true"" (if actually set in the descriptor) if no service element is defined. According to the spec: ""If [the immediate attribute] is specified, its value must be true unless the service element is specified"" (Section 112.4.3).

Fixed in Rev. 565708.

Finally, I also deployed a new snapshot","14/Aug/07 11:41;fmeschbe;Fixed, please close if you can confirm.",,,,,,,,,,,,,,,,,,,,,,,,,
Configuration Admin updates with empty properties and throws NullPointerExceptions due to race condition,FELIX-335,12375690,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,karlpauls,karlpauls,09/Aug/07 16:45,20/Aug/07 19:17,14/Mar/19 02:47,20/Aug/07 13:18,,,,,,,,,,,framework-1.0.0,,,,Configuration Admin,,,,,,,0,,,,,,"There appears to be a race condition in the configuration admin that allows managed services to get updated with empty properties (but not null). Furthermore, due to the same bug NullPointerExceptions appear under heavy load. 

Fortunately, I think I was able to isolate the bug. The issue is that configurations are persisted when created but before they are initialized (i.e., given a configuration). If during this window a new ManagedService appears it gets updated with an empty Dictionary. Likewise, if the configuration is re-read after such an update attempt it does not have a pid which causes the null pointer exceptions.

The fix seems to be rather simple  (unless I'm missing something :-) but took me some time to figure out. ",,,,,,,,,,,,,,,,,,,,16/Aug/07 14:58;fmeschbe;ConfigAdmin.FELIX-335.patch;https://issues.apache.org/jira/secure/attachment/12363943/ConfigAdmin.FELIX-335.patch,17/Aug/07 13:11;fmeschbe;ConfigAdmin.FELIX-335_2.patch;https://issues.apache.org/jira/secure/attachment/12364033/ConfigAdmin.FELIX-335_2.patch,09/Aug/07 16:46;karlpauls;empty-properties.patch;https://issues.apache.org/jira/secure/attachment/12363507/empty-properties.patch,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-08-16 14:58:15.749,,,no_permission,,,,,,,,,,,58649,,,Mon Aug 20 19:17:46 UTC 2007,,,,,,0|i0w073:,184837,,,,,,,,"16/Aug/07 14:58;fmeschbe;Thanks for reporting this issue.

After looking deeper into the problems, I realize there is more than just this:

(1) If a configuration object is created it has to be persisted (104.7.1) but getProperties() must return null as long as the configuration object is not updated with properties. If now, the framework (or actually the Configuration Admin service) is restarted before such an update takes place, I assume, getProperties() must still return null after the restart. Currently, empty properties is returned in this case.

(2) As a configuration object has to be persisted upon creation, the save operation is where I originally put it. But it is correct, that there is a race condition, where multiple configuration objects might be created or the may be incomplete.

(3) If a ManagedService is registered but no configuration is available (assuming that newly created configuration prior to a first update is equivalent to non-existing) the updated() method must be called with null. Currently, either a NullPointerException may occurr or an empty directory may wrongly be given to the updated() method.

(4) If a ManagedService is updated with configuration, the bundle location is not always set on the configuration object.

(5) it may be, that the callPlugins method is called with a configuration object, which is new and therefore getProperties() returns null and hence the callPlugins might throw a NullPointerException.

Given all these issues, I restructured accessing configurations from the cache and the persistent store as well as ensuring the ""new"" state survives a restart.

What do you think ?","16/Aug/07 20:38;karlpauls;With your patch, I see the following exception appear quite often in a heavily multithreaded project:

java.lang.NullPointerException
        at org.apache.felix.cm.file.FilePersistenceManager.encodePid(FilePersistenceManager.java:140)
        at org.apache.felix.cm.file.FilePersistenceManager.getFile(FilePersistenceManager.java:473)
        at org.apache.felix.cm.file.FilePersistenceManager.store(FilePersistenceManager.java:394)
        at org.apache.felix.cm.impl.ConfigurationImpl.store(ConfigurationImpl.java:340)
        at org.apache.felix.cm.impl.ConfigurationImpl.setBundleLocation(ConfigurationImpl.java:223)
        at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceUpdate.run(ConfigurationManager.java:840)
        at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:89) ","17/Aug/07 13:11;fmeschbe;Thanks for the feedback.

I went over the code again and again found some issues:

(1) It seems that when a ManagedService is registered and a new configuration is found, the configuration is immediately bound to the ManagedService. I assume, this is probably wrong. So I added precaution to not bind brand new configuration to the ManagedService.

(2) The FilePersistenceManager does not seem to act very well in multithreaded situations: A configuration file is directly written and thus may be read at the same time and hence returning nothing at. I added synchronization to the load and store methods to prevent same-time access to files as well as have the store method write to a temporary file which is renamed when done.

Attached, find a new patch, which is complete in a sense, that it includes the changes of yesterday.

Sorry to misuse you as the testbed for this... But I cannot currently come up with a good muli-threaded test case.","20/Aug/07 13:12;fmeschbe;I created now my own test cases, which could reproduce the initially reported issues as well as those reported by Karl on 16/Aug. Both issues have been resolved and the service seems to work correctly.

I will commit these fixes now and deploy a new snapshot, such that regular users may also test.",20/Aug/07 13:18;fmeschbe;Committed the fixes to Rev. 567688 and deployed a new snapshot of this bundle.,"20/Aug/07 19:17;karlpauls;I asked Ronald Spierenburg to run it through our (even more) involved tests and he wasn't able to produce any problems -- hence, I'm going to close this issue. Thanks a lot for fixing these issues so quickly!",,,,,,,,,,,,,,,,,,,,,
Missing callbacks for Configuration plugins,FELIX-334,12375403,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,melampyre,melampyre,06/Aug/07 07:43,06/Aug/07 09:07,14/Mar/19 02:47,06/Aug/07 09:07,,,,,,,,,,,framework-1.0.0,,,,Configuration Admin,,,,,,,0,,,,,,"The modifyConfiguration method in configuration plugin class is not called for each configuration update, after look in the code, in ConfigurationManager class there is 3 differents tasks named ManagedServiceUpdate, ManagedServiceFactoryUpdate and UpdateConfiguration, in the first two before calling update method on service, the plugin modifyConfiguration method is called but not in the last task.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-06 09:05:02.206,,,no_permission,,,,,,,,,,,58650,,,Mon Aug 06 09:07:18 UTC 2007,,,,,,0|i0w17b:,185000,,,,,,,,"06/Aug/07 09:05;fmeschbe;The problem, as correctly stated, is that the updated configuration is not passed by the plugins before handing them over to the ManagedService(Factory).

In addition I fixed a minor issue, where a factory configuration instance might have been created if listed as being part of the factory but not actually existing anymore. This should not happen, instead a message should be logged and the respective PID be removed from the factory list.

Fixed in Rev. 563070","06/Aug/07 09:07;fmeschbe;After deploying a new snapshot of the ConfigAdmin, I close this.",,,,,,,,,,,,,,,,,,,,,,,,,
<Include_Resouce> can create a corrupt manifest file.,FELIX-333,12375301,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,tomdewire,tomdewire,03/Aug/07 14:23,01/Oct/07 06:36,14/Mar/19 02:47,13/Aug/07 16:48,framework-1.0.0,,,,,,,,,,framework-1.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Please see the attached maven project. It should demonstrate the issue. The generated manifest file is in the root directory as an example of the bad manifest syntax.

Whitespace is not being stripped from the contents of the <Include-Resource> tag. These end up in the manifest file, and corrupt it so the bundle cannot load.",Confirmed on Win32. Not sure about *nix.,,,,,,,,,,,,,,,,,,,13/Aug/07 16:36;mcculls;FELIX-333_20070814.txt;https://issues.apache.org/jira/secure/attachment/12363709/FELIX-333_20070814.txt,03/Aug/07 14:24;tomdewire;felix-bug-example.zip;https://issues.apache.org/jira/secure/attachment/12363125/felix-bug-example.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-08-03 15:18:40.672,,,no_permission,,,,,,,,,,,58651,,,Mon Oct 01 06:36:51 UTC 2007,,,,,,0|i0w0an:,184853,,,,,,,,03/Aug/07 14:24;tomdewire;A boiled-down maven project that should demonstrate the issue.,"03/Aug/07 15:18;cziegeler;I think, bnd should not include this header at all in the manifest. It is just used for the generation process.",13/Aug/07 08:17;pkriens;Why is the manifest corrupted? It seems ok to me?,"13/Aug/07 15:44;mcculls;Actually there is a problem with the manifest, but it's not initially obvious unless you open it using Linux.
Here's a similar example, note that there's a Unix newline that's not followed by a space on the next line:

   Include-Resource: foo=bar,
                           zzz=bar^M

The exception thrown from Java is as follows:

   org.osgi.framework.BundleException: The manifest line
      ""                 zzz=bar"" is invalid; it has no colon : character after the header key.
        at org.eclipse.osgi.framework.util.Headers.parseManifest(Headers.java:283)
        at org.eclipse.osgi.internal.baseadaptor.AdaptorUtil.loadManifestFrom(AdaptorUtil.java:193)

and the standard Jar utility class also barfs with this exception:

   java.io.IOException: invalid header field
        at java.util.jar.Attributes.read(Attributes.java:383)
        at java.util.jar.Manifest.read(Manifest.java:167)
        at java.util.jar.JarInputStream.<init>(JarInputStream.java:66)
        at java.util.jar.JarInputStream.<init>(JarInputStream.java:43)

The easy solution is to strip newlines from properties in the bundle-plugin before passing them to BND.
Of course Peter might prefer to handle this inside BND instead, as it might also be caused when using
BND from ant, etc. and a more robust library is always good :)

BTW, this only seems to happen with instructions passed in via the pom.xml, possibly because extra
whitespace is automatically removed when they're read in from a properties file using <_include>...
whereas with XML the whitespace is preserved.
","13/Aug/07 16:15;mcculls;after discussions with Peter, these values can only come from the XML so we'll fix it in the bundle-plugin.","13/Aug/07 16:36;mcculls;Suggested patch (FELIX-333_20070814.txt) removes any new-lines / form-feeds from the properties.
I didn't want to remove all whitespace, as filenames may contain spaces and shouldn't be trimmed.","13/Aug/07 16:48;rickhall;I applied the patch, please close this issue if everything is ok.",21/Sep/07 17:02;mcculls;can this issue be closed?,"01/Oct/07 06:36;mcculls;Received email from reporter: ""I was the original filer. Everything seems fine after the fix."" so closing issue.",,,,,,,,,,,,,,,,,,
Default resource handling not closing URL resource streams,FELIX-330,12375122,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,walkerr,walkerr,walkerr,01/Aug/07 09:27,01/Aug/07 10:09,14/Mar/19 02:47,01/Aug/07 09:39,framework-0.8.0,framework-1.0.0,,,,,,,,,,,,,HTTP Service,,,,,,,0,,,,,,"When using the default resource handling mechanism, resource streams are not closed once read. One consequence of this is that if file resources are accessed, they then remain open meaning the underlying files can't be deleted or modified by other tools.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58654,,,Wed Aug 01 09:39:28 UTC 2007,,,,,,0|i1aorb:,270477,,,,,,,,01/Aug/07 09:39;walkerr;Fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling Felix.stopAndWait() from Runtime.shutdownHook() freezes thread,FELIX-329,12374300,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,tonit,tonit,20/Jul/07 21:31,24/Jul/07 08:48,14/Mar/19 02:47,23/Jul/07 17:06,,,,,,,,,,,framework-1.0.0,,,,Framework,,,,,,,0,,,,,,"if a shutdownHook invokes Felix.stopAndWait() the monitor never gets notified and stays ""wait()"" forever.

Until now i haven't found a direct way to fix this behaviour ""normally"" but if we could use the timeout version wait(int) instead of ""wait()"" this behaviour is not tied to the monitor.notifyAll() functionality. (so perhaps its the better solution anyway and not just a workaround?)

Toni",tested on trunk (r555374),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-23 17:06:24.702,,,no_permission,,,,,,,,,,,58655,,,Tue Jul 24 08:48:06 UTC 2007,,,,,,0|i1aorj:,270478,,,,,,,,"23/Jul/07 17:06;rickhall;A bug slipped into the framework shutdown process during the refactoring of the code. A ""synchronized (this)"" was put into an inner class, but not converted to ""synchronized (Felix.this)"" which was causing threads calling Felix.stopAndWait() to not get notified that the framework had shutdown.

I have committed a fix, please try again and see if it works. If so, please close this issue.","24/Jul/07 08:48;tonit;i just tested the fix and it works fine now! thanks!
Toni
",,,,,,,,,,,,,,,,,,,,,,,,,
Bugs in used filter syntax,FELIX-327,12373713,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,barte,barte,13/Jul/07 07:54,17/Jul/07 08:04,14/Mar/19 02:47,13/Jul/07 13:06,framework-1.0.0,,,,,,,,,,framework-1.0.0,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"LocalRepositoryImpl.java contains two similar bugs in the used filter syntax

Line 256 currently is: 
: ""(!(version<="" + imports[impIdx].getVersion() + "")"";

While it should be:
: ""(!(version<="" + imports[impIdx].getVersion() + ""))"";


Line 262 currently is:
 : ""(!(version>="" + imports[impIdx].getVersionHigh() + "")"";

While it should be:
 : ""(!(version>="" + imports[impIdx].getVersionHigh() + ""))"";



Greetings,

Bart",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-13 13:06:52.383,,,no_permission,,,,,,,,,,,58657,,,Tue Jul 17 08:04:53 UTC 2007,,,,,,0|i140t3:,231593,,,,,,,,"13/Jul/07 13:06;rickhall;Yep, that does indeed appear to be a bug. I have committed a fix. Please verify and close this bug. Thanks.","17/Jul/07 08:04;barte;The fixed LocalRepositoryImpl works.

Thanks for the fast reaction.


Bart",,,,,,,,,,,,,,,,,,,,,,,,,
NPE in manifest goal,FELIX-326,12373464,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,carlos,carlos,11/Jul/07 00:40,30/Jan/08 10:39,14/Mar/19 02:47,13/Jul/07 13:34,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,13/Jul/07 00:28;carlos;patch.txt;https://issues.apache.org/jira/secure/attachment/12361730/patch.txt,11/Jul/07 00:40;carlos;patch.txt;https://issues.apache.org/jira/secure/attachment/12361544/patch.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-07-11 14:59:26.648,,,no_permission,,,,,,,,,,,58658,,,Wed Jan 30 10:39:25 UTC 2008,,,,,,0|i0vyav:,184530,,,,,,,,11/Jul/07 14:59;karlpauls;Applied the patch in r555293.,"13/Jul/07 00:28;carlos;I missed another exception

org.apache.maven.lifecycle.LifecycleExecutionException: Error trying to generate Manifest
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:564)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Error trying to generate Manifest
        at org.apache.felix.bundleplugin.ManifestPlugin.execute(ManifestPlugin.java:62)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:123)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:118)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        ... 16 more
Caused by: java.util.zip.ZipException: The system cannot find the file specified
        at java.util.zip.ZipFile.open(Native Method)
        at java.util.zip.ZipFile.<init>(ZipFile.java:203)
        at java.util.zip.ZipFile.<init>(ZipFile.java:234)
        at aQute.lib.osgi.ZipResource.build(ZipResource.java:39)
        at aQute.lib.osgi.ZipResource.build(ZipResource.java:32)
        at aQute.lib.osgi.Jar.<init>(Jar.java:31)
        at aQute.lib.osgi.Jar.<init>(Jar.java:50)
        at aQute.lib.osgi.Analyzer.setJar(Analyzer.java:619)
        at org.apache.felix.bundleplugin.ManifestPlugin.getAnalyzer(ManifestPlugin.java:118)
        at org.apache.felix.bundleplugin.ManifestPlugin.getManifest(ManifestPlugin.java:86)
        at org.apache.felix.bundleplugin.ManifestPlugin.execute(ManifestPlugin.java:58)
        ... 20 more",13/Jul/07 00:28;carlos;Patch for last exception,13/Jul/07 13:34;karlpauls;Applied the patch in r555989,21/Sep/07 17:02;mcculls;can this issue be closed?,"16/Dec/07 16:07;mcculls;Hi,

I'd like to get all resolved defects verified before releasing the 1.1.0 version of the bundleplugin - so I'd really appreciate it if you could check things are still ok with the current snapshot, and if so close off the defect.

Thanks in advance!","30/Jan/08 10:39;mcculls;Closing issue, as the 1.2.0 version of the bundleplugin which contains the fix is now released.",,,,,,,,,,,,,,,,,,,,
Registering a PersistenceManager service causes a ClassCastException,FELIX-322,12373180,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,06/Jul/07 13:38,09/Jul/07 09:58,14/Mar/19 02:47,09/Jul/07 09:58,,,,,,,,,,,framework-1.0.0,,,,Configuration Admin,,,,,,,0,,,,,,"When a Configuration object is requested and has to be loaded, the ConfigurationManager asks for the list of current PersistenceManagers. If a service has been registered, this list is being built and sorted according to  service.cmRanking property of the registered PersistenceManagers. The Comparator used assumes the objects to be compared to be ServiceReference instances (to get at the service properties) while the actual objects are the services themselves. Hence the ClassCastException and hence a side effect of not being able to access configuration any more.

Thanks to Tom Remoleur for reporting this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58662,,,Mon Jul 09 09:58:20 UTC 2007,,,,,,0|i0vzvr:,184786,,,,,,,,"06/Jul/07 15:45;fmeschbe;There were actually more issues with ConfigurationManager and Comparator than met the eyes:

  > The Comparator did not work at all correctly with the order flag
  > The service.cmRanking property was used for comparison whereas the service.ranking property should have been used
  > The fallback check for the service.id property did not work as the service ID is a Long not an Integer, which was assumed
  > The ServiceTracker count was never updated locally leading to too much service reacquisitions
  > And of course the class cast issue reported by Tom

Fixed in Rev. 553930","09/Jul/07 09:58;fmeschbe;Fix confirmed by Tom.

Closing this issue and deploying a new snapshot",09/Jul/07 09:58;fmeschbe;Snapshot deployed.,,,,,,,,,,,,,,,,,,,,,,,,
Mail handlers are not recognized by activation,FELIX-319,12373005,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,04/Jul/07 15:16,04/Jul/07 17:06,14/Mar/19 02:47,04/Jul/07 17:06,framework-1.0.0,,,,,,,,,,framework-1.0.0,,,,Felix Commons,,,,,,,0,,,,,,"mail and activation are built as separate bundles.
The configuration for the mail handlers is in the mail bundle, but has to
be accessed from the activation bundle! Therefore the activation bundle
needs access to the META-INF/* configuration files and to the sun.* implementations.

The best solution is to bundle the activation jar inside the mail bundle. The applied patch makes the required changes.",,,,,,,,,,,,,,,,,,,,04/Jul/07 15:17;cziegeler;patch.txt;https://issues.apache.org/jira/secure/attachment/12361145/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58665,,,2007-07-04 15:16:27.0,,,,,,0|i0w1lj:,185064,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Version for maven-bundle-plugin is missing in version management,FELIX-318,12373004,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,cziegeler,cziegeler,04/Jul/07 15:10,04/Jul/07 17:06,14/Mar/19 02:47,04/Jul/07 17:06,framework-1.0.0,,,,,,,,,,framework-1.0.0,,,,,,,,,,,0,,,,,,"The version for the maven bundle plugin is missing in the root pom.

Here is a patch:

Index: /Users/cziegeler/Developer/workspaces/default/felix/pom.xml
===================================================================
--- /Users/cziegeler/Developer/workspaces/default/felix/pom.xml	(revision 553093)
+++ /Users/cziegeler/Developer/workspaces/default/felix/pom.xml	(working copy)
@@ -322,6 +322,11 @@
           <artifactId>maven-javadoc-plugin</artifactId>
           <version>2.2</version>
         </plugin>
+        <plugin>
+          <groupId>org.apache.felix</groupId>
+          <artifactId>maven-bundle-plugin</artifactId>
+          <version>0.9.0-incubator-SNAPSHOT</version>
+        </plugin>
       </plugins>
     </pluginManagement>
     <plugins>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58666,,,2007-07-04 15:10:46.0,,,,,,0|i1aorz:,270480,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modifying a Configuration retrieved from listConfigurations is not reflected in the ConfigAdmin,FELIX-317,12372971,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,04/Jul/07 06:52,04/Jul/07 08:20,14/Mar/19 02:47,04/Jul/07 07:22,,,,,,,,,,,framework-1.0.0,,,,Configuration Admin,,,,,,,0,,,,,,"The ConfigurationAdmin.listConfigurations implementation accesses the configuration persistence managers to get all configurations and returns these configurations. That is, the Configuration objects returned are not backed by the same data as is cached inside the ConfigurationManager. When such a listed configuration is then updated, it is persisted, but the internally cached configuration data does not reflect the changes.

This issue may be illustrated with this test code:

     ConfigurationAdmin ca = getConfigurationAdmin();

     // initialize configuration
     Dictionary dict = new Hashtable();
     dict.put(""sample"", ""old_value"");
     ca.getConfiguration(""sample.pid"").update(dict);

     // modify the listed configuration
     Configuraiton[] cfg = ca.listConfigurations(""service.pid = sample.pid"");
     Dictionary dict = cfg[0].getProperties();
     dict.put(""sample"", ""new_value"");
     cfg[0].update(dict);

    Configuration config = ac.getConfiguration(""sample.pid"");
    Object theValue = config.getProperties().get(""sample"");

The theValue variable is expected to contain ""new_value"" but actually contains ""old_value"".

Thanks to Tom Remoleur for reporting this issue and providing the test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58667,,,Wed Jul 04 08:20:27 UTC 2007,,,,,,0|i0w02f:,184816,,,,,,,,"04/Jul/07 07:20;fmeschbe;Fixed by changing the ConfigurationManager.listConfigurations method to crosscheck with the internal cached configurations before adding a new Configuration proxy to the list.

Fixed in Rev. 553107",04/Jul/07 07:22;fmeschbe;Deployed a new build to the Apache snapshot repositorys.,04/Jul/07 08:20;fmeschbe;Fix confirmed to work correctly.,,,,,,,,,,,,,,,,,,,,,,,,
EventDispatcher class not reusable in same class loader for multiple Felix instances,FELIX-314,12372577,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,28/Jun/07 09:54,29/Jun/07 15:21,14/Mar/19 02:47,29/Jun/07 14:53,framework-0.8.0,,,,,,,,,,framework-1.0.0,,,,Framework,,,,,,,0,,,,,,"Consider this use case:

   Felix felix = new Felix();
   felix.start(props, null);
   felix.shutdown();

   felix = new Felix();
   felix.start(props, null);
   felix.shutdown();

The first Felix instance will stop the EventDispatcher by calling the static EventDispatcher.shutdown() method thus stopping the event dispatcher thread and setting the static variables stopping and stopped to true. The reference to the event dispatcher thread in the static variable m_thread is not cleared on shutdown.

The second Felix instance will create an EventDispatcher instance but the static fields are not reset. That is the event dispatcher is assumed to be stopped and the event dispatcher thread will not be newly created and started.

I will suggest a patch for this issue.",,,,,,,,,,,,,,,,,,,,28/Jun/07 09:59;fmeschbe;FELIX-314.diff;https://issues.apache.org/jira/secure/attachment/12360718/FELIX-314.diff,29/Jun/07 06:28;fmeschbe;FELIX-314_2.diff;https://issues.apache.org/jira/secure/attachment/12360780/FELIX-314_2.diff,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-06-28 13:57:22.565,,,no_permission,,,,,,,,,,,58670,,,Fri Jun 29 15:21:30 UTC 2007,,,,,,0|i0vzv3:,184783,,,,,,,,"28/Jun/07 09:59;fmeschbe;Patch trying to fix the EventDispatcher issue.

This patch turns all static fields and methods into instance fields and methods. As a consequence the EventDispatcher constructor will start a thread on each call, while the EventDispatcher.shutdown method will stop the thread and remove the local reference to it.

Incidentally, only two locations inside the Framework project are touched by this change: The Felix.shutdownInternalStart and Felix.start methods have to use the m_dispatcher field instead of calling the static method.

I do not know of any other users of the EventDispatcher class, but I assume, there aren't any outside the Framework.

If nobody opposes, I will apply this patch.","28/Jun/07 13:57;rickhall;I introduced that bug by apparently not thinking enough about what I was trying to do.

The reason for all of the statics was not accidental, the goal was to essentially require only one EventDispatcher (and thus one dispatcher thread) for all Felix instances inside of a given JVM (loaded by a specific class loader). The goal here was to reduce overhead.

I guess the debate here is whether or not it is worth it, but I would prefer such attempts to minimize thread usage. In truth, we probably should look at other places where threads are created to see if similar thread sharing can be achieved.
","28/Jun/07 21:21;karlpauls;I'd like to stress how important it is to keep the number of framework created threads to a minimum. I have use cases where I need lots of frameworks and operating systems have thread limits which are often hard to change. Additionally, threads are cumbersome in resource restricted environments (and I'm using Felix there too). 

Furthermore, it looks to me like it should be enough to keep some kind of reference count of active frameworks in the EventDispatcher to make it work with a single thread, no?","29/Jun/07 06:28;fmeschbe;Sounds reasonable. So I suggest the following solution: We make the constructor private and provide a static factory method to acquire an EventDispatcher instance. This factory method would care to have the thread running and the flags cleared as well as having the use counter managed. The shutdown method in turn is ""fixed"" to obey the reference counter and to drop the thread reference after stopping it.

I think it is more symetric to the static shutdown method if we have a static ""startup"" method instead of a constructor to acquire the EventDispatcher and setup the statics and a static shutdown to ""disable"" the dispatcher.","29/Jun/07 06:58;rickhall;I am okay with those changes...if you format the code to look like the existing code[1], then I think it looks good to commit. What do you think, Karl?

[1] http://cwiki.apache.org/FELIX/codingstandards.html","29/Jun/07 07:09;fmeschbe;> if you format the code to look like the existing code[1]

Hmm, looks like the blanks are not there (anymore ?) in parentheses of arguments, right ? But of course, will do that alignment. No problem :-)",29/Jun/07 07:37;karlpauls;Looks good to me.,"29/Jun/07 14:53;fmeschbe;Applied the patch with one slight modification apart from reformating: I named the reference counter to m_references because m_users does not really sound good as a reference counter.

Fixed at Revision 551911.

Deployed a new snapshot to the Apache Snapshot Repository.",29/Jun/07 15:21;fmeschbe;Fix confirmed by user. Hence closing this issue now.,,,,,,,,,,,,,,,,,,
iPOJO Dependency on Java 5,FELIX-312,12372423,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,clement.escoffier,clement.escoffier,26/Jun/07 10:37,29/Jun/07 14:03,14/Mar/19 02:47,29/Jun/07 14:03,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,Remove iPOJO dependency on Java 5.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58672,,,Fri Jun 29 14:03:38 UTC 2007,,,,,,0|i0w1iv:,185052,,,,,,,,"29/Jun/07 14:03;clement.escoffier;Change iPOJO code to remove dependency on Java 5 (String.replace(String,String))",29/Jun/07 14:03;clement.escoffier;Issue fixed.,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle plugin is incorrectly converting version numbers,FELIX-306,12371547,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,mcculls,rickhall,rickhall,13/Jun/07 16:27,17/Dec/07 03:59,14/Mar/19 02:47,21/Sep/07 16:47,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The bundle plugin appears to be converting version numbers incorrectly. For example:

    0.9.0-incubator-SNAPSHOT

Is being converted to:

    0.9.0.incubator_SNAPSHOT

Only the first '-' should be converted to a '.' to be compatible with OSGi, the remaining '-' characters to not need to be converted.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-13 16:29:45.466,,,no_permission,,,,,,,,,,,58678,,,Mon Dec 17 03:59:06 UTC 2007,,,,,,0|i1aosn:,270483,,,,,,,,13/Jun/07 16:29;carlos;I'll look into it,"13/Jun/07 21:55;carlos;can anyone look into testConvertVersionToOsgi and say if those assumptions are right ?

https://svn.apache.org/repos/asf/maven/sandbox/trunk/shared/maven-osgi/src/test/java/org/apache/maven/shared/osgi/Maven2OsgiConverterTest.java","14/Jun/07 00:56;fmeschbe;I would say so, except for the last entries which convert the hyphen (-) into underscores (_), too. Hyphens are allowed in the qualifier and should therefore probably not be mapped.","14/Jun/07 01:42;mcculls;Yes - looks fine apart from the hyphen issue, as Felix mentioned.

FYI, Eclipse shows a warning when there are hyphens in Bundle-SymbolicName:

    ""Bundle symbolic name contains illegal characters.  Legal characters are A-Z a-z 0-9 . _""

but I'm not sure if this is an OSGi restriction (this doesn't apply to Bundle-Name).

Recent versions of the BND tool also support conversion of versions to OSGi standards.
This even applies to any automatically discovered versions of import / export packages.

Here are the tests used with BND:

               assertVersion(""1.2.3.x"",         ""1.2.3.x"");
               assertVersion(""1.2.3"",           ""1.2.3"");
               assertVersion(""1.2"",             ""1.2"");
               assertVersion(""1"",               ""1"");
               assertVersion(""1.2.x"",           ""1.2.0.x"");
               assertVersion(""1.x"",             ""1.0.0.x"");
               assertVersion(""1.2.3-x"",         ""1.2.3.x"");
               assertVersion(""1.2:x"",           ""1.2.0.x"");
               assertVersion(""1.2-snapshot"",    ""1.2.0.snapshot"");
               assertVersion(""1#x"",             ""1.0.0.x"");
               assertVersion(""1.&^%$#date2007/03/04"", ""1.0.0.date20070304"");
","03/Aug/07 04:47;mcculls;This still appears to be an issue with the 1.0.0 release of the bundle-plugin.

If you delegate the version mangling to BND using:

    <Bundle-Version>${project.version}</Bundle-Version>

then it looks ok - perhaps the maven code could delegate to BND? (or look into how it does the mangling)","21/Sep/07 16:47;mcculls;The BND library now does all the necessary version formatting, so to be
consistent wrt. bundle versions and import / export versions we should
just pass the maven versions onto BND.",21/Sep/07 17:02;mcculls;can this issue be closed?,"16/Dec/07 16:07;mcculls;Hi,

I'd like to get all resolved defects verified before releasing the 1.1.0 version of the bundleplugin - so I'd really appreciate it if you could check things are still ok with the current snapshot, and if so close off the defect.

Thanks in advance!","16/Dec/07 17:36;rickhall;As far as I can see, it still suffers from this issue...if my POM contains:

  <version>1.1.0-incubator-SNAPSHOT</version>

The resulting manifest contains:

  Bundle-Version: 1.1.0.incubator_SNAPSHOT
","17/Dec/07 03:05;mcculls;hmm, are you sure you're using the 1.1.0-SNAPSHOT? because with the following test POM:

<?xml version=""1.0"" encoding=""UTF-8""?>
<project xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"" xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">

  <modelVersion>4.0.0</modelVersion>
  <groupId>examples</groupId>
  <artifactId>version.test</artifactId>
  <version>1.1.0-incubator-SNAPSHOT</version>

  <packaging>bundle</packaging>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>1.1.0-SNAPSHOT</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Private-Package>*</Private-Package>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <pluginRepositories>
    <pluginRepository>
      <id>ops4j-snapshots</id>
      <url>http://repository.ops4j.org/mvn-snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
      <version>2.2.3</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
  </dependencies>

</project>

I get the following manifest:

Manifest-Version: 1.0

Created-By: 1.4.2_15 (Sun Microsystems Inc.)

Bnd-LastModified: 1197860624509

Bundle-Version: 1.1.0.incubator-SNAPSHOT

Bundle-Name: Unnamed - examples:version.test:bundle:1.1.0-incubator-SN
APSHOT

Private-Package: org.objectweb.asm,org.objectweb.asm.signature

Ant-Version: Apache Ant 1.6.5

Originally-Created-By: 1.5.0_07-b03 (Sun Microsystems Inc.)

Bundle-ManifestVersion: 2

Bundle-SymbolicName: examples.version.test

Implementation-Title: ASM

Tool: Bnd-0.0.213

Implementation-Version: 2.2.3

Implementation-Vendor: France Telecom R&D



where the version appears correct: 1.1.0.incubator-SNAPSHOT","17/Dec/07 03:59;rickhall;My bad, you are correct. I forgot that we change the trunk POMs to point to the released versions. I will close this issue.",,,,,,,,,,,,,,,,
Factory Configurations not unbound on bundle uninstall,FELIX-301,12370914,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,05/Jun/07 12:32,06/Jun/07 06:41,14/Mar/19 02:47,06/Jun/07 06:32,,,,,,,,,,,framework-1.0.0,,,,Configuration Admin,,,,,,,0,,,,,,"According to the spec. configurations must be unbound from their bundle location when the respective bundle is uninstalled. Currently the Configuration Admin Service implementation does not respect this requirement (in fact, this is a known fact according to the TODO comment ...)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58683,,,Wed Jun 06 06:41:38 UTC 2007,,,,,,0|i0vzy7:,184797,,,,,,,,05/Jun/07 12:34;fmeschbe;Fixing this issue probably requires extending (or modifying) the org.apache.felix.cm.PersistenceManager interface. This interface is used to manage factory configurations but does not currently allow scanning all existing factory configurations as is the case for normal configurations.,"06/Jun/07 06:32;fmeschbe;Fortunately, it was not necessary to modify the API. Instead the implementation of the FilePersistenceManager.getDictionaries() method has been changed to return all dictionaries and to only check for file names if the service.pid property is actually set.

After this, the ConfigurationManager.bundleChanged had to be adapted to accept any dictionary and use it as a Configuration or Factory depending on whether the service.pid property is present. To enable creating a Factory instance from a dictionary, the factory.pid property is introduced in Factory dictionaries.

After these changes, all persistent dicitonaries are scanned and checked for the bundle location of the uninstalled bundle. For each dictionary, a check in the internal cache is first done to directly modify the cache object and store that.

Fixed in Rev. 544741","06/Jun/07 06:41;fmeschbe;Deployed new snapshot to the Apache Snapshot repository.

Closing then.",,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException during transformDirectives,FELIX-290,12369667,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,mcculls,mcculls,18/May/07 10:10,18/May/07 15:45,14/Mar/19 02:47,18/May/07 14:34,,,,,,,,,,,framework-1.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"While adding some extra unit tests to the maven-bundle-plugin, I was able to cause a ConcurrentModificationException during transformDirectives:

java.util.ConcurrentModificationException
        at java.util.TreeMap$PrivateEntryIterator.nextEntry(TreeMap.java:1031)
        at java.util.TreeMap$EntryIterator.next(TreeMap.java:1052)
        at java.util.TreeMap$EntryIterator.next(TreeMap.java:1050)
        at org.apache.felix.tools.maven2.bundleplugin.BundlePlugin.transformDirectives(BundlePlugin.java:127)
        at org.apache.felix.tools.maven2.bundleplugin.BundlePlugin.execute(BundlePlugin.java:151)
        at org.apache.felix.tools.maven2.bundleplugin.BundlePlugin.execute(BundlePlugin.java:115)
        at org.apache.felix.tools.maven2.bundleplugin.BundlePlugin.execute(BundlePlugin.java:110)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

this is due to extra keys being added during the iteration (mea culpa) - I've produced a patch with the failing test, plus corrected transformation code.
",,,,,,,,,,,,,,,,,,,,18/May/07 10:28;mcculls;FELIX-290-20070518-PROPOSED-FIX.patch;https://issues.apache.org/jira/secure/attachment/12357617/FELIX-290-20070518-PROPOSED-FIX.patch,18/May/07 10:17;mcculls;FELIX-290-20070518-UNIT-TEST.patch;https://issues.apache.org/jira/secure/attachment/12357616/FELIX-290-20070518-UNIT-TEST.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-05-18 14:34:21.018,,,no_permission,,,,,,,,,,,58694,,,Fri May 18 15:45:10 UTC 2007,,,,,,0|i0vxnb:,184424,,,,,,,,"18/May/07 10:17;mcculls;FELIX-290-20070518-UNIT-TEST.patch

added a new unit test, to trigger the ConcurrentModificationException","18/May/07 10:28;mcculls;FELIX-290-20070518-PROPOSED-FIX.patch

proposed fix - passes all unit tests","18/May/07 14:34;rickhall;I have applied the patch, please close this issue if it is resolved. Thanks.","18/May/07 15:45;mcculls;Unit tests pass, local projects compile ok using new version - looks good, thanks",,,,,,,,,,,,,,,,,,,,,,,
autodetermined import versions cannot be changed,FELIX-288,12369416,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,costin,costin,15/May/07 17:13,24/Oct/07 09:03,14/Mar/19 02:47,17/May/07 14:04,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"From the mailing list
> Import versions
>
> The import versions are determined automatically and can't be
> overridden. For example inside Spring/OSGi, we import spring 2.0.5 and
> the resulting imports have version 2.0.
> We want to be more specific such as 2.0.5 or [2.0.5, 2.1) but whatever I
> specify as import package is completely ignored.
>

I think this is a BND issue again, will raise it with Peter. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-17 06:00:26.172,,,no_permission,,,,,,,,,,,58696,,,Wed Oct 24 09:03:37 UTC 2007,,,,,,0|i0vxn3:,184423,,,,,,,,"17/May/07 06:00;mcculls;Once the BND library has been fixed, we'll just need to update the version in the pom file to pick it up.",17/May/07 06:26;mcculls;Looks like this is fixed in bndlib version 0.0.140,"17/May/07 14:04;rickhall;I updated BND to 140, so please close this if it is fixed. Thanks.",21/Sep/07 17:02;mcculls;can this issue be closed?,"24/Oct/07 09:03;costin;yes, just closed it",,,,,,,,,,,,,,,,,,,,,,
BND plugin and optional includes,FELIX-286,12369414,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,costin,costin,15/May/07 17:05,24/Oct/07 09:04,14/Mar/19 02:47,17/May/07 13:08,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"From the mailing list...

> Include and -
>
> Bnd tool allow include to specify several files and allows a - to
> indicate that it's okay if the file is missing. However, the maven
> plugin doesn't like that, it will complain if the file is missing.
>
> <_include>-missing/file.txt</_include>
>

this looks like a bug in BND - there's a line in the analyzer that says:

   if ( noFileOk ) ... throw error...

so at the moment it only throws an error for missing files when they
*are* prefixed with a '-', ie. the other way round to the documentation

I'll raise this with Peter. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-17 05:59:47.292,,,no_permission,,,,,,,,,,,58698,,,Wed Oct 24 09:04:15 UTC 2007,,,,,,0|i1aogv:,270430,,,,,,,,"17/May/07 05:59;mcculls;Once the BND library has been fixed, we'll just need to update the version in the pom file to pick it up.",17/May/07 06:22;mcculls;This is fixed in bndlib version 0.0.138 (the latest version on the maven repo as of today appears to be 0.0.140),"17/May/07 13:08;rickhall;I have modified the pom to use 140, so we can probably close this issue.",21/Sep/07 17:02;mcculls;can this issue be closed?,24/Oct/07 09:04;costin;yes - thank you.,,,,,,,,,,,,,,,,,,,,,,
bundleall should not rebundle jars that are already OSGi,FELIX-283,12369337,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,carlos,carlos,15/May/07 03:17,18/May/07 21:50,14/Mar/19 02:47,17/May/07 13:06,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"If a jar has a OSGi manifest copy it as is, do not attempt to generate the manifest",,,,,,,,,,,,,,,,,,,,15/May/07 03:17;carlos;org.apache.maven.maven-model_2.1.0.SNAPSHOT.jar;https://issues.apache.org/jira/secure/attachment/12357347/org.apache.maven.maven-model_2.1.0.SNAPSHOT.jar,15/May/07 03:18;carlos;rebundle.patch;https://issues.apache.org/jira/secure/attachment/12357348/rebundle.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-05-17 13:06:38.325,,,no_permission,,,,,,,,,,,58700,,,Thu May 17 13:06:38 UTC 2007,,,,,,0|i1aohb:,270432,,,,,,,,15/May/07 03:17;carlos;Changed binary file in src/test/resources,15/May/07 03:18;carlos;Patch,"17/May/07 13:06;rickhall;I applied the patch. Carlos, please review and close if ok.",,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException caused by empty Export-Package directive,FELIX-281,12369137,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,seh,seh,11/May/07 20:48,17/May/07 14:52,14/Mar/19 02:47,17/May/07 13:10,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"Per the discussion in the following felix-dev mailing list thread:

  NPE in maven-bundle-plugin -- empty Export-Package directive
  http://www.mail-archive.com/dev@felix.apache.org/msg00107.html

trying to specify an empty ExportPackage directive causes a NullPointerException in the maven-bundle-plugin with the following stack trace:

java.lang.NullPointerException
        at java.util.Hashtable.put(Hashtable.java:394)
        at java.util.Hashtable.putAll(Hashtable.java:466)
        at org.apache.felix.tools.maven2.bundleplugin.BundlePlugin.execute(BundlePlugin.java:151)
        at org.apache.felix.tools.maven2.bundleplugin.BundlePlugin.execute(BundlePlugin.java:115)
        at org.apache.felix.tools.maven2.bundleplugin.BundlePlugin.execute(BundlePlugin.java:110)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:420)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:330)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:123)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

If I leave the Export-Package directive out, the plugin complains about the synthesized default value not applying to any packages. Alternately, specifying ""!*"" yields a warning as well.",NA,,,,,,,,,,,,,,,,,,,11/May/07 21:09;mcculls;FELIX_281_20070511.txt;https://issues.apache.org/jira/secure/attachment/12357139/FELIX_281_20070511.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-11 21:09:24.227,,,no_permission,,,,,,,,,,,58702,,,Thu May 17 14:52:30 UTC 2007,,,,,,0|i1aohr:,270434,,,,,,,,11/May/07 21:09;mcculls;Suggested patch - replace null map values with empty strings (FELIX_281_20070511.txt),17/May/07 13:10;rickhall;I think this issue has been resolved with the newer versions of BND. Could someone verify this so we can close this bug?,"17/May/07 14:16;mcculls;This issue needs a minor fix to the plugin code (see attached patch) to avoid putting null values into the hashtable - which, unlike a hashmap, cannot handle null keys or null values. The exception occurs before BND is actually called.","17/May/07 14:33;mcculls;Sorry, should have said I was able to recreate this using the latest code and the following bundle configuration:

        <configuration>
          <instructions>
            <Export-Package></Export-Package>
          </instructions>
        </configuration>
","17/May/07 14:36;rickhall;I have applied the patch, so I guess I will close this one...feel free to re-open if it isn't fixed.",17/May/07 14:52;mcculls;I can confirm this is now fixed with the latest code (as of release 538944),,,,,,,,,,,,,,,,,,,,,
Concurrency Issues when enabling components,FELIX-279,12368541,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,03/May/07 10:35,30/May/08 18:15,14/Mar/19 02:47,15/May/07 10:42,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"When bundles are started and their components registered, enabled and activated and configuration is provided to them, timing issues may occurr, such that in the end some components may not be started at all.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58704,,,Tue May 15 10:42:14 UTC 2007,,,,,,0|i0vzyn:,184799,,,,,,,,"03/May/07 10:37;fmeschbe;I will modify the way, that components are activated from synchronous to asynchrounous. By using a task queue which is handled
in a separate thread, these tasks may be strictly serialized.

Furthermore, this queue will of course also be used for the ComponentContext.enable and ComponentContext.disable methods, which currently span their own threads up each execution.","15/May/07 10:42;fmeschbe;Fixed the concurrency issues by having a single actor thread, which is fed with tasks (Runnable). Whenever a component needs to change state
(enable, activate, deactivate, disable), the respective action is packed in a Runnable and scheduled for asynchronous operation.

The only exceptions to this rule is the creation of the ComponentManager instance and the disposal of a ComponentManager. The latter is synchronous to be sure to have the ComponentManager destroyed before the framework itself takes actions such as unregistering services and taking class loaders out of service.

Fixed in Rev 538123.",15/May/07 10:42;fmeschbe;Closing this for now.,,,,,,,,,,,,,,,,,,,,,,,,
Instance Creator does not dispose instances.,FELIX-273,12367826,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,23/Apr/07 10:46,24/Apr/07 12:53,14/Mar/19 02:47,23/Apr/07 14:19,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"The instance create, used to create instances from external facotries, does not dispose creates instances when the used factories go away.",,,,,,,,,,,,,,,,,,,,23/Apr/07 10:48;clement.escoffier;ic_patch.patch;https://issues.apache.org/jira/secure/attachment/12356035/ic_patch.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-23 14:19:39.505,,,no_permission,,,,,,,,,,,58710,,,Tue Apr 24 12:53:36 UTC 2007,,,,,,0|i0w1fj:,185037,,,,,,,,"23/Apr/07 10:48;clement.escoffier;Patch to apply on the iPOJO core project.

The patch solves the instance creator bug.
Moreover, it adds .checkstyle to the svn:ignore property.

","23/Apr/07 14:19;rickhall;I have applied this patch, close if it is okay.","24/Apr/07 12:53;clement.escoffier;All is ok.
I close the issue.",,,,,,,,,,,,,,,,,,,,,,,,
Add SymbolicName to the Manifest,FELIX-272,12367767,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,peter@neubauer.se,peter@neubauer.se,22/Apr/07 14:35,11/Aug/09 08:53,14/Mar/19 02:47,31/May/07 14:49,,,,,,,,,,,,,,,Dependency Manager,,,,,,,2,,,,,,Add the Bundle-SymbolicName entry to the Manifest via the pom.xml in order to make the resulting bundle OSGi R4 compliant.,,,,,,,,,,,,,DERBY-1945,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-29 04:24:08.251,,,no_permission,,,,,,,,,,,58711,,,Tue Aug 11 08:53:19 UTC 2009,,,,,,0|i1aoif:,270437,,,,,,,,"29/May/07 04:24;brettw;This is a biggie.  The ""osgi"" bundle is not only undeployable on Felix, it is undeployable on Equinox as well.  Basically, Derby is not OSGi ready.
",31/May/07 14:49;rickhall;I modified DM to use the bundle plugin and also addes a symbolic name. Please close this issue if it is good.,"11/Aug/09 08:53;marrs;Closing the issue as it has been resolved for a very long time now and nobody commented on it anymore, so I'm assuming everything is okay.",,,,,,,,,,,,,,,,,,,,,,,,
Factory Configuration may get corrupted,FELIX-271,12367551,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,19/Apr/07 10:10,19/Apr/07 10:22,14/Mar/19 02:47,19/Apr/07 10:22,,,,,,,,,,,framework-1.0.0,,,,Configuration Admin,,,,,,,0,,,,,,"The Configuration Admin service implementation internally keeps a Factory objects which in turn refers to the PIDs belonging to the factory. This reference to the PIDs may get lost when a Factory object is loaded.

The problem is, that the constructor calls the setBundleLocation method which stores the object but looses the PID references.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58712,,,Thu Apr 19 10:22:47 UTC 2007,,,,,,0|i0vzvz:,184787,,,,,,,,"19/Apr/07 10:22;fmeschbe;The constructor setting the bundle location field is called when the Factory object is loaded, therefore storing the bundle location is of no use there. Hence, the field is just set, as is the set of PIDs belonging to the Factory.

Fixed in Rev. 530358

Also deployed snapshot",19/Apr/07 10:22;fmeschbe;Seems to fix the issue.,,,,,,,,,,,,,,,,,,,,,,,,,
Don't run the plugin on pom projects,FELIX-269,12366959,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,carlos,carlos,11/Apr/07 05:51,28/Apr/07 16:15,14/Mar/19 02:47,27/Apr/07 17:06,framework-1.0.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,useful when configuring it on the parent pom,,,,,,,,,,,,,,,,,,,,11/Apr/07 05:52;carlos;FELIX-269.patch;https://issues.apache.org/jira/secure/attachment/12355304/FELIX-269.patch,11/Apr/07 06:43;mcculls;example-bundle-pom-layout.zip;https://issues.apache.org/jira/secure/attachment/12355307/example-bundle-pom-layout.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-04-11 06:16:14.502,,,no_permission,,,,,,,,,,,58714,,,Sat Apr 28 16:15:56 UTC 2007,,,,,,0|i1aoin:,270438,,,,,,,,"11/Apr/07 06:16;mcculls;My 2 cents ... these days I configure the bundle plugin in the pluginManagement section of the parent pom - that way I only need to add a small fragment of xml to the plugin section of the child poms, and so far I haven't suffered from the extension bug (touch wood!). But a lot of people do use the plugin section of the parent pom, so this would be useful.","11/Apr/07 06:26;carlos;BTW this is what I use in the parent pom to make the generated jar have OSGi info

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>0.9.0-incubator-SNAPSHOT</version>
        <executions>
          <execution>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
","11/Apr/07 06:43;mcculls;Just for reference, attached is a sample pom layout produced by Pax Construct ( http://wiki.ops4j.org/confluence/display/ops4j/Pax+Construct ) that uses the pluginManagement/plugin style.

It's just an example - but you can do a ""mvn clean install pax:provision"" and the bundles will deploy onto Equinox.","27/Apr/07 17:06;rickhall;Applied patch. Carlos, please close this issue if you are happy with it.","28/Apr/07 16:15;rickhall;There was a bug in this patch, which was causing the build to fail...it was using type ""osgi-bundle"" instead of ""bundle"" to test for supported project types.",,,,,,,,,,,,,,,,,,,,,,
SCR module in the pom.xml,FELIX-268,12366710,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,06/Apr/07 14:04,30/May/08 18:15,14/Mar/19 02:47,06/Apr/07 16:22,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"The SCR module needs to move inside the general pom file to avoid compilation failure. Indeed, by changing the plugin, the SCR module needs to be move from packaging-osgi-bundle profile to the the packaging-bundle profile.",,,,,,,,,,,,,,,FELIX-264,,,,,06/Apr/07 14:07;clement.escoffier;scr_pom.patch;https://issues.apache.org/jira/secure/attachment/12355078/scr_pom.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-06 16:22:11.515,,,no_permission,,,,,,,,,,,58715,,,Fri Apr 06 16:22:11 UTC 2007,,,,,,0|i0w1n3:,185071,,,,,,,,06/Apr/07 14:07;clement.escoffier;This patch move the SCR module to its good profile in the pom file.,06/Apr/07 16:22;rickhall;I have applied this patch.,,,,,,,,,,,,,,,,,,,,,,,,,
Empty line in a manifest,FELIX-265,12366155,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,chuck05,chuck05,29/Mar/07 19:59,10/Apr/07 15:31,14/Mar/19 02:47,10/Apr/07 15:31,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"When an empty line is add in a manifest file, the parsing of the manifest stop at the empty line. Like in this example :

Manifest-Version: 1.0
Ant-Version: Apache Ant 1.6.5
Created-By: 1.4.2-70 (""Apple Computer, Inc."")

Bundle-Name: IOEventCore
Bundle-SymbolicName: IOEventCore
Bundle-Version: 1.0.0
Import-Package: ca.usherbrooke.domus.osgi.io.events.connection, 
 ca.usherbrooke.domus.osgi.io.events.messages, ca.usherbrooke.
 domus.osgi.io.events.module, ca.usherbrooke.domus.osgi.io.events.services, org.osgi.framework
Bundle-Activator: ca.usherbrooke.domus.osgi.io.events.core.impl.IOCoreActivator

In this example, the parsing stop after the ""Created-By"". The problem encountred in this example is that the manifest is generated by ant with the concatenation of the 3 first lines (automatically generated) and a text file containing the rest of the manifest.

An empty line is authorized in the Java-Sun manifest standard : http://java.sun.com/j2se/1.5.0/docs/guide/jar/jar.html#JAR%20Manifest


",Mac OS 10.4 and Java 1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-30 02:13:47.075,,,no_permission,,,,,,,,,,,58718,,,Tue Apr 10 15:31:27 UTC 2007,,,,,,0|i0vxmn:,184421,,,,,,,,"30/Mar/07 02:13;mcculls;The manifest spec also states:

    ""Groups of name-value pairs are known as a ""section"". Sections are separated from other sections by empty lines.""

    ""The main section contains security and configuration information about the JAR file itself, as well as the application or extension that this JAR file is a part of. It also defines main attributes that apply to every individual manifest entry.  No attribute in this section can have its name equal to  ""Name"". This section is terminated by an empty line.""

If I read this correctly, the empty line in your example would mark the end of the main section of the manifest (which  contains the OSGi metadata) and denotes the start of a new section - the manifest parser would expect the new section to start with 'Name: <jar-entry>' and any attributes would only apply to the named jar entry (btw, I don't believe entry-specific OSGi metadata makes sense).

I hope this explains why the parsing stops at the new-line.",10/Apr/07 15:31;rickhall;I guess this can be closed then...,,,,,,,,,,,,,,,,,,,,,,,,,
Update pom to use new bundle plugin,FELIX-264,12366098,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,29/Mar/07 07:40,30/May/08 18:15,14/Mar/19 02:47,29/Mar/07 07:56,framework-0.8.0,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"After adding support for Configuration Admin Service with FELIX-258 the pom.xml must be adapted to also import new packages. Along this way, it would probably make sense to migrate to use the new bundle plugin and to export the org.osgi.service.component package from the scr bundle.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58719,,,Fri Mar 30 06:24:02 UTC 2007,,,,,,0|i0vxnj:,184425,,,,,,,,"29/Mar/07 07:56;fmeschbe;Committed update in Rev. 523610

Changes:
  > Use bundle plugin instead of old osgi plugin
  > Have the plugin build the import list
  > Export org.osgi.service.component package",30/Mar/07 06:24;fmeschbe;Can now be closed.,,,,,,,,,,,,,,,,,,,,,,,,,
Main build fails with Maven 2.0.5 and clean local repository,FELIX-263,12365961,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,mcculls,mcculls,28/Mar/07 03:10,28/Mar/07 16:18,14/Mar/19 02:47,28/Mar/07 14:26,framework-1.0.0,,,,,,,,,,framework-1.0.0,,,,Maven Bundle Plugin,,,,,,,0,,,,,,Using Maven 2.0.5 and an empty local repository I get an error building the 0.9.0-incubator-SNAPSHOT tree. I don't see this error when I use Maven 2.0.4,"Mac OS X, Java 5",,,,,,,,,,,,,,,,,,,28/Mar/07 04:28;mcculls;FELIX-263-build.patch;https://issues.apache.org/jira/secure/attachment/12354392/FELIX-263-build.patch,28/Mar/07 03:12;mcculls;maven_error.log;https://issues.apache.org/jira/secure/attachment/12354384/maven_error.log,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-03-28 14:26:54.418,,,no_permission,,,,,,,,,,,58720,,,Wed Mar 28 16:18:34 UTC 2007,,,,,,0|i0vxnr:,184426,,,,,,,,28/Mar/07 03:12;mcculls;Output from running mvn -X -Dpackaging=bundle install at top-level directory.,"28/Mar/07 03:14;mcculls;As a workaround I can get things going using:

   mvn -N install
   cd tools/maven2/maven-bundle-plugin/
   mvn install
   cd ../..
   ant

to pre-install the bundle plugin.",28/Mar/07 04:12;mcculls;Found a Maven bug: http://jira.codehaus.org/browse/MNG-1911 but no outlook for a fix,"28/Mar/07 04:28;mcculls;As we're already using ant to build this project in phases, it makes sense to build the plugins in a 'bootstrap' phase. Most of the plugin errors with 2.0.5 appear to occur when you try to build and use a plugin in the same build process.

By separating out building of felix plugins, we can avoid these (and future) problems.

The attached patch modifies the top-level pom and build.xml so that the plugins get built first.

( BTW, is there a reason why the ipojo.plugin is in the top-level directory? shouldn't it be under tools/maven2? )","28/Mar/07 14:26;rickhall;I verified this error with Maven 2.0.5 and the patch appears to fix it for me too. Thus, I have applied the patch.

Stuart, please close this issue if everything is in order.","28/Mar/07 16:18;mcculls;(Re-)verified the patched build completes with Maven 2.0.5

NOTE: if you work outside of the ant process you will need to do the following:

    mvn -Dpackaging=plugins install

before you can successfully run other packaging types, such as ipojo-bundle.",,,,,,,,,,,,,,,,,,,,,
"maven-bundle-plugin, versions with more then 1 digit, and - before qualifier",FELIX-256,12364971,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,adreghiciu,adreghiciu,14/Mar/07 23:41,15/Mar/07 23:07,14/Mar/19 02:47,15/Mar/07 16:05,,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"maven-bundle-plugin will replace the first - from the version of the artifact with an . in order to form an osgi valid version. The problem is that the regexp used to figure if it should replace it does not match if there are two digits in the second/third group from the version. So a version as 1.2.8-SNAPSHOT will match and be transformed to 1.2.8.SNAPSHOT but 1.2.12-SNAPSHOT will not match and result in an invalid osgi version that will be correctrly chached by bnd.
So
Pattern P_VERSION = Pattern.compile(""([0-9]+(\\.[0-9])*)-(.*)"");
should become
Pattern P_VERSION = Pattern.compile(""([0-9]+(\\.[0-9]+)*)-(.*)"");

This is also the problem from FELIX-230.

Pleae solve asap since is an easy fix and will speedup felix commons.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-15 00:03:43.672,,,no_permission,,,,,,,,,,,58727,,,Thu Mar 15 22:36:58 UTC 2007,,,,,,0|i0vxo7:,184428,,,,,,,,"15/Mar/07 00:03;carlos;This is already handled as part of FELIX-199, i tested version conversion for all maven dependencies and added unit tests","15/Mar/07 16:05;rickhall;Ok, I made the modification...if all is well, please close this issue...if not follow up on this issue...",15/Mar/07 22:31;adreghiciu;Is resolved in my view. Bu I cannot close the issue. I just can reopen it Somebody else has to close it.. ,"15/Mar/07 22:36;enriquer9;Please try again.  You may have to refresh your browser or log-out/log-in again.
",,,,,,,,,,,,,,,,,,,,,,,
Arch command version number,FELIX-252,12364711,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,12/Mar/07 12:30,24/Apr/07 12:57,14/Mar/19 02:47,16/Mar/07 15:39,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,Arch command bundle does not has a correct version number,,,,,,,,,,,,,,,,,,,,12/Mar/07 12:30;clement.escoffier;patch-archi.patch;https://issues.apache.org/jira/secure/attachment/12353109/patch-archi.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-16 15:39:58.854,,,no_permission,,,,,,,,,,,58731,,,Tue Apr 24 12:57:36 UTC 2007,,,,,,0|i1aokf:,270446,,,,,,,,"12/Mar/07 12:30;clement.escoffier;Patch to apply on the arch project.

- Change the version number to be correct.","16/Mar/07 15:39;rickhall;I have applied this patch. Clement, if everything looks okay, please close this issue.","24/Apr/07 12:57;clement.escoffier;All seem ok, I close the issue",,,,,,,,,,,,,,,,,,,,,,,,
"OBR displays the repository URL for source and license elements, if they are not set.",FELIX-242,12364208,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,tmoloney,tmoloney,06/Mar/07 08:01,16/Mar/07 15:48,14/Mar/19 02:47,16/Mar/07 15:13,,,,,,,,,,,,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"If a particular resource does not have <license> or <source> elements, OBR will incorrectly display the repository URL for these elements.",,,,,,,,,,,,,,,,,,,,08/Mar/07 08:47;tmoloney;bundlerepository-src-lic-uri-1.patch;https://issues.apache.org/jira/secure/attachment/12352914/bundlerepository-src-lic-uri-1.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-16 15:13:24.785,,,no_permission,,,,,,,,,,,58741,,,Fri Mar 16 15:13:24 UTC 2007,,,,,,0|i1aolr:,270452,,,,,,,,"08/Mar/07 08:47;tmoloney;This patch changes the initialization of the attributes to avoid the problem.
","16/Mar/07 15:13;rickhall;I applied this patch. Tim, please close this issue if everything is okay now.",,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO Maven Plugin does not tolerate spaces in paths for manipulated classes,FELIX-221,12364069,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,seh,seh,04/Mar/07 18:55,06/Mar/07 13:27,14/Mar/19 02:47,06/Mar/07 13:27,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"Per the discussion on the Felix-dev mailing list thread

  Problem with maven-ipojo-plugin -- Manipulator.preProcess()
  http://www.mail-archive.com/felix-dev@incubator.apache.org/msg04116.html

the iPOJO Maven Plugin fails during its ""package"" phase when trying to write to a class file with a space in its path. This is due to switching back and forth between file path strings and URI/URL syntax for the same file in org.apache.felix.ipojo.manipulation.Manupulator.preProcess().

The fix involves reusing the string-based file path established earlier in that method to open a FileOutputStream in lieu of the URI/URL syntaxt.","Microsoft Windows XP
Sun Java JDK 1.6.0 (build 1.6.0-b105)",,,,,,,,,,,,,,,,,,,04/Mar/07 18:58;seh;Manipulator.java.patch;https://issues.apache.org/jira/secure/attachment/12352562/Manipulator.java.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-05 08:35:51.882,,,no_permission,,,,,,,,,,,58762,,,Tue Mar 06 13:27:41 UTC 2007,,,,,,0|i0vzuf:,184780,,,,,,,,"04/Mar/07 18:58;seh;This patch is described in this mailing list message:

http://www.mail-archive.com/felix-dev@incubator.apache.org/msg04125.html

It feeds a File created using a string-based path to the FileOutputStream constructor.","05/Mar/07 08:35;clement.escoffier;I verify the patch.
It allows the use of the iPOJO manipulator on file with the space in the path.",06/Mar/07 13:27;rickhall;I applied the patch.,,,,,,,,,,,,,,,,,,,,,,,,
Can't always build trunk as of svn rev 506501,FELIX-215,12362852,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,tmoloney,tmoloney,15/Feb/07 03:18,15/Feb/07 07:19,14/Mar/19 02:47,15/Feb/07 07:19,,,,,,,,,,,,,,,,,,,,,,0,,,,,,"Building the trunk may not succeed.  Error messages are generally like the following

Building Maven OSGi Plugin
[...]
Reason: Error getting POM for 'org.apache.maven.plugins:maven-resources-plugin' from the repository: Failed to resolve artifact, possibly due to a repository list that is not appropriately equipped for this artifact's metadata.
 org.apache.maven.plugins:maven-resources-plugin:pom:2.3-SNAPSHOT
from the specified remote repositories:
 apache.snapshots (http://people.apache.org/repo/m2-snapshot-repository),
 snapshots (http://snapshots.maven.codehaus.org/maven2)
 central (http://repo1.maven.org/maven2)
",,,,,,,,,,,,,,,,,,,,15/Feb/07 03:21;tmoloney;trunk-build.patch;https://issues.apache.org/jira/secure/attachment/12351209/trunk-build.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-02-15 07:19:26.368,,,no_permission,,,,,,,,,,,58768,,,Thu Feb 15 07:19:26 UTC 2007,,,,,,0|i140sf:,231590,,,,,,,,"15/Feb/07 03:21;tmoloney;In addition to the change made in in svn rev 506876, the attached patch was also necessary for to successfully build the trunk.","15/Feb/07 03:24;tmoloney;The mail-list thread discussing this issue is here (http://www.mail-archive.com/felix-dev@incubator.apache.org/msg03929.html).
","15/Feb/07 07:19;rickhall;I applied the patch, hopefully this will fix the issue for everyone!",,,,,,,,,,,,,,,,,,,,,,,,
Required properties inside the Configuration Handler,FELIX-214,12362582,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,clement.escoffier,clement.escoffier,12/Feb/07 13:57,12/Feb/07 15:16,14/Mar/19 02:47,12/Feb/07 15:16,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"The configuration handler does not update the component type model properly. Unvalued properties are set with """" and not with null.",,,,,,,,,,,,,,,,,,,,12/Feb/07 13:59;clement.escoffier;required_props.patch;https://issues.apache.org/jira/secure/attachment/12350935/required_props.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-02-12 15:16:14.8,,,no_permission,,,,,,,,,,,58769,,,Mon Feb 12 15:16:14 UTC 2007,,,,,,0|i1aoav:,270403,,,,,,,,"12/Feb/07 13:59;clement.escoffier;The patch need to be applied on the iPOJO core project.
It modifies the configuration handler to fix the bad model update. Moreover, it change the string form of the component type model : CONFIGURABLE properties becomes REQUIRED properties.
",12/Feb/07 15:16;rickhall;I applied this patch.,,,,,,,,,,,,,,,,,,,,,,,,,
Eager removal of unused uninstalled/updated bundles is not correct for require-bundle dependencies,FELIX-203,12362485,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,10/Feb/07 02:40,14/Jun/07 19:00,14/Mar/19 02:47,14/Jun/07 19:00,framework-1.0.0,,,,,,,,,,framework-1.0.0,,,,Framework,Specification compliance,,,,,,0,,,,,,"Recent changes to the handling of ""removal pending"" packages and immediately refreshing of updated/uninstalled bundles is broken for bundles that participate in require-bundle dependencies. In short, when the framework checks to see if a bundle is ""in use"" or not, it only checks for package dependencies and does not check for require-bundle dependencies. This needs to be fixed.",,,,,,,,,,,FELIX-28,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58780,,,Thu Jun 14 19:00:53 UTC 2007,,,,,,0|i0vzzj:,184803,,,,,,,,"14/Jun/07 19:00;rickhall;I am fairly certain that my recent changes to how modules keep track of dependent modules solves this issue, so I am closing...",,,,,,,,,,,,,,,,,,,,,,,,,,
Synchronization problem when providing a service,FELIX-202,12362090,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,06/Feb/07 12:51,06/Feb/07 13:58,14/Mar/19 02:47,06/Feb/07 13:58,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,iPOJO Provided Service Handler has a synchronization bug when properties are updated while the service is unregistering.,,,,,,,,,,,,,,,,,,,,06/Feb/07 12:52;clement.escoffier;synchro.patch;https://issues.apache.org/jira/secure/attachment/12350442/synchro.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-02-06 13:58:44.41,,,no_permission,,,,,,,,,,,58781,,,Tue Feb 06 13:58:44 UTC 2007,,,,,,0|i140qf:,231581,,,,,,,,"06/Feb/07 12:52;clement.escoffier;Patch to apply on iPOJO core project.

The patch modify the Provided Service handler to avoid synchronization problem.",06/Feb/07 13:58;rickhall;I applied this patch.,,,,,,,,,,,,,,,,,,,,,,,,,
Build of trunk fails,FELIX-198,12361671,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,rickhall,jconlon,jconlon,31/Jan/07 17:54,06/Oct/09 14:01,14/Mar/19 02:47,12/Feb/07 15:46,framework-1.0.0,,,,,,,,,,framework-1.0.0,,,,,,,,,,,0,,,,,,"Encountering maven bug
 http://jira.codehaus.org/browse/MNG-1682 when building the trunk with pom-old-plugin.xml called from the ant build.xml.

This bug occurs when more than two packaging types are used in a multiproject build.  In this case ipojo does a  <packaging>ipojo-bundle</packaging> which triggers the bug for all subsequent module builds.

These module builds will only occur when running with a jdk1.5, as this will trigger the mosgi module builds. 

<profiles>
    <profile>
      <id>jdk1.5</id>
      <activation>
        <jdk>1.5</jdk>
      </activation>
      <modules>
        <module>mosgi.console.xxx...","java version ""1.5.0_06""",,,,,,,,,,,,,,,,,,,31/Jan/07 18:06;jconlon;mychanges.patch;https://issues.apache.org/jira/secure/attachment/12350055/mychanges.patch,09/Feb/07 22:02;jconlon;pom-bug.xml;https://issues.apache.org/jira/secure/attachment/12350794/pom-bug.xml,31/Jan/07 18:06;jconlon;pom-old-pluginA.xml;https://issues.apache.org/jira/secure/attachment/12350056/pom-old-pluginA.xml,09/Feb/07 22:14;jconlon;pom.xml;https://issues.apache.org/jira/secure/attachment/12350797/pom.xml,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,2007-02-05 13:09:34.214,,,no_permission,,,,,,,,,,,58785,,,Tue Oct 06 14:01:52 UTC 2009,,,,,,0|i0vwhz:,184238,,,,,,,,31/Jan/07 18:06;jconlon;Patch to build.xml and old-plugin.xml.,"05/Feb/07 13:09;rickhall;Since iPOJO is causing the issue, since it introduces a second plugin, doesn't it make more sense to create a pom-ipojo.xml file that contains that separates all of the iPOJO-related projects into a single pom file? This is effectively what we did with pom-new-plugin.xml, which separates the new plugin and the projects that use it from the ones that don't. I assume that this approach would solve the issue too, no?","05/Feb/07 17:42;jconlon;Your right two split poms are better than three. I think one is still better, if it can be done. 

But I was wrong in 'blaming' my favorite dep manager iPojo. On closer examination of our sequence of module executions it appears that this bug manifests after N number of packaging types are used.  From what I see N=3. 

Once N=3 all subsequent modules will deploy with that packaging name as the extension.

So it is not only the iPojo packaging but our two other maven plugins also must be factored into the problem.

Been looking at the use of profiles to fix this so we could use a single pom again but this would require the segregation of all modules that use the different plugins as well as the jdk 1.5 profile we have for the mosgi modules.

Building then would require a couple of steps but they would all be maven oriented.

WDYT?","05/Feb/07 18:44;rickhall;Yeah, this is not an iPOJO issue, this is directly related to having more than one maven packaging plugin...we have three in Felix, so we get bit by this maven bug.

However, I was not proposing two pom files, I was proposing three...essentially one for each plugin (and the subprojects that use them). I am not against searching for other (possibly better) solutions, but three separate pom files is the only solution that I know of that will definitely work.

If you have a proposal, let's definitely hear it...","05/Feb/07 22:48;jconlon;Propose using one pom.xml and multiple profiles to segregate the modules by plugin type.  

To build the entire project would require calling maven more than once using different profiles.

For example:
mvn clean install  
   (Note: type1 would probably be defaulted as true here)
mvn -Ptype2 clean install
mvn -Ptype3 clean install

","06/Feb/07 12:57;clement.escoffier;For me this solution make sense. 
However iPOJO Plugin, metadata and core should be in ""type2"" (old maven plugin, I guess), only iPOJO Arch needs to be separated (it is the only bundle on the trunk using the iPOJO Plugin) in a ""type3"".","06/Feb/07 13:11;rickhall;I am ok with that approach, because we can still have the ant.xml file that builds all three profiles if we want, which makes it no worse than the current situation.

I guess as far as how to segregate the subprojects, it depends on the nature of the bug. If it is purely based on separating them so no single pom file uses more than one packaging plugin at a time (as opposed to declaring more than one packaging plugin at a time), then I guess Clement's suggestion would be sufficient.

At this point, every subproject that uses the new plugin and/or no plugin can be put into the first profile. Every subproject that uses the old plugin can be put into the second profile. And then ipojo.arch should be put into the last profile.

It is my goal to see us move all subprojects using the old plugin to the new plugin, so once this happens we should just have two separate groups. Then once the maven bug is fixed we can get back to a single pom file!

John, is this something you are going to contribute?","06/Feb/07 15:31;jconlon;Yes I will do this and attach pom.xml to this issue.  

Should be able to get to this in a couple of days.","09/Feb/07 22:02;jconlon;Care must be taken to separate packaging types.  If a project uses too many types of plugins the bug will manifest.  This pom-bug.xml 

mvn -Dpackaging=bug -f pom-bug.xml install
will execute three modules of different packaging types (they all still use a jar extension)

<module>ipojo</module>            <!--a osgi-bundle-->
<module>ipojo.plugin</module><!--a maven-plugin-->
<module>ipojo.arch</module>   <!--a ipojo-bundle-->

Observe the last artifact copied to the repository.
[INFO] Installing /home/jconlon/projects/svns/felix/trunk/ipojo.arch/target/org.apache.felix.ipojo.arch-0.7.0-incubator-SNAPSHOT.jar to /home/jconlon/.m2/repository/org/apache/felix/org.apache.felix.ipojo.arch/0.7.0-incubator-SNAPSHOT/org.apache.felix.ipojo.arch-0.7.0-incubator-SNAPSHOT.ipojo-bundle

mvn -Dpackaging=nobug -f pom-bug.xml install
will execute only the last of the above three modules.

Now look at the artifact copied to the repo.
[INFO] Installing /home/jconlon/projects/svns/felix/trunk/ipojo.arch/target/org.apache.felix.ipojo.arch-0.7.0-incubator-SNAPSHOT.jar to /home/jconlon/.m2/repository/org/apache/felix/org.apache.felix.ipojo.arch/0.7.0-incubator-SNAPSHOT/org.apache.felix.ipojo.arch-0.7.0-incubator-SNAPSHOT.jar

","09/Feb/07 22:14;jconlon;As a work around to the maven bug, this single pom uses different profiles for building the different types of felix modules. 
	
Usage:
    mvn -Dpackaging=<type>  install

Examples:
    mvn -Dpackaging=osgi-bundle install
    mvn -Dpackaging=osgi-bundle-mosgi install
    mvn -Dpackaging=bundle install
    mvn -Dpackaging=ipojo-bundle install
","09/Feb/07 22:43;carlos;I was able to reproduce the bug with three modules

    <module>ipojo.arch</module>
    <module>mosgi.console.ifc</module>
    <module>mosgi.console.component</module>
",12/Feb/07 15:46;rickhall;I applied this patch and updated the build.xml to use it...I also converted the tabs to spaces...,06/Oct/09 14:01;sahoo;The related maven bug has been fixed in mvn 2.2.1. Should we think of removing the work around from our pom.xml?,,,,,,,,,,,,,,
UnacceptableConfiguration tracking,FELIX-196,12361086,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,clement.escoffier,clement.escoffier,23/Jan/07 12:14,24/Jan/07 13:23,14/Mar/19 02:47,24/Jan/07 13:23,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"An iPOJO Component Factory can refused a given configuration when it lacks a property (name, or a needed property). iPOJO should thrown an Exception helping user to track the reason when the configuration is refused.

Moreover, iPOJO bugs when an instance property is not correctly set.",,,,,,,,,,,,,,,,,,,,23/Jan/07 12:16;clement.escoffier;ipojo_unacceptable_conf.patch;https://issues.apache.org/jira/secure/attachment/12349441/ipojo_unacceptable_conf.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-24 13:23:21.759,,,no_permission,,,,,,,,,,,58787,,,Wed Jan 24 13:23:21 UTC 2007,,,,,,0|i0w19r:,185011,,,,,,,,"23/Jan/07 12:16;clement.escoffier;Patch to applied on the iPOJO Core project.

The patch solve bugs and add the UnacceptableConfiguration Exception (file to add (org.apache.felix.ipojo.UnacceptableConfiguration.java)).
",24/Jan/07 13:23;rickhall;I applied this patch.,,,,,,,,,,,,,,,,,,,,,,,,,
Spelling error in eventadmin/pom.xml,FELIX-195,12361084,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,fmeschbe,fmeschbe,23/Jan/07 12:04,10/Feb/07 02:52,14/Mar/19 02:47,23/Jan/07 14:34,framework-0.8.0,framework-1.0.0,,,,,,,,,,,,,Event Admin,,,,,,,0,,,,,,"In the org.apache.felix.eventadmin pom.xml file, the DynamicImport-Package header is misspelled as Dynamic-ImportPackage. This leads to the problem, that eventadmin cannot log to a LogService -. worse even, trying to log throws a ClassDefNotFoundError, which prevents event admin from working altogether.

Here's the diff from within the eventadmin folder (Copy-Pasting for simplicity reasons) :


Index: pom.xml
===================================================================
--- pom.xml     (Revision 498996)
+++ pom.xml     (Arbeitskopie)
@@ -37,9 +37,9 @@
            <Bundle-Activator>
               ${pom.artifactId}.impl.Activator
             </Bundle-Activator>
-            <Dynamic-ImportPackage>
+            <DynamicImport-Package>
               org.osgi.service.log
-            </Dynamic-ImportPackage>
+            </DynamicImport-Package>
             <Import-Package>!org.osgi.service.log,*</Import-Package>
             <Export-Package>org.osgi.service.event</Export-Package>
             <Private-Package>org.apache.felix.eventadmin.impl.*</Private-Package>

",Trunk at Rev. 498996,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-23 14:34:04.917,,,no_permission,,,,,,,,,,,58788,,,Sat Feb 10 02:52:50 UTC 2007,,,,,,0|i0vyfz:,184553,,,,,,,,"23/Jan/07 14:34;karlpauls;Thanks for pointing this out.

Fixed as of revision 499033.",10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO Core Bugs Fix,FELIX-192,12360765,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,18/Jan/07 14:49,22/Jan/07 20:01,14/Mar/19 02:47,22/Jan/07 20:01,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"A lot of small bugs was found thanks to the new iPOJO Test Suite : 

InstanceManager :
- Add a ""stopped"" state

Factory :
- Component Factory classloader should be able to define classes

Dependency Handler
- Fix a behavior problem when service = null
- The nullable class name is not consistent
- The nullable classloader is not used
- Define class problem when a nullable class is defiens two times
- Dependency Metadata are no more used after the creation
- Dependency Callback with argument are not invoked

iPOJO Description
- Lack of some info to displays

Provided Service Handler 
- Provided Service Handler check that the POJO implements at least one interface

Configuration Handler
- avoid double properties

",,,,,,,,,,,,,,,,,,,,18/Jan/07 14:50;clement.escoffier;ipojo_core_bugs.patch;https://issues.apache.org/jira/secure/attachment/12349171/ipojo_core_bugs.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-22 20:01:31.307,,,no_permission,,,,,,,,,,,58791,,,Mon Jan 22 20:01:31 UTC 2007,,,,,,0|i0vxpj:,184434,,,,,,,,"18/Jan/07 14:53;clement.escoffier;The patch solve listed bugs. IT need to be applied on the iPOJO project.
It delete two files :
 - DependencyMetadata (org.apache.felix.ipojo.handlers.dependency)
 - NullableClassloader (org.apache.felix.ipojo.handlers.dependency)

",22/Jan/07 20:01;rickhall;I applied this patch.,,,,,,,,,,,,,,,,,,,,,,,,,
External handler management inside the iPOJO Architecture Handler,FELIX-190,12359437,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,clement.escoffier,clement.escoffier,27/Dec/06 14:55,10/Feb/07 02:52,14/Mar/19 02:47,02/Jan/07 21:19,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"When using an external handler, the architecture service does not contains information (name, validity) for this handler.

For example, a component using an external Log Handler is displayed as : 
Instance : ipojo.log.example - INVALID from bundle 8
Handler : org.apache.felix.ipojo.handlers.dependency.DependencyHandler : valid
         Dependency on org.apache.felix.ipojo.foo.FooService[] is resolved
Handler : org.apache.felix.ipojo.handlers.architecture.ArchitectureHandler : valid

and should be :
Instance : ipojo.log.example - INVALID from bundle 8
Handler : org.apache.felix.ipojo.handlers.dependency.DependencyHandler : valid
         Dependency on org.apache.felix.ipojo.foo.FooService[] is resolved
Handler : org.apache.felix.ipojo.handlers.architecture.ArchitectureHandler : valid
Handler : org.apache.felix.ipojo.log.handler.LogHandler : invalid
",,,,,,,,,,,,,,,,,,,,27/Dec/06 14:56;clement.escoffier;patch_arch_handlers.txt;https://issues.apache.org/jira/secure/attachment/12347931/patch_arch_handlers.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-02 21:19:28.258,,,no_permission,,,,,,,,,,,58793,,,Sat Feb 10 02:52:50 UTC 2007,,,,,,0|i1aoe7:,270418,,,,,,,,27/Dec/06 14:56;clement.escoffier;Patch resolving the issue. To apply on ipojo project.,02/Jan/07 21:19;rickhall;I applied the patch.,10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,
Template file src/site/maven-site.vm does not exist while running,FELIX-189,12359333,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,man,man,23/Dec/06 15:04,10/Feb/07 10:13,14/Mar/19 02:47,10/Feb/07 10:13,framework-0.8.0,,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-10 10:13:18.644,,,no_permission,,,,,,,,,,,58794,,,Sat Feb 10 10:13:18 UTC 2007,,,,,,0|i0w1jb:,185054,,,,,,,,23/Dec/06 15:15;man;...at revision 489895 while running 'mvn site',"10/Feb/07 10:13;karlpauls;According to Ronald Spierenburg, this issue doesn't apply anymore. Please reopen with more information if needed.  ",,,,,,,,,,,,,,,,,,,,,,,,,
test summary,FELIX-188,12359209,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,,amixt,amixt,21/Dec/06 14:03,10/Feb/07 02:52,14/Mar/19 02:47,26/Dec/06 19:36,framework-1.0.0,,,,,,,,,,,,,,Preferences Service,,,,,,,0,,,,,,fsdf sdfds fdsf,fdf dfdsf ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-26 19:36:04.0,,,no_permission,,,,,,,,,,,58795,,,Sat Feb 10 02:52:49 UTC 2007,,,,,,0|i1aoef:,270419,,,,,,,,"26/Dec/06 19:36;rickhall;Since this appears to be meaningless, I am resolving this issue.",10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Logger ignores configuration property felix.log.level when a LogService is detected.,FELIX-186,12358675,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,jconlon,jconlon,14/Dec/06 18:06,10/Feb/07 02:52,14/Mar/19 02:47,14/Dec/06 18:59,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,The Framework Logger sends log output to System.out based on log priority and configuration property felix.log.level. When a LogService is detected this property is ignored by the Framwork Logger and all output is forwarded to the LogService.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-14 18:59:37.0,,,no_permission,,,,,,,,,,,58797,,,Sat Feb 10 02:52:49 UTC 2007,,,,,,0|i1aoev:,270421,,,,,,,,"14/Dec/06 18:59;rickhall;I committed a fix for this, where I perform the level check before doing any logging whatsoever. I didn't test it, but I think it will work. Please let me know if there are any issues.",10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Settercallback des not notify external handlers,FELIX-175,12355606,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,14/Nov/06 15:52,10/Feb/07 02:52,14/Mar/19 02:47,18/Nov/06 12:54,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"The component manager method settercallback does not notifies some handlers. The bugs comes from a problem in a array interation. 
",,,,,,,,,,,,,,,,,,,,14/Nov/06 15:53;clement.escoffier;patch_setter;https://issues.apache.org/jira/secure/attachment/12344973/patch_setter,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-18 12:54:34.0,,,no_permission,,,,,,,,,,,58808,,,Sat Feb 10 02:52:49 UTC 2007,,,,,,0|i0vyf3:,184549,,,,,,,,"14/Nov/06 15:53;clement.escoffier;The patch correct the bugs.
 It insert too the concept of ServiceContext usefull for Factories.",18/Nov/06 12:54;rickhall;I have applied this patch.,10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,
Bundle Plugin: BundlePlugin.getClasspath() fails to select artifacts,FELIX-174,12355572,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmeschbe,fmeschbe,14/Nov/06 07:30,19/Nov/06 12:05,14/Mar/19 02:47,18/Nov/06 12:51,framework-0.8.0,framework-1.0.0,,,,,,,,,,,,,Maven Bundle Plugin,,,,,,,0,,,,,,"The BundlePlugin.getClasspath() uses refential comparison to check the artifact scope instead of Object equality. This results in failure to build the complete classpath.

Attaching a patch.",,,,,,,,,,,,,,,,,,,,14/Nov/06 07:31;fmeschbe;FELIX-174.diff;https://issues.apache.org/jira/secure/attachment/12344941/FELIX-174.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-18 12:51:01.0,,,no_permission,,,,,,,,,,,58809,,,Sun Nov 19 12:05:38 UTC 2006,,,,,,0|i140rz:,231588,,,,,,,,14/Nov/06 07:31;fmeschbe;Patch replacing refential equality by Object equality when checking scope for inclusion in class path.,18/Nov/06 12:51;rickhall;I have applied this patch.,19/Nov/06 12:05;fmeschbe;Thanks alot. Closing then.,,,,,,,,,,,,,,,,,,,,,,,,
LocalRepository representing installed Bundles ignores optional package dependency,FELIX-173,12355460,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmeschbe,fmeschbe,13/Nov/06 12:51,19/Nov/06 12:02,14/Mar/19 02:47,18/Nov/06 12:57,framework-0.8.0,framework-1.0.0,,,,,,,,,,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"Trying to resolve a bundle form a remote repository, which has dependencies on a locally installed bunlde, which in turn has optional dependencies (ImportPackage with resolution:=optional), may fail for these optional dependencies.

I assume, the LocalRepositoryImpl.convertImportPackageToRequirement method should honour the R4Import.isOptional flag.

Will provide a patch for this.",,,,,,,,,,,,,,,,,,,,13/Nov/06 12:53;fmeschbe;FELIX-173.diff;https://issues.apache.org/jira/secure/attachment/12344878/FELIX-173.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-18 12:57:44.0,,,no_permission,,,,,,,,,,,58810,,,Sun Nov 19 12:02:28 UTC 2006,,,,,,0|i140s7:,231589,,,,,,,,13/Nov/06 12:53;fmeschbe;Patch for the method which honours the isOptional() field. This patch also slightly refactors the Requirement object creation by taking common code out of the if statement.,18/Nov/06 12:57;rickhall;I have applied this patch.,19/Nov/06 12:02;fmeschbe;Thanks alot. Closing.,,,,,,,,,,,,,,,,,,,,,,,,
"On shutdown of an embedded Felix instance, the PackageAdmin and StartLevel threads keep running",FELIX-170,12354663,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmeschbe,fmeschbe,03/Nov/06 09:28,07/Nov/06 07:42,14/Mar/19 02:47,07/Nov/06 07:35,framework-0.8.0,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"When shutting down a Felix instance in an embedded environment, which cause the Java VM to not be terminated, the FelixPackageAdmin and FelixStartLevel threads keep running...

",,,,,,,,,,,,,,,,,,,,03/Nov/06 09:32;fmeschbe;FELIX-170.diff;https://issues.apache.org/jira/secure/attachment/12344272/FELIX-170.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-07 07:35:27.0,,,no_permission,,,,,,,,,,,58813,,,Tue Nov 07 07:42:21 UTC 2006,,,,,,0|i140rj:,231586,,,,,,,,"03/Nov/06 09:32;fmeschbe;Attached patch adds stop() methods to the PackageAdminImpl and StartLevelImpl classes, which are called respectively by the PackageAdminActivator.stop() and StartLevelActivator.stop() methods.","07/Nov/06 07:35;rickhall;I applied this patch.

I modified it slightly to use notifyAll() rather than interrupt, since interrupt seemed a little harsh. I think it will still work as required. Let me know if it is problematic.

Thanks for looking into these areas since the use case hasn't been fully investigated yet.","07/Nov/06 07:42;fmeschbe;The modification is ok for me.

Thanks for applying the patch. Closing then.",,,,,,,,,,,,,,,,,,,,,,,,
Shutdown of Felix through Felix.shutdown() does not call custom activator stop methods,FELIX-169,12354581,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmeschbe,fmeschbe,02/Nov/06 14:58,07/Nov/06 07:56,14/Mar/19 02:47,07/Nov/06 07:51,,,,,,,,,,,,,,,,,,,,,,0,,,,,,"When starting Felix through Felix.start() a list of BundleActivator objects may be handed in. Additionally, the SystemBundle adds some more BundleActivators (e.g. the URLHandlersActivator. When stopping Felix through the SystemBundle.stop() method, a separate thread is started, which calls the Felix.shutdown() method, which ultimately calls back into the SystemBundle.stop() method, which now - amongst other things - calls the BundleActivator.stop() method of the additional BundleActivators.

If shutting Felix down through Felix.shutdown() directly, a separate thread is not started, and hence the BundleActivator.stop() methods are not called.

I assume, the test for the m_shutdownThread field in the SystemBundle.stop method is superfluous as this field is only set then Felix is stopped through the system bundle.",,,,,,,,,,,,,,,,,,,,03/Nov/06 09:26;fmeschbe;FELIX-169.diff;https://issues.apache.org/jira/secure/attachment/12344271/FELIX-169.diff,06/Nov/06 07:06;fmeschbe;FELIX-169_2.diff;https://issues.apache.org/jira/secure/attachment/12344377/FELIX-169_2.diff,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2006-11-03 13:48:51.0,,,no_permission,,,,,,,,,,,58814,,,Tue Nov 07 07:56:38 UTC 2006,,,,,,0|i0vxpz:,184436,,,,,,,,"03/Nov/06 09:26;fmeschbe;Attached is a patch, which also should fix a symetry issue: If the framework is shut down through the Framework.shutdown() method by the application, the SystemBundle.stop method does not start a separate thread, which at the end terminates the VM if not embedded.

The patch creates a new Felix.shutdownInternal() method, which is called by the SystemBundle.stop() method. The Felix.shutdown() method just calls the getBundle(0).stop() method, which then takes care to start the separate thread, call the Felix.shutdownInternal() method and finally terminating the VM if not embedded.

There is one catch, though: This patch causes the framework to shutdown asynchronously also for Felix.shutdown(). This may be desired in terms of symetry - however I stop the framework, it always does it the same way - or it may not besired, as Felix.shutdown() should possibly be a synchronous operation.

In the latter case, the Felix.shutdown() method should probably be extended to Thread.join() the shutdown thread.

What do you think ? If so, I could provide a patch for this, too.",03/Nov/06 13:48;rickhall;I think you would want Felix.shutdown() to be synchronous.,"03/Nov/06 18:25;fmeschbe;Allright, I will modify the patch to make Felix.shutdown() synchronous.","06/Nov/06 07:06;fmeschbe;Proposed patch with following additions:
  * Felix.shutdown() method split into public Felix.shutdown() (checks status, calls Felix.shutdownInternal(), exits VM if not embedded) and private Felix.shutdownInternal() doing the rest of the work of the former Felix.shutdown() method.
  * SystemBundle.stop() method split into SystemBundle.stop() (just calls Felix.shutdown() in a separate thread if the framework is running) and SystemBundle.shutdown() (actually stops the SystemBundle)

The reasoning for these new methods is as follows:
   (1) Felix.shutdown() and SystemBundle.stop() should behave the same for a running framework: The framework should be shut down - albeit Felix.shutdown() works synchronously and SystemBundle.stop() must work asynchronously (according to the spec).
   (2) Calling Felix.shutdown() or SystemBundle.stop() (e.g. through context.getBundle(0).stop()) while the framework is shutting down should have no effect.
   (3) After taking the startlevel to zero, the SystemBundle must be regularly stopped, which primarily means stopping any BundleActivators started.

With the former combined SystemBundle.stop() method, issue (2) could not be solved, as either the BundleActivators were never stopped (as no shutdown thread was started) or calling SystemBundle.stop() while the framework was being stopped would result in the BundleActivators being stopped to early.

I split the Felix.shutdown() method just for source code complexity reasons: The framework shutdown should complete - with or without exception - and the the VM should be stopped no matter what if the framework is not embedded. Therefore, shutdown processing should be encapsulated by a try-catch statement.",07/Nov/06 07:51;rickhall;I have applied this patch.,07/Nov/06 07:56;fmeschbe;Thanks alot. Closing this issue then.,,,,,,,,,,,,,,,,,,,,,
Start Level Service: 8.2.3 Startup Sequence error,FELIX-168,12354370,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmeschbe,fmeschbe,31/Oct/06 14:46,01/Nov/06 07:50,14/Mar/19 02:47,31/Oct/06 19:37,framework-0.8.0,,,,,,,,,,,,,,Framework,Specification compliance,,,,,,0,,,,,,"Section 8.2.3, Startup Sequence, of the Start Level Service specification states, that the Framework must raise the start level to the beginning start level as if calling StartLevel.setStartLevel with one exceptions: When the beginning start level has been reached, a FrameworkEvent.STARTED event must be broadcast instead of a FrameworkEvent.START_LEVEL_CHANGED.

In conjunction with Section 4.7.1, Statup, of the Life Cycle Layer specification, I assume that (a) the start level must be reached before the framework can be assumed to have started and (b) that the system bundle only enters the ACTIVE state after the beginning start level has been reached.

If this assumption would be correct, two issues exist in the Felix class: (a) the start level is raised asynchronously, meaning that the FrameworkEvent.STARTED is broadcast before the beginning start level has been reached and (b) when reaching the beginning start level a FrameworkEvent.START_LEVEL_CHANGED is sent, which should not actually be done.",,,,,,,,,,,,,,,,,,,,31/Oct/06 14:48;fmeschbe;FELIX-168.diff;https://issues.apache.org/jira/secure/attachment/12344009/FELIX-168.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-10-31 19:37:34.0,,,no_permission,,,,,,,,,,,58815,,,Wed Nov 01 07:50:46 UTC 2006,,,,,,0|i140rb:,231585,,,,,,,,"31/Oct/06 14:48;fmeschbe;Attached is a patch, which (a) calls the StartLevelImpl.setStartLevelAndWait method when raising the start level to the beginning start level and (b) does not broadcast the START_LEVEL_CHANGED event if the framework is not running.","31/Oct/06 19:37;rickhall;I applied this patch...Felix your patch applied without a problem this time, so however you did it differently it made the difference! :-)","01/Nov/06 07:50;fmeschbe;Glad to hear that. I ran the patch through dos2unix to remove any CRs in the file. It seems that this helped.

Thanks for applying the patch.",,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in isResourceUpdatable,FELIX-157,12352266,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,fmeschbe,fmeschbe,03/Oct/06 09:39,10/Feb/07 02:52,14/Mar/19 02:47,03/Oct/06 13:19,,,,,,,,,,,,,,,Bundle Repository (OBR),,,,,,,0,,,,,,"The isResourceUpdatable() method may throw a NullPointerException in case the bundle to be check whether it is updatable has no capabilities, that is neiterh exported services nor exported packages. In this case the getResolvableRequirements() method returns null, which is not caught by the isResourceUpdatable() method.

I suppose that the resource is perfectly updatable in this situation and a check may simply be built in, which just returns true in case the resource has no capabilities at all.",Felix SVN Rev. 452367,,,,,,,,,,,,,,,,,,,03/Oct/06 09:40;fmeschbe;bundlerepository_fm_20061003.diff;https://issues.apache.org/jira/secure/attachment/12342159/bundlerepository_fm_20061003.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-10-03 13:19:19.0,,,no_permission,,,,,,,,,,,58826,,,Sat Feb 10 02:52:48 UTC 2007,,,,,,0|i0vztj:,184776,,,,,,,,03/Oct/06 09:40;fmeschbe;Very simple patch implementing the check.,"03/Oct/06 13:19;rickhall;I applied the patch, thanks.",10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,
Matching attributes for R3 bundles should be ignored,FELIX-152,12350441,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,rickhall,rickhall,21/Sep/06 15:08,21/Sep/06 20:35,14/Mar/19 02:47,21/Sep/06 20:35,,,,,,,,,,,,,,,Framework,Specification compliance,,,,,,0,,,,,,"R3 bundles may have matching attributes, but they should be ignored by the framework. Currently, the manifest parser throws an exception. This should be modified to just drop the attributes and log a warning for R3 bundles with attributes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58831,,,Thu Sep 21 20:35:23 UTC 2006,,,,,,0|i140q7:,231580,,,,,,,,"21/Sep/06 20:35;rickhall;I committed a fix for this, which simply logs a WARNING for each unknown attribute on an R3 bundle import/export and removes them.",,,,,,,,,,,,,,,,,,,,,,,,,,
"Bundle.getResource does not check for AdminPermission, like getResources does.",FELIX-150,12350324,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,ogruber,ogruber,20/Sep/06 09:46,06/Mar/08 23:45,14/Mar/19 02:47,06/Mar/08 23:45,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"Both getResource and getResources on Bundle should return null if the caller does not have the appropriate AdminPermission[this,RESOURCE]
This is tested in getResources, which is not implemented otherwise, but left unchecked in getResource().

Missing code (copied from BundleImpl.getResources()):

        Object sm = System.getSecurityManager();

        if (sm != null)
        {
            try
            {
                ((SecurityManager) sm).checkPermission(new AdminPermission(this,
                    AdminPermission.RESOURCE));
            }
            catch (Exception e)
            {
                return null; // No permission
            }
        }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-09-20 10:04:36.0,,,no_permission,,,,,,,,,,,58833,,,Thu Mar 06 23:45:04 UTC 2008,,,,,,0|i1ao7b:,270387,,,,,,,,"20/Sep/06 10:04;karlpauls;I will have to look into permission checks again once we have all framework functionality working. 

This is one example of where new stuff wasn't revisited but will have to be.",06/Mar/08 23:45;karlpauls;I did commit this to trunk. Its in as of revision 634459.,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in Bundle.getEntry,FELIX-149,12350263,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,ogruber,ogruber,19/Sep/06 16:52,28/Sep/06 06:26,14/Mar/19 02:47,25/Sep/06 18:29,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"I think I found a bug in the implementation of URL Bundle.getEntry(String name); 
It raises a ClassCastException when called on the system bundle since its content loader 
is not a ContentLoaderImpl but actually a SystemBundleContentLoader. :-( 

class BundleImpl         
    public URL getEntry(String name) 
    { 
        Object sm = System.getSecurityManager(); 

        if (sm != null) 
        { 
            try 
            { 
                ((SecurityManager) sm).checkPermission(new AdminPermission(this, 
                    AdminPermission.RESOURCE)); 
            } 
            catch (Exception e) 
            { 
                return null; // No permission 
            } 
        } 

        return m_felix.getBundleEntry(this, name); 
    } 

class Felix 
    /** 
     * Implementation for Bundle.getEntry(). 
    **/ 
    protected URL getBundleEntry(BundleImpl bundle, String name) 
    { 
        if (bundle.getInfo().getState() == Bundle.UNINSTALLED) 
        { 
            throw new IllegalStateException(""The bundle is uninstalled.""); 
        } 
==>>        return ((ContentLoaderImpl) bundle.getInfo().getCurrentModule() 
            .getContentLoader()).getResourceFromContent(name); 
    } 

Here is a patch for this problem. 
It is basically moving the getResourceFromContent from ContentLoaderImpl to Felix, 
which required to modify the FindEntriesEnumeration slightly. 

Index: org/apache/felix/framework/searchpolicy/ContentLoaderImpl.java
===================================================================
--- org/apache/felix/framework/searchpolicy/ContentLoaderImpl.java	(revision 440763)
+++ org/apache/felix/framework/searchpolicy/ContentLoaderImpl.java	(working copy)
@@ -174,39 +174,6 @@
         return v.elements();
     }
 
-    // TODO: API: Investigate making this an API call.
-    public URL getResourceFromContent(String name)
-    {
-        URL url = null;
-
-        // Check for the special case of ""/"", which represents
-        // the root of the bundle according to the spec.
-        if (name.equals(""/""))
-        {
-            url = getURLPolicy().createURL(""0/"");
-        }
-
-        if (url == null)
-        {
-            // Remove leading slash, if present.
-            if (name.startsWith(""/""))
-            {
-                name = name.substring(1);
-            }
-
-            // Check the module content.
-            if (getContent().hasEntry(name))
-            {
-                // Module content URLs start with 0, whereas module
-                // class path URLs start with the index into the class
-                // path + 1.
-                url = getURLPolicy().createURL(""0/"" + name);
-            }
-        }
-
-        return url;
-    }
-
     public boolean hasInputStream(String urlPath)
     {
         if (urlPath.startsWith(""/""))
Index: org/apache/felix/framework/Felix.java
===================================================================
--- org/apache/felix/framework/Felix.java	(revision 440763)
+++ org/apache/felix/framework/Felix.java	(working copy)
@@ -1001,10 +1001,47 @@
         {
             throw new IllegalStateException(""The bundle is uninstalled."");
         }
-        return ((ContentLoaderImpl) bundle.getInfo().getCurrentModule()
-            .getContentLoader()).getResourceFromContent(name);
+        IContentLoader loader;
+        loader = bundle.getInfo().getCurrentModule().getContentLoader();
+        return getResourceFromContent(loader,name);
+        //return ((ContentLoaderImpl) bundle.getInfo().getCurrentModule()
+        //    .getContentLoader()).getResourceFromContent(name);
     }
 
+    // TODO: API: Investigate making this an API call.
+    private URL getResourceFromContent(IContentLoader loader, String name)
+    {
+        URL url = null;
+
+        // Check for the special case of ""/"", which represents
+        // the root of the bundle according to the spec.
+        if (name.equals(""/""))
+        {
+            url = loader.getURLPolicy().createURL(""0/"");
+        }
+
+        if (url == null)
+        {
+            // Remove leading slash, if present.
+            if (name.startsWith(""/""))
+            {
+                name = name.substring(1);
+            }
+
+            // Check the module content.
+            IContent content = loader.getContent();
+            if (content!=null && content.hasEntry(name))
+            {
+                // Module content URLs start with 0, whereas module
+                // class path URLs start with the index into the class
+                // path + 1.
+                url = loader.getURLPolicy().createURL(""0/"" + name);
+            }
+        }
+
+        return url;
+    }
+
     /**
      * Implementation for Bundle.getEntryPaths().
     **/
@@ -1034,8 +1071,8 @@
 
         // Get the entry enumeration from the module content and
         // create a wrapper enumeration to filter it.
-        Enumeration enumeration =
-            new FindEntriesEnumeration(bundle, path, filePattern, recurse);
+        Enumeration enumeration = 
+            new FindEntriesEnumeration(this,bundle, path, filePattern, recurse);
 
         // Return the enumeration if it has elements.
         return (!enumeration.hasMoreElements()) ? null : enumeration;
Index: org/apache/felix/framework/FindEntriesEnumeration.java
===================================================================
--- org/apache/felix/framework/FindEntriesEnumeration.java	(revision 440763)
+++ org/apache/felix/framework/FindEntriesEnumeration.java	(working copy)
@@ -22,6 +22,7 @@
 
 class FindEntriesEnumeration implements Enumeration
 {
+	private Felix m_felix;
     private BundleImpl m_bundle = null;
     private Enumeration m_enumeration = null;
     private String m_path = null;
@@ -29,9 +30,10 @@
     private boolean m_recurse = false;
     private Object m_next = null;
 
-    public FindEntriesEnumeration(
+    public FindEntriesEnumeration(Felix felix,
         BundleImpl bundle, String path, String filePattern, boolean recurse)
     {
+    	m_felix = felix;
         m_bundle = bundle;
         m_path = path;
         m_enumeration = m_bundle.getInfo().getCurrentModule()
@@ -49,7 +51,7 @@
             m_path = m_path.substring(1);
         }
         // Add a '/' to the end if not present.
-        if ((m_path.length() > 0) && (m_path.charAt(path.length() - 1) != '/'))
+        if ((m_path.length() > 0) && (m_path.charAt(m_path.length() - 1) != '/'))
         {
             m_path = m_path + ""/"";
         }
@@ -116,10 +118,12 @@
                     // See if the file pattern matches the last element of the path.
                     if (checkSubstring(m_filePattern, lastElement))
                     {
+                    	return m_felix.getBundleEntry(m_bundle,entryName);
+                    	
                         // Convert entry name into an entry URL.
-                        return ((ContentLoaderImpl) m_bundle.getInfo()
-                            .getCurrentModule().getContentLoader())
-                                .getResourceFromContent(entryName);
+                        //return ((ContentLoaderImpl) m_bundle.getInfo()
+                        //    .getCurrentModule().getContentLoader())
+                        //        .getResourceFromContent(entryName);
                     }
                 }
             }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-09-25 18:29:25.0,,,no_permission,,,,,,,,,,,58834,,,Mon Sep 25 18:29:25 UTC 2006,,,,,,0|i1ao7j:,270388,,,,,,,,"25/Sep/06 18:29;rickhall;I did not apply the patch as is, since I think it complicates the situation by spreading the resource URL handling out a little bit too much. Instead, what I did was add a getResourceFromContent() method to IContentLoader as a way to get resource URLs from a module's raw content. This is something that I had contemplated doing anyway as was noted in the comments. This probably still requires some thought on how to best handle resource URLs, but it should work for now.

Olivier, please review and test these changes to make sure they solve the issue you were having.",,,,,,,,,,,,,,,,,,,,,,,,,,
"Calling org.osgi.framework.Bundle.findEntries(path, pattern, recurse) on the system bundle throws NPE",FELIX-143,12350106,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,santillan,santillan,17/Sep/06 17:38,10/Feb/07 02:52,14/Mar/19 02:47,11/Oct/06 13:49,framework-0.8.0,,,,,,,,,,framework-0.8.0,,,,Framework,,,,,,,0,,,,,,"When calling findEntries on the system bundle: 
		Bundle system=context.getBundle(0);
		system.findEntries(""path"", ""*"", false);
A NPE exception is raised: 
java.lang.NullPointerException
	at org.apache.felix.framework.FindEntriesEnumeration.<init>(FindEntriesEnumeration.java:37)
	at org.apache.felix.framework.Felix.findBundleEntries(Felix.java:1033)
	at org.apache.felix.framework.BundleImpl.findEntries(BundleImpl.java:122)
",,,,,,,,,,,,,,,,,,,,17/Sep/06 17:41;santillan;bug-test.zip;https://issues.apache.org/jira/secure/attachment/12341006/bug-test.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-10-11 13:49:20.0,,,no_permission,,,,,,,,,,,58840,,,Sat Feb 10 02:52:47 UTC 2007,,,,,,0|i0vzsn:,184772,,,,,,,,17/Sep/06 17:41;santillan;Bundle project that shows the bug,"11/Oct/06 13:49;rickhall;The findEntries() code was assuming that all bundles have content, but the system bundle does not, which was the cause of the exception. I added a check for null content.",10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,
JMX management console does not manage cycles through gateways,FELIX-142,12349927,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,sfrenot,sfrenot,14/Sep/06 13:44,14/Sep/06 13:46,14/Mar/19 02:47,14/Sep/06 13:46,,,,,,,,,,,,,,,MOSGi,,,,,,,0,,,,,,Each time a old gateway is displayed an exception is thrown and tabs are not anymore displayed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58841,,,Thu Sep 14 13:46:36 UTC 2006,,,,,,0|i1ao7r:,270389,,,,,,,,"14/Sep/06 13:46;sfrenot;The hash table that contains the plugin list is not reinitialized for performances issues, so services should not always been unregistered",,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceDependency fails to invoke callback methods when implemented in superclass (patch included),FELIX-137,12349090,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,bramk,bramk,01/Sep/06 16:46,10/Feb/07 02:52,14/Mar/19 02:47,06/Dec/06 23:24,framework-0.8.0,,,,,,,,,,framework-0.8.0,,,,Dependency Manager,,,,,,,0,,,,,,"ServiceDependency fails to invoke callback methods when implemented in superclass. The problem is in the invokeCallbackMethod method cause it will never loop. I include 2 patches. The first just fixes the loop, but I was wondering why getDeclaredMethod is used. Using getMethod instead seems to work just fine.

grz,
Bram",,,,,,,,,,,,,,,,,,,,01/Sep/06 16:46;bramk;ASF.LICENSE.NOT.GRANTED--ServiceDependency_patch1.txt;https://issues.apache.org/jira/secure/attachment/12340065/ASF.LICENSE.NOT.GRANTED--ServiceDependency_patch1.txt,01/Sep/06 16:46;bramk;ASF.LICENSE.NOT.GRANTED--ServiceDependency_patch2.txt;https://issues.apache.org/jira/secure/attachment/12340066/ASF.LICENSE.NOT.GRANTED--ServiceDependency_patch2.txt,06/Dec/06 10:25;bramk;ServiceDependency.java.patch;https://issues.apache.org/jira/secure/attachment/12346536/ServiceDependency.java.patch,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2006-09-03 17:37:16.0,,,no_permission,,,,,,,,,,,58846,,,Sat Feb 10 02:52:47 UTC 2007,,,,,,0|i1ao8f:,270392,,,,,,,,"03/Sep/06 17:37;marrs;Thanks for the patches, Bram! I'm going to combine them to make sure that callbacks are found regardless of their exact location. getDeclaredMethod() was used because it can also find non-public methods (which getMethod() can't) but on the other hand, getDeclaredMethod() cannot find methods in superclasses. I would really want both, so I'll come up with a patch that does just that.",04/Sep/06 20:26;marrs;Just committed a patch that implements a new algorithm to invoke methods in any (super)class.,06/Dec/06 10:23;bramk;It seems now it is all little too enthusiastic :P In my case I now get multiple callbacks on from servicedependencies in the same scenario. The problem is in the recursive invokeMethod that takes a depth first approach and doesn't stop when it's done. I'll attach a new patch to this problem. It's non-recursive and breadth first.. I like it :),"06/Dec/06 10:25;bramk;fix for multiple callbacks

* removes recursion
* changes approach to breadth first","06/Dec/06 21:44;marrs;Still not correctly implemented, incorporate Bram's fixes.","06/Dec/06 23:24;marrs;Applied the patch supplied by Bram.
Added one extra option to make sure that the method stops looking for a method if the invoked method itself throws an exception (which means we did find and invoke the method, it just did not complete normally).",10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,
mosgi needs a log service implementation,FELIX-129,12348848,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,sfrenot,sfrenot,29/Aug/06 13:30,29/Aug/07 12:24,14/Mar/19 02:47,29/Aug/07 12:24,,,,,,,,,,,,,,,MOSGi,,,,,,,0,,,,,,Mosgi bundles depends on a log service implementation which is not available,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58854,,,2006-08-29 13:30:27.0,,,,,,0|i1ao9z:,270399,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"activate() calls do not match with deactivate() calls for a delayed component (immediate=""false"") and service instances are multiple (although there is no factory)",FELIX-112,12348025,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,donsez,donsez,15/Aug/06 19:35,30/May/08 18:15,14/Mar/19 02:47,18/Sep/07 14:30,framework-0.8.0,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"
activate() calls do not match with deactivate() calls for a delayed component (immediate=""false"")
and service instances are multiple (although there is no factory)
See the first trace.


If the component is immediate (immediate=""false""), the behavior is correct : see the second trace.
The instance is the same singleton for the two clients.

Didier


========================
TRACE WITH immediate=""false""
========================
<?xml version=""1.0"" encoding=""UTF-8""?>
<component name=""Hello.Service"" immediate=""false"">
	<!-- for immediate=""false"", see 112.5.4 Delayed Component -->

	<implementation class=""fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl""/>

	<property name=""language"" value=""fr""/>

	<service>
		<provide interface=""fr.imag.adele.bundle.hello.HelloService""/>
	</service>
</component>


-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (0.8.0.SNAPSHOT)
[   1] [Active     ] [    1] ShellService (0.8.0.SNAPSHOT)
[   2] [Active     ] [    1] ShellTUI (0.8.0.SNAPSHOT)
[   3] [Active     ] [    1] BundleRepository (0.8.0.SNAPSHOT)
[   4] [Active     ] [    1] servlet (2.1)
[   5] [Active     ] [    1] osgi.compendium (4)
[   6] [Active     ] [    1] Service Component Runtime (0.8.0.SNAPSHOT)
[   7] [Resolved   ] [    1] Hello Service Specification 1.2 (0.3.0)
[   8] [Resolved   ] [    1] Hello Command (with SCR) (0.1.0)
[   9] [Resolved   ] [    1] Hello Service Impl 1.1 SCR (0.1.0)
[  10] [Resolved   ] [    1] Hello Requester Impl 1.1 SCR (0.1.0)
-> start 9
--- [Hello.Service] Validated and registered component
--- [Hello.Service] ManagerFactory.createManager
--- [Hello.Service] Enabling component
--- [Hello.Service] State transition : CREATING -> CREATED
--- [Hello.Service] State transition : CREATED -> VALIDATING
--- [Hello.Service] State transition : VALIDATING -> VALID
--- [Hello.Service] registering services
-> start 8
--- [Hello.Cmd] Validated and registered component
--- [Hello.Cmd] ManagerFactory.createManager
--- [Hello.Cmd] Enabling component
--- [Hello.Cmd] State transition : CREATING -> CREATED
--- [Hello.Cmd] State transition : CREATED -> VALIDATING
--- [Hello.Cmd] State transition : VALIDATING -> VALID
--- [Hello.Cmd] registering services
--- [Hello.Cmd] DelayedComponentServiceFactory.getService()
--- [Hello.Service] DelayedComponentServiceFactory.getService()
(Bundle #9) call activate
(Bundle #8) call activate
-> hello Didier

Hello  Didier (from fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@e83912) !!

-> stop 8
--- [Hello.Cmd] State transition : VALID -> DESTROYING
--- [Hello.Cmd] unregistering the services
(Bundle #8) call deactivate
--- [Hello.Cmd] getting unbind: unbindHelloService
--- [Hello.Cmd] State transition : DESTROYING -> DESTROYED
-> start 8
--- [Hello.Cmd] Validated and registered component
--- [Hello.Cmd] ManagerFactory.createManager
--- [Hello.Cmd] Enabling component
--- [Hello.Cmd] State transition : CREATING -> CREATED
--- [Hello.Cmd] State transition : CREATED -> VALIDATING
--- [Hello.Cmd] State transition : VALIDATING -> VALID
--- [Hello.Cmd] registering services
--- [Hello.Cmd] DelayedComponentServiceFactory.getService()
--- [Hello.Service] DelayedComponentServiceFactory.getService()
(Bundle #9) call activate
(Bundle #8) call activate
-> hello Rick

Hello  Rick (from fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@7ffe01) !!

-> start 10
--- [Hello.Requester.11] Validated and registered component
--- [Hello.Requester.11] ManagerFactory.createManager
--- [Hello.Requester.11] Enabling component
--- [Hello.Requester.11] State transition : CREATING -> CREATED
--- [Hello.Requester.11] State transition : CREATED -> VALIDATING
--- [Hello.Service] DelayedComponentServiceFactory.getService()
(Bundle #9) call activate
(Bundle #10) call activate
--- [Hello.Requester.11] State transition : VALIDATING -> VALID
-> (Bundle #10) 1:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@fd13b5 says '
Hello World !!
'
(Bundle #10) 2:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@fd13b5 says '
Hello World !!
'
(Bundle #10) 3:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@fd13b5 says '
Hello World !!
'
(Bundle #10) 4:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@fd13b5 says '
Hello World !!
'
(Bundle #10) 5:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@fd13b5 says '
Hello World !!
'
hello Rick

(Bundle #10) 6:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceI
mpl@fd13b5 says '
Hello World !!
'


Hello  Rick (from fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@7ffe01) !!

-> (Bundle #10) 7:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@fd13b5 says '
Hello World !!
'
(Bundle #10) 8:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@fd13b5
 says '
Hello World !!
'
(Bundle #10) 9:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@fd13b5
 says '
Hello World !!
'
stop 10
--- [Hello.Requester.11] State transition : VALID -> DESTROYING
(Bundle #10) call deactivate
--- [Hello.Requester.11] getting unbind: unbindHelloService
--- [Hello.Requester.11] State transition : DESTROYING -> DESTROYED


-> services 9

Hello Service Impl 1.1 SCR (9) provides:
----------------------------------------
language = fr
objectClass = fr.imag.adele.bundle.hello.HelloService
service.id = 37


-> (Bundle #10) thread completed
stop 8
--- [Hello.Cmd] State transition : VALID -> DESTROYING
--- [Hello.Cmd] unregistering the services
(Bundle #8) call deactivate
--- [Hello.Cmd] getting unbind: unbindHelloService
--- [Hello.Cmd] State transition : DESTROYING -> DESTROYED
-> stop 9
--- [Hello.Service] State transition : VALID -> DESTROYING
--- [Hello.Service] unregistering the services
(Bundle #9) call deactivate
--- [Hello.Service] State transition : DESTROYING -> DESTROYED
->



========================
TRACE WITH immediate=""true""
========================
<?xml version=""1.0"" encoding=""UTF-8""?>
<component name=""Hello.Service"" immediate=""true"">
	<!-- for immediate=""false"", see 112.5.4 Delayed Component -->

	<implementation class=""fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl""/>

	<property name=""language"" value=""fr""/>

	<service>
		<provide interface=""fr.imag.adele.bundle.hello.HelloService""/>
	</service>
</component>

-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (0.8.0.SNAPSHOT)
[   1] [Active     ] [    1] ShellService (0.8.0.SNAPSHOT)
[   2] [Active     ] [    1] ShellTUI (0.8.0.SNAPSHOT)
[   3] [Active     ] [    1] BundleRepository (0.8.0.SNAPSHOT)
[   4] [Active     ] [    1] servlet (2.1)
[   5] [Active     ] [    1] osgi.compendium (4)
[   6] [Active     ] [    1] Service Component Runtime (0.8.0.SNAPSHOT)
[   7] [Resolved   ] [    1] Hello Service Specification 1.2 (0.3.0)
[   8] [Resolved   ] [    1] Hello Command (with SCR) (0.1.0)
[   9] [Resolved   ] [    1] Hello Service Impl 1.1 SCR (0.1.0)
[  10] [Resolved   ] [    1] Hello Requester Impl 1.1 SCR (0.1.0)
->
->
-> start 9
--- [Hello.Service] Validated and registered component
--- [Hello.Service] ManagerFactory.createManager
--- [Hello.Service] Enabling component
--- [Hello.Service] State transition : CREATING -> CREATED
--- [Hello.Service] State transition : CREATED -> VALIDATING
(Bundle #9) call activate
--- [Hello.Service] State transition : VALIDATING -> VALID
--- [Hello.Service] registering services
-> start 8
--- [Hello.Cmd] Validated and registered component
--- [Hello.Cmd] ManagerFactory.createManager
--- [Hello.Cmd] Enabling component
--- [Hello.Cmd] State transition : CREATING -> CREATED
--- [Hello.Cmd] State transition : CREATED -> VALIDATING
--- [Hello.Cmd] State transition : VALIDATING -> VALID
--- [Hello.Cmd] registering services
--- [Hello.Cmd] DelayedComponentServiceFactory.getService()
(Bundle #8) call activate
-> hello Rick

Hello  Rick (from fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@291aff) !!

-> start 10
--- [Hello.Requester.11] Validated and registered component
--- [Hello.Requester.11] ManagerFactory.createManager
--- [Hello.Requester.11] Enabling component
--- [Hello.Requester.11] State transition : CREATING -> CREATED
--- [Hello.Requester.11] State transition : CREATED -> VALIDATING
(Bundle #10) call activate
--- [(Bundle #10) 1:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@291aff says '
Hello World !!
'
Hello.Requester.11] State transition : VALIDATING -> VALID
-> (Bundle #10) 2:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@291aff says '
Hello World !!
'
(Bundle #10) 3:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@291aff
 says '
Hello World !!
'
(Bundle #10) 4:fr.imag.adele.bundle.helloservicescr.impl.HelloServiceImpl@291aff
 says '
Hello World !!
'
stop 10
--- [Hello.Requester.11] State transition : VALID -> DESTROYING
(Bundle #10) call deactivate
--- [Hello.Requester.11] getting unbind: unbindHelloService
--- [Hello.Requester.11] State transition : DESTROYING -> DESTROYED
-> (Bundle #10) thread completed
stop 8
--- [Hello.Cmd] State transition : VALID -> DESTROYING
--- [Hello.Cmd] unregistering the services
(Bundle #8) call deactivate
--- [Hello.Cmd] getting unbind: unbindHelloService
--- [Hello.Cmd] State transition : DESTROYING -> DESTROYED
-> stop 9
--- [Hello.Service] State transition : VALID -> DESTROYING
--- [Hello.Service] unregistering the services
(Bundle #9) call deactivate
--- [Hello.Service] State transition : DESTROYING -> DESTROYED
->

","WinXP, Sun JDK 5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-17 09:18:40.0,,,no_permission,,,,,,,,,,,58871,,,Tue Sep 18 14:30:34 UTC 2007,,,,,,0|i1anzr:,270353,,,,,,,,"17/Nov/06 09:18;tonit;Hi Didler,

is it possible to get the sourcecode of your hello* bundles?
Just to reproduce it as you did?

thanks, Toni","28/Mar/07 14:38;fmeschbe;Hi Didier,

I just committed a major rework of the scr project which - hopefully - also solves your issue. Could you please verify, whether this is the case ? Thanks.

Regards
Felix","18/Sep/07 14:30;fmeschbe;According to Didier, this issue has been solved with the refactorings of the bundle over the last few month.

Therefore, I close this bug fixed.",,,,,,,,,,,,,,,,,,,,,,,,
java.lang.ClassCastException when the component descriptor contains <property> elements,FELIX-109,12347740,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,donsez,donsez,10/Aug/06 21:47,30/May/08 18:15,14/Mar/19 02:47,06/Sep/06 19:09,framework-0.8.0,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"There is a bug in org.apache.felix.scr
when the component descriptor contains <property> elements

java.lang.ClassCastException: java.lang.String
        at
org.apache.felix.scr.ComponentMetadata.validate(ComponentMetadata.java:254)
        at org.apache.felix.scr.XmlHandler.endElement(XmlHandler.java:175)
        at
org.apache.felix.scr.parser.KXml2SAXParser.parseXML(KXml2SAXParser.java:72)
        at
org.apache.felix.scr.GenericActivator.initialize(GenericActivator.java:148)
        at
org.apache.felix.scr.GenericActivator.start(GenericActivator.java:99)

        at org.apache.felix.framework.Felix._startBundle(Felix.java:1349)
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1283)
        at
org.apache.felix.framework.Felix.setFrameworkStartLevel(Felix.java:765)
        at
org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:206)
        at java.lang.Thread.run(Thread.java:595) ","WinXP, Sun JDK 1.5",,,,,,,,,,,,,,,,,,,30/Aug/06 15:46;fmeschbe;ComponentMetadata_fm_20060830.diff;https://issues.apache.org/jira/secure/attachment/12339876/ComponentMetadata_fm_20060830.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-08-30 15:46:00.0,,,no_permission,,,,,,,,,,,58874,,,Sat Feb 10 02:52:46 UTC 2007,,,,,,0|i0vzgv:,184719,,,,,,,,"30/Aug/06 15:46;fmeschbe;The problem is that the ComponentMetadata.addProperty method feeds an internal Properties instance with the registered property name and value while the ComponentMetadata.validate() assuems the keys to be PropertyMetadata instances.

I propse the attached fix, which is implemented as follows:

    addProperty: feeds a list with the PropertyMetadata instances
    validate: iterates the PropertyMetadata list, validates each entry and fills a Hashtable
             with the validated property name and value
   getProperties: now returns a Dictionary (which is the Hashtable filled by validate)

The choice of using a Hashtable instead of a Properties instance is, that the service property values need not be String objects, while the Properties object assumes String values.",06/Sep/06 19:09;rickhall;This patch has been applied.,10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,
Felix can deploy bundles without Bundle-SymbolicName header,FELIX-107,12347545,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sauthieg,sauthieg,08/Aug/06 16:36,10/Feb/07 02:52,14/Mar/19 02:47,08/Aug/06 22:16,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,"In OSGi R4 §3.2.1.13,  the Bundle-SymbolicName Manifest Header is defined as mandatory :
""3.2.1.13 Bundle-SymbolicName: com.acme.daffy
The Bundle-SymbolicName header specifies a unique, non-localizable name
for this bundle. This name should be based on the reverse domain name
convention, see Bundle-SymbolicName on page 37. This header must be set.""

Allowing that header to be null, affect the bundlerepository bundle :

obr deploy ""My Bundle""
java.lang.NullPointerException
	at org.apache.felix.bundlerepository.ResourceImpl.equals(ResourceImpl.java:69)
	at java.util.Arrays$ArrayList.indexOf(Arrays.java:2384)
	at java.util.Arrays$ArrayList.contains(Arrays.java:2391)
	at java.util.AbstractSet.removeAll(AbstractSet.java:146)
	at org.apache.felix.bundlerepository.ResolverImpl.resolve(ResolverImpl.java:143)
	at org.apache.felix.bundlerepository.ObrCommandImpl._deploy(ObrCommandImpl.java:320)
	at org.apache.felix.bundlerepository.ObrCommandImpl.deploy(ObrCommandImpl.java:294)
	at org.apache.felix.bundlerepository.ObrCommandImpl.execute(ObrCommandImpl.java:108)
	at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:263)
	at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:165)
	at java.lang.Thread.run(Thread.java:595)",Latest Felix from SVN,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-08-08 22:16:16.0,,,no_permission,,,,,,,,,,,58876,,,Sat Feb 10 02:52:46 UTC 2007,,,,,,0|i0vzgf:,184717,,,,,,,,"08/Aug/06 22:16;rickhall;Felix correctly enforces the rule that R4 bundles must have a symbolic name, so I will close this. See ManifestParser.checkAndNormalizeR4()...if there is a bug in this, please reopen this issue.

Keep in mind that R3 bundles will not have a symbolic name and they are perfectly legal on an R4 framework. OBR2 can only deal with bundles that have a symbolic name, which means that even R3 bundles must have a symbolic name if you wish to deploy them using OBR. It is generally not a big deal to add the symbolic name header to an R3 bundle, since it will just be ignored by R3 frameworks...the only problem is if you are unable to modify the R3 bundle's headers.","09/Aug/06 07:42;sauthieg;OK

The problem is that the o.a.f.bundlerepository doesn't cares about R3 or R4 bundles.
It asks all bundles (R3 or R4) installed on the platform for their Bundle-SymbolicName, event if they have none.

So maybe the BundleRepository implementation is bugged, and should handle only R4 compliant Bundles ...

What do you think ?","09/Aug/06 12:43;rickhall;Yes, probably so. I will add a JIRA component and issue for this on OBR.",10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,
SCR doesn't support XML documents with namespaces,FELIX-106,12347061,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,sauthieg,sauthieg,01/Aug/06 14:11,30/May/08 18:15,14/Mar/19 02:47,14/Aug/07 11:28,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"For instance, the following (valid) XML will lead to an Exception :

<component xmlns=""http://www.osgi.org/xmlns/scr/v1.0.0""
                        xmlns:scr=""http://www.osgi.org/xmlns/scr/v1.0.0""
                        name=""scr.MyService"">
  <scr:implementation class=""MyService"" />
</component>

Does KXML2 supports namespaces ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-14 08:33:13.686,,,no_permission,,,,,,,,,,,58877,,,Tue Aug 14 11:42:01 UTC 2007,,,,,,0|i1ao07:,270355,,,,,,,,"14/Aug/07 08:33;cziegeler;I added initial support for better handling of the namespace though I'm not sure if kxml2 supports namespaces in all cases.
If this isn't the case, then we can simply switch to the jaxp parser.","14/Aug/07 08:45;fmeschbe;> If this isn't the case, then we can simply switch to the jaxp parser.

I would rather not, since the KXML Parser is included in the bundle and is lean and clean and fast. Probably the KXML parser must be set to being namespace aware using the http://xmlpull.org/v1/doc/features.html#process-namespaces feature.","14/Aug/07 09:03;cziegeler;JAXP is available in the JDK :) (but perhaps not available in all environments), so staying with kxml is perhaps a better way, that's true.
I turned on the namespace processing.",14/Aug/07 11:42;fmeschbe;The recently deployed snapshot after fixing FELIX-337 also includes the changes of this issue.,,,,,,,,,,,,,,,,,,,,,,,
SCR component/reference/cardinality never used,FELIX-105,12347052,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sauthieg,sauthieg,01/Aug/06 12:52,30/May/08 18:15,14/Mar/19 02:47,01/Aug/06 14:31,,,,,,,,,,,scr-1.0.0,,,,Declarative Services (SCR),,,,,,,0,,,,,,"In Felix SCR, the reference[@cardinality] attribute is not used :
Tests (isOptionnal, isMultiple, ...) are done on m_cardinality which is not assigned with the value from the XML",,,,,,,,,,,,,,,,,,,,01/Aug/06 13:23;sauthieg;scr-cardinality.patch;https://issues.apache.org/jira/secure/attachment/12337892/scr-cardinality.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-08-01 14:31:41.0,,,no_permission,,,,,,,,,,,58878,,,Sat Feb 10 02:52:46 UTC 2007,,,,,,0|i140tr:,231596,,,,,,,,"01/Aug/06 13:23;sauthieg;Correct the setCardinality method just by moving up the following line :
m_cardinality = cardinality;",01/Aug/06 14:31;rickhall;I have applied this patch.,10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,
Mixing iPOJO and OSGi projects within a parent maven build project may install jars in maven with unexpected extensions.,FELIX-104,12346994,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,jconlon,jconlon,31/Jul/06 21:27,16/Apr/08 16:35,14/Mar/19 02:47,16/Apr/08 16:35,framework-0.8.0,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"When doing a multiproject build of modules that are iPOJO <packaging>ipojo-bundle</packaging> and OSGi <packaging>osgi-bundle</packaging> maven may install a built iPOJO bundle with the extension *.ipojo-bundle or it may install the same bundle with a *.jar extension.  Likewise a OSGi bundle maybe created with the extension *.jar or osgi-bundle.  Building each of these sub-projects individually will always install the created bundles with the *.jar extension.

Appears to install all bundles with *.jar extension into repo upto the point a different type is encountered. For example if 

<modules>
		<module>ipojo.project.1</module>
		<module>ipojo.project.2r</module>
		<module>ipojo.project.3</module>
		<module>osgi.project.1</module>
	 	<module>ipojo.project.4</module>
</modules>

ipojo.project.1 - 3 would be installed in repo with *.jar extension
osgi.project.1 would be installed with the *.osgi-bundle extension
ipojo.project.4 would be installed with the *.ipojo-bundle extension

Building each of the projects seperately would install each bundle in the repo with *.jar extension.
Commenting out the osgi.project.1 module above would install all the ipojo bundles in the maven repo with a *.jar extension.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-08-03 07:02:15.0,,,no_permission,,,,,,,,,,,58879,,,Wed Apr 16 16:35:43 UTC 2008,,,,,,0|i1ao0f:,270356,,,,,,,,"03/Aug/06 07:02;clement.escoffier;Hello,

It don't know the reason of this problem, but when you compile the Felix Trunk it works. In the Felix trunk you have osgi-bundles and one ipojo-bundle (arch).
I will investiguate to find the reason.","05/Aug/06 00:25;furfari;Hi,
I found the same problem playing with MOSGi projects.
If you append the module declarations at the bottom of the POM all the mosgi jars will be installed with .osgi-bundle extension and the build proccess fails

</modules>
    ...
 
    <module>ipojo</module>
    <module>ipojo.metadata</module>
    <module>ipojo.plugin</module>
    <module>ipojo.arch</module>

    <module>org.apache.felix.mosgi.console.ifc</module>
    <module>org.apache.felix.mosgi.console.component</module>
    <module>org.apache.felix.mosgi.console.gui</module>
    <module>org.apache.felix.mosgi.jmx.agent</module>
    <module>org.apache.felix.mosgi.jmx.httpconnector</module>
    <module>org.apache.felix.mosgi.jmx.registry</module>
    <module>org.apache.felix.mosgi.jmx.remotelogger</module>
    <module>org.apache.felix.mosgi.jmx.rmiconnector</module>
    <module>org.apache.felix.mosgi.managedelements.osgiprobes</module>
    <module>org.apache.felix.mosgi.managedelements.osgiprobes.tab</module>

  </modules>


A quick patch is to move the ipojo declarations to the bottom. Stephan didn't have added the modules declaration yet, I don't know why but, as reported, installing individualy every single mosgi project  works fine and I'm playing with them :-)","09/Oct/06 16:40;jconlon;This is a Maven problem see:
http://jira.codehaus.org/browse/MNG-1682","03/Aug/07 12:42;clement.escoffier;This issue can be closed. 
The new iPOJO plugin has solved this problem. Now, multi-module project can contains bundle, ""ipojo bundle"", ""normal"" jar ....

",16/Apr/08 16:35;rickhall;Closing at Clement's request.,,,,,,,,,,,,,,,,,,,,,,
Avoiding several manipulation on the same class,FELIX-103,12346778,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,27/Jul/06 15:06,10/Feb/07 02:52,14/Mar/19 02:47,28/Jul/06 06:54,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"When a component class is manipulated two times, the manipulation failed : it cannot insert two times the same fields, methods ... 

",,,,,,,,,,,,,,,,,,,,27/Jul/06 15:08;clement.escoffier;patch_several_manipulation.txt;https://issues.apache.org/jira/secure/attachment/12337643/patch_several_manipulation.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-07-28 06:54:28.0,,,no_permission,,,,,,,,,,,58880,,,Sat Feb 10 02:52:46 UTC 2007,,,,,,0|i140tj:,231595,,,,,,,,"27/Jul/06 15:08;clement.escoffier;Patch resolving the issue.
It insert a new ClassVisitor. This class gathers component class informations and verify that the class was not already manipulated. 
The patch must be applyied on the plugin project.
The patch adds a new file (Classchecker).",28/Jul/06 06:54;rickhall;I applied the patch.,10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,
Insertion of the component manager inside component classes,FELIX-99,12346617,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,25/Jul/06 10:30,26/Jul/06 09:34,14/Mar/19 02:47,26/Jul/06 08:53,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"iPOJO manipulation inserts a field inside the component classes. This field is the component manager of the component. It is used to interact with the container. 
This field is a static field. As a consequence, two components created from the same class share the same component manager. This is problematic in the case of component factory where it must be possible to create 2 components from the same class but with different metadata (container configuration).
",,,,,,,,,,,,,,,,,,,,25/Jul/06 10:55;clement.escoffier;patch_cm_core.txt;https://issues.apache.org/jira/secure/attachment/12337455/patch_cm_core.txt,25/Jul/06 10:55;clement.escoffier;patch_cm_plugin.txt;https://issues.apache.org/jira/secure/attachment/12337456/patch_cm_plugin.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2006-07-26 08:53:53.0,,,no_permission,,,,,,,,,,,58884,,,Wed Jul 26 09:34:30 UTC 2006,,,,,,0|i0w1pb:,185081,,,,,,,,"25/Jul/06 10:55;clement.escoffier;The first patch (patch_cm_plugin) modify the bytecode transformation to add a new argument to each constructor of the class. This new argument is the component manager. So each component instance will have the correct component manager. It change the access to the old _cm field too.

The second patch (patch_cm_core) change the createInstance method to call the new constructor. ",26/Jul/06 08:53;rickhall;I have applied the patch.,26/Jul/06 09:34;clement.escoffier;Issue resolved by applying the patch,,,,,,,,,,,,,,,,,,,,,,,,
Modifiers of generated mehod,FELIX-96,12346327,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,20/Jul/06 07:46,26/Jul/06 09:36,14/Mar/19 02:47,25/Jul/06 07:13,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"iPOJO inject methods inside the POJO code, these methods allows the container (component manager) delegation. 
These method are publics and should be privates.
",,,,,,,,,,,,,,,,,,,,20/Jul/06 14:30;clement.escoffier;patch_ipojo_public.txt;https://issues.apache.org/jira/secure/attachment/12337243/patch_ipojo_public.txt,20/Jul/06 14:30;clement.escoffier;patch_plugin_public.txt;https://issues.apache.org/jira/secure/attachment/12337244/patch_plugin_public.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2006-07-25 07:13:52.0,,,no_permission,,,,,,,,,,,58887,,,Wed Jul 26 09:36:43 UTC 2006,,,,,,0|i0w1ov:,185079,,,,,,,,"20/Jul/06 14:30;clement.escoffier;These patch change the modifier of injected method to be private.
The patch_ipojo_public patch must be applied on the ipojo project. It change the setComponentManager invocation to called the private method.
The patch_plugin_public patch must be applied on the ipojo.plugin project. It change the bytecode manipulator.
",25/Jul/06 07:13;rickhall;I applied the patch.,26/Jul/06 09:36;clement.escoffier;Issue resolved by applying the patch,,,,,,,,,,,,,,,,,,,,,,,,
Remove the DummyActivator,FELIX-89,12345378,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,04/Jul/06 20:48,04/Jul/06 22:22,14/Mar/19 02:47,04/Jul/06 22:18,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"iPOJO uses a DummyActivator to avoiad activator detection in the maven bundle plugin. With the new version of this plugin, the detection can be avoided. The DummyActivator is now useless.",,,,,,,,,,,,,,,,,,,,04/Jul/06 20:49;clement.escoffier;patch_dummy.txt;https://issues.apache.org/jira/secure/attachment/12336324/patch_dummy.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-07-04 22:18:16.0,,,no_permission,,,,,,,,,,,58894,,,Tue Jul 04 22:22:08 UTC 2006,,,,,,0|i0w1nr:,185074,,,,,,,,04/Jul/06 20:49;clement.escoffier;Remove the DummyActivator class and remove the bundle-activator in the pom file.,04/Jul/06 22:18;rickhall;Applied patch.,04/Jul/06 22:22;clement.escoffier;Patch applied,,,,,,,,,,,,,,,,,,,,,,,,
Wrong GroupId in project createed with the iPOJO Archetype,FELIX-88,12345048,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,27/Jun/06 20:37,04/Jul/06 22:23,14/Mar/19 02:47,28/Jun/06 04:27,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"The iPOJO maven plugin contain an archetype. This archetype create the project structure. The created pom file refer on the iPOJO plugin, but the referred groupId is wrong. Instead of being org.apache.felix, it is org.apache.felix.ipojo",,,,,,,,,,,,,,,,,,,,27/Jun/06 20:38;clement.escoffier;patch_plugin_pom.txt;https://issues.apache.org/jira/secure/attachment/12335999/patch_plugin_pom.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-06-28 04:27:48.0,,,no_permission,,,,,,,,,,,58895,,,Tue Jul 04 22:23:50 UTC 2006,,,,,,0|i0w1nj:,185073,,,,,,,,27/Jun/06 20:38;clement.escoffier;Change the groupId from org.apache.felix.ipojo to org.apache.felix,28/Jun/06 04:27;rickhall;Applied the patch.,04/Jul/06 22:23;clement.escoffier;Patch applied,,,,,,,,,,,,,,,,,,,,,,,,
Problem updating a Provided Service's registered properties.,FELIX-84,12344698,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,jconlon,jconlon,21/Jun/06 06:12,10/Feb/07 02:52,14/Mar/19 02:47,22/Jun/06 20:12,framework-0.8.0,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"Experiencing intermittent NPEs  when Configuration Admin updates the properties of a registered provided service and m_serviceRegistration is null.

Have seen this behavior in two variations, both intermittent.

1. When a component specifies a ConfigurableProperty in the metadata and the ConfigurationHandler is acting as the ManagedService.   Here is the log of this condition:

INFO  [Update Consumer] org.apache.configuration.impl.UpdateConsumer.updateManagedService(UpdateConsumer.java:245) - Invoking updated on managedService=org.apache.felix.ipojo.handlers.configuration.ConfigurationHandler@1d2b01b, with configuration=org.apache.configuration.impl.ConfigurationDictionary [ event.topics=com/verticon/rfid, service.pid=com.verticon.react2, objectclass=[react2Server, apacheServiceConfiguration, top], event.filter=(event.topics=*), cn=react2Server ]
ERROR [Update Consumer] org.apache.configuration.impl.UpdateConsumer.updateManagedService(UpdateConsumer.java:253) - Failed to update managedService org.apache.felix.ipojo.handlers.configuration.ConfigurationHandler@1d2b01b
java.lang.NullPointerException
        at org.apache.felix.ipojo.handlers.providedService.ProvidedService.update(ProvidedService.java:271)
        at org.apache.felix.ipojo.handlers.providedService.Property.set(Property.java:116)
        at org.apache.felix.ipojo.handlers.providedService.ProvidedServiceHandler.setterCallback(ProvidedServiceHandler.java:252)
        at org.apache.felix.ipojo.ComponentManager.setterCallback(ComponentManager.java:463)
        at org.apache.felix.ipojo.handlers.configuration.ConfigurationHandler.updated(ConfigurationHandler.java:184)
        at org.apache.configuration.impl.UpdateConsumer.updateManagedService(UpdateConsumer.java:249)
        at org.apache.configuration.impl.UpdateConsumer.update(UpdateConsumer.java:195)
        at org.apache.configuration.impl.UpdateConsumer.configureManagedService(UpdateConsumer.java:283)
        at org.apache.configuration.impl.UpdateConsumer.handleEvent(UpdateConsumer.java:131)
        at org.apache.configuration.impl.UpdateConsumer.run(UpdateConsumer.java:97)
        at java.lang.Thread.run(Thread.java:595)

2. The second condition is when a component that has specified a ManagedService as a ProvidedService and this component attempts to directly update a property that was specified as a child property element to the ProvidedService in the metadata.

INFO  [Update Consumer] org.apache.configuration.impl.UpdateConsumer.updateManagedService(UpdateConsumer.java:245) - Invoking updated on managedService=React2EventEmulator, with configuration=org.apache.configuration.impl.ConfigurationDictionary [ service.pid=com.verticon.react2.emulator, periodseconds=30, objectclass=[react2Emulator, apacheServiceConfiguration, top], delayseconds=6, cn=react2Emulator, eventtopic=com/verticon/rfid/MOVEMENT ]
ERROR [Update Consumer] org.apache.configuration.impl.UpdateConsumer.updateManagedService(UpdateConsumer.java:253) - Failed to update managedService React2EventEmulator
java.lang.NullPointerException
        at org.apache.felix.ipojo.handlers.providedService.ProvidedService.update(ProvidedService.java:271)
        at org.apache.felix.ipojo.handlers.providedService.Property.set(Property.java:116)
        at org.apache.felix.ipojo.handlers.providedService.ProvidedServiceHandler.setterCallback(ProvidedServiceHandler.java:252)
        at org.apache.felix.ipojo.ComponentManager.setterCallback(ComponentManager.java:463)
        at com.verticon.react2.emulator.Emulator._seteventTopic(Emulator.java)
        at com.verticon.react2.emulator.Emulator.loadTopicProperty(Emulator.java:165)
        at com.verticon.react2.emulator.Emulator.loadConfigurationProperties(Emulator.java:153)
        at com.verticon.react2.emulator.Emulator.updated(Emulator.java:90)
        at org.apache.configuration.impl.UpdateConsumer.updateManagedService(UpdateConsumer.java:249)
        at org.apache.configuration.impl.UpdateConsumer.update(UpdateConsumer.java:195)
        at org.apache.configuration.impl.UpdateConsumer.configureManagedService(UpdateConsumer.java:283)
        at org.apache.configuration.impl.UpdateConsumer.handleEvent(UpdateConsumer.java:131)
        at org.apache.configuration.impl.UpdateConsumer.run(UpdateConsumer.java:97)
        at java.lang.Thread.run(Thread.java:595)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-06-22 20:12:08.0,,,no_permission,,,,,,,,,,,58899,,,Sat Feb 10 02:52:45 UTC 2007,,,,,,0|i0vzm7:,184743,,,,,,,,"22/Jun/06 20:12;rickhall;John suggested two places to add synchronized blocks to resolve this issue; these blocks have been committed to the repo. In general, iPOJO code needs to be evaluated more closely with respect to concurrency issues since it has not been a focus up until this point.",10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Dep Manager does not handle inherited callback methods right,FELIX-82,12344651,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,peter@neubauer.se,peter@neubauer.se,20/Jun/06 16:44,10/Feb/07 02:52,14/Mar/19 02:47,20/Jun/06 18:58,,,,,,,,,,,framework-0.8.0,,,,Dependency Manager,,,,,,,0,,,,,,"This does not work for inherited classes as the reflection jsut works for the current type. In order to be abelt o define callback even in e.g. Abstract classes, one needs to go up the hirarchy in order to find these methods.
/peter


ServiceDependency 
...

invokeCallbackMethod
private void invokeCallbackMethod( Object instance, String methodName,
            ServiceReference reference, Object service )
            throws NoSuchMethodException
    {
        Method method = null;
        Class clazz = instance.getClass();
        AccessibleObject.setAccessible( clazz.getDeclaredMethods(), true );
        try
        {
            try
            {
                method = clazz.getDeclaredMethod( methodName, new Class[] {
                        ServiceReference.class, Object.class } );
                method.invoke( instance, new Object[] { reference, service } );
            }
            catch ( NoSuchMethodException e )",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-06-20 18:58:00.0,,,no_permission,,,,,,,,,,,58901,,,Sat Feb 10 02:52:44 UTC 2007,,,,,,0|i0vzlz:,184742,,,,,,,,"20/Jun/06 16:46;peter@neubauer.se;Sorry for the spelling, should be

This does not work for inherited classes as the reflection just works for the current type. In order to be abel to define callback even in e.g. Abstract classes, one needs to go up the hierarchy in order to find these methods.

/peter ",20/Jun/06 18:58;marrs;Extended the method to keep searching superclasses until a valid callback method is found.,10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,
problem when component's state change,FELIX-81,12344600,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,clement.escoffier,clement.escoffier,19/Jun/06 19:40,04/Jul/06 22:24,14/Mar/19 02:47,20/Jun/06 18:44,,,,,,,,,,,,,,,iPOJO,,,,,,,0,,,,,,"When the component's state change, iPOJO loops on the handlers list and call the stateChanged method on each handler. But the order of call is the same than the handler starting order. 
A problem occurs  when the stopping lifecycle callback handler uses a service dependency, the service dependency handler is ""stopped"" before the lifecycle callback handler. So, the callback call the dependency, but the dependency manager does not maintain service list anymore (it is stopped) and return null.

Thie fix has two parts : 
1) modifiyng the internal handler order 
2) loop in reverse on the handler list in the setState method and stop method (ComponentManager class).",,,,,,,,,,,,,,,,,,,,19/Jun/06 19:57;clement.escoffier;patch.txt;https://issues.apache.org/jira/secure/attachment/12335619/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-06-20 18:44:04.0,,,no_permission,,,,,,,,,,,58902,,,Tue Jul 04 22:24:22 UTC 2006,,,,,,0|i0w1nb:,185072,,,,,,,,19/Jun/06 19:57;clement.escoffier;Patch fixing the handlers invocation order.,"20/Jun/06 18:44;rickhall;This is resolved after applying Clement's patch, so I am closing it.",04/Jul/06 22:24;clement.escoffier;Patch applied,,,,,,,,,,,,,,,,,,,,,,,,
"Problem when registering a servlet with ""/"" context",FELIX-54,12332355,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,walkerr,walkerr,walkerr,19/Apr/06 17:27,17/Aug/06 07:14,14/Mar/19 02:47,17/Aug/06 07:14,,,,,,,,,,,framework-0.8.0,,,,HTTP Service,,,,,,,0,,,,,,"Bug reported by Mikhail Kotelnikov with proposed solution:

I found a small bug in your code: when I tried to register a servlet with ""/"" context it does not work... The reason is that the method org.ungoverned.osgi.bundle.http.HttpServiceImpl#aliasWildcard(String) directly adds a jetty-search mask to the given alias - like this: return alias+""/*""; And with alias ""/"" it gives an incorrect mask - ""//*"".
The modified code is:
       private String aliasWildcard(String alias)
       {
           // add wilcard filter at the end of the alias to allow servlet to
           // get requests which include sub-paths
           return ""/"".equals(alias) ? ""/*"" : alias + ""/*"";
       }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,58929,,,Thu Aug 17 07:14:19 UTC 2006,,,,,,0|i0w1av:,185016,,,,,,,,17/Aug/06 07:14;walkerr;Patch applied as submitted,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling remove(dependency) on a service managed by the dependency manager fails under specific circumstances,FELIX-53,12331670,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,marrs,marrs,marrs,05/Apr/06 21:26,10/Feb/07 02:52,14/Mar/19 02:47,20/Apr/06 22:06,,,,,,,,,,,,,,,Dependency Manager,,,,,,,0,,,,,,"In ServiceImpl:

>>         else if ( getState() == ServiceMonitor.WAITING_FOR_REQUIRED )
>>         {
>>             // if we're waiting for required dependencies, then
>>             // we only need to stop tracking the dependency if it
>>             // too is required; this might trigger a state change

But! Contrary to my comments in the code I actually do not check if the  dependency is required, so that is an issue, because if it is an optional dependency and we're still waiting for the required dependencies, then this optional dependency will not have been started yet. That means we should not stop it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-10 02:52:42.173,,,no_permission,,,,,,,,,,,58930,,,Sat Feb 10 02:52:42 UTC 2007,,,,,,0|i1anv3:,270332,,,,,,,,20/Apr/06 22:06;marrs;Committed a fix for this problem (earlier).,10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,,
org.osgi.framework.version property returns 4.0 instead of 1.3,FELIX-51,12330742,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,marrs,marrs,marrs,27/Mar/06 23:26,10/Feb/07 02:52,14/Mar/19 02:47,27/Mar/06 23:49,,,,,,,,,,,,,,,Framework,,,,,,,0,,,,,,The org.osgi.framework.version property returns 4.0 instead of 1.3 for the version. The spec states it should be 1.3 (see 4.4.3 table 8).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-10 02:52:41.632,,,no_permission,,,,,,,,,,,58932,,,Sat Feb 10 02:52:41 UTC 2007,,,,,,0|i1anvb:,270333,,,,,,,,27/Mar/06 23:49;marrs;Changed the version number.,10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle names should conform to the spec and not contain spaces,FELIX-48,12330380,Bug,Closed,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,rickhall,marrs,marrs,17/Mar/06 19:24,10/Feb/07 02:52,14/Mar/19 02:47,24/May/06 16:52,,,,,,,,,,,,,,,Specification compliance,,,,,,,0,,,,,,"The OSGi specification (3.2.1.10) states that:
The Bundle-Name header defines a readable name for this bundle. This should be a short, human-readable name containing no spaces.

Currently, we do generate bundle names with spaces. Admittedly, this is done by many others too but I think we should stick to the specifications (even though ""should"" is not ""must"").",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-03-17 22:58:51.0,,,no_permission,,,,,,,,,,,58935,,,Sat Feb 10 02:52:41 UTC 2007,,,,,,0|i1anvr:,270335,,,,,,,,"17/Mar/06 22:58;rickhall;This issue is being raised within the OSGi Alliance to determine whether it makes sense to have a human-readable field, but disallow spaces. So, maybe the jury is still out on this. Perhaps this can be discussed on the osgi-dev@bundles.osgi.org mailing list.","24/May/06 16:52;rickhall;Future versions of the OSGi spec will remove the ""no space"" recommendation from the Bundle-Name header, so feel free to add spaces until your heart is content! :-)",10/Feb/07 02:52;rickhall;Bulk closing all of these resolved issues.,,,,,,,,,,,,,,,,,,,,,,,,
