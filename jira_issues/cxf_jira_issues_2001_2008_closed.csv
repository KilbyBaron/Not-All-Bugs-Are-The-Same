Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Description,Environment,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Outward issue link (Duplicate),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (dependent),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Severity),Custom field (Severity),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Test and Documentation Plan),Custom field (Testcase included),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
HTTP GET support doesn't work with Aegis Databinding,CXF-1471,12390865,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,dandiep,dandiep,12/Mar/08 17:51,11/Oct/10 14:44,14/Mar/19 02:27,31/Oct/09 22:08,2.0.4,,,,,,,2.3,,Aegis Databinding,JAX-WS Runtime,,,,2,"I get this error:

INFO: Interceptor has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: NO_MESSAGE_FOR_PART
	at org.apache.cxf.aegis.databinding.XMLStreamDataWriter.write(XMLStreamDataWriter.java:72)
	at org.apache.cxf.aegis.databinding.XMLStreamDataWriter.write(XMLStreamDataWriter.java:45)
	at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.writeParts(AbstractOutDatabindingInterceptor.java:93)
	at org.apache.cxf.interceptor.BareOutInterceptor.handleMessage(BareOutInterceptor.java:68)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:208)
	at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:74)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:208)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:77)

when calling this url:

http://localhost/EchoService/echo/echo/hello

On this service:

public class EchoService {
  public String echo(String string) { return string; }
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-12 18:06:22.478,,,no_permission,,,,,,,,,,,,,112269,,,Sat Oct 31 22:08:42 UTC 2009,,,,,,0|i14eqv:,233852,,,,,,,,"12/Mar/08 18:06;sergey_beryozkin;Aegis is indeed not supported with our JAX-RS impl just yet unless it's not JAX-RS which is what your're dealing with... 
In case it's JAX-RS you're trying Aegis with then we'd need to have a simple provider but I don't know what hints are available in the generated Aegis class.
Shall we introduce @Aegis annotation ? That would do just fine
",13/Mar/08 03:30;dandiep;I'm referring to JAX-WS services. I believe it was James who wrote a way which mapped URLs to operations for JAX-WS services.,"17/Oct/09 21:18;bmargulies;I don't understand the theory in which this is supposed to work in CXF at all. It sure isn't soap. I'll close this unless Dan is still interested enough to fill in more information.
","19/Oct/09 14:58;dandiep;Well, JAXB works for HTTP GET invocations when you have a SOAP binding set up. I believe that Aegis should as well. Not sure what the confusion is all about.","19/Oct/09 15:06;dkulp;
Issue #1 is the error message.    org.apache.cxf.interceptor.Fault: NO_MESSAGE_FOR_PART suggests a Message.properties file isn't being picked up or similar.   Thus, the real error message is probably hidden in there. 

What's completely bizzare is that this problem is occurring on the OUTGOING chain.   Thus, the invokation has succeeded.   At this point in the chain, there should be no difference between a GET and a POST.

","19/Oct/09 15:09;dkulp;
One more comment: this may already be fixed.   My first reaction was that this was an issue with the qualified elements.  JAX-WS/JAXB defaults to unqualified and Aegis defaults to qualified.    At one point, they URIMappingInterceptor that handles the GET requests in this case was always mapping into unqualified elements which is what I thought was this issue here until I saw the outgoing chain.    A little while ago, I update the URI stuff to properly look into the schema for the proper qnames and such to make sure the qualification is set correctly.   Thus, this might be fixed.   Would need to setup a quick testcase to try it.
",19/Oct/09 15:22;bmargulies;It's certainly news to me that you can invoke a JAX-WS soap service with a GET URL without uploading even a minimal envelope.,"19/Oct/09 15:26;dkulp;Benson:  it only works for some very simple uses cases (like primitive params).   Not used very often.   :-)
","31/Oct/09 19:16;bmargulies;This doesn't work, but it has nothing to do with Aegis.

URIMappingInterceptor has:

 if (!Boolean.TRUE.equals(message.getContextualProperty(NO_VALIDATE_PARTS))) {
                throw new Fault(new org.apache.cxf.common.i18n.Message(""NO_OPERATION_PATH"", LOG, opName,
                                                                       message.get(Message.PATH_INFO)));
            }

And NO_VALIDATE_PARTS is only on for a provider. So someone thinks that this is forbidden for full JAX-WS services.

Is this correct?

I have a nice test case all set up.","31/Oct/09 21:04;bmargulies;All the interceptors that put a BindingOperationInfo onto an exchange bail when presented with a GET. It also fails for Jaxb just as with Aegis as a result.
","31/Oct/09 22:08;bmargulies;I'm going to call it FIXED, since it passes the test I added. However, the example supplied isn't enough for Aegis+JAX-WS. You need an @WebMethod and an @WebParam.

if the original intent was to question Aegis+Simple, I guess I could add a test case for that, too.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE with Spring 2.5.2,CXF-1469,12390533,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,akakunin,akakunin,08/Mar/08 15:09,30/Apr/08 15:00,14/Mar/19 02:28,10/Mar/08 21:14,2.0.4,,,,,,,2.0.5,,Bus,,,,,0,"After upgrading project to use Spring 2.5.2 I've got NPE from CFX:

{{{
2008-03-08 18:01:16,503: Allocate exception for servlet CXFServlet
java.lang.NullPointerException
	at org.springframework.context.support.AbstractRefreshableConfigApplicationContext.setConfigLocations(AbstractRefreshableConfigApplicationContext.java:78)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:137)
	at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:68)
}}}

This happens since BusApplicationContext in it constructor passed null as configLocations param into parent ClassPathXmlApplicationContext, but - if you will see Spring Code - nulls is not allowed (there is assert on null)

",Spring Framework 2.5.2,,,,,,,,,,,CXF-1435,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112267,,,2008-03-08 15:09:19.0,,,,,,0|i1ac9r:,268454,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JBIWrapperOutInterceptor miss message type attribute for JBI binding,CXF-1468,12390405,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,07/Mar/08 02:44,30/Apr/08 14:57,14/Mar/19 02:28,07/Mar/08 03:30,,,,,,,,2.0.5,2.1,Integration,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112266,,,2008-03-07 02:44:01.0,,,,,,0|i1ac9z:,268455,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF Bug 1435 Not Resolved,CXF-1467,12390395,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,gotosleep,gotosleep,06/Mar/08 23:14,07/Mar/08 21:34,14/Mar/19 02:28,07/Mar/08 21:34,2.0.4,,,,,,,2.0.5,,Configuration,,,,,0,"Issue CXF-1434 claims that it is resolved in the latest build 2.0.4  We are still seeing it.  Using the latest CXF 2.04(downloaded from your site) and Spring 2.5.2.

Stack trace included below.

Thanks

Exception in thread ""Thread-3"" java.lang.NullPointerException
	at org.springframework.context.support.AbstractRefreshableConfigApplicationContext.setConfigLocations(AbstractRefreshableConfigApplicationContext.java:78)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:137)
	at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:68)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:84)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:65)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:54)
	at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:69)
	at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:106)
	at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:97)
	at org.apache.cxf.endpoint.AbstractEndpointFactory.getBus(AbstractEndpointFactory.java:73)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.initializeServiceFactory(AbstractWSDLBasedEndpointFactory.java:143)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:73)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:51)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:92)
	at com.monsanto.bpm.albpm.papiws.PAPIWSProcessEngine.createPapiWebService(PAPIWSProcessEngine.java:51)
	at com.monsanto.bpm.albpm.papiws.PAPIWSProcessEngine.start(PAPIWSProcessEngine.java:39)
	at com.monsanto.tcc.apollo.bpm.ApolloBPMPluginLifecycle$1.run(ApolloBPMPluginLifecycle.java:31)
	at java.lang.Thread.run(Thread.java:595)
",Linx SUse9 Apache Tomcat Java 1.5_11,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-07 18:44:56.878,,,no_permission,,,,,,,,,,,,,112265,,,Fri Mar 07 21:34:57 UTC 2008,,,,,,0|i0uxkv:,178581,,,,,,,,"07/Mar/08 18:44;dkulp;
CXF-1435 was mis-marked...  It should have been mark ""resolved for 2.0.5, not 2.0.4.

Dan
","07/Mar/08 18:57;gotosleep;Dan,

Thanks,  we will give it a shot.  When will 2.0.5 be official?

Thanks",07/Mar/08 20:20;gotosleep;It did not work using cxf-2.0.5-incubator-SNAPSHOT-jar.  Any other ideas??,"07/Mar/08 20:22;gotosleep;Reopening to get some resolution.  Still getting the same error using 2.0.5.

Thanks

D",07/Mar/08 20:29;dkulp;Is there a new stack trace (particularly new line numbers)?,"07/Mar/08 20:55;gotosleep;Looks like the same...

Exception in thread ""Thread-3"" java.lang.NullPointerException
	at org.springframework.context.support.AbstractRefreshableConfigApplicationContext.setConfigLocations(AbstractRefreshableConfigApplicationContext.java:78)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:137)
	at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:68)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:84)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:65)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:54)
	at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:69)
	at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:106)
	at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:97)
	at org.apache.cxf.endpoint.AbstractEndpointFactory.getBus(AbstractEndpointFactory.java:73)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.initializeServiceFactory(AbstractWSDLBasedEndpointFactory.java:143)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:73)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:51)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:92)
	at com.monsanto.bpm.albpm.papiws.PAPIWSProcessEngine.createPapiWebService(PAPIWSProcessEngine.java:51)
	at com.monsanto.bpm.albpm.papiws.PAPIWSProcessEngine.start(PAPIWSProcessEngine.java:39)
	at com.monsanto.tcc.apollo.bpm.ApolloBPMPluginLifecycle$1.run(ApolloBPMPluginLifecycle.java:31)
	at java.lang.Thread.run(Thread.java:595)
","07/Mar/08 21:02;dkulp;

Are you sure you have the LATEST 2.0.5 jar?   

The kicker is:
at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:68) 

Line 68 of BusApplicationContext with the latest code doesn't have any code. 
",07/Mar/08 21:34;gotosleep;Good catch Dan.  You the man.  We had the 2.0.5 From Feb. 6.  We got the March 6th and all is well.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when SOAPFault is not a Fault,CXF-1466,12390351,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,tal,tal,06/Mar/08 14:23,30/Apr/08 14:57,14/Mar/19 02:28,15/Apr/08 11:30,2.0.4,,,,,,,2.1,,JAX-WS Runtime,,,,,0,"Exception in thread ""main"" java.lang.ClassCastException: java.lang.NullPointerException
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:191)
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:124)

The code is:

                        SOAPFault soapFault = SOAPFactory.newInstance().createFault();
                        Fault fault = (Fault)exp;

(after modifying the code, the full exception was
Fetching WSDL from http://virtualvista.it-innovation.soton.ac.uk:8080/BREIN/VIMEnactorTestService?wsdl...
Exception in thread ""main"" java.lang.RuntimeException: java.lang.NullPointerException
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:195)
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:124)
...
Caused by: java.lang.NullPointerException
        at org.apache.cxf.ws.addressing.MAPAggregator.getActionBaseUri(MAPAggregator.java:432)
        at org.apache.cxf.ws.addressing.MAPAggregator.getActionUri(MAPAggregator.java:475)
        at org.apache.cxf.ws.addressing.MAPAggregator.assembleGeneric(MAPAggregator.java:391)
        at org.apache.cxf.ws.addressing.MAPAggregator.aggregate(MAPAggregator.java:359)
        at org.apache.cxf.ws.addressing.MAPAggregator.mediate(MAPAggregator.java:315)
        at org.apache.cxf.ws.addressing.MAPAggregator.handleMessage(MAPAggregator.java:137)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:208)
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:179)
        ... 2 more
)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-15 11:30:39.24,,,no_permission,,,,,,,,,,,,,112264,,,Tue Apr 15 11:30:39 UTC 2008,,,,,,0|i0v3zz:,179621,,,,,,,,"15/Apr/08 11:30;seanoc;Fixed, added check in DispatchImpl to ensure Exception was of type Fault.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2Java error when using <jaxb:serializable/> binding customization,CXF-1465,12390326,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,nzjess,nzjess,06/Mar/08 09:36,30/Apr/08 15:00,14/Mar/19 02:28,11/Mar/08 03:07,2.0.4,,,,,,,2.0.5,,,,,,,0,"WSDL2Java fails with a runtime exception when generating a JAXB client.  To reproduce this error, do the following:

1. Create a WSDL that uses an <import> to import its types from a separate XSD file (ie. as opposed to in-lining them in the WSDL itself).
2. Put the WSDL and XSD files somewhere in the filesystem under a directory with a name containing a space character.
3. Create a binding customization file that uses the <jaxb:serializable/> customization to cause all generated Java types to implement java.io.Serializable.
4. Invoke WSDL2Java to generate the client for the WSDL, passing the binding customization file via the -b option.

An error will be generated.  In this scenario, either leaving out the binding file or removing the space from the directory name will cause everything to work as expected.  The issue only occurs when both of these conditions are present.

Please refer to the following user-list thread for a complete discussion and some example data:

  http://www.nabble.com/WSDL2Java-error-when-using-%3Cjaxb%3Aserializable-%3E-binding-customization-to15786637.html

","JDK5, OS X, Eclipse/Ant",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,112263,,,2008-03-06 09:36:21.0,,,,,,0|i1aca7:,268456,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
xmlbinding error,CXF-1464,12390255,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,ceppelli,ceppelli,05/Mar/08 14:03,30/Apr/08 14:54,14/Mar/19 02:28,08/Apr/08 11:29,2.0.4,2.1,,,,,,2.0.6,2.1,Aegis Databinding,,,,,0,"I'm trying to use CXF as backed for a web base application (Flex). Cxf has to expose json over http  endpoint. The approach should be ""code first"" instead ""wsdl first"" for speeding up the development  process.

CXF has some problem with this (or maybe I was not able to run it properly), the problem is  related with the xmlbinding.","jdk1.5
Fedora 8",,,,,,,,,,,,,,,,05/Mar/08 14:05;ceppelli;ceppelli.cxf.bug.aegis.zip;https://issues.apache.org/jira/secure/attachment/12377170/ceppelli.cxf.bug.aegis.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-04-08 11:09:45.836,,,no_permission,,,,,,,,,,,,,112262,,,Tue Apr 08 13:36:29 UTC 2008,,,,,,0|i0v2hz:,179378,,,,,,,,05/Mar/08 14:05;ceppelli;mvn test,"08/Apr/08 11:09;bimargulies;This is really two problems. On, related to wrapping, Dan has fixed. The other, Bare messages, may not be fixable. I'm splitting it.","08/Apr/08 11:29;bmargulies;dan fixed 'wrapped', and bare can't work unless you annotate to supply parameter names to disambiguate the operations. (The infamous 'arg0' problem).","08/Apr/08 13:35;dkulp;
Just a note: I've got the wrapped fix working on the 2.0.x branch as well so this will be included in 2.0.6.

To expand on the what Benson alluded to:

In wrapped mode, the uses cases should all be working as the operation name gets serialized on the wire so we can figure out how to deserialize it on the other side.   All works well.


With bare mode, there are several problems:
1) All that ends up on the wire is something like <argo>Bug1</arg0>.   There isn't any information to help us determine if it's op2, op3, op5, or sayHi.   Thus, those cases probably won't work.

2) In the op4/op6 cases, there are two parameters.   An xml document can only have a single root.  Thus, the XML binding will automatically flip those over to a wrapped mode.   The SOAP binding will not since they can both live under the soap:body element.   However, we then run into the <arg0> issue above.

Dan



","08/Apr/08 13:36;dkulp;
Oh, one more comment:

MAJOR MAJOR MAJOR thanks for the maven based testcase.   That definitely helps with debugging as I can ""mvn eclipse:eclipse"" and import the project and start debugging immediately.    That's a big help.    :-)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2ws produces mystifying error when service attempts to use a Map with JAX-B,CXF-1463,12390221,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,bmargulies,bmargulies,05/Mar/08 00:38,12/Oct/09 20:45,14/Mar/19 02:28,10/Oct/09 18:46,2.1,,,,,,,2.2.4,,Tooling,,,,,1,"Step 1: build the current tip, including the distribution directory.

Step 2: apply the current build to itself, as follows.

I don't know what this error is trying to tell me.



bim-1330% $CXF_HOME/bin/java2ws -cp /home/benson/cxf/trunk/systests/target/test-classes org.apache.cxf.systest.aegis.AegisJaxWs
Error: org.apache.cxf.service.factory.ServiceConstructionException

JavaToWS Error: org.apache.cxf.service.factory.ServiceConstructionException

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-07 15:58:58.483,,,no_permission,,,,,,,,,,,,,112261,,,Sat Oct 10 18:46:34 UTC 2009,,,,,,0|i16vtz:,248289,,,,,,,,"07/Apr/08 15:58;seanoc;Looks to be an issue with IllegalAnnotationsException: 2 counts of IllegalAnnotationExceptions java.util.Map is an interface, and JAXB can't handle interfaces.

Need to add the -verbose switch to get a full stacktrace:


C:\ApacheCXF\trunk\systests\target\test-classes>java2ws -verbose org.apache.cxf.systest.aegis.AegisJaxWs
java2ws -verbose org.apache.cxf.systest.aegis.AegisJaxWs
java2ws - Apache CXF (incubator) 2.1-incubator-SNAPSHOT

Error: org.apache.cxf.service.factory.ServiceConstructionException

java.lang.RuntimeException: org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.frontend.AbstractServiceFactory.createService(AbstractServiceFactory.java:41)
        at org.apache.cxf.tools.java2wsdl.processor.JavaToWSDLProcessor.process(JavaToWSDLProcessor.java:128)
        at org.apache.cxf.tools.java2ws.JavaToWSContainer.processWSDL(JavaToWSContainer.java:101)
        at org.apache.cxf.tools.java2ws.JavaToWSContainer.execute(JavaToWSContainer.java:75)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
        at org.apache.cxf.tools.java2ws.JavaToWS.run(JavaToWS.java:74)
        at org.apache.cxf.tools.java2ws.JavaToWS.main(JavaToWS.java:42)
Caused by: org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:306)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:343)
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:512)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:392)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:180)
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:163)
        at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:79)
        at org.apache.cxf.frontend.AbstractServiceFactory.createService(AbstractServiceFactory.java:39)
        ... 8 more
Caused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 2 counts of IllegalAnnotationExceptions
java.util.Map is an interface, and JAXB can't handle interfaces.
        this problem is related to the following location:
                at java.util.Map
                at private java.util.Map org.apache.cxf.systest.aegis.jaxws_asm.GetItemsAsMapSpecifiedResponse._return
                at org.apache.cxf.systest.aegis.jaxws_asm.GetItemsAsMapSpecifiedResponse
java.util.Map does not have a no-arg default constructor.        this problem is related to the following location:
                at java.util.Map
                at private java.util.Map org.apache.cxf.systest.aegis.jaxws_asm.GetItemsAsMapSpecifiedResponse._return
                at org.apache.cxf.systest.aegis.jaxws_asm.GetItemsAsMapSpecifiedResponse

        at com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder.check(IllegalAnnotationsException.java:102)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:438)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:286)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:139)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:117)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:211)
        at javax.xml.bind.ContextFinder.find(ContextFinder.java:372)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:574)
        at org.apache.cxf.jaxb.JAXBDataBinding.createJAXBContext(JAXBDataBinding.java:523)
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:286)
        ... 15 more
JavaToWS Error: org.apache.cxf.service.factory.ServiceConstructionException
","19/Aug/08 07:11;hilal;please, resolve this isssue :)
urgently, need to use Map in WS","20/Aug/08 02:35;bmargulies;Hilal,

The issue here has nothing much to do with using Maps. If you want to use a map with JAX-B, you need a type adapter. If you use Aegis, it just works. This issue is complaining that we could have a better error message when you try to use a Map in JAX-B without a type adapter.
","10/Oct/09 18:46;chris@die-schneider.net;I just tried to generate a wsdl from a java service that contains a Map in one data class. 

public class Customer {
    Map<String, String> products;

    public Map<String, String> getProducts() {
        return products;
    }

    public void setProducts(Map<String, String> products) {
        this.products = products;
    }
}

The wsdl was generated without errors and contains the following:
<xs:complexType name=""customer"">
				<xs:sequence>
					<xs:element name=""products"">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""entry"">
									<xs:complexType>
										<xs:sequence>
											<xs:element minOccurs=""0"" name=""key"" type=""xs:string"" />
											<xs:element minOccurs=""0"" name=""value"" type=""xs:string"" />
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:complexType>

So I think this issue is solved. Please reopen if this is incorrect.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"wsld2java does not honor elementFormDefault=""qualified"" in XmlSchema annotation",CXF-1460,12389960,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,,karaznie,karaznie,01/Mar/08 14:24,30/Apr/08 14:57,14/Mar/19 02:28,05/Mar/08 15:32,2.0.3,2.0.4,,,,,,2.1,,Tooling,,,,,0,"java2wsdl does not honour elementFormDefault=""qualified"" attribute. Generated package-info.java does not have set attribute elementFormDefault=XmlNsForn.QUALIFIED.

See below example:

here is sample wsdl:

{code:xml}
<wsdl:definitions xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
        xmlns:tns=""http://www.example.org/loanap/""
        xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
        xmlns:loanapp=""http://www.example.org/loanap/types""
        xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""loanap""
        targetNamespace=""http://www.example.org/loanap/"">
        <wsdl:types>
                <xsd:schema
                        targetNamespace=""http://www.example.org/loanap/types""
                        elementFormDefault=""qualified"" attributeFormDefault=""unqualified"">
                        <xsd:element name=""aplication"">
                                <xsd:complexType>
                                        <xsd:sequence>
                                                <xsd:element name=""salary"" type=""xsd:decimal"" />
                                                <xsd:element name=""loan"" type=""xsd:decimal"" />
                                        </xsd:sequence>
                                </xsd:complexType>
                        </xsd:element>
                        <xsd:element name=""result"">
                                <xsd:complexType>
                                        <xsd:sequence>
                                                <xsd:element name=""commited"" type=""xsd:boolean"" />
                                                <xsd:element name=""amount"" type=""xsd:decimal"" />
                                        </xsd:sequence>
                                </xsd:complexType>
                        </xsd:element>
                </xsd:schema>
        </wsdl:types>
        <wsdl:message name=""applyRequest"">
                <wsdl:part element=""loanapp:aplication"" name=""parameters"" />
        </wsdl:message>
        <wsdl:message name=""applyResponse"">
                <wsdl:part element=""loanapp:result"" name=""parameters"" />
        </wsdl:message>
        <wsdl:portType name=""LoanService"">
                <wsdl:operation name=""apply"">
                        <wsdl:input message=""tns:applyRequest"" />
                        <wsdl:output message=""tns:applyResponse"" />
                </wsdl:operation>
        </wsdl:portType>
        <wsdl:binding name=""loanapSOAP"" type=""tns:LoanService"">
                <soap:binding style=""document""
                        transport=""http://schemas.xmlsoap.org/soap/http"" />
                <wsdl:operation name=""apply"">
                        <soap:operation
                                soapAction=""http://www.example.org/loanap/NewOperation"" />
                        <wsdl:input>
                                <soap:body use=""literal"" />
                        </wsdl:input>
                        <wsdl:output>
                                <soap:body use=""literal"" />
                        </wsdl:output>
                </wsdl:operation>
        </wsdl:binding>
        <wsdl:service name=""loanap"">
                <wsdl:port binding=""tns:loanapSOAP"" name=""LoanService"">
                        <soap:address
                                location=""http://www.somebank.com/services/loanservice"" />
                </wsdl:port>
        </wsdl:service>
</wsdl:definitions>
{code}

I use {code}wsdl2java loanapp.wsdl{code} to generate Java artefacts and got package-info.java as below:

{code}
@javax.xml.bind.annotation.XmlSchema(namespace = ""http://www.example.org/loanap/types"")
package org.example.loanap.types;
{code}

Note that, in above embedded XML Schema  I have {code}elementFormDefault=""qualified{code} but in above
package-info it is not reflected. 

When Metro stack is used I got what expected:

{code}wsimport -Xnocompile loanap.wsdl{code}

gives:

{code}
@javax.xml.bind.annotation.XmlSchema(namespace = ""http://www.example.org/loanap/types"", elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)
package org.example.loanap.types;
{code}

What's interesting. When I use jaxb 2.0.5 (which seems to be used in CXF 2.0.4) and xjc I got exactly the same code as wsimport. 

It seems that's CXF bug, rather than JAXB RI. Also I consider this as a serius show stopper, since CXF will produce XML instances which are not valid against above schema (i.e. unqualified).","Windows XP, Java Standard Edition 5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-03 16:50:06.095,,,no_permission,,,,,,,,,,,,,112259,,,Wed Mar 05 15:32:01 UTC 2008,,,,,,0|i0uxpj:,178602,,,,,,,,"03/Mar/08 16:50;dkulp;
Can you try with the 2.1 snapshots?   

With 2.0.4, we have to use the 2.0 jaxb-xjc despite using the 2.0.5 jaxb-impl due to issues with the TCK.  (Basically, code we generate with 2.0.4 MUST be runnable in the 2.0 version of the JAX-WS RI which uses JAXB 2.0.0.   The 2.0.5 xjc generates code that doesn't work the same with JAXB-2.0.0.  :-(     We did all kinds of tests and stuff to try and figure out what versions of jaxb 2.0.x that will actually work with the tck.

With 2.1, we are using 2.1.6 for jaxb-impl and jaxb-xjc so it probably works better.

Dan

","03/Mar/08 16:51;dkulp;
Actually, along the same line,  can you remove the jaxb-xjc-2.0.jar file from lib and add the 2.0.5 version to the classpath and try that?   If that works, then that is definitely the issue and there isn't anything we can do and still claim jax-ws compatibility.

Dan","03/Mar/08 20:09;karaznie;Yes, I've realised that everything is OK, when I switch xjc with jaxb-xjc-2.0.5.","05/Mar/08 15:32;dkulp;
I'm going to mark this ""resolved for 2.1"" as it's fixed in 2.1 due to the jaxb upgrade to 2.1.6 and it's unresolvable for 2.0.x due to TCK issues.   (and a workaround is available)   :-(

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAPFaultException thrown from @WebServiceProvider class is not correctly populated,CXF-1458,12389872,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,stevewu,stevewu,29/Feb/08 13:43,05/Oct/09 19:37,14/Mar/19 02:28,05/Oct/09 14:08,2.0.4,2.0.5,,,,,,2.1.6,,JAX-WS Runtime,,,,,0,"My issue is similar to cxf-1417. I downloaded cxf 2.0.5 (2-22-08) but it doesn't solved my problem.


@WebServiceProvider()
@ServiceMode(value = Service.Mode.PAYLOAD)

public class TestGreetingProvider
  implements Provider<DOMSource>
{
    @Resource
    private WebServiceContext context;
    //~ Constructors -------------------------------------------------------------------------------

    public TestGreetingProvider()
    {
    }

    //~ Methods ------------------------------------------------------------------------------------

    public DOMSource invoke(DOMSource request)
    {
        try
        {
            // do some thing
        }
        catch(Exception e)
        {
            
             SOAPFactory factory = SOAPFactory.newInstance();
             SOAPFault soapFault = factory.createFault();   
            
             soapFault.setFaultString(""Test Fault String ****"");

             Detail detail = soapFault.addDetail();
             detail = soapFault.getDetail();

             QName qName = new QName(""http://www.Hello.org/greeter"",""TestFault"",""ns"");
             DetailEntry de = detail.addDetailEntry(qName);            

             qName = new QName(""http://www.Hello.org/greeter"",""ErrorCode"",""ns"");
             SOAPElement errorElement = de.addChildElement(qName);
             errorElement.setTextContent(""errorcode"");   
                       
             throw new SOAPFaultException(soapFault);
        
        }
        // return DOMSource here
    }
}  

I am expecting the following fault message in the client:

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
    <soapenv:Body>
      <soapenv:Fault>       
        <faultstring>Test Fault String ****</faultstring>
        <detail>
          <ns:TestFault xmlns:ns=""http://www.Hello.org/greeter"">
            <ns:ErrorCode xmlns:ns=""http://www.Hello.org/greeter"">errorcode</ErrorCode>            
          </ns:TestFault>
        </detail>
      </soapenv:Fault>
    </soapenv:Body>
  </soapenv:Envelope>
  
  
But I got the following in the client when using cxf 2.0.4. NOTE: The detail section is missing. 

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
    <soapenv:Body>
      <soapenv:Fault>      
      <faultcode>soap:Server</faultcode> 
        <faultstring>Test Fault String ****</faultstring>        
      </soapenv:Fault>
    </soapenv:Body>
  </soapenv:Envelope>
  
  
If I use cxf 2.0.5(2-22-08) I didn't see any response in my TCPMonitor.  
","Windows XP, JDK1.5.0_12, Tomcat 5.5.25",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-11 02:23:51.436,,,no_permission,,,,,,,,,,,,,112258,,,Mon Oct 05 14:08:22 UTC 2009,,,,,,0|i1acan:,268458,,,,,,,,"11/Mar/08 02:23;dkulp;
We now have a systest that does this exact thing:

http://svn.apache.org/repos/asf/incubator/cxf/trunk/systests/src/test/java/org/apache/cxf/systest/provider/HWDOMSourcePayloadProvider.java

and that is passing.  

Any chance this could be retested with the latest snapshots?  If it still fails, I'll probably need a full reproduceable example since the tests created based on the above information pass fine.
","05/Oct/09 14:08;dkulp;
Resolving this as fixed since there is a test case that does this exact thing that passes.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-codegen-plugin misinterprets relative paths in pom.xml,CXF-1457,12389839,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jrw@pobox.com,jrw@pobox.com,29/Feb/08 00:33,07/Jul/08 16:45,14/Mar/19 02:28,12/Jun/08 17:34,2.0.3,,,,,,,2.0.7,2.1.1,Tooling,,,,,0,"When the codegen plugin is given a relative path to a WSDL file, it interprets the path relative to the current directory rather than the directory that contains the POM file.  The result is that the plugin will work correctly if Maven is invoked from the directory where the POM file is, but it will fail otherwise.  This causes problems in multi-module projects.  The problem can be worked around by adding ""${basedir}/"" to the WSDL path.  The POM fragment below demonstrates the problem:

      <plugin>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-codegen-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>wsdl2java</goal>
            </goals>
            <configuration>
              <wsdlOptions>
                <wsdlOption>
                  <!-- This relative path causes the problem! -->
                  <wsdl>target/wsdl/foo.wsdl</wsdl>
                </wsdlOption>
              </wsdlOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>","Maven version: 2.0.7
Java version: 1.5.0_12
OS name: ""linux"" version: ""2.6.9-1.681_fc3smp"" arch: ""i386""
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-04 14:13:36.078,,,no_permission,,,,,,,,,,,,,112257,,,Mon Jul 07 16:45:38 UTC 2008,,,,,,0|i1acav:,268459,,,,,,,,04/Jul/08 14:13;daveel;Do you know which revisions fixed this problem. I'm having the same issue with binding files specified as relative paths.,"07/Jul/08 16:45;dkulp;
That's because binding files are specified as ""extra args"" that we really make no attempt to parse and process.

I've updated the plugin to allow
<bindingFiles>
    <bindingFile>path/to/file.xjb</bindingFile>
</bindingFile>

To pull them out of the extraArgs and process them properly in the mojo.   

Ideally, we'd pull all the useful flags out of extraArgs.   extraArgs should be a last resort thing, not a primary thing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Investigate a more sensible set of default cipher suites,CXF-1456,12389787,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,tgebhardt,tgebhardt,28/Feb/08 15:13,30/Apr/08 15:00,14/Mar/19 02:28,03/Mar/08 19:53,2.0.4,,,,,,,2.0.5,,,,,,,0,"I've been working on upgrading an older XFire client to CXF and hit some problems connecting to a HTTPS endpoint.

The new CXF client kept failing with SSL handshake errors. After doing some research and comparisons to the working XFire client, I discovered that the handshake was failing because the cipher suite, SSL_RSA_WITH_3DES_EDE_CBC_SHA, was missing from the default cipher list in CXF. I had expected this to ""just work"" since my XFire client didn't do anything special with cipher suites. After adding SSL_RSA_WITH_3DES_EDE_CBC_SHA to the CXF client 's cipher suites list, the handshake worked fine.

According to Donal, 3DES_EDE_CBC_SHA is a commonly used and strong cipher suite. Perhaps it makes sense to add this and other sensible cipher suites to the default cipher suite list? If there is a  reason why it shouldn't be added then it would be helpful to add a note on the XFire to CXF upgrade document describing the differences in default cipher suites so that others won't face this same issue when upgrading clients.

For the original post to cxf-users and Donal's reply which offers some guidelines for choosing sensible default cipher suites, please see this:
http://www.nabble.com/upgrading-from-XFire---SSL-handshake-errors-td15725238.html

Failed handshake logs:

INFO: The cipher suites have been set to SSL_RSA_WITH_DES_CBC_SHA, SSL_DHE_RSA_WITH_DES_CBC_SHA, SSL_DHE_DSS_WITH_DES_CBC_SHA, SSL_RSA_EXPORT_WITH_RC4_40_MD5, SSL_RSA_EXPORT_WITH_DES40_CBC_SHA, SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA, SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA, SSL_RSA_WITH_NULL_MD5, SSL_RSA_WITH_NULL_SHA, SSL_DH_anon_WITH_DES_CBC_SHA, SSL_DH_anon_EXPORT_WITH_RC4_40_MD5, SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA, TLS_KRB5_WITH_DES_CBC_SHA, TLS_KRB5_WITH_DES_CBC_MD5, TLS_KRB5_EXPORT_WITH_RC4_40_SHA, TLS_KRB5_EXPORT_WITH_RC4_40_MD5, TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA, TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5.  
%% No cached client session
*** ClientHello, SSLv3
RandomCookie:  GMT: 1187298740 bytes = { 113, 45, 193, 158, 214, 231, 11, 225, 197, 38, 3, 179, 175, 26, 25, 234, 108, 241, 155, 106, 191, 62, 221, 65, 209, 8, 182, 48 }
Session ID:  {}
Cipher Suites: [SSL_RSA_WITH_DES_CBC_SHA, SSL_DHE_RSA_WITH_DES_CBC_SHA, SSL_DHE_DSS_WITH_DES_CBC_SHA, SSL_RSA_EXPORT_WITH_RC4_40_MD5, SSL_RSA_EXPORT_WITH_DES40_CBC_SHA, SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA, SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA, SSL_RSA_WITH_NULL_MD5, SSL_RSA_WITH_NULL_SHA, SSL_DH_anon_WITH_DES_CBC_SHA, SSL_DH_anon_EXPORT_WITH_RC4_40_MD5, SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA, TLS_KRB5_WITH_DES_CBC_SHA, TLS_KRB5_WITH_DES_CBC_MD5, TLS_KRB5_EXPORT_WITH_RC4_40_SHA, TLS_KRB5_EXPORT_WITH_RC4_40_MD5, TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA, TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5]
Compression Methods:  { 0 }
***
WRITE: SSLv3 Handshake, length = 79
WRITE: SSLv2 client hello message, length = 101
READ: SSLv3 Alert, length = 2
RECV TLSv1 ALERT:  fatal, handshake_failure
called closeSocket()
handling exception: javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure
Feb 27, 2008 2:49:08 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
org.apache.cxf.binding.soap.SoapFault: Error writing to XMLStreamWriter.
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.writeSoapEnvelopeStart(SoapOutInterceptor.java:136)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:76)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:57)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:208)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:276)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:222)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
        at $Proxy48.localAuthenticationQuery(Unknown Source) ...
Caused by: javax.xml.stream.XMLStreamException
        at com.sun.xml.stream.writers.XMLStreamWriterImpl.writeStartElement(XMLStreamWriterImpl.java:1210)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.writeSoapEnvelopeStart(SoapOutInterceptor.java:95)
        ... 16 more

","Ubuntu Linux 7.10, Sun JRE 1.5.0_13-b05, standard JCE jurisdiction policy ('unlimited' policy not installed)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-03 03:57:00.766,,,no_permission,,,,,,,,,,,,,112256,,,Mon Mar 03 15:49:45 UTC 2008,,,,,,0|i1acb3:,268460,,,,,,,,"03/Mar/08 03:57;dkulp;
This is completely cause by the filter list in SSLUtils:
    /**
     * By default, only include export-compatible ciphersuites.
     */
    private static final List<String> DEFAULT_CIPHERSUITE_FILTERS_INCLUDE =
        Arrays.asList(new String[] {"".*_EXPORT_.*"",
                                    "".*_EXPORT1024_.*"",
                                    "".*_WITH_DES_.*"",
                                    "".*_WITH_NULL_.*""});

Does ANYONE know why this isn't just "".*""?   We don't ship any implementation of the algorithms (since we don't ship bouncycastle).  We just use whatever they have installed as their jsse provider.  Thus, I don't see why that filter should be set that way.    Thouhgts?



","03/Mar/08 15:49;dkulp;
I've chatted with a couple of our security folks and the suggestion they came up with is to set the default ""include"" list to "".*"" (aka: include everything found from the jsse provider), but then add a default exclude of  {"".*NULL.*"","".*anon.*""} to exclude the anonymous and null cypher suites that really provide absolutely no security.   

I'll start working on that.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis + SAAJ leads to namespace complaint.,CXF-1448,12389323,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,chengas123,chengas123,22/Feb/08 14:59,30/Apr/08 15:00,14/Mar/19 02:28,04/Mar/08 21:16,2.0.4,,,,,,,2.0.5,,Aegis Databinding,,,,,0,"Hi,
I am getting ""Error initializing parameters for operation"" from Aegis.  I set it up through Spring.  My classes mostly just use String, so I'm not sure what the problem is.

Thanks,
Ben 
",I am running WebLogic 9.2.2 on Windows XP,,,,,,,,,,,,,,,,24/Feb/08 18:41;chengas123;AuthService.java;https://issues.apache.org/jira/secure/attachment/12376357/AuthService.java,24/Feb/08 18:40;chengas123;AuthServiceImpl.java;https://issues.apache.org/jira/secure/attachment/12376356/AuthServiceImpl.java,22/Feb/08 15:09;chengas123;AuthServiceImpl.java;https://issues.apache.org/jira/secure/attachment/12376234/AuthServiceImpl.java,23/Feb/08 16:57;chengas123;Employee.java;https://issues.apache.org/jira/secure/attachment/12376312/Employee.java,22/Feb/08 15:08;chengas123;Employee.java;https://issues.apache.org/jira/secure/attachment/12376233/Employee.java,22/Feb/08 15:04;chengas123;cxf.xml;https://issues.apache.org/jira/secure/attachment/12376231/cxf.xml,28/Feb/08 18:23;chengas123;jboss.log;https://issues.apache.org/jira/secure/attachment/12376751/jboss.log,28/Feb/08 18:23;chengas123;junit.log;https://issues.apache.org/jira/secure/attachment/12376752/junit.log,22/Feb/08 15:05;chengas123;stackTrace.log;https://issues.apache.org/jira/secure/attachment/12376232/stackTrace.log,27/Feb/08 19:53;chengas123;stackTraceAegisWSSecurity.log;https://issues.apache.org/jira/secure/attachment/12376664/stackTraceAegisWSSecurity.log,23/Feb/08 20:16;chengas123;stackTraceWithSetCommentedOut.log;https://issues.apache.org/jira/secure/attachment/12376318/stackTraceWithSetCommentedOut.log,11.0,,,,,,,,,,,,,,,,,,,2008-02-23 16:23:13.024,,,no_permission,,,,,,,,,,,,,112250,,,Thu Apr 10 21:57:01 UTC 2008,,,,,,0|i1accf:,268466,,,,,,,,22/Feb/08 15:04;chengas123;cxf.xml - The server's Spring configuration file,"22/Feb/08 15:08;chengas123;My main bean class.  It contains a few other custom classes, which only contain Strings.",22/Feb/08 15:10;chengas123;I do not have an aegis.xml file as it is my understanding that is not needed for simple classes.,"23/Feb/08 16:23;bmargulies;OK, I just want to make sure that I had all the details.
","23/Feb/08 16:32;bmargulies;This is going to turn out to have something to do with the Set<> in Employee, I bet.
","23/Feb/08 16:57;chengas123;I thought I'd confirm your hypothesis.  Unfortunately, that's not the case because this version of my class is throwing the same error.","23/Feb/08 17:39;bmargulies;I see your problem. You need a .aegis.xml file to tell Aegis what's inside your raw 'Set' object.

Or you need to declare it as Set<Something>

Here's an example ...

<mappings>
	<mapping>
		<method name=""getUnannotatedStrings"">
			<return-type name=""UnannotatedStringCollection"" componentType=""java.lang.String""/>
		</method>
	</mapping>
</mappings>
","23/Feb/08 17:48;bmargulies;I did make a fix. There was a bug that threw away the explanatory error message you should have received, and I fixed that.
",23/Feb/08 18:02;chengas123;I don't think the problem is anything to do with the Set because I commented out the Set and still got the same error.,"23/Feb/08 18:31;bimargulies@gmail.com;Which set? The naked set or the one in employee? It's the naked set which
causes the problem.

Humor me. Add a .aegis.xml file to specify the content type of your set.
It's not supposed to work without it.
","23/Feb/08 20:16;chengas123;Oh yes.  Quite right.  I totally forgot about the naked Set for a moment.
I commented that one out too and am getting a new error now:
""java.lang.IllegalArgumentException: The uri may not be theempty string.""

I appreciate your help.  I've had a few people asking about implementing Aegis on my blog (http://www.lumidant.com/blog/web-services-tutorial-with-apache-cxf/) and think it will be good to get a working example to share with the community.

Thanks so much,
Ben
","24/Feb/08 15:46;bmargulies;OK, then, how about a backtrace for that? Your class is really boring without the Set, so I could use some more traction.
","24/Feb/08 15:46;bmargulies;Sorry, I see you added it. What operation were you running when it produced that backtrace?",24/Feb/08 17:36;chengas123;It happened when the client ran getEmployeeByGid,"24/Feb/08 18:12;bmargulies;This has something to do with namespaces.  Are there any snails (@) on you AuthService interface?

It would obviously be most efficient if you could attach a complete (non)working example, but I'll settle for your entire garden of annotations.
","24/Feb/08 18:42;chengas123;Ok.  I attached the interface and implementation.  There are a few annotations, but they're really just the ones specified in the CXF docs.","24/Feb/08 18:43;bmargulies;No snails at all! OK, I'll set up a test case and see if I can make it whimper for me. But first I need to go take a walk.

BTW, Aegis has historically gotten a lot more exercise with the 'Simple' front end than with JAX-WS. You might find that you get off the ground faster while  you wait for me or whomever to get to the bottom of this charming muddle.
","24/Feb/08 20:14;bmargulies;Staring at your backtrace, I see something. I actually see a couple of things.

The exception is being thrown by a weblogic class, which is complaining that you can't get a prefix for an empty namespace. I'm not sure that they are correct.

Still, I also can't repro the empty namespace. When I breakpoint in the ElementWriter, we've always got one. I don't see any reason why I should have any more namespaces than you have if, indeed, you have no .aegis.xml files.

Meanwhile, it also looks to me as if you have the org.apache.cxf.aegis.databinding.AegisServiceConfiguration on your server and not on your client. This can lead to namespace mismatches, as all it does is add / characters to default namespaces. I recommend not using it at all, but if  you must, use it on both ends.

Are you willing to set up a CXF build at set a breakpoint? Or to download a 2.1 snapshot? I'm debugging against the 2.1 trunk.

","24/Feb/08 20:26;bmargulies;It is also hypothetically possible that your password callback has something to do with this. Please try turning it off just to exclude that possibility.

","24/Feb/08 21:15;bmargulies;I cannot repro this in the 2.0.x branch or the 2.1 branch. 

Possibilities:

1: related to the password callback, somehow (I don't believe it).
2: related to weblogic
3: I'm missing something.

I invite you to cook up a version of this that runs completely outside of weblogic. I particularly invite you to checkout a tree and try to modify org.apache.cxf.systest.aegis.AegisJaxWsTest.java until it fails. Or at least have a look and see if you can see in what respect your code differs from my test case.
","25/Feb/08 01:35;chengas123;I have ruled out the password callback.  It is still broken with that taken out. 
It could be WebLogic (free download at http://commerce.bea.com/showproduct.jsp?family=WLS&major=10&minor=1) since it has already caused me numerous headaches with CXF.  
I will investigate more tomorrow.","25/Feb/08 02:09;bmargulies;It's not hard to get out of weblogic for a test. You can follow the pattern of CXF's unit tests without much trouble. or you could just try to deploy in some harmless alternative like Jetty, at least for a comparison.
","25/Feb/08 18:27;chengas123;I got this up and running on JBoss.  It's better than WebLogic in that I don't get the ""The uri may not be theempty string."" error, but doesn't work completely yet.  I get back my employee, but when I call employee.getLastName() in my jUnit test it returns null.  Works okay on both JBoss and WebLogic without Aegis.
You said you suggested not using the AegisServiceConfiguration.  If I take that out I can still use the Aegis databinding without any problems, correct?  (I tried taking it out and it didn't affect either JBoss or WebLogic)  I'm afraid I don't know much about Aegis, and just took this from the CXF docs.","25/Feb/08 18:50;bmargulies;If you read what I just added to confluence, you'll see that AegisServiceConfiguration changes the rules for mapping from packages to URLs. You never \have/ to use it unless you are trying to be compatible with an XFire 'other end'. If you \do/ use it, you must use it on \both/ ends. I bet you only have it on one end, because the doc (which I fixed yesterday) essentially led you to do so.
","25/Feb/08 20:13;chengas123;Thanks Benson.  The docs are much clearer now and I have updated my Spring file to match your example.  You have been a real help.  The portion of the Spring file on Confluence that you commented is in there twice, so one of them can probably be removed.
It appears the problem of ""The uri may not be theempty string."" does happen only on WebLogic.

JBoss is returning null last name for the employee, but I can see in the logs that it is being transmitted.  Maybe this is a namespace issue?

Payload with Aegis: <soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><ns1:getEmployeeByGidResponse xmlns:ns1=""http://service.auth.sd.sherwin.com/""><return><ns2:department xmlns:ns2=""http://bean.auth.sd.sherwin.com"" xmlns:ns3=""http://www.w3.org/2001/XMLSchema-instance"" ns3:nil=""true"" /><ns2:domain xmlns:ns2=""http://bean.auth.sd.sherwin.com"" xmlns:ns3=""http://www.w3.org/2001/XMLSchema-instance"" ns3:nil=""true"" /><ns2:eid xmlns:ns2=""http://bean.auth.sd.sherwin.com"">411990625</ns2:eid><ns2:email xmlns:ns2=""http://bean.auth.sd.sherwin.com"">benjamin.j.mccann@sherwin.com</ns2:email><ns2:firstName xmlns:ns2=""http://bean.auth.sd.sherwin.com"">Benjamin</ns2:firstName><ns2:gid xmlns:ns2=""http://bean.auth.sd.sherwin.com"">0223938</ns2:gid><ns2:lastName xmlns:ns2=""http://bean.auth.sd.sherwin.com"">McCann</ns2:lastName><ns2:middleInitial xmlns:ns2=""http://bean.auth.sd.sherwin.com"">J</ns2:middleInitial><ns2:name xmlns:ns2=""http://bean.auth.sd.sherwin.com"">Benjamin J McCann</ns2:name><ns2:nickName xmlns:ns2=""http://bean.auth.sd.sherwin.com"" xmlns:ns3=""http://www.w3.org/2001/XMLSchema-instance"" ns3:nil=""true"" /><ns2:userId xmlns:ns2=""http://bean.auth.sd.sherwin.com"">BJM733</ns2:userId></return></ns1:getEmployeeByGidResponse></soap:Body></soap:Envelope>

Payload without Aegis: <soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><ns1:getEmployeeByGidResponse xmlns:ns1=""http://service.auth.sd.sherwin.com/""><return><eid>411990625</eid><email>benjamin.j.mccann@sherwin.com</email><firstName>Benjamin</firstName><gid>0223938</gid><lastName>McCann</lastName><middleInitial>J</middleInitial><userId>BJM733</userId></return></ns1:getEmployeeByGidResponse></soap:Body></soap:Envelope>
","25/Feb/08 20:27;bmargulies;Just the last name? The rest of the employee is fine? 

I'll have a look around tonight.","25/Feb/08 21:07;chengas123;No.  Sorry, I should have been clearer.  All the properties I have looked at seem to be null: first name, last name, gid.   However, the employee itself is not null because if I print it out I get com.sherwin.sd.auth.bean.Employee@dc4c81","26/Feb/08 00:46;bmargulies;Could you humor me and turn off both of your interceptors?

","26/Feb/08 01:12;bmargulies;I've further updated the doc to stop pushing people to use JAX-WS when the simple front end would be, well, simpler. You could also try that.
","26/Feb/08 01:13;bmargulies;I am also getting curious about your client setup, if you stick with JAX-WS.
","26/Feb/08 18:09;dkulp;
Ben,

From those soap  messages, this looks like a qualification issue.   JAX-WS+JAXB, by default, generates unqualified schemas.   Thus, the elements in the messages are not namespace qualified.   

Aegis, on the other hand ALWAYS expects and generates QUALIFIED schemas.   Thus, for the Aegis version, there are namespaces there. 


For Aegis, it will always only deal with qualified.   There isn't a way to control that right now.   For jaxb, the easiest way to flip it to using qualified is to add package-info.java files in all the packages that have jaxb beans that contains something like:

@javax.xml.bind.annotation.XmlSchema(
        namespace = ""http://annuaire.ciss.lu"", 
     elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)
package lu.ciss.annuaire;","26/Feb/08 18:32;chengas123;I tried using the simple front end, but there is something else missing from the docs.  I'm getting: 'The prefeix ""simple"" for element ""simple:server"" is not bound'.
","27/Feb/08 19:53;chengas123;I found the simple server xmlns and added that to get a bit further, but it looks like I can't have security on that, so I went back to the JAX-WS and got that working now!  
I guess I didn't realize that Aegis would have to be implemented on both ends, though it makes sense.  And I'm sure JAXB could probably be used on one end still, but that seems like it's be extra work and I don't have any reason to.
Not out of the woods yet though!   If I try using WS-Security with Aegis I get an error, which I am attaching the stack trace for.","27/Feb/08 20:54;bmargulies;To use JAXB on the client, you have to:

1) Stand up the server with Aegis.
2) Pull wsdl using the ?wsdl URL. In 2.1 you can do it with java2ws.
3) Use wsdl2java to build your client.
","27/Feb/08 21:17;chengas123;Alright, I suppose that's good to know, but I'm fine using Aegis.  It seems to me to be much easier.  
Aegis and WS-Security should function together, correct?  I just have to figure out why SAAJ is giving me: Error at Line:0 Prefix [ns2] used without binding it to a namespace URI","28/Feb/08 16:27;bmargulies;Ben,

Far and away, it would work best if you could produce a bounded, repro of your issue using the same components that we use.

In particular, Stax and not BEA for XML processing.

If you really can't do that, you can turn on full logging, and I can try to make some sense of the situation.

I'm sorry to disappoint, but I don't think that any of us have the bandwidth to set up BEA components and make test cases.

If it's any consolation, before I was a committer I spent many happy hours turning mushy problems into small test cases shaped like CXF unit tests.

-benson
","28/Feb/08 16:50;chengas123;Sure Benson.  I understand.
However, I'm having the same problem using Aegis and WS-Security together on JBoss as well with SAAJ giving me: Error at Line:0 Prefix [ns2] used without binding it to a namespace URI","28/Feb/08 17:15;dkulp;Ben,

I sent a note to Benson that described some extra stuff that would be useful to help debug this.   Basically:

1) Can you add the Logging interceptor to the servers side in chain?  (client side chains would be nice too)  If we can see the faulty soap message, we can then at least tell if its the client sending a bad message or the server having problems parsing it.

2) On the server side, could you NOT add the ws-security stuff and just add the SAAJInInterceptor and see if the problem remains.  The stack trace implies that it should still be problematic.   This plus the soap message would be a huge step in helping to debug it as it removes the ws-security complexities.

As Benson said, though, a full test case in a nice zip with either an ant build.xml or maven pom (can use jetty:run or something) that shows the issue with a simple war in tomcat or standalone would be a HUGE help.   Once we have a simple, completely reproducable test case, these fixes are NORMALLY fairly quick to fix.   It's creating the test case that's the hard part as we don't know exactly what you are doing, how you have things configured, etc...

Thanks!","28/Feb/08 18:12;bmargulies;OK, well, can I have, at least, (a) a backtrace from inside JBoss, and (b) XML messages from the logging feature?
",28/Feb/08 18:24;chengas123;Sure.  See jboss.log and junit.log.  Hopefully they will provide what you need.,"28/Feb/08 18:28;dkulp;<ns1:getEmployeeByGid xmlns:ns1=""http://service.auth.sd.sherwin.com/"">
    <ns2:gid>0223938</ns2:gid>
    <ns2:appLookupKey>sos</ns2:appLookupKey>
</ns1:getEmployeeByGid>

Well, what do you know.   Definitely a bug.   No decl for ns2.      This seems to be a client side thing while writing the request.



",28/Feb/08 21:37;chengas123;Test case sent to bimargulies & dkulp @ apache  (Too big to upload),28/Feb/08 21:44;chengas123;Email rejected as spam (I'm not sure who's side).  Do you have another address I could try send to?,"28/Feb/08 22:05;dkulp;
You can send it directly to me at dan at dankulp.com","29/Feb/08 16:01;dkulp;
It's a bug in the Aegis ElementWriter.writeStartElement code.   It's not checking to see if the ""namespace"" is empty before deciding on the prefix to use.   Thus, right now, it ends up calling:

writer.writeStartElement(""ns2"", ""gui"", """");

Woodstox and the other XMLStreamWriters seem to ignore the prefix if the namespace is empty like that.  The SAAJ DOM doesn't do you end up with <ns2:gid> instead of just <gid>

I've fixed that in the writer.

",04/Mar/08 21:08;bmargulies;Dan was last seen in the neighborhood of the latest aspect of this.,"10/Apr/08 21:57;wliaw;I still get
  java.lang.IllegalArgumentException: The uri may not be theempty string.
in WebLogic. And I found

The fix is not checking for empty namespace in writeStartElement. It is better to replace
    if (namespace != null) {
by
    if (namespace != null && namespace.length > 0) {
"
null pointer in java2wsld,CXF-1446,12389268,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,sbridges,sbridges,22/Feb/08 00:00,30/Apr/08 15:00,14/Mar/19 02:28,22/Feb/08 18:09,2.0.4,,,,,,,2.0.5,,Tooling,,,,,0,"The default output directory lookup for java2wsdl is not optimal.

If I have a web interface that looks like,

@WebService(name=""service"",
    targetNamespace=""http:\\\\soap.example.com"",
    wsdlLocation=""http:\\\\soap.example.com\trinityService?wsdl"")
public interface Example {


And run java2wsdl without the -d param, I get an exception,

java.lang.NullPointerException
	at java.io.File.<init>(File.java:194)
	at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor.getOutputDir(JavaToProcessor.java:196)
	at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor.process(JavaToProcessor.java:95)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDLContainer.execute(JavaToWSDLContainer.java:58)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDL.run(JavaToWSDL.java:74)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDL.main(JavaToWSDL.java:42)
	at t.Run.main(Run.java:7)
JavaToWSDL Error : null

org.apache.cxf.tools.common.ToolException
	at org.apache.cxf.tools.java2wsdl.JavaToWSDLContainer.execute(JavaToWSDLContainer.java:75)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDL.run(JavaToWSDL.java:74)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDL.main(JavaToWSDL.java:42)
	at t.Run.main(Run.java:7)


This is caused by JavaToProcessor,

    protected File getOutputDir(File wsdlLocation) {
        String dir = (String)context.get(ToolConstants.CFG_OUTPUTDIR);
        if (dir == null) {
            if (wsdlLocation == null) {
                dir = ""./"";
            } else {
                dir = wsdlLocation.getParent();
            }
        }
        return new File(dir);
    }

dir is null, since no output dir was specified.  The wsdl location param is a File with path, ""http:\\soap.example.com	service?wsdl"", and this has no valid parent.

I would not expect the wsld location specified in @WebService to be a valid output directory for java2wsdl.  wsdl location will usually be an http url.",ubuntu linux,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112249,,,2008-02-22 00:00:45.0,,,,,,0|i1accv:,268468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing repository definition,CXF-1445,12389208,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,sauthieg,sauthieg,21/Feb/08 12:54,30/Apr/08 14:54,14/Mar/19 02:28,21/Apr/08 19:40,2.0.4,,,,,,,2.0.6,,Build system,,,,,0,"I wanted to port to Maven our Easybeans/CXF extension.
So I've added a dependency on cxf-api and cxf-rt-transports-http:

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>2.0.4-incubating</version>
    </dependency>

In my POM, I've got 3 repositories (ow2, ow2-snapshots and m2-apache-incubating).

But I've got a maven transitive dependency error:

[INFO] Failed to resolve artifact.

Missing:
----------
1) com.sun.xml.bind:jaxb-impl:jar:2.0.5

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=com.sun.xml.bind -DartifactId=jaxb-impl \
          -Dversion=2.0.5 -Dpackaging=jar -Dfile=/path/to/file

  Path to dependency: 
  	1) org.ow2.easybeans.extensions:easybeans-cxf-extension:jar:1.0.0.RC3-SNAPSHOT
  	2) org.apache.cxf:cxf-rt-transports-http:jar:2.0.4-incubator
  	3) org.apache.cxf:cxf-rt-core:jar:2.0.4-incubator
  	4) com.sun.xml.bind:jaxb-impl:jar:2.0.5

----------
1 required artifact is missing.

AFAIK, the latests JAXB artifacts are not in the  maven2-repository.dev.java.net (http://download.java.net/maven/2) repository but in a maven1 repository:
http://download.java.net/maven/1.

As a workaround, I've added this repository definition in my own POM, but I think this legacy repository should be declared in the CXF POM.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-21 19:40:43.897,,,no_permission,,,,,,,,,,,,,112248,,,Mon Apr 21 19:40:43 UTC 2008,,,,,,0|i1acd3:,268469,,,,,,,,"21/Apr/08 19:40;dkulp;
java.net is now in the top level pom.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JBIOutWrapperInterceptor fails to find objects sequentially ,CXF-1444,12389145,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,edellnolan,edellnolan,20/Feb/08 18:17,30/Apr/08 15:00,14/Mar/19 02:28,20/Feb/08 19:04,2.0.2,,,,,,,2.0.5,,Integration,,,,,0,"I have been trying to write a use case using java first and I have deployed my service provider into servicemix and run my consumer externally. 

From debugging the code it seems that the HolderOutInterceptor inserts the objects into an ArrayList based on the part index - which means it doesn't necessarily put the items in sequential order into the array. 

and it reads them back based on the part index also. 

As I am trying to integrate with servicemix it will use the JBIWrapperOutInterceptor.java which then attempts to get the objects from the List class in sequential order and it will fail to find any parts after the first element as it may not necessarily have put them in order.

Is there a reason why cxf adds the objects in based on the part index ?

I have attached a patch with the file updated and my use case now works. 

thanks, Edell.
",,,,,,,,,,,,,,,,,20/Feb/08 18:20;edellnolan;jbiOutWrapperInterceptor.patch;https://issues.apache.org/jira/secure/attachment/12376044/jbiOutWrapperInterceptor.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112247,,,2008-02-20 18:17:05.0,,,,,,0|i1acdb:,268470,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2js should protect itself from spaces in CLASSPATH,CXF-1443,12389067,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,bmargulies,dmurga,dmurga,19/Feb/08 22:53,30/Apr/08 14:57,14/Mar/19 02:28,26/Feb/08 21:04,2.1,,,,,,,2.1,,WS-* Components,,,,,0,"cxf-2.1/bin/wsdl2js references CLASSPATH.  If the directories on CLASSPATH contain spaces (e.g., ""Program Files"") this gives cygiwn fits.  We (Basis Technology) may work around by unsetting CLASSPATH in our build env.",cygwin,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-20 14:14:52.049,,,no_permission,,,,,,,,,,,,,112246,,,Tue Feb 26 21:04:52 UTC 2008,,,,,,0|i1acdj:,268471,,,,,,,,"20/Feb/08 14:14;dkulp;Not having a windows box (let alone cygwin), I'm probably not going to be too helpful, but here are some things to try:


1)  Change the lines:
cxf_classpath=`cygpath --$format ""${cxf_jar}""`
  if [ ! -z ""${CLASSPATH}"" ]; then
    cxf_classpath=${cxf_classpath}\;`cygpath --$format --path ""${CLASSPATH}""`
  fi

to

  if [ ! -z ""${CLASSPATH}"" ]; then
    cxf_classpath=`cygpath --$format --path ""${cxf_jar};${CLASSPATH}""`
  else
    cxf_classpath=`cygpath --$format ""${cxf_jar}""`    
  fi

2) Change the java invoke line to:

$JAVA_HOME/bin/java -cp ""${cxf_classpath}""  -Djava.util........

If any of that helps, let us know and we can make the changes in all the scripts.","20/Feb/08 18:38;bmargulies;I had forgotten that I am the perpetrator of all the cygwin support. 

I'll assign this to me and find a windows box. I'm no longer sitting in front of one all the time.
","26/Feb/08 21:04;bmargulies;I think this was a simple matter of a very few missing ""'s.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clients only handle a single Session cookie,CXF-1442,12389052,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,19/Feb/08 18:43,30/Apr/08 15:00,14/Mar/19 02:28,19/Feb/08 18:43,2.0.4,,,,,,,2.0.5,,Transports,,,,,0,"
HTTP clients only properly process a single ""Set-Cookie"" header so if there are multiple cookies, they are lost and not sent back on subsequent requests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112245,,,2008-02-19 18:43:01.0,,,,,,0|i0v2c7:,179352,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2Java generates NPE for certain WSDL,CXF-1439,12388970,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,gmazza,gmazza,19/Feb/08 05:32,30/Apr/08 15:00,14/Mar/19 02:28,22/Feb/08 18:25,2.0.4,,,,,,,2.0.5,,Tooling,,,,,0,"The attached WSDL file is a *severely* truncated version (95%+ gone) of the Amazon WSDL and a binding file in which I turn on/off wrapper style.  It works fine with GlassFish Metro--generating wrapper and non-wrapper style.

However, CXF returns an NPE if I have an <enableWrapperStyle/> property listed in the bindings file (regardless of whether it is set to true or false.)  If I comment out this <eWS/> tag, wsdl2java runs normally without error.  The command I am using to run this is ""wsdl2java -b bindings.xml AWSECommerceService2.wsdl.""

I don't believe we can generalize the problem to <eWS/> not working at all because I have been able to get this property to work with other WSDLs.

If I have time later I can look at this further myself.
",,,,,,,,,,,,,,,,,19/Feb/08 05:34;gmazza;AWSECommerceService2.wsdl;https://issues.apache.org/jira/secure/attachment/12375892/AWSECommerceService2.wsdl,19/Feb/08 05:33;gmazza;bindings.xml;https://issues.apache.org/jira/secure/attachment/12375891/bindings.xml,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-02-22 18:25:19.865,,,no_permission,,Moderate,,,,,,,,,,,112242,,,Fri Feb 22 18:25:19 UTC 2008,,,,,,0|i1ace7:,268474,,,,,,,,19/Feb/08 05:33;gmazza;bindings file,19/Feb/08 05:34;gmazza;WSDL file.,"22/Feb/08 18:25;dkulp;
This is actually resolved in some stuff I did yesterday to simplify some code.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AttachmentDeserializer is leaving behind temp files,CXF-1438,12388946,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,piepera,piepera,18/Feb/08 21:42,30/Apr/08 15:00,14/Mar/19 02:28,20/Feb/08 14:38,2.0.4,,,,,,,2.0.5,,,,,,,0,"AttachmentDeserializer appears to be leaving behind temp files. Every time ""cache"" is called, it creates a new temp file with IOUtils.copy (line 228). This file is never deleted. It looks like there's a hook so it should get deleted if the inputStream is closed, but the inputStream is never closed.",Windows XP,,,,,,,,,,,,,,,,19/Feb/08 22:24;piepera;diff.txt;https://issues.apache.org/jira/secure/attachment/12375970/diff.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112241,,,Tue Feb 19 22:24:49 UTC 2008,,,,,,0|i1acef:,268475,,,,,,,,19/Feb/08 22:24;piepera;Patch for 2.0.4-incubator CachedOutputStream.java. This patch makes CachedOutputStream delete the temporary file when the last inputstream/outputstream is closed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
schemas without *.xsd extensions being fetched from the internet instead of locally,CXF-1437,12388770,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,sshucker,sshucker,15/Feb/08 15:10,30/Apr/08 15:00,14/Mar/19 02:28,19/Mar/08 04:57,2.0.3,,,,,,,2.0.5,,Resources,,,,,1,"When using the cxf extensions, the schema http://schemas.xmlsoap.org/wsdl/ is loaded.  This schema is provided locally, but the local version is never loaded.  In a production environment where the server restricted outbound connections, spring failed to initialize its application context at startup.  Spring's DelegatingEntityResolver checks whether the schemaLocation ends in *.xsd before resolving its location through the entries provided by the spring.schemas files.  Because this schemaLocation has no extension, the mapping to the local version is ignored.",Java 1.5.0_13 on 32-bit gutsy gibbon,,,,,,,,,,,,CXF-1272,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-19 04:57:29.447,,,no_permission,,Unknown,,,,,,,,,,,112240,,,Wed Mar 19 04:57:29 UTC 2008,,,,,,0|i1ab2n:,268260,,,,,,,,"19/Mar/08 04:57;dkulp;
I'm going to mark this resolved for 2.0.5.   See comments in CXF-1272.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in WS-Security 1.1 Signature Confirmation handling,CXF-1436,12388769,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,coheig,coheig,15/Feb/08 15:10,30/Apr/08 15:00,14/Mar/19 02:28,18/Feb/08 19:04,2.1,,,,,,,2.0.5,,WS-* Components,,,,,0,"
WS-Security 1.1 Signature Confirmation is a mechanism whereby a receiver of a signed SOAP message attaches a ""SignatureConfirmation"" blob in the responding SOAP message containing the signature that was received. In this way the initiator knows that the signature was received correctly.

In CXF, support for signature confirmation is provided via the WSS4J*Interceptors. However, there's a minor boolean bug in the WSS4JOutInterceptor that mixes up the roles of the requestor and the responder, and hence this feature is broken.

See attached patch for fix and unit test.",,,,,,,,,,,,,,,,,15/Feb/08 15:10;coheig;sigconf.patch;https://issues.apache.org/jira/secure/attachment/12375675/sigconf.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-15 22:05:39.813,,,no_permission,,,,,,,,,,,,,112239,,,Fri Feb 15 22:05:39 UTC 2008,,,,,,0|i1ab2v:,268261,,,,,,,,"15/Feb/08 22:05;dkulp;I'm going to re-open this as Fred had to disable the test after his fix for CXF-1433.  Can you re-look at this?

Thanks!
Dan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BusApplicationContext should pass empty String array to super constructor instead of null,CXF-1435,12388767,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,orbang,orbang,15/Feb/08 14:50,10/Mar/08 21:13,14/Mar/19 02:28,19/Feb/08 21:03,2.1.1,,,,,,,2.0.5,,Configuration,,,,,0,"BusApplicationContext extends ClassPathXmlApplicationContext and calls the super constructor (see below) with configLocations == null. In this constructor Spring 2.5.1 calls StringUtils.trimArrayElements(configLocations), which sets configLocations = new String[0], but Spring 2.5.2 no longer does this, which causes a NullPointerException in Spring. Copied here the relevant lines:

Spring 2.5.2:

	public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
			throws BeansException {

		super(parent);
		setConfigLocations(configLocations);
		if (refresh) {
			refresh();
		}
	}



	/**
	 * Set the config locations for this application context.
	 * <p>If not set, the implementation may use a default as appropriate.
	 */
	public void setConfigLocations(String[] locations) {
		Assert.noNullElements(locations, ""Config locations must not be null"");
		this.configLocations = new String[locations.length];
		for (int i = 0; i < locations.length; i++) {
			this.configLocations[i] = resolvePath(locations[i]);
		}
	}






2.5.1:



	public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh, ApplicationContext parent)
			throws BeansException {

		super(parent);
		Assert.noNullElements(configLocations, ""Config location must not be null"");
		this.configLocations = StringUtils.trimArrayElements(configLocations);
		if (refresh) {
			refresh();
		}
	} 

	public static String[] trimArrayElements(String[] array) {
		if (ObjectUtils.isEmpty(array)) {
			return new String[0];
		}
		...
	}

Would it be possible to pass an empty String array in BusApplicationContext to the parent constructor instead of null?","snapshot 20080130, Spring 2.5.2 ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112238,,,2008-02-15 14:50:33.0,,,,,,0|i13zpz:,231417,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Security vulnerability,CXF-1433,12388677,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,lfrering,lfrering,14/Feb/08 14:52,30/Apr/08 15:00,14/Mar/19 02:28,15/Feb/08 20:42,2.0.3,,,,,,,2.0.5,,WS-* Components,,,,,0,"It is possible to bypass the security checks configured with WS-Security.

Server configured with an Username Token WS-Security authentication with Spring :

<jaxws:endpoint id=""helloWorld"" implementor=""service.impl.HelloWorldImpl"" address=""/HelloWorld"">
		<jaxws:inInterceptors>
			<bean class=""org.apache.cxf.binding.soap.saaj.SAAJInInterceptor""/>
			<bean class=""org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"">
				<constructor-arg>
					<map>
						<entry key=""action"" value=""UsernameToken""/>
						<entry key=""passwordType"" value=""PasswordDigest""/>
						<entry key=""passwordCallbackClass"" value=""service.security.ServerPasswordHandler""/>
					</map>
				</constructor-arg>
			</bean>
			<bean class=""org.apache.cxf.interceptor.LoggingInInterceptor""/>
			<bean class=""org.apache.cxf.interceptor.LoggingOutInterceptor""/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

When a SOAP message is created and sent with the following header, the server do not process the authentication and return the response :

<SOAP-ENV:Envelope>
	<SOAP-ENV:Header>
	        <ns0:Security>
                        <ns0:wsse>Security</ns0:wsse>
                </ns0:Security>
        </SOAP-ENV:Header>

	<SOAP-ENV:Body>
        	<ns0:sayHi>
                        <name>Loïc</name>
                </ns0:sayHi>
        </SOAP-ENV:Body>
</SOAP-ENV:Envelope>

So it is possible to bypass all the security checks configured and to use it.","Tomcat 5.5, Spring 2 and CXF 2.0.3 for the server and Flex WS-client",,,,,,,,,,,,,,,,15/Feb/08 19:35;fdushin;cxf-1433-fdushin-2008.02.15.patch;https://issues.apache.org/jira/secure/attachment/12375709/cxf-1433-fdushin-2008.02.15.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-15 17:08:50.733,,,no_permission,,Moderate,,,,,,,,,,,36819,,,Mon Feb 18 19:04:13 UTC 2008,,,,,,0|i0uz5j:,178836,,,,,,,,"15/Feb/08 16:49;lfrering;Hello Fred,

Here is the Flex code that permit me to use the web service without authentication :

<mx:Application xmlns:mx=""http://www.adobe.com/2006/mxml"" layout=""absolute"">
        <mx:WebService id=""helloService"" wsdl=""http://localhost/webservice/HelloWorld?wsdl"" useProxy=""false"" load=""headers();"">
        <mx:operation name=""sayHi"">
            <mx:request>
                <name>Loïc</name>
            </mx:request>
        </mx:operation>
    </mx:WebService>

    <mx:Script>
        <![CDATA[
            import mx.rpc.soap.SOAPHeader;
            //import com.adobe.crypto.WSSEUsernameToken;
            
            private var wsseHeader:SOAPHeader;

            public var fromXML;

            public function headers():void {
            	
                var wsse:Namespace = new Namespace(""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"");
                var wsseSecurity:QName = new QName(wsse.uri, ""Security"");
                wsseHeader = new SOAPHeader(wsseSecurity, {""wsse"":""Security""});
            	
                // Here would be the code to generate the WS-Security headers, but is not....

                helloService.addHeader(wsseHeader);
            }
        ]]>
    </mx:Script>
    
    <mx:DataGrid id=""dgTopPosts"" width=""400"" verticalCenter=""-66"" horizontalCenter=""0"" dataProvider=""{helloService.sayHi.lastResult}"">
        <mx:columns>
            <mx:DataGridColumn headerText=""Hi"" dataField=""return"" />
        </mx:columns>
    </mx:DataGrid>
    
    <mx:Button label=""Button"" click=""helloService.sayHi.send();"" verticalCenter=""-125.5"" horizontalCenter=""0"" />
</mx:Application>","15/Feb/08 17:08;fdushin;
I believe this is due to:

https://issues.apache.org/jira/browse/WSS-70

I'll be submitting a patch to CXF shortly which works around this issue.","15/Feb/08 17:28;lfrering;Ok, thank you Fred.","15/Feb/08 19:35;fdushin;This patch adds a check to the WSS4JInInterceptor, to ensure that (at least) the number of performed actions corresponds to the number of required actions.  This is a workaround for https://issues.apache.org/jira/browse/WSS-70","18/Feb/08 10:52;lfrering;Great, thank you for your reactivity.

Regards,
Loïc FRERING","18/Feb/08 19:04;dkulp;
New 2.0.5 and 2.1 snapshots are deployed that contain the fixes.   Can you give them a try and make sure it's all OK?

Thanks!
Dan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Throwables should be serializable,CXF-1432,12388540,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rdumitriu,rdumitriu,13/Feb/08 13:23,30/Apr/08 15:00,14/Mar/19 02:28,20/Feb/08 16:54,2.0,,,,,,,2.0.5,,Core,,,,,0,"Throwables (exceptions) should be serializable. i18n.Message class, included in exceptions, is not, for instance.","WAS 6.1, JDK 6",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112236,,,2008-02-13 13:23:49.0,,,,,,0|i0synz:,167093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in the JAX-RS implementation for matching method types to Accept Header,CXF-1431,12388536,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,barfitzgerald,barfitzgerald,13/Feb/08 12:14,30/Apr/08 14:57,14/Mar/19 02:28,03/Mar/08 14:46,2.1,,,,,,,2.1,,JAX-RS,,,,,0,"Consider the following scenario:

I have a resource with 2 methods:

@HttpMethod(""GET"")
@UriTemplate(""/users/{id}"")
@ProduceMime(""text/xml"")
public Response getUser(@UriParam(""id"") String id) throws Exception { ....}

@HttpMethod(""GET"")
@UriTemplate(""/users/{id}"")
@ProduceMime(""application/json"")
public Response getUserJSON(@UriParam(""id"") String id) throws Exception { ....}

If I then send a request to /users/24 with Accept headers of  ""text/xml, */*"" one would expect the ""text/xml"" method to be invoked. However in the CXF implementation the application/json one is invoked. Suggest changing the algorithm to:

1. Sort the Accept header according to the W3 standards
2. Iterate through the accept header list. For each one:
        1. Find all matching methods
        2. If there is only one method return this and break out of the accept header loop
        3. If there are multiple methods sort these methods using consume mime and produce mime. Then return the first

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-22 12:47:58.301,,,no_permission,,Moderate,,,,,,,,,,,112235,,,Mon Mar 03 11:50:59 UTC 2008,,,,,,0|i0v3qn:,179579,,,,,,,,22/Feb/08 12:47;sergey_beryozkin;Will be fixed as part of CXF-1415,"29/Feb/08 09:38;sergey_beryozkin;Barry, we're ready to close this JIRA, can you please independently verify that this issue has been fixed for you ?

",03/Mar/08 11:50;barfitzgerald;Confirmed fix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ThreadLocal Memory leak in HandlerChainInvoker,CXF-1430,12388514,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bharathganesh,bharathganesh,13/Feb/08 05:37,30/Apr/08 15:00,14/Mar/19 02:28,13/Feb/08 19:24,2.0.2,,,,,,,2.0.5,,JAX-WS Runtime,,,,,0,"ThreadLocal memory leak:

In HandlerChainInvoker the WebServiceContext thread local was set but never unset after the handler chain invocation was complete. ",,,,,,,,,,,,,,,,,13/Feb/08 05:41;bharathganesh;HandlerChainInvoker.java;https://issues.apache.org/jira/secure/attachment/12375446/HandlerChainInvoker.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-13 19:24:05.854,,,no_permission,,,,,,,,,,,,,112234,,,Wed Feb 13 19:24:05 UTC 2008,,,,,,0|i13zgv:,231376,,,,,,,,13/Feb/08 05:41;bharathganesh;Patch over 2.0.2,13/Feb/08 19:24;dkulp;Patch applied!  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak at PolicyEngineImpl,CXF-1429,12388513,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bharathganesh,bharathganesh,13/Feb/08 05:18,30/Apr/08 15:00,14/Mar/19 02:28,13/Feb/08 19:23,2.0.2,,,,,,,2.0.5,,WS-* Components,,,,,0,"Certain data structures in CXF PolicyEngineImpl were holding reference to EndpointInfo, EndpointPolicy, BindingInfo etc. Clean up all the data structures during application stop, that keep a reference to the EndpointInfo object or which have EndpointInfo as the key.

Map of (EndpointInfo vs EndpointPolicy) maintained at PolicyEngineImpl. The client and server EndpointInfo's get added to this map. So while the server endpoint is stopped, we need to identify all the client EndpointInfos pertaining to this Server EndpointInfo, and cleanup them. 

See the overridden remove() method of endpointInfo map.  

Attached a patch sources on CXF 2.0.2. 
",,,,,,,,,,,,,,,,,13/Feb/08 05:23;bharathganesh;EndpointInfo.java;https://issues.apache.org/jira/secure/attachment/12375445/EndpointInfo.java,13/Feb/08 05:23;bharathganesh;PolicyEngineImpl.java;https://issues.apache.org/jira/secure/attachment/12375444/PolicyEngineImpl.java,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-02-13 19:23:22.539,,,no_permission,,,,,,,,,,,,,112233,,,Wed Feb 13 19:23:22 UTC 2008,,,,,,0|i14qov:,235789,,,,,,,,13/Feb/08 05:23;bharathganesh;Patch on CXF 2.0.2,"13/Feb/08 19:23;dkulp;
Patch applied!   Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If JMS destination / JNDI server is missing, publishing an endpoint doesn't fail, only logs exception",CXF-1426,12388153,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,chris@die-schneider.net,mayank,mayank,08/Feb/08 02:33,24/Apr/09 21:16,14/Mar/19 02:28,06/Nov/08 23:53,2.0.4,,,,,,,2.0.9,2.1.3,Transports,,,,,1,"When publishing a service on the JMS transport, if the jndi server cannot be found, or the named destination is missing, CXF will only log the exception. It will not throw. Hence, it is not possible to know that the service creation failed.

               Endpoint impl = Endpoint.publish(url, object);
               if ((impl != null) && impl.isPublished()) {
                       // success
               }

The above code will go to success case even in failure conditions mentioned above.",ActiveMQ 5,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-18 17:46:52.073,,,no_permission,,Novice,,,,,,,,,,,112231,,,Thu Nov 06 23:52:55 UTC 2008,,,,,,0|i1ab3r:,268265,,,,,,,,"18/Oct/08 17:46;chris@die-schneider.net;Could you please check out the latest trunk version of cxf and report if the issue still exists?
We have done many refactorings and it is well possible that the issue is solved.
","06/Nov/08 23:52;chris@die-schneider.net;The current implementation will throw an exception if the connectionfactory can not be found in jndi or if the jndi connection fails.
If the targetDestination can not be resolved an exception will be thrown in the activate method of JMSDestination. So I think we can close this issue.

I will keep the issue open some days and if there are no objections I will close it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS Response.Builder implementation is not complete,CXF-1423,12388102,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,sergey_beryozkin,sergey_beryozkin,07/Feb/08 16:11,30/Apr/08 14:57,14/Mar/19 02:28,13/Mar/08 00:22,2.1,,,,,,,2.1,,JAX-RS,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112228,,,Wed Mar 12 18:50:31 UTC 2008,,,,,,0|i13zo7:,231409,,,,,,,,"12/Mar/08 18:50;sergey_beryozkin;Only multiple Variants not supported, it will be a separate issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS Subresources do not have their class URITemplates taken into account,CXF-1422,12388101,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,sergey_beryozkin,sergey_beryozkin,07/Feb/08 16:09,12/Mar/08 18:45,14/Mar/19 02:28,12/Mar/08 18:45,2.1,,,,,,,Invalid,,JAX-RS,,,,,0,"Consider 

@URITemplate(""/"")
public class RootResource {
    
   @HttpMethod(""GET"")
    @URITemplate(""foo"")
    public Foo getFoo() {
          return new Foo();
    }
}

@URITemplate(""/bar"")
public class RootResource {
    @HttpMethod(""GET"")
    public Response getState() {
          //....
    }
}

Foo is supposed to respond to /foo/bar queries but a /bar fragment is not considered by a JAXRS runtime
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112227,,,2008-02-07 16:09:54.0,,,,,,0|i0v34v:,179481,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LogUtils.log fails when trying to log an error with a question mark.,CXF-1420,12388010,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,piepera,piepera,06/Feb/08 20:29,30/Apr/08 15:00,14/Mar/19 02:28,20/Feb/08 16:54,2.0.4,,,,,,,2.0.5,,,,,,,0,"One of my interceptors threw an exception which included a question mark in the message, something like ""Uncategorized SQLException for SQL [{call FOO.ping(?, ?)}]"". CXF trapped this error and tried to log it with LogUtils. However, I guess LogUtils interprets the question marks in some special way, so instead of logging the exception properly, it fails with a different error.

java.lang.IllegalArgumentException: can't parse argument number FOO.ping(?
        at java.text.MessageFormat.makeFormat(MessageFormat.java:1330)
        at java.text.MessageFormat.applyPattern(MessageFormat.java:450)
        at java.text.MessageFormat.<init>(MessageFormat.java:350)
        at java.text.MessageFormat.format(MessageFormat.java:803)
        at org.apache.cxf.common.logging.LogUtils.log(LogUtils.java:256)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:221)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:77)
        at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:264)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:170)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.doPost(AbstractCXFServlet.java:148)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:760)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
        at foo.impl.Myilter.doFilter(MyFilter.java:125)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112225,,,2008-02-06 20:29:17.0,,,,,,0|i1ab4f:,268268,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Server Response headers not populated properly,CXF-1419,12387983,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bravi,bravi,06/Feb/08 15:20,30/Apr/08 15:00,14/Mar/19 02:28,08/Feb/08 17:10,,,,,,,,2.0.5,,Transports,,,,,0,"In a out interceptor for a server response, if i populate a JMS header in the JMS_SERVER_RESPONSE headers. I do not get it back in the JMS_CLIENT_RESPONSE headers. 

It looks like when handling the output message in JMSDestination, the JMS_SERVER_RESPONSE is got from the inMessage instead of the outMessage. I have attached a patch for fixing this issue.",,,,,,,,,,,,,,,,,06/Feb/08 15:21;bravi;JMS_server_response.patch;https://issues.apache.org/jira/secure/attachment/12374873/JMS_server_response.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112224,,,2008-02-06 15:20:50.0,,,,,,0|i13ziv:,231385,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem having multiple interceptors of the same type on the interceptor chain,CXF-1418,12387960,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,piepera,piepera,06/Feb/08 12:00,30/Apr/08 15:00,14/Mar/19 02:28,20/Feb/08 15:34,2.0.4,,,,,,,2.0.5,,Core,,,,,0,"AbstractPhaseInterceptor uses its class name as its ID. PhaseInterceptorChain rejects any PhaseInterceptors with duplicate IDs. The resulting behavior is that if you have two instances of an interceptor on the same chain, the second one is discarded. It can be useful to have to instances of the same interceptor on an interceptor chain, for example, you might have two XSLT interceptors on a message that needs to undergo two transformations, or two error-catching interceptors for different kinds of errors.

There are a few ways to work around this problem, which is why I marked this as minor:
1. Create an additional interceptor class for each XSLT with different names, ""XsltInterceptorKludge2.java"" and ""XsltInterceptorKludge3.java"".
2. Write a subclass of AbstractSoapInterceptor which provides unique IDs via a counter mechanism (my-id00, my-id01, my-id02...).

There are a number of viable ways to solve the problem for real:
1. A second argument could be added to the constructors for AbstractSoapInterceptor or AbstractPhaseInterceptor indicating that a unique ID should be generated.
2. A subclass of AbstractSoapInterceptor could be provided, with code to generate a unique ID each time.
3. PhaseInterceptorChain could be modified to accept interceptors with duplicate IDs, and the current interceptors that rely on this logic could verify that they're not adding duplicate interceptors.

http://www.nabble.com/forum/ViewPost.jtp?post=15300074",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-20 15:34:01.007,,,no_permission,,Unknown,,,,,,,,,,,112223,,,Wed Feb 20 15:34:01 UTC 2008,,,,,,0|i0syo7:,167094,,,,,,,,"20/Feb/08 15:34;dkulp;
Add a uniqueId flag to the constructors.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAPFaultException built programmatically and thrown in a JAX-WS handler are not correctly populated,CXF-1417,12387942,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dgesino,dgesino,06/Feb/08 08:47,04/Sep/09 16:54,14/Mar/19 02:28,15/Feb/08 19:42,2.0,2.0.1,2.0.2,2.0.3,2.0.4,2.0.5,2.1,2.0.5,2.1,JAX-WS Runtime,,,,,0,"Create a SOAPFaultException filled with a SOAPFault and throw it from a JAX-WS Hander.
On the other side some content of the SOAPFaultException is missing.

Here is a code that can be tried: create a SOAPHandler with the following handleMessage().

public boolean handleMessage(SOAPMessageContext ctx) {
                Boolean outboundProperty = (Boolean) ctx
                                .get(MessageContext.MESSAGE_OUTBOUND_PROPERTY);

                if (!outboundProperty) {
                        SOAPMessage msg = ctx.getMessage();
                        SOAPBody body;
                        try {
                                body = msg.getSOAPBody();

                                SOAPFault fault = body.addFault();
                                QName faultName = new QName(SOAPConstants.URI_NS_SOAP_ENVELOPE,
                                                ""Server"");
                                fault.setFaultCode(faultName);
                                fault.setFaultActor(""http://gizmos.com/orders"");
                                fault.setFaultString(""Server not responding"");

                                Detail detail = fault.addDetail();

                                QName entryName = new QName(""http://gizmos.com/orders/"",
                                                ""order"", ""PO"");
                                DetailEntry entry = detail.addDetailEntry(entryName);
                                entry.addTextNode(""Quantity element does not have a value"");

                                QName entryName2 = new QName(""http://gizmos.com/orders/"",
                                                ""order"", ""PO"");
                                DetailEntry entry2 = detail.addDetailEntry(entryName2);
                                entry2.addTextNode(""Incomplete address: no zip code"");

                                throw new SOAPFaultException(fault);

                        } catch (SOAPException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                        }
                }

                return true;
        } 

This is what I would expect:

<soapenv:Fault>
      <faultcode>soapenv:Server</faultcode>
      <faultstring>Server not responding</faultstring>
      <faultactor>http://gizmos.com/orders</faultactor>
      <detail>
        <PO:order xmlns:PO=""http://gizmos.com/orders/"">Quantity element does not have a value</PO:order>
        <PO:order xmlns:PO=""http://gizmos.com/orders/"">Incomplete address: no zip code</PO:order>
      </detail>
  </soapenv:Fault>

And this is what I get:

 <soap:Fault>
      <faultcode>soap:Server</faultcode>
      <faultstring>Server not responding</faultstring>
</soap:Fault>




",whatever,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-20 07:29:02.096,,,no_permission,,Moderate,,,,,,,,,,,112222,,,Fri Sep 04 16:54:47 UTC 2009,,,,,,0|i1ab4n:,268269,,,,,,,,"20/May/09 07:29;ashwinapache;hi,

I am still facing this issue, even if I am using CXF2.1. Will you kindly guide, how this issue can be fixed?

Thanks & Regards
 Ashwin","04/Sep/09 09:37;davehen;Hi,
I searched throughout all the release notes of all CXF 2.1.x versions (from 2.1 to 2.1.6), but I've never found this issue reported as fixed.
Could you please road me up to the correct fixed version? Or, if possible, could you tell me which classes are involved, in a way I could try a quick fix?
Thanks a lot,
Davide","04/Sep/09 16:54;dkulp;
Well, it says it was fixed for 2.0.5 which woudl have been before 2.1.   Thus, it should be working on 2.1.

THe ""Subversion Commits"" tab above should give details on the fix.

If it's STILL not working, please open a new JIRA with a testcase attached.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS runtime can not handle Accept headers with multiple values,CXF-1413,12387729,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,sergey_beryozkin,sergey_beryozkin,03/Feb/08 13:08,04/Feb/08 13:32,14/Mar/19 02:28,04/Feb/08 13:32,2.0.4,,,,,,,2.1,,JAX-RS,,,,,0,"See http://mail-archives.apache.org/mod_mbox/incubator-cxf-dev/200802.mbox/browser

If Accept header has values like ""text/xml,text/plain"" then it won't be matched against a ProduceMime annotation's value like text/xml",,,,,,,,,,,,,,,,,03/Feb/08 13:17;sergey_beryozkin;cxf-1413.patch;https://issues.apache.org/jira/secure/attachment/12374637/cxf-1413.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112218,,,Sun Feb 03 13:17:08 UTC 2008,,,,,,0|i0v3jr:,179548,,,,,,,,"03/Feb/08 13:17;sergey_beryozkin;Patch incorporates a code suggested by Barry Fitzgerald [1] with a simple test added

[1] http://mail-archives.apache.org/mod_mbox/incubator-cxf-dev/200802.mbox/browser",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In  ClientFaultConverter', setStackTrace() throws NullPointerException if 'ss' String is null",CXF-1412,12387603,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ssandruchi,ssandruchi,01/Feb/08 07:51,30/Apr/08 15:00,14/Mar/19 02:28,06/Feb/08 17:31,2.0.3,2.0.4,,,,,,2.0.5,,,,,,,2,"When CXF is handling exception throwed by a web service, in 'setStackTrace()' method of 'apache.cxf.interceptor.ClientFaultConverter' a NullPointerException occurs.
This is dued to the condition 'StringUtils.isEmpty(ss)'  is wrong. I consider that it would be '!StringUtils.isEmpty(ss)': the 'ss' String must be procesed if this is not null o not empty:
        String ss = (String) xu.getValue(""//"" + Fault.STACKTRACE + ""/text()"", fault.getDetail(),  XPathConstants.STRING);
         ...
        if (!StringUtils.isEmpty(ss)) {   <-------------- THIS CONDITION
              // do something with 'ss'                
        }

Thanks!","Windows XP, JBoss 4.0.5 A",,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,112217,,,2008-02-01 07:51:01.0,,,,,,0|i1ab5b:,268272,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSPolicy alternatives are not selected correctly on the server side,CXF-1411,12387540,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sergey_beryozkin,sergey_beryozkin,31/Jan/08 12:31,30/Apr/08 14:57,14/Mar/19 02:28,20/Feb/08 20:38,2.1,,,,,,,2.1,,WS-* Components,,,,,0,"One can use WS-Policy to describe multiple policy alternatives :
<Policy>
  <!-- alt1 -->
  <All>
      <A/>
  </All>
  <!-- alt2 -->
  <All>
      <B/>
  </All>
  <!-- alt3 -->
   <All>
       <A/>
       <B/>
    </All>
</Policy>

The main motivation behind using multiple alternatives is to let policy-aware clients to select only that alternative which they understand. Thus a service may be consumed by clients which understand <A/> only and by clients which understand <B/> only and by those which understand both A&B.

As such, a server needs to be aware of all the assertions (A, B) available in Multiple alternatives to satisfr requests from different types of clients.
Currently, server selects only a single alternative. For example, by selecting Alt1 (A only) it will reject valid requests meeting B or A&B requirements




   ",,,,,,,,,,,,,,,,,18/Feb/08 11:37;sergey_beryozkin;cxf-pacth-1411.patch;https://issues.apache.org/jira/secure/attachment/12375827/cxf-pacth-1411.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-20 20:38:45.916,,,no_permission,,,,,,,,,,,,,112216,,,Wed Feb 20 20:38:45 UTC 2008,,,,,,0|i0v3rr:,179584,,,,,,,,"18/Feb/08 11:37;sergey_beryozkin;1. PolicyAssertion interface introduced, extends Assertion
2. Policy instances are asked now to check if they've been asserted
3. PolicyInterceptorProvider has new methods whic can be used to retrieve interceptors lazily, on demand
4. A given server endpoint has all the assertions in all the alternatives added to it. This can be optimized further once we have the on-demand provisioning of interceptors
5. Updated WSA MAPAggregator to better assert Anonymous and NonAnonymous nested assertions
6. Added a new Addressing system test veifying that  Anonymous requests can be asserted.

",20/Feb/08 20:38;dkulp;Patch applied,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endpoint polices referenced from WSPolicyFeature can not be applied if EndpointPolicy already exists,CXF-1409,12387379,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,sergey_beryozkin,sergey_beryozkin,29/Jan/08 14:51,30/Apr/08 14:57,14/Mar/19 02:28,31/Jan/08 21:42,2.1,,,,,,,2.1,,WS-* Components,,,,,0,"If a jaxws:endpoint is using WSPolicyFeature to refer to WS-Policy expressions and a corresponding EndpointPolicy already exists then these polices will have no effect.

This can happen if a policy engine has been explicitly enabled or if at least 2 jaxws:endpoints are using WSPolicyFeature.
In the former case, AbstractHttpDestination will cause a somewhat premature EndpointPolicy creation, while in the latter case
WSPolicyFeature will explicitly enable policy engine which in turn cause an AbstractHttpDestination for the second endpoint to (early) create EndpointPolicy.
As a result, after WSPolicyFeature adds Policy extensors to EndpointInfo, these extensors are never checked again to sync up them with already existing EndpointPolicy.
While the way AbstractHttpDestination creates EndpointPolicy needs to be reviewed, the actual problem is that it's not possible to update EndpointPolicy after it's been created

",,,,,,,,,,,,,,,,,31/Jan/08 18:06;sergey_beryozkin;cxf-patch-1409-v3.patch;https://issues.apache.org/jira/secure/attachment/12374487/cxf-patch-1409-v3.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-31 21:42:19.641,,,no_permission,,,,,,,,,,,,,112214,,,Thu Jan 31 21:42:19 UTC 2008,,,,,,0|i0v407:,179622,,,,,,,,"30/Jan/08 21:50;sergey_beryozkin;1. EndpointPolicy and PolicyEngine has been changed to better deal with updating EndpointPolicies

2. WSPolicyFeature does not add duplicate Policy Extensors but rather adds them to a givem EndpointPolicy

3. Various tests updated and added

This is not the final change in this area
","31/Jan/08 12:06;sergey_beryozkin;The previous attachment had some left-overs from other patches.

Summary :

1.  PolicyEngine has separate maps now for keeping client and server endpoint policies as the assumption that they're the same (in midtier) is not safe
2. EndpointPolicy has an explicit updatePolicy methods for various providers be able to contribute to existing policy (dynamically)
3. WSPolicyFeature does not add Policy instances as extensors to EndpointInfo which are duplicated anyway in the EndpointPolicy
4. Some initial workaround around Neethi'lack for proper normalization support in EndpointPolicy
","31/Jan/08 18:06;sergey_beryozkin;Moved a new test wsdl resource away form the code-generator path,
updated 2 RelibableGreeterImpls and rmwsdl_server.xml to ensure that this new wsdl is indeed picked up and thus policyfeature instances do indeed contribute their policies to individual endpoints",31/Jan/08 21:42;dkulp;Patch applied! Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data not returned if /tmp/cxf-tmp-#### deleted,CXF-1408,12387328,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,kombi,kombi,28/Jan/08 21:18,30/Apr/08 15:00,14/Mar/19 02:28,20/Feb/08 14:58,2.0.3,,,,,,,2.0.5,,,,,,,0,"If the cxf-tmp directory is deleted while cxf is running after startup, some requests do not return or return an error:

Stack trace:

2008-01-28 20:25:46,111 ERROR [STDERR] Jan 28, 2008 8:25:46 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Marshalling Error: No such file or directory
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:187)
        at org.apache.cxf.jaxb.io.DataWriterImpl.write(DataWriterImpl.java:51)
        at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.writeParts(AbstractOutDatabindingInterceptor.java:84)
        at org.apache.cxf.interceptor.BareOutInterceptor.handleMessage(BareOutInterceptor.java:68)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:74)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
        at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:256)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:170)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.doPost(AbstractCXFServlet.java:148)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:175)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.jboss.web.tomcat.tc5.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:156)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
        at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
        at org.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)
        at java.lang.Thread.run(Thread.java:619)
Caused by: javax.xml.bind.MarshalException
 - with linked exception:
[java.io.IOException: No such file or directory]
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:322)
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:246)
        at javax.xml.bind.helpers.AbstractMarshallerImpl.marshal(AbstractMarshallerImpl.java:75)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.writeObject(JAXBEncoderDecoder.java:330)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:167)
        ... 33 more
Caused by: java.io.IOException: No such file or directory
        at java.io.UnixFileSystem.createFileExclusively(Native Method)
        at java.io.File.checkAndCreate(File.java:1704)
        at java.io.File.createTempFile(File.java:1793)
        at org.apache.cxf.helpers.FileUtils.createTempFile(FileUtils.java:159)
        at org.apache.cxf.helpers.FileUtils.createTempFile(FileUtils.java:141)
        at org.apache.cxf.io.CachedOutputStream.createFileOutputStream(CachedOutputStream.java:362)
        at org.apache.cxf.io.CachedOutputStream.write(CachedOutputStream.java:336)
        at org.apache.cxf.io.CacheAndWriteOutputStream.write(CacheAndWriteOutputStream.java:65)
        at com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput.write(UTF8XmlOutput.java:394)
        at com.sun.xml.bind.v2.runtime.output.Encoded.write(Encoded.java:163)
        at com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput.writeName(UTF8XmlOutput.java:230)
        at com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput.endTag(UTF8XmlOutput.java:274)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.leafElement(XMLSerializer.java:320)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$1.writeLeafElement(RuntimeBuiltinLeafInfoImpl.java:209)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$1.writeLeafElement(RuntimeBuiltinLeafInfoImpl.java:208)
        at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.writeLeafElement(TransducedAccessor.java:250)
        at com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty.serializeBody(SingleElementLeafProperty.java:98)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:322)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:319)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:679)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty.serializeItem(ArrayElementNodeProperty.java:65)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementProperty.serializeListBody(ArrayElementProperty.java:168)
        at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:152)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:322)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:679)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty.serializeItem(ArrayElementNodeProperty.java:65)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementProperty.serializeListBody(ArrayElementProperty.java:168)
        at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:152)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:322)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:679)
        at com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty.serializeBody(SingleElementNodeProperty.java:150)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:322)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:679)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty.serializeItem(ArrayElementNodeProperty.java:65)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementProperty.serializeListBody(ArrayElementProperty.java:168)
        at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:152)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:322)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:679)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:151)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:185)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeBody(ElementBeanInfoImpl.java:305)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:312)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:71)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:488)
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:317)
        ... 37 more
2008-01-28 20:25:46,115 ERROR [STDERR] Jan 28, 2008 8:25:46 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
org.apache.cxf.binding.soap.SoapFault: Error writing to XMLStreamWriter.
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor.handleMessage(SoapOutInterceptor.java:248)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor.handleMessage(SoapOutInterceptor.java:230)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:90)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:224)
        at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:74)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
        at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:256)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:170)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.doPost(AbstractCXFServlet.java:148)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:175)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.jboss.web.tomcat.tc5.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:156)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
        at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
        at org.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)
        at java.lang.Thread.run(Thread.java:619)
Caused by: com.ctc.wstx.exc.WstxIOException: No such file or directory
        at com.ctc.wstx.sw.BaseStreamWriter.finishDocument(BaseStreamWriter.java:1687)
        at com.ctc.wstx.sw.BaseStreamWriter.writeEndDocument(BaseStreamWriter.java:585)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor.handleMessage(SoapOutInterceptor.java:243)
        ... 33 more
Caused by: java.io.IOException: No such file or directory
        at java.io.UnixFileSystem.createFileExclusively(Native Method)
        at java.io.File.checkAndCreate(File.java:1704)
        at java.io.File.createTempFile(File.java:1793)
        at org.apache.cxf.helpers.FileUtils.createTempFile(FileUtils.java:159)
        at org.apache.cxf.helpers.FileUtils.createTempFile(FileUtils.java:141)
        at org.apache.cxf.io.CachedOutputStream.createFileOutputStream(CachedOutputStream.java:362)
        at org.apache.cxf.io.CachedOutputStream.write(CachedOutputStream.java:336)
        at org.apache.cxf.io.CacheAndWriteOutputStream.write(CacheAndWriteOutputStream.java:65)
        at com.ctc.wstx.io.UTF8Writer.flush(UTF8Writer.java:96)
        at com.ctc.wstx.sw.BufferingXmlWriter.flush(BufferingXmlWriter.java:214)
        at com.ctc.wstx.sw.BufferingXmlWriter.close(BufferingXmlWriter.java:194)
        at com.ctc.wstx.sw.BaseStreamWriter.finishDocument(BaseStreamWriter.java:1685)
        ... 35 more
2008-01-28 20:25:46,156 ERROR [STDERR] Jan 28, 2008 8:25:46 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Unmarshalling Error: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865] 
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:559)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:465)
        at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:40)
        at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:183)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:402)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1948)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1791)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:575)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
        at $Proxy96.contentSearch(Unknown Source)
        at com.echostorm.adlib.content.service.client.ContentServiceClientImpl.contentSearch(ContentServiceClientImpl.java:281)
        at com.echostorm.adlib.ui.data.client.ContentServiceClientManager.contentSearch(ContentServiceClientManager.java:106)
        at com.echostorm.adlib.ui.search.ContentSearchHandler.doSynchronousContentSearch(ContentSearchHandler.java:526)
        at com.echostorm.adlib.ui.search.ContentSearchHandler.synchronousContentSearch(ContentSearchHandler.java:498)
        at com.echostorm.adlib.ui.search.ContentSearchHandler.search(ContentSearchHandler.java:436)
        at com.echostorm.adlib.ui.spring.AdlibSearchController.search(AdlibSearchController.java:89)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.web.servlet.mvc.multiaction.MultiActionController.invokeNamedMethod(MultiActionController.java:434)
        at org.springframework.web.servlet.mvc.multiaction.MultiActionController.handleRequestInternal(MultiActionController.java:372)
        at com.echostorm.adlib.ui.spring.AdLibMultiActionController.handleRequestInternal(AdLibMultiActionController.java:86)
        at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
        at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:45)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:820)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:755)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:396)
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:350)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:697)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:175)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:524)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.jboss.web.tomcat.tc5.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:156)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:199)
        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:282)
        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767)
        at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:697)
        at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:889)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:619)
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865]]
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:422)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:337)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:545)
        ... 59 more
Caused by: com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865]
        at com.ctc.wstx.sr.StreamScanner.constructWfcException(StreamScanner.java:605)
        at com.ctc.wstx.sr.StreamScanner.throwParseError(StreamScanner.java:461)
        at com.ctc.wstx.sr.BasicStreamReader.reportWrongEndElem(BasicStreamReader.java:3256)
        at com.ctc.wstx.sr.BasicStreamReader.readEndElem(BasicStreamReader.java:3198)
        at com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:2830)
        at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1019)
        at org.apache.cxf.staxutils.DepthXMLStreamReader.next(DepthXMLStreamReader.java:215)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:225)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:358)
        ... 61 more
2008-01-28 20:25:46,263 ERROR [com.echostorm.adlib.ui.data.client.ContentServiceClientManager] Unmarshalling Error: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865] 
javax.xml.ws.soap.SOAPFaultException: Unmarshalling Error: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865] 
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:175)
        at $Proxy96.contentSearch(Unknown Source)
        at com.echostorm.adlib.content.service.client.ContentServiceClientImpl.contentSearch(ContentServiceClientImpl.java:281)
        at com.echostorm.adlib.ui.data.client.ContentServiceClientManager.contentSearch(ContentServiceClientManager.java:106)
        at com.echostorm.adlib.ui.search.ContentSearchHandler.doSynchronousContentSearch(ContentSearchHandler.java:526)
        at com.echostorm.adlib.ui.search.ContentSearchHandler.synchronousContentSearch(ContentSearchHandler.java:498)
        at com.echostorm.adlib.ui.search.ContentSearchHandler.search(ContentSearchHandler.java:436)
        at com.echostorm.adlib.ui.spring.AdlibSearchController.search(AdlibSearchController.java:89)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.web.servlet.mvc.multiaction.MultiActionController.invokeNamedMethod(MultiActionController.java:434)
        at org.springframework.web.servlet.mvc.multiaction.MultiActionController.handleRequestInternal(MultiActionController.java:372)
        at com.echostorm.adlib.ui.spring.AdLibMultiActionController.handleRequestInternal(AdLibMultiActionController.java:86)
        at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
        at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:45)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:820)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:755)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:396)
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:350)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:697)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:175)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:524)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.jboss.web.tomcat.tc5.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:156)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:199)
        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:282)
        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767)
        at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:697)
        at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:889)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:619)
Caused by: org.apache.cxf.interceptor.Fault: Unmarshalling Error: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865] 
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:559)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:465)
        at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:40)
        at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:183)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:402)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1948)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1791)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:575)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
        ... 44 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865]]
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:422)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:337)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:545)
        ... 59 more
Caused by: com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865]
        at com.ctc.wstx.sr.StreamScanner.constructWfcException(StreamScanner.java:605)
        at com.ctc.wstx.sr.StreamScanner.throwParseError(StreamScanner.java:461)
        at com.ctc.wstx.sr.BasicStreamReader.reportWrongEndElem(BasicStreamReader.java:3256)
        at com.ctc.wstx.sr.BasicStreamReader.readEndElem(BasicStreamReader.java:3198)
        at com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:2830)
        at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1019)
        at org.apache.cxf.staxutils.DepthXMLStreamReader.next(DepthXMLStreamReader.java:215)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:225)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:358)
        ... 61 more
2008-01-28 20:25:46,265 ERROR [com.echostorm.adlib.ui.search.ContentSearchHandler] Unmarshalling Error: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865] 
javax.xml.ws.soap.SOAPFaultException: Unmarshalling Error: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865] 
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:175)
        at $Proxy96.contentSearch(Unknown Source)
        at com.echostorm.adlib.content.service.client.ContentServiceClientImpl.contentSearch(ContentServiceClientImpl.java:281)
        at com.echostorm.adlib.ui.data.client.ContentServiceClientManager.contentSearch(ContentServiceClientManager.java:106)
        at com.echostorm.adlib.ui.search.ContentSearchHandler.doSynchronousContentSearch(ContentSearchHandler.java:526)
        at com.echostorm.adlib.ui.search.ContentSearchHandler.synchronousContentSearch(ContentSearchHandler.java:498)
        at com.echostorm.adlib.ui.search.ContentSearchHandler.search(ContentSearchHandler.java:436)
        at com.echostorm.adlib.ui.spring.AdlibSearchController.search(AdlibSearchController.java:89)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.web.servlet.mvc.multiaction.MultiActionController.invokeNamedMethod(MultiActionController.java:434)
        at org.springframework.web.servlet.mvc.multiaction.MultiActionController.handleRequestInternal(MultiActionController.java:372)
        at com.echostorm.adlib.ui.spring.AdLibMultiActionController.handleRequestInternal(AdLibMultiActionController.java:86)
        at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
        at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:45)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:820)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:755)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:396)
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:350)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:697)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:175)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:524)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.jboss.web.tomcat.tc5.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:156)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:199)
        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:282)
        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767)
        at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:697)
        at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:889)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:619)
Caused by: org.apache.cxf.interceptor.Fault: Unmarshalling Error: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865] 
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:559)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:465)
        at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:40)
        at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:183)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:402)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1948)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1791)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:575)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
        ... 44 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865]]
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:422)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:337)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:545)
        ... 59 more
Caused by: com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </ns4:>; expected </ns4:value>.
 at [row,col {unknown-source}]: [1,65865]
        at com.ctc.wstx.sr.StreamScanner.constructWfcException(StreamScanner.java:605)
        at com.ctc.wstx.sr.StreamScanner.throwParseError(StreamScanner.java:461)
        at com.ctc.wstx.sr.BasicStreamReader.reportWrongEndElem(BasicStreamReader.java:3256)
        at com.ctc.wstx.sr.BasicStreamReader.readEndElem(BasicStreamReader.java:3198)
        at com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:2830)
        at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1019)
        at org.apache.cxf.staxutils.DepthXMLStreamReader.next(DepthXMLStreamReader.java:215)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:225)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:358)
        ... 61 more","RH Linux 4.5, Java 1.6.03, and MacOSX with Java 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112213,,,2008-01-28 21:18:25.0,,,,,,0|i1ab5r:,268274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Item element with xmlns="""" in Exception with arrays of compex objects",CXF-1407,12387251,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,marco.piraccini,marco.piraccini,27/Jan/08 20:02,13/Nov/09 17:27,14/Mar/19 02:28,28/Oct/09 20:53,2.0.4,,,,,,,2.1.2,,,,,,,0,"Consider an exception with an array of objects. If  i send a soap message:

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ser=""http://server.hw.demo/"">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:sayHi>
         <ser:arg0>test</ser:arg0>
      </ser:sayHi>
   </soapenv:Body>
</soapenv:Envelope>

The answer is:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   (...)
            <ns1:ComplexException xmlns:ns1=""http://server.hw.demo/"">
               <reason xmlns:ns2=""http://server.hw.demo/"">Test</reason>
               <beans xsi:type=""ns2:myBeanArray"" xmlns:ns2=""http://server.hw.demo/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
                  <item>
                     <ns2:age>0</ns2:age>
                     <ns2:name>Marco</ns2:name>
                  </item>
               </beans>
            </ns1:ComplexException>
(...)
</soap:Envelope>

Notice that the item element is with no namespace (correct).
The problem is that, after the first soap message sent, if i request the service wsdl (for example pointing the browser at http://localhost:9000/helloWorld?wsdl), all the subsequent answers are with a different (and wrong) response:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
(...)
            <ns1:ComplexException xmlns:ns1=""http://server.hw.demo/"">
               <reason xmlns=""http://server.hw.demo/"">Test</reason>
               <beans xsi:type=""myBeanArray"" xmlns=""http://server.hw.demo/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
                  <item xmlns="""" xmlns:ns3=""http://server.hw.demo/"">
                     <ns3:age>0</ns3:age>
                     <ns3:name>Marco</ns3:name>
                  </item>
               </beans>
            </ns1:ComplexException>
(...)
</soap:Envelope>

In the attachment there is a simple project to reproduce the problem.

Marco.
","Linux, java1.6.0_02",,,,,,,,,,,,,,,,27/Jan/08 20:03;marco.piraccini;TestFault.zip;https://issues.apache.org/jira/secure/attachment/12374158/TestFault.zip,29/Jan/08 09:57;marco.piraccini;TestFault2.zip;https://issues.apache.org/jira/secure/attachment/12374243/TestFault2.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-01-28 16:24:59.45,,,no_permission,,,,,,,,,,,,,112212,,,Wed Oct 28 20:53:39 UTC 2009,,,,,,0|i0v1hr:,179215,,,,,,,,27/Jan/08 20:03;marco.piraccini;The project to reproduce the problem,"28/Jan/08 16:24;dkulp;
I think your ComplexException class has completely invalid annotations.   Technically, with those annotations, the fields would be mapped to attributes, not annotations.   The MyBeans really cannot map to an attribute.   In anycase, the fault writer definitely does not support writing to attributes at this point.  

On trunk, I changed the fault to:
@XmlAccessorType(XmlAccessType.PROPERTY)
public class ComplexException extends org.omg.CORBA.UserException {

    private String reason;
    private MyBean[] beans;
    
    public ComplexException(String msg) {
        super(msg);
    }
    
    public String getReason() {
        return reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }

    public MyBean[] getBeans() {
        return beans;
    }

    public void setBeans(MyBean[] beans) {
        this.beans = beans;
    }
}

and it seems to be writing out the correct data in all cases right now.     I'll check with 2.0.4 later.

Dan
","28/Jan/08 21:25;marco.piraccini;...mmm..i'dont understand why annotations are invalid (really, can you give me a spec reference?), but i think that the real strange point is that the CXF behaviour is different after i asked the wsdl. 
Anyway, if i try with:

@XmlAccessorType(XmlAccessType.PROPERTY)
public class ComplexException extends org.omg.CORBA.UserException {

    public String reason;
    
    public MyBean[] beans;
       
    public String getReason() {
        return reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }    
    public MyBean[] getBeans() {
        return beans;
    }

    public void setBeans(MyBean[] beans) {
        this.beans = beans;
    }

That's different from your example (the variables are public and not private), the returned message is correct, but mapped twice. There something wrong in my annotations?

Marco.","28/Jan/08 21:39;marco.piraccini;I tried with Access type property and private variables:

@XmlAccessorType(XmlAccessType.PROPERTY)
public class ComplexException extends org.omg.CORBA.UserException {

    private  String reason;
    
    private MyBean[] beans;
       
    public String getReason() {
        return reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }    
    public MyBean[] getBeans() {
        return beans;
    }

    public void setBeans(MyBean[] beans) {
        this.beans = beans;
    }
    
}

...but the behaviour is the same: (duplicated) correct response for the first SOAP message and wrong response after i get the WSDL with the browser. If you need i can send a new TestCase for that.

Marco.","29/Jan/08 09:57;marco.piraccini;I have modified (and attached) the test case project, with the @XmlAccessorType(XmlAccessType.PROPERTY) annotation on the complex Exception, but the behaviour is the same. The steps to reproduce the problem are:
- Run the server
- Send a soap request. The response is with the Exception elements (doubled, another issue?) but the item namespaces are correct
- Request the service wsdl (for example with the browser)
- Send again the soap message. The answer is the same as the first, but with the item namespace with xmlns=""""
","28/Oct/09 20:53;dkulp;
This seems to have been resolved for a while now.  The soap message before and after wsdl is the same and is per the schema described in the wsdl.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAX-RS implementation creates a new JAXBContext for each top level type.,CXF-1406,12387157,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,flynch,flynch,25/Jan/08 14:32,18/Aug/08 18:26,14/Mar/19 02:28,03/Jul/08 17:08,,,,,,,,2.1.2,,JAX-RS,,,,,0,"CXF JAX-RS implementation creates a new JAXBContext for each top level type. Ideally it should reuse the JAXBDatabinding allowing folks to have a single JAXBContext containing all the required types.

  http://www.nabble.com/Re%3A-JSON-and-JAX-RS-p15030297.html ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112211,,,2008-01-25 14:32:32.0,,,,,,0|i1401r:,231470,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@ProduceMime not used when selecting target method on a resource,CXF-1405,12387088,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,flynch,flynch,24/Jan/08 21:06,24/Apr/09 21:18,14/Mar/19 02:28,07/Jul/08 16:59,2.1,,,,,,,2.0.7,2.1.1,JAX-RS,,,,,0,"http://mail-archives.apache.org/mod_mbox/incubator-cxf-user/200801.mbox/%3C1201116808.6758.24.camel@horse%3E 


 import com.sun.ws.rest.api.ConsumeMime;
 import com.sun.ws.rest.api.HttpMethod;
 import com.sun.ws.rest.api.ProduceMime;
 import com.sun.ws.rest.api.UriTemplate;
 
 @UriTemplate(""/sampleservlet"")
 public class SampleServlet {
 	
 	@HttpMethod(""PUT"")
 	@ConsumeMime(""text/plain"")
 	@ProduceMime(""application/xml"")
 	public void getXML() {
 		System.out.println(""### Handle PUT for sampleservlet: XML ###"");
 	}
 	
 	@HttpMethod(""PUT"")
 	@ConsumeMime(""text/plain"")
 	@ProduceMime(""application/json"")
 	public void getJSON() {
 		System.out.println(""### Handle PUT for sampleservlet: JSON ###"");
 	}
 }

 
 When the client specifies the Accept parameter in the http header as
 application/json or application/xml one would expect the corresponding method
 to be called.",n/a,,,,,,,,,,,,,,,,25/Jan/08 04:31;flynch;patch.txt;https://issues.apache.org/jira/secure/attachment/12374001/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-24 22:02:04.265,,,no_permission,,,,,,,,,,,,,112210,,,Thu Jul 03 17:19:07 UTC 2008,,,,,,0|i1ab5z:,268275,,,,,,,,24/Jan/08 21:11;flynch;initial patch.... this simply looks at the first content type in the accept header. Further work to cater for scenarios where the requesting client speficies multiple content types in the Accept: header.,"24/Jan/08 22:02;dkulp;
It looks like the Jetty transport sets the Message.ACCEPT_CONTENT_TYPE thing properly.   Thus, I assume this is a difference with the servlet transport.   IMO, it might be better to just update the Servlet transport to match.
",24/Jan/08 22:07;flynch;your right this is with the servlet transport.... I'll fix it there and post an updated patch shortly.,"25/Jan/08 04:30;flynch;ok, updated 1-liner patch attached.","25/Jan/08 18:40;dkulp;
I've completely refactored the HttpDestination stuff so setting the properties in the message is shared between Jetty and Servlet so they should be completely identical now.   I also ended up fixing the ""Accept"" header parsing in the JAXRS code to actually work with the default sent from a URLConnection.   That broke all kinds of tests that were not specifically setting an Accept header, but I fixed those.

In anycase, I'd appreciate it if you could run a test with your stuff and let me know how it goes now.

",03/Jul/08 17:19;sergey_beryozkin;Is it still an issue ? I think AbstractDestination does set the Accept header now...,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java generating void response instead of bare object ,CXF-1404,12387058,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,24/Jan/08 16:18,30/Apr/08 14:57,14/Mar/19 02:28,24/Jan/08 20:41,2.0.3,,,,,,,2.1,,Tooling,,,,,0,"

For the wsdl I'm going to attach, wsdl2java is generating:
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebMethod
    public void getApprovedTerms(
        @WebParam(partName = ""parameters"", name = ""getApprovedTerms"", targetNamespace = ""http://sii.gri.roche.com"")
        GetApprovedTerms parameters
    );

instead of:

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebMethod
    @WebResult(partName = ""parameters"", name=""getApprovedTermsResponse"", targetNamespace=""http://sii.gri.roche.com"")
    public GetApprovedTermsResponse  getApprovedTerms(
        @WebParam(partName = ""parameters"", name = ""getApprovedTerms"", targetNamespace = ""http://sii.gri.roche.com"")
        GetApprovedTerms parameters
    );",,,,,,,,,,,,,,,,,24/Jan/08 16:18;dkulp;cxf1404.wsdl;https://issues.apache.org/jira/secure/attachment/12373939/cxf1404.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112209,,,2008-01-24 16:18:32.0,,,,,,0|i0v3y7:,179613,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JettyHttpDestination can not be created if enpoint address is null,CXF-1403,12387049,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sergey_beryozkin,sergey_beryozkin,24/Jan/08 15:27,30/Apr/08 14:57,14/Mar/19 02:28,24/Jan/08 21:50,2.1,,,,,,,2.1,,Transports,,,,,0,"This issue popped up as part of JAX-WS TCK testing.
When creating JAX-WS endpoints with no specific address specified a failure occurs due to JettyHttpDestination
assuming address can never be null.
The right approach is to allocate a random port at the level of AbstractHttpDestination.
In fact, it would be easy to extend such solution to handle enterprise policies like :
""any port withing a given range can be used by endpoints"".

",,,,,,,,,,,,,,,,,24/Jan/08 15:30;sergey_beryozkin;cxf-patch-1403.patch;https://issues.apache.org/jira/secure/attachment/12373936/cxf-patch-1403.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112208,,,Thu Jan 24 15:30:45 UTC 2008,,,,,,0|i0v3yv:,179616,,,,,,,,"24/Jan/08 15:30;sergey_beryozkin;A random port is allocated when no endpoint address is set.
It can be easily extended to handle preset addresses like localport:0

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MTOM missing pieces,CXF-1402,12386819,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,22/Jan/08 00:51,11/Oct/10 15:08,14/Mar/19 02:28,17/Oct/09 21:19,2.1,,,,,,,2.2.11,2.3,JAXB Databinding,,,,,0,"1) Nothing communicates the threshold from @MTOM or an MTOMFeature down to the JAXBAttachmentMarshaller.

2) I think some aspects of the 'on-off' control aren't all wired, either.
",,"Passed the MTOMFeature from the JaxWsServiceFactoryBean down toward the attachment process.
;22/Jan/08 02:34;bmargulies;3600",,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112207,,,Sat Oct 17 21:19:58 UTC 2009,,,,,,0|i13ybz:,231192,,,,,,,,"17/Oct/09 21:19;bmargulies;I think I dealt with all of this a long time ago.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
More shutdown problems with jetty,CXF-1401,12386818,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bmargulies,bmargulies,22/Jan/08 00:26,30/Apr/08 14:57,14/Mar/19 02:28,14/Mar/08 05:13,2.1,,,,,,,2.0.5,2.1,Transports,,,,,0,"The MtomServerTest gets error logging indicating that it is failing to shut down the server. This can cause other tests to fail, at least inside of eclipse
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-25 04:29:09.31,,,no_permission,,,,,,,,,,,,,112206,,,Fri Mar 14 05:13:37 UTC 2008,,,,,,0|i1ab67:,268276,,,,,,,,"25/Jan/08 04:29;njiang;This is because the servStatic called and do not clean the destination, so the servant reference count is not zero, when the bus shutdown.
I added an unregisterServStatic method to resolve this issue.",14/Mar/08 05:13;njiang;The patch should be in the trunk now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@MTOM ineffectual for services,CXF-1400,12386802,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,21/Jan/08 20:43,03/Jul/08 17:19,14/Mar/19 02:28,01/May/08 16:29,2.1,,,,,,,2.1,,JAX-WS Runtime,,,,,0,"The code to notice the @MTOM annotation was in the endpoint instead of in the jaxws server factory. So it didn't run for jaxws:service, so MTOM was disabled for content leaving the server for the client.

I've already coded the fix (to move it to the service factory bean), checkin imminent.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,112205,,,2008-01-21 20:43:05.0,,,,,,0|i0v41j:,179628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS transport ignoreing Message.PROTOCOL_HEADERS,CXF-1399,12386788,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,21/Jan/08 16:22,29/Jan/08 21:52,14/Mar/19 02:28,21/Jan/08 17:09,2.0.3,,,,,,,2.0.4,,Transports,,,,,0,"
The JMS transport is ignoring all the Message.PROTOCOL_HEADERS.   Thus, things like the SOAPAction are not available in the JMS message.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112204,,,2008-01-21 16:22:58.0,,,,,,0|i1ab6f:,268277,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interceptor order problem for MtoM over local transport,CXF-1398,12386567,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,18/Jan/08 02:56,30/Apr/08 14:57,14/Mar/19 02:28,19/Mar/08 22:46,,,,,,,,2.1,,,,,,,1,"LocalConduit.prepare, called from MessageSenderInterceptor, is called before AttachmentOutInterceptor gets a chance. This prevents the attachments from travelling across the link.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112203,,,2008-01-18 02:56:36.0,,,,,,0|i1ab6n:,268278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Policy PolicyBuilder implementation recognizes only a single policy namespace,CXF-1393,12386369,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,sergey_beryozkin,sergey_beryozkin,16/Jan/08 10:37,29/Jan/08 21:52,14/Mar/19 02:28,16/Jan/08 12:12,2.0.3,,,,,,,2.0.4,2.1,WS-* Components,,,,,0,PolicyBuilder implementation recognizes only http://schemas.xmlsoap.org/ws/2004/09/policy ns,,,,,,,,,,,,,,,,,16/Jan/08 10:39;sergey_beryozkin;cxf-patch-1393.patch;https://issues.apache.org/jira/secure/attachment/12373257/cxf-patch-1393.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-16 12:12:03.057,,,no_permission,,,,,,,,,,,,,112200,,,Wed Jan 16 12:12:03 UTC 2008,,,,,,0|i13zjj:,231388,,,,,,,,16/Jan/08 10:39;sergey_beryozkin;Patch attached. PolicyBuilderImpl is injected a bus instance which is used to get a current policy namespace from a PolicyConstants extension,16/Jan/08 12:12;njiang;The patch has been applied into the trunk and  2.0.x  branch with thanks to Sergey.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Java first, unannotated exceptions are always written qualified although schema usually says unqualified.",CXF-1392,12386194,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,dkulp,dkulp,14/Jan/08 16:01,29/Jan/08 21:52,14/Mar/19 02:28,14/Jan/08 16:02,2.0.3,,,,,,,2.0.4,,JAXB Databinding,,,,,0,"
The jaxb exception marshaller needs to honor the elementFormQualified attribute for the schema when writing the contents of the detail element.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112199,,,2008-01-14 16:01:29.0,,,,,,0|i13zjb:,231387,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
First object in Aegis array of anyType items has no xsi:type,CXF-1391,12386152,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,13/Jan/08 19:17,30/Apr/08 14:57,14/Mar/19 02:28,13/Jan/08 21:51,2.1,,,,,,,2.1,,Aegis Databinding,,,,,0,"The Javascript Aegis test has a case in which the response looks like the following. Note the missing xsi:type on the first element, as well as the extra xsd prefix.

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Body>
      <ns1:returnBeanWithAnyTypeArrayResponse xmlns:ns1=""http://fortest.javascript.cxf.apache.org/"">
         <ns1:return>
            <ns2:objects xmlns:ns2=""http://aegis.fortest.javascript.cxf.apache.org"">
               <ns3:anyType xmlns:ns3=""http://cxf.apache.org/arrays"">
                  <ns2:name>shrew</ns2:name>
               </ns3:anyType>
               <ns3:anyType ns4:type=""xsd:int"" xmlns:ns3=""http://cxf.apache.org/arrays"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:ns4=""http://www.w3.org/2001/XMLSchema-instance"">42</ns3:anyType>
               <ns3:anyType ns4:type=""ns2:Vegetable"" xmlns:ns3=""http://cxf.apache.org/arrays"" xmlns:ns4=""http://www.w3.org/2001/XMLSchema-instance"">
                  <ns2:family>brasica</ns2:family>
               </ns3:anyType>
            </ns2:objects>
            <ns2:string xmlns:ns2=""http://aegis.fortest.javascript.cxf.apache.org"">lima</ns2:string>
         </ns1:return>
      </ns1:returnBeanWithAnyTypeArrayResponse>
   </soap:Body>",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,112198,,,Sun Jan 13 21:51:15 UTC 2008,,,,,,0|i146pz:,232552,,,,,,,,"13/Jan/08 19:24;bmargulies;Here's the nature of the problem. The type of the first element of this array is in the override type list. The writeXsiTypes flag is false. BeanType does not know that it is being called from an array of anyType, so it doesn't write the tag. 

For the other elements in the array, we are passing through 'ObjectType' instead of BeanType, and it always writes an xsi:type.

I think it makes sense for the ArrayType code to force the xsi flag in the context while writing items for an xs:anyType array.","13/Jan/08 21:51;bmargulies;611657 fixes this. Dan, I can't tell whether this is worth 2.0.4-ing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Spring 2.5,CXF-1390,12386073,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dandiep,dandiep,11/Jan/08 18:28,24/Apr/09 21:16,14/Mar/19 02:28,02/Sep/08 20:29,2.0.3,,,,,,,2.2,,Core,,,,,4,"CXF doesn't work correctly on Spring 2.5. For instance, you get this:

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jrulesService': Unsatisfied dependency expressed through constructor argument with index 2 of type [org.apache.cxf.jaxws.JaxWsServerFactoryBean]: Ambiguous constructor argument types - did you specify the correct bean references as constructor arguments?

(What ever happened to the famed backward compatability!? :-) *sigh*) 

",,,,,,,,,,,,,,,,,05/Apr/08 21:19;wimv;cxf-spring-demo.war;https://issues.apache.org/jira/secure/attachment/12379490/cxf-spring-demo.war,05/Apr/08 20:37;wimv;cxf-spring-error.war;https://issues.apache.org/jira/secure/attachment/12379488/cxf-spring-error.war,05/Apr/08 20:43;wimv;cxf-spring-error_stacktrace.rtf;https://issues.apache.org/jira/secure/attachment/12379489/cxf-spring-error_stacktrace.rtf,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2008-01-14 18:53:15.475,,,no_permission,,,,,,,,,,,,,112197,,,Tue Sep 02 20:29:38 UTC 2008,,,,,,0|i0syof:,167095,,,,,,,,"14/Jan/08 18:53;dkulp;
Just to clarify:

I don't think for 2.0.4 we should force everyone to upgrade to spring 2.5.   However, making it work with both 2.0.x and 2.5 would be good.   

Thoughts?","16/Jan/08 23:23;marino_jonsson@hotmail.com;Actually, I'm running CXF 2.0.3 with Spring 2.5.1 on Jetty 6.1.6 (using CXFServlet and jaxws:endpoint Spring configuration) without a hitch!

However, deploying the exact same war on a Geronimo Little-G 2.0.2 (packing jetty 6.1.5) produces this dreaded UnsatisfiedDependencyException.

In both cases I'm using Java 6.

<rant>
The reason I use Little-G rather than the full size version is that I still haven't found a way past classloader conflicts - if I include the CXF libs it complains about the jaxws NamespaceHandler, and if I exclude the CXF libs it complains that it can't find the CXFServlet.  I've tried turning off the the cxf-module and cxf-deployer system modules, and hundreds of other deployment variations - but to no aval.  Deploying Spring-less (as per Geronimo's ""Simple Web Service with JAX-WS"" example) seems to work though - but of course that doesn't do me any good :)
</rant>

cheers,
Marino",17/Jan/08 19:36;dandiep;Can anyone submit a test case or example for this issue? I can't reproduce it. I think it has something to do with a particular combination of XML that people use. But I have verified that CXF does in fact (in general) work in Spring 2.5 though.,"11/Mar/08 20:22;adamb;I have a bunch of beans and I get the message only for some of them.  If I comment the offending ones out it works fine.

(4/12 beans have the problem)  I will do some investigation.",11/Mar/08 20:37;adamb;If I comment out all of the methods on an offending bean then it works fine...,11/Mar/08 20:43;adamb;If I change an offending signature to return a primitve rather than an object it works fine.  Other signatures with similar objects appear to work...,11/Mar/08 20:47;adamb;The problem is that the signatures contain an object that has a field (...that has a field that has a field etc...) that is of a type that does not contain a default constructor.,"11/Mar/08 21:55;adamb;Adding (deprecated) default constructors works.

It looks like just a case of a vague error message.  It would be nice if it at least mentioned the class with the problem (if this error message is even under the CXF projects control...)","03/Apr/08 22:13;sramadan;I'm having the same issue mentioned above. I'm getting this ""Unsatisfied dependency expressed through constructor argument"".
I'm using CXF 2.04 with Sping 2.5.
My endpoing configuration is very simple as follows:

<bean id=""myService"" class=""com.MyServiceImpl"" lazy-init=""false"">
	</bean>

	<jaxws:endpoint id=""ws"" 	implementor=""#myService"" address=""/ws""	wsdlLocation=""mywsdl.wsdl"">
	</jaxws:endpoint>

If I removed the wsdlLocation attributes, it seems to work fine...However I need to point to the wsdl location.","03/Apr/08 22:20;dkulp;
Any chance on a full working (or not working as the case may be :-) testcase?   The major issue with this jira issue is that we haven't been able to reproduce it.   :-(

",03/Apr/08 23:06;adamb;I tried to create a cut down sample but couldn't get it to fail.,"05/Apr/08 20:31;wimv;Hi,

I tried to make an example and it reliably produces this error.
I'll upload the source and all xml files.

Some notes :
I'm using spring 2.5.2 binary with dependecies
I'm using common-el.jar, servlet-api and jsp api from tomcan 5.0 (I will try with a newer version, but this worked fine for all my projects till now)
I don't want to use the geronimo apis, so I replaced them with the 3 previous + necessarty libs from spring 2.5.2. If not in Spring, latest snapshot.
I copied most of the source from this article, wich also stated in the comment that it does not work on spring 2.5.x, I just changes the mistaked (I hope) and seperated service and busines logic.
http://wheelersoftware.com/articles/spring-cxf-web-services.html
I use tomcat 5.0

Side problem :
the xsd at xmlns:jawxs=""http://cxf.apache.org/jaxws "" is no longer available??
(What happened to it?)
This seems to produce a catched Exception (I think it it continues without schema verification?)

Hope this will help.

Wim Verreycken",05/Apr/08 20:49;wimv;added ant build file and stacktrace,"05/Apr/08 21:19;wimv;The CFX Spring textbook example (http://cwiki.apache.org/CXF20DOC/writing-a-service-with-spring.html)
work fine with the same libraries.

Source uploaded for comparisson (& confused people).

From what I can see now, I think the problem will be in old wrong/old xsd's being used.",05/Apr/08 22:01;wimv;Using jdk1.6.0_03. Sorry forgot to mention this.,"06/Apr/08 04:57;wimv;Ok.

What's in a name...

From what I can see (but without the schema, no cxf.apache.org?)
<jaxws:endpoint/> uses a org.apache.cxf.service.factory.ReflectionServiceFactoryBean.
(but where is that ns declared? couldn't find it in any of the classpath xml files ether)
This calls a  org.apache.cxf.jaxws.JaxWsSererFactoryBean.

If you look at the code, this imports a lot of things, which in turn import a lot
of other things. In the end, org.apache.cxf.jaxws.javaee.PortComponentType
is imported.

This is where things go wrong, imho.
line 91 :
@XmlElement(name = ""port-component-name"", required = true)
    protected org.apache.cxf.jaxws.javaee.String portComponentName;

org.apache.cxf.jaxws.javaee.String get imported when this gets constructed
(actually, i think more because this is constructed)

After the call returns, of maybe straight away (but were dealing with reflection so
forgive me if i'm not clear on this), this results in String being ambigous
so it always has to be specified using the package name.

But Spring ioc/di uses reflection and reflection 
mostly uses Class.forName(String forName) to obtain a refference to the class.

And that is Class.forName(String forName) and not Class.forName(java.lang.String forName).

To make thing worse, but unavoidable, org.apache.cxf.jaxws.javaee.String also extends
java.lang.Object which defines 

public String toString() {
	return getClass().getName() + ""@"" + Integer.toHexString(hashCode());
}    

Again. String and not java.lang.String.

So whenver org.apache.cxf.jaxws.javaee.String get's loaded String becomes ambigious
and reflection (and half the jdk) become useless unless everyone updates String to
java.lang.Sring in there code.

Good luck with that.

Maybe now would be a good time to get rid of org.apache.cxf.jaxws.javaee.String
(which i know is an inheritance from Celtix' com.sun.java.xml.ns.j2ee.String)
before it causes any more damage...","06/Apr/08 05:02;wimv;so i think all versions of ctx  (after adding org.apache.cxf.jaxws.javaee.String
will have this problem  with spring 2.5).
Unless you loose it.

regards,

Wim

","06/Apr/08 05:48;wimv;imo this problem is more general, opened
CXF-1502 String ambigeous after import org.apache.cxf.jaxws.javaee.String","06/Apr/08 06:10;wimv;If I may suggest a new name : org.apache.cxf.jaxws.javaee.CString
(wich stands for Complex String, or Celtix' String)

>If I comment out all of the methods on an offending bean then it works fine...

As long as @Webparam (or maybe any anotations) is not used, it seems another ObjectFactory is used,
and org.apache.cxf.jaxws.javaee.String is not imported.

","12/Apr/08 10:01;wimv;CXF-1502 is resolved ==> trunk
This issue might be related.

Daniel Kulp>making it work with both 2.0.x and 2.5 would be good

Can you pls test with if this resolves the issues with Spring (2.0 and 2.5)?
If not, I'll look further into.
","14/Apr/08 12:40;satishkumar.k;Hi All,
we are also getting ""UnsatisfiedDependencyException"" for all the spring beans of type java.lang.String and that use CDATA for value of the constructor-arg.

we are using: Spring 2.5.3 and cxf 2.0.2. The same is working without any issues with Spring 2.0.4.

In detail,

<bean id=""FIND_SYMB_HQL"" class=""java.lang.String"" >
	    <constructor-arg>
	        <value>
	            <![CDATA[
	               from Element o where o.elementRoot.underlyingInstrument.symbol = :symbol
	               	and o.status = :status
	            ]]>
	        </value>
	    </constructor-arg>
	</bean>

For example a bean defined as above is getting complained by Spring with the following exception being thrown.

"" Unsatisfied dependency expressed through constructor argument with index 0 of type [java.lang.StringBuffer]: Could not convert constructor argument value of type [java.lang.String] to required type [java.lang.StringBuffer]: Failed to convert value of type [java.lang.String] to required type [java.lang.StringBuffer]; nested exception is java.lang.IllegalArgumentException: Cannot convert value of type [java.lang.String] to required type [java.lang.StringBuffer]: no matching editors or conversion strategy found""


Appreciate any inputs on this issue.

",14/Apr/08 12:48;bimargulies;Is this behavior really CXF-specific?,"14/Apr/08 13:10;wimv;Sean O'Callaghan resolved CXF-1502.
Resolution: Fixed
Fix Version/s: 2.1
Replaced org.apache.cxf.jaxws.javaee.String with org.apache.cxf.jaxws.javaee.CString

do you mean a) compared with other frameworks used in combination with spring, or do you mean b) did this problem exist in celtix.

a) yes
b) don't know, never used celtix","14/Apr/08 13:15;wimv;satish,

are you sure this is not a sping - CDATA issue? can you attach a stacktrace pls?","15/Apr/08 14:00;satishkumar.k;Hi Wim,

I think this is related to Spring 2.5 only since the same is working fine with Spring 2.0.4.

Here is the stack trace:
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'FIND_SYMB_HQL' defined in URL [jar:file:/D:/tools/jboss%204.0.5/server/darkhorse/./tmp/deploy/tmp21988APP-Batch-exp.war/WEB-INF/lib/sm-app-5.0-SNAPSHOT.jar!/context/context_query.xml]: Unsatisfied dependency expressed through constructor argument with index 1 of type [int]: Ambiguous constructor argument types - did you specify the correct bean references as constructor arguments?

            at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:556)

            at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:190)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:923)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:833)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:440)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)

            at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217)

            at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:269)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:104)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)

            at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217)

            at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:269)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:104)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:117)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:117)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:287)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:126)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:283)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)

            at com.om.dh.batch.core.EnhancedSchedulerFactoryBean.discoverJobs(EnhancedSchedulerFactoryBean.java:53)

            at com.om.dh.batch.core.EnhancedSchedulerFactoryBean.afterPropertiesSet(EnhancedSchedulerFactoryBean.java:37)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1367)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1333)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:471)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)

            at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217)

            at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:269)

            at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:104)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)

            at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217)

            at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)

            at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)

            at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)

            at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)

            at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)

            at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:255)

            at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199)

            at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45)

            at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3763)

            at org.apache.catalina.core.StandardContext.start(StandardContext.java:4211)

            at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)

            at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)

            at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at org.apache.commons.modeler.BaseModelMBean.invoke(BaseModelMBean.java:503)

            at org.jboss.mx.server.RawDynamicInvoker.invoke(RawDynamicInvoker.java:164)

            at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at org.apache.catalina.core.StandardContext.init(StandardContext.java:5052)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at org.apache.commons.modeler.BaseModelMBean.invoke(BaseModelMBean.java:503)

            at org.jboss.mx.server.RawDynamicInvoker.invoke(RawDynamicInvoker.java:164)

            at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at org.jboss.web.tomcat.tc5.TomcatDeployer.performDeployInternal(TomcatDeployer.java:297)

            at org.jboss.web.tomcat.tc5.TomcatDeployer.performDeploy(TomcatDeployer.java:103)

            at org.jboss.web.AbstractWebDeployer.start(AbstractWebDeployer.java:371)

            at org.jboss.web.WebModule.startModule(WebModule.java:83)

            at org.jboss.web.WebModule.startService(WebModule.java:61)

            at org.jboss.system.ServiceMBeanSupport.jbossInternalStart(ServiceMBeanSupport.java:289)

            at org.jboss.system.ServiceMBeanSupport.jbossInternalLifecycle(ServiceMBeanSupport.java:245)

            at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)

            at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:264)

            at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at org.jboss.system.ServiceController$ServiceProxy.invoke(ServiceController.java:978)

            at $Proxy0.start(Unknown Source)

            at org.jboss.system.ServiceController.start(ServiceController.java:417)

            at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)

            at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:264)

            at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy38.start(Unknown Source)

            at org.jboss.web.AbstractWebContainer.start(AbstractWebContainer.java:466)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java:133)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOperationInterceptor.java:142)

            at org.jboss.mx.interceptor.DynamicInterceptor.invoke(DynamicInterceptor.java:97)

            at org.jboss.system.InterceptorServiceMBeanSupport.invokeNext(InterceptorServiceMBeanSupport.java:238)

            at org.jboss.ws.integration.jboss.DeployerInterceptor.start(DeployerInterceptor.java:92)

            at org.jboss.deployment.SubDeployerInterceptorSupport$XMBeanInterceptor.start(SubDeployerInterceptorSupport.java:188)

            at org.jboss.deployment.SubDeployerInterceptor.invoke(SubDeployerInterceptor.java:95)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:264)

            at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy39.start(Unknown Source)

            at org.jboss.deployment.MainDeployer.start(MainDeployer.java:1025)

            at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:819)

            at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:782)

            at sun.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java:133)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOperationInterceptor.java:142)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:264)

            at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy9.deploy(Unknown Source)

            at org.jboss.deployment.scanner.URLDeploymentScanner.deploy(URLDeploymentScanner.java:421)

            at org.jboss.deployment.scanner.URLDeploymentScanner.scan(URLDeploymentScanner.java:634)

            at org.jboss.deployment.scanner.AbstractDeploymentScanner$ScannerThread.doScan(AbstractDeploymentScanner.java:263)

            at org.jboss.deployment.scanner.AbstractDeploymentScanner.startService(AbstractDeploymentScanner.java:336)

            at org.jboss.system.ServiceMBeanSupport.jbossInternalStart(ServiceMBeanSupport.java:289)

            at org.jboss.system.ServiceMBeanSupport.jbossInternalLifecycle(ServiceMBeanSupport.java:245)

            at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)

            at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:264)

            at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at org.jboss.system.ServiceController$ServiceProxy.invoke(ServiceController.java:978)

            at $Proxy0.start(Unknown Source)

            at org.jboss.system.ServiceController.start(ServiceController.java:417)

            at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)

            at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:264)

            at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy4.start(Unknown Source)

            at org.jboss.deployment.SARDeployer.start(SARDeployer.java:302)

            at org.jboss.deployment.MainDeployer.start(MainDeployer.java:1025)

            at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:819)

            at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:782)

            at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:766)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java:133)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOperationInterceptor.java:142)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:264)

            at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy5.deploy(Unknown Source)

            at org.jboss.system.server.ServerImpl.doStart(ServerImpl.java:482)

            at org.jboss.system.server.ServerImpl.start(ServerImpl.java:362)

            at org.jboss.Main.boot(Main.java:200)

            at org.jboss.Main$1.run(Main.java:490)

            at java.lang.Thread.run(Thread.java:595)
",15/Apr/08 14:55;sergey_beryozkin;I'm seeing  the same issue in the Spring-DM testing environment which relies on Spring 2.5.1+,"06/May/08 08:44;wimv;Satish,

During the update of spring and cxf, did you also update java from 1.4.x (or another version) to java 6 (1.6.x)? What java version are you using pls?

Also, (as a test), could you tell me the result of adding this to the spring config (or something similar for the first bean you get the error for) :


<bean id=""FIND_SYMB_HQL_SB"" class=""java.lang.StringBuffer"" >
            <constructor-arg>
                <value>
                    <![CDATA[
                       from Element o where 
o.elementRoot.underlyingInstrument.symbol = :symbol
                        and o.status = :status
                    ]]>
                </value>
            </constructor-arg>
        </bean>

also modify FIND_SYMB_HQL to be :

<bean id=""FIND_SYMB_HQL"" class=""java.lang.String"" >
            <constructor-arg>
                <ref bean=""FIND_SYMB_HQL_SB""/>
            </constructor-arg>
        </bean>


If you could give me the stacktrace of this of before AND after, this will hopefully leave me with a bit more info of the level this is giving problems at. 

I hope you agree that, technically, this should work. A string can be created from a StringBuffer in java 1.4.2 to current and vice versa.

I want to try this because of this :

>Could not convert constructor argument value of
>type [java.lang.String] to required type [java.lang.StringBuffer]


Wim","06/May/08 08:50;wimv;Satish,

I forgot to ask, can you please use the latest CXF snapshot ?
Here's the link :
http://people.apache.org/repo/m2-snapshot-repository/org/apache/cxf/apache-cxf/2.1.1-SNAPSHOT/

tnx,

wim","06/May/08 08:50;wimv;Hi Satish,

During the update of spring and cxf, did you also update java from 1.4.x (or
another version) to java 6 (1.6.x)? What java version are you using pls?

Also, (as a test), could you tell me the result of adding this to the spring
config (or something similar for the first bean you get the error for) :


<bean id=""FIND_SYMB_HQL_SB"" class=""java.lang.StringBuffer"" >
            <constructor-arg>
                <value>
                    <![CDATA[
                       from Element o where 
o.elementRoot.underlyingInstrument.symbol = :symbol
                        and o.status = :status
                    ]]>
                </value>
            </constructor-arg>
        </bean>

also modify FIND_SYMB_HQL to be :

<bean id=""FIND_SYMB_HQL"" class=""java.lang.String"" >
            <constructor-arg>
                <ref bean=""FIND_SYMB_HQL_SB""/>
            </constructor-arg>
        </bean>


If you could give me the stacktrace of this of before AND after, this will
hopefully leave me with a bit more info of the level this is giving problems
at. 

I hope you agree that, technically, this should work. A string can be
created from a StringBuffer in java 1.4.2 to current and vice versa.




Wim


-----Original Message-----
From: Satish Kumar Kommuri (JIRA) [mailto:jira@apache.org] 
Sent: dinsdag 15 april 2008 16:01
To: wim@pizzastop.be
Subject: [jira] Commented: (CXF-1390) Upgrade to Spring 2.5


    [
https://issues.apache.org/jira/browse/CXF-1390?page=com.atlassian.jira.plugi
n.system.issuetabpanels:comment-tabpanel&focusedCommentId=12589086#action_12
589086 ] 

Satish Kumar Kommuri commented on CXF-1390:
-------------------------------------------

Hi Wim,

I think this is related to Spring 2.5 only since the same is working fine
with Spring 2.0.4.

Here is the stack trace:
org.springframework.beans.factory.UnsatisfiedDependencyException: Error
creating bean with name 'FIND_SYMB_HQL' defined in URL
[jar:file:/D:/tools/jboss%204.0.5/server/darkhorse/./tmp/deploy/tmp21988APP-
Batch-exp.war/WEB-INF/lib/sm-app-5.0-SNAPSHOT.jar!/context/context_query.xml
]: Unsatisfied dependency expressed through constructor argument with index
1 of type [int]: Ambiguous constructor argument types - did you specify the
correct bean references as constructor arguments?

            at
org.springframework.beans.factory.support.ConstructorResolver.createArgument
Array(ConstructorResolver.java:556)

            at
org.springframework.beans.factory.support.ConstructorResolver.autowireConstr
uctor(ConstructorResolver.java:190)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.autowireConstructor(AbstractAutowireCapableBeanFactory.java:923)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.createBeanInstance(AbstractAutowireCapableBeanFactory.java:833)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.doCreateBean(AbstractAutowireCapableBeanFactory.java:440)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(Ab
stractBeanFactory.java:264)

            at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSi
ngleton(DefaultSingletonBeanRegistry.java:217)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(Abst
ractBeanFactory.java:261)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:185)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:164)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eReference(BeanDefinitionValueResolver.java:269)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eValueIfNecessary(BeanDefinitionValueResolver.java:104)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(Ab
stractBeanFactory.java:264)

            at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSi
ngleton(DefaultSingletonBeanRegistry.java:217)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(Abst
ractBeanFactory.java:261)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:185)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:164)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eReference(BeanDefinitionValueResolver.java:269)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eValueIfNecessary(BeanDefinitionValueResolver.java:104)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eInnerBean(BeanDefinitionValueResolver.java:219)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eValueIfNecessary(BeanDefinitionValueResolver.java:117)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eInnerBean(BeanDefinitionValueResolver.java:219)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eValueIfNecessary(BeanDefinitionValueResolver.java:117)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eManagedList(BeanDefinitionValueResolver.java:287)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eValueIfNecessary(BeanDefinitionValueResolver.java:126)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(Abst
ractBeanFactory.java:283)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:185)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:164)

            at
com.om.dh.batch.core.EnhancedSchedulerFactoryBean.discoverJobs(EnhancedSched
ulerFactoryBean.java:53)

            at
com.om.dh.batch.core.EnhancedSchedulerFactoryBean.afterPropertiesSet(Enhance
dSchedulerFactoryBean.java:37)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1367)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.initializeBean(AbstractAutowireCapableBeanFactory.java:1333)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.doCreateBean(AbstractAutowireCapableBeanFactory.java:471)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(Ab
stractBeanFactory.java:264)

            at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSi
ngleton(DefaultSingletonBeanRegistry.java:217)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(Abst
ractBeanFactory.java:261)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:185)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:164)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eReference(BeanDefinitionValueResolver.java:269)

            at
org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolv
eValueIfNecessary(BeanDefinitionValueResolver.java:104)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.populateBean(AbstractAutowireCapableBeanFactory.java:1008)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
$1.run(AbstractAutowireCapableBeanFactory.java:409)

            at java.security.AccessController.doPrivileged(Native Method)

            at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory
.createBean(AbstractAutowireCapableBeanFactory.java:380)

            at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(Ab
stractBeanFactory.java:264)

            at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSi
ngleton(DefaultSingletonBeanRegistry.java:217)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(Abst
ractBeanFactory.java:261)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:185)

            at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(Abstra
ctBeanFactory.java:164)

            at
org.springframework.beans.factory.support.DefaultListableBeanFactory.preInst
antiateSingletons(DefaultListableBeanFactory.java:429)

            at
org.springframework.context.support.AbstractApplicationContext.finishBeanFac
toryInitialization(AbstractApplicationContext.java:729)

            at
org.springframework.context.support.AbstractApplicationContext.refresh(Abstr
actApplicationContext.java:381)

            at
org.springframework.web.context.ContextLoader.createWebApplicationContext(Co
ntextLoader.java:255)

            at
org.springframework.web.context.ContextLoader.initWebApplicationContext(Cont
extLoader.java:199)

            at
org.springframework.web.context.ContextLoaderListener.contextInitialized(Con
textLoaderListener.java:45)

            at
org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:
3763)

            at
org.apache.catalina.core.StandardContext.start(StandardContext.java:4211)

            at
org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:7
59)

            at
org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)

            at
org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39
)

            at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl
.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at
org.apache.commons.modeler.BaseModelMBean.invoke(BaseModelMBean.java:503)

            at
org.jboss.mx.server.RawDynamicInvoker.invoke(RawDynamicInvoker.java:164)

            at
org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at
org.apache.catalina.core.StandardContext.init(StandardContext.java:5052)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39
)

            at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl
.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at
org.apache.commons.modeler.BaseModelMBean.invoke(BaseModelMBean.java:503)

            at
org.jboss.mx.server.RawDynamicInvoker.invoke(RawDynamicInvoker.java:164)

            at
org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at
org.jboss.web.tomcat.tc5.TomcatDeployer.performDeployInternal(TomcatDeployer
.java:297)

            at
org.jboss.web.tomcat.tc5.TomcatDeployer.performDeploy(TomcatDeployer.java:10
3)

            at
org.jboss.web.AbstractWebDeployer.start(AbstractWebDeployer.java:371)

            at org.jboss.web.WebModule.startModule(WebModule.java:83)

            at org.jboss.web.WebModule.startService(WebModule.java:61)

            at
org.jboss.system.ServiceMBeanSupport.jbossInternalStart(ServiceMBeanSupport.
java:289)

            at
org.jboss.system.ServiceMBeanSupport.jbossInternalLifecycle(ServiceMBeanSupp
ort.java:245)

            at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)

            at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl
.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at
org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java
:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)

            at
org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:26
4)

            at
org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at
org.jboss.system.ServiceController$ServiceProxy.invoke(ServiceController.jav
a:978)

            at $Proxy0.start(Unknown Source)

            at
org.jboss.system.ServiceController.start(ServiceController.java:417)

            at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)

            at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl
.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at
org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java
:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)

            at
org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:26
4)

            at
org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at
org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy38.start(Unknown Source)

            at
org.jboss.web.AbstractWebContainer.start(AbstractWebContainer.java:466)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39
)

            at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl
.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at
org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java
:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at
org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java
:133)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at
org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOpe
rationInterceptor.java:142)

            at
org.jboss.mx.interceptor.DynamicInterceptor.invoke(DynamicInterceptor.java:9
7)

            at
org.jboss.system.InterceptorServiceMBeanSupport.invokeNext(InterceptorServic
eMBeanSupport.java:238)

            at
org.jboss.ws.integration.jboss.DeployerInterceptor.start(DeployerInterceptor
.java:92)

            at
org.jboss.deployment.SubDeployerInterceptorSupport$XMBeanInterceptor.start(S
ubDeployerInterceptorSupport.java:188)

            at
org.jboss.deployment.SubDeployerInterceptor.invoke(SubDeployerInterceptor.ja
va:95)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at
org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:26
4)

            at
org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at
org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy39.start(Unknown Source)

            at
org.jboss.deployment.MainDeployer.start(MainDeployer.java:1025)

            at
org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:819)

            at
org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:782)

            at sun.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)

            at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl
.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at
org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java
:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at
org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java
:133)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at
org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOpe
rationInterceptor.java:142)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at
org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:26
4)

            at
org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at
org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy9.deploy(Unknown Source)

            at
org.jboss.deployment.scanner.URLDeploymentScanner.deploy(URLDeploymentScanne
r.java:421)

            at
org.jboss.deployment.scanner.URLDeploymentScanner.scan(URLDeploymentScanner.
java:634)

            at
org.jboss.deployment.scanner.AbstractDeploymentScanner$ScannerThread.doScan(
AbstractDeploymentScanner.java:263)

            at
org.jboss.deployment.scanner.AbstractDeploymentScanner.startService(Abstract
DeploymentScanner.java:336)

            at
org.jboss.system.ServiceMBeanSupport.jbossInternalStart(ServiceMBeanSupport.
java:289)

            at
org.jboss.system.ServiceMBeanSupport.jbossInternalLifecycle(ServiceMBeanSupp
ort.java:245)

            at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)

            at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl
.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at
org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java
:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)

            at
org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:26
4)

            at
org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at
org.jboss.system.ServiceController$ServiceProxy.invoke(ServiceController.jav
a:978)

            at $Proxy0.start(Unknown Source)

            at
org.jboss.system.ServiceController.start(ServiceController.java:417)

            at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)

            at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl
.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at
org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java
:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)

            at
org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:26
4)

            at
org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at
org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy4.start(Unknown Source)

            at org.jboss.deployment.SARDeployer.start(SARDeployer.java:302)

            at
org.jboss.deployment.MainDeployer.start(MainDeployer.java:1025)

            at
org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:819)

            at
org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:782)

            at
org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:766)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39
)

            at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl
.java:25)

            at java.lang.reflect.Method.invoke(Method.java:585)

            at
org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java
:155)

            at org.jboss.mx.server.Invocation.dispatch(Invocation.java:94)

            at
org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java
:133)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at
org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOpe
rationInterceptor.java:142)

            at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)

            at
org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:26
4)

            at
org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)

            at
org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:210)

            at $Proxy5.deploy(Unknown Source)

            at
org.jboss.system.server.ServerImpl.doStart(ServerImpl.java:482)

            at org.jboss.system.server.ServerImpl.start(ServerImpl.java:362)

            at org.jboss.Main.boot(Main.java:200)

            at org.jboss.Main$1.run(Main.java:490)

            at java.lang.Thread.run(Thread.java:595)


cxf-spring-error_stacktrace.rtf
creating bean with name 'jrulesService': Unsatisfied dependency expressed
through constructor argument with index 2 of type
[org.apache.cxf.jaxws.JaxWsServerFactoryBean]: Ambiguous constructor
argument types - did you specify the correct bean references as constructor
arguments?

-- 
This message is automatically generated by JIRA.
-
You can reply to this email to add a comment to the issue online.


","11/Jun/08 00:22;wimv;Hi everyone,

Because of several questions it seemed wise to me to add this information as a comment :-)
In most cases , the "" Unsatisfied dependency expressed through constructor argument with index "" + a number will be caused by incorrectly specifying constuctor arguments in spring beans related to or belonging to cxf.

The error can (imho) be a bit misleading and I would advise you to certainly check the API reference for the required and optional constructor arguments.
Check the bean that causes the error and look for errors in the constructor arguments. (or missing, wronly specifeid, deprecated, you get the idea...etc arguments).
If you are learning from examples use the most recent ones to avoid this problem.

wim




","11/Jun/08 00:29;wimv;>Satish
Have you tried using Spring 2.5.4? What is the current status on this issue with <![CDATA[ ]]>?

wim

","02/Sep/08 20:29;dkulp;
Trunk (2.2) is now using 2.5.4.    (2.1.x uses 2.0.8 by default, but is tested with 2.5.4 in IONA)",,,,,,,,,,,,,,,
WSDLValidator not working from command line in current 2.1 snapshot,CXF-1389,12386050,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,11/Jan/08 13:23,30/Apr/08 14:57,14/Mar/19 02:28,05/Mar/08 03:05,2.1,,,,,,,2.1,,Tooling,,,,,0,"I can run the attached WSDL through the validator with no problems by running the validator tool from inside Eclipse. When I run from the linux command line,  I get the following:

WSDLValidator Error : 
line 2 column 344 of file:/home/benson/downloads/aegis.wsdl: cvc-elt.1: Cannot find the declaration of element 'wsdl:definitions'.

This has to be some sort of catalog problem.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-27 18:47:56.225,,,no_permission,,,,,,,,,,,,,112196,,,Wed Feb 27 18:47:56 UTC 2008,,,,,,0|i1ab7j:,268282,,,,,,,,"27/Feb/08 18:47;dkulp;
This seems to be working fine for me right now.   Can you give it another try?

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error when running client generated by Wsdl2Java tool 'org.apache.ws.commons.schema.constants.Enum$EnumValueException: Bad Enumeration value 'extension restriction'',CXF-1388,12386022,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,gotosleep,gotosleep,11/Jan/08 05:38,02/May/13 02:29,14/Mar/19 02:28,15/Apr/08 15:17,2.0.3,,,,,,,2.0.6,2.1,,,,,,2,"I am getting this error when running the main method of the client created by wsdl2java.  Wsdl does have a schema import.

I am now getting this when using the wsdl2java tool.

WSDLToJava Error : java.lang.RuntimeException: org.apache.ws.commons.schema.constants.Enum$EnumValueException: Bad Enumeration value 'extension restriction'

""C:\Program Files\Java\jdk1.5.0_11\bin\java"" -Xdebug -Xrunjdwp:transport=dt_socket,address=127.0.0.1:1470,suspend=y,server=n -Dfile.encoding=windows-1252 -classpath ""C:\Program Files\Java\jdk1.5.0_11\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.5.0_11\jre\lib\ext\sunpkcs11.jar;C:\Development\BpmCxfClient\target\classes;C:\Documents and Settings\djwilli\.m2\repository\javax\xml\ws\jaxws-api\2.0\jaxws-api-2.0.jar;C:\Documents and Settings\djwilli\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Documents and Settings\djwilli\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.1\wstx-asl-3.2.1.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\geronimo\specs\geronimo-javamail_1.4_spec\1.0-M1\geronimo-javamail_1.4_spec-1.0-M1.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\neethi\neethi\2.0.2\neethi-2.0.2.jar;C:\Documents and Settings\djwilli\.m2\repository\javax\xml\bind\jaxb-api\2.0\jaxb-api-2.0.jar;C:\Documents and Settings\djwilli\.m2\repository\org\slf4j\slf4j-jdk14\1.3.1\slf4j-jdk14-1.3.1.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\geronimo\specs\geronimo-servlet_2.5_spec\1.1-M1\geronimo-servlet_2.5_spec-1.1-M1.jar;C:\Documents and Settings\djwilli\.m2\repository\velocity\velocity-dep\1.4\velocity-dep-1.4.jar;C:\Documents and Settings\djwilli\.m2\repository\commons-logging\commons-logging\1.1\commons-logging-1.1.jar;C:\Documents and Settings\djwilli\.m2\repository\javax\xml\soap\saaj-api\1.3\saaj-api-1.3.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\geronimo\specs\geronimo-activation_1.1_spec\1.0-M1\geronimo-activation_1.1_spec-1.0-M1.jar;C:\Documents and Settings\djwilli\.m2\repository\velocity\velocity\1.4\velocity-1.4.jar;C:\Documents and Settings\djwilli\.m2\repository\org\slf4j\slf4j-api\1.3.1\slf4j-api-1.3.1.jar;C:\Documents and Settings\djwilli\.m2\repository\wsdl4j\wsdl4j\1.6.1\wsdl4j-1.6.1.jar;C:\Documents and Settings\djwilli\.m2\repository\com\sun\xml\messaging\saaj\saaj-impl\1.3\saaj-impl-1.3.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\geronimo\specs\geronimo-annotation_1.0_spec\1.1\geronimo-annotation_1.0_spec-1.1.jar;C:\Documents and Settings\djwilli\.m2\repository\commons-lang\commons-lang\2.1\commons-lang-2.1.jar;C:\Documents and Settings\djwilli\.m2\repository\com\sun\xml\bind\jaxb-xjc\2.0\jaxb-xjc-2.0.jar;C:\Documents and Settings\djwilli\.m2\repository\xml-resolver\xml-resolver\1.2\xml-resolver-1.2.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\geronimo\specs\geronimo-ws-metadata_2.0_spec\1.1.1\geronimo-ws-metadata_2.0_spec-1.1.1.jar;C:\Documents and Settings\djwilli\.m2\repository\com\sun\xml\bind\jaxb-impl\2.0.5\jaxb-impl-2.0.5.jar;C:\Documents and Settings\djwilli\.m2\repository\org\springframework\spring-beans\2.0.6\spring-beans-2.0.6.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-rt-transports-http\2.0.4-incubator-SNAPSHOT\cxf-rt-transports-http-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\mortbay\jetty\jetty-util\6.1.6\jetty-util-6.1.6.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-tools-common\2.0.4-incubator-SNAPSHOT\cxf-tools-common-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-rt-frontend-simple\2.0.4-incubator-SNAPSHOT\cxf-rt-frontend-simple-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-rt-bindings-soap\2.0.4-incubator-SNAPSHOT\cxf-rt-bindings-soap-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\springframework\spring-context\2.0.6\spring-context-2.0.6.jar;C:\Documents and Settings\djwilli\.m2\repository\org\springframework\spring-web\2.0.6\spring-web-2.0.6.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-rt-frontend-jaxws\2.0.4-incubator-SNAPSHOT\cxf-rt-frontend-jaxws-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-rt-core\2.0.4-incubator-SNAPSHOT\cxf-rt-core-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\ws\commons\schema\XmlSchema\1.3.2\XmlSchema-1.3.2.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-common-schemas\2.0.4-incubator-SNAPSHOT\cxf-common-schemas-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-rt-databinding-jaxb\2.0.4-incubator-SNAPSHOT\cxf-rt-databinding-jaxb-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;C:\Documents and Settings\djwilli\.m2\repository\org\springframework\spring-core\2.0.6\spring-core-2.0.6.jar;C:\Documents and Settings\djwilli\.m2\repository\org\mortbay\jetty\jetty\6.1.6\jetty-6.1.6.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-common-utilities\2.0.4-incubator-SNAPSHOT\cxf-common-utilities-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-rt-transports-http-jetty\2.0.4-incubator-SNAPSHOT\cxf-rt-transports-http-jetty-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-api\2.0.4-incubator-SNAPSHOT\cxf-api-2.0.4-incubator-SNAPSHOT.jar;C:\Documents and Settings\djwilli\.m2\repository\org\apache\cxf\cxf-rt-bindings-xml\2.0.4-incubator-SNAPSHOT\cxf-rt-bindings-xml-2.0.4-incubator-SNAPSHOT.jar;C:\Program Files\JetBrains\IntelliJ IDEA 7.0.2\lib\idea_rt.jar"" com.bea.albpm.papiwebservice.PapiWebServiceClient http://djwilli-2:8585/papiws/PapiWebServiceEndpoint?wsdl
Connected to the target VM, address: '127.0.0.1:1470', transport: 'socket'
Jan 10, 2008 11:28:39 PM org.springframework.context.support.AbstractApplicationContext prepareRefresh
INFO: Refreshing org.apache.cxf.bus.spring.BusApplicationContext@5e55ab: display name [org.apache.cxf.bus.spring.BusApplicationContext@5e55ab]; startup date [Thu Jan 10 23:28:39 CST 2008]; root of context hierarchy
Jan 10, 2008 11:28:39 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
Jan 10, 2008 11:28:40 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-http.xml]
Jan 10, 2008 11:28:40 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
Jan 10, 2008 11:28:40 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-jaxws.xml]
Jan 10, 2008 11:28:41 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-http-jetty.xml]
Jan 10, 2008 11:28:41 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-http.xml]
Jan 10, 2008 11:28:41 PM org.springframework.beans.factory.support.DefaultListableBeanFactory registerBeanDefinition
INFO: Overriding bean definition for bean 'org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory': replacing [Root bean: class [org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory]; scope=singleton; abstract=false; lazyInit=true; autowireCandidate=true; autowireMode=0; dependencyCheck=0; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [META-INF/cxf/cxf-extension-http.xml]] with [Root bean: class [org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory]; scope=singleton; abstract=false; lazyInit=true; autowireCandidate=true; autowireMode=0; dependencyCheck=0; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [META-INF/cxf/cxf-extension-http.xml]]
Jan 10, 2008 11:28:41 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-xml.xml]
Jan 10, 2008 11:28:42 PM org.springframework.context.support.AbstractApplicationContext obtainFreshBeanFactory
INFO: Bean factory for application context [org.apache.cxf.bus.spring.BusApplicationContext@5e55ab]: org.springframework.beans.factory.support.DefaultListableBeanFactory@6458a6
Jan 10, 2008 11:28:42 PM org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker postProcessAfterInitialization
INFO: Bean 'org.apache.cxf.bus.spring.Jsr250BeanPostProcessor' is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Jan 10, 2008 11:28:42 PM org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker postProcessAfterInitialization
INFO: Bean 'org.apache.cxf.bus.spring.BusExtensionPostProcessor' is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Jan 10, 2008 11:28:42 PM org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons
INFO: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6458a6: defining beans [cxf,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.resource.ResourceManager,org.apache.cxf.configuration.Configurer,org.apache.cxf.binding.BindingFactoryManager,org.apache.cxf.transport.DestinationFactoryManager,org.apache.cxf.transport.ConduitInitiatorManager,org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.phase.PhaseManager,org.apache.cxf.workqueue.WorkQueueManager,org.apache.cxf.buslifecycle.BusLifeCycleManager,org.apache.cxf.endpoint.ServerRegistry,org.apache.cxf.endpoint.ServerLifeCycleManager,org.apache.cxf.endpoint.ClientLifeCycleManager,org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.endpoint.EndpointResolverRegistry,org.apache.cxf.headers.HeaderManager,org.apache.cxf.catalog.OASISCatalogManager,org.apache.cxf.endpoint.ServiceContractResolverRegistry,org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder,org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder,org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,org.apache.cxf.jaxws.context.WebServiceContextResourceResolver,org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder#1,org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder#1,org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory,org.apache.cxf.binding.xml.XMLBindingFactory]; root of factory hierarchy
Exception in thread ""main"" java.lang.RuntimeException: org.apache.ws.commons.schema.constants.Enum$EnumValueException: Bad Enumeration value 'extension restriction'
	at org.apache.ws.commons.schema.SchemaBuilder.resolveXmlSchema(SchemaBuilder.java:1886)
	at org.apache.ws.commons.schema.SchemaBuilder.resolveXmlSchema(SchemaBuilder.java:1902)
	at org.apache.ws.commons.schema.SchemaBuilder.handleImport(SchemaBuilder.java:1627)
	at org.apache.ws.commons.schema.SchemaBuilder.handleXmlSchemaElement(SchemaBuilder.java:175)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:364)
	at org.apache.cxf.common.xmlschema.SchemaCollection.read(SchemaCollection.java:110)
	at org.apache.cxf.wsdl11.SchemaUtil.extractSchema(SchemaUtil.java:103)
	at org.apache.cxf.wsdl11.SchemaUtil.getSchemas(SchemaUtil.java:63)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.getSchemas(WSDLServiceBuilder.java:263)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:238)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:150)
	at org.apache.cxf.wsdl11.WSDLServiceFactory.create(WSDLServiceFactory.java:117)
	at org.apache.cxf.jaxws.ServiceImpl.initializePorts(ServiceImpl.java:136)
	at org.apache.cxf.jaxws.ServiceImpl.<init>(ServiceImpl.java:127)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createServiceDelegate(ProviderImpl.java:55)
	at javax.xml.ws.Service.<init>(Service.java:57)
	at com.bea.albpm.papiwebservice.PapiWebService_Service.<init>(PapiWebService_Service.java:53)
	at com.bea.albpm.papiwebservice.PapiWebServiceClient.main(PapiWebServiceClient.java:64)
Caused by: org.apache.ws.commons.schema.constants.Enum$EnumValueException: Bad Enumeration value 'extension restriction'
	at org.apache.ws.commons.schema.constants.Enum.setValue(Enum.java:49)
	at org.apache.ws.commons.schema.constants.Enum.<init>(Enum.java:27)
	at org.apache.ws.commons.schema.XmlSchemaDerivationMethod.<init>(XmlSchemaDerivationMethod.java:46)
	at org.apache.ws.commons.schema.SchemaBuilder.handleComplexType(SchemaBuilder.java:657)
	at org.apache.ws.commons.schema.SchemaBuilder.handleXmlSchemaElement(SchemaBuilder.java:157)
	at org.apache.ws.commons.schema.SchemaBuilder.build(SchemaBuilder.java:82)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:359)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:304)
	at org.apache.ws.commons.schema.SchemaBuilder.resolveXmlSchema(SchemaBuilder.java:1884)
	... 17 more
Disconnected from the target VM, address: '127.0.0.1:1470', transport: 'socket'

Process finished with exit code 1
",Windows XP - Intellij Idea,,,,,,,,,,,,,,WSCOMMONS-273,,23/Jan/08 13:44;java_geek;java_first_jaxws_bug.zip;https://issues.apache.org/jira/secure/attachment/12373826/java_first_jaxws_bug.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-21 20:41:44.468,,,no_permission,,Advanced,,,,,,,,,,,112195,,,Tue Apr 08 14:38:48 UTC 2008,,,,,,0|i0uxx3:,178636,,,,,,,,"21/Jan/08 20:41;dkulp;
This is a bug in the ws-commons XmlSchema engine that we use.   We need a fix from them first.   It's apparently fixed in their trunk, but they don't have  a release available yet with the fix in it.

","23/Jan/08 13:44;java_geek;If someone is interested to reproduce bug, you can find it in attachment. Unzip content and place in sample directory of Cxf binary installation. 

Then run ""ant server"" and you should get error.

This example is Java-first scenario, bunch of pojos that form tree structure, and basic send over the wire.

Simple as it can be.

I would be more than glad to hear this is some kind of my mistake.

Regards

Environment:
JDK 1.5, Windows, Ant 1.6.5, Cxf 2.0.3",06/Apr/08 07:54;wimv;you are using Spring 2.5. I think this can be related to CFX-1502,"08/Apr/08 14:38;dkulp;
We managed to finally get a new version of XmlSchema (version 1.4) from the ws folks that appears to fix this.   I have the trunk (2.1) and 2.0.x fixes branch both updated to use it.   I'll get new snapshots deployed that have it in place.

I'd appreciate it if someone could give it a download and make sure it really does checkout fine.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl: NullPointerException on @WebService interface throwing custom Exception,CXF-1386,12385954,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pbuyle,pbuyle,10/Jan/08 09:33,30/Apr/08 15:00,14/Mar/19 02:28,25/Feb/08 21:48,2.0.3,,,,,,,2.0.5,,Tooling,,,,,0,"java2wsdl throw an NullPointerException  when generating for  WSDL for this simple service interface

 -- Service.java --
import javax.jws.WebService;
@WebService()
public interface Service
{
      void operation() throws ServiceException;
}

-- ServiceException.java --
import javax.xml.ws.WebFault;
@WebFault(name=""ServiceFault"")
public class ServiceException extends Exception
{
	private static final long serialVersionUID = 4857896282591349073L;

	public ServiceException(String message)
	{
		super(message);
	}
	
	public ServiceException(String message, Throwable cause)
	{
		super(message, cause);
	}
}

-- command log --
java2wsdl -verbose Service
java2wsdl - Apache CXF (incubator) 2.0.3-incubator

07-janv.-2008 13:57:43 org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor process
INFO: Classpath before Java2Wsdl: [...]
07-janv.-2008 13:57:43 org.springframework.context.support.AbstractApplicationContext prepareRefresh
INFO: Refreshing org.apache.cxf.bus.spring.BusApplicationContext@1542a75: display name [org.apache.cxf.bus.spring.BusApplicationContext@1542a75]; startup date [Mon Jan 07 13:57:43 CET 2008]; root of context hierarchy
07-janv.-2008 13:57:43 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
07-janv.-2008 13:57:43 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
07-janv.-2008 13:57:43 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-management.xml]
07-janv.-2008 13:57:43 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-rm.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-addr.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-http-binding.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-jms.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-jaxws.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-local.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-http-jetty.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-http.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-object-binding.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-http.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.support.DefaultListableBeanFactory registerBeanDefinition
INFO: Overriding bean definition for bean 'org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory': replacing [Root bean: class [org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory]; scope=singleton; abstract=false; lazyInit=true; autowireCandidate=true; autowireMode=0; dependencyCheck=0; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [META-INF/cxf/cxf-extension-http.xml]] with [Root bean: class [org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory]; scope=singleton; abstract=false; lazyInit=true; autowireCandidate=true; autowireMode=0; dependencyCheck=0; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [META-INF/cxf/cxf-extension-http.xml]]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-policy.xml]
07-janv.-2008 13:57:44 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-xml.xml]
07-janv.-2008 13:57:44 org.springframework.context.support.AbstractApplicationContext obtainFreshBeanFactory
INFO: Bean factory for application context [org.apache.cxf.bus.spring.BusApplicationContext@1542a75]: org.springframework.beans.factory.support.DefaultListableBeanFactory@1fbfd6
07-janv.-2008 13:57:44 org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker postProcessAfterInitialization
INFO: Bean 'org.apache.cxf.bus.spring.Jsr250BeanPostProcessor' is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
07-janv.-2008 13:57:44 org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker postProcessAfterInitialization
INFO: Bean 'org.apache.cxf.bus.spring.BusExtensionPostProcessor' is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
07-janv.-2008 13:57:44 org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons
INFO: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1fbfd6: defining beans [cxf,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.resource.ResourceManager,org.apache.cxf.configuration.Configurer,org.apache.cxf.binding.BindingFactoryManager,org.apache.cxf.transport.DestinationFactoryManager,org.apache.cxf.transport.ConduitInitiatorManager,org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.phase.PhaseManager,org.apache.cxf.workqueue.WorkQueueManager,org.apache.cxf.buslifecycle.BusLifeCycleManager,org.apache.cxf.endpoint.ServerRegistry,org.apache.cxf.endpoint.ServerLifeCycleManager,org.apache.cxf.endpoint.ClientLifeCycleManager,org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.endpoint.EndpointResolverRegistry,org.apache.cxf.headers.HeaderManager,org.apache.cxf.catalog.OASISCatalogManager,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,org.apache.cxf.management.jmx.InstrumentationManagerImpl,org.apache.cxf.ws.rm.RMManager,org.apache.cxf.ws.rm.policy.RMPolicyInterceptorProvider,org.apache.cxf.ws.rm.RMAssertionBuilder,org.apache.cxf.ws.addressing.policy.AddressingAssertionBuilder,org.apache.cxf.ws.addressing.policy.AddressingPolicyInterceptorProvider,org.apache.cxf.ws.addressing.policy.UsingAddressingAssertionBuilder,org.apache.cxf.binding.http.HttpBindingFactory,org.apache.cxf.transport.jms.JMSTransportFactory,org.apache.cxf.jaxws.context.WebServiceContextResourceResolver,org.apache.cxf.transport.local.LocalTransportFactory,org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder,org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder,org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory,org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory,org.apache.cxf.binding.object.ObjectBindingFactory,org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder#1,org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder#1,org.apache.cxf.ws.policy.AssertionBuilderRegistry,org.apache.cxf.ws.policy.PolicyConstants,org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.attachment.external.DomainExpressionBuilderRegistry,org.apache.cxf.ws.policy.attachment.external.EndpointReferenceDomainExpressionBuilder,org.apache.cxf.ws.policy.PolicyBuilder,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider,org.apache.cxf.ws.policy.attachment.ServiceModelPolicyProvider,org.apache.cxf.ws.policy.mtom.MTOMAssertionBuilder,org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptorProvider,org.apache.cxf.binding.xml.XMLBindingFactory]; root of factory hierarchy
07-janv.-2008 13:57:44 org.apache.cxf.configuration.spring.ConfigurerImpl <init>
INFO: Could not find the configuration file cxf.xml on the classpath.
07-janv.-2008 13:57:44 org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromClass
INFO: Creating Service {http://unknown.namespace/}ServiceService from class Service
07-janv.-2008 13:57:44 org.apache.cxf.service.factory.ReflectionServiceFactoryBean fillInSchemaCrossreferences
GRAVE: Schema element {http://unknown.namespace/}ServiceFault references undefined type {http://unknown.namespace/}ServiceFault for service {http://unknown.namespace/}ServiceService.
07-janv.-2008 13:57:45 org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.Wrapper isWrapperBeanClassNotExist
INFO: Trying to load wrapper class defaultnamespace.jaxws.Operation
07-janv.-2008 13:57:45 org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.Wrapper getWrapperClass
ATTENTION: Can not load wrapper class defaultnamespace.jaxws.Operation, please check the @RequestWrapper or @ResponseWrapper and also check the class is in your classpath
07-janv.-2008 13:57:45 org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.Wrapper isWrapperBeanClassNotExist
INFO: Trying to load wrapper class defaultnamespace.jaxws.OperationResponse
07-janv.-2008 13:57:45 org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.Wrapper getWrapperClass
ATTENTION: Can not load wrapper class defaultnamespace.jaxws.OperationResponse, please check the @RequestWrapper or @ResponseWrapper and also check the class is in your classpath
Error: null

java.lang.NullPointerException
	at org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.FaultBean.transform(FaultBean.java:64)
	at org.apache.cxf.tools.java2wsdl.generator.wsdl11.FaultBeanGenerator.generateBeanClasses(FaultBeanGenerator.java:60)
	at org.apache.cxf.tools.java2wsdl.generator.wsdl11.BeanGenerator.generate(BeanGenerator.java:54)
	at org.apache.cxf.tools.java2wsdl.generator.wsdl11.BeanGenerator.generate(BeanGenerator.java:34)
	at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor.generate(JavaToProcessor.java:134)
	at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor.process(JavaToProcessor.java:101)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDLContainer.execute(JavaToWSDLContainer.java:58)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDL.run(JavaToWSDL.java:74)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDL.main(JavaToWSDL.java:42)
JavaToWSDL Error : null

org.apache.cxf.tools.common.ToolException
	at org.apache.cxf.tools.java2wsdl.JavaToWSDLContainer.execute(JavaToWSDLContainer.java:75)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDL.run(JavaToWSDL.java:74)
	at org.apache.cxf.tools.java2wsdl.JavaToWSDL.main(JavaToWSDL.java:42)
","Windows XP, jdk1.5.0_11 and jdk1.6.0_01",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-25 21:48:51.807,,,no_permission,,,,,,,,,,,,,112193,,,Mon Feb 25 21:48:51 UTC 2008,,,,,,0|i1ab7r:,268283,,,,,,,,"25/Feb/08 21:48;dkulp;
This appears to be an issue with classes (specifically exceptions) in the default package (no package statement).   I've gone through the entire codebase greping for ""getPackage()"" (which returns null in that case) to make sure it's properly guarded.   I've tested using the above code and it does properly generate a wsdl now.

That said, the workaround should be to put everything in packages.   It's generally considered bad practice to not put code is proper packages. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
extensibleElement default is wrong for the Aegis-specific @XmlType annotation,CXF-1383,12385943,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,10/Jan/08 03:00,29/Jan/08 21:52,14/Mar/19 02:28,10/Jan/08 03:02,2.0.3,,,,,,,2.0.4,2.1,Aegis Databinding,,,,,0,"The @XmlType in Aegis defaults to extensible elements. It should not.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112190,,,Thu Jan 10 03:02:35 UTC 2008,,,,,,0|i1ab87:,268285,,,,,,,,10/Jan/08 03:02;bmargulies;svn 610653. Assigning to Dan for 2.0.4 port if he cares to.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis runs into schema validation WARNING with interceptors,CXF-1382,12385942,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,10/Jan/08 02:58,30/Apr/08 14:57,14/Mar/19 02:28,16/Jan/08 22:02,2.1,,,,,,,2.1,,Aegis Databinding,,,,,0,"If you run org.apache.cxf.javascript.AegisTest, you will see traffic like the following in the log. I think the WARNING needs to be attended to somehow.


Payload: <?xml version=""1.0"" encoding=""UTF-8""?><soap-env:Envelope xmlns:soap-env=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""><soap-env:Body xmlns:jns0='http://fortest.javascript.cxf.apache.org/' xmlns:jns1='http://aegis.fortest.javascript.cxf.apache.org' xmlns:jns2='http://cxf.apache.org/arrays' ><jns0:acceptObjects xmlns:jns0='http://fortest.javascript.cxf.apache.org/' ><jns0:anything xmlns:jns0='http://fortest.javascript.cxf.apache.org/' ><jns0:anyType xmlns:cxfjst0='http://aegis.fortest.javascript.cxf.apache.org' xsi:type='cxfjst0:Mammal'><name xmlns='http://aegis.fortest.javascript.cxf.apache.org'>cat</name></jns0:anyType><jns0:anyType >http://www.w3.org/2001/XMLSchema</jns0:anyType></jns0:anything></jns0:acceptObjects></soap-env:Body></soap-env:Envelope>
--------------------------------------
Jan 9, 2008 9:53:05 PM org.apache.cxf.wsdl.EndpointReferenceUtils getSchema
WARNING: SAXException for newSchema()
org.xml.sax.SAXParseException: src-resolve.4.2: Error resolving component 'ns1:ArrayOfAnyType'. It was detected that 'ns1:ArrayOfAnyType' is in namespace 'http://cxf.apache.org/arrays', but components from this namespace are not referenceable from schema document 'null'. If this is the incorrect namespace, perhaps the prefix of 'ns1:ArrayOfAnyType' needs to be changed. If this is the correct namespace, then an appropriate 'import' tag should be added to 'null'.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaError(XSDHandler.java:2241)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getGlobalDecl(XSDHandler.java:1192)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseNamedElement(XSDElementTraverser.java:376)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseLocal(XSDElementTraverser.java:214)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.traverseLocalElements(XSDHandler.java:1781)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:484)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:556)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadGrammar(XMLSchemaLoader.java:523)
	at com.sun.org.apache.xerces.internal.jaxp.validation.xs.SchemaFactoryImpl.newSchema(SchemaFactoryImpl.java:206)
	at org.apache.cxf.wsdl.EndpointReferenceUtils.getSchema(EndpointReferenceUtils.java:495)
	at org.apache.cxf.interceptor.AbstractInDatabindingInterceptor.setSchemaInMessage(AbstractInDatabindingInterceptor.java:104)
	at org.apache.cxf.interceptor.AbstractInDatabindingInterceptor.getDataReader(AbstractInDatabindingInterceptor.java:86)
	at org.apache.cxf.interceptor.AbstractInDatabindingInterceptor.getDataReader(AbstractInDatabindingInterceptor.java:93)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:69)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:78)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:297)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:243)
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:722)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:842)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:648)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:205)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)
J",,,,,,,,,,,,,,,,,11/Jan/08 16:22;bmargulies;SchemaFactoryBug.java;https://issues.apache.org/jira/secure/attachment/12372985/SchemaFactoryBug.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112189,,,Fri Jan 11 16:22:44 UTC 2008,,,,,,0|i1ab8f:,268286,,,,,,,,"11/Jan/08 13:03;bmargulies;To tell the story in a bit more detail,

Nothing in Aegis suppresses schema validation as configured from an endpoint. However, the schemata that Aegis delivers are rejected by the JDK 1.5 Xerces reader. I have some initial indications that some of these problems are Xerces bugs.

Should we add a protocol for a binding to say 'don't even try to do schema validation with me'?
","11/Jan/08 16:22;bmargulies;This program works, so why does EndpointReferenceUtils fail? The namespace tricks?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tools tests fail on Linux,CXF-1379,12346289,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,lkuehne,lkuehne,19/Jul/06 20:44,03/Jul/08 17:19,14/Mar/19 02:27,26/May/08 22:55,,,,,,,,2.1.1,,CORBA Binding,,,,,0,"Several tests in WSDLToIDLTest fail on Linux, e.g.


[surefire] testBindAndIDLGen(org.apache.yoko.tools.WSDLToIDLTest)  Time elapsed: 0.091 sec  <<< ERROR!
java.lang.NullPointerException
        at org.apache.yoko.tools.WSDLToIDLTest.testBindAndIDLGen(WSDLToIDLTest.java:238)

The problem is that the file in resources/wsdl is called simple-binding.wsdl, while it is sometime referenced with a capital 'B'. This will fail on systems with a case sensitive filesystem, like Linux/Unix and probably also Mac OS X

         String[] cmdArgs = {""-i"", ""BasePortType"",
                            ""-b"", ""BaseOneCORBABinding"",
                            ""-d"", output.getCanonicalPath(),
// the following call to getResource() will work on Windows (case insensitive filesystem) but return null on Linux/Unix
                            getClass().getResource(""/wsdl/simple-Binding.wsdl"").toString()};
        int exc = execute(cmdArgs);
        assertEquals(""WSDLToIDL Failed"", noError, exc);

        File f1 = new File(output, ""simple-Binding-corba.wsdl"");
        assertTrue(""simple-Binding-corba.wsdl should be generated"", f1.exists());
        File f2 = new File(output, ""simple-binding.idl"");
        assertTrue(""simple-binding.idl should be generated"", f2.exists());
",Linux,,,,,,,,,,,,,,,,20/Jul/06 15:19;matteo.vescovi;WSDLToIDLTest_linux_failures_fix.diff;https://issues.apache.org/jira/secure/attachment/12337253/WSDLToIDLTest_linux_failures_fix.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-07-20 15:19:09.0,,,no_permission,,,,,,,,,,,,,112186,,,Mon May 26 22:55:57 UTC 2008,,,,,,0|i13zsf:,231428,,,,,,,,"20/Jul/06 15:19;matteo.vescovi;Fixed simple-binding.wsdl v.s. simple-Binding.wsdl mismatch.

","20/Jul/06 15:28;matteo.vescovi;On Linux, tools test might fail if the locale specifies 'ISO8859_15' file encoding.

Class com.ibm.wsdl.xml.WSDLWriter (wsdl4j) throws a WSDLException when method writeWSDL() is invoked and file encoding 'ISO8859_15' is in use.

The exception thrown is:

The exception is  WSDLException: faultCode=CONFIGURATION_ERROR: 
Unsupported Java encoding for writing wsdl file: 'ISO8859_15'.:

A workaround is to change the locale setting to use a different encoding, such as UTF-8.

","24/Jul/06 13:21;bravi;I have applied the patch, but i haven't closed this issue because it seems we have an outstanding problem in linux...","07/Mar/07 20:15;lkuehne;Matteo, how exactly do you trigger the ISO8859_1 problem you mentioned in your comment? Do you set LANG=en_US.ISO8859_15? 

Have you tried to use the nio name, iso-8859-15, instead of ISO8859_15?

http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html","26/May/08 22:55;bmargulies;I checked all the uses of the WSDLWriter, and I fixed the only one that wasn't using a UTF-8 stream.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wsdltoidl fails to generate correct typemap to support Anonymous Structs.,CXF-1378,12370178,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,edellnolan,edellnolan,24/May/07 16:25,05/Oct/09 19:37,14/Mar/19 02:28,28/Sep/09 21:15,,,,,,,,2.2.3,,CORBA Binding,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112185,,,Fri Jun 01 16:18:58 UTC 2007,,,,,,0|i1a96v:,267955,,,,,,,,"01/Jun/07 10:56;edellnolan;Merged support for this.

Edell.",01/Jun/07 16:18;edellnolan;Causing failures in the tests. So needs more investigation.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IDLToWSDL tool cannot handle includes,CXF-1368,12366047,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bravi,bravi,28/Mar/07 17:58,13/Nov/09 17:27,14/Mar/19 02:28,28/Oct/09 17:16,,,,,,,,2.1.4,,CORBA Binding,,,,,0,The IDLToWSDL tool cannot handle the include of another idl.,,,,,,,,,,,,,,,,,05/Apr/07 17:01;bravi;preprocessor.patch;https://issues.apache.org/jira/secure/attachment/12355022/preprocessor.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-05 10:41:20.433,,,no_permission,,,,,,,,,,,,,50436,,,Wed Oct 28 17:16:32 UTC 2009,,,,,,0|i1a88f:,267800,,,,,,,,"05/Apr/07 10:41;matteo.vescovi;OMG IDL is preprocessed according to the specification of the preprocessor in ""International Organization for Standardization. 1998. ISO/IEC 14882 Standard for the C++ Programming Language. Geneva: International Organization for Standardization."" The preprocessor may be implemented as a separate process or built into the IDL compiler.

The main task here is writing a preprocessor. Is there an open-source Java implementation that we can reuse?

Once the IDL file has been preprocessed, the IDLToWSDLProcessor class will feed it as a stream to ANTLR and everything will work transparently:

// line 76
        IDLParser parser = new IDLParser(new IDLLexer(stream));
        parser.specification();
        AST idlTree = parser.getAST();

The main point here is that the stream passed to IDLLexer is connected to preprocessed file, instead of the original unpreprocessed IDL file.
","05/Apr/07 17:01;bravi;Attached an initial version of the pre-processor that handles the ifndef, define & include directives. Can someone do a quick review before i commit it... 

Thanks

Balaji","06/Apr/07 10:53;lkuehne;I did a quick review:

* Consider changing the class name, leave out the 'WSDL' (the class implements a IDL->IDL transformation that has nothing to do with WSDL).
* You are using the platform default file encoding when opening files, and when converting recursive preprocessor calls back from byte[] to String. It would be more appropriate to use ISO-8859-1 charset explicitly. Quote from the IDL spec: ""OMG IDL uses the ASCII character set, except for string literals and character literals, which use the ISO Latin-1 (8859.1) character set.""
* The preprocessor should write some location markers to the output stream when changing the file. That way the final IDL compiler would have a chance to create meaningful error messages with correct file / linenumber information.
See http://gcc.gnu.org/onlinedocs/gcc-4.1.1/cpp/Preprocessor-Output.html for an example how this could be done.
* creating a new preprocessor for every include directive clobbers the define state, the defines created in the including idl file will not be available when preprocessing the included file.
* Infinite include recursion is not handled gracefully.
* There should be some support for system includes that don't come from the filesytem (orb.idl), and for an include path.

I do have some code sitting on my hard drive that solves some of these issues. I haven't touched it for a while, so please allow me some days to prepare it for Apache-Land.
","06/Apr/07 11:40;bravi;Thanks lars... I will commit this initial pre-processor just to get it started... (I will change the name)

Once you have your code ready, it would be great to get it committed.

","15/Apr/07 21:05;lkuehne;Added o.a.y.t.idlpreprocessor package, svn revision 529064.

The package contains an IdlPreprocessorReader which is the central class in the package. Features:
 
* Always opens files using ISO-8851-1 encoding
* notices infinite include recursion and throws a PreprocessingException
* differentiates between normal ("""") and system includes (<>), however actually resolving system includes is currently not implemented
* writes CPP style location markers to the output
* define state is preserved across multiple files

I also have some unit tests for the preprocessor sitting on my hard drive, but that needs to be reshuffled a bit to accommodate for the test data location in tools. My current test have the test data alongside the test classes and use this.getClass().getResource() as the way to locate input files and expected results.

I haven't started actually integrating this code into the current codebase. For basic testing this should mainly be a replacement of the current inputstream with the IdlPreprocessorReader and handling PreprocessingExceptions. I expect the main part of the integration work is to make ANTLR aware of the location markers and create error messages accordingly.
",18/Apr/07 20:32;lkuehne;added unit tests for idlpreprocessor,"01/May/07 21:49;lkuehne;Balaji, the preprocessor package is now in a pretty good shape and ready for integration, svn rev 534245.

Remaining work for this issue:
* Hook up the preprocessor as described by Matteo.
* Make sure that error messages from the IDL parser or code generator make use of the location markers and refer to the actual source code location and not the preprocessor output line number.

The last point will probably require a yoko specific subclass of antlr.AST that provides information about the original source file. I currently don't have the time to investigate that.",02/May/07 12:23;bravi;Thanks lars... I will integrate the preprocessor in the IDLToWSDL tool.,"02/May/07 14:42;bravi;Done the basic integration... Still need to work on the propogation of the error messages, etc...","12/Jul/07 14:55;bravi;Not critical to be fixed for 1.0 release, so moving it to 1.0.1 release.",25/Jul/07 20:13;maguro;Moved to subsequent release not subsequent patch.,28/Oct/09 17:16;dkulp;Marking resolved as it works.  Problems with  error messages and such can be considered new bugs.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Building tools fails when there is a space in the path name,CXF-1367,12375699,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,maguro,maguro,09/Aug/07 19:13,03/Jul/08 17:19,14/Mar/19 02:28,16/Jun/08 20:15,,,,,,,,2.1.1,,CORBA Binding,,,,,1,"Do an svn checkout in a directory like: /Users/adc/dev/Stuff%20and%20Documents/yoko/trunk.  Note the spaces in the name ""Stuff and Documents"".  The build will fail in tools.",,,,,,,,,,,,,,,,,09/Aug/07 19:14;maguro;error.log;https://issues.apache.org/jira/secure/attachment/12363517/error.log,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112180,,,2007-08-09 19:13:28.0,,,,,,0|i1a973:,267956,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Too much error message for missing class in java2 tools,CXF-1365,12385776,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,bmargulies,bmargulies,08/Jan/08 14:52,24/Apr/09 21:16,14/Mar/19 02:28,03/Sep/08 16:06,2.1,,,,,,,2.0.9,2.1.3,Tooling,,,,,0,"i respectfully submit that this is Too Much Information. When the java2 process gets a class not found, it should 
result in a simple error message and no backtrace.


bim-1330% $CXF_HOME/bin/java2js  -cp ~/x/tip/crosslang/source/ws/demo1/bin:/home/benson/x/tip/rlp/lib_g/ia32-glibc25-gcc42/btutil.jar/home/benson/x/tip/rlp/lib_g/ia32-glibc25-gcc42/btrlpnc.jar com.basistech.searchtools.demo1.CrossLangDemo1
Exception in thread ""main"" java.lang.NoClassDefFoundError: Lcom/basistech/util/LanguageCode;
        at java.lang.Class.getDeclaredFields0(Native Method)
        at java.lang.Class.privateGetDeclaredFields(Class.java:2259)
        at java.lang.Class.getDeclaredFields(Class.java:1715)
        at org.apache.cxf.jaxb.JAXBContextInitializer.walkReferences(JAXBContextInitializer.java:190)
        at org.apache.cxf.jaxb.JAXBContextInitializer.addClass(JAXBContextInitializer.java:165)
        at org.apache.cxf.jaxb.JAXBContextInitializer.addType(JAXBContextInitializer.java:129)
        at org.apache.cxf.jaxb.JAXBContextInitializer.begin(JAXBContextInitializer.java:89)
        at org.apache.cxf.service.ServiceModelVisitor.visitOperation(ServiceModelVisitor.java:85)
        at org.apache.cxf.service.ServiceModelVisitor.walk(ServiceModelVisitor.ja",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-09 01:28:44.775,,,no_permission,,,,,,,,,,,,,112178,,,Wed Sep 03 16:06:16 UTC 2008,,,,,,0|i1ab8n:,268287,,,,,,,,"09/Jan/08 01:28;gmazza;This is JDK-specific, no?  Shouldn't you be sending this to the Sun JDK JIRA (assuming there is one)?  At any rate, the stack trace is what one gets with most (all?) other Java apps when a  NCDFE or similar runtime exception occurs.
","09/Jan/08 01:35;bmargulies;No, not a bit. I want the CXF tool to have a specific try/catch for this specific error case and package up a polite error message.","03/Sep/08 16:06;seanoc;http://svn.apache.org/viewvc?view=rev&revision=691646

JavaToWS now catches Throwable rather than Exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Output MIME type didnt set correctly when there are multiple values for @ProduceMime,CXF-1361,12385756,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,08/Jan/08 08:09,10/Jan/08 09:17,14/Mar/19 02:28,10/Jan/08 09:17,2.1,,,,,,,2.1,,JAX-RS,,,,,0,"As a user reported:

I'm experimenting with the JAX-RS implementation in CXF. I'm trying to create methods that are able to return content in different formats. The JAX-RS spec says that any method can declare multiple MIME types that it produces, like:

    @ProduceMime({""application/xml"", ""application/json""})


but when trying this out, I see that the CXF implementation effectively only allows for a single MIME type declaration. If I declare multiple entries, like above, strangely the returned MIME type will be application/xml, but the returned format will be application/json

I wonder if it's possible to make this feature work in CXF as in the spec?


Akos
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112174,,,2008-01-08 08:09:00.0,,,,,,0|i0v3kv:,179553,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with unmarschalling parameters,CXF-1356,12385640,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,martin.varecha,martin.varecha,05/Jan/08 15:03,11/Oct/10 15:08,14/Mar/19 02:28,03/Oct/09 18:38,2.0.3,,,,,,,2.2.11,2.3,JAXB Databinding,,,,,0,"I tried to run sample application ""fromwsdl"" from jwsdp-2.0 using CXF. Classes are generated using wsdl2java tool. 
Service is running correctly, but something is wrong with unmarschalling parameters from request message.
Both parameters of method ""addNumbers"" are always 0.
Message looks like this:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Body>
   <ns1:addNumbers xmlns:ns1=""http://duke.org/"">
     <arg0 xmlns=""http://duke.org/"">1</arg0>
     <arg1 xmlns=""http://duke.org/"">2</arg1>
   </ns1:addNumbers>
  </soap:Body>
</soap:Envelope>","Tomcat 5.5.23, Spring 2.1-m2, CXF 2.0.3, jaxb-impl 2.0.5",,,,,,,,,,,,,,,,05/Jan/08 15:16;martin.varecha;AddNumbers.wsdl;https://issues.apache.org/jira/secure/attachment/12372564/AddNumbers.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-05 15:10:47.743,,,no_permission,,,,,,,,,,,,,112169,,,Sat Oct 03 18:38:01 UTC 2009,,,,,,0|i13ybr:,231191,,,,,,,,05/Jan/08 15:10;gmazza;Isn't the obsolete java web services developer pack a JAX-RPC implementation (and not JAX-WS)?  You should upgrade to Sun's JAX-WS based Metro if you wish to do the comparison.,05/Jan/08 15:16;martin.varecha;WSDL file,"05/Jan/08 15:36;martin.varecha;I used jax-ws example, not jax-rpc example and there is the same example in JAXWS2.1.3-20071218, thus I didn't use anything obsolete.","05/Jan/08 16:10;gmazza;More detective work is needed on your side I think.  What happens when you try to run our own WSDL-first example[1] -- does it work?  What happens when you try to run your attached web service with Metro[2] -- does it work?

Having done so countless times, I'm highly confident Apache CXF web services are capable of sending strings containing numbers from the SOAP client to the web service.  I'm still inclined to believe the problem is somewhere in the sample that you are using.

[1] http://svn.apache.org/viewvc/incubator/cxf/trunk/distribution/src/main/release/samples/
[2] http://www.jroller.com/gmazza/date/20071019
","06/Jan/08 20:29;martin.varecha;Thanks for the examples!
Problem is in client and request message.

I have 2 test clients connecting the same service. 
* Common client (+generated class org.duke.AddNumbersService) works perfectly, 
* the second one using ClientProxyFactoryBean doen't work as I described before.

* Common client
(result is 30)

        AddNumbersPortType port = new AddNumbersService().getAddNumbersPort();
        int result = port.addNumbers (10, 20);

request message is: 
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><addNumbers xmlns=""http://duke.org""><arg0>10</arg0><arg1>20</arg1></addNumbers></soap:Body></soap:Envelope>

* ClientProxyFactoryBean client 
(parameters aren't recognized and returns 0)

        ClientProxyFactoryBean factory = new ClientProxyFactoryBean();
        factory.setServiceClass(AddNumbersPortType.class);
        factory.setAddress(""http://localhost:8080/ws/services/Service"");
        AddNumbersPortType client = (AddNumbersPortType)factory.create();
        int result = client.addNumbers(1, 2 );

request message is: 
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><ns1:addNumbers xmlns:ns1=""http://duke.org/""><arg0 xmlns=""http://duke.org/"">1</arg0><arg1 xmlns=""http://duke.org/"">2</arg1></ns1:addNumbers></soap:Body></soap:Envelope>

I don't know what is wrong, maybe ClientProxyFactoryBean isn't initialized properly.","06/Jan/08 21:51;gmazza;<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
<soap:Body>
<ns1:addNumbers xmlns:ns1=""http://duke.org/"">
<arg0 xmlns=""http://duke.org/"">1</arg0>
<arg1 xmlns=""http://duke.org/"">2</arg1>
</ns1:addNumbers>
</soap:Body>
</soap:Envelope>

Hmmm....I believe with Document-Literal, the arguments (arg0 and arg1) are *not* supposed to have namespace declarations, they take the namespace of the parent object (ns1:addNumbers).  That may be the problem here.
","07/Jan/08 15:10;dkulp;
If you use the ClientProxyFactoryBean without using a wsdl to define the namespaces, it follows the JAX-WS rules to generate the namespaces, and that means adding the trailing ""/"".   That is the only real difference in the messages: the namespace is different due to the trailing ""/"".

There are a couple ways to work around that:

1) Use the wsdl - call factory.setWsdlLocation(.....) to the location of the wsdl (you can use the ?wsdl url from the service).  Unfortunately, there are bugs with this with 2.0.3 (should be fixed in 2.0.4) where this doesn't always work.   :-(     You can use the JaxWsProxyFactoryBean where the wsdl use should work.

2) Add a service configuration that maps the namespace differently.   Fortunately, we have one.  The AegisServiceConfiguration maps to namespaces without the trailing slash.  Thus, you can probably do something like:
factory.getServiceFactory().getConfigurations().add(0, new AegisServiceConfiguration());

","03/Oct/09 18:38;dkulp;
Marking this resolved.   If you use the JAX-WS frontend and/or generated code from wsdl2java, this works fine.   If you use the simple frontend, you need to use the wsdl or use the configuration object mentioned above.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
static DocumentBuilderFactory in XMLUtils cause ClassCastException when use different classloader,CXF-1351,12385476,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,03/Jan/08 04:02,29/Jan/08 21:51,14/Mar/19 02:28,03/Jan/08 07:43,2.0.3,,,,,,,2.0.4,,,,,,,0,"for example, init the DocumentBuilderFactory with classloader1 by
parserFactory = DocumentBuilderFactory.newInstance(); //here use classloader1 is used

but invoke getParser() with classloader2
when parserFactory.newDocumentBuilder(); will get ClassCastException

we can't cast same class prototype with different classloader


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112164,,,2008-01-03 04:02:33.0,,,,,,0|i0v10n:,179138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Please don't drop velocity.log files into the home directory,CXF-1346,12385373,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,31/Dec/07 15:37,29/Oct/13 09:26,14/Mar/19 02:28,07/Jan/08 16:08,2.0.3,,,,,,,2.0.4,,Tooling,,,,,0,"Running wsdl2* results in a velocity.log file in the home directory. Even for the 'js' case, which doesn't use velocity!

In any case, it's impolite to leave these around, especially without a way to relocate them. Please suppress or at least move to the official output directory.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-31 17:32:07.974,,,no_permission,,,,,,,,,,,,,112159,,,Tue Oct 29 09:26:24 UTC 2013,,,,,,0|i1abav:,268297,,,,,,,,"31/Dec/07 17:32;mazzag;I suspect more people would be upset if it were in the output directory, as it would have to be manually cleaned up each time.  At least with the home directory, it is constantly overwritten. 

Glen","31/Dec/07 18:31;bmargulies;In the home dir, multiple parallel uses of the tools collide. 

What I really want is for them to disappear. We should not be rubbing our users' noses in the fact that we use velocity. If we love velocity logging, we should redirect it into our own log.
","07/Jan/08 16:08;dkulp;
I've turned off the velocity.log generation entirely.   If someone is inclined in the future, they could hook up the -verbose flag to it so it's generated in verbose mode.   Not something I'm worrying about right now though.","28/Oct/13 09:58;alokanand10000;This is not turned off  in CXF wsdl ,velocity.log is getting generated in our home directory, plz anyone let me know how to swtch it off or how to change the location of its generation other then the home directory?","29/Oct/13 09:26;alokanand10000;Setting the user.home variable is the correct answer . 
<sysproperty key=""user.home"" value=""$
{basedir}""/>


<target name=""wsdl2java"" depends=""depend""> 
<java classname=""org.apache.cxf.tools.wsdlto.WSDLToJava"" fork=""true"">
.......

.......
<sysproperty key=""user.home"" value=""${basedir}
""/>
</java> 
</target>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"wsdl2java overwrites objectFactory methods if multiple service classes are in the same package, causes value type inheritance problems",CXF-1340,12385225,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,incognito,incognito,26/Dec/07 23:18,04/Jun/09 21:34,14/Mar/19 02:28,02/Sep/08 13:51,2.0.3,2.1,,,,,,Invalid,,Tooling,,,,,2,"If you have two wsdl-based services, who's wsdl2java output is in the same package, the outputted objectFactory retains only the most recent service's methods. 

For example:
Given two wsdl files, CarService.wsdl and UserService.wsdl; if one executes the wsdl2java binary with both services; with CarService first and UserService second, and with both service classes being output in package org.example.api, then only one objectFactory.java class will be created. First, objectFactory will be created with the objects for CarService.wsdl, and then it will be overwritten with UserService.wsdl's objects. 

It just so happens that in this scenario, if the former service contains an object that is abstract, that is, that it contains types that inherit via wsdl's extension keyword, AND methods for creating instances of CarService.wsdl's outputted java are NOT present in objectFactory.java, then CXF does not include type information in the SOAP messages. 

For example: 
given an alternate CarService.wsdl with the following types:

  <complexType name=""Car"" abstract=""true"">
    ...
  </complexType>

  <complexType name=""Jeep"">
    <extension base=""Car"">
     ...
    </extension>
  </complexType>

If CarService.wsdl also had a method called getCarById, and wsdl2java output 2 java classes: getCarById.java and getCarByIdResponse.java, AND wsdl2java on UserService.wsdl was executed AFTER it was executed on CarService (resulting in an objectFactory without create methods for getCar*), then CXF will send SOAP messages like the following

<soap>
  <getCarByIdResponse> <!-- type information here would mistakenly be missing --> 
   ...
  </getCarByIdResposne>
</soap>

The ultimate result is that if a project has more than 1 service being output in the same package AND if more than 1 type in those two services use type extension, then CXF will have problems marshalling those classes because it will end up leaving out the type information for all classes not included in the ObjectFactory. One alternative would be to have the wsdl2java classes be output to multiple packages. If the different services shared types, this would result in duplicated code in each service.","Windows XP, eclipse",,,,,,,,,,,,CXF-1662,,,,26/Dec/07 23:19;incognito;cxf-issue-objectFactory.zip;https://issues.apache.org/jira/secure/attachment/12372236/cxf-issue-objectFactory.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-04 04:30:21.804,,,no_permission,,Unknown,,,,,,,,,,,112153,,,Sat Sep 06 00:09:15 UTC 2008,,,,,,0|i1abc7:,268303,,,,,,,,"26/Dec/07 23:19;incognito;Attached is an example of the issue. After executing mvn compile, wsdl2java will be executed against both CarService.wsdl and UserService.wsdl, in that order. Consequently, the objectFactory in use will only contain methods for UserService-related type wrappers.","04/Feb/08 04:30;ryannorris;I'm experiencing the same issue when a single WSDL file is used that contains multiple service definitions.  The last service in the WSDL is always the one that is reflected in ObjectFactory.

As Incognito points out, the lackluster workaround for this would be to namespace things at a very fine grain, which has various drawbacks.",28/Aug/08 23:23;logemann;very annoying indeed. Namespacing is not the way to go. ObjectFactory shouldnt be overwritten but appended to the existing one instead.,"29/Aug/08 17:58;dkulp;
This issue is very closely related to https://issues.apache.org/jira/browse/CXF-1662 and is a JAXB limitation/design that we have no control over.   We just call off to JAXB to generate these files.   Thus, we cannot do anything about it.

Basically, JAXB is pretty much COMPLETELY designed around the idea of namespace:package is a 1:1 mapping.   If you try to map multiple schemas into the same package, it's very likely NOT to work.   

Along with the ObjectFactory issue, the package-info.java file that is generated is also very specific to the schema that was being processed when generated.   If you have multiple schemas generating into the package, the resulting XML is likely to have the wrong namespaces, wrong qualification, etc... set.   Basically, invalid XML according to the schema.

","02/Sep/08 13:51;seanoc;Have commited a fix for CXF-1662 which also applies to this. 
http://svn.apache.org/viewvc?view=rev&revision=691237

","06/Sep/08 00:09;logemann;checked the diffs and cant see how this problem is solved by these few changed lines in 2-3 files. Perhaps its a JAXB limitation, yes, but to me it is quite questionable why i shouldnt be able to generate the same schema (from different wsdl's) into one package. Thats exactly how it should work. I tried to create a ""meta"" wsdl by including all my child wsdls but i got a NullPointerException in WSDLToJava.

I will check the jaxb folks if i can get someone there....  I am totally not convinced that this is the way it should work.

I just checked the bug description again, perhaps i have something diferent. I have a schema def like this:

<xsd:schema targetNamespace=""http://domain.netversys.de"" ....>
a ""User"" complex Type....
</xsd:schema>

in one WSDL and this in another:

<xsd:schema targetNamespace=""http://domain.netversys.de"" ....>
a ""House"" complex Type....
</xsd:schema>

Only the last processed WSDL via WSDLToJava will make it into the ObjectFactory, the other gets overwritten. In fact, a ""User"" cant be created by the framework then.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis override-type feature isn't working for input items,CXF-1339,12385216,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,26/Dec/07 21:15,30/Apr/08 14:57,14/Mar/19 02:28,10/Jan/08 03:05,2.1,,,,,,,2.1,,Aegis Databinding,,,,,0,"The overrideTypes feature of Aegis is not working for inputs. While the type is registered, it isn't in the right place, since it isn't in the correct xml2Type map to be seen when reading a message over the wire.

I observed this in 2.1/trunk using JavaScript cases. I'm about to go create a test case purely in the Aegis tree with the goal of making a fix that could apply to 2.0.4.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112152,,,Thu Jan 10 03:05:38 UTC 2008,,,,,,0|i1abcf:,268304,,,,,,,,10/Jan/08 03:05;bmargulies;Fixing this in 2.0.4 is just too much work.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis per-service options painful to configure,CXF-1338,12385210,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,bmargulies,bmargulies,26/Dec/07 18:20,30/Apr/08 14:57,14/Mar/19 02:28,04/Mar/08 21:07,2.0.3,,,,,,,2.1,,Aegis Databinding,,,,,0,"
I'd like to improve on the XML here. I see some possibilties. One is to propagate properties from the server to the service factory. Currently, the RFSB copies its properties onto the Service, where Aegis can see them. But properties on the server (<simple:properties>) don't go. If they were copied, the overrideTypes and friends could be there. While here, these props should get 'aegis' in their names, no?

Anyway, Dan, if you will offer an editorial opinion, you can send it back to me to do something about.



<simple:server id=""aegis-service""
		serviceClass=""org.apache.cxf.javascript.fortest.AegisService""
		address=""http://localhost:8808/aegis"">
		<simple:serviceBean>
			<bean
				class=""org.apache.cxf.javascript.fortest.AegisServiceImpl"" />
		</simple:serviceBean>
		<simple:dataBinding>
			<bean
				class=""org.apache.cxf.aegis.databinding.AegisDatabinding"">
			</bean>
		</simple:dataBinding>
		<simple:serviceFactory>
			<bean
				class='org.apache.cxf.service.factory.ReflectionServiceFactoryBean'>
				<property name=""properties"">
					<map>
						<entry key=""overrideTypesList"">
							<list>
								<value>org.apache.cxf.javascript.fortest.aegis.Mammal</value>
							</list>
						</entry>
					</map>
				</property>
			</bean>
		</simple:serviceFactory>
	</simple:server>",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112151,,,Tue Mar 04 21:07:36 UTC 2008,,,,,,0|i13zon:,231411,,,,,,,,"04/Mar/08 21:07;bmargulies;The 2.1 configuration features around AegisContext should address this.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis drops all but the last from an array of JDOMElements,CXF-1333,12385174,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,24/Dec/07 22:35,29/Jan/08 21:51,14/Mar/19 02:28,26/Dec/07 12:50,2.1,,,,,,,2.0.4,,Aegis Databinding,,,,,0,"In the Javascript tests, there is now an Aegis test. It has a method that it declares to accept a Collection<JDOMElement>.

When the client sends it two elements, it only delivers one to the service.

Here's the message on the wire ...

Payload: <?xml version=""1.0"" encoding=""UTF-8""?><soap-env:Envelope xmlns:soap-env=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""><soap-env:Body xmlns:jns0='http://fortest.javascript.cxf.apache.org/' ><jns0:acceptAny xmlns:jns0='http://fortest.javascript.cxf.apache.org/' ><jns0:before>before items</jns0:before><jns0:anything xmlns:jns0='http://fortest.javascript.cxf.apache.org/' ><jns0:anyType><walrus xmlns='uri:iam'>tusks</walrus></jns0:anyType><jns0:anyType><penguin xmlns='uri:linux'>emperor</penguin></jns0:anyType></jns0:anything></jns0:acceptAny></soap-env:Body></soap-env:Envelope>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112146,,,Wed Dec 26 12:50:12 UTC 2007,,,,,,0|i1abdj:,268309,,,,,,,,"26/Dec/07 04:02;bmargulies;I worked over the stax builder to fix this.
",26/Dec/07 12:50;bmargulies;Dan might push these changes to 2.0.4. I don't know if anyone cares.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF2.0.3 rejects wrapped array parameters when they have whitespace or comments,CXF-1332,12385168,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,liugeng,liugeng,24/Dec/07 16:12,29/Jan/08 21:51,14/Mar/19 02:28,05/Jan/08 03:34,2.0.3,,,,,,,2.0.4,,JAXB Databinding,,,,,1,"If webparam is an array, for example, a string array: 

  @WebMethod(operationName = ""SendData"", action = """")
    @WebResult(name = ""result"", targetNamespace = ""http://service.host.webservices.nortel.com"")
    public String hostSendData(
    					@WebParam(name = ""params"") String[] strs);


will get the following CXF exceptions. However, I tried xfire1.2.6, it works fine.

10:45:23,092 ERROR [STDERR] Dec 24, 2007 10:45:23 AM org.apache.cxf.interceptor.LoggingInInterceptor handleMessage
INFO: Inbound Message
--------------------------------------
Encoding: UTF-8
Headers: {content-length=[333], host=[localhost:8080], user-agent=[Jakarta Commons-HttpClient/3.0.1], content-type=[text/xml;charset=UTF-8], soapaction=[""""]}
Message:
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ser=""http://service.host.webservices.nortel.com"">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:SendData>
         <!--Zero or more repetitions:-->
         <params>aaaa</params>
      </ser:SendData>
   </soapenv:Body>
</soapenv:Envelope>
--------------------------------------
10:45:23,092 ERROR [STDERR] Dec 24, 2007 10:45:23 AM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Unmarshalling Error: Current state not START_ELEMENT or END_ELEMENT 
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshallArray(JAXBEncoderDecoder.java:634)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:438)
	at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:40)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.getPara(DocLiteralInInterceptor.java:234)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:120)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
	at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:256)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:170)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.doPost(AbstractCXFServlet.java:148)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:713)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:179)
	at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:84)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
	at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:157)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:241)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:580)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.lang.IllegalStateException: Current state not START_ELEMENT or END_ELEMENT
	at com.ctc.wstx.sr.BasicStreamReader.getName(BasicStreamReader.java:721)
	at org.apache.cxf.staxutils.DepthXMLStreamReader.getName(DepthXMLStreamReader.java:109)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshallArray(JAXBEncoderDecoder.java:617)
	... 31 more
10:45:23,092 ERROR [STDERR] Dec 24, 2007 10:45:23 AM org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback onClose
INFO: Outbound Message:
--------------------------------------
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>Unmarshalling Error: Current state not START_ELEMENT or END_ELEMENT </faultstring></soap:Fault></soap:Body></soap:Envelope>--------------------------------------","Windows XP,  java 1.6.0_02, CXF2.0.3, JBoss 4.2.1.GA ",,,,,,,,,,,,,,,,24/Dec/07 16:20;liugeng;HelloWorldCXF.zip;https://issues.apache.org/jira/secure/attachment/12372165/HelloWorldCXF.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-03 22:58:06.625,,,no_permission,,Unknown,,,,,,,,,,,112145,,,Sat Jan 05 03:34:18 UTC 2008,,,,,,0|i0uxvz:,178631,,,,,,,,03/Jan/08 22:58;sirianni;This is a pretty severe bug.  Are there any workarounds for this (aside from not using array types)?,"04/Jan/08 16:00;liugeng;We do not have any workaround solutions so far. Is there anybody going to fix this problem? It's blocking us, we will be
forced to roll back to xfire if it's not fixed.",04/Jan/08 16:20;sirianni;Geng - I'm not a developer on the CXF project.  I'm just another user agreeing with you.  This is blocking our team's use of CXF as well.,"04/Jan/08 20:06;bmargulies;I can't repro this with the current trunk in standalone, and I can't easily fire up JBoss.

Can you repro it with a 2.1 snapshot?
","04/Jan/08 20:07;bmargulies;Also, please send along the annotations on the SEI/Implementation. Are you bare or wrapped, for example?

Using defaults, as I said, I can't repro this.
","04/Jan/08 20:10;bmargulies;I just looked at your full zip file. My test case is essentially the same as yours, and it passes on trunk. I'm looking into whether I can repro on 2.0.4.
","04/Jan/08 20:18;liugeng;I tried 2.1 snapshot dated 12/20/2007, it's not working","04/Jan/08 20:23;bmargulies;This is very odd.

If you look in svn right now on the trunk, you'll find a systest in the package org.apache.cxf.cxf1332. It works. 

I can't see how it differs in substance from the failing test case.

What are you all using for a client to talk to CXF? Could this be some incompatibility with some other package?
","04/Jan/08 20:25;liugeng;I just upgraded to CXF recently, so not quite sure about your second question. My test programs are included in the zip file, it's an eclipse project. And the problem can be reproduced easily.","04/Jan/08 20:27;liugeng;I tried soapUI and web service explorer in eclipse, none of them works.","04/Jan/08 20:30;bmargulies;Well, I have to say that I'm more interested in your results with some standard-conforming web service API toolkit. However, I'll try to see if I can get soapUI to talk to the test case and/or your test case.","04/Jan/08 20:40;bmargulies;I can repro this with SoapUI.

SoapUI sends ..

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:urn=""urn:org.apache.cxf.1332"">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:SendData>
         <!--Zero or more repetitions:-->
         <params>p1</params>
	 <params>p2</params>
      </urn:SendData>
   </soapenv:Body>
</soapenv:Envelope>

CXF rejects it. Note that 'params' is unqualified.

CXF sends:

 <soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
<soap:Body>
<ns1:SendData xmlns:ns1=""urn:org.apache.cxf.1332"">
<params>a</params><params>b</params><params>c</params></ns1:SendData></soap:Body></soap:Envelope>

So, someone is wrong about the appropriate qualification of the array element elements.

","04/Jan/08 20:41;liugeng;I tried java_first_spring_support example under CXF2.0.3 samples, I changed parameter to String[], and it works fine.
However, after I copied the programs and generated a WAR file and posted it to JBoss4.2.1 server, and using soapUI
or web service explorer as client, CXF will throw the unmarshalArray() exception again. The only difference is the
sample code use the it's own server/client, I am using Jboss/SoapUI. And from the Jboss debug output, the soap 
message looks ok.","04/Jan/08 20:46;bmargulies;I think I just found you a workaround. Add targetNamespace="""" to your @WebParam. I'm about to try this with soapUI ...


<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><ns1:SendData xmlns:ns1=""urn:org.apache.cxf.1332""><params>a</params><params>b</params><params>c</params></ns1:SendData></soap:Body></soap:Envelope>
",04/Jan/08 20:48;bmargulies;I'm beginning to think that it's the empty header element!,"04/Jan/08 20:59;bmargulies;The problem is the artistic white space! I've submitted a fix, you can get around it by not putting whitespace between array elements and between the last one and the end tag for the message.

I'm assigning to dkulp for 2.0.4 merge.","04/Jan/08 22:43;dkulp;

I've now ported the fix to 2.0.4 and deployed  a new snapshot.   Could someone give it a try to make sure it really is fixed so that we can close this off for 2.0.4?

Thanks!","05/Jan/08 03:02;liugeng;I've tried 1/4/08 CXF 2.0.4 snapshot, it works fine. Thank you very much, I really appreciate it.

Is there a target date for 2.0.4 release?","05/Jan/08 03:34;dkulp;
We're targetting to do the builds around Jan 15th and start the voting at that point.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor callback demo to reflect the change of EndpointReference in jax-ws 2.1,CXF-1316,12385008,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,jliu,jliu,20/Dec/07 06:38,30/Apr/08 14:57,14/Mar/19 02:28,22/Feb/08 17:12,2.1,,,,,,,2.1,,JAX-WS Runtime,,,,,0,"Refactor callback demo to reflect the change of EndpointReference in jax-ws 2.1:

1. in Client.java, we should not build EndpointReferenceType by ourselves, instead we should use Endpoint.getEndpointReference to acquire an EndpointReference instance from the published endpoint.

2. Replace EndpointReferenceType (which is CXF internal type) with the W3CEndpointReference type which is defined by the spec.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112130,,,2007-12-20 06:38:44.0,,,,,,0|i0v3pr:,179575,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Class not found error in wsdl2js and other new js tools,CXF-1314,12384954,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,19/Dec/07 12:04,25/Feb/08 23:50,14/Mar/19 02:28,25/Feb/08 23:50,2.1,,,,,,,2.1,,Tooling,,,,,0,"The packaging isn't picking up enough stuff for the *2js tools. They all fail with class not found.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112128,,,Mon Feb 25 23:50:29 UTC 2008,,,,,,0|i0v3o7:,179568,,,,,,,,25/Feb/08 23:50;bmargulies;I didn't leave behind enough information here. I'll open a new report if I can still show a problem.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
After running mvn archetype:create -DarchetypeGroupId=org.apache.cxf -DarchetypeArtifactId=cxf-http-basic -Dgroupid are ignored rendering packagenames wrong in java files,CXF-1312,12384864,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,nino,nino,18/Dec/07 12:57,30/Jul/09 18:01,14/Mar/19 02:28,28/Jul/09 17:24,2.0.3,,,,,,,2.1.5,,,,,,,1,"This is regarding CXF-665.

After running mvn archetype:create -DarchetypeGroupId=org.apache.cxf -DarchetypeArtifactId=cxf-http-basic -Dgroupid are ignored rendering packagenames wrong in java files.

The packagenames in helloworld.java and helloworldimpl.java are called org.apache... eventhough they files are placed in the package specified in dgroupid.

My guess are that there needs some more substitution in the template.",macosx 10.4,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-28 17:24:36.928,,,no_permission,,Novice,,,,,,,,,,,112126,,,Tue Jul 28 17:24:36 UTC 2009,,,,,,0|i1abgv:,268324,,,,,,,,"28/Jul/09 17:24;dkulp;Resolved as part of cleaning up the archetype.   It's now:

mvn archetype:create -DarchetypeGroupId=org.apache.cxf.archetype -DarchetypeArtifactId=cxf-jaxws-javafirst -DgroupId=foo.blah -DartifactId=barf
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis databinding failed to createHolderType,CXF-1309,12384832,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,ema,ema,18/Dec/07 03:49,04/Dec/09 22:34,14/Mar/19 02:28,15/Oct/09 20:45,,,,,,,,2.2.5,,Aegis Databinding,,,,,0,"Created the sample using the aegis binding configured in spring.
TypeClassInfo class return the generic Type as
javax.xml.ws.Holder<java.lang.String> which throws the below error.

It is a bug or do am i missing any annotation? anyway to work it out.

@javax.jws.WebService (targetNamespace=""http://example.com/"")
@javax.xml.ws.BindingType(value =
""http://www.w3.org/2003/05/soap/bindings/HTTP/"")  
@SOAPBinding(style=SOAPBinding.Style.DOCUMENT, use=SOAPBinding.Use.LITERAL,
parameterStyle=SOAPBinding.ParameterStyle.BARE)
public interface IExample {

	@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
	public IResponseParameter getExample(@WebParam(name = ""parameters"")
	IRequestParameter a, @WebParam(name = ""C"", header=true, mode=Mode.INOUT)
	Holder<String> c);

}

<Dec 16, 2007 10:58:15 AM EST> <Warning> <HTTP> <BEA-101162> <User defined
listener org.springframework.web.context.ContextLoaderListener failed:
org.springframework.beans.factory.BeanCreationException: Error creating bean
with name 'example1': Invocation of init method failed; nested exception is
java.lang.ClassCastException:
sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.
org.springframework.beans.factory.BeanCreationException: Error creating bean
with name 'example1': Invocation of init method failed; nested exception is
java.lang.ClassCastException:
sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1174)
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:425)
	at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:251)
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:156)
	at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:248)
	Truncated. see log file for complete stacktrace
java.lang.ClassCastException:
sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl
	at
org.apache.cxf.aegis.type.AbstractTypeCreator.createHolderType(AbstractTypeCreator.java:146)
	at
org.apache.cxf.aegis.type.AbstractTypeCreator.createTypeForClass(AbstractTypeCreator.java:112)
	at
org.apache.cxf.aegis.databinding.AegisDatabinding.getParameterType(AegisDatabinding.java:448)
	at
org.apache.cxf.aegis.databinding.AegisDatabinding.initializeMessage(AegisDatabinding.java:257)
	at
org.apache.cxf.aegis.databinding.AegisDatabinding.initializeOperation(AegisDatabinding.java:218)
	Truncated. see log file for complete stacktrace

<Dec 16, 2007 10:58:15 AM EST> <Error> <Deployer> <BEA-149231> <Unable to
set the activation state to true for the application '_appsdir_CXF203_dir'.
weblogic.application.ModuleException: 
	at
weblogic.servlet.internal.WebAppModule.startContexts(WebAppModule.java:950)
	at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:353)
	at
weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:204)
	at
weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
	at
weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:60)
	Truncated. see log file for complete stacktrace
java.lang.ClassCastException:
sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl
	at
org.apache.cxf.aegis.type.AbstractTypeCreator.createHolderType(AbstractTypeCreator.java:146)
	at
org.apache.cxf.aegis.type.AbstractTypeCreator.createTypeForClass(AbstractTypeCreator.java:112)
	at
org.apache.cxf.aegis.databinding.AegisDatabinding.getParameterType(AegisDatabinding.java:448)
	at
org.apache.cxf.aegis.databinding.AegisDatabinding.initializeMessage(AegisDatabinding.java:257)
	at
org.apache.cxf.aegis.databinding.AegisDatabinding.initializeOperation(AegisDatabinding.java:218)
	Truncated. see log file for complete stacktrace

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-08 17:44:53.938,,,no_permission,,,,,,,,,,,,,112123,,,Thu Oct 15 20:45:11 UTC 2009,,,,,,0|i1abhj:,268327,,,,,,,,08/Sep/09 17:44;bmargulies;I may have fixed this on trunk. Can you try it?,"15/Oct/09 20:45;dkulp;
I ported the testcase back to 2.2 and got the above exception.  I fixed it on 2.2 as well now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
another javascript problem with restful_http_binding demo,CXF-1308,12384829,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,18/Dec/07 03:00,02/Jan/08 20:58,14/Mar/19 02:28,18/Dec/07 05:44,2.0.3,,,,,,,2.0.4,,Samples,,,,,0,"Everytime when I click the ""Get Customers!"" button, the same customers were appended to the page.
I think they should be refreshed but not appended.
",,,,,,,,,,,,,,,,,18/Dec/07 05:24;jeff.yu;CXF-1308.patch;https://issues.apache.org/jira/secure/attachment/12371842/CXF-1308.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-12-18 05:24:10.243,,,no_permission,,,,,,,,,,,,,112122,,,Tue Dec 18 05:24:10 UTC 2007,,,,,,0|i13ztr:,231434,,,,,,,,18/Dec/07 05:24;jeff.yu;It should also fix the CXF-1306,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
samples/restful_http_binding/test.html does not work with IE (works with Firefox),CXF-1306,12384736,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,17/Dec/07 03:06,02/Jan/08 20:58,14/Mar/19 02:28,18/Dec/07 05:19,2.0.3,,,,,,,2.0.4,,Samples,,,,,0,"When running the example, you can open http://localhost:8080/test.html in a browser to demonstrate the use of JavaScript as a web service client.  When clicking the Get Customers! button, the table below the button is populated correctly in Firefox, while nothing happens in IE. The reason for this error is unknown.
",,,,,,,,,,,,,CXF-1308,,,,20/Dec/07 15:13;zhuyi;test.html;https://issues.apache.org/jira/secure/attachment/12372024/test.html,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-12-18 05:25:25.597,,,no_permission,,,,,,,,,,,,,112120,,,Thu Dec 20 15:13:08 UTC 2007,,,,,,0|i1abhz:,268329,,,,,,,,18/Dec/07 05:25;jeff.yu;It relates to the CXF-1308,"20/Dec/07 15:13;zhuyi;The attached file fixed the following two issues:

1) the ""test.html"" page is working with IE ;
2) the customers table is refreshed not appended, every time the ""Get Customers"" button is hit.

Cheers!
YI ZHU",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Uninformative error message from wsdl2java on some problem with an enum,CXF-1304,12384715,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,bmargulies,bmargulies,16/Dec/07 01:06,23/Jan/09 17:50,14/Mar/19 02:28,21/Aug/08 15:51,2.0.3,,,,,,,2.0.9,2.1.3,Tooling,,,,,0,"The error message below does not give me much of a clue.


WSDLToJava Error : org.apache.ws.commons.schema.constants.Enum$EnumValueException: Bad Enumeration value 'qualifed'",,,,,,,,,,,,,,,,,16/Dec/07 01:07;bmargulies;TransliterationAssistant.wsdl;https://issues.apache.org/jira/secure/attachment/12371741/TransliterationAssistant.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-12-16 02:15:25.549,,,no_permission,,,,,,,,,,,,,112118,,,Thu Aug 21 15:51:26 UTC 2008,,,,,,0|i1abif:,268331,,,,,,,,"16/Dec/07 02:15;mazzag;You misspelled ""qualified""?","16/Dec/07 02:20;bmargulies;Well, yes. It would sure be nice to have gotten a line number, and / or a more explanatory error message.","21/Aug/08 15:51;seanoc;Ran against  CXF 2.2, wsdl2java -validate gives meaningful error message:


WSDLToJava Error:
line 28 column 38 of file:/C:/CXFISSUES/CXF1304/TransliterationAssistant.wsdl: c
vc-enumeration-valid: Value 'qualifed' is not facet-valid with respect to enumer
ation '[qualified, unqualified]'. It must be a value from the enumeration.

line 28 column 38 of file:/C:/CXFISSUES/CXF1304/TransliterationAssistant.wsdl: c
vc-attribute.3: The value 'qualifed' of attribute 'elementFormDefault' on elemen
t 'schema' is not valid with respect to its type, 'formChoice'.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Simple frontend clients don't work with wsdl first,CXF-1297,12384543,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,13/Dec/07 03:15,29/Jan/08 21:51,14/Mar/19 02:28,07/Jan/08 16:13,2.0.3,,,,,,,2.0.4,,Core,,,,,0,"
Clients created with the ClientProxyFactoryBean based on a wsdl don't work as the methods are not properly bound in, classes aren't set into the MessagePartInfos, etc....    Thus, they don't work at all. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112113,,,2007-12-13 03:15:39.0,,,,,,0|i0syp3:,167098,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF throwing UnsupportedOperationException when including header.,CXF-1296,12384539,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,cooldeepak,cooldeepak,13/Dec/07 02:07,29/Jan/08 21:51,14/Mar/19 02:28,14/Dec/07 21:10,2.0.3,,,,,,,2.0.4,,Aegis Databinding,,,,,0,"Dec 12, 2007 8:07:31 PM org.apache.cxf.interceptor.LoggingInInterceptor handleMessage
INFO: Inbound Message
--------------------------------------
Encoding: UTF-8
Headers: {Host=[localhost:7001], User-Agent=[Java/1.5.0_06], connection=[keep-alive], transfer-encoding=[chunked], Pragma=[no-cache], content-type=[application/soap+xml; charset=UTF-8], Cache-Control=[no-cache], Accept=[*]}
Message:
<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Header><ns4:header xmlns:ns4=""http://user.blogic.contract.services.ivr.itg.marsh.com/"" xmlns:ns3=""http://user.blogic.local.services.ivr.itg.marsh.com/"" xmlns:ns2=""http://tobject.contract.services.ivr.itg.marsh.com""><ns2:clientCode>111</ns2:clientCode><ns2:productCode>222</ns2:productCode></ns4:header></soap:Header><soap:Body><ns4:getIdentification xmlns:ns2=""http://tobject.contract.services.ivr.itg.marsh.com"" xmlns:ns3=""http://user.blogic.local.services.ivr.itg.marsh.com/"" xmlns:ns4=""http://user.blogic.contract.services.ivr.itg.marsh.com/""><employeeID>1</employeeID><ssn>2</ssn><productFlag>P</productFlag></ns4:getIdentification></soap:Body></soap:Envelope>
--------------------------------------
Dec 12, 2007 8:07:31 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
java.lang.UnsupportedOperationException
	at org.apache.cxf.aegis.databinding.AegisDatabinding.createReader(AegisDatabinding.java:109)
	at org.apache.cxf.interceptor.AbstractInDatabindingInterceptor.getDataReader(AbstractInDatabindingInterceptor.java:69)
	at org.apache.cxf.interceptor.AbstractInDatabindingInterceptor.getNodeDataReader(AbstractInDatabindingInterceptor.java:87)
	at org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor.handleMessage(SoapHeaderInterceptor.java:94)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
	at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:256)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:170)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.doPost(AbstractCXFServlet.java:148)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:226)
	at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:124)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:175)
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3370)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(Unknown Source)
	at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2117)
	at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2023)
	at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1359)
	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:200)
	at weblogic.work.ExecuteThread.run(ExecuteThread.java:172)
Dec 12, 2007 8:07:31 PM org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor handleMessage
INFO: class org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptorapplication/soap+xml
Dec 12, 2007 8:07:31 PM org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback onClose
INFO: Outbound Message:
--------------------------------------
<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Body><soap:Fault><soap:Code><soap:Value>soap:Receiver</soap:Value></soap:Code><soap:Reason><soap:Text xml:lang =""en"">Fault occurred while processing.</soap:Text></soap:Reason></soap:Fault></soap:Body></soap:Envelope>--------------------------------------
",Weblogic,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,Advanced,,,,,,,,,,,112112,,,2007-12-13 02:07:42.0,,,,,,0|i1abjr:,268337,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Doc/Lit/Wrapped services fail schema validation at runtime with JAXB+JAX-WS,CXF-1295,12384536,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,12/Dec/07 23:46,04/Dec/09 22:34,14/Mar/19 02:28,16/Oct/09 01:38,2.1,,,,,,,2.2.5,,JAXB Databinding,,,,,1,"If a service is doc/wrapped/lit, and you turn on schema validation on the endpoint, it will fail. The reason is that there are undeclared elements used.

To demonstrate this, look at org.apache.cxf.javascript.DocLitWrappedClientTest. In the @before method, there is a 'false' passed to 'setupRhino'. (If I rename that function you'll be able to figure it out).

Change it to 'true'. The test will fail with validation errors.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-03 18:30:59.249,,,no_permission,,,,,,,,,,,,,112111,,,Sat Oct 03 18:30:59 UTC 2009,,,,,,0|i14a8v:,233123,,,,,,,,"03/Oct/09 18:30;dkulp;If I set to true, this now passes on trunk.   Thus, I THINK this is resolved.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem creating several custom Headers,CXF-1294,12384481,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,timmeh,timmeh,12/Dec/07 10:23,29/Jan/08 21:51,14/Mar/19 02:28,15/Dec/07 02:23,2.0.3,,,,,,,2.0.4,,,,,,,0,"  Hi all,
we generated a Java WS Client from given wsdl-files, which should generate a SOAP Request with several Header entries.
At runtime one of two headers was dropped in the request.

Excerpt from generated Code:

<code>
public interface TelematikSignedPortType {

    @RequestWrapper(localName = ""TelematikExecute"", targetNamespace = ""http://ws.gematik.de/tel/transport/v1.2"", className = ""de.gematik.ws.tel.transport.v1.TelematikExecuteType"")
    @ResponseWrapper(localName = ""TelematikExecuteResponse"", targetNamespace = ""http://ws.gematik.de/tel/transport/v1.2"", className = ""de.gematik.ws.tel.transport.v1.TelematikExecuteType"")
    @WebMethod(operationName = ""TelematikExecute"", action = ""http://ws.gematik.de/tel/transportWSDL/v1.4#telematikexecute"")
    public void telematikExecute(
        @WebParam(targetNamespace = ""http://ws.gematik.de/tel/transport/v1.2"", name = ""Payload"", mode = Mode.INOUT)
        javax.xml.ws.Holder<de.gematik.ws.tel.transport.v1.TelematikExecuteType.Payload> payload,
        @WebParam(targetNamespace = ""http://ws.gematik.de/tel/transport/v1.2"", name = ""TransportHeader"", header = true, mode = Mode.INOUT)
        javax.xml.ws.Holder<de.gematik.ws.tel.transport.v1.TransportHeader> transportHeader,
        @WebParam(targetNamespace = ""http://ws.gematik.de/tel/transport/v1.2"", name = ""TelematikHeader"", header = true, mode = Mode.INOUT)
        javax.xml.ws.Holder<de.gematik.ws.tel.transport.v1.TelematikHeader> telematikHeader
    ) throws FaultMessage;
}
</code>

This issue seems to be related to filling the AbstractMessageContainer with MessageParts. This is done several times in the case of headers, overwriting  existing indices with the container's current size. As a result the WrapperMsgInfo in WrapperClassOutInterceptor.java gets corrupted index values, so that the first header is overwritten by the second one and so on.

<code>
		for (MessagePartInfo p : messageInfo.getMessageParts()) {
					if (Boolean.TRUE.equals(p
							.getProperty(ReflectionServiceFactoryBean.HEADER))) {
						MessagePartInfo mpi = wrappedMsgInfo.getMessagePart(p
								.getName());

                                                // MPI HAS CORRUPTED INDEX!

						if (objs.hasValue(p)) {
							newObjs.put(mpi, objs.get(p));
						}
					}
				}
</code>

Suggested Hotfix AbstractMessageContainer.jaa
<code>
	public void addMessagePart(MessagePartInfo part) {

                // KEEP EXISTING INDEX IF ANY

		if (messageParts.containsKey(part.getName())) {
			part.setIndex(messageParts.get(part.getName()).getIndex());
		} else {
			part.setIndex(messageParts.size());
		}
		messageParts.put(part.getName(), part);
	}
</code>



Thx for looking into this, keep up the good work.
cheers,
Timmeh and Simon.","Windows XP SP2, Eclipse 3.3, JAVA 1.6.03",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-15 02:23:42.696,,,no_permission,,Novice,,,,,,,,,,,112110,,,Sat Dec 15 02:23:42 UTC 2007,,,,,,0|i1abjz:,268338,,,,,,,,15/Dec/07 02:23;bmargulies;Dan might port this to 2.0.4.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SecurityException in FileUtils.getDefaultTempDir,CXF-1290,12384420,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,button_boxer,button_boxer,11/Dec/07 16:45,29/Jan/08 21:51,14/Mar/19 02:28,14/Dec/07 21:13,2.0.3,,,,,,,2.0.4,,,,,,,0,"FileUtils.getDefaultTempDir looks for a system property giving the CXF temporary directory name.  I am using CXF to call a web service from an application running under Java Web Start, which therefore doesn't have permission to access this system property and throws an AccessControlException.

The attached patch changes this so that rather than throw the exception, getDefaultTempDir treats such a permission failure the same way as if the system property were not set and generates a sensible value itself.

(observed in 2.0.3, but the method in question is the same in the svn trunk)",,,,,,,,,,,,,,,,,11/Dec/07 16:46;button_boxer;FileUtils.diff;https://issues.apache.org/jira/secure/attachment/12371445/FileUtils.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112107,,,Tue Dec 11 16:46:33 UTC 2007,,,,,,0|i1abkn:,268341,,,,,,,,11/Dec/07 16:46;button_boxer;Patch to FileUtils.java,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Forking another thread to invoke the service implementation in ServiceInvokerInterceptor is not working,CXF-1283,12384373,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,njiang,njiang,11/Dec/07 05:18,04/Dec/09 22:34,14/Mar/19 02:28,29/Oct/09 15:02,2.0,2.0.1,2.0.2,2.0.3,,,,2.1.8,2.2.5,Core,,,,,0,"I just did a test of using the separated thread pool for the servant execution, the test was failed. 

It is because CXF OutgoingChainInterceptor and ServiceInvokerInterceptor are invoked in the same thread, 
if we fork another thread to invoke the servant,  the original thread will not wait for the response message 
and keep on calling the OutgoingChainInterceptor and the OutgoingChainInterceptor can't get the outMessage
 from the exchange the output stream will be closed. The client side will not get the expected message then.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-11 08:27:07.995,,,no_permission,,,,,,,,,,,,,112101,,,Tue Dec 11 08:27:07 UTC 2007,,,,,,0|i0sypj:,167100,,,,,,,,"11/Dec/07 08:27;jliu;sth like below should work. I.e., in the Runnable, set a FINISHED flag once it is done.
   
 private void waitResponse(Exchange exchange) {
        int remaining = synchronousTimeout;
        while (!Boolean.TRUE.equals(exchange.get(FINISHED)) && remaining > 0) {
            long start = System.currentTimeMillis();
            try {
                exchange.wait(remaining);
            } catch (InterruptedException ex) {
                // ignore
            }
            long end = System.currentTimeMillis();
            remaining -= (int)(end - start);
        }
        if (!Boolean.TRUE.equals(exchange.get(FINISHED))) {
            LogUtils.log(LOG, Level.WARNING, ""RESPONSE_TIMEOUT"",
                exchange.get(OperationInfo.class).getName().toString());
        }
    }",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't set the excutor from JAXWS API,CXF-1282,12384372,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,njiang,njiang,11/Dec/07 05:04,04/Dec/09 22:34,14/Mar/19 02:28,29/Oct/09 15:01,2.0,2.0.1,2.0.2,2.0.3,,,,2.1.8,2.2.5,JAX-WS Runtime,,,,,1,"I can't set the executor for the endpoint by using the below code.

Endpoint endpoint = Endpoint.create(implementor);
endpoint.setExecutor(new SomeExecutor());
endpoint.publish(address);",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112100,,,2007-12-11 05:04:18.0,,,,,,0|i14f13:,233898,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
usage message problem with java2ws,CXF-1280,12384337,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,10/Dec/07 18:53,30/Apr/08 14:57,14/Mar/19 02:28,18/Dec/07 01:29,2.1,,,,,,,2.1,,Tooling,,,,,0,"bim1330% ~/x/apache-cxf-2.1-incubator-SNAPSHOT/bin/java2ws
[: 68: ==: unexpected operator
Missing argument: classname

Usage : java2ws -databinding <jaxb or aegis> -frontend <jaxws or simple> -wsdl -wrapperbean -client -server -o <output-file> -d <resource-directory> -s <source-directory> -classdir <compile-classes-directory> -cp <class-path> -soap12 -t <target-namespace> -beans <pathname of the bean definition file.>* -servicename <service-name> -portname <port-name> -address <address> -createxsdimports -h -v -verbose -quiet <classname> 

JavaToWS Error: org.apache.cxf.tools.common.toolspec.parser.BadUsageException: Missing argument: classname

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-13 08:04:43.319,,,no_permission,,,,,,,,,,,,,112098,,,Tue Dec 18 01:29:36 UTC 2007,,,,,,0|i1ablr:,268346,,,,,,,,"13/Dec/07 08:04;maomaode;java2ws is OK on linux and windows

You mean the java2js? java2js Do have problem on both the linux and windows","13/Dec/07 08:34;maomaode;wsdl2js not working, the class is not found, I guess this is a known issue, right?",13/Dec/07 13:41;bmargulies;The problem is the 'missing operator' message from the shell script. ,"18/Dec/07 01:29;bmargulies;The problem is that the shell test command wants '=', not '==', and my shell complained about ==. I fixed it in trunk, Dan might backport.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ObjectFactory.class is missing when a JAXBContext is created and no WS addressing information is added,CXF-1278,12384318,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,edellnolan,edellnolan,10/Dec/07 14:56,29/Jan/08 21:51,14/Mar/19 02:28,14/Dec/07 22:14,2.0.3,,,,,,,2.0.4,,JAXB Databinding,,,,,0,"Hi,

I have a method that i pass across an EndpointReferenceType created as below.

EndpointReferenceType ref = EndpointReferenceUtils.getEndpointReferenceWithId(.....) method

I attempt to Convert data to Xml and within the method it calls 
So obj is an EndpointReferenceType.

      Class<?> cls = obj instanceof JAXBElement 
                       ? ((JAXBElement)obj).getDeclaredType()
                       : obj.getClass();

        JAXBContext context = null;        
        Class[] classes = new Class[] {cls};
        context = new JAXBDataBinding(classes).getContext();


The real bug is here. We end up having no ObjectFactory.class in the context and as a consequence no WS information is added. 

There was a condition in the code in JAXBDataBinding class to check the following 

private void addWsAddressingTypes(Set<Class<?>> classes) {
        if (classes.contains(EndpointReferenceType.class)
            || classes.contains(ObjectFactory.class)) {

                 ......................
}

but the check for EndpointReferenceType was removed as it is expected that an ObjectFactory.class will always have been added.

Dan has also inidicated that it could be in the JAXBContextInitializer area. The workaround is to put the check back in but the fix is to find out why the ObjectFactory.class was not added.

thanks, Edell. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112096,,,2007-12-10 14:56:52.0,,,,,,0|i1abm7:,268348,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB schema validation fails for RPC,CXF-1277,12384314,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,10/Dec/07 14:07,04/Dec/09 22:34,14/Mar/19 02:28,02/Nov/09 17:35,2.1,,,,,,,2.2.5,,JAXB Databinding,,,,,0,"If I turn on schema validation in CXF in an RPC server, it always fails. This is because JAXB tries to validate the whole input message, and there's no schema in the wsdl for these things. It seems to me that there could be schema: they are just form-unqualified elements of the elements for the messages. Is there some reason-of-standardization why we can't just include this in wsdl we generate? If so, we could fabricate it for runtime validation, I guess.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-10 15:34:51.345,,,no_permission,,,,,,,,,,,,,112095,,,Mon Nov 02 17:35:20 UTC 2009,,,,,,0|i14e3r:,233748,,,,,,,,"10/Dec/07 15:34;dkulp;
I'm not sure that is possible.   With RPC, it's VERY conceivable to to have multiple operations with the same part name, but different types.   Example, the default for JAX-WS:

public Foo echoFoo(Foo f)
public Bar echoBar(Bar b)

whould result in BOTH operations having an unqualified ""arg0"" element, but the ""type"" for one op would be foo and the ""type"" for the other would be Bar.   

To do this, we'd basically have to have internally created schemas for each Message object.     That might work.   Not really sure though.
","10/Dec/07 15:59;bmargulies;The question then is: what is the status of schema validation as a product feature. We don't document it very clearly, but it seems possible that there should be a way to turn it on that either (a) carefully does nothing for RPC services, (b) carefully validates only below the level of the parts, or (c) depends on all the schema you are discussing.
","02/Nov/09 17:35;dkulp;
Managed to get JAXB to do this properly.   When writing, if you set the ""declared type"" for the JAXBElement to Object.class, it writes out an xsi:type that the validator uses so the element name is irrelevant.  When reading, I wrapper the XMLStreamReader with one that fakes an xsi:type (if a type isn't on the wire) so, again, the validator can figure out what to do.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Content-Encoding treated as a charset by HTTPConduit.WrappedOutputStream.handleResponse,CXF-1276,12384312,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,button_boxer,button_boxer,10/Dec/07 13:16,29/Jan/08 21:51,14/Mar/19 02:28,07/Jan/08 16:09,2.0.3,2.0.4,,,,,,2.0.4,,Transports,,,,,0,"HTTPConduit.WrappedOutputStream.handleResponse (HTTPConduit.java, around line 1920):
---------
String enc = connection.getContentEncoding();
if (enc == null
    && ct != null
    && ct.indexOf(""charset"") != -1) {
    enc = ct.substring(ct.indexOf(""charset"") + 8);
    if (enc.indexOf("";"") != -1) {
        enc = enc.substring(0, enc.indexOf("";""));
    }
}
inMessage.put(Message.ENCODING, HttpHeaderHelper.mapCharset(enc));
---------

When the HTTP response has a valid Content-Encoding header (e.g. ""Content-Encoding: gzip""), this fails as it tries to treat ""gzip"" as a charset name.  On 2.0.3 I get:

java.lang.NullPointerException
        at java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:846)
        at org.apache.cxf.helpers.HttpHeaderHelper.mapCharset(HttpHeaderHelper.java:82)

This has been fixed (CXF-1227) in the latest 2.0.4 snapshot and in that I get:

java.io.IOException: Invalid character set gzip in request.
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1936)

I haven't tried it in the 2.1 snapshot but the trunk version of HTTPConduit has the same code as the 2.0.4 branch.

Replacing String enc = connection.getContentEncoding(); with String enc = null; is enough to make it work but I don't know if there's a better way to fix it.

The background to this is that I'm working with a web service that does GZIP compression and I've written a pair of interceptors to GZIP the request stream and unzip the response, based on the code in samples/configuration_interceptor but doing the Content-Encoding headers properly (i.e. adding one to the request, and checking for one in the response before unzipping).  I'm more than happy to contribute these to CXF but they currently only work with the fix I described above.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-07 16:09:13.604,,,no_permission,,,,,,,,,,,,,112094,,,Mon Jan 07 17:51:27 UTC 2008,,,,,,0|i143kv:,232043,,,,,,,,"07/Jan/08 16:09;dkulp;
I think this is now resolved on trunk.  I'll merge it to 2.0.4 shortly.

","07/Jan/08 17:51;button_boxer;I've looked at your change on the trunk and I don't think it'll fix it for me.  The fix in rev 609658 means that it will now try and parse a charset out of the content-type first.  However if there is no charset in the content-type (which there isn't in my case, using MTOM) it still tries to use connection.getContentEncoding(), which will never be a valid charset - it's either null or something like ""gzip"" or ""deflate"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System property -Dcxf.config.file has no effect,CXF-1275,12384311,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,rtaugerbeck,rtaugerbeck,10/Dec/07 13:12,23/Jan/09 17:51,14/Mar/19 02:28,17/Dec/07 09:31,2.0.3,,,,,,,2.1.2,,Configuration,,,,,0,"I would like to specify a custom cxf configuration file to my client application (e.g. META-INF/cxf.xml), but the system property -Dcxf.config.file obviously has no effect.

Because the default constructor of ConfigurerImpl passes the name of the default config file, the corresponding code in ConfigurerImpl(String cfgFile) is never executed:

    public ConfigurerImpl(String cfgFile) {
        if (null == cfgFile) {
            cfgFile = System.getProperty(USER_CFG_FILE_PROPERTY_NAME);
        }
     ...

Could you please modifiy the code of the default constructor to:

    public ConfigurerImpl() {
        this(null);
    }

or something equivalent? I'm not sure whether this issue is fixed by the #CXF-1260 patch.

Thanks,
Ralf

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-10 13:55:57.197,,,no_permission,,Novice,,,,,,,,,,,112093,,,Mon Dec 17 09:31:29 UTC 2007,,,,,,0|i0v39j:,179502,,,,,,,,"10/Dec/07 13:55;gtully;I think the fix for #CXF-1260 will not help. The resolution of config in ConfigureImpl is unnecessary. The BusApplicationContext does the real work.

I think you need to use the URL version to specify the config file:
 -Dcxf.config.file.url=classpath:META-INF/cxf.xml 

Gary.
","10/Dec/07 14:12;rtaugerbeck;If I try your proposal I get an error message from org.apache.cxf.bus.spring.BusApplicationContext#getConfigResources

""The configuration file URL classpath:META-INF/cxf.xml is a a malformed URL.""

Ralf","15/Dec/07 02:02;bmargulies;I just used -Dcxf.config.file today successfully. It is a classpath, in absolute format (no leading slash). 

To diagnose problems like these, I put invalid XML into my cxf.xml and watch for the error.

 I recommend not using the name cxf.xml. Put yours at META-INF/mycxf.xml, or whatever, and -Dcxf.config.file=META-INF/mycxf.xml.

","17/Dec/07 09:31;rtaugerbeck;Thanks, that works.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLRefValidator can not pass if the type is xsd:anyType,CXF-1273,12384153,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,07/Dec/07 08:40,29/Jan/08 21:51,14/Mar/19 02:28,07/Dec/07 08:54,2.0.3,,,,,,,2.0.4,,Tooling,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112091,,,2007-12-07 08:40:14.0,,,,,,0|i0v2qv:,179418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Using contentType = ""application/octet-stream"" on returned Datahandler/DataSource causes an InputStream to be left open",CXF-1269,12384112,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,zackdjones,zackdjones,06/Dec/07 20:19,30/Apr/08 15:00,14/Mar/19 02:28,21/Feb/08 21:38,2.0.2,,,,,,,2.0.5,,,,,,,0,"Our service returns a Datasource whos getContentType() method returns ""application/octect-stream"". Method is named getMessage() and returns a DataHandler and a messageId in a wrapped type.

Our service also contains a method to remove the file source associated with this Datasource by passing the messageId in the request.

A client side test fails because the message can't  be deleted, presumably b/c an InputStream to the file is left open. 

This only recently became an issue as before we were returning type ""text/xml"", which worked as expected. It was desirable to change the type as our WSDL has the xmime:expectedContentTypes=""application/octet-stream"" attribute on the base64Binary type so we can use DataHandlers on the client side.

Unfortunately we switched back to using text/xml.",Running CXF in Jetty using bare bones cxf-service.xml config ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-06 20:46:46.872,,,no_permission,,,,,,,,,,,,,112087,,,Thu Feb 21 21:38:14 UTC 2008,,,,,,0|i0v3n3:,179563,,,,,,,,"06/Dec/07 20:46;dkulp;
Looking through the code, I THINK this might be caused in JAXBAttachmentMarshaller.addMtomAttachment(....)


if (""application/octet-stream"".equals(handler.getContentType())) {
            try {
                Object o = handler.getContent();
                if (o instanceof String 
                    && ((String)o).length() < THRESHOLD) {
                    return null;
                } else if (o instanceof byte[]
                            && ((byte[])o).length < THRESHOLD) {
                    return null;
                }
            } catch (IOException e1) {
                //ignore, just do the normal attachment thing
            }
        }

Most likely, instead of calling handler.getContent(), we should call handler.getDataSource() and check if it's a URLDataSource or FileDataSource and do something a bit smarter in those cases.   My gut feeling is that the call to getContent is returning a FileInputStream that is holding onto it.

I'd appreciate it if someone would mess around with that and see if that's the issue.   If so, send a patch!","21/Feb/08 21:38;dkulp;I've implemented the change above.  I HOPE that fixes it, but I'm not 100% sure since I run on a real OS ( :-) ) that doesn't have the issue of not being able to delete the file. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nil value for nillable array element is default-constructed,CXF-1266,12384036,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,06/Dec/07 01:23,04/Dec/09 22:34,14/Mar/19 02:28,31/Oct/09 18:49,2.1,,,,,,,2.2.5,,JAXB Databinding,,,,,0,"My javascript code generates the (about to be) attached XML message for the beanFunction operation of org.apache.cxf.javascript.fortest.SimpleDocLitBare. The service receives a default-constructed object instead of a null pointer for the slot corresponding to the xsi:nil.

",,,,,,,,,,,,,,,,,06/Dec/07 01:23;bmargulies;ii.xml;https://issues.apache.org/jira/secure/attachment/12371083/ii.xml,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-12-06 20:49:30.949,,,no_permission,,,,,,,,,,,,,112084,,,Sat Oct 31 18:49:14 UTC 2009,,,,,,0|i14emv:,233834,,,,,,,,06/Dec/07 20:49;dkulp;This seems to be a bug in JAXB.   We just send the XML into the context.marshal passing in the TestBean1[] class object.   It's giving an array back with a default object as the first object.    Not much we can do about it.   Maybe log a bug with them?,07/Dec/07 00:39;bmargulies;I agree. Do you have any more status with them than I do?,10/Dec/07 02:15;bmargulies;https://jaxb.dev.java.net/issues/show_bug.cgi?id=458,"03/Oct/09 18:24;dkulp;
The JAXB bug is now marked resolved.  Is this now resolved?","28/Oct/09 19:24;dkulp;
Benson, 

If I remove the @Ignore on the test for this in DocLitWrappedClientTest,  the generated message looks like:
.......
          <jns0:stringItem>bean2</jns0:stringItem>
                </jns1:beanTwoNotRequiredItem>
            </jns3:beanArray>

            <jns3:beanArray/> <!-- NOTE the missing xsi:nil -->

            <jns3:beanArray xmlns:jns0='uri:org.apache.cxf.javascript.testns3' xmlns:jns1='uri:org.apache.cxf.javascript.testns' xmlns:jns2='uri:org.apache.cxf.javascript.testns2' >
                <jns2:intItem>43</jns2:intItem>
                <jns1:longItem>0</jns1:longItem>
.......

Thus, it's getting schema validation errors.   In anycase, this seems to be a javascript generation bug or something as that definitely should be nil.","31/Oct/09 18:27;bmargulies;I need some help ...

In the schema, the bean array is not set nillable. So what am I supposed to do to serialize a null? Or are array elements nillable ex-officio?

 @WebMethod
    void beanFunction(@WebParam(name = ""bean1"") TestBean1 bean, 
                      @WebParam(name = ""beanArray"") TestBean1[] beans);


 /** {@inheritDoc}*/
    public void beanFunction(TestBean1 bean, TestBean1[] beans) {
        lastBean1 = bean;
        lastBean1Array = beans;
    }

",31/Oct/09 18:49;bmargulies;r831581,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JettyHTTPDestination does not set a thread default bus,CXF-1264,12384010,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sergey_beryozkin,sergey_beryozkin,05/Dec/07 18:38,29/Jan/08 21:51,14/Mar/19 02:28,05/Dec/07 21:34,2.0,2.0.1,2.0.2,2.0.3,,,,2.0.4,,Transports,,,,,0,"JettyHttpDestination does not set the thread default bus similar to the way AbstractCxfServlet does it.

This causes a pronlem in environments where with multiple Buses : the first created bus is assumed to be the thread default bus by default, thus turning any lazily-handled configuration associated with other buses (for ex, a config for a client outbound request to be made as part of processing a given inbound request) ineffective",,,,,,,,,,,,,,,,,05/Dec/07 19:42;sergey_beryozkin;cxf-patch-1264.patch;https://issues.apache.org/jira/secure/attachment/12371065/cxf-patch-1264.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-12-05 21:34:42.893,,,no_permission,,,,,,,,,,,,,112082,,,Wed Dec 05 21:34:42 UTC 2007,,,,,,0|i13zi7:,231382,,,,,,,,05/Dec/07 19:42;sergey_beryozkin;Patch with a test submitted,"05/Dec/07 21:34;dkulp;
I've applied the patch, but I've also updated all the Observers to properly set the threadlocalbus so the transports don't really have to.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Two tests enshrine incorrect behavior in ReflectionServiceFactoryBean,CXF-1263,12384000,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,05/Dec/07 17:13,05/Dec/07 18:49,14/Mar/19 02:28,05/Dec/07 18:49,2.1,,,,,,,Invalid,,,,,,,0,"I am about to commit @Ignores in the following two tests. As best I can tell, the tests test for incorrect XmlSchema that results from reversed settings of minOccurs and maxOccurs in the ReflectionServiceFactoryBean.

org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.JaxwsServiceBuilderNoAnnoTest
org.apache.cxf.tools.java2wsdl.processor.JavaToProcessorTest

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-05 18:49:07.418,,,no_permission,,,,,,,,,,,,,112081,,,Wed Dec 05 18:49:07 UTC 2007,,,,,,0|i146kf:,232527,,,,,,,,"05/Dec/07 18:49;dkulp;
Actually, the tests were OK.    The change to RSFB is what the problem was.  Apparently, if you do:

setMinOccurs(1)
setMaxOccurs(0)

the written schema doesn't actually write a max or min which is actually what we wanted.    The change you made to make it setMinOccurs(0) caused a min to be written, which is really not what we wanted.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigureImpl with spring construction duplicates looking for cxf.xml on the classpath and can error out with a warning,CXF-1260,12383983,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,gtully,gtully,05/Dec/07 14:29,06/Dec/07 17:01,14/Mar/19 02:28,06/Dec/07 17:00,2.0.3,,,,,,,2.0.4,,Configuration,,,,,0,"Since: http://svn.apache.org/viewvc?view=rev&revision=584908

cxf.xml in rt-core is responsible for creating an instance of ConfigureImpl. This is problematic because the defauilt constructed version of ConfigureImpl looks for cxf.xml (or cxf.config.file sys property) on the classpath (it does not look for cxf.config.uri!) and creates a BusApplicationContex if it finds one. This is unnecessary as the current applicaton context will be injected in via the ApplicationContextAwareProcessor.

When cxf.xml on the classpath references other beans that come from extensions, application context creation fails with an exception that is logged as a warning. this is ugly.
This is not uncommon as cxf.xml is the default user configuration file name.

It seems like ConfigureImpl is duplicating code around default configuration that is already managed by the BusApplicaitonContext.

Does ConfigureImpl have a place outside spring that necessitates looking for cxf.xml?

I think the fix may be to remove the posibility that ConfigureImpl can create its own BusApplicationContext. What do you think.",,,,,,,,,,,,,,,,,06/Dec/07 12:25;gtully;ignore_cxf_xml.patch.txt;https://issues.apache.org/jira/secure/attachment/12371121/ignore_cxf_xml.patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112078,,,Thu Dec 06 17:00:15 UTC 2007,,,,,,0|i1abnz:,268356,,,,,,,,"05/Dec/07 14:33;gtully;A workaround is to move your user cxf.xml to say user-cxf.xml and provide -Dcxf.config.file=user-cxf.xml to the jvm.
In this case, ConfigureImpl will not find cxf.xml on the classpath and will not try and create a BusApplicationContext when constructed from spring.

Spring bus factory will already have resolved user-cxf.xml and added it to its application context which will eventually be set on the ConfigureImpl that spring created so all still hangs together.",06/Dec/07 12:25;gtully;this patch ensures that ConfigureImpl will not look for cxf.xml on the classpath and will not create a Busapplicaiton context. The application context is either passed in in the constructor or set via the setter. at the moment the set injection is preformed automatically as it implements the ApplicationContextAware interface.,"06/Dec/07 17:00;gtully;patch committed, thanks dan:

URL: http://svn.apache.org/viewvc?rev=601763&view=rev
Log:
[CXF-1260] Fix spurious warnings and issues loading multiple contexts and such Fix spurious warnings and issues loading multiple contexts and such
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.SecurityException when i use cxf-codegen:wsdl2java for maven in netbeans ide,CXF-1256,12383965,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,asmodai1973,asmodai1973,05/Dec/07 10:36,29/Jan/08 21:51,14/Mar/19 02:28,08/Jan/08 16:05,2.0.3,,,,,,,2.0.4,,,,,,,0,"[cxf-codegen:wsdl2java {execution: compile-backoffice-wsdl}]
------------------------------------------------------------------------
[ERROR]FATAL ERROR
------------------------------------------------------------------------
null
------------------------------------------------------------------------
Trace
java.lang.SecurityException

        at org.netbeans.TopSecurityManager.checkSetSecurityManager(TopSecurityManager.java:373)
        at org.netbeans.TopSecurityManager.checkPermission(TopSecurityManager.java:337)
        at java.lang.System.setSecurityManager0(System.java:253)
        at java.lang.System.setSecurityManager(System.java:245)
        at org.apache.cxf.maven_plugin.WSDL2JavaMojo.execute(WSDL2JavaMojo.java:145)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:417)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:610)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:551)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:530)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:309)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:276)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.codehaus.mevenide.netbeans.embedder.exec.MyLifecycleExecutor.execute(MyLifecycleExecutor.java:92)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:393)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:182)
        at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:760)
        at org.codehaus.mevenide.netbeans.execute.MavenJavaExecutor.run(MavenJavaExecutor.java:196)
        at org.netbeans.core.execution.RunClassThread.run(RunClassThread.java:151)


[Update]
I received this error when i try to generate source code from wsdl i i'm in the netbeans 6.0 ide

This error come only if is use the maven version of the plugin.

If i use a external problem ",Maven netbeans 6.0 ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-13 15:20:49.128,,,no_permission,,,,,,,,,,,,,112074,,,Tue Jan 08 08:53:44 UTC 2008,,,,,,0|i1abov:,268360,,,,,,,,"13/Dec/07 15:20;mazzag;I've run into the exact same problem.  I've figured out how to debug with Eclipse/Maven[1] but not yet NetBeans/Maven because of this (and a couple of other errors) in NetBeans 6.0.

Still, this is not a CXF problem at all.  CXF runs fine with Maven/Eclipse, and with Maven externally (from a command window).  Also, if you configure MevenIDE within NetBeans (tools->options->miscellaneous->Maven2) to use your local version of Maven, this problem goes away. (although you cannot subsequently trace debug I believe if you don't use NetBeans' internal Maven instance.)

I think you need to send this bug to either NetBeans or the MevenIDE team (probably the latter).

[1] http://www.jroller.com/gmazza/date/20071212",13/Dec/07 15:41;gmazza;Not a CXF bug.,"13/Dec/07 16:53;gmazza;I've noticed that GlassFish Metro's wsimport *will* work with mevenide but it runs into the same dependency-reading error messages that CXF does afterwards.  Anyway,
I submitted a bug report that hopefully will get the debugging output improved for further troubleshooting:

http://jira.codehaus.org/browse/MEVENIDE-578
","07/Jan/08 16:20;dkulp;
Glen or Laurent,

Could one of you check with the latest code on trunk/2.0.x branch.   I removed all the security manager stuff last week while updating the plugin for CXF-1246","08/Jan/08 01:08;gmazza;Oh! I stand mistaken then if it was a CXF bug.  Still, it would take me a long time to try to duplicate the problem, because due to unrelated problems I've given up trying to debug Mavenized projects on NetBeans[1].  AFAICT NetBeans does not fully let you debug a Mavenized project from its IDE, so I'm just staying with Eclipse right now for these tasks.

[1] http://www.jroller.com/gmazza/date/20071216","08/Jan/08 08:53;asmodai1973;Hi,

A great thanks. I check your correction in the 2.0.4 snapshot and all stuff are working.

Laurent.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error from CXF if optional method argument is missing,CXF-1251,12383821,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,tawfik,tawfik,03/Dec/07 19:45,29/Jan/08 21:51,14/Mar/19 02:28,14/Dec/07 17:45,,,,,,,,2.0.4,,Aegis Databinding,,,,,0,"Setting the minOccurs for method parameters in the aegis mapping file does not apply to the wsdl so the wsdl shows method parameters like this for example (even with minOccurs set to 1):
 
<xsd:element name=""findLocation""> 
<xsd:complexType> 
<xsd:sequence> 
<xsd:element minOccurs=""0"" name=""location"" type=""xsd:string""/> 
<xsd:element minOccurs=""0"" name=""findOptions"" type=""tns:FindOptions""/> 
<xsd:element minOccurs=""0"" name=""token"" type=""xsd:string""/> 
</xsd:sequence> 
</xsd:complexType> 
</xsd:element> 

With minOccurs = 0, some toolkits would send the parameters like this if the findOptions parameter is null: 

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:v20=""http://arcwebservices.com/v2008""> 
   <soapenv:Body> 
      <v20:findLocation> 
         <v20:location>Redlands</v20:location> 
         <v20:token>YXd4MmRlbW86MTE5NTE2jI3MzpGbGV4OjZjNmZlzQ21ZTljMTA4OTNVlY2NmOWF2Fl</v20:token> 
      </v20:findLocation> 
   </soapenv:Body> 
</soapenv:Envelope> 

Wich returns: 

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""> 
   <soap:Body> 
      <soap:Fault> 
         <faultcode>soap:Server</faultcode> 
         <faultstring>Current state not START_ELEMENT</faultstring> 
      </soap:Fault> 
   </soap:Body> 
</soap:Envelope> 

Not sure what the best way to fix it is but it seems like we either:
1- fix the code to apply the minOccurs from the aegis mapping files so clients don't send this kind of request
2- fix the code to be able to handle the minOccurs of 0 on the server side

Please let me know if yo need any more info.

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-13 20:40:33.473,,,no_permission,,,,,,,,,,,,,112070,,,Mon Dec 17 21:24:15 UTC 2007,,,,,,0|i0uxev:,178554,,,,,,,,"13/Dec/07 19:08;tawfik;Hi,

Did anyone get a chance to look into this one?
Unless we find a solution we will not be able to release with CXF and we'll have to rollback to xfire.

Thanks","13/Dec/07 20:40;dain;I don't know what the problem is, but I can give you some pointers on where to debug.

The minOccurs schema attribute for an array is written in org.apache.cxf.aegis.type.basic.ArrayType.writeSchema(Element):291

The minOccurs property is set into the ArrayType by org.apache.cxf.aegis.type.AbstractTypeCreator.createArrayType(TypeClassInfo):185

The minOccurs value in the createArrayType method comes from the TypeClassInfo object, and that value is either loaded in org.apache.cxf.aegis.type.XMLTypeCreator.readMetadata(TypeClassInfo,Element,Element), or is auto created via reflection when inspecting a bean.

My guess is the ArrayType is being auto created via reflection instead of by reading the xml document.  With a bit of debugging you may be able to find out why, and either fix it yourself (hopefully, sending us the patch), or letting us know why it using reflection.


","14/Dec/07 15:32;dkulp;I'll dig into this a bit.   This SHOULD be handled by the doclitininterceptor.   It works for JAXB.  Not sure why it isn't for Aegis.

That said, not supporting the minOccurs thing from the aegis config file is definitely a bug.   I probably won't get to look at that.
","14/Dec/07 15:39;dkulp;
Actually, there are other related bugs.   If you try to SEND a message like that via:

findLocation(""Redlands"", null, ""token"");

it outputs:
<findOptions xmlns:ns2=""http://www.w3.org/2001/XMLSchema-instance"" ns2:nil=""true"" />
which is wrong as the element isn't nillable.   Definitely some badness going on with the minOccurs=0 stuff.



","14/Dec/07 17:50;tawfik;Thank you Dan.  You did help us with some other issues we posted earlier and I appreciate it.
I'll give it a try and let you know.",17/Dec/07 21:24;tawfik;Works great.  Thank you!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF run with Spring 2.5  will get bean create error (out of stack memory) when CXF configures the endpoint with the <jaxws:endpoint> configure file,CXF-1249,12383787,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,03/Dec/07 12:25,29/Jan/08 21:51,14/Mar/19 02:28,03/Dec/07 13:31,2.0.3,,,,,,,2.0.4,,Configuration,,,,,0,"Here is configuration file.

<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
       xmlns:context=""http://www.springframework.org/schema/context""              
       xmlns:jaxws=""http://cxf.apache.org/jaxws""
       xsi:schemaLocation=""

http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://cxf.apache.org/jaxws 
http://cxf.apache.org/schemas/jaxws.xsd"">
  
     <context:annotation-config />   
        
     <jaxws:endpoint id=""{http://apache.org/hello_world_soap_http}SoapPort""
                  createdFromAPI=""true"">
		<jaxws:features>
          <bean class=""org.apache.cxf.feature.LoggingFeature""/>
        </jaxws:features>
     </jaxws:endpoint>

</beans>

When the CXF configure the Endpoint with this configure file, it will run into the endless loop , since endpoint init method will call endpoint configure(this) method.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112068,,,Mon Dec 03 13:31:56 UTC 2007,,,,,,0|i13zuf:,231437,,,,,,,,03/Dec/07 13:31;njiang;Now the patch are in the trunk and 2.0.x-fixes branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLValidator does not use CatalogResolver to reslove wsdl ,CXF-1247,12383765,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ema,ema,03/Dec/07 03:26,30/Apr/08 15:00,14/Mar/19 02:28,05/Mar/08 17:20,2.0.3,,,,,,,2.0.5,,,,,,,0,"There are some tests failures if offline:
 
The testCatalog2 and testCatalog3 tests in CodeGenBugTest are failing if 
example.org is not resolvable or available.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112066,,,2007-12-03 03:26:41.0,,,,,,0|i1abq7:,268366,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""mvn generate-sources"" works with wsdl2java but not ""mvn groupid:artifactid:version:goal""",CXF-1246,12383721,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,maomaode,mazzag,mazzag,01/Dec/07 20:20,30/Apr/08 14:57,14/Mar/19 02:28,22/Feb/08 18:26,2.1,,,,,,,2.1,,Tooling,,,,,0,"I'm trying to use Maven to run wsdl2java.  ""mvn (phase name)"" works fine in generating the classes, but ""mvn groupid:artifactid:[version:]goal"" returns a ""Must specify wsdlOptions"" error (even though wsdlOptions are specified).

In particular, placing a hello_world.wsdl file in the src/wsdl directory of a new project, and the attached pom.xml file:

1.) running ""mvn generate-sources"" has wsdl2java works fine -- artifacts are created.

2.) ""mvn org.apache.cxf:cxf-codegen-plugin:wsdl2java""
or
""mvn org.apache.cxf:cxf-codegen-plugin:2.0.3-incubator:wsdl2java"",  *fails*, nothing generated, it just returns the ""Must specify wsdlOptions"" error.
",Ubuntu Linux,,,,,,,,,,,,,,,,01/Dec/07 20:21;mazzag;hello_world.wsdl;https://issues.apache.org/jira/secure/attachment/12370760/hello_world.wsdl,01/Dec/07 20:20;mazzag;pom.xml;https://issues.apache.org/jira/secure/attachment/12370759/pom.xml,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-12-03 03:53:15.261,,,no_permission,,Novice,,,,,,,,,,,112065,,,Fri Jan 04 21:02:06 UTC 2008,,,,,,0|i1abqf:,268367,,,,,,,,01/Dec/07 20:21;mazzag;WSDL file (kept in src/wsdl directory).,"03/Dec/07 03:53;maomaode;Probably adding /src/main/resources/wsdl and /src/test/main/resources/wsdl as well, does it make sense?

Also, Is it ok mark the fix version to 2.1?","10/Dec/07 07:42;maomaode;Glen,

I've changed the code-gen plugin a little bit,  is it possible for you to review this change?

You can take a look at the systests/pom.xml, what we need is just specify

<testSourceRoot>${basedir}/target/generated/src/test/java</testSourceRoot>
<wsdlRoot>${basedir}/src/test/resources/wsdl</wsdlRoot>

We don't need to list all the wsdl files in the wsdlOptions any more, (but the wsdlOptions way still works.)

anyway, if it works for you , then I'll go through all the modules, and using this approach.
We should have very clean pom.xml at that time
","12/Dec/07 14:18;mazzag;Yes, I'll try to get to this soon.  Many thanks!

Glen","13/Dec/07 06:16;maomaode;I have updated testutils and tools/javato/ws two modules.

Currently it supported only one wsdlRoot, we can add multiple wsdlRoots if we think it's necessary

The wsdlRoot and wsdlOptions can co-exist

There's no default wsdlRoot at moment","26/Dec/07 03:15;mazzag;Sorry for the delay, I haven't forgotten this issue--I will still test it out.","26/Dec/07 05:11;mazzag;OK, I tested it, using the older 2.0.3 way (same wsdl as above, except cxf.version property is now ""2.1-incubator-SNAPSHOT"") and the new way you recommend in systests/pom.xml.

Using the old way, this problem still needs fixing.  The original problem is still occurring: ""mvn generate-sources"" works but  ""mvn org.apache.cxf:cxf-codegen-plugin:2.1-incubator-SNAPSHOT:wsdl2java"" does not.  This time, instead of getting ""Must specify wsdlOptions"" error like I was in 2.0.3 I get: ""Nothing to generate"" (of course, the latter is run after I mvn clean to get rid of the target directory so there *is* something that needs to be generated.)

Using the new way, same problem:  ""mvn generate-sources"" works (after I name the phase that) but ""mvn org.apache.cxf:cxf-codegen-plugin:2.1-incubator-SNAPSHOT:wsdl2java"" fails with the same ""nothing to generate"" error.

Here is my plugin code:

         <plugin>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-codegen-plugin</artifactId>
            <version>${cxf.version}</version>
            <executions>
               <execution>
                  <id>generate-test-sources</id>
                  <phase>generate-sources</phase>
                  <configuration>
                     <testSourceRoot>
                        ${basedir}/target/generated/src/main/java
                     </testSourceRoot>
                     <wsdlRoot>
                        ${basedir}/src/wsdl
                     </wsdlRoot>
                  </configuration>
                  <goals>
                     <goal>wsdl2java</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

Also, one more concern:  I'm not sure that the new element should be called ""testSourceRoot"" -- because it is used in non-test cases as well.  I would think ""sourceRoot"" or ""sourceOutput"" would be better.

Thanks,
Glen
","29/Dec/07 06:46;maomaode;I see the problem, it's not working, becuase we don't have the DEFAULT wsdlRoot specified as I commented before.

The testSourceRoot is there for a long time, I'm not sure when it was added, but it has reasons in there.
And the resource is we use this infomation to tell the maven plugin to add the 'addTestCompileSourceRoot(testSourceRoot)'

You can see 'sourceRoot' in the testutils module.

Well, all in all, I think it's time to set a DEFAULT wsdlRoot now",29/Dec/07 07:30;maomaode;DONE,"04/Jan/08 07:11;maomaode;Here's my points

 * 2.0.4 will not include this fix, the fix is for 2.1 release

 * The default behaviors of 'mvn wsdl2java'
      ** run wsdl2java on the src/main/resources/wsdl/*.wsdl and put the generated sources into the target/generated/src/main/java
      ** run wsdl2java on the src/test/resources/wsdl/*.wsdl and put the generated sources into the target/generated/src/test/java
 
  * If the wsdlRoot is specified, then it is used to generate the wsdls, and in this case the  <testSourceRoot/> is used to locate the generated sources for the test wsdls, by default the <sourceRoot/> is used.

   * Add an expression, so we can pass the wsdlRoot from the command line i.e
      mvn wsdl2java -DwsdlRoot=YOUR_WSDL_ROOT [-DtestSourceRoot=]

   * No default value on wsdlRoot

All in all, the only modification I'll made is put the expression on wsdlRoot

  ","04/Jan/08 21:02;dkulp;
OK.  I've implemented pretty much all of this and got it merged onto 2.0.4.   The only difference with 2.0.4 is that the wsdlRoot and testWsdlRoot defaults to ""null"" for 2.0.4, but defaults to the target/generated/src/main/java on 2.1.

Can you take a look to make sure it all looks OK?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread hangs when processing response message using LocalTransport with dispatchDirect,CXF-1245,12383702,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mcoogan,mcoogan,01/Dec/07 13:17,29/Jan/08 21:51,14/Mar/19 02:28,03/Dec/07 20:45,2.0.3,,,,,,,2.0.4,,Transports,,,,,0,"When running requests on a local transport configured with DISPATCH_DIRECT = true, small request/response messages process successfully but any request that generates a response > 1KB seems to hang the JVM. The problem appears to be in the PipedInput/OutputStreams. If the buffer (default size 1024B) fills up it is never flushed and the thread appears to hang in an eternal wait (PipedInputStream.awaitSpace())

The PipedInput and PipedOutput Streams are on the same thread and therefore the buffer is never cleared until after the stream is closed. Pipes should never be used on a single thread. That will definitely cause a hang. Possibly should use a CachedOutputStream and then grab the inputstream in the dispatchDirect method. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,112064,,,2007-12-01 13:17:40.0,,,,,,0|i1abqn:,268368,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS demo not working with return type String,CXF-1240,12383482,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,29/Nov/07 03:44,30/Nov/07 06:32,14/Mar/19 02:28,30/Nov/07 06:20,2.1,,,,,,,2.1,,,,,,,1,"JAX-RS demo does not work when a resouce method returns String, See below:

   @javax.ws.rs.HttpMethod(""GET"")
   @javax.ws.rs.UriTemplate(""{section}/{id}"")
   public String findBySectionAndId(@javax.ws.rs.UriParam(""section"")
   String section, @javax.ws.rs.UriParam(""id"")
   String id) {
       return ""Hello World - section is "" + section + "", id is "" + id + ""\n"";
   }

FWIW I had to change type of the ""Id"" parameter from an int to a String not to throw a IllegalArgumentException
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112060,,,2007-11-29 03:44:17.0,,,,,,0|i1abrj:,268372,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DispatchIndataBindingInterceptor removes out the inputStream even if it not a SOAP or XML Binding.,CXF-1238,12383241,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,apaibir,apaibir,apaibir,26/Nov/07 17:12,29/Jan/08 21:51,14/Mar/19 02:28,06/Dec/07 14:57,2.0.3,,,,,,,2.0.4,,JAX-WS Runtime,,,,,0,"The DispatchInDataBindingInterceptor makes a assumption of the message being read of the stream and then 
closes and then removes of the inputStream.
This may not be true for non SoapMessage or XmlMessage.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112058,,,Mon Nov 26 17:47:49 UTC 2007,,,,,,0|i1abrz:,268374,,,,,,,,26/Nov/07 17:47;apaibir;This fix needs to be propagated to cxf-2.0.x-fixes branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scary warnings from new engine lifecycle,CXF-1236,12383227,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bmargulies,bmargulies,26/Nov/07 14:39,29/Jan/08 21:51,14/Mar/19 02:28,01/Dec/07 10:18,2.1,,,,,,,2.0.4,,Transports,,,,,0,"WARNING: Could not find the handler to remove for context url http://localhost:8808/HelloWorldDocLit

You can see this by running the QueryHandlerTest in rt//javascript.

WARNING should only be used for something the user should really worry about, in my opinion.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-01 10:18:28.384,,,no_permission,,,,,,,,,,,,,112056,,,Sat Dec 01 10:18:28 UTC 2007,,,,,,0|i1absf:,268376,,,,,,,,01/Dec/07 10:18;njiang;The patch is in the svn repository now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Array confusion for Doc/Lit/Bare methods,CXF-1234,12383191,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,26/Nov/07 02:17,13/Nov/09 17:27,14/Mar/19 02:28,06/Oct/09 18:19,2.1,,,,,,,2.1.4,,JAX-WS Runtime,,,,,1,"1) Open up org.apache.cxf.javascript.DocLitBareClientTest.
2) Un-ignore callFunctionWithBeans

The resulting failure stems from a MessagePartInfo that returns true for isElement, and stores a reference to an ordinary scalar element, even though the part type is an array type. The MessagePartInfo also stores a reference to a complex type that correctly represents the array nature of the parameter.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-06 18:19:28.153,,,no_permission,,,,,,,,,,,,,50438,,,Tue Oct 06 18:19:28 UTC 2009,,,,,,0|i1absv:,268378,,,,,,,,06/Oct/09 18:19;dkulp;This seems to have been fixed in svn rev 601594 since the @Ignore was removed then.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When @WebParam fights with @XmlRootElement, who is supposed to win?",CXF-1231,12383148,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,24/Nov/07 03:21,30/Apr/08 14:57,14/Mar/19 02:28,24/Nov/07 19:39,2.1,,,,,,,2.1,,JAXB Databinding,,,,,0,"In the Javascript project, you will find a test called DocLitWrappedClientTest. If you remove the Ignore from a case, it will fail.

The failure occurs as follows:

In SimpleDocLitWrapped (the SEI), the method beanFunction is defined to have, as its first parameter, an item with an explicit name of 'bean1' in the @WebParam.

However, that parameter is of type TestBean1, which has an @XmlRootElement without a name parameter.

The result of this is that the service model sets up, at runtime, with a MessagePartInfo with a concrete name derived from the XmlRootElement.

If this is correct, please tell me so and close this report. If the @WebParam is supposed to win the fight, on the other hand, we've got a bug.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112052,,,Sat Nov 24 19:39:13 UTC 2007,,,,,,0|i13zwv:,231448,,,,,,,,"24/Nov/07 03:44;bmargulies;I can add a little more color commentary to this.

The Javascript generator code serializes a wrapped operation by using the element and type it finds hanging off the wrapped part in the wrapped operation.

The DocLitInterceptor, on the other hand, uses the unwrapped parts from the unwrapped operation.

In this case (name conflict between XmlRootElement and WebParam), the two disagree. The unwrapped part has a concreteName from the XmlRootElement, while the complex type has the name from the WebParam.

It would be convenient, needless to say, if they agreed with each other.
","24/Nov/07 15:08;bmargulies; <xsd:element name=""beanFunction"" type=""tns:beanFunction""/>
    <xsd:complexType name=""beanFunction"">
        <xsd:sequence>
            <xsd:element minOccurs=""0"" ref=""ns0:testBean1""/>
            <xsd:element maxOccurs=""unbounded"" minOccurs=""0"" ref=""ns0:testBean1""/>
        </xsd:sequence>
    </xsd:complexType>

From the above schema, the runtime has constructed an XmlSchemaComplexType wih a first element with a name of bean1. That name is apparently wrong. In fact, I don't understand how the local name of an element could ever legitimately differ from that of its refName. My xmlSchema book explicitly forbids it!
",24/Nov/07 19:39;bmargulies;I fixed the source of the inconsistency.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataReader tries to handle 'wrapped' messages and produces misleading validation,CXF-1230,12383135,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,bmargulies,bmargulies,23/Nov/07 22:47,30/Apr/08 14:57,14/Mar/19 02:28,21/Feb/08 21:37,2.1,,,,,,,2.1,,JAXB Databinding,,,,,0,"Consider a wrapped method that has no explicit @RequestWrapper. In JAXB+JAXWS, the recognition of the XML is handled in the interceptors.

Nonetheless, you can ask the JAXB data binding object for a reader on such a message, and it will give you one. That reader, presented with the wrapper element, will hit a validation error that is rather misleading. The following exception is claiming that the reader will accept either (a) the element for the first of the wrapped parameters, or (b) the entire object for some other message altogether! The first is not altogether nutty, perhaps the reader actually is supposed to handle the individual parameter items. But why is it offering to accept the second?

This level of modularity is, of course, not prime real estate, so I wouldn't expect anyone to drop other tasks and run here.  I'll find some other way to test what I wanted to test.

javax.xml.bind.UnmarshalException: unexpected element (uri:""uri:org.apache.cxf.javascript.fortest"", local:""beanFunction""). Expected elements are <{uri:org.apache.cxf.javascript.testns}basicTypeFunctionReturnStringWrapper>,<{uri:org.apache.cxf.javascript.testns}stringWrapper>,<{uri:org.apache.cxf.javascript.testns}testBean1>
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:603)


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-21 21:37:19.215,,,no_permission,,,,,,,,,,,,,112051,,,Thu Feb 21 21:37:19 UTC 2008,,,,,,0|i1abtj:,268381,,,,,,,,"21/Feb/08 21:37;dkulp;
I believe this is now fixed in 2.1.   In 2.1, if there are no RequestWrapper objects, we actually use ASM to generate one in memory so that all the JAXB annotations can be handled properly.   Thus, at validation time, the appropriate ""top level"" element is found.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check for element name clash in request and response messages ignores setting of enableWrapperStyle,CXF-1229,12383105,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pc,pc,23/Nov/07 10:04,30/Apr/08 14:54,14/Mar/19 02:28,04/Apr/08 01:11,2.0.2,,,,,,,2.0.6,,Tooling,,,,,0,"One way to get around the method signature problems with a request and a response message having an element with the same name but with different datatypes is to disable wrapper style. wsdl2java (of CXF 2.0.2-incubator) ignores the setting of enableWrapperStyle and always fails to generate code in that case, reporting an error:

WSDLToJava Error : Element
{http://order.rbp.tmobile.at/services/rbpCheckDevices/}data has Having the
same name with different
types[{http://order.rbp.tmobile.at/datatypes}RbpCheckDevicesRequestDataType
-- {http://order.rbp.tmobile.at/datatypes}RbpCheckDevicesResponseDataType],
In wrapper style, there is a collision as per the spec.

wsdl2java should check for enableWrapperStyle to be true (global and for a specific operation) before checking for name clashes in request and response messages and skip the check otherwise.
",,,,,,,,,,,,,CXF-918,,,,02/Apr/08 20:46;jmi;test.zip;https://issues.apache.org/jira/secure/attachment/12379184/test.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-03-07 22:22:35.816,,,no_permission,,Moderate,,,,,,,,,,,112050,,,Wed Apr 02 22:48:44 UTC 2008,,,,,,0|i13zfr:,231371,,,,,,,,"07/Mar/08 22:22;dkulp;
Is there a sample wsdl for this?     enableWrapperStyle just affects how the code is generated which really shouldn't have an impact on this.   ","02/Apr/08 20:45;jmi;I did nearly minimalistic version of problem.See next attachment.

When using jaxws-ri-2.1.3-20071218 
wsimport.bat -b C:\test\mybinding.xml C:\test\test.wsdl
it works nicely.

Of course when i try only 
wsimport.bat C:\test\test.wsdl
i have error
[ERROR] Failed to generate Java signature: duplicate parameter name ""data"". Try one of these
        1. Use JAXWS binding customization to rename the wsdl:part ""parameters""
        2. Run wsimport with -extension switch.
        3. This is wrapper style operation, to resolve parameter name conflict, you can also try disabling wrapper style
 by using <jaxws:enableWrapperStyle>false</jaxws:enableWrapperStyle> wsdl customization.
  line 29 of file:/C:/test/test.wsdl
[ERROR] Failed to generate Java signature: duplicate parameter name ""data"". Try one of these
        1. Use JAXWS binding customization to rename the wsdl:part ""parameters""
        2. Run wsimport with -extension switch.
        3. This is wrapper style operation, to resolve parameter name conflict, you can also try disabling wrapper style
 by using <jaxws:enableWrapperStyle>false</jaxws:enableWrapperStyle> wsdl customization.
  line 26 of file:/C:/test/test.wsdl


but i want to use first style .. wrapper=false


Problem is that with CFX nothing works... if u use
wsdl2java.bat -b C:\test\mybinding.xml C:\test\test.wsdl
or 
wsdl2java.bat C:\test\test.wsdl
i have this error in both cases:

WSDLToJava Error: Element {http://mytest/datatypes/manage/getcustomers}data has Having the same name with different type
s[{http://mytest/datatypes/manage/getcustomers}getCustomersRequestData -- {http://mytest/datatypes/manage/getcustomers}g
etCustomersResponseData],  In wrapper style, there is a collision as per the spec.


probably this stopped work with ""fix"" of CXF-918.
With cxf-2.0.1 it generates correct code when using binding file ... and incorrect code without binding file which includes wrapped setting ....",02/Apr/08 20:46;jmi;this can be generated by jax-ws but cannot be by cxf,"02/Apr/08 22:48;dkulp;
CXF-918 IS actually fixed and the code is generated OK if you can get it to the code generator part.   The problem that is occuring now is that we've enabled some level of validation of the wsdl (to make sure the wsdl is actually OK) PRIOR to the code generation.   The validation isn't taking the enableWrapperStyle stuff into account.     I have a fix for that, but I won't have time today to fully test it and get it committed.   Hopefully tomorrow.

Dan


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in HttpHeaderHelper.mapCharset,CXF-1227,12383019,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,ctaggart,ctaggart,21/Nov/07 22:22,29/Jan/08 21:51,14/Mar/19 02:28,27/Nov/07 18:21,2.0.3,,,,,,,2.0.4,,,,,,,0,"
ConcurrentHashMap doesn't allow null values:

    public V put(K key, V value) {
        if (value == null)
            throw new NullPointerException();

So this part of HttpHeaderHelper.mapCharset doesn't make much sense to me:

        if (newenc == null) {
            try {
                newenc = Charset.forName(enc).name();
            } catch (Exception ex) {
                //ignore
            }
            encodings.put(enc, newenc);
        }

I don't use Netbeans very much, but when I hover over the enc variable, it appears that utf-8 might have been passed in with some quotes, not sure.

Nov 21, 2007 2:05:17 PM org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromWSDL
INFO: Creating Service {http://soap.metbase.fluke.com/}EventSoapService from WSDL: http://localhost:8080/EventSoapService/EventSoapImpl?wsdl
Nov 21, 2007 2:09:37 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
java.lang.NullPointerException
        at java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:878)
        at org.apache.cxf.helpers.HttpHeaderHelper.mapCharset(HttpHeaderHelper.java:82)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1930)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1791)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:575)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
        at $Proxy21.getUncertaintyDataParameter(Unknown Source)
        at com.fluke.metbase.soap.client.TryEventService.main(TryEventService.java:30)
",,,,,,,,,,,,,,,,,27/Nov/07 19:25;ctaggart;TryEventService2.java;https://issues.apache.org/jira/secure/attachment/12370338/TryEventService2.java,27/Nov/07 19:26;ctaggart;cxf-npe-wsdl-response.png;https://issues.apache.org/jira/secure/attachment/12370339/cxf-npe-wsdl-response.png,21/Nov/07 22:23;ctaggart;cxf-npe.png;https://issues.apache.org/jira/secure/attachment/12370020/cxf-npe.png,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-11-27 18:09:07.405,,,no_permission,,,,,,,,,,,,,112048,,,Tue Dec 04 15:11:38 UTC 2007,,,,,,0|i143kn:,232042,,,,,,,,27/Nov/07 18:09;bmargulies;How did you manage to provoke this? Did you send a request with no charset at all?,27/Nov/07 18:21;bmargulies;Awaits merge to 2.0.4 branch.,27/Nov/07 19:25;ctaggart;I'm using the JAX-WS API for the client with CXF as the implementation.  Here is the source file that produces the error.,27/Nov/07 19:26;ctaggart;Here is the HTTP response that GlassFish v2 returns showing the charset that CXF is unable to parse.  I used Wireshark to grab this.,"27/Nov/07 21:44;bmargulies;Anyway, I checked in a fix to the obvious superficial situation. I'm not 100% sure that the code will do the right thing insofar as it should default to UTF-8, but on the other hand the XML parsers should take care of that.",28/Nov/07 09:07;njiang;This patch has been merged into CXF2.0.x branch.,"03/Dec/07 20:37;gtully;The problem is related to the quotes around the charset:
  Content-Type: text/xml;charset=""utf-8""

Apparently quotes around the charset value are ok as per RFC822. I did not read the full text but found it from the link where it was accepted:
http://publib.boulder.ibm.com/infocenter/wasinfo/v4r0/index.jsp?topic=/com.ibm.support.was40.doc/html/General/swg1PQ77854.html

Perhaps this needs a more general fix that will strip out quotes from the resulting encoding.
","03/Dec/07 20:41;bmargulies;OK, I can patch it some more with this problem in mind.",04/Dec/07 15:11;bmargulies;I've put in a stronger set of code that deals with empty and quoted character sets. It's in the trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
elementFormDefault from package-info.java ignored with JAXWS+JAXB when there are no beans,CXF-1226,12382943,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,niali,niali,21/Nov/07 04:27,29/Jan/08 21:51,14/Mar/19 02:28,21/Jan/08 20:37,2.0.2,2.0.3,,,,,,2.0.4,,,,,,,0,"I am using the java-first approach with spring configuration on cxf 2.0.3 and tomcat 5.5. I specified namespace for all the input and output parameters via @WebParam and @WebResult annotation. But the namespace was somehow missing from the SOAP message.

You can reproduce the problem by using the following test code (server side):

=================web.xml========================================
<?xml version=""1.0"" encoding=""ISO-8859-1""?>
<!DOCTYPE web-app
    PUBLIC ""-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN""
    ""http://java.sun.com/dtd/web-app_2_3.dtd"">
<web-app>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>WEB-INF/beans.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<display-name>CXF Servlet</display-name>
		<servlet-class>
			org.apache.cxf.transport.servlet.CXFServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
</web-app>
---------------------------------------------------------------------------------------------------------------
=================beans.xml=======================================
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:jaxws=""http://cxf.apache.org/jaxws""
	xmlns:cxf=""http://cxf.apache.org/core""
	xsi:schemaLocation=""
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"">
	<import resource=""classpath:META-INF/cxf/cxf.xml"" />
	<import resource=""classpath:META-INF/cxf/cxf-extension-soap.xml"" />
	<import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />
    <bean id=""logInbound"" class=""org.apache.cxf.interceptor.LoggingInInterceptor""/>
    <bean id=""logOutbound"" class=""org.apache.cxf.interceptor.LoggingOutInterceptor""/>
    <cxf:bus>
        <cxf:inInterceptors> <ref bean=""logInbound""/>  </cxf:inInterceptors>
        <cxf:outInterceptors> <ref bean=""logOutbound""/> </cxf:outInterceptors>
        <cxf:inFaultInterceptors>  <ref bean=""logOutbound""/>  </cxf:inFaultInterceptors>
    </cxf:bus> 
    <jaxws:endpoint   id=""helloWorld""  implementor=""demo.spring.HelloWorldImpl"" 	  address=""/HelloWorld"" />
</beans>
-----------------------------------------------------------------------------------------------------------------------
=================HelloWorld.java=======================================
package demo.spring;

import javax.jws.WebService;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.xml.ws.ResponseWrapper;
import javax.xml.ws.RequestWrapper;
import javax.jws.soap.SOAPBinding;

@WebService(name=""MyHelloWorldService"", targetNamespace=""http://nstest.helloworld"")
@SOAPBinding(	parameterStyle=SOAPBinding.ParameterStyle.WRAPPED,
				style=SOAPBinding.Style.DOCUMENT,
				use= SOAPBinding.Use.LITERAL	)
public interface HelloWorld {
	@WebMethod
	@WebResult(name=""MyResult"", targetNamespace=""http://nstest.helloworld"")
    String sayHi(@WebParam(name=""MyInput"", targetNamespace=""http://nstest.helloworld"") String text);
}
-----------------------------------------------------------------------------------------------------------------------
=================HelloWorldImpl.java=======================================
package demo.spring;

import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;

@WebService(endpointInterface = ""demo.spring.HelloWorld"")
public class HelloWorldImpl implements HelloWorld {
    public String sayHi(String text) {
        return ""Hello "" + text;
    }
}
-----------------------------------------------------------------------------------------------------------------------

Create WAR from the above code, deploy to tomcat, here is the WSDL I got from http://localhost:8080/...::

=======main WSDL: http://localhost:8080/spring_http/HelloWorld?wsdl=================
<?xml version=""1.0"" encoding=""utf-8"" ?> 
- <wsdl:definitions xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:ns1=""http://nstest.helloworld"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:tns=""http://spring.demo/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""HelloWorldImplService"" targetNamespace=""http://spring.demo/"">
  <wsdl:import location=""http://localhost:8080/spring_http/HelloWorld?wsdl=MyHelloWorldService.wsdl"" namespace=""http://nstest.helloworld"" /> 
- <wsdl:binding name=""HelloWorldImplServiceSoapBinding"" type=""ns1:MyHelloWorldService"">
  <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http"" /> 
- <wsdl:operation name=""sayHi"">
  <soap:operation soapAction="""" style=""document"" /> 
- <wsdl:input name=""sayHi"">
  <soap:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output name=""sayHiResponse"">
  <soap:body use=""literal"" /> 
  </wsdl:output>
  </wsdl:operation>
  </wsdl:binding>
- <wsdl:service name=""HelloWorldImplService"">
- <wsdl:port binding=""tns:HelloWorldImplServiceSoapBinding"" name=""HelloWorldImplPort"">
  <soap:address location=""http://localhost:8080/spring_http/HelloWorld"" /> 
  </wsdl:port>
  </wsdl:service>
  </wsdl:definitions>
-----------------------------------------------------------------------------------------------------------------------------------------------
=====imported WSDL: http://localhost:8080/spring_http/HelloWorld?wsdl=MyHelloWorldService.wsdl====
<?xml version=""1.0"" encoding=""utf-8"" ?> 
- <wsdl:definitions xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:ns1=""http://nstest.helloworld"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""MyHelloWorldService"" targetNamespace=""http://nstest.helloworld"">
- <wsdl:types>
- <xsd:schema xmlns=""http://nstest.helloworld"" xmlns:tns=""http://spring.demo/"" attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"" targetNamespace=""http://nstest.helloworld"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <import xmlns=""http://www.w3.org/2001/XMLSchema"" namespace=""http://spring.demo/"" /> 
  <xsd:element name=""sayHi"" type=""sayHi"" /> 
- <xsd:complexType name=""sayHi"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""MyInput"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""sayHiResponse"" type=""sayHiResponse"" /> 
- <xsd:complexType name=""sayHiResponse"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""MyResult"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:schema>
  </wsdl:types>
- <wsdl:message name=""sayHi"">
  <wsdl:part element=""ns1:sayHi"" name=""parameters"" /> 
  </wsdl:message>
- <wsdl:message name=""sayHiResponse"">
  <wsdl:part element=""ns1:sayHiResponse"" name=""parameters"" /> 
  </wsdl:message>
- <wsdl:portType name=""MyHelloWorldService"">
- <wsdl:operation name=""sayHi"">
  <wsdl:input message=""ns1:sayHi"" name=""sayHi"" /> 
  <wsdl:output message=""ns1:sayHiResponse"" name=""sayHiResponse"" /> 
  </wsdl:operation>
  </wsdl:portType>
  </wsdl:definitions>
-------------------------------------------------------------------------------------------------------------------------------------------

Create client from WSDL by using wsdl2java. The namespaces of input/output parameters have already been missing from the generated service interface:
================MyHelloWorldService.java (generated by wsdl2java)====================== 
package helloworld.nstest;

import javax.jws.WebParam.Mode;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding.Style;
import javax.jws.soap.SOAPBinding;
import javax.jws.WebMethod;
import javax.jws.WebResult;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF (incubator) 2.0.3-incubator
 * Tue Nov 20 22:45:47 EST 2007
 * Generated source version: 2.0.3-incubator
 * 
 */

@WebService(targetNamespace = ""http://nstest.helloworld"", name = ""MyHelloWorldService"")

public interface MyHelloWorldService {

    @ResponseWrapper(targetNamespace = ""http://nstest.helloworld"", className = ""helloworld.nstest.SayHiResponse"", localName = ""sayHiResponse"")
    @RequestWrapper(targetNamespace = ""http://nstest.helloworld"", className = ""helloworld.nstest.SayHi"", localName = ""sayHi"")
    @WebResult(targetNamespace = """", name = ""MyResult"")
    @WebMethod
    public java.lang.String sayHi(
        @WebParam(targetNamespace = """", name = ""MyInput"")
        java.lang.String myInput
    );
}
===================================================================

Modify the generated client:
========MyHelloWorldService_HelloWorldImplPort_Client.java (generated by wsdl2java)======
package helloworld.nstest;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import demo.spring.HelloWorldImplService;
import javax.jws.WebMethod;
import javax.jws.WebResult;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

public final class MyHelloWorldService_HelloWorldImplPort_Client {
    private static final QName SERVICE_NAME = new QName(""http://spring.demo/"", ""HelloWorldImplService"");
    private MyHelloWorldService_HelloWorldImplPort_Client() {
    }
    public static void main(String args[]) throws Exception {
      
        HelloWorldImplService ss = new HelloWorldImplService();
        MyHelloWorldService port = ss.getHelloWorldImplPort();     
        {
        System.out.println(""Invoking sayHi..."");
        java.lang.String _sayHi_myInput = ""ABC"";
        java.lang.String _sayHi__return = port.sayHi(_sayHi_myInput);
        System.out.println(""sayHi.result="" + _sayHi__return);
        }
        System.exit(0);
    }
}
--------------------------------------------------------------------------------------------------------

SOAP message captured on server-side:
--------------------------------------
Encoding: UTF-8
Headers: {connection=[keep-alive], cache-control=[no-cache], host=[localhost:808
0], user-agent=[Java/1.5.0_12], transfer-encoding=[chunked], pragma=[no-cache],
content-type=[text/xml; charset=UTF-8], accept=[*], soapaction=[""""]}
Message:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body
><ns2:sayHi xmlns:ns2=""http://nstest.helloworld""><MyInput>ABC</MyInput></ns2:say
Hi></soap:Body></soap:Envelope>
--------------------------------------
Nov 20, 2007 10:51:13 PM org.apache.cxf.interceptor.LoggingOutInterceptor$Loggin
gCallback onClose
INFO: Outbound Message:
--------------------------------------
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body
><ns1:sayHiResponse xmlns:ns1=""http://nstest.helloworld""><MyResult>Hello ABC</My
Result></ns1:sayHiResponse></soap:Body></soap:Envelope>-------------------------
-------------

You can see that both ""MyInput"" and ""MyResult"" have no namespace.",Windows XP; Tomcat 5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-26 13:04:53.658,,,no_permission,,Unknown,,,,,,,,,,,112047,,,Mon Jan 21 20:28:10 UTC 2008,,,,,,0|i13zkn:,231393,,,,,,,,"26/Nov/07 13:04;bmargulies;Your implementation class does not include an endpointInterface annotation to point to your SEI, so none of your namespace annotations are being looked at.
","26/Nov/07 14:15;nianhua.li@kaplan.com;Please excuse for my silly question here. Could you be more specific
about the problem? Are you saying that my implementation class (i.e.
demo.spring.HelloWorldImpl) doesn't include an endpointInterface
annotation to my SEI (i.e. demo.spring.HelloWorld)? In another word,
this line:
   @WebService(endpointInterface = ""demo.spring.HelloWorld"")
is incorrect. Could you please kindly give out the correct annotation?

Many thanks

nianhua

","26/Nov/07 14:31;nianhua.li@kaplan.com;Actually I do believe that my namespace annotations in my SEI have been
looked at. I have only specified namespace ""http://nstest.helloworld"" in
my SEI, not anywhere else. The namespace has been included in the WSDL.
Therefore, either CXF's java-wsdl mapping or CXF's java-soap mapping is
wrong.

The other problem in this issue is on the client side. Forget about the
server side; assume we start from the WSDL. The input/output parameters
have namespace specified in WSDL. The client created from wsdl2java
should be consistent with the WSDL. Why the namespace get lost from the
SOAP message?

So, this issue indicates problems on both server and client side. I
believe both problems are valid. I don't understand why you close the
issue.
","26/Nov/07 14:35;bmargulies;elementFormDefault is unqualified. Should that not suppress the namespace prefixes? Have you tried generating the WSDL just from the SEI, not from the service class? Would you please try adding the endpointInterface annotation?","26/Nov/07 15:03;bmargulies;Oh dear. I read the generated code instead of your original code.

I will reopen this. 

I suggest that you try using targetNamespace= to put the SEI and the implementation in the same namespace. I don't claim that you should have to do this, but it might help while you wait for one of us to turn on our brains.
",26/Nov/07 15:03;bmargulies;I misread the original description.,"26/Nov/07 15:03;nianhua.li@kaplan.com;Thanks for the quick reply. 

About the WSDL: I didn't generate WSDL from java2wsdl. I deploy the
service WAR file (say spring_http.war, no WSDL included in it) to
tomcat, and then I see the WSDL from my web browser, e.g.
http://localhost:8080/spring_http/HelloWorld?wsdl. 

About the endpointInterface annotation: I am still confused. The
implementation class HelloWorldImpl in my issue report contains this
line:
 	@WebService(endpointInterface = ""demo.spring.HelloWorld"")
If this is not the correct annotation, could you please give out the
correct version? 

Thanks

nianhua

","26/Nov/07 16:26;nianhua.li@kaplan.com;Just FYI, I add targetNamespace= to my implementation class as you suggested, the WSDL looks prettier, but the problems remains.

=================Implementation Class====================
package demo.spring;

import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;

@WebService(name=""MyHelloWorldService"", targetNamespace=""http://nstest.helloworld"", 
			endpointInterface = ""demo.spring.HelloWorld"")

public class HelloWorldImpl implements HelloWorld {

    public String sayHi(String text) {
        return ""Hello "" + text;
    }
}
======================================================

============WSDL=====================================
<?xml version=""1.0"" encoding=""utf-8"" ?> 
- <wsdl:definitions xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:tns=""http://nstest.helloworld"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""HelloWorldImplService"" targetNamespace=""http://nstest.helloworld"">
- <wsdl:types>
- <xsd:schema attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"" targetNamespace=""http://nstest.helloworld"" xmlns:tns=""http://nstest.helloworld"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <xsd:element name=""sayHi"" type=""tns:sayHi"" /> 
- <xsd:complexType name=""sayHi"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""MyInput"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""sayHiResponse"" type=""tns:sayHiResponse"" /> 
- <xsd:complexType name=""sayHiResponse"">
- <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""MyResult"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>
  </xsd:schema>
  </wsdl:types>
- <wsdl:message name=""sayHi"">
  <wsdl:part element=""tns:sayHi"" name=""parameters"" /> 
  </wsdl:message>
- <wsdl:message name=""sayHiResponse"">
  <wsdl:part element=""tns:sayHiResponse"" name=""parameters"" /> 
  </wsdl:message>
- <wsdl:portType name=""MyHelloWorldService"">
- <wsdl:operation name=""sayHi"">
  <wsdl:input message=""tns:sayHi"" name=""sayHi"" /> 
  <wsdl:output message=""tns:sayHiResponse"" name=""sayHiResponse"" /> 
  </wsdl:operation>
  </wsdl:portType>
- <wsdl:binding name=""HelloWorldImplServiceSoapBinding"" type=""tns:MyHelloWorldService"">
  <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http"" /> 
- <wsdl:operation name=""sayHi"">
  <soap:operation soapAction="""" style=""document"" /> 
- <wsdl:input name=""sayHi"">
  <soap:body use=""literal"" /> 
  </wsdl:input>
- <wsdl:output name=""sayHiResponse"">
  <soap:body use=""literal"" /> 
  </wsdl:output>
  </wsdl:operation>
  </wsdl:binding>
- <wsdl:service name=""HelloWorldImplService"">
- <wsdl:port binding=""tns:HelloWorldImplServiceSoapBinding"" name=""MyHelloWorldServicePort"">
  <soap:address location=""http://localhost:8080/spring_http/HelloWorld"" /> 
  </wsdl:port>
  </wsdl:service>
  </wsdl:definitions>
===========================================================","26/Nov/07 16:56;bmargulies;The problem here is that elementFormDefault is generated by JAXB+JAXWS as unqualified.

Since you have no bean types, JAXB is not involved, and JAXWS doesn't seem to be respecting package-info.java annotations. That might be a bug. If you add a package-info.java like:

@javax.xml.bind.annotation.XmlSchema(namespace = ""http://nstest.helloworld"", 
                                     elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)


and you have any jaxb-processed types involved, things might get better.
","26/Nov/07 17:00;bmargulies;I've checked in a test case for this in systests as org.apache.cxf.cxf1226. If JAXWS should respect package-info.java for the target namespace of an SEI, then this is a bug. If not, the submitted needs more advice from us.

","26/Nov/07 17:06;bmargulies;OK. I don't know if this is a bug or a feature, but ...

Since you are only dealing with basic types plus the SEI and implementation, JAXB isn't involved. You can get JAXB involved via two steps:

1) Add a package-info.java specifying elementFormDefault='qualified' for the namespace that you are using for these elements.

2) Add a method to your service that uses an object defined in the package where you put the package-info.java.

I haven't tested that the XML on the wire is as you want, but i have tested that elementForDefault gets sets to qualified.

I'm leaving this open until someone tells me if this is a bug or not that the package-info.java is ignored without the bean.
","27/Nov/07 03:44;nianhua.li@kaplan.com;Thanks Benson. You are right that the attribute elementFormDefault  in WSDL is related to java-soap mapping. In another world, the input/output parameters won't have namespaces when elementFormDefault=unqualified. 

In the project I am working on, the data types (e.g. TransactionTypeFull in the example below) of input/output parameters are defined in an xml schema. The input/output parameters are defined in SEI. They have different namespaces:

@WebMethod
@WebResult(name=""MyResult"", targetNamespace=""http://nstest.transaction"")
    TransactionTypeFull submit(@WebParam(name=""Transaction"", targetNamespace=""http://nstest.bean"") TransactionTypeFull body);

I mapped the namespace ""http://nstest.bean"" to one java package, and mapped the SEI and implementor to the other java package. Therefore it is basically the same as if I only use simple xsd types. In another word, JAXB is not involved in the processing of SEI annotation.

I was using xfire 1.2.6 for this project, and had never had this problem. Now I want to migrate to cxf to take advantage of its RESTful support ... For this namespace issue, I probably have to define some dummy data types for namespace ""http://nstest.transaction"" so that JAXB can get involved. Thanks again for the help. At least I have a work around now, even though it is not pretty.","30/Nov/07 18:31;dkulp;
This is definitely a JAX-WS spec/TCK issue.   The TCK basically requires us to make the schemas for the wrapper type unqualified.   We originaly had them qualified (to match xfire), but could not get the tck to pass.   

That said, with 2.0.3, there is a way to configure things in Spring config to make the schemas qualified.  It's not very well tested though.   The ReflectionServiceFactoryBean has a qualifiedSchemas attribute that can be set to true to have it generate the schemas as qualified.   Should look something like:


  <jaxws:server address=""/jaxwsAndJaxb"" 
    serviceClass=""org.apache.cxf.authservice.AuthService""> 
    <jaxws:serviceBean> 
      <bean class=""org.apache.cxf.authservice.AuthServiceImpl"" /> 
    </jaxws:serviceBean> 
    <jaxws:serviceFactory> 
            <bean class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean""> 
            <property name=""qualifyWrapperSchema"" value=""true""/> 
            </bean> 
    </jaxws:serviceFactory> 
   </jaxws:server> ","30/Nov/07 19:12;bmargulies;Dan,

I thought that you told me that automatically generating wrappers was a CXF extension over and above JAX-WS. So, in that case, how can it be a TCK violation to respect a JAXB package-info.java?","15/Dec/07 01:02;bmargulies;Dan, if this is legit, please send it back to me. If this is just how life is with these dueling standards, let's close this out (and encourage the use of doc/bare?).","21/Jan/08 20:28;dkulp;Tested a fix to honor the jAXB annotations in the package-info.java with the TCK and everything passes ok.   Thus, I'll get the fix committed in fro 2.0.4.

Dan
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client code generates no parameters or return values for WSDL with multiple elements with same name,CXF-1223,12382908,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,pliljenberg@gmail.com,pliljenberg@gmail.com,20/Nov/07 19:44,29/Jan/08 21:51,14/Mar/19 02:28,16/Jan/08 20:16,2.0.3,,,,,,,2.0.4,,,,,,,0,"When generating code with wsdl2java we end up with client code that have no parameters or return values for our methods.

Complete WSDL:
<?xml version=""1.0"" encoding=""UTF-8""?>
<definitions xmlns:tns=""mesh.meshfacade"" xmlns:wsr=""http://www.openuri.org/2002/10/soap/reliability/"" xmlns:mime=""http://schemas.xmlsoap.org/wsdl/mime/"" xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/"" xmlns:http=""http://schemas.xmlsoap.org/wsdl/http/"" xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/"" xmlns:soap12enc=""http://www.w3.org/2003/05/soap-encoding"" xmlns:conv=""http://www.openuri.org/2002/04/wsdl/conversation/"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:s=""http://www.w3.org/2001/XMLSchema"" xmlns=""http://schemas.xmlsoap.org/wsdl/"" targetNamespace=""mesh.meshfacade"">
 <types>
  <xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:stns=""java:mesh.meshfacade.vo"" elementFormDefault=""qualified"" attributeFormDefault=""qualified"" targetNamespace=""java:mesh.meshfacade.vo"">
   <xsd:import namespace=""java:efsbase.common"">
   </xsd:import>
   <xsd:complexType name=""CreateMailboxRequest"">
    <xsd:complexContent>
     <xsd:extension xmlns:tp=""java:efsbase.common"" base=""tp:EFSBaseMSISDNRequest"">
      <xsd:sequence>
       <xsd:element type=""xsd:string"" name=""domain"" minOccurs=""1"" maxOccurs=""1"" nillable=""true"">
       </xsd:element>
      </xsd:sequence>
     </xsd:extension>
    </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name=""CreateMailboxResponse"">
    <xsd:complexContent>
     <xsd:extension xmlns:tp=""java:efsbase.common"" base=""tp:EFSBaseResponse"">
     </xsd:extension>
    </xsd:complexContent>
   </xsd:complexType>
  </xsd:schema>
  <xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:stns=""mesh.meshfacade"" elementFormDefault=""qualified"" attributeFormDefault=""qualified"" targetNamespace=""mesh.meshfacade"">
   <xsd:import namespace=""java:mesh.meshfacade.vo"">
   </xsd:import>
    <xsd:element xmlns:tp=""java:mesh.meshfacade.vo"" type=""tp:CreateMailboxRequest"" name=""createMailbox"" nillable=""true"">
   </xsd:element>
   <xsd:element xmlns:tp=""java:mesh.meshfacade.vo"" type=""tp:CreateMailboxResponse"" name=""createMailboxResponse"" nillable=""true"">
   </xsd:element>
  </xsd:schema>
  <xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:stns=""java:efsbase.common"" elementFormDefault=""qualified"" attributeFormDefault=""qualified"" targetNamespace=""java:efsbase.common"">
   <xsd:complexType name=""EFSBaseMSISDNRequest"">
    <xsd:complexContent>
     <xsd:extension base=""stns:EFSBaseRequest"">
      <xsd:sequence>
       <xsd:element type=""xsd:string"" name=""msisdn"" minOccurs=""1"" maxOccurs=""1"" nillable=""true"">
       </xsd:element>
      </xsd:sequence>
     </xsd:extension>
    </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name=""EFSBaseObject"">
   </xsd:complexType>
   <xsd:complexType name=""EFSBaseRequest"">
    <xsd:complexContent>
     <xsd:extension base=""stns:EFSBaseObject"">
      <xsd:sequence>
       <xsd:element type=""xsd:string"" name=""userId"" minOccurs=""1"" maxOccurs=""1"" nillable=""true"">
       </xsd:element>
      </xsd:sequence>
     </xsd:extension>
    </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name=""EFSBaseResponse"">
    <xsd:complexContent>
     <xsd:extension base=""stns:EFSBaseObject"">
      <xsd:sequence>
        <xsd:element type=""xsd:string"" name=""transactionId"" minOccurs=""1"" maxOccurs=""1"" nillable=""true"">
       </xsd:element>
      </xsd:sequence>
     </xsd:extension>
    </xsd:complexContent>
   </xsd:complexType>
  </xsd:schema>
 </types>
 <message name=""createMailbox"">
  <part xmlns:partns=""mesh.meshfacade"" name=""createMailboxRequest"" element=""partns:createMailbox"">
  </part>
 </message>
 <message name=""createMailboxResponse"">
  <part xmlns:partns=""mesh.meshfacade"" name=""result"" element=""partns:createMailboxResponse"">
  </part>
 </message>
 <portType name=""MeshFacadePort"">
   <operation name=""createMailbox"">
   <input message=""tns:createMailbox"">
   </input>
   <output message=""tns:createMailboxResponse"">
   </output>
  </operation>
 </portType>
 <binding type=""tns:MeshFacadePort"" name=""MeshFacadePort"">
   <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
  <operation name=""createMailbox"">
    <soap:operation style=""document"" soapAction=""""/>
   <input>
     <soap:body use=""literal""/>
   </input>
   <output>
     <soap:body use=""literal""/>
   </output>
  </operation>
 </binding>
 <service name=""MeshFacade"">
  <port name=""MeshFacadePort"" binding=""tns:MeshFacadePort"">
    <soap:address location=""http://localhost/mesh/MeshFacade""/>
  </port>
 </service>
</definitions>


Generated code:
public interface MeshFacadePort {

    @ResponseWrapper(targetNamespace = ""mesh.meshfacade"", className = ""java.mesh_meshfacade.CreateMailboxResponse"", localName = ""createMailboxResponse"")
    @RequestWrapper(targetNamespace = ""mesh.meshfacade"", className = ""java.mesh_meshfacade.CreateMailboxRequest"", localName = ""createMailbox"")
    @WebMethod
    public void createMailbox();
}

Clearly we expected the method to have a parameter and return value. I'm guessing (this has been an issue before CXF-1502) that the problem is that there are 2 elements ""createMailbox"", one type definition and one method/operation definition. Is this OK according to the WSDL specs or is it a bug in CXF? Other frameworks like Axis can generate a ""correct"", working client from the WSDL.

Updated WSDL (snippet):
 <portType name=""MeshFacadePort"">
   <operation name=""createMailbox2"">
   <input message=""tns:createMailbox"">
   </input>
   <output message=""tns:createMailboxResponse"">
   </output>
  </operation>
 </portType>
 <binding type=""tns:MeshFacadePort"" name=""MeshFacadePort"">
   <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
  <operation name=""createMailbox2"">
    <soap:operation style=""document"" soapAction=""""/>
   <input>
     <soap:body use=""literal""/>
   </input>
   <output>
     <soap:body use=""literal""/>
   </output>
  </operation>
 </binding>

With different names we get the following, more correct code:

public interface MeshFacadePort {

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(targetNamespace = ""mesh.meshfacade"", partName = ""result"", name = ""createMailboxResponse"")
    @WebMethod
    public java.mesh_meshfacade.CreateMailboxResponse createMailbox2(
        @WebParam(targetNamespace = ""mesh.meshfacade"", partName = ""createMailboxRequest"", name = ""createMailbox"")
        java.mesh_meshfacade.CreateMailboxRequest createMailboxRequest
    );
}","Windows, OS X, Linux",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-20 20:12:25.788,,,no_permission,,,,,,,,,,,,,112044,,,Tue Jan 08 20:10:37 UTC 2008,,,,,,0|i0uxuv:,178626,,,,,,,,"20/Nov/07 20:12;mazzag;I was able to duplicate your bug using your WSDL.  This appears to be a CXF error (also, CXF's wsdl2java -validate option does not consider the WSDL to be invalid), because GlassFish Metro is also accepting it.  The same WSDL with Metro returns (in MeshFacadePort.java):

    @WebMethod
    @WebResult(name = ""transactionId"", targetNamespace = ""java:efsbase.common"")
    @RequestWrapper(localName = ""createMailbox"", targetNamespace = ""mesh.meshfacade"", className = ""java.mesh_meshfacade.CreateMailboxRequest"")
    @ResponseWrapper(localName = ""createMailboxResponse"", targetNamespace = ""mesh.meshfacade"", className = ""java.mesh_meshfacade.CreateMailboxResponse"")
    public String createMailbox(
        @WebParam(name = ""userId"", targetNamespace = ""java:efsbase.common"")
        String userId,
        @WebParam(name = ""msisdn"", targetNamespace = ""java:efsbase.common"")
        String msisdn,
        @WebParam(name = ""domain"", targetNamespace = ""java:mesh.meshfacade.vo"")
        String domain);
","28/Dec/07 20:29;dfladung;I'm experiencing a very similar issue, however, instead of generating code with no arguments or return types, all of the parameters end up as arguments to the generated Java method, with Mode.OUT assigned to the logical output parameters. If I change the type definition name everything works as expected.

<?xml version='1.0' encoding='UTF-8' ?>
<definitions name='NetworkNode2' targetNamespace='http://www.exchangenetwork.net/wsdl/node/2'
	xmlns:tns='http://www.exchangenetwork.net/wsdl/node/2' xmlns:xsd='http://www.w3.org/2001/XMLSchema'
	xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/"" xmlns:typens='http://www.exchangenetwork.net/schema/node/2'
	xmlns='http://schemas.xmlsoap.org/wsdl/'>
	<types>
		<schema targetNamespace='http://www.exchangenetwork.net/schema/node/2' xmlns='http://www.w3.org/2001/XMLSchema'
			xmlns:xmime=""http://www.w3.org/2005/05/xmlmime"" elementFormDefault='qualified'>
			<import namespace=""http://www.w3.org/2005/05/xmlmime"" schemaLocation=""http://www.w3.org/2005/05/xmlmime"" />
			<element name=""NodeFaultDetailType"">
				<complexType>
					<sequence>
						<element name=""Description"" type=""xsd:string"" minOccurs=""1"" maxOccurs=""1"" nillable=""false"" />
					</sequence>
				</complexType>
			</element>
			<complexType name=""StatusResponseType"">
				<annotation>
					<documentation>
						The status response type contains three elements: transactionId : The UUID for the transaction.
						status: The current status of the transaction. A transaction can be successful or failed
						immediately. message: A text description of errors if any.
					</documentation>
				</annotation>
				<sequence>
					<element name='transactionId' type='xsd:string' />
					<element name='statusDetail' type='xsd:string' />
				</sequence>
			</complexType>
			<element name=""Submit"">
				<complexType>
					<sequence>
						<element name='securityToken' type='xsd:string' />
						<element name='transactionId' type='xsd:string' />
						<element name='dataflow' type='xsd:NCName' />
						<element name='flowOperation' type='xsd:string' />
						<element name='recipients' type='xsd:string' />
						<element name='notificationURI' type='xsd:string' />
					</sequence>
				</complexType>
			</element>
			<element name=""SubmitResponse"" type=""typens:StatusResponseType"" />
		</schema>
	</types>
	<message name='SubmitRequest'>
		<part name='in' element='typens:Submit' />
	</message>
	<message name='SubmitResponse'>
		<part name='out' element='typens:SubmitResponse' />
	</message>
	<message name='NodeFaultMessage'>
		<part name='fault' element='typens:NodeFaultDetailType' />
	</message>
	<portType name='NetworkNodePortType2'>
		<operation name='Submit'>
			<documentation>Submit one or more documents to the node.</documentation>
			<input message='tns:SubmitRequest' name=""SubmitRequest"" />
			<output message='tns:SubmitResponse' name=""SubmitResponse"" />
			<fault name='NodeFaultDetail' message='tns:NodeFaultMessage' />
		</operation>
	</portType>
	<binding name='NetworkNodeBinding2' type='tns:NetworkNodePortType2'>
		<soap12:binding style='document' transport='http://schemas.xmlsoap.org/soap/http' />
		<operation name='Submit'>
			<soap12:operation style=""document"" soapAction='' />
			<input name=""SubmitRequest"">
				<soap12:body use='literal' />
			</input>
			<output name=""SubmitResponse"">
				<soap12:body use='literal' />
			</output>
			<fault name=""NodeFaultDetail"">
				<soap12:fault name='NodeFaultDetail' use='literal' />
			</fault>
		</operation>
	</binding>
	<service name='NetworkNode2'>
		<documentation>Network Node 2.0 definitions for the Environmental Information Exchange Network</documentation>
		<port name='NetworkNodePort2' binding='tns:NetworkNodeBinding2'>
			<soap12:address location='http://localhost/xml/node_v20_draft.wsdl' />
		</port>
	</service>
</definitions>

@ResponseWrapper(targetNamespace = ""http://www.exchangenetwork.net/schema/node/2"", className = ""net.exchangenetwork.node2.schema.StatusResponseType"", localName = ""SubmitResponse"")
    @RequestWrapper(targetNamespace = ""http://www.exchangenetwork.net/schema/node/2"", className = ""net.exchangenetwork.node2.schema.Submit"", localName = ""Submit"")
    @WebMethod(operationName = ""Submit"")
    public void submit(
        @WebParam(targetNamespace = ""http://www.exchangenetwork.net/schema/node/2"", name = ""securityToken"")
        java.lang.String securityToken,
        @WebParam(targetNamespace = ""http://www.exchangenetwork.net/schema/node/2"", mode = Mode.INOUT, name = ""transactionId"")
        javax.xml.ws.Holder<java.lang.String> transactionId,
        @WebParam(targetNamespace = ""http://www.exchangenetwork.net/schema/node/2"", name = ""dataflow"")
        java.lang.String dataflow,
        @WebParam(targetNamespace = ""http://www.exchangenetwork.net/schema/node/2"", name = ""flowOperation"")
        java.lang.String flowOperation,
        @WebParam(targetNamespace = ""http://www.exchangenetwork.net/schema/node/2"", name = ""recipients"")
        java.lang.String recipients,
        @WebParam(targetNamespace = ""http://www.exchangenetwork.net/schema/node/2"", name = ""notificationURI"")
        java.lang.String notificationURI,
        @WebParam(targetNamespace = ""http://www.exchangenetwork.net/schema/node/2"", mode = Mode.OUT, name = ""statusDetail"")
        javax.xml.ws.Holder<java.lang.String> statusDetail
    ) throws NodeFaultMessage;","07/Jan/08 20:43;dkulp;
David,

Your's is easy: this is per spec.     Per JAX-WS spec, only the FIRST element in the response squence is eligible to be considered for the return value.   In your case, the first element is ""transactionId"" which matches the name of an input param and thus that param becomes an INOUT param.   The remaining elements become OUT params and the return is void.

If you change your schema for the StatusResponseType to flip the two elements, the output would be different.

","07/Jan/08 20:51;dkulp;
Glen and Peter,

Both the RI and CXF are doing the wrong thing here.   According to spec, the operation should be generated in BARE mode with a single param and a single return object and no Request/Response Wrapper annotations.   

The reasons:  (from section 2.3.1.2 of the JAX-WS spec)   For it to be considered wrapped:

1) The wrapper element must NOT be nillable.  Yours are.

2) ""The elements referred to by the input and output message (if present) parts (henceforth referred to a wrapper elements) are both complex types defined using the xsd:sequence compositor""    Yours are defined as extensions to other objects.  

in anycase, both CXF and the RI are incorrect.   They should be generated as BARE.   I'm going to try and get CXF fixed to do that.

 




","07/Jan/08 21:51;dfladung;Daniel,

Thanks for the reply. However, I don't understand why when I change ""Submit"" to ""SubmitRequest"" I get different behavior. Following your logic the type name would be irrelevant in the case right? Also, I tried flipping the params (even though this isn't something I can do going forward) and I got the same behavior.
","08/Jan/08 20:10;dkulp;David,

That then falls into rule #2 of section 2.3.1.2 of the JAX-WS spec that states it's only unwrappable if:

(ii) The input message part refers to a global element declaration whose localname is equal to the operation name

By changing it to SubmitRequest, the name no longer matches the operation name, thus, it gets mapped to ""bare"" mode.




",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update samples/integration/outbound sample.,CXF-1221,12382841,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,jeff.yu,jeff.yu,20/Nov/07 04:50,29/Jan/08 21:51,14/Mar/19 02:28,21/Nov/07 01:38,2.0.3,,,,,,,2.0.4,,Samples,,,,,0,"Update sample's READEME.txt to make it clear, update the build.xml to include the geronimo_stax_api library.",windows,,,,,,,,,,,,,,,,20/Nov/07 05:16;jeff.yu;cxf1221.patch;https://issues.apache.org/jira/secure/attachment/12369845/cxf1221.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-11-21 01:38:35.204,,,no_permission,,,,,,,,,,,,,112043,,,Wed Nov 21 01:38:35 UTC 2007,,,,,,0|i1abuf:,268385,,,,,,,,20/Nov/07 05:16;jeff.yu;update the jca samples READEME and build.xml.,"21/Nov/07 01:38;njiang;This patch has been applied into the trunk  and 2.0.x-fixes branch.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Aegis databinding class XMLTypeCreator uses DocumentBuilderFactory.setSchema(aegisSchema), this is not implemented by all XML parsers, some throw UnsupportedOperationException, must be handled",CXF-1219,12382812,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sgudiboina,sgudiboina,19/Nov/07 19:12,29/Jan/08 21:51,14/Mar/19 02:28,03/Dec/07 20:58,2.0.3,,,,,,,2.0.4,,Aegis Databinding,,,,,0,"Aegis databinding class org.apache.cxf.aegis.type.XMLTypeCreator.java has a static block that was added in CXF 2.0.3:

    static {
        String path = ""/META-INF/cxf/aegis.xsd"";
        InputStream is = XMLTypeCreator.class.getResourceAsStream(path);
        if (is != null) {
            try {
                SchemaFactory schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
                aegisSchema = schemaFactory.newSchema(new StreamSource(is));
                is.close();

                aegisDocumentBuilderFactory = DocumentBuilderFactory.newInstance();
                aegisDocumentBuilderFactory.setSchema(aegisSchema);
            } catch (IOException ie) {
                LOG.error(""Error reading Aegis schema"", ie);
            } catch (FactoryConfigurationError e) {
                LOG.error(""Error reading Aegis schema"", e);
            } catch (SAXException e) {
                LOG.error(""Error reading Aegis schema"", e);
            }
        }
    }

DocumentBuilderFactory.setSchema(Schema) is not implemented by Resin's XML parser implementation (and other fast XML parsers). Sun's default implementation is to throw an UnsupportedOperationException.  Can this exception be handled as well by just logging an error. Till then, I am stuck with CXF 2.0.2 which does not allow http:conduit configuration in Spring files (this issue was fixed in CXF 2.0.3).",Resin 3.0.23,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112041,,,2007-11-19 19:12:56.0,,,,,,0|i1aa1r:,268094,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak in Policy Engine,CXF-1218,12382772,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,bharathganesh,bharathganesh,19/Nov/07 06:59,29/Jan/08 21:51,14/Mar/19 02:28,19/Nov/07 10:20,2.0.3,2.0.4,,,,,,2.0.4,,WS-* Components,,,,,0,"A memory leak is figured out when the CXF Policy Engine is enabled. 
When an endpoint is deployed, the createEndpointPolicyInfo(EndpointInfo , boolean, Assertor) method of PolicyEngineImpl is invoked where-in a EndpointPolicy is created for the endpoint and put into the endpointInfo map (EndpointInfo Vs EndpointPolicy).
During endpoint shutdown/stop, the endpoint policy is never removed from the map.

Possible Fix:

Make PolicyEngineImpl implement ServerLifeCycleListener. In the stopServer() callback remove the EndpointPolicy from the map of EndpointInfo Vs EndpointPolicy.


public void stopServer(Server server)
{

        EndpointInfo ei = server.getEndpoint().getEndpointInfo();
        endpointInfo.remove(ei);
}

Hope this is a feasible fix.",,,,,,,,,,,,,,,,,19/Nov/07 07:00;bharathganesh;PolicyEngineImpl.java;https://issues.apache.org/jira/secure/attachment/12369765/PolicyEngineImpl.java,19/Nov/07 08:03;maomaode;ws-policy.patch;https://issues.apache.org/jira/secure/attachment/12369769/ws-policy.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-11-19 07:54:13.929,,,no_permission,,,,,,,,,,,,,112040,,,Mon Nov 19 07:54:13 UTC 2007,,,,,,0|i13zfj:,231370,,,,,,,,"19/Nov/07 07:00;bharathganesh;Attached the modified source file, with the fix I suggested.","19/Nov/07 07:54;maomaode;Thanks Bharath for the fix, later you can just provide the patch for us,

If you've the command line svn,  from the trunk dir, run the following command,

svn diff > ws-policy.patch

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Address in use errors from attempt to repeatedly start and stop services,CXF-1217,12382768,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bmargulies,bmargulies,19/Nov/07 03:15,29/Jan/08 21:51,14/Mar/19 02:28,26/Nov/07 06:17,2.1,,,,,,,2.0.4,,Transports,,,,,0,"Edit org.apache.cxf.javascript.JsHttpRequestTest to take out the @org.junit.Ignore from the test case that has one, and run from eclipse. Watch the logging traffic. Observe:

WARNING: failed Server@1174031
java.net.BindException: Address already in use: bind
        at sun.nio.ch.Net.bind(Native Method)

which eventually, as far as I can tell, turns into:

INFO: doOpen POST http://localhost:8808/Greeter false
Nov 18, 2007 10:07:08 PM org.apache.cxf.javascript.JsXMLHttpRequest communicate
SEVERE: IO error reading response
java.io.FileNotFoundException: http://localhost:8808/Greeter


On the other hand, all is well in Eclipse. 

I will probably commit a workaround to this soon, so it would be good to move this muddle to its own test case.


",Any,,,,,,,,,,,,,,,,21/Nov/07 13:19;gtully;busShutdownTest.patch.txt;https://issues.apache.org/jira/secure/attachment/12369974/busShutdownTest.patch.txt,22/Nov/07 10:39;gtully;jetty6.1.6.patch;https://issues.apache.org/jira/secure/attachment/12370060/jetty6.1.6.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-11-21 02:13:26.488,,,no_permission,,,,,,,,,,,,,112039,,,Mon Nov 26 06:17:37 UTC 2007,,,,,,0|i0v3of:,179569,,,,,,,,"21/Nov/07 02:13;njiang;After tracing the log , I found we did not really turn off the  ""org.apache.cxf.transports.http_jetty.DontClosePort"" flag in the parent pom.xml.

When you run the test from Eclipse the flag is not set , the jetty engine will be shutdown when  we call the bus.shutdown() in @After method.
Since we still set the ""org.apache.cxf.transports.http_jetty.DontClosePort"" true in the parent pom.xml, the jetty engine will not be shut down instead.

After I truned off the ""org.apache.cxf.transports.http_jetty.DontClosePort"" , I found there were dozens of systests failed. Now we still need to use ""org.apache.cxf.transports.http_jetty.DontClosePort"" flag in our parent pom.xml.

If we want to close the port when call the bus.shutdown(false), we still need set the ""org.apache.cxf.transports.http_jetty.DontClosePort"" to be false.

Willem.
","21/Nov/07 12:59;gtully;I don't fully understand the reason for org.apache.cxf.transports.http_jetty.DontClosePort but IMHO the idea of not shutting down the http transport is wrong. Is it possible to track down the root cause of the problem and deal with the bug there, where ever it is?

It should be possible to always set SO_REUSEADDR(default behaviour for server sockets) and have a server socket open/bind/close repeatidly in the same JVM. No?

Gary.","21/Nov/07 13:19;bmargulies;When we last discussed this, there were two issues. 

One was that CXF intentionally manages jetty engines with their own lifecycle. The goal is to permit multple CXF buses to publish endpoints on the same port(s) by sharing engines. So, a bus could shut down and leave an engine behind, \if something else is using the engine/.

My personal opinion is that this is not a good idea, but that's not a very important consideration. I think I left a JIRA hanging around asking for some explicit way to turn this off, in any case.

As I understand it, this design should not effect the cases in question here, since there shouldn't be something else holding the engine open.

I don't know the IBM JDK story.

There were bugs in the past in which the finger-counting went wrong, and the engine would 'stay alive' for no reason.

There was also rather a strong belief, based on some very strong evidence, that SO_REUSEADDR was \not/ the default state of Jetty's sockets. Willem put work into adding a code path that would explicitly set this option. The next version of Jetty has a much simpler API for that purpose, to boot.

Gary, do you know anything about the specifics of SO_REUSEADDR in Jetty?

One possibility is to write diagnostic code to read the state out.
","21/Nov/07 13:19;gtully;This patch contains a broken system test that uses a bus, shutsdown the bus and attempts to reuse the bus with the same server http url. The client in the test hangs on the second invocation.
I think this test represents a valid expection that should work out of the box for CXF. bus.shutdown should leave the JVM in the state that it was before bus initialisation, pending gc.
 
The test fails repeatidly for me on XP both in eclipse and with mvn.

Both using a different server side port on the second run and using the system property org.apache.cxf.transports.http_jetty.DontClosePort work to make the test pass but IMHO both should not be necessary. 
Working through this test case may help to provide the real culprit that is responsible for the introduction of org.apache.cxf.transports.http_jetty.DontClosePort.

Ps: Benson, I don't mean to hijack this bug report, I just want to focus the issue. I think the system property workaround is really overkill and problematic from a test perspective as it is a system global.","21/Nov/07 13:22;bmargulies;Gary,

I am a very, very, very, happy hijack-ee here. 

--benson
","21/Nov/07 14:55;gtully;Re Jetty and SO_REUSEADDR, I just traced through the code and I think the problem may be that the SO_REUSEADDR option is set after the bind call, so it is only in effect for the next call on that channel/socket which will never ocurr in my test case. We get another Connector as we should.

There is no space between the open and bind call into which we can inject the SO_REUSEADDR property in org.mortbay.jetty.nio.SelectChannelConnector: 

    public void open() throws IOException
    {
        synchronized(this)
        {
            if (_acceptChannel == null)
            {
                // Create a new server socket
                _acceptChannel = ServerSocketChannel.open();

                // Bind the server socket to the local host and port
                InetSocketAddress addr = getHost()==null?new InetSocketAddress(getPort()):new InetSocketAddress(getHost(),getPort());
                _acceptChannel.socket().bind(addr,getAcceptQueueSize());

                // Set to non blocking mode
                _acceptChannel.configureBlocking(false);
            }
        }
    }

Also, _acceptChannel is private so it is not easy to override this behaviour. Using a ServerSocketChanell provider is not really an option as it is difficult to tie this to the soReuseAddr option in the the CXF org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine.

I am thinking that there should be a call to configureBind() or something, between the open and the bind calls.
","21/Nov/07 15:18;bmargulies;Maybe we really need to look at the new API in the Jetty release candidate that purports (according to their response to my JIRA) to provide an orderly process for this purpose?
","21/Nov/07 15:24;gtully;This ""open"" call has been fixed in 6.1.6: http://svn.codehaus.org/jetty/jetty/tags/jetty-6.1.6/modules/jetty/src/main/java/org/mortbay/jetty/nio/SelectChannelConnector.java so we may be in luck with an upgrade once the option is set by CXF in the right place.","22/Nov/07 03:23;njiang;Since I can't get Jetty 6.1.6 from maven , I will try to use Jetty 6.1.6 rc1.
Thanks Gray for tracing the code.","22/Nov/07 06:12;njiang;Hi Gary

I tried to upgrade the Jetty and used the setReuseAddress flag in AbstractConnector, 
if I don't add the thread.sleep(4000) after the bus.shutdown,  the client can't get the response message from server.

I do not want to add the sleep into the bus.shutdown, since it will consume lots of our systest time , 
I still suggest to use the org.apache.cxf.transports.http_jetty.DontClosePort property in our test.

BTW, I will commit you test case into the svn repository for further verification ;)

Willem.","22/Nov/07 10:38;gtully;Hi Willlem,
with 6.1.6 (rc1) SO_REUSEADDR defaults to true. I guess in JettyHTTPServerEngine.java we need to apply our version of the reuseAddr flag before we call server.start(). The puropose of the flag would be to allow a user to turn SO_REUSEADDR off (as it defaults to true).
I will attach a small patch that will allow a user to turn SO_REUSEADDR off with 6.1.6. The 6.1.6 should be in a maven repo shortly, it was released a few days ago. this patch will require 6.1.6

There is still a problem with shutdown however, and it does appear to be related to keepAlive and the client sockets. I am still tracking it down.","22/Nov/07 10:39;gtully;a patch that requires jetty 6.1.6 (not yet in a repo, 6.1.6rc1 is) that ensures we set our version of ReuseAddr before it is need by jetty using the AbstractConnector. This will allow SO_REUSEADDR to be truned off as the default is on.","22/Nov/07 18:15;gtully;So I finally got to the root of this problem. It is a combination of keep-alive and chunking and stream wrapping.

Keepalive is on by default and turned on in HTTPClient by default for http 1.1 responses. The keepalive check interval is 5 seconds  so it there is a sleep in the code, we don't end up reusing a keepalive connection and everything works. In the BusShutdownTest there is no point to keepalive because the server goes away after the first request so the socket is always in close_wait when the client attempts to use it.
When the client gets a cached/keep-alive socket, the write succeeds and the read response fails because the server side of the socket has been closed. The retry logic in HttpClient attempts to close and reopen the connection to the server and resend the request. This works unless chunking is on and the original data has already been flushed/streamed out to the socket and is not available for retransmission. With chunking we end up sending a empty body and not getting much of a reply so we timeout. (I Have not traced exactly what gets sent on the wire in this case but from the code it appears to just be the header, no body to which we get a continue)

The last bit of the puzzle is org.apache.cxf.transport.http.HTTPConduit.WrappedOutputStream.handleHeadersTrustCaching(). This code forces the early write of the headers which in the case of streaming/chunking means they will be lost. I think the onset of these problems must have coincided with the addition of handleHeadersTrustCaching?

The upshot of all this is that disabling chunking via config is a viable workaround. The problem is on the client, not on the server. Adding the following in cxf.xml and providing the config file name to createBus() does the trick.

<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xmlns:http=""http://cxf.apache.org/transports/http/configuration""
       xsi:schemaLocation=""
http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"">
  
    <http:conduit name=""*.http-conduit"">
      <http:client AllowChunking=""false""/>
    </http:conduit>
</beans>


Also, disabling keepAlive at the HTTPClient layer has the desired effect: -Dhttp.keepAlive=false but we are back into system property land which should be avoided for specific test cases.

I guess the obvious question now surrounds handleHeadersTrustCaching() with chunking and keepalives and server closed sockets, do we expect this to work and if so can we fix it?","23/Nov/07 09:10;njiang;Hi Gary,

Thank you for tracing this issue. 
I just committed the code which fixed the systest errors when turn off the DontClosePort flag by setting the keep alive property and  AllowChunking to be false.

Just two quick question , I did not find the code in the HTTPConduit which set the keepalive check interval. Can you point me out ?
Why can I get the test pass by waiting for a few second after the bus shutdown ?  I do not think it is relate to the HTTPConduit retransmission mechanism.
","23/Nov/07 10:27;gtully;Hi Willem, you may have committed too much!
 I found the 'one' of AllowChunking=""false"" OR -Dhttp.keepAlive=false works for the BusShutdownTest. The problem is the interation of keepAlive and chunking, so turning off either should be sufficient. Apologies for not being more clear. 
My preference would be for local versions of cxf.xml in the tests that need it rather than adding the configuration to all system tests.

---
On the questions: the keepAlive check interval is not set in HTTPConduit, it is set via sun.net.www.http.HttpClient and sun.net.www.http.KeepAliveCache.put(URL, Object, HttpClient). It is set via the response keep-alive header if present and defaults to 5seconds.

Having the server set a keep-alive header timeout value to say 1 second would also have the effect of ensuring that a closed connection is not used but this would impact on the value of keep-alive.

The reason a sleep(4000) works is because the first connection is cached in the keepAlive cache but gets cleaned out every 5 seconds. It is placed in the cache once the response is read. In the mean time, a bus is shutdown, sleep(...) and a new  bus are created and 5 seconds pass. The keepAlive cache is cleared of any connection that has not been used in 5 seconds.
When the second invocation is made, there is nothing in the keepalive cache and a new connection is created as normal.

The problem arises when the second invocation uses a connection from the keepAliveCache that is partially closed, ie: the server has done a close. The client has to close it when the read fails and thus has to retry by resending the request on a new connection. When streaming/chunking is enabled however, the full request has not been cached and only the http headers of the request are sent, there is no body.  The subsequent read hangs as the server is still waiting for the end/rest of the retransmitted request.

Does this make sense?



","26/Nov/07 06:16;njiang;Hi Gray,
Thank you for the explanation, it make me much clear about the who HTTP keepAlive thing.
I tried to just turn off the AllowChunking , several MTOM and RM system tests failed, so I had to setup the keepalive system property for these test.

BTW, it is not easy to turn off the AllowChunking for the partial system tests without changing the code (let the bus to load the configure file), so I drop the cxf.xml into to the test resource directory.

Willem.",26/Nov/07 06:17;njiang;patches are in the trunk and 2.0.x-fixes branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Addressing & .net Interop,CXF-1216,12382679,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,acorcoran,acorcoran,16/Nov/07 16:52,29/Jan/08 21:51,14/Mar/19 02:28,19/Nov/07 04:36,2.0.3,,,,,,,2.0.4,,WS-* Components,,,,,0,"There seems to be a issue with WS-addressing (http://schemas.xmlsoap.org/ws/2004/08/addressin) & a .net consumer. .NET 2.0 expects the response header to comply to

/wsa:RelatesTo/@RelationshipType
    This OPTIONAL attribute (of type xs:QName) conveys the relationship type as a QName. When absent, the implied value of this attribute is wsa:Reply. 

See: http://www.w3.org/Submission/ws-addressing/

However the header contains:

<RelatesTo
	xmlns=""http://schemas.xmlsoap.org/ws/2004/08/addressing""
	RelationshipType=""reply"">
	urn:uuid:b33fc856-dbae-4034-ac6f-e2d53b593722
</RelatesTo>

As per Sergey the suggested fix is to only include the RelationshipType if it is not the default ""Reply"" value.
","cxf 2.0.3 running withjava version ""1.5.0_11"" On Tomcat 5.5.25

client consumer on .net 2.0.50727 & WSE 3.0",,,,,,,,,,,,,,,,16/Nov/07 16:54;acorcoran;cxf-2.0.3.patch;https://issues.apache.org/jira/secure/attachment/12369678/cxf-2.0.3.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,112038,,,Fri Nov 16 16:54:03 UTC 2007,,,,,,0|i0v3nz:,179567,,,,,,,,16/Nov/07 16:54;acorcoran;Path to fix issue. Only class effected is VersionTransformer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 http:sslClient not supported in cxf 2.0.3 ,CXF-1215,12382666,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,kaithwas,kaithwas,16/Nov/07 14:58,05/Oct/09 19:35,14/Mar/19 02:28,03/Oct/09 18:17,2.0.3,,,,,,,Invalid,,Transports,,,,,0,"org.apache.cxf.transport.http.HTTPConduit class doesnt support ssl transport  but as per wikihttp://cwiki.apache.org/CXF20DOC/client-http-transport.html  conduit it implemented.??
can you just remove that page from wiki or update 2.0.3 version. ",cxf 2.0.3,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-03 18:17:00.866,,,no_permission,,Unknown,,,,,,,,,,,112037,,,Sat Oct 03 18:17:00 UTC 2009,,,,,,0|i1aa1z:,268095,,,,,,,,"03/Oct/09 18:17;dkulp;

The ancient wiki page  is now removed.   https should be working fine now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java mojo dependency clash with testDependencies - no workaround available - new config option needed,CXF-1212,12382583,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,gtully,gtully,15/Nov/07 14:20,03/Dec/07 23:03,14/Mar/19 02:28,16/Nov/07 05:50,2.0.3,,,,,,,2.0.4,,Build system,,,,,0,"I have a scenarion where the tests require a saxon dependency which causes wsdl2java to bomb when accessing a binding customisation file using the -b option.

Because the wesl2java mojo always uses the test artifacts I can't have saxon missing for wsdl2java and present for the test run.

I think wsdl2java should allow an option to specify that teh compile artifacts/dependencies are used. In this way, a subset can be provided for the compile run where wsdl2java is used and the additional dependency can be specified in the test scope.",,,,,,,,,,,,,,,,,15/Nov/07 14:32;gtully;useConpileClasspath.patch;https://issues.apache.org/jira/secure/attachment/12369597/useConpileClasspath.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112034,,,Thu Nov 15 14:32:46 UTC 2007,,,,,,0|i0kpmn:,118969,,,,,,,,"15/Nov/07 14:32;gtully;This patch implements a simple boolean flag for the WSDL2Java mojo that indicates that the compile classpath should be used by the tool. 

This allows some flexibility when the test dependencies clash with wsdl2java itself. In this case the compile dependencies exclude the problem saxon jar and the test dependencies include it.

Usage:

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>${cxf.version}</version>
                <executions>
                    <execution>
                        <id>generate-test-sources</id>
                         <phase>generate-test-sources</phase>
                         <configuration>
                             <testSourceRoot>${basedir}/target/generated/src/test/java</testSourceRoot>
+                           <useCompileClasspath>true</useCompileClasspath>
                             <wsdlOptions>
                                 <wsdlOption>


The dependencies, exclusion on the compile dependency:

        <dependency>
            <groupId>com.foo.ads</groupId>
            <artifactId>foo-ds-api</artifactId>
            <version>${ads.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.saxon</groupId>
                    <artifactId>saxon</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>net.sf.saxon</groupId>
	    <artifactId>saxon</artifactId>
            <version>8.7</version>
            <scope>runtime</scope>
        </dependency>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logical handler doesn't work on server site.,CXF-1211,12382564,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jonathan_huang,jonathan_huang,15/Nov/07 06:52,30/Apr/08 14:57,14/Mar/19 02:28,25/Feb/08 19:12,2.1,,,,,,,2.1,,JAX-WS Runtime,,,,,0,"step1.  Add a simple logical handler to the service in ""wsdl_first"" sample
step2.  ""ant server"" to start the server.
step3.  ""ant client"" to start the client.
Then I got these error messages on server site:

server:
     [java] Starting Server
     [java] Server ready...
     [java] Executing operation sayHi

     [java] Executing operation greetMe
     [java] Message received: qhuang

     [java] Executing operation greetMeOneWay

     [java] Hello there qhuang
     [java] Executing operation pingMe, throwing PingMeFault exception

     [java] Server exiting
      ",window xp + jdk_1.5.0_06 + ant 1.6.5 + apache-cxf-2.1-incubator-SNAPSHOT,,,,,,,,,,,,,,,,15/Nov/07 06:57;jonathan_huang;wsdl_first.rar;https://issues.apache.org/jira/secure/attachment/12369575/wsdl_first.rar,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-25 19:12:14.667,,,no_permission,,,,,,,,,,,,,112033,,,Mon Feb 25 19:12:14 UTC 2008,,,,,,0|i0v3wv:,179607,,,,,,,,15/Nov/07 06:57;jonathan_huang;The source code that I used and modified.,"25/Feb/08 19:12;dkulp;
I'm going to mark this resolved as it's definitely working with the latest code.

If you update the TestHandler to actually do a println in the handleMessage, like:

	public boolean handleMessage(LogicalMessageContext arg0) {
                System.out.println(""In TestHandler"");
		return true;
	}

Then on the server console I see:
     [java] Starting Server
     [java] Server ready...
     [java] In TestHandler
     [java] Executing operation sayHi
     [java]
     [java] In TestHandler
     [java] In TestHandler
     [java] Executing operation greetMe
     [java] Message received: dkulp
     [java]
     [java] In TestHandler
     [java] In TestHandler
     [java] Executing operation greetMeOneWay
     [java]
     [java] Hello there dkulp
     [java] In TestHandler
     [java] Executing operation pingMe, throwing PingMeFault exception
     [java]


Which definitely shows that the LogicalHandler is being called.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WrapperClassInInterceptor incorrecltly handing SOAP headers,CXF-1208,12382466,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,incognito,incognito,13/Nov/07 22:57,22/Feb/08 21:36,14/Mar/19 02:28,19/Feb/08 22:12,2.0.2,,,,,,,2.0.4,,JAX-WS Runtime,,,,,0,"The following code block in WrapperClassInInterceptor is throwing IndexOutOfBoundsExceptions. The reason is that the newParams list has two (null) list entries, but the MessagePartInfo indeces that are being added to the remove arraylist are 1 and 2. 

                List<Integer> removes = null;
                for (MessagePartInfo part : messageInfo.getMessageParts()) {
                    if (Boolean.TRUE.equals(part.getProperty(ReflectionServiceFactoryBean.HEADER))) {
                        MessagePartInfo mpi = wrappedMessageInfo.getMessagePart(part.getName());
                        if (lst.hasValue(mpi)) {
                            newParams.put(part, lst.get(mpi));
                        } else if (mpi.getTypeClass() == null) {
                            //header, but not mapped to a param on the method
                            if (removes == null) {
                                removes = new ArrayList<Integer>();
                            }
                            removes.add(mpi.getIndex());
                        }
                    }
                }
                if (removes != null) {
                    Collections.sort(removes, Collections.reverseOrder());
                    for (Integer i : removes) {
                        newParams.remove(i.intValue()); // <= error thrown here
                    }
                }

The two items being removed are a username and password header set in my WSDL file: 

      <wsdl:input name=""sayHelloRequest"">
        <wsdlsoap:header message=""impl:username"" part=""username"" use=""literal""/>
        <wsdlsoap:header message=""impl:password"" part=""password"" use=""literal""/>
        <wsdlsoap:body use=""literal""/>
      </wsdl:input>

It seems the wrappedMessageInfo correctly contains all three message parts (the sayHello invocation, and 2 headers) but messageInfo.getMessageParts() is only returned the latter two.","windows XP, JBoss",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-14 00:12:58.882,,,no_permission,,Novice,,,,,,,,,,,112030,,,Mon Dec 03 22:05:09 UTC 2007,,,,,,0|i0v3r3:,179581,,,,,,,,"14/Nov/07 00:12;mazzag;Incognito, when/where is this error occurring--when you run a client generated via wsdl2java?  Or are you using the Dispatch object?  I think we need more information.  Also, I think you're using implicit SOAP headers there--headers defined in the WSDL:binding but not the WSDL:portType section[1]--I'm not sure though if that is relevant to your problem.

[1]  http://www.jroller.com/gmazza/date/20071001 
","03/Dec/07 22:05;dkulp;
Any chance this could be tested with 2.0.3?   The WrapperClassInIneterceptor is very different for 2.0.3 so this may be fixed already.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic client does not filter out JDK packages....,CXF-1204,12382384,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,12/Nov/07 21:02,03/Jul/08 17:19,14/Mar/19 02:28,20/May/08 19:03,2.0.1,2.0.2,2.0.3,,,,,2.0.7,2.1.1,JAXB Databinding,,,,,2,"With http://www.ncbi.nlm.nih.gov/entrez/eutils/soap/eutils_lite.wsdl, the Dynamic client tries to pass ""java.lang"" to the JAXB context.

The dynamic client should:

1) Filter out the known packages ahead of time (java.lang, java.util, etc..)

2) Check each package for pacakge.ObjectFactory and only use the packages where one is found.


",,,,,,,,,,,,,,,,,19/May/08 16:39;benjamin coiffe;patch.txt;https://issues.apache.org/jira/secure/attachment/12382312/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-19 16:39:14.702,,,no_permission,,,,,,,,,,,,,112026,,,Mon May 19 16:40:22 UTC 2008,,,,,,0|i1aa33:,268100,,,,,,,,"19/May/08 16:39;benjamin coiffe;This is a patch for cxf 2.0.4! (It only contains the relevant methods).
It can be applied on 2.1 as the dynamic client factory is not very different.","19/May/08 16:40;benjamin coiffe;forgot to mention that this is for ""org.apache.cxf.endpoint.dynamic.DynamicClientFactory """,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic client screws up the thread context classloader,CXF-1203,12382382,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,12/Nov/07 20:38,11/Oct/10 14:57,14/Mar/19 02:28,10/Dec/09 03:06,2.0.2,,,,,,,Invalid,,JAXB Databinding,,,,,1,"
The dynamic client sets the ContextClassloader for the thread to a new value at client create time, but doesn't restore it.    Thus, if you then use something else later, the class loader doesn't contain the expected classes.


The most specific issue is that if you create TWO dynamic clients in the same VM on the same thread, the second one will fail to compile as the classpath is not setup properly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112025,,,Thu Dec 10 03:06:21 UTC 2009,,,,,,0|i1aa3b:,268101,,,,,,,,"10/Dec/09 03:06;dkulp;
This is mostly a Documentation issue.  I've updated the docs for the DynamicClient stuff to point this out.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In/Out out of band headers causing Exception in HolderOutInterceptor,CXF-1202,12382374,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,12/Nov/07 19:14,29/Jan/08 21:51,14/Mar/19 02:28,03/Dec/07 22:06,2.0.2,2.0.3,,,,,,2.0.4,,JAX-WS Runtime,,,,,0,"
If the wsdl has an out of band header that is an in/out header, and the code is NOT generated with -exsh true, the HolderOutInterceptor tries to process the header part even though it isn't there thus causing an exception.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112024,,,2007-11-12 19:14:42.0,,,,,,0|i1aa3j:,268102,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ValidatorUtil contains incomplete URL escaping,CXF-1201,12382352,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,12/Nov/07 14:40,12/Nov/07 17:25,14/Mar/19 02:28,12/Nov/07 17:25,2.1,,,,,,,2.1,,Tooling,,,,,0,"getSchemaList in ValidatorUtil just does spaces. It should do the whole business.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112023,,,2007-11-12 14:40:55.0,,,,,,0|i0v3lj:,179556,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdltojava accepts targetnamespace with ':' in the name but generate code that does not compile,CXF-1200,12382324,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,12/Nov/07 08:54,17/Aug/15 12:36,14/Mar/19 02:28,21/Feb/08 19:15,2.0.2,,,,,,,2.0.4,,Tooling,,,,,0," When using following target namespace with ':' in it (""targetNamespace of http://blahblah:8080/nasoap/services/urn:nasoap-server2), the generated code by ""wsdltojava"" will contain a java package name with ':' on it, which will fail at compilation. 

""The reason I am saying it is a bug is that schemavalidator does not complain about it, even if it is an invalid URL format.
Even wsdltojava does not complain, but generates uncompilable code.
So I think the fix should be put in schemavalidator to flag this as an error. """,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-26 08:28:32.085,,,no_permission,,,,,,,,,,,,,112022,,,Mon Dec 17 09:47:04 UTC 2007,,,,,,0|i1aa3r:,268103,,,,,,,,26/Nov/07 08:28;pokynsky;Using # in the target namespace alto it produces the same error.,"03/Dec/07 04:50;maomaode;I'm really confused after I re-investigate the issue against with cxf 2.0.2

If TNS contains "":"", 
http://apache.org/hello_world_soap_http/cxf:types

it actually generate the package like that

org/apache/hello_world_soap_http/tns/types/, and compile is total OK

If TNS contains ""#"", 
http://apache.org/hello_world_soap_http/iona#soap

it actually generate the package like that:

korg/apache/hello_world_soap_http/iona_soap/

So, I'm wondering, if this is actually a valid issue!?

Probably I'm using a wrong testcase.

Can you please provide a testcase","17/Dec/07 09:47;pokynsky;If you don't have internet conecction and you create an operation in your wsdl with 
<xsd:schema>
            <xsd:import namespace=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" 
            	   schemaLocation=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""/>
 </xsd:schema>

In the Wsdl2Java tool, I have my Catalog.xml 

<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<catalog xmlns=""urn:oasis:names:tc:entity:xmlns:xml:catalog"">
	<system systemId=""http://cxf.apache.org/schemas/configuration/cxf-beans.xsd"" uri=""jar:file:D:/apache-cxf-2.0.3-incubator/lib/cxf-2.0.3-incubator.jar!/schemas/configuration/cxf-beans.xsd""/>
	<system systemId=""http://cxf.apache.org/schemas/jaxws.xsd"" uri=""jar:file:D:/apache-cxf-2.0.3-incubator/lib/cxf-2.0.3-incubator.jar!/schemas/jaxws.xsd""/>
	
	
	<system systemId=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" uri=""jar:file:D:/apache-cxf-2.0.3-incubator/lib/cxf-2.0.3-incubator.jar!/schemas/oasis-200401-wss-wssecurity-secext-1.0.xsd""/>
	
	<rewriteSystem  systemId=""http://www.w3.org/2001/XMLSchema.dtd"" rewritePrefix=""classpath:schemas/XMLSchema.dtd""/>
	
	<rewriteSystem systemIdStartString=""http://www.w3.org/TR/2002/REC-xmldsig-core-20020212/xmldsig-core-schema.xsd"" rewritePrefix=""classpath:schemas/xmldsig-core-schema.xsd"" />
  	<rewriteSystem systemIdStartString=""http://www.w3.org/2000/09/xmldsig#"" rewritePrefix=""classpath:schemas/xmldsig-core-schema.xsd""/>

	
	<system systemId=""http://www.w3.org/2001/xml.xsd"" uri=""jar:file:D:/apache-cxf-2.0.3-incubator/lib/cxf-2.0.3-incubator.jar!/schemas/xml.xsd""/>
	<system systemId=""http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"" uri=""jar:file:D:/apache-cxf-2.0.3-incubator/lib/cxf-2.0.3-incubator.jar!/schemas/xmldsig-core-schema.xsd""/>
	<system systemId=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" uri=""jar:file:D:/apache-cxf-2.0.3-incubator/lib/cxf-2.0.3-incubator.jar!/schemas/oasis-200401-wss-wssecurity-utility-1.0.xsd""/>
</catalog>

And the error is:

Caused by : WSDLException (at /wsdl:definitions/wsdl:types/xsd:schema[2]/xsd:schema): faultCode=PARSER_ERROR: Problem parsing 'jar:file:D:/
pache-cxf-2.0.3-incubator/lib/cxf-2.0.3-incubator.jar!/schemas/xmldsig-core-schema.xsd'.: java.net.ConnectException: Connection timed out:
onnect
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:237)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
Caused by: java.lang.RuntimeException: Fail to create wsdl definition from : file:/D:/CompilaWS/PrestacionesSOAP.wsdl
Caused by : WSDLException (at /wsdl:definitions/wsdl:types/xsd:schema[2]/xsd:schema): faultCode=PARSER_ERROR: Problem parsing 'jar:file:D:/
pache-cxf-2.0.3-incubator/lib/cxf-2.0.3-incubator.jar!/schemas/xmldsig-core-schema.xsd'.: java.net.ConnectException: Connection timed out:
onnect
        at org.apache.cxf.wsdl11.WSDLDefinitionBuilder.parseWSDL(WSDLDefinitionBuilder.java:156)
        at org.apache.cxf.wsdl11.WSDLDefinitionBuilder.build(WSDLDefinitionBuilder.java:125)
        at org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuilder.build(JAXWSDefinitionBuilder.java:89)
        at org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuilder.build(JAXWSDefinitionBuilder.java:61)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:122)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:229)
        ... 3 more
Caused by: javax.wsdl.WSDLException: WSDLException (at /wsdl:definitions/wsdl:types/xsd:schema[2]/xsd:schema): faultCode=PARSER_ERROR: Prob
em parsing 'jar:file:D:/apache-cxf-2.0.3-incubator/lib/cxf-2.0.3-incubator.jar!/schemas/xmldsig-core-schema.xsd'.: java.net.ConnectExceptio
: Connection timed out: connect
        at com.ibm.wsdl.xml.WSDLReaderImpl.getDocument(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseSchema(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseSchema(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseSchema(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseTypes(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseDefinitions(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at org.apache.cxf.wsdl11.WSDLDefinitionBuilder.parseWSDL(WSDLDefinitionBuilder.java:137)
        ... 8 more
Caused by: java.net.ConnectException: Connection timed out: connect
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)
        at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)
        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)
        at java.net.Socket.connect(Socket.java:519)
        at java.net.Socket.connect(Socket.java:469)
        at sun.net.NetworkClient.doConnect(NetworkClient.java:157)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:382)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:509)
        at sun.net.www.http.HttpClient.<init>(HttpClient.java:231)
        at sun.net.www.http.HttpClient.New(HttpClient.java:304)
        at sun.net.www.http.HttpClient.New(HttpClient.java:316)
        at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:817)
        at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:769)
        at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:694)
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:938)
        at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:973)
        at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startEntity(XMLEntityManager.java:905)
        at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startDTDEntity(XMLEntityManager.java:872)
        at com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl.setInputSource(XMLDTDScannerImpl.java:282)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(XMLDocumentScannerImpl.java:1021)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)

But, if you has internet conection,this error does not happen.

I believe that the problem is when parser of the scheme http://www.w3.org/2000/09/xmldsig#

When the sever start, the same  error take places.

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@BindingType(SOAP11HTTP_MTOM_BINDING) is not activating MTOM,CXF-1196,12382256,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,maomaode,mazzag,mazzag,10/Nov/07 04:45,29/Jan/08 21:51,14/Mar/19 02:28,12/Dec/07 04:32,2.0.2,,,,,,,2.0.4,,,,,,,0,"The following attribute placed on the SEI implementation class will activate MTOM for GlassFish Metro but not for Apache CXF:
@BindingType(value=javax.xml.ws.soap.SOAPBinding.SOAP11HTTP_MTOM_BINDING)

To confirm this, I used this class:
http://www.jroller.com/gmazza/date/20071102#NWSstep6

And the following additional tests:
1.) By removing/adding the above annotation, MTOM was turned off/on with Metro
2.) By adding the below to my cxf-servlet.xml config file, MTOM was turned on by CXF (i.e., so CXF can indeed do MTOM, it's just that the above annotation doesn't work.)

        <jaxws:properties>
           <entry key=""mtom-enabled"" value=""true""/>
        </jaxws:properties>        

Page 130, bottom, of the WS 2.1 specification of May 2007 says that this binding (as well as SOAP12HTTP BINDING) should enable MTOM.  

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-10 06:42:15.484,,,no_permission,,Moderate,,,,,,,,,,,112018,,,Sat Nov 10 10:11:43 UTC 2007,,,,,,0|i1aa47:,268105,,,,,,,,"10/Nov/07 06:42;maomaode;Hi Glen, 

  Which version of Metro are you using? i guess it's 2.1.* , right?
  This is actually jaxws 2.1 stuff, I have created the similar issue https://issues.apache.org/jira/browse/CXF-1142

   We should link the two issues together

   Wondering if you have interest to do this ;)","10/Nov/07 10:11;mazzag;No, actually it is even slightly deprecated in 2.1 (although still a part of it).  It is on page 120 of the JAX-WS 2.0 standard of April 2006.  This is a bug.

I would like to help out more in code but I still have more learning to do, so I can't emphasize coding as much right now.  Just determining these errors takes a long time by itself.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema Validation & MTOM fails,CXF-1194,12382205,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,acorcoran,acorcoran,09/Nov/07 16:30,15/Oct/08 04:52,14/Mar/19 02:28,16/Sep/08 15:36,2.0,,,,,,,2.0.9,2.1.3,,,,,,3,"
Enabling mtom & schema validation for a jaws causes problems once xsd:base64Binary is encountered. It appears that the schema validation is applied to the mtom'd xml which will obviously fail schema validation. To my mind if schema-vallidation & mtom are enabled then schema validation should happen before the mtom step and not after.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-10 06:46:31.186,,,no_permission,,,,,,,,,,,,,112016,,,Tue Sep 16 15:36:32 UTC 2008,,,,,,0|i1aa4f:,268106,,,,,,,,"10/Sep/08 06:46;storm;To be more specific I have to say, that validation with MTOM and JAXWS frontend works well with incoming messages, but with outgoing messages there is a problem explained above. I am using CXF 2.0.6.","16/Sep/08 15:36;dkulp;
Kind of ""fixed"".  More like ""hacked around"".   I now register a validation event handler with JAXB.   When the handler is called, I check if the element is the last element that the marshaller had created an attachment for.   If so, I ignore the error and let it continue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Jsr250BeanPostProcessor, non reentrant ResourceInjector results in IllegalArgumentException",CXF-1192,12382181,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,gtully,gtully,09/Nov/07 11:59,03/Dec/07 23:02,14/Mar/19 02:28,03/Dec/07 22:07,2.0.3,,,,,,,2.0.4,,Core,,,,,0,"

The Jsr250BeanPostProcessor[1], uses a single instance of the  non reentrant ResourceInjector. If the bean has two postConstruct methods and the first results in another bean creation which has a postConstruct method we have trouble. For a postConstruct method, the ResourceInjector sets a Target reference member variable and invokes the method. If the postConstrcut method results in another bean being created that has a postConstrcut annotation the single ResourceInjector gets it's target reference changed and the result is an IllegalArgumentException on calling a subsequent postConstruct method.

The simplest fix is to have the Jsr250BeanPostProcessor use a new ResourceInjector for every bean.

The scenario that showed this bug has been worked around so I don't have an easy test case but one can be fabricated around the spring tests in core by following the description and adding the  Jsr250BeanPostProcessor to the configuration.

[1] http://svn.apache.org/viewvc/incubator/cxf/trunk/rt/core/src/main/java/org/apache/cxf/bus/spring/Jsr250BeanPostProcessor.java?view=markup",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112015,,,2007-11-09 11:59:23.0,,,,,,0|i0syqf:,167104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using Spring  <context:annotation-config /> spawns creation error on  org.apache.cxf.transport.servlet.ServletTransportFactory,CXF-1187,12382105,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,julien.dumetier,julien.dumetier,08/Nov/07 16:04,29/Jan/08 21:51,14/Mar/19 02:28,03/Dec/07 13:38,2.0.3,,,,,,,2.0.4,,Integration,,,,,0,"Consider the simple following Spring context defintion XML file:

<?xml version=""1.0"" encoding=""UTF-8""?>

<beans 
xmlns=""http://www.springframework.org/schema/beans"" 
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xmlns:util=""http://www.springframework.org/schema/util"" 
xmlns:context=""http://www.springframework.org/schema/context"" 
xsi:schemaLocation=""
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/util 
http://www.springframework.org/schema/util/spring-util-2.5.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-2.5.xsd
"">

      <import resource=""classpath:META-INF/cxf/cxf.xml"" />
      <import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />

</beans>

And the simple following laucher:

package test;

import org.springframework.context.support.ClassPathXmlApplicationContext;

public class MainTest {

      public static void main(String[] args) {
            new ClassPathXmlApplicationContext(""classpath:test/context.xml"");
      }
      
}

All works fine.

But if you use new Spring annotation configuration capabilities, adding the following to the definition file:

<context:annotation-config />

Then, you will get the following exception:

Exception in thread ""main"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.cxf.transport.servlet.ServletTransportFactory#0': Injection of resource methods failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'activationNamespaces' is defined

Because org.apache.cxf.transport.http.AbstractHTTPTransportFactory shows the following annotation on the setter, although ""No bean named 'activationNamespaces' is defined"":

    @Resource(name = ""activationNamespaces"")
    public void setActivationNamespaces(Collection<String> ans) {
        activationNamespaces = ans;
    }

Annotation config is now widely spread among Spring projects, and will become pervasive the new Spring 2.5 testing framework, based on a the annotation configuration capabilities. 

A workaround is to add a collection of string named ""activationNamespaces"" to the context, adding the following: 

<util:list id=""activationNamespaces"" value-type=""java.lang.String"" />

But cxf.xml should be refactored to avoid this.
",JDK 1.6,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-03 13:36:41.035,,,no_permission,,,,,,,,,,,,,112010,,,Mon Dec 03 13:38:01 UTC 2007,,,,,,0|i1aa53:,268109,,,,,,,,"03/Dec/07 13:36;njiang;This issue can be resolved by remove the annotation of @Resource(name = ""activationNamespaces"") , since there is no activationNamespaces bean in spring application context.  And The setActivationNamespaces method will be called when extension manager load the extension.",03/Dec/07 13:38;njiang;This patch are in the trunk and 2.0.x-fixes branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Addressing is working with the API approach,CXF-1186,12382071,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,08/Nov/07 08:03,29/Jan/08 21:51,14/Mar/19 02:28,09/Nov/07 07:50,2.0.2,,,,,,,2.0.4,,WS-* Components,,,,,0,"From the documentation http://cwiki.apache.org/CXF20DOC/ws-addressing.html
The WSAddressingFeature should work through the API approach, but actually it's not",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112009,,,2007-11-08 08:03:15.0,,,,,,0|i1aa5b:,268110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
groovy and ruby samples are broken,CXF-1183,12381979,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,blin,blin,07/Nov/07 01:52,30/Apr/08 14:57,14/Mar/19 02:28,18/Mar/08 11:21,2.0.2,,,,,,,2.1,,Samples,,,,,0,"it could be due to spring version issues. Errors from server:

  [java] Starting Server
     [java] Nov 7, 2007 8:57:19 AM org.springframework.util.xml.SimpleSaxErrorHandler warning
     [java] WARNING: Ignored XML validation warning
     [java] org.xml.sax.SAXParseException: schema_reference.4: Failed to read schema document 'http://www.springframework.org/schema/lang/spring-lang-2.0.xsd', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not <xsd:schema>.
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:137)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:378)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:316)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2461)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1807)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1693)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
     [java]     at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
     [java]     at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)
     [java]     at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:351)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)
     [java]     at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:131)
     [java]     at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:147)
     [java]     at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:124)
     [java]     at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:92)
     [java]     at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:101)
     [java]     at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:389)
     [java]     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:324)
     [java]     at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:244)
     [java]     at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:187)
     [java]     at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:49)

and errors from client:

client:
     [java] Exception in thread ""main"" org.apache.cxf.binding.soap.SoapFault: ""null"" is not a valid SOAP version.
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:90)
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:56)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
     [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:402)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1948)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1791)
     [java]     at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
     [java]     at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:575)
     [java]     at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
     [java]     at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
     [java]     at org.apache.cxf.frontend.ClientProxy.invoke(ClientProxy.java:68)
     [java]     at $Proxy15.sayHi(Unknown Source)
     [java]     at demo.spring.client.Client.main(Client.java:39)
     [java] Java Result: 1",,,,,,,,,,,,,,,,,07/Nov/07 03:06;jeffzhang;spring_version.patch;https://issues.apache.org/jira/secure/attachment/12369074/spring_version.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-11-07 02:13:21.682,,,no_permission,,,,,,,,,,,,,112006,,,Tue Mar 18 11:21:54 UTC 2008,,,,,,0|i0v3vz:,179603,,,,,,,,"07/Nov/07 02:13;jeffzhang;Yes, I think spring version cause this problem.
I will fix it and give a patch for 2.0.3 release.","07/Nov/07 03:06;jeffzhang;modify spring version 2.0.6, please apply this patch in distribution directory. tested on trunk kit build.",25/Dec/07 02:45;blin;This is still a valid issue in the latest trunk,18/Mar/08 11:21;seanoc;Tested the 2.1 demos and these worked fine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.bus.extension.DeferredMap::undefer causes all configuration to be lost when not using Spring,CXF-1182,12381970,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,night.kame,night.kame,06/Nov/07 23:56,11/Oct/10 14:44,14/Mar/19 02:28,26/Oct/09 20:31,2.0.2,,,,,,,2.3,,Configuration,,,,,0,"While trying to use ""Publishing an endpoint with the API"" ( http://cwiki.apache.org/CXF20DOC/servlet-transport.html ) under Tomcat, it fails with the following problem (with a modified CXFServlet):
- CXFServlet loads, create a bus = BusFactory.newInstance()).createBus() with the default parameters (Jetty for the transports)
- the transports are correctly registered in CXFServlet::replaceDestinationFactory (ServletTransportFactory instead of Jetty)
- while publishing the ""/Greeter"" endpoint,  DestinationFactoryManagerImpl::getDestinationFactoryForUri fails to find a matching prefix with the registered ServletTransportFactory
- then it calls ((DeferredMap)destinationFactories).undefer(), and tries again
- undefer in turn calls the ExtensionManagerImpl, which reloads the default configuration: Jetty comes back, and the ServletTransportFactory is lost for good",Tomcat 5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-25 13:50:25.538,,,no_permission,,,,,,,,,,,,,112005,,,Mon Oct 26 16:19:22 UTC 2009,,,,,,0|i0v00n:,178976,,,,,,,,25/Oct/09 13:50;chris@die-schneider.net;There has been no activity on this issue since quite a long time. Please add a comment if this bug is still open. I will close the issue on 01.11.2009 if there is no reply.,"25/Oct/09 19:53;night.kame;Actually we ended up not using ""Publishing an endpoint with the API"" since it was completely broken without Spring in the classpath and ended up using the JAX-WS frontend. This has the other advantage of making easier to switch from CXF (which we don't want to do). That method is still advertised, but I've little hope that it's working, not that it matters much.","26/Oct/09 16:19;dkulp;
I am pretty sure this is fixed on trunk for 2.3.

The TransportFinder think on 2.3 does:
if (uri.startsWith(""/"") || uri.indexOf("":"") < 0) {
            uri = ""http://"" + uri;
        }

which would then allow the /Greeter URL to be silently mapped into HTTP which the ServletTransport that is already registered would pick up.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If Exchange is the last parameter on the method parameter list of a JAX-WS operation, then CXF generates a part for it, so invoking the service fails because there will be too many parameters ",CXF-1180,12381923,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,orbang,orbang,06/Nov/07 16:12,29/Jan/08 21:51,14/Mar/19 02:28,03/Dec/07 23:47,2.1,,,,,,,2.0.4,,JAX-WS Runtime,JAXB Databinding,Service Model,,,0,"If Exchange is the last parameter on the method parameter list of a JAX-WS operation, then CXF generates a part for it, so invoking the service fails because there will be too many parameters. This happens because AbstractInvoker.insertExchange puts the Exchange on the parameter list, but the length of the params array will be the number of parameters of the method + 1. A possible solution would be to skip the Exchange parameter in the service building process.
For STAX services it works fine.

Example:

This method signature doesn't work:

public void arithmetic(@WebParam(targetNamespace = NS_URI, name = ""Num1"")
	double num1, @WebParam(targetNamespace = NS_URI, name = ""Num2"")
	double num2,
			@WebParam(targetNamespace = NS_URI, name = ""Add"", mode = Mode.OUT)
			Holder<Double> add,
			@WebParam(targetNamespace = NS_URI, name = ""Sub"", mode = Mode.OUT)
			Holder<Double> sub,
			@WebParam(targetNamespace = NS_URI, name = ""Mul"", mode = Mode.OUT)
			Holder<Double> mul,
			@WebParam(targetNamespace = NS_URI, name = ""Div"", mode = Mode.OUT)
			Holder<Double> div, 
			Exchange ex) {
...
}",20071002 snapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,112003,,,2007-11-06 16:12:07.0,,,,,,0|i1aa5z:,268113,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java from maven-code-gen plugin has validation and no warning suppression - wsdl with no service blows with error warning ...,CXF-1169,12381705,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,gtully,gtully,02/Nov/07 14:19,05/Dec/07 19:23,14/Mar/19 02:28,05/Nov/07 02:26,2.0.3,,,,,,,2.0.3,,Tooling,,,,,0,"validation with no warning suppression cause wsdl2java from maven-code-gen to blow with Error Warning for logical wsdl. That is wsdl that has no services defined. Having suppressWarnings on by default in the WSDLToJavaContaner fixes this.

wsde2java command line tool does the suppression ok.

Either the warning is not valid or wsdl2java from maven should always disable it because a wsdl with no services is perfectly valid. ",,,,,,,,,,,,,,,,,02/Nov/07 14:21;gtully;suppressWarn.patch;https://issues.apache.org/jira/secure/attachment/12368878/suppressWarn.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-11-02 17:26:26.278,,,no_permission,,,,,,,,,,,,,111992,,,Mon Nov 05 15:04:31 UTC 2007,,,,,,0|i1aa7z:,268122,,,,,,,,"02/Nov/07 14:21;gtully;This fixes the issue by ensuring that the suppressWarnings option is passed to the validator that is used by the WsdltoJavaContainer.
I don't see where the command line tool makes this the default but doing it in the container works for all code paths that I am aware of.","02/Nov/07 17:26;dkulp;

Personally, I'd prefer that the warning about no services just be removed.    Code generation from a Logical wsdl is completely valid.   Logical wsdls are completely valid.  Why should a warning be generated?

",04/Nov/07 21:14;gtully;just removing the warning is fine for me too. Don't know the history behing the resoning for the warning.,"05/Nov/07 02:07;maomaode;The validation is added because the RI has the same validation, it's a valid wsdl in our view, but not in the RI.

I'm also ok to remove this validation if we're agreed ;)","05/Nov/07 15:04;edellnolan;If the wsdl is valid without services then we really shouldn't throw warnings. We are going to get warnings in the idltowsdl tools when a user chooses to split the generated wsdl into logical and physical wsdls if we want to validate them. 

So I would agree to get rid of this warning.

cheers, Edell.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic client horks when asked to process a schema using base64,CXF-1168,12381701,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,02/Nov/07 12:44,02/Nov/07 14:10,14/Mar/19 02:28,02/Nov/07 13:34,2.0.2,2.1,,,,,,2.0.3,,JAXB Databinding,,,,,0,"New test case in org.apache.cxf.systest.jaxws.ClientServerTest fails when processing WSDL with base64 usage.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111991,,,Fri Nov 02 13:34:06 UTC 2007,,,,,,0|i1aa87:,268123,,,,,,,,02/Nov/07 13:34;bmargulies;Fix committed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binding inherited subclasses with Aegis in CXF,CXF-1164,12381661,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,uva_jeff,uva_jeff,01/Nov/07 22:53,30/Apr/08 14:57,14/Mar/19 02:28,04/Mar/08 21:06,2.0.2,,,,,,,2.1,,Aegis Databinding,,,,,0,"XFire supported binding (via Aegis) inherited subclasses (or any arbitrary classes) that were not present in a service interface, as described here: http://xfire.codehaus.org/Aegis+Inheritance.  It appears that this functionality does still exist in CXF, but it is not clear how it is exposed and specifically how it would be integrated within a Spring configuration.  See my mailing list post on this issue at http://www.nabble.com/Migrating-XFire-Aegis-inheritance-to-CXF-tf4733903.html.  This issue was created at the request of Benson Margulies.","JBoss 4.0.3.SP1, Spring 2.0",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-04 21:06:32.185,,,no_permission,,,,,,,,,,,,,111987,,,Tue Mar 04 21:06:32 UTC 2008,,,,,,0|i1aa8v:,268126,,,,,,,,"04/Mar/08 21:06;bmargulies;This should now be under control via the rootClassNames property of AegisContext for 2.1.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
None of samples are working in latest trunk,CXF-1163,12381596,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,blin,blin,01/Nov/07 09:06,30/Apr/08 14:57,14/Mar/19 02:28,02/Nov/07 17:28,,,,,,,,2.1,,,,,,,0,"I think this might due to some problem in common.build.xml, following are errors from ant build:

generate.code:
     [echo] Generating code using wsdl2java...
    [mkdir] Created dir: /local/dev/cxf/trunk/distribution/target/apache-cxf-2.1-incubator-SNAPSHOT/samples/wsdl_first/build/classes
    [mkdir] Created dir: /local/dev/cxf/trunk/distribution/target/apache-cxf-2.1-incubator-SNAPSHOT/samples/wsdl_first/build/src
     [java] Loading FrontEnd jaxws ...
     [java] Loading DataBinding jaxb ...
     [java] wsdl2java -verbose -d /local/dev/cxf/trunk/distribution/target/apache-cxf-2.1-incubator-SNAPSHOT/samples/wsdl_first/build/src /local/dev/cxf/trunk/distribution/target/apache-cxf-2.1-incubator-SNAPSHOT/samples/wsdl_first/wsdl/hello_world.wsdl
     [java] wsdl2java - Apache CXF (incubator) 2.1-incubator-SNAPSHOT

     [java] Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory
     [java]     at org.springframework.util.ClassUtils.<clinit>(ClassUtils.java:67)
     [java]     at org.springframework.core.io.DefaultResourceLoader.<init>(DefaultResourceLoader.java:52)
     [java]     at org.springframework.context.support.AbstractApplicationContext.<init>(AbstractApplicationContext.java:184)
     [java]     at org.springframework.context.support.AbstractRefreshableApplicationContext.<init>(AbstractRefreshableApplicationContext.java:80)
     [java]     at org.springframework.context.support.AbstractXmlApplicationContext.<init>(AbstractXmlApplicationContext.java:58)
     [java]     at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:123)
     [java]     at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:68)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:84)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:65)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:54)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:69)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:58)
     [java]     at org.apache.cxf.tools.common.toolspec.AbstractToolContainer.getBus(AbstractToolContainer.java:186)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:120)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:229)
     [java]     at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)

BUILD FAILED
/local/dev/cxf/trunk/distribution/target/apache-cxf-2.1-incubator-SNAPSHOT/samples/common_build.xml:100: The following error occurred while executing this line:
/local/dev/cxf/trunk/distribution/target/apache-cxf-2.1-incubator-SNAPSHOT/samples/wsdl_first/build.xml:47: The following error occurred while executing this line:
/local/dev/cxf/trunk/distribution/target/apache-cxf-2.1-incubator-SNAPSHOT/samples/common_build.xml:206: Java returned: 1

Total time: 3 seconds

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-01 11:22:11.759,,,no_permission,,,,,,,,,,,,,111986,,,Fri Nov 02 01:19:17 UTC 2007,,,,,,0|i1aa93:,268127,,,,,,,,"01/Nov/07 11:22;jliu;I saw this problem as well. The problem is caused by the wrong verision number of commons-logging-1.1.jar. In lib, we have commons-logging-1.1.jar, but in the manifest, we expect commons-logging-1.0.4.jar in the classpath. 

But I have not figured out how to fix this yet. Can not find a place that has a reference to commons-logging-1.0.4, not sure how this is generated into the manifest.

","01/Nov/07 11:49;dkulp;
What version of Maven?   With 2.0.7, the manifest says commons-logging-1.1.jar

If maven 2.0.7 fixes it, I'll update the pre-rereqs to say 2.0.7.

",02/Nov/07 01:19;blin;I was using maven 2.0.7 version when I got this error.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc for classes generated XSD with WSDL is defective,CXF-1161,12381555,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,bmargulies,bmargulies,31/Oct/07 14:07,03/Aug/09 20:06,14/Mar/19 02:28,28/Jul/09 18:01,2.0.3,,,,,,,2.1.6,2.2.3,JAXB Databinding,,,,,0,"I've added a 'form_test.xsd' file to the test resources for rt/databinding/jaxb. This contains:

<xs:complexType name=""ObjectWithQualifiedElement"">
        <xs:sequence>
            <xs:element name=""string1"" type=""xs:string"" />
            <xs:element name=""string2"" type=""xs:string"" form='qualified' />
        </xs:sequence>
    </xs:complexType>

The javadoc in the generated class lacks the form attribute.

<complexType name=""ObjectWithQualifiedElement"">
   <complexContent>
     <restriction base=""{http://www.w3.org/2001/XMLSchema}anyType"">
       <sequence>
         <element name=""string1"" type=""{http://www.w3.org/2001/XMLSchema}string""/>
         <element name=""string2"" type=""{http://www.w3.org/2001/XMLSchema}string""/>
       </sequence>
     </restriction>
   </complexContent>
 </complexType>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-08 16:02:11.386,,,no_permission,,,,,,,,,,,,,111984,,,Tue Jul 28 18:01:37 UTC 2009,,,,,,0|i1aa9b:,268128,,,,,,,,08/Dec/08 12:58;bmargulies;This comes straight from JAXB. You could try reporting it to them.,"08/Dec/08 16:02;seanoc;Still an issue with the latest snapshot, however these files are generated by the JAXB reference implementation and not CXF code. ",08/Dec/08 16:03;seanoc;Yyeah will do Benson.,08/Dec/08 16:31;seanoc;Have raised this as an issue with the jaxb RI project: https://jaxb.dev.java.net/issues/show_bug.cgi?id=575,19/Jan/09 11:01;seanoc;According to https://jaxb.dev.java.net/issues/show_bug.cgi?id=575 fixed on jaxb trunk as of the 08 jan 2009.,28/Jul/09 18:01;dkulp;Updated to newer JAXB.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ridiculous XmlSchema workaround hack in ReflectionServiceFactoryBean ,CXF-1160,12381549,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,31/Oct/07 12:18,03/Jul/08 17:19,14/Mar/19 02:28,02/May/08 22:47,2.1,,,,,,,2.1.1,,Core,,,,,0,"RSFB.newXmlSchemaInCollection is an insane hack that works around a WSCOMMONS bug, and should be remove when/if we get relief.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111983,,,Fri May 02 22:47:28 UTC 2008,,,,,,0|i0syr3:,167107,,,,,,,,02/May/08 22:47;bmargulies;I took out the trash.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove FixedExtensionDeserializer once XmlSchema delivers their fix,CXF-1159,12381548,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,31/Oct/07 12:14,04/Dec/09 22:34,14/Mar/19 02:28,16/Oct/09 01:38,2.1,,,,,,,2.2.5,,Core,,,,,0,"When XmlSchema releases a fix to WSCOMMONS-261, we should remove FixedExtensionDeserializer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111982,,,2007-10-31 12:14:43.0,,,,,,0|i0syrb:,167108,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdlvalidator failed with imported wsdl,CXF-1154,12381457,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,30/Oct/07 14:59,05/Dec/07 19:23,14/Mar/19 02:28,31/Oct/07 05:33,2.0.2,,,,,,,2.0.3,,Tooling,,,,,0,wsdlvalidator tools/wsdlto/test/src/test/resources/wsdl2java_wsdl/cxf1095/hello_world_services.wsdl,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111977,,,2007-10-30 14:59:30.0,,,,,,0|i146lb:,232531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdlvalidator failed with recursive wsdl,CXF-1153,12381444,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,30/Oct/07 13:10,05/Dec/07 19:23,14/Mar/19 02:28,31/Oct/07 06:01,2.0.2,,,,,,,2.0.3,,Tooling,,,,,0,wsdlvalidator failed with tools/wsdlto/test/src/test/resources/wsdl2java_wsdl/cxf778/hello_world_recursive.wsdl,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111976,,,2007-10-30 13:10:01.0,,,,,,0|i1aaaf:,268133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java can not process two jaxws binding files at the same time,CXF-1152,12381433,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,30/Oct/07 08:43,05/Dec/07 19:23,14/Mar/19 02:28,30/Oct/07 15:13,2.0.2,,,,,,,2.0.3,,Tooling,,,,,0,"When the given binding files are the following two files, wsdl2java can not process them properly.

--jaxws1.xml---
<jaxws:bindings wsdlLocation=""../hello_world.wsdl"" xmlns:jaxws=""http://java.sun.com/xml/ns/jaxws"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">

    <jaxws:bindings node=""wsdl:definitions"">
        <jaxws:package name=""org.mypkg""/>
    </jaxws:bindings>

    <jaxws:bindings node=""wsdl:definitions/wsdl:types/xsd:schema[@targetNamespace='http://apache.org/hello_world_soap_http/types']"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
        <jxb:schemaBindings xmlns:jxb=""http://java.sun.com/xml/ns/jaxb"">
            <jxb:package name=""org.mypkg""/>
        </jxb:schemaBindings>
    </jaxws:bindings>

    <jaxws:bindings node=""wsdl:definitions/wsdl:portType[@name='Greeter']"">
        <jaxws:class name=""MyGreeter""/>
    </jaxws:bindings>

    <jaxws:bindings node=""wsdl:definitions/wsdl:portType[@name='Greeter']/wsdl:operation[@name='greetMe']"">
        <!-- rename the generated java method name-->
        <jaxws:method name=""myGreetMe""/>        
    </jaxws:bindings>

</jaxws:bindings>



----jaxws2.xml-------

<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>
<jaxws:bindings wsdlLocation=""../hello_world.wsdl"" xmlns:jaxws=""http://java.sun.com/xml/ns/jaxws"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
    <jaxws:bindings node=""wsdl:definitions/wsdl:service[@name='SOAPService']"">
        <jaxws:class name=""MyService""/>        
    </jaxws:bindings>
</jaxws:bindings>",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111975,,,2007-10-30 08:43:18.0,,,,,,0|i1aaan:,268134,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndpointReferenceUtils cannot obtain schema for client,CXF-1150,12381411,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,30/Oct/07 00:01,05/Dec/07 19:23,14/Mar/19 02:28,02/Nov/07 16:45,2.0.2,,,,,,,2.0.3,,,,,,,0,"The following looks like another variation on the missing import issue, except that I fixed the missing import issue.

1) Set up a basic JAXB+JAXWS client.
2) Call EndpointReferenceUtils.getSchema() for the serviceInfo.
3) 

WARNING: SAXException for newSchema()
org.xml.sax.SAXParseException: src-resolve.4.2: Error resolving component 'ns0:testBean1'. It was detected that 'ns0:testBean1' is in namespace 'uri:org.apache.cxf.javascript.testns', but components from this namespace are not referenceable from schema document 'null'. If this is the incorrect namespace, perhaps the prefix of 'ns0:testBean1' needs to be changed. If this is the correct namespace, then an appropriate 'import' tag should be added to 'null'.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaError(XSDHandler.java:2241)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getGlobalDecl(XSDHandler.java:1192)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseNamedElement(XSDElementTraverser.java:376)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseLocal(XSDElementTraverser.java:214)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.traverseLocalElements(XSDHandler.java:1781)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:484)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:556)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadGrammar(XMLSchemaLoader.java:523)
	at com.sun.org.apache.xerces.internal.jaxp.validation.xs.SchemaFactoryImpl.newSchema(SchemaFactoryImpl.java:206)
	at org.apache.cxf.wsdl.EndpointReferenceUtils.getSchema(EndpointReferenceUtils.java:460)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111973,,,Thu Nov 01 22:29:46 UTC 2007,,,,,,0|i0v3mf:,179560,,,,,,,,"01/Nov/07 22:29;bmargulies;This is still happening even with recent Dan fixes. Run the SerializationTest from rt/javascript, I've added a test case there that still produces this, albeit on a different bit of the schema.

The test passes, all this is just noise in the log.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error thrown with Schema validation enabled when using xml-catalogs,CXF-1149,12381394,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,kombi,kombi,29/Oct/07 19:09,05/Dec/07 19:23,14/Mar/19 02:28,01/Nov/07 18:25,2.0.2,,,,,,,2.0.3,,,,,,,0,Unable to resolve elements retrieved from xml-catalog entries gotten from classpath(jar) during validation of schema.,"MacOSX 10.4, Java1.5, JBoss 4.2.1GA",,,,,,,,,,,,,,,,29/Oct/07 19:12;kombi;SampleProject.zip;https://issues.apache.org/jira/secure/attachment/12368615/SampleProject.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,97348,,,Mon Oct 29 19:12:30 UTC 2007,,,,,,0|i0v3in:,179543,,,,,,,,"29/Oct/07 19:12;kombi;SubDependencyProject will need to be installed into maven repo for building main project.

Drop war into jboss from 'mvn clean package'

then test client:

mvn exec:exec

and you get this error on server:

org.xml.sax.SAXParseException: src-resolve: Cannot resolve the name 'extra:extraErrorComplexType' to a(n) 'type definition' component.
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaError(XSDHandler.java:2241)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getGlobalDecl(XSDHandler.java:1201)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseNamedElement(XSDElementTraverser.java:376)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseGlobal(XSDElementTraverser.java:248)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.traverseSchemas(XSDHandler.java:1081)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:481)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:556)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadGrammar(XMLSchemaLoader.java:523)
        at com.sun.org.apache.xerces.internal.jaxp.validation.xs.SchemaFactoryImpl.newSchema(SchemaFactoryImpl.java:206)
        at org.apache.cxf.wsdl.EndpointReferenceUtils.getSchema(EndpointReferenceUtils.java:460)
        at org.apache.cxf.interceptor.AbstractInDatabindingInterceptor.setSchemaInMessage(AbstractInDatabindingInterceptor.java:94)
        at org.apache.cxf.interceptor.AbstractInDatabindingInterceptor.getDataReader(AbstractInDatabindingInterceptor.java:76)
        at org.apache.cxf.interceptor.AbstractInDatabindingInterceptor.getDataReader(AbstractInDatabindingInterceptor.java:83)
        at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:70)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
        at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:239)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:144)
        at org.apache.cxf.transport.servlet.CXFServlet.invoke(CXFServlet.java:278)
        at org.apache.cxf.transport.servlet.CXFServlet.doPost(CXFServlet.java:256)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:710)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:179)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:84)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
        at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:157)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:241)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:580)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
        at java.lang.Thread.run(Thread.java:613)
15:04:35,108 ERROR [STDERR] Oct 29, 2007 3:04:35 PM org.apache.cxf.wsdl.EndpointReferenceUtils getSchema
WARNING: SAXException for newSchema()
org.xml.sax.SAXParseException: src-resolve: Cannot resolve the name 'extra:extraErrorComplexType' to a(n) 'type definition' component.
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaError(XSDHandler.java:2241)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getGlobalDecl(XSDHandler.java:1201)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseNamedElement(XSDElementTraverser.java:376)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDElementTraverser.traverseGlobal(XSDElementTraverser.java:248)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.traverseSchemas(XSDHandler.java:1081)
        at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:481)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:556)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadGrammar(XMLSchemaLoader.java:523)
        at com.sun.org.apache.xerces.internal.jaxp.validation.xs.SchemaFactoryImpl.newSchema(SchemaFactoryImpl.java:206)
        at org.apache.cxf.wsdl.EndpointReferenceUtils.getSchema(EndpointReferenceUtils.java:460)
        at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.setSchemaOutMessage(AbstractOutDatabindingInterceptor.java:137)
        at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.getDataWriter(AbstractOutDatabindingInterceptor.java:130)
        at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.writeParts(AbstractOutDatabindingInterceptor.java:79)
        at org.apache.cxf.interceptor.BareOutInterceptor.handleMessage(BareOutInterceptor.java:68)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:74)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
        at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:239)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:144)
        at org.apache.cxf.transport.servlet.CXFServlet.invoke(CXFServlet.java:278)
        at org.apache.cxf.transport.servlet.CXFServlet.doPost(CXFServlet.java:256)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:710)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:179)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:84)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
        at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:157)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:241)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:580)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
        at java.lang.Thread.run(Thread.java:613)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scary INFO log entries in normal operation,CXF-1148,12381376,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,29/Oct/07 13:34,04/Dec/09 22:34,14/Mar/19 02:28,31/Oct/09 13:38,2.0.3,,,,,,,2.2.5,,,,,,,1,"
I've got users worried by both of the following:

Oct 29, 2007 9:31:30 AM org.apache.cxf.common.injection.ResourceInjector visitMethod
INFO: failed to resolve resource org.apache.cxf.bus.resource.ResourceManagerImpl/bus

Oct 29, 2007 9:31:30 AM org.apache.cxf.configuration.spring.ConfigurerImpl <init>
INFO: Could not find the configuration file cxf.xml on the classpath.

I have no idea what is going on with the first. In the second, I am loading up a Spring app context with a full set of CXF META-INF/* files. It seems to me that there should be some XML config I can do to suppress looking for the cxf.xml and thus this message.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-25 23:04:52.703,,,no_permission,,,,,,,,,,,,,111972,,,Sat Oct 31 13:38:45 UTC 2009,,,,,,0|i14f1z:,233902,,,,,,,,25/Oct/09 23:04;chris@die-schneider.net;Could you try to create a test case that produces these messages?,31/Oct/09 13:38;bmargulies;r831538,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java validator incorrectly requiring doc/lit soap:body messages to have namespaces,CXF-1146,12381308,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mazzag,mazzag,27/Oct/07 21:49,05/Dec/07 19:23,14/Mar/19 02:28,01/Nov/07 18:41,2.0.2,,,,,,,2.0.3,,,,,,,0,"R2717[1] is incorrectly activating for doc/lit bindings, requiring a namespace attribute:  
WSDLToJava Error : Violate WSI-BP-1.0 R2717 soapBody in the input/output of the binding operation 'getCityInfo' MUST have namespace attribute

Only rpc/lit must have a namespace.  Doc/lit (wrapped) bindings should not (must not?[2]) have namespace attributes.

[1] http://www.ws-i.org/Profiles/BasicProfile-1.0-2004-04-16.html#R2717

[2] http://atmanes.blogspot.com/2005/03/wrapped-documentliteral-convention.html; Quote: ""In the binding definition, the soap:binding should specify style=""document"" (although this is the default value, so the attribute may be omitted), and the soap:body definitions must specify use=""literal"" and nothing else. You must not specify the namespace or encodingStyle attributes in the soap:body definition.""  (I cannot find anything more authoritative than this blog entry on this point, however.)

",,,,,,,,,,,,,,,,,27/Oct/07 21:50;mazzag;SampleWebService.wsdl;https://issues.apache.org/jira/secure/attachment/12368547/SampleWebService.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-29 10:06:33.643,,,no_permission,,Novice,,,,,,,,,,,111970,,,Tue Oct 30 15:49:41 UTC 2007,,,,,,0|i0v3mn:,179561,,,,,,,,27/Oct/07 21:50;mazzag;Sample WSDL that illustrates the problem.,"29/Oct/07 10:06;maomaode;Hi Glen,

Can you check this with the latest trunk, i think i have fixed this.

Thanks","30/Oct/07 15:49;dkulp;
The bug is still there on 2.0.3 SNAPSHOT as of this morning.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not able to set the namespace for a service wsdl,CXF-1145,12381261,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,tawfik,tawfik,26/Oct/07 16:55,05/Dec/07 19:23,14/Mar/19 02:28,02/Nov/07 15:36,,,,,,,,2.0.3,,,,,,,0,"We are trying to upgrade our published services from xfire to cxf using the simple frontend with aegis.  When we set the namespace for classes in the service's object model the namespaces appear ok.  The problem is that the namespace of the service class is auto-generated and becasue it does not match what we set for the object model, it causes issues with some client SOAP toolkits.

In xfire, we used to be able to set the service namespace by doing something like this:

    <bean id=""..."" class=""org.codehaus.xfire.spring.remoting.XFireExporter"">
        <property name=""namespace"" ref=""nameSpace""/>
        ...
    </bean>

This capability does not seem to be available in cxf.
We have tried setting the namespace in the service aegis file with no success.

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-02 13:54:57.762,,,no_permission,,,,,,,,,,,,,111969,,,Fri Nov 02 21:36:41 UTC 2007,,,,,,0|i0uymn:,178751,,,,,,,,"30/Oct/07 17:06;tawfik;Has anyone gotten a chance to take a look at this one?  If so, do we have an idea on the leve of effort involved?

This is a show stopper for us.  We would prefer not to have to rollback to xfire in order to get the production release going.  we have some minor issues with xfire that will probably not get fixed.","02/Nov/07 13:54;dkulp;
I started on a way to make it work last night.  It's not quite as ""simple"", but it hopefully will work (although I haven't had time to write a testcase for it yet).  

Basically, if you create a ReflectionServiceFactoryBean, you can set the list of serviceConfigurations on it.   The DefaultServiceConfiguration object now has a serviceNamespace property that can be set.   ","02/Nov/07 15:36;dkulp;
Testcase added.    In your spring config:


  <simple:server address=""/serviceWithCustomNS""
    serviceClass=""org.apache.cxf.authservice.AuthService"">
    <simple:dataBinding>
       <bean class=""org.apache.cxf.aegis.databinding.AegisDatabinding"" />
    </simple:dataBinding>
    <simple:serviceBean>
      <bean class=""org.apache.cxf.authservice.AuthServiceImpl"" />
    </simple:serviceBean>
    <simple:serviceFactory>
    	<bean class=""org.apache.cxf.service.factory.ReflectionServiceFactoryBean"">
    		<property name=""serviceConfigurations"">
    			<list>
    				<bean class=""org.apache.cxf.aegis.databinding.AegisServiceConfiguration"">
    					<property name=""serviceNamespace"" value=""http://foo.bar.com""/>
    				</bean>
    				<bean class=""org.apache.cxf.service.factory.DefaultServiceConfiguration""/>
    			</list>
    		</property>
    	</bean>
    </simple:serviceFactory>
  </simple:server>


I just deployed new snapshots that should have this in it.

","02/Nov/07 21:36;tawfik;I have checked that it works thanks!

One issue seems to have been intorduced though: I have created the service factory bean in a way that I can re-use it in multiple services:

  <bean name=""cxf.serviceFactory"" class=""org.apache.cxf.service.factory.ReflectionServiceFactoryBean"">
     <property name=""serviceConfigurations""> 
        <list> 
           <bean class=""org.apache.cxf.aegis.databinding.AegisServiceConfiguration""> 
              <property name=""serviceNamespace"" value=""http://arcwebservices.com/v2008""/> 
           </bean> 
           <bean class=""org.apache.cxf.service.factory.DefaultServiceConfiguration""/> 
        </list> 
     </property> 
  </bean> 

In each service, refer to it in each service (say service1, service2 and service3) as:
<simple:server ...>
      <simple:serviceFactory><ref bean=""cxf.serviceFactory"" /></simple:serviceFactory>
      ...
</simple:server>

Doing it this way resulted in the SOAP endpoint always referring to the last service.  So the wsdl for service1 would be

  <wsdl:service name=""Service1"">
  <wsdl:port binding=""tns:Service1SoapBinding"" name=""Service1Port"">
  <soap:address location=""http://.../Service3"" /> 
  </wsdl:port>
  </wsdl:service>

and for service2, it would be 

  <wsdl:service name=""Service2"">
  <wsdl:port binding=""tns:Service3SoapBinding"" name=""Service3Port"">
  <soap:address location=""http://.../Service3"" /> 
  </wsdl:port>
  </wsdl:service>

I found that setting scope=""prototype"" on the cxf.serviceFactory bean fixes the problem.

Thanks again
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue with .NET clients - stub method parameters wrapped in a parameter class,CXF-1144,12381256,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,tawfik,tawfik,26/Oct/07 16:36,05/Dec/07 19:23,14/Mar/19 02:28,03/Dec/07 22:36,,,,,,,,2.0.3,,,,,,,0,"We are trying to upgrade our published services from xfire to cxf.  We are using the simple frontend with aegis.  Before we push the upgrade to production, we need to make sure the upgrade as transparent as possible to our users.  With cxf, we see that the .NET client stubs are different from the ones users are getting now from xfire.  A method that appears as doIt(Thing a, Thing b) for example appears as dotIt(DoItRequest request) where DoItRequest contains the a and b parameters.

I found out that doing a small change to the wsdl makes .NET generate the stubs the way we want them.  Changing the method request element from this for example:

  <xsd:element name=""findFeaturesByExtent"" type=""tns:findFeaturesByExtent"" /> 
  <xsd:complexType name=""findFeaturesByExtent"">
  <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""extent"" type=""tns:Envelope"" /> 
  <xsd:element minOccurs=""0"" name=""spatialQueryOptions"" type=""tns:SpatialQueryOptions"" /> 
  <xsd:element minOccurs=""0"" name=""token"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>

to this

<xsd:element name=""findFeaturesByExtent"">
<xsd:complexType name=""findFeaturesByExtent"">
<xsd:sequence>
<xsd:element minOccurs=""0"" name=""extent"" type=""ns0:Envelope""/>
<xsd:element minOccurs=""0"" name=""spatialQueryOptions"" type=""ns0:SpatialQueryOptions""/>
<xsd:element minOccurs=""0"" name=""token"" type=""xsd:string""/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>

fixes the problem.

Please let me know if you need any additional info.

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-26 23:05:48.957,,,no_permission,,,,,,,,,,,,,111968,,,Fri Nov 02 21:46:45 UTC 2007,,,,,,0|i1aab3:,268136,,,,,,,,26/Oct/07 23:05;mazzag;What's the bug?,26/Oct/07 23:45;tawfik;Is it possible to make the method request elements appear the same way they did in xfire?  The xfire way worked fine with .NET clients.,"27/Oct/07 11:11;mazzag;Well your method signatures would still have to be that way for the *response* elements, which can only return one data value/object.  (i.e., DoItResponse myDIR = port.someCall(); )  It would be strange to have the request elements appear in one form but the response elements be the other.  I wonder if you can use XSLT to modify the WSDL in the manner that you would like.

Also, as you can see here[1], sometimes a complex type is used for multiple elements, so if the complex type was embedded within the element as you're requesting, it would need to be duplicated for each element using that complex type.

[1] http://preview.tinyurl.com/2wybsv
","30/Oct/07 17:25;tawfik;I agree but the response elements being that way does not look as bad as for the request elements.  Methods never return multiple objects so we are not wrapping multiple objects into one for responses.  For requests, the methods take multiple parameters but we wrap them into one.  Inthe .NET client stub we get a lost of methods all taking one wrapper object as a parameter.

Regarding the complex type repetition, I agree we should not have it but could request/response elements be an exception as opposed to elements representing the object model?  In our case some services don't have the same parameter combination more than once and othes might have a combination repeated once or twice at the most.  Increasing the size a little would not hurt us as we are more interested in the performance of the actual calls to the web service.","02/Nov/07 18:12;dkulp;
The jaxws spec and TCK basically requires that we create separate top level complexTypes for the wrappers.   Kind of sucks.  

With the latest snapshots, you can configure this in the runtime via spring config:

  <jaxws:server address=""/jaxwsAndJaxb""
    serviceClass=""org.apache.cxf.authservice.AuthService"">
    <jaxws:serviceBean>
      <bean class=""org.apache.cxf.authservice.AuthServiceImpl"" />
    </jaxws:serviceBean>
    <jaxws:serviceFactory>
	    <bean class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean"">
	    	<property name=""anonymousWrapperTypes"" value=""true""/>
	    </bean>
    </jaxws:serviceFactory>
   </jaxws:server>

The ?wsdl returned from that would use the anonymous complextTypes instead of separate types.   This isn't available in the java2wsdl tooling though. 



",02/Nov/07 21:46;tawfik;I have verified that your fix works with the simple fromtend + aegis.  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java failed to generate code when use the following jaxb binding file ,CXF-1141,12381221,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,26/Oct/07 07:26,05/Dec/07 19:23,14/Mar/19 02:28,29/Oct/07 01:30,2.0.2,,,,,,,2.0.3,,Tooling,,,,,0,"Use a wsdl  import test.xsd and following jaxb databinding , wsdl2java will throw exception :

<jxb:bindings version=""1.0""
              xmlns:jxb=""http://java.sun.com/xml/ns/jaxb""
              xmlns:xs=""http://www.w3.org/2001/XMLSchema"">

    <jxb:bindings schemaLocation=""test.xsd"" node=""/xs:schema"">
        <jxb:schemaBindings xmlns:jxb=""http://java.sun.com/xml/ns/jaxb"">
	    <jxb:package name=""org.mytest""/>
        </jxb:schemaBindings>
    </jxb:bindings>

</jxb:bindings>",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111965,,,2007-10-26 07:26:31.0,,,,,,0|i1aabj:,268138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java failed if the schema import use the relative path to a url,CXF-1140,12381209,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,maomaode,maomaode,26/Oct/07 02:24,11/Jul/14 11:18,14/Mar/19 02:28,27/Jan/09 17:48,2.0.2,,,,,,,2.0.10,2.1.4,Tooling,,,,,1,"wsdl2java http://www.nabble.com/file/p13415060/csta-all.wsdl will give me

org.apache.cxf.tools.common.ToolException: java.lang.RuntimeException: Fail to c
reate wsdl definition from : http://www.nabble.com/file/p13415060/csta-all.wsdl
Caused by : WSDLException (at /definitions/types/xs:schema/xsd:schema): faultCod
e=OTHER_ERROR: Unable to locate with a locator the schema referenced at 'camp-on
-call.xsd' relative to document base 'http://www.ecma-international.org/standard
s/ecma-323/csta/ed3/csta.xsd'
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaCon
tainer.java:267)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.ja
va:83)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
Caused by: java.lang.RuntimeException: Fail to create wsdl definition from : htt
p://www.nabble.com/file/p13415060/csta-all.wsdl
Caused by : WSDLException (at /definitions/types/xs:schema/xsd:schema): faultCod
e=OTHER_ERROR: Unable to locate with a locator the schema referenced at 'camp-on
-call.xsd' relative to document base 'http://www.ecma-international.org/standard
s/ecma-323/csta/ed3/csta.xsd'
        at org.apache.cxf.wsdl11.WSDLDefinitionBuilder.parseWSDL(WSDLDefinitionB
uilder.java:144)
        at org.apache.cxf.wsdl11.WSDLDefinitionBuilder.build(WSDLDefinitionBuild
er.java:113)
        at org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuil
der.build(JAXWSDefinitionBuilder.java:90)
        at org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuil
der.build(JAXWSDefinitionBuilder.java:63)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaCon
tainer.java:151)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaCon
tainer.java:259)
        ... 3 more
Caused by: javax.wsdl.WSDLException: WSDLException (at /definitions/types/xs:sch
ema/xsd:schema): faultCode=OTHER_ERROR: Unable to locate with a locator the sche
ma referenced at 'camp-on-call.xsd' relative to document base 'http://www.ecma-i
nternational.org/standards/ecma-323/csta/ed3/csta.xsd'
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseSchema(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseSchema(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseSchema(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseTypes(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.parseDefinitions(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at org.apache.cxf.wsdl11.WSDLDefinitionBuilder.parseWSDL(WSDLDefinitionB
uilder.java:125)
        ... 8 more
",,,,,,,,,,,,,,,,,27/Nov/07 17:27;kerdosa;ECMA-site.cap;https://issues.apache.org/jira/secure/attachment/12370323/ECMA-site.cap,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-11-27 17:27:32.161,,,no_permission,,,,,,,,,,,,,50439,,,Fri Jul 11 11:18:13 UTC 2014,,,,,,0|i1aabr:,268139,,,,,,,,"26/Oct/07 07:00;maomaode;I can not reproduce the error, I've created a similar project, but with a simple wsdl, the import is like this

wsdl import a schema1 (using the absolute url, i.e http://localhost/schema1.xsd) which includes a schema2(relative path to the schema1) which includes a schema3(relative path to the schema2)

I put the schemas on a web server, can can be accessed through the http://localhost/schmea1

I got the wsdl2java passed

Then I retry your testcase, the error message actually is different:

Caused by : WSDLException (at /definitions/types/xs:schema/xsd:schema): faultCod
e=OTHER_ERROR: Unable to locate with a locator the schema referenced at 'call-ba
ck-call-related.xsd' relative to document base 'http://www.ecma-international.or
g/standards/ecma-323/csta/ed3/csta.xsd'


So, I would guess it's the network access problem, can you just simplify your includes?",05/Nov/07 03:21;maomaode;This is caused by the network accessibility ,"27/Nov/07 17:27;kerdosa;The root cause of this issue is related to the maximum number of HTTP connection. The http://www.ecma-international.org site allows max 20 HTTP connection per client machine. The wsdl2java opens many HTTP connection in parallel, when it opens 20th HTTP connection, the server responds with ""503 Service Temporarily Unavailable"". Please see the attached Ethereal capture file. 

On the other hand wsimport from Metro project works OK with the same schema, wsimport uses only one HTTP connection to retrieve all the schemas from the server. 

This will be a big issue when a project has a many complicated schemas. The best solution will be adding option of max HTTP connection.

Thanks","11/Jul/14 11:18;amit.nimbhorkar;I am using cxf version 2.7.9 and can confirm that this issue is not fixed. In fact, it doesn't work with the latest version i.e. 3.0.0. However, if I change the version from 2.2.10, this error doesn't occur, but then name collision issue occurs. Its a bottleneck issue for me really.
This is how my plugin looks:
<plugin>
	<groupId>org.apache.cxf</groupId>
	<artifactId>cxf-codegen-plugin</artifactId>
	<version>2.7.9</version>
	<executions>
		<execution>
			<id>generate-sources</id>
			<phase>generate-sources</phase>
			<configuration>
				<sourceRoot>${basedir}/target/generated/src/main/java</sourceRoot>
				<wsdlOptions>
					<wsdlOption>
						<wsdl>http://XXXXXX/TestRetailServices/AccountManagementService.svc?wsdl</wsdl>
						<extraargs>
							<extraarg>-impl</extraarg>
							<extraarg>-p</extraarg>
							<extraarg>retailapi.accountmanagementservice.v2</extraarg>
							<extraarg>-autoNameResolution</extraarg>
						</extraargs>
					</wsdlOption>
				</wsdlOptions>
			</configuration>
			<goals>
				<goal>wsdl2java</goal>
			</goals>
		</execution>
	</executions>
</plugin>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sample wsdl_first_xml_pure build failure,CXF-1139,12381208,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,26/Oct/07 01:46,05/Dec/07 19:23,14/Mar/19 02:28,05/Nov/07 00:06,2.0.2,,,,,,,2.0.3,,Samples,,,,,0,"    [java] WSDLToJava Error :
Binding(Greeter_XMLBinding):BindingOperation({htt
p://apache.org/hello_world_xml_http/bare}testMultiParamPart)-input: wrong
value
of rootNode attribute, the value should be
{http://apache.org/hello_world_xml_ht
tp/bare}testMultiParamPart
     [java]
     [java] org.apache.cxf.tools.common.ToolException:
Binding(Greeter_XMLBindin
g):BindingOperation({http://apache.org/hello_world_xml_http/bare}testMultiParamP
art)-input: wrong value of rootNode attribute, the value should be
{http://apach
e.org/hello_world_xml_http/bare}testMultiParamPart
     [java]
     [java]     at
org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.validate(WSDL
ToJavaContainer.java:545)
     [java]     at
org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:219)
     [java]     at
org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLT
oJavaContainer.java:259)
     [java]     at
org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
     [java]     at
org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
     [java]     at
org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-05 00:06:19.118,,,no_permission,,,,,,,,,,,,,111964,,,Mon Nov 05 00:06:19 UTC 2007,,,,,,0|i0v3g7:,179532,,,,,,,,"05/Nov/07 00:06;blin;I verified both 2.0.x branch and trunk, it has been fixed in both branches now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF wsdl2java NPE's if it cannot find the wsdl:portType identified by a wsdl:binding,CXF-1137,12381139,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,mazzag,mazzag,25/Oct/07 11:23,05/Dec/07 19:23,14/Mar/19 02:28,31/Oct/07 05:35,2.0.2,,,,,,,2.0.3,,,,,,,0,"If a user accidentally gives a wrong portType name in the wsdl:binding section, wsdl2java returns a NullPointerException without giving the user any feedback why.  For example, for this portType:

   <wsdl:portType name=""HelloWorldPortType"">
             .....
   </wsdl:portType>

The name should be tns:HelloWorldPortType in the binding:

   <wsdl:binding name=""HelloWorldSoapBinding"" type=""tns:HelloWorldPortType"">
             .....
   </wsdl:binding>

But if the user accidentally has this in the WSDL:

   <wsdl:binding name=""HelloWorldSoapBinding"" type=""tns:HelloWorld"">  (wrong type given)
             .....
   </wsdl:binding>

wsdl2java will return an NPE without any feedback about what the problem is.

GlassFish Metro correctly returns a user-friendly error message under these circumstances:
wsdl:portType ""{http://company.hw.demo/}HelloWorld"" not found in the wsdl: file:/blah/blah/blah/helloWorld.wsdl
",,,,,,,,,,,,,,,,,25/Oct/07 11:26;mazzag;helloWorld.wsdl;https://issues.apache.org/jira/secure/attachment/12368360/helloWorld.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-26 01:41:50.103,,,no_permission,,Moderate,,,,,,,,,,,111962,,,Sat Oct 27 00:34:18 UTC 2007,,,,,,0|i0v3fz:,179531,,,,,,,,"25/Oct/07 11:26;mazzag;WSDL that demonstrates the problem.
Can be activated simply via ""wsdl2java helloWorld.wsdl""
","26/Oct/07 01:41;maomaode;Well, the exception actually is from the WSDLServiceBuilder.java in the rt/core,  

If you turn on the -validation, tools do give you the error msg, but by default we turn off the validation during wsdl definition build, 
There's couple rules opened by default during the wsdl service build.

I guess to fix this issue, the best option is turn on the validation by default, and fix all the wrong wsdls in the cxf tests, but it's a big task","27/Oct/07 00:34;mazzag;I can help with the bad WSDL's.  But actually, this NPE should not occur even if validation is turned off.  Can it just return a user-friendly error instead, not just an NPE?  It does not--nor should not--be as elaborate as the validation error message.  It should just say ""PortType reference not found"" or similar.

As for validation, in the future, I see two types of validation:
1.)  WSDL errors or BP-I violations that CXF cannot work properly with.  This should always be turned on.  For example, the same request body issue (#3 of my notes here:  http://www.jroller.com/gmazza/date/20071019#notes) -- CXF wrongly calls the first operation even though the second may be intended.

2.)  Those BP-I violations that CXF can still handle correctly anyway.  This probably should be optional, turned off by default.

I think what is needed is that each of our validation tests have an internal ""requiredTest"" flag that wsdl2java activates if this value is ""true"".  WDYT?--How difficult would this be?

Glen
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Custom exception not appearing in SOAP fault response,CXF-1136,12381136,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,ed.p,ed.p,25/Oct/07 10:21,05/Dec/07 19:23,14/Mar/19 02:28,02/Nov/07 14:11,2.0.2,,,,,,,2.0.3,,,,,,,0,"I modified the apache-cxf-2.0.2-incubator\samples\java_first_jaxws web service to throw a custom exception and a custom request and response object like so:

public interface HelloWorld {
    Response sayHi(Request text) throws CustomException;
}

CustomException is a CustomExceptionBase with two string properties. CustomExceptionBase is a java.lang.Exception

The CustomException appears in the WSDL but the CustomExceptionBase is missing. When the service is invoked and throws a CustomException the soap response is:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Body>
      <soap:Fault>
         <faultcode>soap:Server</faultcode>
         <faultstring>custom error</faultstring>
      </soap:Fault>
   </soap:Body>
</soap:Envelope>

I am expecting to see the CustomException serialized in the Envelope/Body/Fault/detail node.","WIndows XP
Java SDK 1.5_0_12",,,,,,,,,,,,,,,,25/Oct/07 10:22;ed.p;helloWorld.wsdl;https://issues.apache.org/jira/secure/attachment/12368357/helloWorld.wsdl,29/Oct/07 13:23;ed.p;helloworld.xsd;https://issues.apache.org/jira/secure/attachment/12368603/helloworld.xsd,29/Oct/07 13:16;ed.p;helloworld_glassfishmetro.wsdl;https://issues.apache.org/jira/secure/attachment/12368599/helloworld_glassfishmetro.wsdl,25/Oct/07 10:22;ed.p;java_first_jaxws.zip;https://issues.apache.org/jira/secure/attachment/12368356/java_first_jaxws.zip,29/Oct/07 13:18;ed.p;wsit-jaxws-fromjava.zip;https://issues.apache.org/jira/secure/attachment/12368600/wsit-jaxws-fromjava.zip,,,,,,,5.0,,,,,,,,,,,,,,,,,,,2007-10-25 14:17:44.424,,,no_permission,,,,,,,,,,,,,111961,,,Fri Nov 02 14:11:52 UTC 2007,,,,,,0|i0uzkn:,178904,,,,,,,,25/Oct/07 10:22;ed.p;modified sample project,25/Oct/07 10:22;ed.p;generated wsdl,"25/Oct/07 14:17;mazzag;In comparing Metro and CXF outputs, I think I found the problem.  You appear to be using a nonstandard form of creating an exception that does *not* result in the underlying CustomException exception being stored.  I do not know why CXF provides this form.

In your service class, you call:
    throw new CustomException(""custom error"");

In other words, the first of these three possible constructors:

    public CustomException (String message) {  super(message);  }

    public CustomException (String message, demo.hw.company.CustomExceptionType customException) {
        super(message); this.customException = customException;  }

    public CustomException (String message, demo.hw.company.CustomExceptionType customException, Throwable cause) {
        super(message, cause);  this.customException = customException;  }

But only the latter two causes the customException to be stored.  

Metro's wsimport, at least JAX-WS 2.1 version, does *not* provide for the top constructor that you were unwittingly using, so you must use either of the bottom two.  I don't know enough about why we provide the first constructor variant--either it's a JAX-WS 2.0 construct or a good intention that may not be that helpful after all.  (Team:  should we get rid of the first constructor variant?  Is this even called for in JAX-WS?)

At any rate, if you look at how I constructed EntryAlreadyExistsFault in function addWordEntry() in [1] below, you'll see how you can create your exceptions so that they can be trapped on the client side.

HTH,
Glen

[1] http://www.jroller.com/gmazza/date/20071019#step6
",25/Oct/07 15:21;ed.p;another thing to note the wsdl was derived as I took the java first approach.,"25/Oct/07 22:08;piotr.berlowski;I would say, that this one is a duplicate for CXF-1131 and has been fixed a few days ago in 2.0.3 and in CVS, by Daniel Kulp. Please review 1131 and mark this one duplicate, if I'm right.","26/Oct/07 09:18;ed.p;even when I modify the CustomException to reference a CustomExceptionType and then throw the CustomException using the CustomException (String message, CustomExceptionType customException)  constructor it still behaves the same way. The exceptions I am using are not autogenerated because I am NOT taking a WSDL first approach. I am reverse engineering my java code to generate the WSDL as per the sample code that this was originally based on.","26/Oct/07 13:20;mazzag;OK, so once you get a reasonable approximation of your WSDL, why not modify it to add in the exceptions that you want, and then run wsdl2java, saving the artifacts from the java->wsdl process (if any) that you wish to reuse?  Your source of record should still be the WSDL, even if you mocked up java objects to approximate it.

Trying to torture your Java-first code to get a precise WSDL is difficult and time-consuming if you're not open to manual modification of the WSDL after you generate a workable approximation of it.  It's beyond my scope of knowledge, but perhaps more experienced users can help you here.

Have you looked at the WSDL on the server (viewable from your browser) as a result of your Java-first approach, and determined that it is equivalent to the WSDL that would work with exceptions under a WSDL-first approach?  I.e., my sample I linked to earlier, definitely handles exceptions properly, but it is WSDL-first.  Is your Java-first WSDL equivalent in structure?  If not, exceptions probably aren't going to work the way you want, and efforts would probably need to be made towards generating an equivalent WSDL--either by manual modification or Java class manipulation--before exceptions will work properly.
","26/Oct/07 14:27;ed.p;yes I understand where you are going but what I'm really trying to do is evaluate CXF for my project. The requirements of my project requires a Java first approach. CXF documentation states that it supports java/pojo development so I ran the pojo sample code and then added the modification of throwing an exception.
Now I am still not clear if there's a bug in the reverse engineering process or whether there is some sort of exception that I need to extend to get this to work or modifying my exception as in my previous comment. I took a look at XFire and to do what I want the exception needs to extend FaultInfoException and implement getFaultInfo and getFaultName. This actually worked in XFire but it doesn't work in CXF .. well the FaultInfoException isn't exactly the same as it is located in the client package.
Another possiblity as you mentioned is to perform a java to wsdl .. modify the wsdl .. perform wsdl to java but that's a huge workaround. If I have to resort to that then clearly CXF doesn't support pojo development with exceptions.","26/Oct/07 23:53;mazzag;Another option is to take a look at GlassFish Metro, with your current code.  If it is failing also there, it would appear to be something wrong with your coding.  

Quote: ""Another possiblity as you mentioned is to perform a java to wsdl .. modify the wsdl .. perform wsdl to java but that's a huge workaround. If I have to resort to that then clearly CXF doesn't support pojo development with exceptions.""

Not necessarily.  The steps I'm outlining are good for CXF/JAXB novices to figure out how to get the code right.  After doing the above, you can probably backport the generated code to what you presently have to figure out the exception problem.

Also, Dennis Sosnoski (who codes JiBX) also thinks that ""java to wsdl .. modify the wsdl .. perform wsdl to java"" is not that bad an idea:
http://www.infoq.com/articles/sosnoski-code-first

Glen
","29/Oct/07 13:15;ed.p;I've tested my sample code using Axis 1.4 and GlassFish Metro. Both worked with the response containing the exception in the fault/detail node.

Here's the sample response generated by GlassFish Metro:

<S:Envelope xmlns:S=""http://schemas.xmlsoap.org/soap/envelope/"">
   <S:Body>
      <ns2:Fault xmlns:ns2=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ns3=""http://www.w3.org/2003/05/soap-envelope"">
         <faultcode>ns2:Server</faultcode>
         <faultstring>custom error</faultstring>
         <detail>
            <ns2:CustomException xmlns:ns2=""http://server.hw.demo/"">
               <a>123</a>
               <b>abc</b>
               <message>custom error</message>
            </ns2:CustomException>
            <ns2:exception class=""demo.hw.server.CustomException"" note=""To disable this feature, set com.sun.xml.ws.fault.SOAPFaultBuilder.disableCaptureStackTrace system property to false"" xmlns:ns2=""http://jax-ws.dev.java.net/"">
               <message>custom error</message>
               <ns2:stackTrace>
                  <ns2:frame class=""demo.hw.server.HelloWorldImpl"" line=""unknown"" method=""sayHi""/>
                  <ns2:frame class=""sun.reflect.NativeMethodAccessorImpl"" line=""native"" method=""invoke0""/>

Okay well that's it from me as I need to move on evaluating other WS projects. Thanks for your input Glen.",29/Oct/07 13:16;ed.p;wsdl generated by glassfish metro,29/Oct/07 13:18;ed.p;sample code using glassfish metro,"29/Oct/07 13:23;ed.p;the xsd import referenced by the wsdl as:
http://localhost:8080/wsit-jaxws-fromjava/helloworld?xsd=1",02/Nov/07 14:11;dkulp;Used your CustomException.java as a test case.   Passes now with JAXB.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB Context failure when beans are packaged outside application,CXF-1135,12381114,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bastien.legras,bastien.legras,25/Oct/07 00:34,05/Dec/07 19:35,14/Mar/19 02:28,02/Nov/07 14:37,2.0,2.0.2,,,,,,2.0.1,2.0-RC,JAX-WS Runtime,Resources,,,,0,"When Beans (generated through WSDL2Java) are moved to a external jar (added to the web application classpath), the Spring implementors instanciate Beans with null properties. Bringing back the beans within the web application solves immediately.",Java 1.5 / Eclipse 3.3 / JBOSS 4.0.4 / WINXP 32bits,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-05 19:35:25.028,,,no_permission,,Moderate,,,,,,,,,,,111960,,,Wed Dec 05 19:35:25 UTC 2007,,,,,,0|i1aac7:,268141,,,,,,,,"02/Nov/07 14:37;bastien.legras;This issue is pure configuration dependend, below my resolution procedure :

bastien.legras wrote:
> After hours of bloody debugging /tracing through CXF code, I found the root
> cause of my issue :
>
> It has to do with my JBOSS 4.0.4 GA environment I forgot to mention :(
>
> For the one who care, I wrote below a detailed explanation + solution
>
> Detailed Explanation :
> JAXBContext is already ""classloaded"" via jboss-j2ee.jar
> (/server/default/lib) prior the one packaged with CXF (jaxb-api-2.0.jar).
> Jboss's JABXBContext works fine for CXF as long as your JAX Beans are
> packaged  inside the web services application. But once you move your JAX
> Beans outside the application, things changes in the JAXBEncoderDecoder :
>
> line 388 (for CXF 2.0.2) :
> obj = unmarshalWithClass ? u.unmarshal((XMLStreamReader)source, clazz) : u
>
> return an object with null properties as the Unmarshaller is not the right
> one as its implementor comes from Jboss instead of CXF.
>
>
> Solution :
> To fix the issue I found no other solution than copying the following jars
> to JBOSS_HOME/lib/endorsed directory (server/default/lib is not enough) :
> jaxb-api-2.0.jar
> jaxb-impl-2.0.5.jar
> geronimo-activation_1.1_spec-1.0-M1.jar
> stax-api-1.0.1.jar
>
>
> Hope this will help others !
>
> Cheers,
>
> Bastien LEGRAS
","05/Dec/07 19:35;dkulp;
From cxf-user list, this is a JBoss classloader issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS + JAXB problem - javax.xml.ws.soap.SOAPFaultException thrown instead of custom exception,CXF-1131,12380979,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,piotr.berlowski,piotr.berlowski,23/Oct/07 12:42,05/Dec/07 19:23,14/Mar/19 02:28,23/Oct/07 18:15,2.0.3,,,,,,,2.0.3,,JAX-WS Runtime,JAXB Databinding,Soap Binding,,,0,"We consider this issue to be a huge blocker for a major project. When a
user-defined exception is thrown by the server, a client receives   a
SOAPExceptionFault (with the message that belonged to the user-defined
exception). CXF version is 2.0.2. You can find generated exception
class, exception details class and relevant parts od wsdl attached to
this message.

If any more information is required, I will be more than happy to post
it. We are really stuck with this!

Thanks in advance, and best regards!


        Exceptions are logged both by the server, on Tomcat console and on the
client side.

Client:

Invoking removeXtmProjects...
Exception in thread ""main"" javax.xml.ws.soap.SOAPFaultException: Project
does not exist.
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:175)
        at $Proxy27.removeXtmProjects(Unknown Source)
        at
com.xmlintl.webservice.integration.IntegrationClient.main(IntegrationClient.java:251)
Caused by: org.apache.cxf.binding.soap.SoapFault: Project does not exist.
        at
org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:70)
        at
org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:35)
        at
org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at
org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:90)
        at
org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:179)
        at
org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:56)
        at
org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:395)
        at
org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1932)
        at
org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1790)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:576)
        at
org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at
org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
        ... 2 more


Server side:

INFO: Executing operation removeXtmProjects
2007-10-22 10:07:39 org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Project does not exist.
        at
org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:101)
        at
org.apache.cxf.jaxws.JAXWSMethodInvoker.createFault(JAXWSMethodInvoker.java:76)
        at
org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:90)
        at
org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:100)
        at
org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:63)
        at
org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:56)
        at
org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
        at
org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:92)
        at
org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at
org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
        at
org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)
        at
org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:235)
        at
org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:140)
        at org.apache.cxf.transport.servlet.CXFServlet.invoke(CXFServlet.java:278)
        at org.apache.cxf.transport.servlet.CXFServlet.doPost(CXFServlet.java:256)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:709)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
        at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
        at
org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at
org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at
org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
        at
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
        at
org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at
org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
        at
org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
        at
org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at
org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at
org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at
org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
        at
org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
        at
org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
        at
org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
        at
org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
        at java.lang.Thread.run(Thread.java:619)
Caused by:
com.xmlintl.webservice.integration.IncorrectProjectIdsException: Project
does not exist.
        at
com.xmlintl.webservice.integration.project.ProjectManager.removeXtmProject(ProjectManager.java:553)
        at
com.xmlintl.webservice.integration.IntegrationImpl.removeXtmProjects(IntegrationImpl.java:75)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at
org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:107)
        at
org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:77)
        ... 38 more


","Gentoo Linux suspend2-2.6.22-r2, Java 1.6.0.03, Eclipse 3.3",,,,,,,,,,,,,,,,23/Oct/07 12:51;piotr.berlowski;IncorrectProjectIdsException.java;https://issues.apache.org/jira/secure/attachment/12368209/IncorrectProjectIdsException.java,23/Oct/07 12:51;piotr.berlowski;Integration.wsdl;https://issues.apache.org/jira/secure/attachment/12368211/Integration.wsdl,23/Oct/07 12:51;piotr.berlowski;Integration_IntegrationPort_Client.java;https://issues.apache.org/jira/secure/attachment/12368210/Integration_IntegrationPort_Client.java,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-10-23 18:15:09.313,,,no_permission,,,,,,,,,,,,,111956,,,Tue Oct 23 18:15:09 UTC 2007,,,,,,0|i0uz1z:,178820,,,,,,,,"23/Oct/07 12:51;piotr.berlowski;Attaching our WSDL that causes the problems and one of the generated Exception classes. (At this point we're struggling to find an exception that actually works as intended).

Attaching generated client class. It's being executed as java application, wsdl is given either as file location or as url to the wsdl published by service (both methods produce the same result).

Problem occurs independent of the run method (Tomcat 5.0, generated server class run as java application).","23/Oct/07 15:30;piotr.berlowski;This issue was caused by a problem with sending null details. The exception on the server side was issued with:

throw new IncorrectProjectIdsException(""Exception..."");

instead of 

throw new IncorrectProjectIdsException(""Exception..."", ""Details..."");

The latter example works fine while the former produces faulty behaviour.

Great thanks for Daniel Kulp for pointing that out.","23/Oct/07 18:15;dkulp;
ClientFaultConverter has been fixed to work OK with ""xsi:nil=true"" elements on the wire.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.cxf.interceptor.Fault: Index: 1, Size: 1",CXF-1129,12380907,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,dsconnelly,dsconnelly,22/Oct/07 14:01,24/Feb/09 00:34,14/Mar/19 02:28,22/Oct/07 17:52,2.0.2,,,,,,,2.0.3,,JAX-WS Runtime,,,,,0,"""wsdl2java -all efile.wsdl"" 

Run generated Server driver as is.   Run generated Client driver as is.

Generated client driver fails.. Caused by: java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
The server is not invoked at all.

Now run Client under Metro libraries.   Client runs ok and invokes CXF server.    However, CXF server fails with an interceptor problem very similar to problem on CXF client.","Suse Linux 9.2, Sun 1.5, Eclipse 3.3",,,,,,,,,,,,,,,,22/Oct/07 14:07;dsconnelly;efile.wsdl;https://issues.apache.org/jira/secure/attachment/12368143/efile.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-22 14:24:16.851,,,no_permission,,,,,,,,,,,,,111954,,,Mon Oct 22 17:52:39 UTC 2007,,,,,,0|i1aacv:,268144,,,,,,,,"22/Oct/07 14:07;dsconnelly;WSDL is publicly available at http://streamlinedsalestax.org/Technology/EFileService-1.0.1.wsdl

It is licensed to a third party.

In the attached file, the SOAP address has been slightly modified for convenience.    Otherwise, the efile service contract remains as published by Streamlined Sales Tax Governing Board, Inc. ","22/Oct/07 14:24;mazzag;That WSDL has implicit(*) headers in it (http://www.jroller.com/gmazza/date/20071001)--I don't know if that is related to the problem.  I would run wsdl2java with the ""-exsh true"" flag (as Dan Kulp said in the comment to my blog entry above) to see if that makes a difference.

Glen

(*) Headers defined in the wsdl:binding section but *not* the wsdl:portType.
","22/Oct/07 16:05;dsconnelly;Okay.   ""wsdl2java -all -exsh true efile.wsdl"" fixes the generated code for the CXF runtime.

I have lowered the priority since there is a work-around.

(Metro runtime works fine with and without -exsh true for CXF generated code.)","22/Oct/07 17:52;dkulp;
Fixed.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB Data Binding Generates Duplicate Fault Elements in Generated WSDL,CXF-1127,12380886,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ronaldpieterse,ronaldpieterse,22/Oct/07 08:54,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 20:18,2.0.2,,,,,,,2.0.3,,JAXB Databinding,,,,,0,"In my service I have 6 calls that can throw 3 exceptions each. In the generated wsdl file the exceptions are all duplicated, times the number of methods. In my case that will be 6 * 3 exception declarations in my wsdl.

Here's an example of a service method (they all look alike so I did just one):

@WebResult(name = ""databaseFields"")
public DatabaseField[] getDatabaseFields(@WebParam(name = ""authInfo"") AuthInfo authInfo, 
                                                                              @WebParam(name = ""databaseName"") String databaseName) 
throws InvalidAuthInfoException, InvalidInputException, TripolisUnknownException;

Here's a snippet from the generated wsdl:

<xsd:schema xmlns:ns0=""http://api.tripolis.com/"" xmlns:tns=""http://exceptions.api.tripolis.com/"" targetNamespace=""http://exceptions.api.tripolis.com/"" attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"">
<xsd:element name=""InvalidAuthInfoException"" type=""ns0:invalidAuthInfoFault"" nillable=""true""/>
<xsd:element name=""TripolisUnknownException"" type=""ns0:tripolisUnknownFault"" nillable=""true""/>
<xsd:element name=""InvalidInputException"" type=""ns0:invalidInputFault"" nillable=""true""/>
<xsd:element name=""InvalidAuthInfoException"" type=""ns0:invalidAuthInfoFault"" nillable=""true""/>
<xsd:element name=""TripolisUnknownException"" type=""ns0:tripolisUnknownFault"" nillable=""true""/>
<xsd:element name=""InvalidInputException"" type=""ns0:invalidInputFault"" nillable=""true""/>
<xsd:element name=""InvalidAuthInfoException"" type=""ns0:invalidAuthInfoFault"" nillable=""true""/>
...
<xsd:element name=""InvalidAuthInfoException"" type=""ns0:invalidAuthInfoFault"" nillable=""true""/>
<xsd:element name=""TripolisUnknownException"" type=""ns0:tripolisUnknownFault"" nillable=""true""/>
<xsd:element name=""InvalidInputException"" type=""ns0:invalidInputFault"" nillable=""true""/>
</xsd:schema>

This bug might be the same as https://issues.apache.org/jira/browse/CXF-745 that was presumed to be fixed.

Am I doing something wrong here? Or was the bug never fixed?",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-22 18:01:51.105,,,no_permission,,,,,,,,,,,,,111952,,,Mon Oct 22 18:06:59 UTC 2007,,,,,,0|i1aadb:,268146,,,,,,,,"22/Oct/07 18:01;dkulp;I think I'd need to see the full interface and the code for the Exceptions. 

I tried it here and I'm not seeing any duplicate elements.   It might be a namespace issue where the faults are in different namespaces from the types or something and I'd like to see all the annotations so I can figure out which namespaces are being used where.
","22/Oct/07 18:06;dkulp;
Never mind.   That's the issue.   If there is a @WebFault( targetNamespace) thing, that will do it.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Does not honor localName in RequestWrapper/ResponseWrapper annotations.,CXF-1124,12380831,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,20/Oct/07 19:04,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 19:16,2.0.2,,,,,,,2.0.3,,JAX-WS Runtime,,,,,0,"
When using Doc/Lit/Wrapped, the localname attribute of the RequestWrapper annotation should be usable to override the default wrapper element names.   That currently doesn't work. 

When unmarshalling, the DocLitInInterceptor only compares the QName to the operation names, not the element names defined in the schema or via the RequestWrapper annotation.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111949,,,2007-10-20 19:04:34.0,,,,,,0|i13zxr:,231452,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClientFaultConverter needs to deal with unqualified part names.,CXF-1123,12380786,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jsacrist,jsacrist,19/Oct/07 15:12,05/Dec/07 19:23,14/Mar/19 02:28,01/Nov/07 17:30,2.0.2,,,,,,,2.0.3,,Core,,,,,0," WSI-BP states that RPC/Lit part accessors should be completely unqualified. ClientFaultConverter needs to support this.
               ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-19 16:48:42.33,,,no_permission,,,,,,,,,,,,,111948,,,Fri Oct 19 16:48:42 UTC 2007,,,,,,0|i0syrj:,167109,,,,,,,,"19/Oct/07 16:48;dkulp;
However, the WS-BP also specifically says:  (section 4.4.2)

R2205 A wsdl:binding in a DESCRIPTION MUST refer, in each of its soapbind:header, soapbind:headerfault and soapbind:fault elements, only to wsdl:part element(s) that have been defined using the element attribute.

and:

Because faults and headers do not contain parameters, soapbind:fault, soapbind:header and soapbind:headerfault assume, per WSDL 1.1, that the value of the style attribute is ""document"". R2204 requires that all wsdl:part elements with a style attribute whose value is ""document"" that are bound to soapbind:body be defined using the element attribute. This requirement does the same for soapbind:fault, soapbind:header and soapbind:headerfault elements.


Thus, Faults (and headers, BTW) are always in Doc/Literal form and thus should be properly qualified.    The RPC/Lit rules do not come into play for the Faults.


That all said, is there a specific test or wsdl or service or something that is not working due to this?   If there is a service not sending faults back properly qualified, that would be a bug in that service.




",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DynamicClientFactory xsd:any sub-element No
DynamicClientFactory: no compiled schema element could be found ....",CXF-1122,12380774,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dsconnelly,dsconnelly,19/Oct/07 13:18,05/Dec/07 19:23,14/Mar/19 02:28,02/Nov/07 19:31,2.0.2,,,,,,,2.0.3,,JAX-WS Runtime,,,,,0,"wsdl2java generates singleton xsd:any sub-element as inner class on server-side.

DynamicClientFactory fails due to not seeing this inner class during client-side dynamic generation.

I will attach wsdl and client driver code for test case.","Suse Linux 9.2, Sun Java 1.5, Eclipse 3.3",,,,,,,,,,,,,,,,19/Oct/07 13:43;dsconnelly;DirectTest_EFileService_Client.java;https://issues.apache.org/jira/secure/attachment/12368012/DirectTest_EFileService_Client.java,19/Oct/07 13:34;dsconnelly;My_EFileService_Client.java;https://issues.apache.org/jira/secure/attachment/12368011/My_EFileService_Client.java,19/Oct/07 13:24;dsconnelly;efile.wsdl;https://issues.apache.org/jira/secure/attachment/12368010/efile.wsdl,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,111947,,,Fri Oct 19 13:43:27 UTC 2007,,,,,,0|i1aadz:,268149,,,,,,,,"19/Oct/07 13:24;dsconnelly;This WSDL is published by Streamlined Sales Tax Governing Board, Inc.

It is publicly available to implementors.   However, I cannot grant license to ASF for inclusion.

http://streamlinedsalestax.org/Technology/EFileService-1.0.1.wsdl","19/Oct/07 13:34;dsconnelly;Generate server-side using wsdl2java -all.

Modify the URI address in org.streamlinedsalestax.efile.EFileServiceSoap_EFileServiceSoap_Server.java.

Use this address:   ""http://localhost:6980/efile/EFileService""

Then run this attachment as the client driver code.

Observe if the client created successfully from the server-supplied WSDL.   The failure comes before any invocation of the service.

Of course, the server is used in this test procedure because invocation will eventually be tested.

For simplicity, this client driver may be modified so as to get the WSDL from a file URI.","19/Oct/07 13:43;dsconnelly;Here is the direct test against the published WSDL.

Just run this code for a simpler test.   Ignore the 2 previous attachments.

There is no need to generate the server-side to see the failfure.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jaxb binding fails for property getters marked @XmlTransient if they return an array with component type that is an interface,CXF-1121,12380732,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,anistor,anistor,19/Oct/07 00:04,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 16:21,2.0.2,,,,,,,2.0.3,,JAXB Databinding,,,,,0,"I know interfaces (and arrays of interfaces) are not handled by jaxb but these properties should at least be ignored if marked @XmlTransient. 
The problem appears for both field and property access mode.
I did some investigation and this is not a jaxb issue, it is certainly caused by cxf. 

Found that org.apache.cxf.jaxb.JAXBContextInitializer gathers too many types when it visits the service model. In my opinion it should not attempt to add to the context ALL the classes it sees in fields and method signatures (see method JAXBContextInitializer.walkReferences). It must check if the field or method has the @XmlTransient annotation and skip it if so. 

I will attach a patch for JAXBContextInitializer.

Now here is some sample code that triggers the issue. See the exception stacktrace below.

public class User {
    ....
    @XmlTransient
    public org.acegisecurity.GrantedAuthority[] getAuthorities() { ... }
    ....
}

------------------------------------------------------------------------------------------------------------------------------------------
ERROR [main] ContextLoader.initWebApplicationContext(203) | Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'helloWorld': Invocation of init method failed; nested exception is org.apache.cxf.service.factory.ServiceConstructionException
Caused by:
org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:199)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:244)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:272)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:146)
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:89)
        at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:83)
        at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:107)
        at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:147)
        at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:287)
        at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:227)
        at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:179)
        at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:340)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1240)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1205)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1171)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:425)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:251)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:156)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:248)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:160)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:287)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:352)
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:244)
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:187)
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:49)
        at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3764)
        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4216)
        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:760)
        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:740)
        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:544)
        at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:920)
        at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:883)
        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:492)
        at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1138)
        at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:311)
        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:120)
        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1022)
        at org.apache.catalina.core.StandardHost.start(StandardHost.java:736)
        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1014)
        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)
        at org.apache.catalina.core.StandardService.start(StandardService.java:448)
        at org.apache.catalina.core.StandardServer.start(StandardServer.java:700)
        at org.apache.catalina.startup.Catalina.start(Catalina.java:552)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:295)
        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:433)
Caused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions
org.acegisecurity.GrantedAuthority is an interface, and JAXB can't handle interfaces.
        this problem is related to the following location:
                at org.acegisecurity.GrantedAuthority
                at org.acegisecurity.GrantedAuthority[]

        at com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder.check(IllegalAnnotationsException.java:66)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:389)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:236)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:76)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:55)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:210)
        at javax.xml.bind.ContextFinder.find(ContextFinder.java:366)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:574)
        at org.apache.cxf.jaxb.JAXBDataBinding.createJAXBContext(JAXBDataBinding.java:377)
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:182)
        ... 52 more
","WinXP, jdk1.5.0_09",,,,,,,,,,,,,,,,21/Oct/07 12:12;anistor;JAXBContextInitializer.java;https://issues.apache.org/jira/secure/attachment/12368098/JAXBContextInitializer.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-19 15:38:08.975,,,no_permission,,Unknown,,,,,,,,,,,111946,,,Sun Oct 21 12:14:24 UTC 2007,,,,,,0|i1aae7:,268150,,,,,,,,"19/Oct/07 00:14;anistor;Instead of attaching a patch file I'll post directly here a new version for method org.apache.cxf.jaxb.JAXBContextInitializer.walkReferences(Class<?> cls)
Hope you'll find my fix usefull enough to include it.

    private void walkReferences(Class<?> cls) {
        if (cls.getName().startsWith(""java."")
            || cls.getName().startsWith(""javax."")) {
            return;
        }
        //walk the public fields/methods to try and find all the classes.  JAXB will only load the
        //EXACT classes in the fields/methods if they are in a different package.   Thus,
        //subclasses won't be found and the xsi:type stuff won't work at all.
        //We'll grab the public field/method types and then add the ObjectFactory stuff
        //as well as look for jaxb.index files in those packages.

        Field fields[] = cls.getFields();
        for (Field f : fields) {
            if (f.getAnnotation(XmlTransient.class) == null) {
                addType(f.getGenericType());
            }
        }
        Method methods[] = cls.getMethods();
        for (Method m : methods) {
            if (m.getAnnotation(XmlTransient.class) == null) {
                addType(m.getGenericReturnType());
                for (Type t : m.getGenericParameterTypes()) {
                    addType(t);
                }
            }
        }
    }
",19/Oct/07 15:38;dkulp;Patch applied.  Thanks!,"19/Oct/07 17:39;anistor;Hi Daniel,
Thanks for your quick response!

The initial problem is solved but I realized only now that there are more issues in this area. Example follows:

@XmlType
public class User  {
    ....    
    public boolean isValid(ValidationContext ctx) {...}
    ....
}

ValidationContext is an interface and thus it will fail. isValid is not a property accessor and I have to work around this by marking it @XmlTransient, which is not very natural.

JAXBContextInitializer examines all fields and methods (excluding static and @XmlTransient). Maybe the safest thing is to only take bean property accessors into account for the beans that are serialized.  And if access method was set to FIELD, then no methods should be analized at all. Of course, for the service interface itself all methods must still be examined.

I think I can spend a little time tomorrow and come up with a new fix in JAXBContextInitializer.walkReferences() to make it treat these non-bean-property cases correctly. 

Could you please reopen the issue?

Thanks!
",19/Oct/07 17:50;dkulp;Reopening while waiting for another patch.,21/Oct/07 12:12;anistor;A new version of the JAXBContextInitializer that handles JAXB properties more gracefully.,"21/Oct/07 12:14;anistor;Hi Daniel,
I attached a new version of the JAXBContextInitializer that solves the previously mentioned issues.

Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Server lifecycle management problems, perhaps",CXF-1120,12380727,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bmargulies,bmargulies,18/Oct/07 23:49,05/Dec/07 19:23,14/Mar/19 02:28,30/Oct/07 13:30,2.1,,,,,,,2.0.3,,Configuration,,,,,0,"I added an @Ignored test case to EnglineLifecycleTest.java. With this test turned on, the test will encounter bind errors and other evidence of confusion and distress with the server lifecycle. Sadly, it does not demonstrate the problem I was trying to demonstrate, which is a process that refuses to die.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111945,,,2007-10-18 23:49:05.0,,,,,,0|i0v3hj:,179538,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB serialized private fields of faults,CXF-1118,12380688,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,bmargulies,bmargulies,bmargulies,18/Oct/07 15:10,05/Dec/07 19:23,14/Mar/19 02:28,18/Oct/07 20:17,2.0.2,,,,,,,2.0.3,,JAXB Databinding,,,,,0,"If an exception class, declared in 'throws' of a JAX-WS interface, has private fields, they get serialized. Not good.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,111943,,,Thu Oct 18 20:17:55 UTC 2007,,,,,,0|i1aaen:,268152,,,,,,,,18/Oct/07 20:17;bmargulies;Fix committed to tip. I'm betting that Dan will merge this to 2.0.3.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1-dimentional arrays appear as 2-dimentional in the wsdl,CXF-1116,12380623,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,tawfik,tawfik,17/Oct/07 17:50,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 18:02,2.1,,,,,,,2.0.3,,Aegis Databinding,,,,,0,"We are trying to publish interfaces using the simple frontend with aegis.  We are seeing that any method that returns an array does not appear correctly in the wsdl.  For example, if a method returns a String[], the return appears in the wsdl as:

  <xsd:sequence>
  <xsd:element maxOccurs=""unbounded"" minOccurs=""0"" name=""return"" type=""tns:ArrayOfString"" /> 
  </xsd:sequence>

which represents a 2-dimentional array because of the maxOccurs=""unbounded"".

This is a show-stopper for us.  If a fix is made, we are willing to use a snapshot build until a release happens.

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-19 17:57:51.402,,,no_permission,,,,,,,,,,,,,111941,,,Mon Oct 22 17:52:14 UTC 2007,,,,,,0|i0uxd3:,178546,,,,,,,,"19/Oct/07 17:57;dkulp;
I can work on this on Monday, but need some help from the Aegis experts as to what people think it SHOULD look like.

Should it look like what JAXB generates:
<xsd:sequence> 
   <xsd:element maxOccurs=""unbounded"" minOccurs=""0"" name=""return"" type=""xsd:string"" /> 
</xsd:sequence>

Or should it look like what Aegis does with collections:
<xsd:sequence> 
   <xsd:element name=""return"" type=""tns:ArrayOfString""/> 
</xsd:sequence>

Either one looks non-trivial to do.   The first mapping would require a lot more work in the Aegis databinding.    The second mapping would require a bit of work in the ReflectionServiceFactoryBean and some flags passed between it and the databinding.

","19/Oct/07 21:37;tawfik;FYI: I was able to move further by setting the minOccurs/maxOccurs in the method aegis mapping.  I added this:

<return-type mappedName=""out"" minOccurs=""0"" maxOccurs=""1""/>

This resulted in the response being

  <xsd:sequence>
  <xsd:element maxOccurs=""unbounded"" minOccurs=""0"" name=""response"" type=""ns0:ArrayOfString-1-0"" />
  <xsd:sequence>

which seems to be correct given that ArrayOfString-1-0 looks like this:

  <xsd:complexType name=""ArrayOfString-1-0"">
  <xsd:sequence>
  <xsd:element minOccurs=""0"" name=""string"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>

We are having our QA team see the effect on clients such as AXIS and .NET as I can see differences in the way parameters and return objects are shown in the client stubs.  A return object that used to appear as a String[] type in xfire now appears ArrayOfString-1-0[] type.  A little confusing to clients but correct...

Thanks","20/Oct/07 19:24;dkulp;
I discovered that going with:

<xsd:sequence> 
    <xsd:element name=""return"" nillable=""true"" type=""tns:ArrayOfString""/> 
 </xsd:sequence> 

was actually easier than I thought so I went with that.    I would appreciate if someone could test it out and make sure it all works OK.   I'm going to deploy new snapshots now so another hour or so and they should be there.


",22/Oct/07 17:52;tawfik;I have tried the 10-20-2007 snapshot and I see that the issue is fixed.  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP w/ Attachments does not work with Dispatch/Provider based services,CXF-1115,12380545,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,16/Oct/07 16:34,05/Dec/07 19:23,14/Mar/19 02:28,16/Oct/07 17:55,2.0.2,,,,,,,2.0.3,,JAX-WS Runtime,,,,,0,"
When using a Dispatch or Provider with a SOAPMessage, if the message has attachments, those attachments are lost or an exception is thrown.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111940,,,2007-10-16 16:34:54.0,,,,,,0|i0v3fb:,179528,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
soap:address location attribute is wrong when wsdl query to default servant delegate returns wsdl.,CXF-1113,12380449,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ulhasbhole,ulhasbhole,ulhasbhole,15/Oct/07 13:29,22/Feb/08 21:36,14/Mar/19 02:28,19/Feb/08 19:34,,,,,,,,2.0.4,,Transports,,,,,0,"If a wsdl query is done on a service that is supporting default servant delegates. The soap:address location returned in WSDL is incorrect.

Here is how to reproduce:

Run Server from cxf  factory_pattern system test.

issue the queries in the following sequence. First 2 queries will return correct url but for rest of the sequence soap:address location will be same as the 2nd query.

Here is the sequence.

http://localhost:9006/NumberFactoryService/NumberFactoryPort?wsdl
http://localhost:9006/NumberFactoryService/NumberFactoryPort/20?wsdl

http://localhost:9006/NumberFactoryService/NumberFactoryPort/22?wsdl
http://localhost:9006/NumberFactoryService/NumberFactoryPort/20?wsdl
http://localhost:9006/NumberFactoryService/NumberFactoryPort?wsdl


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-19 19:34:58.137,,,no_permission,,,,,,,,,,,,,111938,,,Tue Feb 19 19:34:58 UTC 2008,,,,,,0|i146nr:,232542,,,,,,,,"19/Feb/08 19:34;dkulp;
This seems to be resolved as the sequence of events results in proper soap:addresses for all the urls.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding DefaultHandler to handler list for jetty disables all service endpoints.,CXF-1110,12380390,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bmargulies,bmargulies,13/Oct/07 20:46,05/Dec/07 19:23,14/Mar/19 02:28,15/Oct/07 06:45,2.0.2,,,,,,,2.0.3,,Configuration,,,,,0,"I load this set of beans along with a JAX-WS endpoint definition. If I comment the DefaultHandler in, I can't reach my handler. if I comment it out, I can.

After some thought, it seems to me that this should work, unless there is something wrong with the order in which the handlers end up arranged. The DefaultHandler is only supposed to get into the act if nothing else handles the request. Could it be that whatever Context that CXF is putting into the bus itself is ending up last instead of first? Should there be an explicit XML element in the namespace to specify where the CXF endpoint ends up?


<beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
 xmlns:sec=""http://cxf.apache.org/configuration/security""
 xmlns:http=""http://cxf.apache.org/transports/http/configuration""
 xmlns:httpj=""http://cxf.apache.org/transports/http-jetty/configuration"" xmlns:jaxws=""http://java.sun.com/xml/ns/jaxws""
 xsi:schemaLocation=""http://cxf.apache.org/configuration/security
          http://cxf.apache.org/schemas/configuration/security.xsd
            http://cxf.apache.org/transports/http/configuration
            http://cxf.apache.org/schemas/configuration/http-conf.xsd
            http://cxf.apache.org/transports/http-jetty/configuration
            http://cxf.apache.org/schemas/configuration/http-jetty.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"">

 <httpj:engine-factory bus=""cxf"">
  <httpj:engine port=""8808"">
   <httpj:handlers>
    <bean class=""org.mortbay.jetty.handler.ContextHandler"">
     <property name=""contextPath"" value=""/${staticResourceBase}"" />
     <property name=""handler"">
      <bean class=""org.mortbay.jetty.handler.ResourceHandler"">
       <property name=""baseResource"">
        <bean class=""org.mortbay.resource.FileResource"">
         <constructor-arg value=""${staticResourceURL}"" />
        </bean>
        </property>
      </bean>
     </property>
    </bean>
    <!-- 
    <bean class=""org.mortbay.jetty.handler.DefaultHandler""/>
    -->
   </httpj:handlers>
  </httpj:engine>
 </httpj:engine-factory>
</beans>",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-15 06:45:56.952,,,no_permission,,,,,,,,,,,,,111936,,,Mon Oct 15 06:45:56 UTC 2007,,,,,,0|i1aafb:,268155,,,,,,,,15/Oct/07 06:45;njiang;This should be fixed in the SVN repository.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF AbstractEndpointFactory 's setServiceName and setEndpointName do not take effect,CXF-1108,12380144,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,11/Oct/07 09:09,05/Dec/07 19:23,14/Mar/19 02:28,15/Oct/07 06:48,2.0,,,,,,,2.0.3,,Core,,,,,0,"AbstractEndpointFactory 's setServiceName and setEndpointName will not take effect in it createEndpoint() method. 
If we want to set  the service name and endpoint name to the ServerFactoryBean which implement, 
we can walk around it by setting the service name and endpoint name to the ServerFactoryBean's ServiceFactoryBean member. 
Because we always use ServerFactoryBean and JaxWsServerFactoryBean as Endpoint publish API , 
we need to get the setServiceName and setEndpointName work in the *ServiceFactoryBean.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111934,,,Mon Oct 15 06:48:30 UTC 2007,,,,,,0|i0syrr:,167110,,,,,,,,15/Oct/07 06:48;njiang;This issue has been fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Local transport direct dispatch mode can't work,CXF-1107,12380139,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,11/Oct/07 06:35,05/Dec/07 19:23,14/Mar/19 02:28,15/Oct/07 06:47,2.0,,,,,,,2.0.3,,Transports,,,,,0,"
If we use local transport and set the LocalConduit.DIRECT_DISPATCH to be true
requestContext.put(LocalConduit.DIRECT_DISPATCH, true);

We will get the NPE which likes this.

java.lang.NullPointerException
	at
org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.writeSoapEnvelopeStart(SoapOutInterceptor.java:94)
	at
org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:76)
	at
org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:57)
	at
org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111933,,,Mon Oct 15 06:47:38 UTC 2007,,,,,,0|i0v3kf:,179551,,,,,,,,15/Oct/07 06:47;njiang;This fix is in the SVN repository.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XPATH result  in jaxws customization  is not NodeList,CXF-1106,12380131,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,11/Oct/07 04:08,05/Dec/07 19:23,14/Mar/19 02:28,15/Oct/07 01:52,2.0.2,,,,,,,2.0.3,,Tooling,,,,,0,"The use of XPATH in JAXWS customizations is very limited. For instance, <jaxws:bindings node=""wsdl:portType[@name='Test']//wsdl:operation""> returns the *first* operation in portType 'Test', not *all* operations in that portType, which is what it should return. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111932,,,2007-10-11 04:08:35.0,,,,,,0|i0v3fj:,179529,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Arrays with Aegis+JAX-WS produce incorrect WSDL,CXF-1105,12380125,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,11/Oct/07 00:36,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 19:17,2.0.2,,,,,,,2.0.3,,Aegis Databinding,,,,,0,"If a parameter of an operation is declared as 

void foo (String x, Name[] y)

then the resulting WSDL will look like:

<xsd:complexType name=""addNameBatch"">
<xsd:sequence>
<xsd:element minOccurs=""0""  name=""indexid"" type=""xsd:string""/>
<xsd:element maxOccurs=""unbounded""  name=""names"" type=""ns1:ArrayOfName""/>
</xsd:sequence>
</xsd:complexType>

Presto: a two-dimensional array.

Using List<Name> instead yields the correct schema.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111931,,,2007-10-11 00:36:42.0,,,,,,0|i0v3ef:,179524,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLToJava Error -- two elements with the same name defined,CXF-1104,12380123,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,tschroedl,tschroedl,10/Oct/07 23:21,13/Nov/09 17:27,14/Mar/19 02:28,15/Oct/09 20:22,2.0.2,,,,,,,2.2,,JAXB Databinding,,,,,1,"The WSDL generated by my JAX-WS service cannot be used to create the client. I get the following error:

org.apache.cxf.tools.common.ToolException: WSDLToJava Error : Thrown by JAXB : 'findSystemInfoResponse' is already defined

I am trying to return a DTO from a service. The service method's return type is an interface that the DTO implements. However, while the generated client did create my exception classes, it didn't create any response classes that I was expecting. In looking at the WSDL, I noticed the response type wasn't showing up anywhere as a <xs:complexType> under <wsdl:definitions>.  So, I added @WebMethod and @ResponseWrapper(className=""my.package.SysInfoDTO"") to the SEI. Where SysInfoDTO is the concrete class for the return type.

Doing this did get the concrete class to show up as a complexType. However, now, when I attempt to generate the client, it fails because there are actually two elements with the same name:

<xs:complexType name=""sysInfoDTO"">
   <xs:sequence>
      <xs:element minOccurs=""0"" name=""applicationVersion"" type=""xs:string""/>
      <xs:element minOccurs=""0"" name=""currentDatabase"" type=""xs:string""/>
      <xs:element minOccurs=""0"" name=""currentSchema"" type=""xs:string""/>
   </xs:sequence>
</xs:complexType>
<xs:element name=""findSystemInfoResponse"" nillable=""true"" type=""sysInfoDTO""/>
...
<xs:element name=""findSystemInfoResponse"" type=""findSystemInfoResponse""/>
<xs:complexType name=""findSystemInfoResponse"">
   <xs:sequence>
      <xs:element minOccurs=""0"" name=""result""/>
   </xs:sequence>
</xs:complexType>

I can see why this would fail as it can't figure out which findSystemInfoResponse element to use.  Is there something I've missed, should this happen?",Java 5.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-11 01:24:10.706,,,no_permission,,,,,,,,,,,,,111930,,,Thu Oct 15 20:22:30 UTC 2009,,,,,,0|i1aafj:,268156,,,,,,,,"11/Oct/07 01:24;maomaode;Question: 
* Which findSystemInfoResponse element do you expect the tools to pick up?
* Is it possible to resolve the confusion by modifying the schema and wsdl?
","11/Oct/07 02:31;tschroedl;I was expecting the result of the call to be the same type as that specified by the SEI, which would be my.package.SysInfoDTO. The complexType named sysInfoDTO contains the elements corresponding to the data I was expecting to retrieve (applicationVersion, currentDatabase, currentSchema).

Yes, I tried modifying the WSDL manually to remove the confusion. I was able to get WSDLToJava to generate the client files by renaming as follows:

<xs:complexType name=""sysInfoDTO"">
   <xs:sequence>
      <xs:element minOccurs=""0"" name=""applicationVersion"" type=""xs:string""/>
      <xs:element minOccurs=""0"" name=""currentDatabase"" type=""xs:string""/>
      <xs:element minOccurs=""0"" name=""currentSchema"" type=""xs:string""/>
   </xs:sequence>
</xs:complexType>
<xs:element name=""sysInfo"" nillable=""true"" type=""sysInfoDTO""/>
...
<xs:element name=""findSystemInfoResponse"" type=""findSystemInfoResponse""/>
<xs:complexType name=""findSystemInfoResponse"">
   <xs:sequence>
      <xs:element minOccurs=""0"" name=""sysInfo""/>
   </xs:sequence>
</xs:complexType> 

However, the subsequent service call fails. I then tried to achieve this result by adding an annotation on the SEI so that the generated WSDL would match. I added a @WebResult(name=""sysInfo""). This made the above look like:

<xs:complexType name=""sysInfoDTO"">
   <xs:sequence>
      <xs:element minOccurs=""0"" name=""applicationVersion"" type=""xs:string""/>
      <xs:element minOccurs=""0"" name=""currentDatabase"" type=""xs:string""/>
      <xs:element minOccurs=""0"" name=""currentSchema"" type=""xs:string""/>
   </xs:sequence>
</xs:complexType>
<xs:element name=""findSystemInfoResponse"" nillable=""true"" type=""sysInfoDTO""/>
...
<xs:element name=""findSystemInfoResponse"" type=""findSystemInfoResponse""/>
<xs:complexType name=""findSystemInfoResponse"">
   <xs:sequence>
      <xs:element minOccurs=""0"" name=""sysInfo""/>   <---- this changed to match the WebResult name
   </xs:sequence>
</xs:complexType> 

Close, but there's still the duplicate findSystemInfoResponse element.  

I would really prefer to fix it via configuration/annotation since the WSDL is being generated. I've used Aegis binding in the past with XFire and had it working, but there is no client code generation for Aegis from the WSDL (yet) that I know of. I want to be able to give my WSDL to customers and have them be able to generate the client without asking me for anything.
","11/Oct/07 14:52;tschroedl;I am using Spring to configure the service. Looks like:
...
<jaxws:endpoint>
   id=""sysInfoFacadeCXFServiceEndpoint""
   implementorClass=""apup.facade.impl.SysInfoFacadeImpl""
   implementor=""#sysInfoFacadeImpl""       <--- this is a Spring bean I'm injecting
   address=""/SysInfoFacade""/>

The format of the URL I'm using to generate the WSDL:

https://localhost/app/service/cxf/SysInfoFacade?wsdl
which imports
https://localhost/app/service/cxf/SysInfoFacade?wsdl=SysInfoFacade.wsdl



","11/Oct/07 15:53;tschroedl;The same issue occurs if I generate the WSDL using org.apache.cxf.tools.java2wsdl.JavaToWSDL. 

I.e, the error is because a schema cannot contain two global components with the same name. There are two occurrences of findSystemInfoResponse in the target namespace.

","11/Oct/07 23:32;tschroedl;The error goes away running JavaToWSDL if I set the -t option (specifies the target namespace to use in the generated WSDL file) and change my SEI method to return a concrete class instead of an interface. With the generated WSDL, I can then generate the client using WSDLToJava. This client works and I get the data back.

I would have thought the @ResponseWrapper(className=""..."") annotation would do the trick. Had to actually change the return type to a concrete class. I'm stumped that I can't have an interface as a return type. Am I making a configuration mistake, or is there a way around this? 

","13/Oct/07 20:25;tschroedl;
It indeed appears that JAXB cannot bind interfaces out of the box. The JAXB guide linked to off the CXF website provides some ways to handle interfaces via annotations.

https://jaxb.dev.java.net/guide/Mapping_interfaces.html

Haven't tried their suggestions yet, but I will. If anyone already has a working example of this, would be a nice addition to the samples or website.


","15/Oct/09 20:22;dkulp;
Resolving this a ""fixed"" more or less.

With JAX-WS 2.2/JAXB 2.2, you can write XmlTypeAdapter things to handle interfaces.   We added an example (java_first_jaxws) that shows how that is done. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema imports missing from cross-tns embedded schemata,CXF-1103,12380121,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,10/Oct/07 23:06,05/Dec/07 19:23,14/Mar/19 02:28,24/Oct/07 18:56,2.0.2,,,,,,,2.0.3,,Core,,,,,0,"CXF generates WSDL documents that fail to explicitly import embedded schemas that cross namespace boundaries. I can attach an example of such a WSDL to this issue, and attempt to build a test case later.

I'm using JAX-WS + Aegis.
",,,,,,,,,,,,,,,,,10/Oct/07 23:07;bmargulies;NameIndex.wsdl;https://issues.apache.org/jira/secure/attachment/12367535/NameIndex.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111929,,,Wed Oct 24 17:16:38 UTC 2007,,,,,,0|i0syrz:,167111,,,,,,,,24/Oct/07 17:16;bmargulies;Fix under test.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS transport cannot handle messages > 64K,CXF-1097,12379976,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,09/Oct/07 17:51,05/Dec/07 19:23,14/Mar/19 02:28,10/Oct/07 20:20,2.0,2.0.1,2.0.2,,,,,2.0.3,,Transports,,,,,0,"
Related to CXF-986.

The JMS transport assumes the CachedOutputStream is always ""inmemory"" and never using temp files.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111924,,,2007-10-09 17:51:06.0,,,,,,0|i1aagn:,268161,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resources not being loaded correctly for tls,CXF-1096,12379928,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,eamonndwyer,eamonndwyer,09/Oct/07 09:15,05/Dec/07 19:23,14/Mar/19 02:28,05/Nov/07 19:57,2.0.3,2.1,,,,,,2.0.3,,Transports,,,,,0,"Setting the keystore entries using the resource attribute, as demonstrated in the snippet below, is not working correctly. 
<csec:keyStore type=""JKS"" password=""password""
                 resource=""keys/truststore.jks""/>
The jks file is not being resolved and instead a new empty keystore was being created.",Windows,,,,,,,,,,,,,,,,09/Oct/07 09:16;eamonndwyer;TLSResourceFix.patch;https://issues.apache.org/jira/secure/attachment/12367325/TLSResourceFix.patch,05/Nov/07 18:31;fdushin;cxf-1096.patch;https://issues.apache.org/jira/secure/attachment/12368989/cxf-1096.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-10-09 13:48:29.252,,,no_permission,,Novice,,,,,,,,,,,111923,,,Mon Nov 05 18:31:28 UTC 2007,,,,,,0|i1aagv:,268162,,,,,,,,09/Oct/07 09:16;eamonndwyer;Patch for this issue.,"09/Oct/07 13:48;dkulp;
I'm going to let Fred review this a bit more.    It definitely needs a testcase and I think the error handling needs a bit of work, (logging failures at level fine doesn't seem to be the best idea) but Fred will know how to handle all of that.

Anyway, I'll assign this to me and I'll work with Fred to get the fix in.

","05/Nov/07 18:31;fdushin;Slight cleanup of previously submitted patch, together with support for resource specifications for certStrores (for use with PKCS12 files).

Added a test to system tests for this (Augmented the existing HTTPSClient test).  Rightfully, we need to revamp the testing for https to get comprehensive unit test coverage, together with basic testing of the obvious HTTP/S scenarios, but not just now...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The binding file does not take effect for imported wsdl ,CXF-1095,12379914,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,09/Oct/07 04:07,05/Dec/07 19:23,14/Mar/19 02:28,15/Oct/07 01:54,2.0.2,,,,,,,2.0.3,,Tooling,,,,,0,"When the wsdlLocation in binding file is pointing to the imported wsdl not the wsdl used to generate code , wsdl2java will throw exception :
org.apache.cxf.tools.common.ToolException: External binding file binding.xml does not point to specified wsdl hello_world.wsdl

  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111922,,,2007-10-09 04:07:24.0,,,,,,0|i1aah3:,268163,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis+Jaxws ignores namespaces on @WebParams,CXF-1092,12379770,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,05/Oct/07 18:15,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 20:19,2.0.2,,,,,,,2.0.3,,JAX-WS Runtime,,,,,0,"I think I've run into some hard case related to SEIs versus implementations. 
Here's the interface:

@WebService(name=""NameIndex"", targetNamespace=""urn:com.basistech.rnm.index.ws"")
public interface NameIndexService {

    @WebMethod
    public abstract void addNameBatch(@WebParam(name=""indexid"") String indexid, @WebParam(targetNamespace=""urn:com.basistech.rnm"", name=""names"")Name[] names) throws NameIndexException; ...
}

Here's the implementation:

@WebService (serviceName = ""NameIndex"", 
        endpointInterface = ""com.basistech.rnm.index.ws.NameIndexService"",
        targetNamespace=""urn:com.basistech.rnm.index.ws"")
public class NameIndexServiceImpl extends NameIndexServiceCommon implements NameIndexService {

    public void addNameBatch(String indexid, Name names[]) throws NameIndexException { ... }


I am trying the JaxWs runtime proxy generator, and I get the following:


javax.xml.ws.WebServiceException: org.apache.cxf.service.factory.ServiceConstructionException: Could not find a message part matching name {urn:com.basistech.rnm}names.  Possible values are [{urn:com.basistech.rnm.index.ws}indexid, {urn:com.basistech.rnm.index.ws}names].


Looks like the client generator is paying attention to the annotation, but the server is not.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-22 20:05:15.24,,,no_permission,,,,,,,,,,,,,111919,,,Mon Oct 22 20:05:15 UTC 2007,,,,,,0|i1aahb:,268164,,,,,,,,22/Oct/07 19:47;bmargulies;This report may be invalid. I may have been crossing JAXB and Aegis.,"22/Oct/07 20:05;dkulp;
Well, it's valid for JAX-WS + JAXB as well.   I just checked by creating a testcase. 

That said, the issue description really is wrong.    In the ""wrapped"" doc/lit case, the targetNamespace should be ignored if the part is not a header as the part QNames MUST be in the namespace of the wrapper element.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc missing for dispatch client capability,CXF-1091,12379769,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,05/Oct/07 17:14,18/Oct/09 21:55,14/Mar/19 02:28,18/Oct/09 21:55,2.0.2,,,,,,,,,Documentation,,,,,0,"http://cwiki.apache.org/CXF20DOC/how-do-i-develop-a-client.html

There's no javadoc for the classes described in here under ""JAX-WS Dispatch APIs"". It's also not at all obvious which sample is under discussion.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-18 20:40:07.429,,,no_permission,,,,,,,,,,,,,111918,,,Sun Oct 18 20:40:07 UTC 2009,,,,,,0|i1aahj:,268165,,,,,,,,"18/Oct/09 20:40;chris@die-schneider.net;There is no java doc currently linked from the wiki. The example looks ok to me. Is this issue still relevant and if yes is it really a bug?
I will close the issue on 25.09.2009 if there is no feedback.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Noise log traffic due to lifecycle management problem with jetty server,CXF-1086,12379535,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,bmargulies,bmargulies,03/Oct/07 03:11,05/Dec/07 19:23,14/Mar/19 02:28,11/Oct/07 06:28,2.0.2,,,,,,,2.0.3,,Bus,,,,,0,"In the test case I'm about to attach, the code logs severe messages complaining that the server can't start because it is already started. Now, if the desired behavior is to lazily murder and restart the server on this sort of error, then the error should not be so severe. If the intent is that this configuration should cleanly close down, then it shouldn't get the error at all.",,,,,,,,,,,,,,,,,03/Oct/07 03:12;bmargulies;http.diff;https://issues.apache.org/jira/secure/attachment/12366974/http.diff,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-05 06:17:10.997,,,no_permission,,,,,,,,,,,,,111913,,,Fri Oct 05 06:17:10 UTC 2007,,,,,,0|i1aaif:,268169,,,,,,,,"03/Oct/07 03:12;bmargulies;This test will pass, but with SEVERE Log traffic that I am claiming is not great.","05/Oct/07 06:17;njiang;Hi Benson,

I just committed a quick fix for your system test.  The key issue is that we need to configure  the bus first (set up the jetty engine with a new JettyEngineFactory) , after we can create the service with right bus.
If we mixed the bus setup and service creation in a same application context, the serverFactoryBean will pick a default bus to initiate the service. And when the application context refreshed, the JettyEngineFactory which is instantiated by  Spring will be set to the bus with the resource context handler, so your service can't be accessible.

Willem.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LogUtils is missing some MissingResourceException handling,CXF-1083,12379366,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,bmargulies,bmargulies,30/Sep/07 15:59,05/Dec/07 19:23,14/Mar/19 02:28,10/Oct/07 20:21,2.0.2,,,,,,,2.0.3,,Core,,,,,0,"In LogUtils.createLogger, there is no handling for MissingResourceException when there is a custom logger class.

The Log4jClass, delegating to the Abstract class, gets just the same collection of missing resource exceptions as the default case. So it blows up.

The code in createLogger only fails to handle if the name is non-null. If the name is null, it has a try block. Looks to me as if the == null test is backwards.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-01 01:51:50.727,,,no_permission,,Novice,,,,,,,,,,,111910,,,Mon Oct 01 15:52:37 UTC 2007,,,,,,0|i0sys7:,167112,,,,,,,,"01/Oct/07 01:51;ffang;actually, when should catach InvocationTargetException  but not MissingResourceException here, since all exception in relect would be wrapped as InvocationTargetException  

so the code here
if (name == null) {
                    try {
                        return (Logger) cns.newInstance(loggerName, BundleUtils.getBundleName(cls));
                    } catch (InvocationTargetException ite) {
                        if (ite.getTargetException() instanceof MissingResourceException) {
                            return (Logger) cns.newInstance(loggerName, null);
                        } else {
                            throw ite;
                        }
                    } 
                } else {
                    return (Logger) cns.newInstance(loggerName, BundleUtils.getBundleName(cls, name));
                }
IMHO, is correct","01/Oct/07 11:00;bmargulies;What is needed first and foremost is a systest that turns this on.

Along with a bean to make it easier to do in spring :-)

When I have the trunk and karma I'll do it.
","01/Oct/07 11:01;bmargulies;Freeman,

In 2.0.2, I watched it fail, step by step in the debugger. The problem is the LAST newInstance, which runs when the class is set, and which is outside the try.

--benson
","01/Oct/07 11:34;dkulp;Yes, this wasn't working correctly in 2.0.2.   It should be fixed on trunk now.   I did run the entire test suite with log4j last week and all but the JCA tests passed.","01/Oct/07 11:53;ffang;Benson, 

you are right, we also need do the same thing when name is not null, something like
try {
    if (name == null) {
          return (Logger) cns.newInstance(loggerName, BundleUtils.getBundleName(cls)); 
    } else {
          return (Logger) cns.newInstance(loggerName, BundleUtils.getBundleName(cls, name)); 
    }
} catch (InvocationTargetException ite) { 
    if (ite.getTargetException() instanceof MissingResourceException) { 
           return (Logger) cns.newInstance(loggerName, null); 
    } else { 
           throw ite; 
   } 

} 
","01/Oct/07 14:40;dkulp;Freeman,

I don't think so.    If the user is explicitly setting a bundle name instead of using the defaults, that bundle definitely should be there.    Allowing the exception is the right thing in that case. 

Basically, when using the j.u.l.Logger stuff, that is what happens.   If you don't specify a bundle name, it will catch the MissingResourceException and then retry with null.    If you DO specify a bundle name, we don't retry.


That said, we should catch the InvocationTargetException and pull the MissingResourceException out and throw that instead.  I'll handle that.



Dan","01/Oct/07 15:52;ffang;Dan,

I agree with you, I know my first comment is not correct. But I think my second comment should work. Would you please verify it?

Freeman",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxWsServerFactory constructor over JaxWsServiceFactory has surprising (non)-behavior,CXF-1081,12379352,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,30/Sep/07 02:13,30/Apr/08 14:57,14/Mar/19 02:28,11/Mar/08 15:04,2.0.2,,,,,,,2.1,,JAX-WS Runtime,,,,,0,"JaxWsServerFactoryBean has a constructor that takes a JaxWsServiceFactoryBean. Surprisingly, this constructor does not absorb useful properties from its argument. In particular, if you set a service class on the ServiceFactoryBean, the you have to set it, all over again, on the server factory.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111908,,,2007-09-30 02:13:30.0,,,,,,0|i0v3nj:,179565,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis + JAX-WS fails to throw specific exceptions,CXF-1080,12379351,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,30/Sep/07 02:09,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 20:11,2.0.2,,,,,,,2.0.3,,Aegis Databinding,,,,,0,"When the frontend is jaxws, aegis fails to throw the declared exception. Or, perhaps, when the databinding is aegis, jaxws fails to throw the declared exception. Beats me.

Test case attachment to follow.",,,,,,,,,,,,,,,,,03/Oct/07 13:29;bmargulies;dbtest2.txt;https://issues.apache.org/jira/secure/attachment/12367000/dbtest2.txt,30/Sep/07 02:10;bmargulies;exceptionTest.patch;https://issues.apache.org/jira/secure/attachment/12366810/exceptionTest.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111907,,,Wed Oct 03 13:40:03 UTC 2007,,,,,,0|i140cv:,231520,,,,,,,,"30/Sep/07 02:10;bmargulies;This patch modified the Aegis Exception test to run with JaxWs as well as the simple front end ... and fail. 

I'd be really grateful if someone else could have a look at this one.
","03/Oct/07 11:35;bmargulies;This problem lives in the generated proxy. The simple proxy rethrows the 'cause' exception, the jaxws one does not.
","03/Oct/07 12:59;bmargulies;For the passing test case, the in fault interceptor has this list:

Chain org.apache.cxf.phase.PhaseInterceptorChain@1f09a31. Current flow:
  unmarshal [Soap11FaultInInterceptor, ClientFaultConverter]


For the failing case, we have the following, instead.

Chain org.apache.cxf.phase.PhaseInterceptorChain@2e34bf. Current flow:
  pre-protocol [SOAPHandlerFaultInInterceptor, LogicalHandlerFaultInInterceptor]
  unmarshal [Soap11FaultInInterceptor, ClientFaultConverter]","03/Oct/07 13:01;bmargulies;The following does not look promising...

    public void handleFault(T message) {
        // TODO
    }

in org.apache.cxf.jaxws.handler.logical LogicalHandlerFaultInInterceptor.
","03/Oct/07 13:16;bmargulies;OK, closer. In ClientFaultConverter, in the failing case, we don't find a faultWanted.","03/Oct/07 13:19;bmargulies;I got it. It's the xfire-compatible namespaces.    

This call is not effectual on the jaxws client.

  sf.getServiceFactory().getServiceConfigurations().add(0, new AegisServiceConfiguration());
 
So the server has the namespace trailing slash, and the client doesn't have the namespace.

This state of affairs still needs explaining.


","03/Oct/07 13:24;bmargulies;Oh, bother. Pilot error. I'm  not establishing the xfire-compatible thing on the SERVER side.

I had better track down how I got here in the first place.
",03/Oct/07 13:26;bmargulies;Except that fixing the test case to setup consistently doesn't help.,03/Oct/07 13:29;bmargulies;This version of the test has more cases and sets up the xfire-compatibility class consistently. It still fails.,03/Oct/07 13:35;bmargulies;I've STILL got inconsistent setup.,"03/Oct/07 13:40;bmargulies;The testJaxws case in the new patch is still a real case of a real problem. In spite of setting (apparently) the Aegis service configuration on both ends, the namespaces on the fault are inconsistent. The other items are fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java fails to genrate wrapped style,CXF-1079,12379286,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rsi,rsi,28/Sep/07 13:27,03/Aug/09 20:06,14/Mar/19 02:28,28/Jul/09 01:30,2.0.2,,,,,,,2.1.6,2.2.3,Tooling,,,,,3,"use a wsdl conforming to the jax-ws rules for document literal wrapped style.
wsdl2java generates BARE port type. jax-ws ri generates WRAPPED with the same wsdl.

Wsdl:
<?xml version=""1.0"" encoding=""UTF-8""?>
<wsdl:definitions xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:tns=""http://www.kba.de/pass-service"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:hinweis=""http://www.kba.de/hinweis"" xmlns:pass=""http://www.kba.de/pass"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" targetNamespace=""http://www.kba.de/pass-service"">
	<wsdl:types>
		<xsd:schema targetNamespace=""http://www.kba.de/pass"" elementFormDefault=""qualified"">
			<xsd:import namespace=""http://www.kba.de/hinweis"" schemaLocation=""xsd/Hinweis.xsd""/>
			<xsd:element name=""Passwort"">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name=""Kennung""/>
						<xsd:element name=""Passwort""/>
						<xsd:element name=""PasswortNeu"" minOccurs=""0""/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name=""info"">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element ref=""pass:Passwort""/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name=""infoResponse"">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element ref=""hinweis:Hinweis""/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name=""passwortAenderung"">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element ref=""pass:Passwort""/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name=""passwortAenderungResponse"">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element ref=""hinweis:Hinweis""/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:schema>
	</wsdl:types>
	<wsdl:message name=""Hinweis"">
		<wsdl:part name=""parameters"" element=""hinweis:FaultHinweis""/>
	</wsdl:message>
	<wsdl:message name=""InfoRequest"">
		<wsdl:part name=""parametersInfo"" element=""pass:info""/>
	</wsdl:message>
	<wsdl:message name=""InfoResponse"">
		<wsdl:part name=""parametersInfoResponse"" element=""pass:infoResponse""/>
	</wsdl:message>
	<wsdl:message name=""PassRequest"">
		<wsdl:part name=""parametersRequest"" element=""pass:passwortAenderung""/>
	</wsdl:message>
	<wsdl:message name=""PassResponse"">
		<wsdl:part name=""parametersRequestResponse"" element=""pass:passwortAenderungResponse""/>
	</wsdl:message>
	<wsdl:portType name=""passPortType"">
		<wsdl:operation name=""info"">
			<wsdl:input name=""infoRequest"" message=""tns:InfoRequest""/>
			<wsdl:output name=""infoResponse"" message=""tns:InfoResponse""/>
			<wsdl:fault name=""hinweis"" message=""tns:Hinweis""/>
		</wsdl:operation>
		<wsdl:operation name=""passwortAenderung"">
			<wsdl:input name=""PassRequest"" message=""tns:PassRequest""/>
			<wsdl:output name=""PassResponse"" message=""tns:PassResponse""/>
			<wsdl:fault name=""hinweis"" message=""tns:Hinweis""/>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name=""passSOAP"" type=""tns:passPortType"">
		<soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
		<wsdl:operation name=""info"">
			<soap:operation soapAction=""http://www.kba.de/info"" style=""document""/>
			<wsdl:input name=""infoRequest"">
				<soap:body use=""literal""/>
			</wsdl:input>
			<wsdl:output name=""infoResponse"">
				<soap:body use=""literal""/>
			</wsdl:output>
			<wsdl:fault name=""hinweis"">
				<soap:fault name=""hinweis"" use=""literal""/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name=""passwortAenderung"">
			<soap:operation soapAction=""http://www.kba.de/PasswortAenderung"" style=""document""/>
			<wsdl:input name=""PassRequest"">
				<soap:body use=""literal""/>
			</wsdl:input>
			<wsdl:output name=""PassResponse"">
				<soap:body use=""literal""/>
			</wsdl:output>
			<wsdl:fault name=""hinweis"">
				<soap:fault name=""hinweis"" use=""literal""/>
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name=""passService"">
		<wsdl:port name=""passSOAP"" binding=""tns:passSOAP"">
			<soap:address location=""http://localhost:8191/passService""/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>

cxf generated java:

@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(targetNamespace = ""http://www.kba.de/pass"", partName = ""parametersInfoResponse"", name = ""infoResponse"")
    @WebMethod(action = ""http://www.kba.de/info"")
    public de.kba.pass.InfoResponse info(
        @WebParam(targetNamespace = ""http://www.kba.de/pass"", partName = ""parametersInfo"", name = ""info"")
        de.kba.pass.Info parametersInfo
    ) throws Hinweis;

jax-ws ri generated java:
/**
     * 
     * @param passwort
     * @return
     *     returns de.kba.hinweis.HinweisTyp
     */
    @WebMethod(action = ""http://www.kba.de/Info"")
    @WebResult(name = ""Hinweis"", targetNamespace = ""http://www.kba.de/hinweis"")
    @RequestWrapper(localName = ""info"", targetNamespace = ""http://www.kba.de/pass"", className = ""de.kba.pass.Info"")
    @ResponseWrapper(localName = ""infoResponse"", targetNamespace = ""http://www.kba.de/pass"", className = ""de.kba.pass.InfoResponse"")
    public HinweisTyp info(
        @WebParam(name = ""Passwort"", targetNamespace = ""http://www.kba.de/pass"")
        Passwort passwort);

",cxf 2.02,,,,,,,,,,,,,,,,28/Sep/07 15:15;rsi;barewrapped.7z;https://issues.apache.org/jira/secure/attachment/12366747/barewrapped.7z,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-29 02:20:07.171,,,no_permission,,,,,,,,,,,,,111906,,,Tue Jul 28 01:30:26 UTC 2009,,,,,,0|i14dtb:,233701,,,,,,,,28/Sep/07 15:16;rsi;Reproduce CXF-1079 by executing the contained batch files. Installations of jax-ws-ri and apache cxf required.,"29/Sep/07 02:20;maomaode;But as per the spec 2.3.1.2

Rules No.5

The wrapper elements only contain child elements, they MUST not contain other structures such
as wildcards (element or attribute), xsd:choice, substitution groups (element references are not
permitted) or attributes; furthermore, they MUST not be nillable.


In your wsdl the info element ref the ""pass:Passwort"", which broken the rule no.5

Possibly a bug in RI?","29/Sep/07 06:06;rsi;To me the term ""substitution groups (element references are not permitted)"" is hard to understand. I think that the brackets restrict the statement ""element references are not permitted"" to the context of substitution groups. 
The wsdl does not use substitution groups, only simple element refs. 
I can hardly believe that somthing as simple and common as element refs should not be permitted.

","23/Jul/09 17:30;ostersc;I agree this is a bug, via a misinterpretation of a poorly written specification rule.  As Ralf indicated, this (using element references) is an extremely common practice.  If you want to create several services which want to use an existing XML schema standard, you want to use the global elements it provides, not recreate your own in your services' namespace; that would create a syntactic incompatibility.

There is nothing about element references that should create ambiguity in wrapping/unwrapping, where substitutions are a much more complex issue.  I believe the specification is trying to disallow use of substitutions, and is asserting you can't just element ref to something that uses a substitution to get around that.

Please see the related TUSCANY bug where they agreed with this interpretation:
https://issues.apache.org/jira/browse/TUSCANY-1938
That bug also indicates the JAX-WS RI implementation interprets it that way as well.

I vote strongly for changing this behavior to using wrapped because A) I don't believe the intention of the specification was to disallow any use of element ref B) its what other tool kits do, and C) the current implementation promotes poor WSDL design (element refs should be preferred over the syntactic ""sugar"" of a new element declaration when an existing one would suffice).

Scott
","28/Jul/09 01:30;dkulp;
I've added an -allowElementReferences flag to the wsdl2java command to enable this.  The default is false due to the spec as well as for backwords compatibility.   However, turning it on will allow element references to be considered for unwrapping.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2Java giving unexpected results when generating client Port interface,CXF-1078,12379265,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,nzjess,nzjess,28/Sep/07 08:15,05/Feb/08 21:47,14/Mar/19 02:28,05/Feb/08 21:47,2.0.2,,,,,,,2.0.4,,JAXB Databinding,,,,,0,"I was previously using WSDL2Java for XFire 1.2.6, and with XFire this example works just fine.  When I switched to CXF the results are quite different and don't look right...

I have two files in this test, the WSDL and one XSD file.  The XSD contains comments indicating where sections can be commented/uncommented in order to show how the results vary unexpectedly.

When WSDL2Java is run on the attached WSDL file (passing the -client arg), the generated file 'com/test/testservice/TestPort.java' looks like this:

@WebService(targetNamespace = ""http://www.test.com/TestService/"", name = ""TestPort"")
public interface TestPort {

    @ResponseWrapper(targetNamespace = ""http://www.test.com/test"", className = ""com.test.test.GetPersonRes"", localName = ""getPersonResponse"")
    @RequestWrapper(targetNamespace = ""http://www.test.com/test"", className = ""com.test.test.GetPersonReq"", localName = ""getPerson"")
    @WebMethod
    public void getPerson();
}

This is wrong since according to the WSDL the getPerson() operation takes a parameter and also returns a parameter.

When the XSD is changed to the use the alternative type definitions as indicated in the inline comments, the generated file then becomes:

@WebService(targetNamespace = ""http://www.test.com/TestService/"", name = ""TestPort"")
public interface TestPort {

    @ResponseWrapper(targetNamespace = ""http://www.test.com/test"", className = ""com.test.test.GetPersonRes"", localName = ""getPersonResponse"")
    @RequestWrapper(targetNamespace = ""http://www.test.com/test"", className = ""com.test.test.GetPersonReq"", localName = ""getPerson"")
    @WebResult(targetNamespace = """", name = ""return"")
    @WebMethod
    public com.test.test.GetPersonRes.Return getPerson(
        @WebParam(targetNamespace = """", name = ""personId"")
        java.math.BigInteger personId
    );
}

Which looks much more like what I want (and also what XFire gave).

It seems that changing the parameter definitions to inherit from an abstract base type somehow causes this issue.

For reference, here are the jars on my classpath when I run WSDL2Java:

	cxf-2.0.2-incubator.jar
	cxf-manifest-incubator.jar
	jaxb-api-2.0.jar
	jaxb-impl-2.0.5.jar
	jaxb-xjc-2.0.jar
	jaxen-1.1.jar
	jdom-1.0.jar
	neethi-2.0.2.jar
	stax-api-1.0.1.jar
	stax-utils-20060502.jar
	velocity-1.4.jar
	velocity-dep-1.4.jar
	wstx-asl-3.2.1.jar
	xml-resolver-1.2.jar
	XmlSchema-1.2.jar
	jaxws-api-2.0.jar
	wsdl4j-1.6.1.jar
	geronimo-ws-metadata_2.0_spec-1.1.1.jar
	geronimo-activation_1.1_spec-1.0-M1.jar
	geronimo-annotation_1.0_spec-1.1.jar
	commons-logging-1.1.jar
	log4j-1.2.11.jar
","Mac OS/X, JDK5.",,,,,,,,,,,,,,,,28/Sep/07 08:17;nzjess;test.wsdl;https://issues.apache.org/jira/secure/attachment/12366725/test.wsdl,28/Sep/07 08:18;nzjess;types.xsd;https://issues.apache.org/jira/secure/attachment/12366726/types.xsd,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-09-28 08:37:06.837,,,no_permission,,Unknown,,,,,,,,,,,111905,,,Tue Feb 05 21:46:48 UTC 2008,,,,,,0|i1aajb:,268173,,,,,,,,28/Sep/07 08:17;nzjess;the test WSDL file,28/Sep/07 08:18;nzjess;the test XSD file,"28/Sep/07 08:37;maomaode;Prevoious, we don't check if the complexType is abstract or not, I just commit the check last night, and it's for supporting the jaxws2.1 and jaxb2.1, and the generated sei will in the doc-lit bare style, not the wrapped style. and the jaxb artifacts will have the @XmlSeeAlso annotation","20/Jan/08 22:15;nzjess;This issue persists in version 2.0.3.  Is there any help on a solution or a workaround for this?

Thx.

","21/Jan/08 20:19;dkulp;
Jesse,

This is somewhat fixed in 2.0.4 snapshot (will be doing the release builds shortly if the TCK passes), but possibly not how you expect.    The extension stuff will cause it to be detected as non-unwrappable, so the method will be generated as:

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = ""getPersonResponse"", targetNamespace = ""http://www.test.com/test"", partName = ""parameters"")
    @WebMethod
    public com.test.test.GetPersonRes getPerson(
        @WebParam(partName = ""parameters"", name = ""getPerson"", targetNamespace = ""http://www.test.com/test"")
        com.test.test.GetPersonReq parameters
    );

which will at least work, but won't exactly match what I think you are expecting.
","21/Jan/08 20:44;nzjess;Thx Daniel.  That looks like it might even be closer to what I actually want.  Look forward to trying it out in 2.0.4.

Cheers,
Jesse.

","05/Feb/08 21:46;nzjess;Re-tried using 2.0.4 and everything works as expected.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
system test DispatchHandlerInvocationTest failed,CXF-1077,12379264,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,blin,blin,28/Sep/07 08:03,05/Dec/07 19:23,14/Mar/19 02:28,18/Oct/07 03:03,,,,,,,,2.0.3,,Build system,,,,,0,"With following errors, however the build still said ""successful"", not sure if the testcase tests according to its intention:
Running org.apache.cxf.systest.handlers.DispatchHandlerInvocationTest
javax.xml.ws.http.HTTPException
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:189)
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:121)
        at org.apache.cxf.systest.handlers.DispatchHandlerInvocationTest.testInvokeWithDataSourcMessageModeXMLBinding(DispatchHandlerInvocationTest.java:263)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
        at org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
        at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
        at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
        at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
        at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)
        at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
        at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
        at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
        at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
        at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:138)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:163)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:84)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:244)
        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:814)
Caused by: org.apache.cxf.interceptor.Fault: GetPayload of DataSource payload is not valid for XML/HTTP binding.
        at org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl.getPayload(LogicalMessageImpl.java:111)
        at org.apache.cxf.systest.handlers.DispatchHandlerInvocationTest$TestHandlerXMLBinding.handleMessage(DispatchHandlerInvocationTest.java:411)
        at org.apache.cxf.systest.handlers.DispatchHandlerInvocationTest$TestHandlerXMLBinding.handleMessage(DispatchHandlerInvocationTest.java:407)
        at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandleMessage(HandlerChainInvoker.java:334)
        at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandlerChain(HandlerChainInvoker.java:259)
        at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeLogicalHandlers(HandlerChainInvoker.java:124)
        at org.apache.cxf.jaxws.handler.logical.DispatchLogicalHandlerInterceptor.handleMessage(DispatchLogicalHandlerInterceptor.java:57)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:172)
        ... 26 more
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 13.826 sec
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111904,,,2007-09-28 08:03:36.0,,,,,,0|i1aajj:,268174,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wsdl2Java out of memory if the wsdl has tons of imports,CXF-1076,12379259,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,maomaode,maomaode,28/Sep/07 06:46,15/Oct/08 04:52,14/Mar/19 02:28,22/Aug/08 15:46,2.0.2,,,,,,,2.0.9,2.1.3,Tooling,,,,,1,we should add something like -Xmx128M into the scripts,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-22 15:46:42.744,,,no_permission,,,,,,,,,,,,,111903,,,Fri Aug 22 15:46:42 UTC 2008,,,,,,0|i0v24v:,179319,,,,,,,,22/Aug/08 15:46;seanoc;http://svn.apache.org/viewvc?view=rev&revision=688102,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@Resource private WebServiceContext context  can't be injected when using the spring transaction enhancement,CXF-1074,12379253,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,28/Sep/07 02:02,11/Jun/08 13:18,14/Mar/19 02:28,19/Feb/08 19:31,2.0,2.0.1,2.0.2,,,,,2.0.4,,JAX-WS Runtime,,,,,0,"Here the parts of the spring configuration file
<bean id=""userService"" parent=""txProxyTemplate"">
		<property name=""target"">
			<bean
				class=""test.UserServiceImpl""
				autowire=""byName"" />
		</property>
</bean>

<jaxws:endpoint id=""userWebService"" implementor=""#userService""
		address=""/userWebService"">
</jaxws:endpoint>

I can't read any context in the test.UserServiceImpl even I declare the @Resource private WebServiceContext context  in it.
But when I removed the txProxyTemplate from userService , I got the context in test.UserServiceImpl. ",,,,,,,,,,,,,CXF-1645,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-19 19:31:09.406,,,no_permission,,,,,,,,,,,,,111901,,,Tue Feb 19 19:31:09 UTC 2008,,,,,,0|i1aajr:,268175,,,,,,,,"19/Feb/08 19:31;dkulp;
There are a couple ways around this now.   The easiest is to import META-INF/cxf/cxf-extension-jaxws.xml which will register a listener to make sure the WebServiceContext is injected into any bean that uses it.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFServlet can't be configured without using Spring.,CXF-1072,12379208,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,cpuffalt,cpuffalt,27/Sep/07 16:20,05/Dec/07 19:23,14/Mar/19 02:28,07/Nov/07 02:18,2.0.1,,,,,,,2.0.3,,Configuration,,,,,1,"CXFServlet appears to be designed to allow configuration without using Spring via the loadBusNoConfig() method called from init() but although reflection is used to test for the existence of the Spring ApplicationContext class, elsewhere in the code there is an instance variable of type ApplicationContext (and other spring types.)  This means it's impossible to instantiate CXFServlet without Spring on the classpath and if you add Spring to the classpath so you can instantiate CXFServlet then it will only attempt to configure itself via Spring.  

",Tomcat v5.5.17,,,,,,,,,,,,,,,,07/Nov/07 01:11;night.kame;CXFServlet.java;https://issues.apache.org/jira/secure/attachment/12369070/CXFServlet.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-28 23:22:51.697,,,no_permission,,,,,,,,,,,,,111899,,,Wed Nov 07 02:18:32 UTC 2007,,,,,,0|i1aak7:,268177,,,,,,,,"28/Oct/07 23:22;night.kame;Even when removing the Spring dependency-hardcoding, the CXFServlet is doomed to fail: servletTransportFactory is instanciated after the creation of the ServletController, which always leads to a NPE.","31/Oct/07 05:44;njiang;Now you could use CXFNonSpringServlet to use Servlet transport without Spring support.
Here a systest which show how to use it.
https://svn.apache.org/repos/asf/incubator/cxf/trunk/systests/src/test/java/org/apache/cxf/systest/servlet/NoSpringServletServer.java
","07/Nov/07 01:10;night.kame;My changes to make it work with the simple example (http://cwiki.apache.org/CXF20DOC/servlet-transport.html :: Publishing an endpoint with the API).
I'm quite sure it's not the right way to do it, but here it is:


-----8<---------------
org/apache/cxf/transport/http/WSDLQueryHandler.java 

@@ -277,10 +277,10 @@
     }

     public boolean isRecognizedQuery(String baseUri, String ctx, EndpointInfo endpointInfo) {
-        return isRecognizedQuery(baseUri, ctx, endpointInfo, false);
+        return isRecognizedQuery(baseUri, ctx, endpointInfo, true);
     }

-----8<---------------
org.apache.cxf.transport.servlet.CXFServlet.java

diff too big: have to remove the dependency toward Spring, and fix some ordering see attached file


-----8<---------------
org.apache.cxf.transport.servlet.ServletTransportFactory

@@ -24,6 +23,7 @@
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
@@ -43,6 +43,16 @@
     private Map<String, ServletDestination> destinations =
         new ConcurrentHashMap<String, ServletDestination>();

+    /**
+     * This constant holds the prefixes served by this factory.
+     */
+    private static final Set<String> URI_PREFIXES = new HashSet<String>();
+    static {
+        URI_PREFIXES.add(""http://"");
+        URI_PREFIXES.add(""https://"");
+        URI_PREFIXES.add(""/"");
+    }
+
     public ServletTransportFactory(Bus b) {
         super.setBus(b);
         List<String> ids = Arrays.asList(new String[] {
@@ -111,5 +121,8 @@
         return Collections.unmodifiableSet(destinations.keySet());
     }

-
+    @Override
+    public Set<String> getUriPrefixes() {
+        return URI_PREFIXES;
+    }
 }",07/Nov/07 01:11;night.kame;Formatted with CXFCodeFormatter.xml v2.0.2,"07/Nov/07 02:18;njiang;Hi Damien,
I can't apply your change into the trunk, since we still need to support Spring context in CXFServlet.

BTW, you can try out the CXFNonSpringServlet for using CXF in Web container without Spring.

Willem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
url re-writing for xsd imported into xsd not working with catalogs set.,CXF-1071,12379199,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,kombi,kombi,27/Sep/07 14:42,05/Dec/07 19:23,14/Mar/19 02:28,05/Oct/07 21:04,2.1,,,,,,,2.0.3,,,,,,,0,"I am using xml catalogs for several on my imported xml schema files when generating my web service server. But when I hit the ""?wsdl"" from the browser the urls did not get re-written for the catalog entries of imported xml schemas.","MacOSX, java1.5, JBoss4.0.5GA",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111898,,,2007-09-27 14:42:20.0,,,,,,0|i0v3fr:,179530,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in EndpointImpl#stop(),CXF-1062,12379050,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,coheig,coheig,25/Sep/07 16:30,25/Sep/07 21:34,14/Mar/19 02:28,25/Sep/07 21:34,,,,,,,,2.0.3,2.1,JAX-WS Runtime,,,,,0,"I've run into a problem with the following bit of code:

Endpoint endpoint = Endpoint.create(...);
endpoint.publish(...);
endpoint.stop();
System.out.println(endpoint.isPublished());

The println returns ""true"" even though the endpoint has been stopped. This is because in EndpointImpl we have:

public void stop() {
        if (null != server) {
            server.stop();
        }
}  

public boolean isPublished() {
        return server != null;
}

So as ""server"" isn't null, just ""stopped"", isPublished() returns true. This is contrary to the functionality of the method:

""Returns true if the endpoint is in the published state."".

http://java.sun.com/javaee/5/docs/api/javax/xml/ws/Endpoint.html#isPublished()

In the attached patch, I've fixed this problem by setting the Server implementation to null when EndpoingImp#stop() is called. This makes sense as stop()ed Endpoints can't be re-published (according to the JAX-WS spec). A unit test is also included in the patch.

",,,,,,,,,,,,,,,,,25/Sep/07 16:30;coheig;cxf_jaxws.patch;https://issues.apache.org/jira/secure/attachment/12366538/cxf_jaxws.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-25 21:34:50.46,,,no_permission,,,,,,,,,,,,,111889,,,Tue Sep 25 21:34:50 UTC 2007,,,,,,0|i146l3:,232530,,,,,,,,25/Sep/07 21:34;dandiep;Applied,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Text cleanup of java2ws CLI instructions,CXF-1061,12379021,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,gmazza,mazzag,mazzag,25/Sep/07 05:39,25/Feb/08 02:28,14/Mar/19 02:28,24/Feb/08 15:53,,,,,,,,2.1,,Tooling,,,,,0,,,,,,,,,,,,,,,,,,25/Sep/07 05:40;mazzag;java2ws.txt;https://issues.apache.org/jira/secure/attachment/12366507/java2ws.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-24 15:52:50.201,,,no_permission,,,,,,,,,,,,,111888,,,Sun Feb 24 15:52:50 UTC 2008,,,,,,0|i1aal3:,268181,,,,,,,,24/Feb/08 15:52;gmazza;Applied.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Code depends on spring bean initialization order,CXF-1060,12378988,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,orbang,orbang,24/Sep/07 14:26,05/Dec/07 19:23,14/Mar/19 02:28,02/Oct/07 18:33,,,,,,,,2.0.3,,Soap Binding,Transports,,,,0,"The following if statement in org.apache.cxf.binding.soap.SoapTransportFactory depends on the order of bean initialization in spring:


    @PostConstruct
    void registerWithBindingManager() {
         ...

        DestinationFactoryManager dfm = bus.getExtension(DestinationFactoryManager.class);
        if (null != dfm) {
            for (String ns : activationNamespaces) {
                dfm.registerDestinationFactory(ns, this);
            }
        }
    }

Basically it makes the assumption that if dfm is initialized then activationNamespaces is also initialized.
When we use the spring jars bundled with cxf-20070729 everything works fine. If we switch to another version of spring (2.0.5), it throws NullPointerException. This is because dfm is initialized before activationNamespaces.","sun jdk 1.5.0_11, windows xp prof., cxf-20070729",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111887,,,2007-09-24 14:26:33.0,,,,,,0|i13zyn:,231456,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CachedOutputStream closes streams prematurely,CXF-1059,12378939,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,rmoquin,rmoquin,23/Sep/07 00:50,05/Dec/07 19:23,14/Mar/19 02:28,24/Sep/07 08:38,2.0.1,,,,,,,2.0.3,,Core,,,,,0,"I receive this error when I return a large amount of data from my webservice (and get past the ClassCastException that I filed a jira about yesterday):

Sep 22, 2007 7:46:46 PM org.apache.cxf.transport.jbi.JBIDestinationOutputStream commitOutputMessage
SEVERE: error sending Out message
java.io.IOException: Cached file was deleted, java.io.FileNotFoundException: C:\DOCUME~1\ryan\LOCALS~1\Temp\att25960tmp (
The system cannot find the file specified)
        at org.apache.cxf.io.CachedOutputStream.getInputStream(CachedOutputStream.java:283)
        at org.apache.cxf.transport.jbi.JBIDestinationOutputStream.commitOutputMessage(JBIDestinationOutputStream.java:78
)
        at org.apache.cxf.transport.jbi.JBIDestinationOutputStream.doClose(JBIDestinationOutputStream.java:60)
        at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:119)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSender
Interceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:73)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
        at org.apache.cxf.transport.jbi.JBIDispatcherUtil.dispatch(JBIDispatcherUtil.java:148)
        at org.apache.servicemix.cxfse.CxfSeEndpoint.process(CxfSeEndpoint.java:167)
        at org.apache.servicemix.common.AsyncBaseLifeCycle.doProcess(AsyncBaseLifeCycle.java:538)
        at org.apache.servicemix.common.AsyncBaseLifeCycle.processExchange(AsyncBaseLifeCycle.java:490)
        at org.apache.servicemix.common.BaseLifeCycle.onMessageExchange(BaseLifeCycle.java:46)
        at org.apache.servicemix.jbi.messaging.DeliveryChannelImpl.processInBound(DeliveryChannelImpl.java:610)
        at org.apache.servicemix.jbi.nmr.flow.AbstractFlow.doRouting(AbstractFlow.java:170)
        at org.apache.servicemix.jbi.nmr.flow.seda.SedaFlow.doRouting(SedaFlow.java:167)
        at org.apache.servicemix.jbi.nmr.flow.seda.SedaQueue$1.run(SedaQueue.java:134)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)

The problem is that the close method in CachedOutputStream closes the stream (and deletes any temporary file associated) and then indicates the close was made so that child classes can also perform any closing operations.  The problem is that the JBIDestinationOutputStream at that point wants to read some data from the stream and hence the above error occurs.  The methods simply need reordered so that the temp file isn't closed before the doClose is executed.



",Windows XP,,,,,,,,,,,,,,,,23/Sep/07 00:51;rmoquin;CachedOutputStream.patch;https://issues.apache.org/jira/secure/attachment/12366417/CachedOutputStream.patch,24/Sep/07 10:47;fedor;NodeDataReader.patch;https://issues.apache.org/jira/secure/attachment/12366455/NodeDataReader.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-09-24 08:38:22.998,,,no_permission,,,,,,,,,,,,,111886,,,Tue Sep 25 06:49:44 UTC 2007,,,,,,0|i0sysn:,167114,,,,,,,,23/Sep/07 00:51;rmoquin;Suggested patch for this issue.,"24/Sep/07 08:38;njiang;This patch has been applied in the revision 578705.
I also added a postClose method for closing the other stream after the cached stream closed to fix the rm systest.","24/Sep/07 10:43;fedor;I experienced almost the same problem when implemented my JAX-WS Provider service and invoked it with big XML.
It don't close itself, but it is closed by other DataReader's instance.
I didn't keep my exception, but i offer my patch for this problem.",24/Sep/07 10:47;fedor;Fedor's patch.,"25/Sep/07 06:49;njiang;Hi Fedor,
The patch is in the svn repository. 
Thanks.
Willem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.ClassCastException: java.io.BufferedOutputStream during large message transfer,CXF-1058,12378911,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,rmoquin,rmoquin,22/Sep/07 05:43,30/Apr/08 14:57,14/Mar/19 02:28,14/Apr/08 15:55,2.0.1,,,,,,,2.1,,JAX-WS Runtime,,,,,0,"Returning a large amount of data from a CXF webservice causes the following error:

Sep 21, 2007 12:00:29 PM org.apache.cxf.transport.jbi.JBIDestinationOutputStream commitOutputMessage
SEVERE: error sending Out message
java.lang.ClassCastException: java.io.BufferedOutputStream
        at org.apache.cxf.transport.jbi.JBIDestinationOutputStream.commitOutputMessage(JBIDestinationOutputStream.java:76
)
        at org.apache.cxf.transport.jbi.JBIDestinationOutputStream.doClose(JBIDestinationOutputStream.java :62)
        at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:119)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage (MessageSender
Interceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage( OutgoingChainInterceptor.java :73)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
        at org.apache.cxf.transport.jbi.JBIDispatcherUtil.dispatch(JBIDispatcherUtil.java:148)
        at org.apache.servicemix.cxfse.CxfSeEndpoint.process(CxfSeEndpoint.java:167)
        at org.apache.servicemix.common.AsyncBaseLifeCycle.doProcess (AsyncBaseLifeCycle.java:538)

This line of code causes the exception in JBIDestinationOutputStream:
ByteArrayOutputStream baos = (ByteArrayOutputStream)getOut();

Guillaume Nodet has given me an untested patch that he thought might fix the issue.  I have written a unittest which performs a write with a large amount of data and then attempts to close the stream.  Without the attached patch applied, the unit test will fail, but with it applied, the test passes.

The CachedOutputStream class is really a haven for this sort of error since it seems that subclasses and invokers of this class seem to be assuming that the getOut() method will magically return the correct type of class that they need, but there are 3 types that could possibly be returned.  I would also suggest that to eliminate future errors, that this class use a ByteBuffer internally instead of dynamically manipulating OutputStreams (this would also make more sense if this class is meant to cache the data to be written).  It would be much easier to use one type consistently in this class rather than several.  The only problem I can see which this approach (which is why I haven't tried to implement it) is the constructor that allows a PipedInputStream.  If you guys are interested, I can implement a ByteBuffer internally, change getOut() to return a concrete OutputStream class (to eliminate ClassCastExceptions, or it could return the DataBuffer) and then write the DataBuffer to a stream when the data is to be committed.  This would be easy depending on the PipedInputStream in the constructor.  Using a directbuffer would probably make it pretty fast as well.","Windows XP, Servicemix 3.2, CXF 2.0.1",,,,,,,,,,,,,,,,22/Sep/07 05:44;rmoquin;cxf.patch;https://issues.apache.org/jira/secure/attachment/12366398/cxf.patch,22/Sep/07 05:47;rmoquin;junit_test.diff;https://issues.apache.org/jira/secure/attachment/12366399/junit_test.diff,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-04-14 15:55:46.933,,,no_permission,,,,,,,,,,,,,111885,,,Mon Apr 14 15:55:46 UTC 2008,,,,,,0|i13zyf:,231455,,,,,,,,22/Sep/07 05:44;rmoquin;Patch to fix this issue.,"22/Sep/07 05:47;rmoquin;Junit diff of changes to exercise the fix.  I didn't attempt to make it reuseable since I wasn't sure what way might work best and also because since there is only one test, why both do that now.",14/Apr/08 15:55;seanoc;Testcase passes on 2.1 trunk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis issues with maps,CXF-1054,12378861,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,21/Sep/07 12:23,29/Jan/08 21:51,14/Mar/19 02:28,15/Dec/07 02:28,2.0.2,,,,,,,2.0.4,,Aegis Databinding,,,,,0,"I am creating this task to keep track of a set of outstanding related issues that i have been working on.

Aegis generally is not feeling well with respect to maps. Maps are returned empty. Partial specifications of map-type method result in any2any schema elements instead of specifically typed schema elements. The valueType and keyType attributes seem not to work.",,,,,,,,,,,,,,,,,21/Sep/07 12:44;bmargulies;rollup.txt;https://issues.apache.org/jira/secure/attachment/12366358/rollup.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-24 18:37:45.797,,,no_permission,,Moderate,,,,,,,,,,,111881,,,Sat Dec 15 02:28:01 UTC 2007,,,,,,0|i13zj3:,231386,,,,,,,,"21/Sep/07 12:44;bmargulies;This patch includes the fix to 1037, 1043, and also validation.","21/Sep/07 12:45;bmargulies;If you just want the 'empty  map' fix, apply the patch on 1037.

If you want the whole enchilada, apply the patch attached up here.
",24/Sep/07 18:37;dandiep;You rock for making my life easier by wrapping this all up. I'll be investigating this afternoon. May not get a final response/commit to you until tomorrow though as I'm traveling today.,24/Sep/07 18:40;bmargulies;You're most welcome.  I'm sure that the sufferers on the users list will be happy to see us get somewhere with this stuff.,15/Dec/07 02:28;bmargulies;All of this was done some time ago.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Catalog entry in codegen maven plugin and command line ignored.,CXF-1053,12378779,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,kombi,kombi,20/Sep/07 18:05,24/Sep/07 05:17,14/Mar/19 02:28,24/Sep/07 05:17,2.1,,,,,,,2.0.3,,Tooling,,,,,0,"If i add a ""-catalog"" as extraargs to the maven plugin for code generation, It seems like it is not being called. I have tried giving a invalid catalog file name and proceed to get the same error.","MacOSX, java1.5, maven 2.0.7",,,,,,,,,,,,,,,,20/Sep/07 18:06;kombi;SampleProject.zip;https://issues.apache.org/jira/secure/attachment/12366303/SampleProject.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-21 18:05:56.297,,,no_permission,,,,,,,,,,,,,111880,,,Mon Sep 24 05:11:43 UTC 2007,,,,,,0|i0v2vr:,179440,,,,,,,,20/Sep/07 18:06;kombi;Attaching an example project to demostrate.,"21/Sep/07 18:05;dkulp;
There were two problems:

1) xml-resolver swallows any exceptions in the catalog processing (and doesn't log them either).  Thus, we have no idea if it actually found a catalog or not.    I've updated it so ""file"" catalogs will be checked for existence prior to calling xml-resolver code.     catalogs at other types of URL's will not get checked.  :-(

2) We also didn't support URI resolving via catalogs, just system prefix things.   I've updated to call resolveURI and resolvePublic as well.


","24/Sep/07 02:47;maomaode;Dan, 

The tests failed on windows platform (at least, vista), probably it's just the problem of the test itself, i'm looking into this","24/Sep/07 05:11;maomaode;kombi,

I just go through your testcase, two issue found:

1. in the catalog, you defined ""uriStartString=""http://www.company.net/extra.xsd""""
   but in your wsdl the schemaLocation is ""http://www.company.com/extra.xsd""

expected [.com] here but was [.net] in your catalog


2. The wsdl itself is not a valid wsdl, it expected ""extra:extraByNameAndTypeRequest"" in the 'extraRequest' message, but you defined the ""profileByNameAndTypeRequest"" in the schema

After fix this two issues, now, it's ok to generate the java artifacts.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF throws ClassCastException from generated client code [when multiple elements have the same name in WSDL],CXF-1052,12378754,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,,pliljenberg@gmail.com,pliljenberg@gmail.com,20/Sep/07 13:56,20/Nov/07 19:46,14/Mar/19 02:28,28/Sep/07 13:03,2.0.1,,,,,,,2.0.2,,JAX-WS Runtime,,,,,7,"
I'm getting ClassCastExceptions from within a dynamically created proxy when using CXF as a client against a webservice. The WSDL for the service is attached, but some parts are shown here:

 <message name='InvoiceDS_getInvoiceData'>
  <part element='tns:getInvoiceData' name='parameters'/>  </message> <message name='InvoiceDS_getInvoiceDataResponse'>
  <part element='tns:getInvoiceDataResponse' name='result'/>  </message> <portType name='InvoiceDS'>
  <operation name='getInvoiceData'>
   <input message='tns:InvoiceDS_getInvoiceData'/>
   <output message='tns:InvoiceDS_getInvoiceDataResponse'/>
   <fault message='tns:WebServiceFault' name='WebService'/>
  </operation>
 </portType>

All classes are genereated with WSDL2Java, the resulting interface for the service being (removed annotations for readability):

public interface InvoiceDS {
    public java.util.List<localhost.jaws.InvoiceData> getInvoiceData(
        localhost.jaws.InvoiceRequest invoiceRequest
    ) throws WebServiceFault_Exception;
}

The InvoiceDS interface specifies that a List of InvoiceData objects should be returned from the method. This means that the GetInvoiceDataResponse type is not used and CXF must unwrap the result from the response before returning it to the client.

My testcode looks something like this:
{
       QName SERVICE = new QName(""http://localhost/jaws"", ""InvoiceServiceDS"");
        InvoiceServiceDS service = new InvoiceServiceDS(new URL(""InvoiceWs.wsdl""), SERVICE);
        InvoiceDS client =service.getInvoiceDSPort();
        InvoiceRequest invoiceRequest = new InvoiceRequest();
        invoiceRequest.setCustId(""test123"");

        List<InvoiceData> invoiceData =
client.getInvoiceData(invoiceRequest);
}

Digging into the CXF framework with the debugger we end up in the
JaxWsClientProxy.invoke() method, line 191 has the return statement:
191        return result;

result is of type GetInvoiceDataResponse (as specified in the WSDL) and not the list that was expected.


After looking into this issue more closely I discovered that the problem arises from the fact that 2 elements in the WSDL have the same name and this makes CXF generate the wrong client code.

Snippet of original WSDL file:

   <complexType name='InvoiceData'>
    <sequence>
     <element name='custID' nillable='true' type='string'/>
    </sequence>
   </complexType>
   <complexType name='InvoiceRequest'>
    <sequence>
     <element name='custId' nillable='true' type='string'/>
    </sequence>
   </complexType>
   <complexType name='getInvoiceData'>
    <sequence>
     <element name='InvoiceRequest' nillable='true'
type='tns:InvoiceRequest'/>
    </sequence>
   </complexType>
   <complexType name='getInvoiceDataResponse'>
    <sequence>
     <element maxOccurs='unbounded' minOccurs='0' name='result'
nillable='true' type='tns:InvoiceData'/>
    </sequence>
   </complexType>
   <element name='getInvoiceData' type='tns:getInvoiceData'/>
   <element name='getInvoiceDataResponse'
type='tns:getInvoiceDataResponse'/>
  </schema>
 </types>
 <message name='InvoiceDS_getInvoiceData'>
  <part element='tns:getInvoiceData' name='parameters'/>  </message>  <message name='InvoiceDS_getInvoiceDataResponse'>
  <part element='tns:getInvoiceDataResponse' name='result'/>  </message>  <portType name='InvoiceDS'>
  <operation name='getInvoiceData'>
   <input message='tns:InvoiceDS_getInvoiceData'/>
   <output message='tns:InvoiceDS_getInvoiceDataResponse'/>
  </operation>
 </portType>

------
In the new version I've changed the operation name to ""getInvoiceDataOperation"" and thus CXF will render a working client for me.

WSDL snippet:
			<complexType name='InvoiceData'>
				<sequence>
					<element name='custID'
nillable='true'
						type='string' />
				</sequence>
			</complexType>
			<complexType name='InvoiceRequest'>
				<sequence>
					<element name='custId'
nillable='true'
						type='string' />
				</sequence>
			</complexType>
			<complexType name='getInvoiceData'>
				<sequence>
					<element name='InvoiceRequest'
nillable='true'
	
type='tns:InvoiceRequest' />
				</sequence>
			</complexType>
			<complexType name='getInvoiceDataResponse'>
				<sequence>
					<element maxOccurs='unbounded'
minOccurs='0'
						name='result'
nillable='true' type='tns:InvoiceData' />
				</sequence>
			</complexType>
			<element name='getInvoiceData'
type='tns:getInvoiceData' />
			<element name='getInvoiceDataResponse'
				type='tns:getInvoiceDataResponse' />
		</schema>
	</types>
	<message name='InvoiceDS_getInvoiceData'>
		<part element='tns:getInvoiceData' name='parameters' />
	</message>
	<message name='InvoiceDS_getInvoiceDataResponse'>
		<part element='tns:getInvoiceDataResponse' name='result'
/>
	</message>
	<portType name='InvoiceDS'>
		<operation name='getInvoiceDataOperation'>
			<input message='tns:InvoiceDS_getInvoiceData' />
			<output
message='tns:InvoiceDS_getInvoiceDataResponse' />
		</operation>
	</portType>



   public localhost.jaws.GetInvoiceDataResponse getInvoiceDataOperation(
        @WebParam(targetNamespace = ""http://localhost/jaws"", partName = ""parameters"", name = ""getInvoiceData"")
        localhost.jaws.GetInvoiceData parameters
    );

Seems to be a problem when there are multiple elements with the same name (a datatype and a message) but I'm assuming that should be ok according to the specs - since the WSDL works with other SOAP stacks (.Net, Axis2, JBoss-WS)?","Windows XP, Java 1.5",,,,,,,,,,,,CXF-956,CXF-1223,,,24/Sep/07 07:48;pliljenberg@gmail.com;InvoiceWs.wsdl;https://issues.apache.org/jira/secure/attachment/12366440/InvoiceWs.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-24 21:40:08.953,,,no_permission,,,,,,,,,,,,,111879,,,Fri Sep 28 13:03:08 UTC 2007,,,,,,0|i0uxtz:,178622,,,,,,,,"24/Sep/07 07:39;pliljenberg@gmail.com;Debuggning the WSDL2Java generation I stumble upon the code in WSDLServiceBuilder that checks for ""rules"".

        // RULE No.2:
        // The input message part refers to a global element decalration whose
        // localname
        // is equal to the operation name
        MessagePartInfo inputPart = inputMessage.getMessagePartByIndex(0);
        if (!inputPart.isElement()) {
            passedRule = false;
        } else {
            QName inputElementName = inputPart.getElementQName();
            inputEl = schemas.getElementByQName(inputElementName);
            if (inputEl == null || !opInfo.getName().getLocalPart().equals(inputElementName.getLocalPart())) {
                passedRule = false;
            }
        }

        if (!passedRule) {
            return;
        }

This rule breaks down if we run it with the WSDL that I provided for this issue. If i just set the passedRule variable to false after this rule my generated client will work just fine! Is this rule really valid to enable wrapping or not?","24/Sep/07 09:03;pliljenberg@gmail.com;Have now tried the WSDL with the JAXWS reference implementation (https://jax-ws.dev.java.net/), and the client code is generated just as it is with CXF, like this:

 public List<InvoiceData> getInvoiceData(
        @WebParam(name = ""InvoiceRequest"", targetNamespace = ""http://localhost/jaws"")
        InvoiceRequest invoiceRequest);

So it seems that the code generation is correct.
The JAXWS-RI does however work in runtime, ie no ClassCastException is thrown and the correct value is returned. This means that this issue probably should be moved into JAXWS-RT instead.","24/Sep/07 21:40;dkulp;
I believe this is already fixed for the 2.0.2 release that should (hopefully) be released tomorrow.   I took the wsdl and generated a simple client and server and it seems to work OK.

You can try it at:
http://people.apache.org/~dkulp/stage_cxf/2.0.2-incubator-take2/

","28/Sep/07 13:03;pliljenberg@gmail.com;Seems to be working just fine in 2.0.2. Thanks! 
Keep up the good work!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdlto generate build.xml only include on pair client-server target,CXF-1049,12378740,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,jeffzhang,jeffzhang,20/Sep/07 10:02,30/Jul/09 18:01,14/Mar/19 02:28,28/Jul/09 20:03,,,,,,,,2.0.8,,Tooling,,,,,0,"wsdl -all hw.wsdl
create build.xml file. There are only one pair client-server task,
PingClient and PingServer

could we support to and more task like GreeterClient and GreeterServer task too?



=== wsdl file ===

<?xml version=""1.0"" encoding=""UTF-8""?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements. See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership. The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  ""License""); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at
 
  http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<wsdl:definitions name=""HelloWorld"" targetNamespace=""http://apache.org/hello_world_soap_http""
    xmlns=""http://schemas.xmlsoap.org/wsdl/""
    xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
    xmlns:tns=""http://apache.org/hello_world_soap_http""
    xmlns:x1=""http://apache.org/hello_world_soap_http/types""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
    <wsdl:types>
        <schema targetNamespace=""http://apache.org/hello_world_soap_http/types""
            xmlns=""http://www.w3.org/2001/XMLSchema""
xmlns:tns=""http://apache.org/hello_world_soap_http/types""
            elementFormDefault=""qualified"">
<simpleType name=""MyStringType"">
<restriction base=""string"">
<maxLength value=""30"" />
</restriction>
</simpleType>

            <element name=""sayHi"">
                <complexType/>
            </element>
            <element name=""sayHiResponse"">
                <complexType>
                    <sequence>
                        <element name=""responseType"" type=""string""/>
                    </sequence>
                </complexType>
            </element>
            <element name=""greetMe"">
                <complexType>
                    <sequence>
                        <element name=""requestType"" type=""tns:MyStringType""/>
                    </sequence>
                </complexType>
            </element>
            <element name=""greetMeResponse"">
                <complexType>
                    <sequence>
                        <element name=""responseType"" type=""string""/>
                    </sequence>
                </complexType>
            </element>
            <element name=""greetMeOneWay"">
                <complexType>
                    <sequence>
                        <element name=""requestType"" type=""string""/>
                    </sequence>
                </complexType>
            </element>
            <element name=""pingMe"">
                <complexType/>
            </element>
            <element name=""pingMeResponse"">
                <complexType/>
            </element>
            <element name=""faultDetail"">
                <complexType>
                    <sequence>
                        <element name=""minor"" type=""short""/>
                        <element name=""major"" type=""short""/>
                    </sequence>
                </complexType>
            </element>
        </schema>
    </wsdl:types>
    <wsdl:message name=""sayHiRequest"">
        <wsdl:part element=""x1:sayHi"" name=""in""/>
    </wsdl:message>
    <wsdl:message name=""sayHiResponse"">
        <wsdl:part element=""x1:sayHiResponse"" name=""out""/>
    </wsdl:message>
    <wsdl:message name=""greetMeRequest"">
        <wsdl:part element=""x1:greetMe"" name=""in""/>
    </wsdl:message>
    <wsdl:message name=""greetMeResponse"">
        <wsdl:part element=""x1:greetMeResponse"" name=""out""/>
    </wsdl:message>
    <wsdl:message name=""greetMeOneWayRequest"">
        <wsdl:part element=""x1:greetMeOneWay"" name=""in""/>
    </wsdl:message>
    <wsdl:message name=""pingMeRequest"">
        <wsdl:part name=""in"" element=""x1:pingMe""/>
    </wsdl:message>
    <wsdl:message name=""pingMeResponse"">
        <wsdl:part name=""out"" element=""x1:pingMeResponse""/>
    </wsdl:message>
    <wsdl:message name=""pingMeFault"">
        <wsdl:part name=""faultDetail"" element=""x1:faultDetail""/>
    </wsdl:message>
    
    <wsdl:portType name=""Greeter"">
        
        <wsdl:operation name=""greetMe"">
            <wsdl:input message=""tns:greetMeRequest"" name=""greetMeRequest""/>
            <wsdl:output message=""tns:greetMeResponse"" name=""greetMeResponse""/>
        </wsdl:operation>
        
        <wsdl:operation name=""greetMeOneWay"">
            <wsdl:input message=""tns:greetMeOneWayRequest"" name=""greetMeOneWayRequest""/>
        </wsdl:operation>
    </wsdl:portType>

    <wsdl:portType name=""Ping"">
        <wsdl:operation name=""sayHi"">
            <wsdl:input message=""tns:sayHiRequest"" name=""sayHiRequest""/>
            <wsdl:output message=""tns:sayHiResponse"" name=""sayHiResponse""/>
        </wsdl:operation>

        <wsdl:operation name=""pingMe"">
            <wsdl:input name=""pingMeRequest"" message=""tns:pingMeRequest""/>
            <wsdl:output name=""pingMeResponse"" message=""tns:pingMeResponse""/>
            <wsdl:fault name=""pingMeFault"" message=""tns:pingMeFault""/>
        </wsdl:operation>


    </wsdl:portType>
    
    <wsdl:binding name=""Greeter_SOAPBinding"" type=""tns:Greeter"">
        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
        
        
        <wsdl:operation name=""greetMe"">
            <soap:operation soapAction=""greetMe"" style=""document""/>
            <wsdl:input name=""greetMeRequest"">
                <soap:body use=""literal""/>
            </wsdl:input>
            <wsdl:output name=""greetMeResponse"">
                <soap:body use=""literal""/>
            </wsdl:output>
        </wsdl:operation>
        
        <wsdl:operation name=""greetMeOneWay"">
            <soap:operation soapAction=""greetMeOneWay"" style=""document""/>
            <wsdl:input name=""greetMeOneWayRequest"">
                <soap:body use=""literal""/>
            </wsdl:input>
        </wsdl:operation>
        
    </wsdl:binding>
    
    <wsdl:binding name=""Ping_SOAPBinding"" type=""tns:Ping"">
        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>

        <wsdl:operation name=""sayHi"">
            <soap:operation soapAction=""sayHi"" style=""document""/>
            <wsdl:input name=""sayHiRequest"">
                <soap:body use=""literal""/>
            </wsdl:input>
            <wsdl:output name=""sayHiResponse"">
                <soap:body use=""literal""/>
            </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name=""pingMe"">
            <soap:operation soapAction=""pingMe"" style=""document""/>
            <wsdl:input>
                <soap:body use=""literal""/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use=""literal""/>
            </wsdl:output>
            <wsdl:fault name=""pingMeFault"">
                <soap:fault name=""pingMeFault"" use=""literal""/>
            </wsdl:fault>
        </wsdl:operation>

        
    </wsdl:binding>

    <wsdl:service name=""GreeterSOAPService"">
        <wsdl:port binding=""tns:Greeter_SOAPBinding"" name=""GreeterSoapPort"">
            <soap:address location=""http://localhost:9000/SoapContext/SoapPort/Greeter""/>
        </wsdl:port>
        <wsdl:port binding=""tns:Ping_SOAPBinding"" name=""PingSoapPort"">
            <soap:address location=""http://localhost:9000/SoapContext/SoapPort/Ping""/>
        </wsdl:port>

    </wsdl:service>

</wsdl:definitions> ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-28 20:03:09.722,,,no_permission,,,,,,,,,,,,,111876,,,Tue Jul 28 20:03:09 UTC 2009,,,,,,0|i1aalz:,268185,,,,,,,,"28/Jul/09 20:03;dkulp;
This has been fixed for a long time.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java generate wrong portName in impl class,CXF-1048,12378738,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,jeffzhang,jeffzhang,20/Sep/07 09:55,15/Oct/08 04:52,14/Mar/19 02:28,22/Aug/08 14:15,,,,,,,,2.0.9,2.1.3,Tooling,,,,,0,"use wsdl2java to generate the codes by wsdl file followed

In GreeterImpl.java:
@javax.jws.WebService(name = ""Greeter"", serviceName = ""GreeterSOAPService"",
                      portName = ""PingSoapPort"",     <== Here is wrong, should be ""GreeterSoapPort""
                      targetNamespace = ""http://apache.org/hello_world_soap_http"",
                      wsdlLocation = ""file:hello_world.wsdl"" ,
		      endpointInterface = ""org.apache.hello_world_soap_http.Greeter"")

The greeter server can't start successfully


=== wsdl file ===

<?xml version=""1.0"" encoding=""UTF-8""?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements. See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership. The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  ""License""); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at
 
  http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<wsdl:definitions name=""HelloWorld"" targetNamespace=""http://apache.org/hello_world_soap_http"" 
    xmlns=""http://schemas.xmlsoap.org/wsdl/"" 
    xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" 
    xmlns:tns=""http://apache.org/hello_world_soap_http""
    xmlns:x1=""http://apache.org/hello_world_soap_http/types""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" 
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
    <wsdl:types>
        <schema targetNamespace=""http://apache.org/hello_world_soap_http/types"" 
            xmlns=""http://www.w3.org/2001/XMLSchema""
	    xmlns:tns=""http://apache.org/hello_world_soap_http/types""
            elementFormDefault=""qualified"">
	    <simpleType name=""MyStringType"">
		<restriction base=""string"">
		    <maxLength value=""30"" />
		</restriction>
	    </simpleType>

            <element name=""sayHi"">
                <complexType/>
            </element>
            <element name=""sayHiResponse"">
                <complexType>
                    <sequence>
                        <element name=""responseType"" type=""string""/>
                    </sequence>
                </complexType>
            </element>
            <element name=""greetMe"">
                <complexType>
                    <sequence>
                        <element name=""requestType"" type=""tns:MyStringType""/>
                    </sequence>
                </complexType>
            </element>
            <element name=""greetMeResponse"">
                <complexType>
                    <sequence>
                        <element name=""responseType"" type=""string""/>
                    </sequence>
                </complexType>
            </element>
            <element name=""greetMeOneWay"">
                <complexType>
                    <sequence>
                        <element name=""requestType"" type=""string""/>
                    </sequence>
                </complexType>
            </element>
            <element name=""pingMe"">
                <complexType/>
            </element>
            <element name=""pingMeResponse"">
                <complexType/>
            </element>
            <element name=""faultDetail"">
                <complexType>
                    <sequence>
                        <element name=""minor"" type=""short""/>
                        <element name=""major"" type=""short""/>
                    </sequence>
                </complexType>
            </element>
        </schema>
    </wsdl:types>
    <wsdl:message name=""sayHiRequest"">
        <wsdl:part element=""x1:sayHi"" name=""in""/>
    </wsdl:message>
    <wsdl:message name=""sayHiResponse"">
        <wsdl:part element=""x1:sayHiResponse"" name=""out""/>
    </wsdl:message>
    <wsdl:message name=""greetMeRequest"">
        <wsdl:part element=""x1:greetMe"" name=""in""/>
    </wsdl:message>
    <wsdl:message name=""greetMeResponse"">
        <wsdl:part element=""x1:greetMeResponse"" name=""out""/>
    </wsdl:message>
    <wsdl:message name=""greetMeOneWayRequest"">
        <wsdl:part element=""x1:greetMeOneWay"" name=""in""/>
    </wsdl:message>
    <wsdl:message name=""pingMeRequest"">
        <wsdl:part name=""in"" element=""x1:pingMe""/>
    </wsdl:message>
    <wsdl:message name=""pingMeResponse"">
        <wsdl:part name=""out"" element=""x1:pingMeResponse""/>
    </wsdl:message>		
    <wsdl:message name=""pingMeFault"">
        <wsdl:part name=""faultDetail"" element=""x1:faultDetail""/>
    </wsdl:message>
    
    <wsdl:portType name=""Greeter"">
        
        <wsdl:operation name=""greetMe"">
            <wsdl:input message=""tns:greetMeRequest"" name=""greetMeRequest""/>
            <wsdl:output message=""tns:greetMeResponse"" name=""greetMeResponse""/>
        </wsdl:operation>
        
        <wsdl:operation name=""greetMeOneWay"">
            <wsdl:input message=""tns:greetMeOneWayRequest"" name=""greetMeOneWayRequest""/>
        </wsdl:operation>
    </wsdl:portType>

    <wsdl:portType name=""Ping"">
        <wsdl:operation name=""sayHi"">
            <wsdl:input message=""tns:sayHiRequest"" name=""sayHiRequest""/>
            <wsdl:output message=""tns:sayHiResponse"" name=""sayHiResponse""/>
        </wsdl:operation>

        <wsdl:operation name=""pingMe"">
            <wsdl:input name=""pingMeRequest"" message=""tns:pingMeRequest""/>
            <wsdl:output name=""pingMeResponse"" message=""tns:pingMeResponse""/>
            <wsdl:fault name=""pingMeFault"" message=""tns:pingMeFault""/>
        </wsdl:operation> 


    </wsdl:portType>
    
    <wsdl:binding name=""Greeter_SOAPBinding"" type=""tns:Greeter"">
        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
        
        
        <wsdl:operation name=""greetMe"">
            <soap:operation soapAction=""greetMe"" style=""document""/>
            <wsdl:input name=""greetMeRequest"">
                <soap:body use=""literal""/>
            </wsdl:input>
            <wsdl:output name=""greetMeResponse"">
                <soap:body use=""literal""/>
            </wsdl:output>
        </wsdl:operation>
        
        <wsdl:operation name=""greetMeOneWay"">
            <soap:operation soapAction=""greetMeOneWay"" style=""document""/>
            <wsdl:input name=""greetMeOneWayRequest"">
                <soap:body use=""literal""/>
            </wsdl:input>
        </wsdl:operation>
        
    </wsdl:binding>
    
    <wsdl:binding name=""Ping_SOAPBinding"" type=""tns:Ping"">
        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>

        <wsdl:operation name=""sayHi"">
            <soap:operation soapAction=""sayHi"" style=""document""/>
            <wsdl:input name=""sayHiRequest"">
                <soap:body use=""literal""/>
            </wsdl:input>
            <wsdl:output name=""sayHiResponse"">
                <soap:body use=""literal""/>
            </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name=""pingMe"">
            <soap:operation soapAction=""pingMe"" style=""document""/>
            <wsdl:input>
                <soap:body use=""literal""/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use=""literal""/>
            </wsdl:output>
            <wsdl:fault name=""pingMeFault"">
                <soap:fault name=""pingMeFault"" use=""literal""/>
            </wsdl:fault>
        </wsdl:operation>

        
    </wsdl:binding>

    <wsdl:service name=""GreeterSOAPService"">
        <wsdl:port binding=""tns:Greeter_SOAPBinding"" name=""GreeterSoapPort"">
            <soap:address location=""http://localhost:9000/SoapContext/SoapPort/Greeter""/>
        </wsdl:port>
        <wsdl:port binding=""tns:Ping_SOAPBinding"" name=""PingSoapPort"">
            <soap:address location=""http://localhost:9000/SoapContext/SoapPort/Ping""/>
        </wsdl:port>

    </wsdl:service>

</wsdl:definitions>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-21 16:35:34.392,,,no_permission,,,,,,,,,,,,,111875,,,Fri Aug 22 14:15:09 UTC 2008,,,,,,0|i0v3dz:,179522,,,,,,,,"21/Sep/07 08:47;jeffzhang;the exception stack:
     [java] Exception in thread ""main"" org.apache.cxf.service.factory.ServiceCon
structionException: Could not find a matching method for operation {http://apache.org/hello_world_soap_http}sayHi
     [java]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeWSDLOperations(ReflectionServiceFactoryBean.java:323)
     [java]     at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperations(JaxWsServiceFactoryBean.java:182)
     [java]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:213)
     [java]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:269)
     [java]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:145)
     [java]     at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:89)
     [java]     at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:83)
     [java]     at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:107)
     [java]     at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:147)
     [java]     at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:287)
     [java]     at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:227)
     [java]     at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:179)
     [java]     at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:74)
     [java]     at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
     [java]     at org.apache.hello_world_soap_http.Greeter_GreeterSoapPort_Server.<init>(Greeter_GreeterSoapPort_Server.java:19)
     [java]     at org.apache.hello_world_soap_http.Greeter_GreeterSoapPort_Server.main(Greeter_GreeterSoapPort_Server.java:23)
     [java] Java Result: 1


","21/Sep/07 08:55;jeffzhang;The interesting staff is when portName is 'more bad' like ""NotPort"", the server can start successfully.

initializeWSDLOperations() in ReflectionServiceFactoryBean.java

        for (OperationInfo o : intf.getOperations()) {
           ...
        }

1. right portName: get right interface.
2. wrong portName, but it exist in wsdl file: error, exception throws.
3. wrong portName, can't find interface: server can start, but runtime has problem.
Jim say this should be a bug.","21/Aug/08 16:35;seanoc;ran against 2.2 snapshot looks like GreeterImpl is now correct but PingImpl has the incorrect portname:

@javax.jws.WebService(name = ""Ping"",
                      serviceName = ""GreeterSOAPService"",
                      portName = ""GreeterSoapPort"", <--------------------- should be PingSoapPort
                      targetNamespace = ""http://apache.org/hello_world_soap_http"",
                      wsdlLocation = ""file:test.wsdl"",
                      endpointInterface = ""org.apache.hello_world_soap_http.Ping"")
                      
public class PingImpl implements Ping {

","22/Aug/08 14:15;seanoc;Fixed: http://svn.apache.org/viewvc?view=rev&revision=688086
The ImplGenerator was not allowing for more than one port per service.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@WebMethod (exclude = true)  are not being excluded,CXF-1032,12378536,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gwatkins,gwatkins,18/Sep/07 12:28,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 20:26,2.0.1,,,,,,,2.0.3,,JAXB Databinding,,,,,0,"Methods with @WebMethod(exclude = true) are still being included when bringing in classes that will have WSDL generated.  I have tracked down the issue to the org.apache.cxf.jaxb.JAXBContextInitializer class.

I have included the replacement method here 

    private void walkReferences(Class<?> cls) {
        if (cls.getName().startsWith(""java."")
            || cls.getName().startsWith(""javax."")) {
            return;
        }
        //walk the public fields/methods to try and find all the classes.  JAXB will only load the 
        //EXACT classes in the fields/methods if they are in a different package.   Thus,
        //subclasses won't be found and the xsi:type stuff won't work at all.
        //We'll grab the public field/method types and then add the ObjectFactory stuff 
        //as well as look for jaxb.index files in those packages.
        
        Field fields[] = cls.getFields();
        for (Field f : fields) {
            addType(f.getGenericType());
        }
        Method methods[] = cls.getMethods();
        for (Method m : methods) {  
                // START The following  lines were added by GW
        	WebMethod wm = m.getAnnotation(WebMethod.class);  
        	if (null != wm){
        		if (wm.exclude()){
        			System.out.println(""Skipping method "" + m.toString());
        			continue;
        		}
        	}
                //END GW
            addType(m.getGenericReturnType());
            for (Type t : m.getGenericParameterTypes()) {
                addType(t);
            }
        }
    }

",Mac OS/X JDK 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-18 17:13:38.248,,,no_permission,,,,,,,,,,,,,111863,,,Mon Oct 22 20:26:02 UTC 2007,,,,,,0|i1aanz:,268194,,,,,,,,"18/Sep/07 17:13;dkulp;
I think I'd have to see a testcase for this.   The @WebMethod stuff is for the JAX-WS SEI interface which should have no bearing on JAXB types.    To ignore stuff in JAXB, it would be an @XmlTransient (which admittedly being ignored here).

","19/Sep/07 11:57;gwatkins;Sorry, I am not an expert with all of the annotations.  XmlTransient should work per spec, however, when I change the above code it gives me the following:  JAXB annotation is placed on a method that is not a JAXB property this problem is related to the following location:  at @javax.xml.bind.annotation.XmlTransient() ...  So is that a bug in other parts of the code?
","19/Sep/07 12:01;gwatkins;Here is the rest of the stack trace.  It looks like it is in the sun code.  It did not give me this error when I used @WebMethod(exclude = true).

        at com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder.check(IllegalAnnotationsException.java:66)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:389)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:236)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:76)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:55)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:210)
        at javax.xml.bind.ContextFinder.find(ContextFinder.java:366)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:574)
        at org.apache.cxf.jaxb.JAXBDataBinding.createJAXBContext(JAXBDataBinding.java:348)
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:177)","22/Oct/07 20:26;dkulp;
This should now be resolved as part of CXF-1121",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF servlet badly exposes the wsdl's,CXF-1031,12378518,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,seanoc,kubek2k,kubek2k,18/Sep/07 08:14,23/Jan/09 17:40,14/Mar/19 02:28,21/Jan/09 11:39,2.1,,,,,,,Invalid,,,,,,,0,"When you approach an URL http://<host>/<cxf_servlet> you get badly formed URL's to the WSDL's. 
When you use http://<host>/<cxf_servlet>/ everything is all right, so the code for generating that page needs a little correction (checking if the last character in base URL is really '/')",any,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-18 10:32:18.352,,,no_permission,,Novice,,,,,,,,,,,111862,,,Wed Jan 21 11:39:42 UTC 2009,,,,,,0|i1aao7:,268195,,,,,,,,"18/Sep/07 10:32;mazzag;I'm confused--how are you getting badly formed URL's--don't you still need to type in the ""/wsdl"" (or ""?wsdl"") ending to the URL to get to the WSDL?","18/Sep/07 10:44;kubek2k;For example, the page registred for CXF:
http://<server>/<servlet>
exposes the wsdl's without the last character of the base URL (because the URL hadn't a '/' in the end). In case You use a 
http://<server>/<servlet>/
everything is just fine. Problem is how the CXF servlet handles the base URL - it should check whether it ends with '/' or not.",21/Jan/09 11:39;seanoc;Have tested simple wsdl_first demo and http://localhost:8080/helloworld/services/hello_world?wsdl works as expected. as does http://localhost:8080/helloworld/services/ or http://localhost:8080/helloworld/services,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The given example is not correct!,CXF-1029,12378397,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,darktemplarster@gmail.com,darktemplarster@gmail.com,17/Sep/07 06:36,05/Dec/07 19:23,14/Mar/19 02:28,11/Oct/07 06:28,2.0.1,,,,,,,2.0.3,,Documentation,,,,,0,"Please check the web link :http://cwiki.apache.org/CXF20DOC/xfire-migration-guide.html 
There  are some examples for how to use service factories, but  in ""Example JAXWSServiceFactory Migration"" part , the given example is not correct:
JaxWsServerFactoryBean sf = new JaxWsServerFactoryBean();
sf.setServiceClass(MyServiceImpl.class);
sf.setAddress(""http://localhost:8080/myservice"");
sf.create();

It must use SEI or interface class to call setServiceClass, not the implementation class! Should be changed like this:
JaxWsServerFactoryBean sf = new JaxWsServerFactoryBean();
sf.setServiceBean(new MyServiceImpl());
sf.setServiceClass(MyServiceInterface.class);
sf.setAddress(""http://localhost:8080/myservice"");
sf.create();",JDK6 + Eclipse 3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-17 18:12:51.546,,,no_permission,,,,,,,,,,,,,111860,,,Tue Sep 18 02:32:39 UTC 2007,,,,,,0|i1aaon:,268197,,,,,,,,"17/Sep/07 18:12;mazzag;It's a Wiki, so you can make that fix yourself.  Please do!","18/Sep/07 02:21;njiang;I suppose the runtime need  to create a object instance from the service class, if the service bean is not been set.
I am also trying to fix it , so we do not need to change the wiki :)

But I think it not only need to change the ServerFactoryBean code , but also need to fix dozens of tests.
","18/Sep/07 02:32;jeff.yu;In fact, I remembered I asked such a question to Dan Kulp, and then it turns out that we should set the ServiceImpl class for jaxws, and we set the SEI for simple POJO front-end.
see thread here: http://www.nabble.com/Re%3A-svn-commit%3A-r562541---in--incubator-cxf-trunk-rt%3A-core-src-main-java-org-apache-cxf-interceptor--frontend-jaxws-src-main-java-org-apache-cxf-jaxws--frontend-jaxws-src-test-java-org-apache-cxf-jaxws-service--frontend-simple-src-main-java-org-apache-cxf-tf4222825.html#a12012732",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fault is being returned as general SOAPFaultException instead of specific fault,CXF-1028,12378385,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rnmixon,rnmixon,17/Sep/07 01:09,05/Dec/07 19:23,14/Mar/19 02:28,10/Oct/07 20:21,2.0.1,2.1,,,,,,2.0.2,,,,,,,1,"I posted on the cxf-user list - my WSDL and the SOAP log. On the surface things looked like they should be working. both Daniel Kulp and Jervis Liu responded.

Jervis Liu suggested I zip up my code and post it as a JIRA incident so it could be better looked at.

I have zipped up a simplified version of my code that still shows the wrong exception being caught. I did ommit the jar files (commons-logging, cxf, etc) to reduce space - so the zip is very small ~ 115KB.

I have dummied things out - no database access or anything.

My original post is titled ""Not able to catch desired Fault type"" and was posted at 8:15MST on September 12.

Below is the text of the original post. I will attach my code (as I mentioned above).

Thank you - Richard Mixon





------ Forwarded Message
From: Richard Mixon <rnmixon@qwest.net>
Date: Wed, 12 Sep 2007 20:15:46 -0700
To: <cxf-user@incubator.apache.org>
Conversation: Not able to catch desired Fault type
Subject: Not able to catch desired Fault type

I would appreciate some help trying to understand how to catch faults that are defined in my WSDL in a Java client.

My web service appears to be correctly throwing a specific Fault - MemberExistsFault - when trying to add a record and the member already exists. 

However when I catch it on the client, I am not able to catch a MemberExistsFault. Instead the exception can be caught as a
    javax.xml.ws.soap.SOAPFaultException
which in turn has a cause of
    org.apache.cxf.binding.soap.SoapFault.


Here is what the log shows on the server:
INFO: Outbound Message 
--------------------------------------
<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"">
  <soap:Body>
    <soap:Fault>
      <soap:Code>
        <soap:Value>soap:Receiver</soap:Value>
      </soap:Code>
      <soap:Reason>
        <soap:Text xml:lang =""en"">
          Member cannot be added, it is already in the database
        </soap:Text>
      </soap:Reason>
      <soap:Detail>
        <ns2:memberIdInfoType xmlns:ns2=""http://service.webservice.acme.com/"">
          <emailAddress xmlns="""">myEmail3@myDomain.com</emailAddress>
          <lastName xmlns="""">myLastName</lastName>
          <firstName xmlns="""">myFirstName3</firstName>
        </ns2:memberIdInfoType>
      </soap:Detail>
    </soap:Fault>
  </soap:Body>
</soap:Envelope>
--------------------------------------

Below are the key parts of the WSDL (I can send the whole thing if necessary).

Thanks in advance - Richard

<?xml version=""1.0"" encoding=""UTF-8""?>
<wsdl:definitions name=""MemberServiceService""
  targetNamespace=""http://service.webservice.acme.com/""
  xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/""
  xmlns:ns1=""http://service.webservice.acme.com/""
  xmlns:tns=""http://types.webservice.firedrum.com/""
  xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
  xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
  <wsdl:types>
    <xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema""
      xmlns:tns=""http://types.webservice.acme.com/""
      attributeFormDefault=""unqualified"" elementFormDefault=""unqualified""
      targetNamespace=""http://types.webservice.acme.com/"">
 ...
      <xs:element name=""MemberIdInfo""
        type=""tns:MemberIdInfoType"">
      </xs:element>
      <xs:complexType name=""MemberIdInfoType"">
        <xs:sequence>
          <xs:element name=""emailAddress"" type=""xs:string""></xs:element>
          <xs:element name=""lastName"" type=""xs:string""></xs:element>
          <xs:element name=""firstName"" type=""xs:string""></xs:element>
        </xs:sequence>
      </xs:complexType>
        </xs:schema>
  </wsdl:types>

 ...
  <wsdl:message name=""MemberExistsFault"">
   <wsdl:part name=""MemberIdInfo"" element=""tns:MemberIdInfo"">
    </wsdl:part>
  </wsdl:message>

 ...
 <wsdl:portType name=""MemberService"">

   <wsdl:operation name=""addMember"">
     <wsdl:input name=""addMember"" message=""ns1:addMember"">
     </wsdl:input>
     <wsdl:output name=""addMemberResponse""
       message=""ns1:addMemberResponse"">
     </wsdl:output>
     <wsdl:fault name=""InvalidClientFault""
       message=""ns1:InvalidClientFault"">
     </wsdl:fault>
     <wsdl:fault name=""MemberExistsFault""
       message=""ns1:MemberExistsFault"">
     </wsdl:fault>
     <wsdl:fault name=""InvalidEmailAddressFault""
       message=""ns1:InvalidEmailAddressFault"">
     </wsdl:fault>
     <wsdl:fault name=""CategoryNotFoundFault""
       message=""ns1:CategoryNotFoundFault"">
     </wsdl:fault>
     <wsdl:fault name=""CustomFieldTypeNotFoundFault""
       message=""ns1:CustomFieldTypeNotFoundFault"">
     </wsdl:fault>
         <wsdl:fault name=""AddMemberUnknownFault"" message=""ns1:AddMemberUnknownFault""></wsdl:fault>
     </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name=""MemberServiceServiceSoapBinding""
        type=""ns1:MemberService"">
  <soap12:binding style=""document""
            transport=""http://www.w3.org/2003/05/soap/bindings/HTTP/"" />            
    
    <wsdl:operation name=""addMember"">
      <soap12:operation soapAction="""" style=""document"" />
      <wsdl:input name=""addMember"">
        <soap12:body use=""literal"" />
      </wsdl:input>
      <wsdl:output name=""addMemberResponse"">
        <soap12:body use=""literal"" />
      </wsdl:output>
      <wsdl:fault name=""InvalidClientFault""/>
      <wsdl:fault name=""MemberExistsFault""/>
      <wsdl:fault name=""InvalidEmailAddressFault""/>
      <wsdl:fault name=""CategoryNotFoundFault""/>
      <wsdl:fault name=""CustomFieldTypeNotFoundFault""/>
            <wsdl:fault name=""AddMemberUnknownFault""/>
    </wsdl:operation>
    <wsdl:service name=""MemberServiceService"">
      <wsdl:port name=""MemberServicePort""
            binding=""ns1:MemberServiceServiceSoapBinding"">
      <soap12:address location=""http://localhost:8080/services/MemberService"" />
     </wsdl:port>
   </wsdl:service>
</wsdl:definitions>


------ End of Forwarded Message
",Mac OS X 10.4.10,,,,,,,,,,,,,,,,17/Sep/07 01:10;rnmixon;acmeSTP.jar;https://issues.apache.org/jira/secure/attachment/12365961/acmeSTP.jar,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-25 23:52:20.89,,,no_permission,,Unknown,,,,,,,,,,,111859,,,Wed Oct 10 23:07:04 UTC 2007,,,,,,0|i1aaov:,268198,,,,,,,,25/Sep/07 23:52;cpuffalt;I just ran into this as well. :(  A real show-stopper for me.,"26/Sep/07 18:16;dkulp;
Can you re-run wsdl2java with the latest code generators.   You apparently used 2.0.   


Your fault has:
@WebFault(name = ""MemberIdInfo"", targetNamespace = ""http://service.webservice.acme.com/"")

The latest tooling produces:
@WebFault(name = ""MemberIdInfo"", targetNamespace = ""http://types.webservice.acme.com/"")


That is a huge difference.   The ""element"" in the WSDL is in the ""types"" namespace.   In the first case, it doesn't find a matching fault in the wsdl so it just outputs the type as an ""undeclared"" fault.      The second case does match so it outputs correctly.

","26/Sep/07 18:20;dkulp;
I think this was fixed in 2.0.2 as part of CXF-926.","10/Oct/07 23:07;rnmixon;I finally did verify - and with both the cxf 2.1 snapshot and with cxf 2.0.2 this now works, throwing the correct exception types.
Thank you!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple bean files don't work in java2ws,CXF-1027,12378375,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,16/Sep/07 17:46,04/Dec/09 22:34,14/Mar/19 02:28,29/Oct/09 17:29,2.1,,,,,,,2.2.5,,Tooling,,,,,0,"While the command-line option for java2ws (-beans) purports to accept more than one file, it doesn't work due CXF-1026.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111858,,,2007-09-16 17:46:50.0,,,,,,0|i140hr:,231542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"java2ws tests (Java2WSTest) fails, but the failures are masked",CXF-1024,12378355,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,16/Sep/07 02:04,22/Feb/08 21:36,14/Mar/19 02:28,19/Feb/08 19:49,2.0.1,,,,,,,2.0.4,,Tooling,,,,,0,I will attach a patched version of JavaToWsTest that fails most test cases by removing code that accidently masked them.,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-19 19:49:33.296,,,no_permission,,,,,,,,,,,,,111855,,,Tue Feb 19 19:49:33 UTC 2008,,,,,,0|i1aapj:,268201,,,,,,,,"16/Sep/07 02:14;bmargulies;Never mind, this was a misunderstanding.","16/Sep/07 02:39;bmargulies;I was wrong. Or, to be exact, I was right.",16/Sep/07 02:41;bmargulies;testGenWrapperBean fails and nothing notices.,"19/Feb/08 19:49;dkulp;
I just checked and the test seems to be passing now.    That said, there were some WARNING level logs that are completely ignorable that should be flipped to FINE level, so I'll do that.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to call a web service using dynamic client,CXF-1022,12378282,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,julien.dumetier,julien.dumetier,14/Sep/07 13:03,05/Dec/07 19:41,14/Mar/19 02:28,17/Sep/07 09:28,2.0.2,,,,,,,Invalid,,,,,,,0,"I'm unable to call a web service. I always obtain an exception :
Unexpected character '""' (code 34) in DOCTYPE declaration; expected a space between public and system identifiers
 at [row,col {unknown-source}]: [1,50]

I'am behind a proxy on my network. Neithertheless i have made a successful call to the service using SOAPUI.

A copy a the full stack trace is join.

I made a screenshot of my classpath and i join a copy of the wsdl. I also join a testcase.","eclipse 3.3 
jdk 1.5.0_10 and jdk 1.6.0_u2",,,,,,,,,,,,,,,,14/Sep/07 13:04;julien.dumetier;ValidateEmail.wsdl;https://issues.apache.org/jira/secure/attachment/12365862/ValidateEmail.wsdl,14/Sep/07 13:09;julien.dumetier;WebServiceDynamicTest.java;https://issues.apache.org/jira/secure/attachment/12365866/WebServiceDynamicTest.java,14/Sep/07 13:05;julien.dumetier;classpath.png;https://issues.apache.org/jira/secure/attachment/12365864/classpath.png,14/Sep/07 13:04;julien.dumetier;full_stack_trace.txt;https://issues.apache.org/jira/secure/attachment/12365863/full_stack_trace.txt,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111853,,,Mon Sep 17 09:28:39 UTC 2007,,,,,,0|i1aapz:,268203,,,,,,,,"17/Sep/07 09:28;julien.dumetier;The proxy settings need to be specified using the CXF configuration. 

-Dhttp.proxyPort and -Dhttp.proxyHost are not handled by CXF.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Map entries not reconstructed on other side of WS call due to namespace mismatch (see Xfire Bug: XFIRE-842),CXF-1021,12378278,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,,pgeyman,pgeyman,14/Sep/07 12:05,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 20:54,2.0.1,,,,,,,2.0.3,,Aegis Databinding,,,,,0,"Hi,

We have come across the following bug when using XFire, so we have converted to using CXF and it seems to have the same problem.
http://jira.codehaus.org/browse/XFIRE-842

Is this a bug that is likely to be resolved soon? As it is stopping our development progressing. We are having to look at other WS enabling technology, which will affect our project completion deadlines.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-22 20:54:38.89,,,no_permission,,,,,,,,,,,,,111852,,,Mon Oct 22 20:54:38 UTC 2007,,,,,,0|i0uxbr:,178540,,,,,,,,"22/Oct/07 20:54;dkulp;
I just committed a test case that shows that this seems to work fine with the latest trunk.  It would be great if you could give the latest SNAPSHOTs a try and verify with your real world code.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2Java tool error: failed to generate codes with twoHeadersSameNameDifferentNamespace,CXF-1020,12378273,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jeff.yu,jeff.yu,14/Sep/07 10:30,30/Apr/08 15:00,14/Mar/19 02:28,20/Feb/08 19:02,2.0.1,,,,,,,2.0.5,,Tooling,,,,,0,"I am running WSDL2Java tool to generate codes, and then got the message as follow:

WSDLToJava Error : Failed to create java parameter for part [stringHeader2] in method [twoHeadersSameNameDiffNS] - this wsdl is invalid, please use the wsdlvalidator tool to validate this wsdl

I also run wsdlvalidator, it says valid WSDL, and I can get generated codes from JAXWS-RI.",windows.,,,,,,,,,,,,CXF-907,,,,14/Sep/07 10:30;jeff.yu;headerDatatype.wsdl;https://issues.apache.org/jira/secure/attachment/12365839/headerDatatype.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-20 18:24:48.561,,,no_permission,,,,,,,,,,,,,111851,,,Wed Feb 20 18:24:48 UTC 2008,,,,,,0|i0v3v3:,179599,,,,,,,,14/Sep/07 10:30;jeff.yu;attach the wsdl.,"20/Feb/08 18:24;dkulp;
I honestly thing the wsdl is invalid.   The ""stringHeader2"" part definition points to element=""StringHeader"".  However, there is no element defined in the target namespace of the wsdl.   Thus, there is not type for it.

That said, we shouldn't be getting that far.    Without ""-exsh true"", we shouldn't be processing the out of band soap headers.  It seems that for some out of band headers on the output side, we are processing them even without the flag set.   I'm going to fix that.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebFaultOutInterceptor.getFaultMessagePart() might be too draconian and it also has private visibility,CXF-1003,12378208,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,zarar,zarar,13/Sep/07 21:36,22/Feb/08 21:36,14/Mar/19 02:28,14/Dec/07 16:19,2.0.1,,,,,,,2.0.3,,JAX-WS Runtime,,,,,0,"This implementation of this method is a little draconian (at least to me).  It forces a match on the localPart and the namespace of MessagePartInfo and the fault QName before returning the MessagePartInfo.  In the case of where the exception class annotated with @WebFault (default namespace so it ""inherits"" the services) is also the fault bean (i.e.: no getFaultInfo method specified) the name of the namespace URI will never match because only mpi's that are NOT elements are going to be considered.   And since the fault class is a java class, it's corresponding MPI's getTypeQName() will always return the namespace corresponding to the package name and NOT the real namespace of the exception (which really lies behind getElementQName()).

I propose changing this method so that if no MessagePartInfo is found using the current method, we loosen the criteria and return a match based on  the elementQName.  This will also require modification of the MessagePartInfo class.  

Now the alternate is to make this method public or protected so it can be overridden.  But that's not really a solution.

I'm working on a patch but before I upload it I was wondering what the CXF team thought of this

Thanks,
Zarar

Here's the method up for review:

private MessagePartInfo getFaultMessagePart(QName qname, OperationInfo op) {
	for (FaultInfo faultInfo : op.getFaults()) {
		for (MessagePartInfo mpi : faultInfo.getMessageParts()) {
			String ns = null;
			if (mpi.isElement()) {
				ns = mpi.getElementQName().getNamespaceURI();
			} else {
				ns = mpi.getTypeQName().getNamespaceURI();
			}
			if (qname.getLocalPart().equals(mpi.getConcreteName().getLocalPart())
					&& qname.getNamespaceURI().equals(ns)) {
				return mpi;
			}
		}

	}

",Platform independent.,,,,,,,,,,,,,,,,14/Sep/07 18:02;zarar;BetterCheckForAFaultMessagePartInfo.patch;https://issues.apache.org/jira/secure/attachment/12365882/BetterCheckForAFaultMessagePartInfo.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-18 18:31:07.532,,,no_permission,,,,,,,,,,,,,111834,,,Fri Dec 14 16:14:29 UTC 2007,,,,,,0|i1aat3:,268217,,,,,,,,"14/Sep/07 18:02;zarar;I've submitted a patch which scans for a matching MessagePartInfo for a fault if the type's namespace didn't match.

To reproduce this issue all you have to do is the following:

package com.mycompany.services;
@WebService(targetNamespace=""http://mycompany.com/MyService"", ...)
public class MyService ... {
 public String doSomething() throws WebServiceException {...}
}

package com.mycompany;
@WebFault
public class WebServiceException extends Exception {
...
}

Then try calling it....

Thanks,
Zarar",14/Sep/07 18:02;zarar;I think this might even be considered a bug...,"18/Sep/07 18:31;dkulp;More thoughts at:
http://www.nabble.com/Re:-Thoughts-on-CXF-1003-tf4469823.html",05/Dec/07 16:50;zarar;Any updates regarding this? I'm surprised more people haven't run into this because it seems like you can't use @WebFault without encountering this problem.  Am I missing something?,"05/Dec/07 17:02;dkulp;
Much of this SHOULD be fixed for 2.0.3 and I think a little more for 2.0.4 SNAPSHOT.

",14/Dec/07 16:14;zarar;I've upgraded to 2.0.3 and this issue appears to be fixed.  Thanks everyone.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2Java header problem when using -exsh parameter,CXF-1001,12378161,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,julien.dumetier,julien.dumetier,13/Sep/07 13:28,05/Oct/07 16:46,14/Mar/19 02:28,14/Sep/07 04:36,2.0.1,,,,,,,2.0.2,,Tooling,,,,,0,"When using the WSDL2Java tool with the -exsh true parameter,
it seems that the methods without parameter are not generated with the header parameters.

For example, with the WSDL transmitted, i obtain this :

	@WebResult(targetNamespace = ""com.esendex.ems.soapinterface"", name = ""GetMessageLimitResult"")
	@RequestWrapper(localName = ""GetMessageLimit"", targetNamespace = ""com.esendex.ems.soapinterface"", className = ""soapinterface.ems.esendex.com.GetMessageLimit"")
	@ResponseWrapper(localName = ""GetMessageLimitResponse"", targetNamespace = ""com.esendex.ems.soapinterface"", className = ""soapinterface.ems.esendex.com.GetMessageLimitResponse"")
	@WebMethod(operationName = ""GetMessageLimit"", action = ""com.esendex.ems.soapinterface/GetMessageLimit"")
	public int getMessageLimit(@WebParam();


And i expected that :

	@WebResult(targetNamespace = ""com.esendex.ems.soapinterface"", name = ""GetMessageLimitResult"")
	@RequestWrapper(localName = ""GetMessageLimit"", targetNamespace = ""com.esendex.ems.soapinterface"", className = ""soapinterface.ems.esendex.com.GetMessageLimit"")
	@ResponseWrapper(localName = ""GetMessageLimitResponse"", targetNamespace = ""com.esendex.ems.soapinterface"", className = ""soapinterface.ems.esendex.com.GetMessageLimitResponse"")
	@WebMethod(operationName = ""GetMessageLimit"", action = ""com.esendex.ems.soapinterface/GetMessageLimit"")
	public int getMessageLimit(@WebParam(targetNamespace = ""com.esendex.ems.soapinterface"", name = ""MessengerHeader"", header = true)
	soapinterface.ems.esendex.com.MessengerHeader messengerHeader);
",JDK6 update 2,,,,,,,,,,,,,,,,13/Sep/07 13:29;julien.dumetier;AccountService.wsdl;https://issues.apache.org/jira/secure/attachment/12365727/AccountService.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111832,,,2007-09-13 13:28:30.0,,,,,,0|i1aatj:,268219,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP 1.1 Fault returned with HTTP 200 status code,CXF-999,12378155,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ntrout,ntrout,13/Sep/07 12:02,05/Oct/09 19:37,14/Mar/19 02:28,03/Oct/09 17:43,2.0.1,,,,,,,2.1.6,,Transports,,,,,2,"We have enabled schema validation for JAXB bindings.  However, if unmarshalling fails because of invalid XML, a SOAP fault is returned correctly but the HTTP response code is 200.  I am expecting an HTTP response code of 500, as it is my understanding this is part of the SOAP 1.1 specification.

--  In case of a SOAP error while processing the request, the SOAP HTTP server MUST issue an HTTP 500 ""Internal Server Error"" response and include a SOAP message in the response containing a SOAP Fault element (see section 4.4) indicating the SOAP processing error. --

It appears that the class Soap11FaultOutInterceptor is trying to set the response code correctly with the following:

message.put(org.apache.cxf.message.Message.RESPONSE_CODE, new Integer(500));

However, this appears to be happening too late.  I have a suspicion that it is happening too late in the interceptor chain.  I have a temporary fix in place.  I have registered a custom fault out interceptor.  It uses the exact same code as in Soap11FaultOutInterceptor, but my interceptor is running in phase Phase.SETUP on the outbound fault chain.  With my custom interceptor registered, the HTTP response code is correctly set to 500.  See sample from services.xml below....

<jaxws:endpoint id=""PartnerSSOWebService"" wsdlLocation=""xml/wsdl/PartnerSSOWebService.wsdl"" address=""/PartnerSSO.ws"">
        <jaxws:implementor>
            <ref bean=""PartnerSSOWebServiceImpl"" /> 
        </jaxws:implementor>
        <jaxws:inInterceptors>
            <ref bean=""DOMInflowInterceptor"" />
            <ref bean=""WSSecurityInflowInterceptor"" />
        </jaxws:inInterceptors>   
        <jaxws:outFaultInterceptors>
            <ref bean=""HttpErrorCodeFaultInterceptor"" />
        </jaxws:outFaultInterceptors>     
        <jaxws:properties>
            <entry key=""schema-validation-enabled"" value=""true"" />
        </jaxws:properties>
    </jaxws:endpoint>

","Windows XP, Orion Server 2.0.7",,,,,,,,,,,,,,,,13/Sep/07 12:05;ntrout;HttpErrorCodeFaultInterceptor.java;https://issues.apache.org/jira/secure/attachment/12365725/HttpErrorCodeFaultInterceptor.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-03 17:43:29.165,,,no_permission,,,,,,,,,,,,,111830,,,Sat Oct 03 17:43:29 UTC 2009,,,,,,0|i1aatr:,268220,,,,,,,,13/Sep/07 12:05;ntrout;Custom interceptor that gets the HTTP response code set correctly....,"03/Oct/09 17:43;dkulp;
A little while ago, we did discover on some non-buffered servlet engines, we WERE setting the response code way too late.   This has been fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2Java validate error for doc/lit bare wsdl.,CXF-996,12378111,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,jeff.yu,jeff.yu,13/Sep/07 06:45,05/Dec/07 19:23,14/Mar/19 02:28,14/Sep/07 02:44,2.0.1,,,,,,,2.0.3,,Tooling,,,,,0,"For the attached wsdl, when I am running command:

wsdl2java -validate bug.wsdl

it shows:
WSDLToJava Error : Violate WSI-BP-1.0 R2717 soapBody in the input/output of the binding operation 'pingMe' MUST have namespace attribute

but this is a document/literal bare binding.",windows.,,,,,,,,,,,,,,,,13/Sep/07 06:46;jeff.yu;bug.wsdl;https://issues.apache.org/jira/secure/attachment/12365690/bug.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111827,,,Thu Sep 13 06:46:29 UTC 2007,,,,,,0|i1aauf:,268223,,,,,,,,13/Sep/07 06:46;jeff.yu;attach the wsdl.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Text cleanup of Java2ws docs,CXF-995,12378109,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,mazzag,mazzag,13/Sep/07 06:03,30/Apr/08 14:57,14/Mar/19 02:28,19/Sep/07 07:56,,,,,,,,2.1,,,,,,,0,For Jim Ma's recent java2ws commit.,,,,,,,,,,,,,,,,,13/Sep/07 06:04;mazzag;java2wspatch.txt;https://issues.apache.org/jira/secure/attachment/12365689/java2wspatch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111826,,,2007-09-13 06:03:24.0,,,,,,0|i1aaun:,268224,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF Client Code generated by wsdl2java compile error,CXF-994,12378048,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,v.sun,v.sun,12/Sep/07 13:01,30/Apr/08 14:57,14/Mar/19 02:28,13/Sep/07 08:28,2.0.1,,,,,,,2.1,,Tooling,,,,,0,"I followed the user guide to develop Asynchronous Invocations. 
But 3 lines of client code got compiled error as following.

        System.out.println(""Invoking sayHiAsync..."");
        java.lang.String _sayHiAsync_arg0 = """";
        Future<?> _sayHiAsync__return = port.sayHiAsync(_sayHiAsync_arg0, _sayHiAsync_asyncHandler);


        System.out.println(""Invoking sayHiAsync..."");
        java.lang.String _sayHiAsync_arg0 = """";
        Response<demo.hw.server.types.SayHiResponse> _sayHiAsync__return = port.sayHiAsync(_sayHiAsync_arg0);

helloWorld.wsdl:
<?xml version=""1.0"" encoding=""utf-8""?>
<wsdl:definitions name=""HelloWorld""
	targetNamespace=""http://server.hw.demo/""
	xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
	xmlns:ns1=""http://server.hw.demo/""
	xmlns:ns2=""http://schemas.xmlsoap.org/soap/http""
	xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
	xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
	xmlns:x1=""http://server.hw.demo/types"">
	<wsdl:types>
		<xsd:schema xmlns=""http://server.hw.demo/types""
			attributeFormDefault=""unqualified"" elementFormDefault=""unqualified""
			targetNamespace=""http://server.hw.demo/types""
			xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
			<xsd:element name=""sayHi"" type=""x1:sayHi"" />
			<xsd:complexType name=""sayHi"">
				<xsd:sequence>
					<xsd:element minOccurs=""0"" name=""arg0""
						type=""xsd:string"" />
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name=""sayHiResponse"" type=""x1:sayHiResponse"" />
			<xsd:complexType name=""sayHiResponse"">
				<xsd:sequence>
					<xsd:element minOccurs=""0"" name=""return""
						type=""xsd:string"" />
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
	</wsdl:types>
	<wsdl:message name=""sayHi"">
		<wsdl:part element=""x1:sayHi"" name=""parameters""></wsdl:part>
	</wsdl:message>
	<wsdl:message name=""sayHiResponse"">
		<wsdl:part element=""x1:sayHiResponse"" name=""parameters"">
		</wsdl:part>
	</wsdl:message>
	<wsdl:portType name=""HelloWorld"">
		<wsdl:operation name=""sayHi"">
			<wsdl:input message=""ns1:sayHi"" name=""sayHi""></wsdl:input>
			<wsdl:output message=""ns1:sayHiResponse""
				name=""sayHiResponse"">
			</wsdl:output>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name=""HelloWorldSoapBinding"" type=""ns1:HelloWorld"">
		<soap:binding style=""document""
			transport=""http://schemas.xmlsoap.org/soap/http"" />
		<wsdl:operation name=""sayHi"">
			<soap:operation soapAction="""" style=""document"" />
			<wsdl:input name=""sayHi"">
				<soap:body use=""literal"" />
			</wsdl:input>
			<wsdl:output name=""sayHiResponse"">
				<soap:body use=""literal"" />
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name=""HelloWorld"">
		<wsdl:port binding=""ns1:HelloWorldSoapBinding""
			name=""HelloWorldImplPort"">
			<soap:address location=""http://localhost:9000/helloWorld"" />
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>

async.xml:
<bindings xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
          xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
          wsdlLocation=""helloWorld.wsdl""
          xmlns=""http://java.sun.com/xml/ns/jaxws"">
  <bindings node=""wsdl:definitions"">
    <enableAsyncMapping>true</enableAsyncMapping>
  </bindings>
</bindings>

Command:wsdl2java -server -client -ant -impl -b C:/Europa/workspaces/CXF/src/async.xml C:/Europa/workspaces/CXF/src/helloWorld.wsdl
        
  ","Windows XP, Eclipse 3.3.0",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111825,,,2007-09-12 13:01:48.0,,,,,,0|i13zyv:,231457,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF doesn't always honor the use of optional soap headers,CXF-993,12378022,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,maomaode,rmoquin,rmoquin,12/Sep/07 03:43,05/Oct/07 16:46,14/Mar/19 02:28,12/Sep/07 11:21,2.0.1,,,,,,,2.0.2,,Core,,,,,0,"When I use the attached WSDL to generate Java class and then call the sendNotification method, I will always get this exception:

Sep 11, 2007 11:21:05 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
        at java.util.ArrayList.RangeCheck(ArrayList.java:546)
        at java.util.ArrayList.get(ArrayList.java:321)
        at org.apache.cxf.message.MessageContentsList.get(MessageContentsList.java:76)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleHeaderPart(SoapOutInterceptor.java:179)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.writeSoapEnvelopeStart(SoapOutInterceptor.java:124)

        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:76)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:57)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
        at $Proxy72.sendNotification(Unknown Source)
        at testnotification.NotificationServiceClient.sendNotification(NotificationServiceClient.java:48)
        at testnotification.NotificationServiceClientTest.testSendNotification(NotificationServiceClientTest.java:32)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:552)
        at org.testng.internal.Invoker.invokeMethod(Invoker.java:411)
        at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:785)
        at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:114)
        at org.testng.TestRunner.privateRun(TestRunner.java:693)
        at org.testng.TestRunner.run(TestRunner.java:574)
        at org.testng.SuiteRunner.privateRun(SuiteRunner.java:241)
        at org.testng.SuiteRunner.run(SuiteRunner.java:145)
        at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:901)
        at org.testng.TestNG.runSuitesLocally(TestNG.java:863)
        at org.apache.maven.surefire.testng.TestNGExecutor.executeTestNG(TestNGExecutor.java:64)
        at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:225)
        at org.apache.maven.surefire.booter.SurefireBooter.run(SurefireBooter.java:139)
        at org.apache.maven.plugin.surefire.SurefirePlugin.execute(SurefirePlugin.java:376)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480
)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java
:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

Unless I use the -exsh true option in the wsdl2java plugin for Maven2.  Since soap headers are optional, CXF should never require them to be there.

To reproduce this issue, there is nothing special to do other than use wsdl2java to generate the java classes and then call the single webservice method.","Windows XP, CXF 2.0.1, Maven2",,,,,,,,,,,,,,,,12/Sep/07 03:45;rmoquin;messaging.wsdl;https://issues.apache.org/jira/secure/attachment/12365611/messaging.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111824,,,Wed Sep 12 03:45:57 UTC 2007,,,,,,0|i0syt3:,167116,,,,,,,,12/Sep/07 03:45;rmoquin;Here is the WSDL that will trigger this problem.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If a null parameter is passed using the ClientProxyFactoryBean, all subsequent parameters become null",CXF-992,12377984,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,jmarcus,jmarcus,11/Sep/07 15:56,05/Dec/07 19:23,14/Mar/19 02:28,22/Oct/07 21:57,2.0.1,,,,,,,2.0.3,,Aegis Databinding,,,,,0,"Steps to reproduce

1) Use Aegis for data binding and have the webservice (created using simple front end and signature having a few parameters) deployed.
2) Now using the ClientProxyFactoryBean, make a call to the webservice a parameter's value as null.

Result

All parameters after the one whose value is null, becomes null at the server","Windows XP, JDK 6",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-22 21:34:10.887,,,no_permission,,,,,,,,,,,,,111823,,,Mon Oct 22 21:34:10 UTC 2007,,,,,,0|i0uyl3:,178744,,,,,,,,"12/Sep/07 13:55;jmarcus;My suspicion is that the issue is in XMLStreamDataReader.read() method.
Look for the block,

if (elReader.isXsiNil()) {
            elReader.readToEnd();
            return null;
        }
","22/Oct/07 21:34;dkulp;
Actually, the issue is on the writing side.   The element that is getting the nil=""true"" set on it isn't being closed.    Thus, the ""readToEnd()"" reads all the way to the /soap:body ending.   I'm testing a fix now.   Hopefully will have it committed in the next 1/2 hour or so.   I'll try and get a new snapshot deployed at somepoint later tonight.



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cached file was deleted, java.io.FileNotFoundException in SWA with Logging on.",CXF-986,12377869,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jeff.yu,jeff.yu,10/Sep/07 08:09,05/Dec/07 19:23,14/Mar/19 02:28,10/Oct/07 20:19,2.0.2,,,,,,,2.0.3,,JAX-WS Runtime,,,,,0,"How to reproduce this issue.
1. Change the CachedOutputStream.java ""threshold"" from 64 * 1024 to ""100"".
2. Run the ClientServerSwaTest.java
Notice, you need to turn on the LoggingInInterceptor, (either by configuration or programtically)  then You will get the errors.

-----------------------------------------------------------------
For the SWA test, if you turn the logging on, and then you will see the error stack like:

javax.xml.ws.soap.SOAPFaultException: Cached file was deleted, java.io.FileNotFoundException: C:\tmp\att3591tmp (The system cannot find the file specified)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:175)
	at $Proxy33.echoData(Unknown Source)
	at org.apache.cxf.systest.swa.ClientServerSwaTest.testSwa(ClientServerSwaTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
	at org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
	at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
	at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)
	at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
	at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
Caused by: org.apache.cxf.interceptor.Fault: Cached file was deleted, java.io.FileNotFoundException: C:\tmp\att3591tmp (The system cannot find the file specified)
	at org.apache.cxf.interceptor.LoggingInInterceptor.handleMessage(LoggingInInterceptor.java:74)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:395)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1932)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1790)
	at org.apache.cxf.io.CacheAndWriteOutputStream.doClose(CacheAndWriteOutputStream.java:43)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:119)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:576)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
	... 22 more
Caused by: java.io.IOException: Cached file was deleted, java.io.FileNotFoundException: C:\tmp\att3591tmp (The system cannot find the file specified)
	at org.apache.cxf.io.CachedOutputStream.getInputStream(CachedOutputStream.java:283)
	at org.apache.cxf.interceptor.LoggingInInterceptor.handleMessage(LoggingInInterceptor.java:72)
	... 36 more


",windows.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-09 07:19:11.054,,,no_permission,,,,,,,,,,,,,111817,,,Wed Oct 10 20:19:42 UTC 2007,,,,,,0|i1aavb:,268227,,,,,,,,"09/Oct/07 07:19;krystianl;The same effect if you invoke service with big XML (bigger than 64*1024 = ""threshold"" from CachedOutputStream.java) and you have the LoggingInInterceptor turned on.
I tried patch from issue CXF-1059, but without success. 
","10/Oct/07 20:19;dkulp;
I just deployed a snapshot that should fix this.    I've set the threshold to 10 bytes and ran the ENTIRE test suite.   Found a BUNCH of issues that way.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong java version verification,CXF-985,12377862,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,plentz,plentz,10/Sep/07 06:01,02/Oct/07 18:25,14/Mar/19 02:28,02/Oct/07 18:25,2.0.1,,,,,,,2.0.2,,Samples,,,,,0,"In samples\common_build.xml, the java verification is wrong. It just check if java version is equals, but, must be > 1.5. A simple way to solve this is doing something like this.

    <condition property=""is.java.version.15"">
      <or>
        <equals arg1=""${ant.java.version}"" arg2=""1.5""/>
        <equals arg1=""${ant.java.version}"" arg2=""1.6""/>
      </or>
    </condition>",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111816,,,2007-09-10 06:01:59.0,,,,,,0|i1aavj:,268228,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Eclipse settings don't match checkstyle settings,CXF-982,12377829,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bmargulies,bmargulies,08/Sep/07 20:30,05/Dec/07 19:23,14/Mar/19 02:28,09/Sep/07 13:24,2.0.1,,,,,,,2.0.3,,Build system,,,,,0,"The eclipse settings are corrupt for order. They include 'w3c' instead of 'junit'. This can lead to checkstyle complaining that the order is wrong, and then 'organize' not fixing it.

It would also be good to set the java templates to add the copyright automatically.
",,,,,,,,,,,,,,,,,08/Sep/07 21:47;bmargulies;eclipseissues.txt;https://issues.apache.org/jira/secure/attachment/12365416/eclipseissues.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-09 13:24:57.696,,,no_permission,,,,,,,,,,,,,111813,,,Sun Sep 09 13:24:57 UTC 2007,,,,,,0|i1aavz:,268230,,,,,,,,"08/Sep/07 21:47;bmargulies;This repairs problems with some of the settings, and adds a template for new .xml files.",09/Sep/07 13:24;njiang;This patch has been applied in revision 574011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WSDL2Java generated code will miss the parameter for wsdl operation has ""parameterOrder"" attribute.",CXF-978,12377721,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,jeff.yu,jeff.yu,07/Sep/07 03:30,05/Oct/07 16:46,14/Mar/19 02:28,07/Sep/07 06:24,2.0.1,,,,,,,2.0.2,,Tooling,,,,,0,"By using the wsdl2java tool to generate the attached wsdl, the generated Interface will miss the parameter.
if I remove the ""parameterOrder"" attribute from the wsdl, then the generated codes will be correct.
",windows,,,,,,,,,,,,,,,,07/Sep/07 03:33;jeff.yu;logical.wsdl;https://issues.apache.org/jira/secure/attachment/12365311/logical.wsdl,07/Sep/07 03:33;jeff.yu;test.wsdl;https://issues.apache.org/jira/secure/attachment/12365310/test.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-09-07 05:09:33.578,,,no_permission,,,,,,,,,,,,,111811,,,Fri Sep 07 05:09:33 UTC 2007,,,,,,0|i13zv3:,231440,,,,,,,,07/Sep/07 03:33;jeff.yu;attach the wsdl.,"07/Sep/07 05:09;maomaode;I found that it's a bug in the runtime, the way it get the message parts is wrong, it check the service target namespace instead of the interface target namespace, it's easy to fix, hope will not break other things",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Policy distribution sample uses outdated cxf policy namespaces,CXF-975,12377642,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sergey_beryozkin,sergey_beryozkin,06/Sep/07 10:40,05/Oct/07 16:46,14/Mar/19 02:28,06/Sep/07 16:43,2.0.2,,,,,,,2.0.2,,Samples,,,,,0,"client.xml and server.xml in samples/ws_policy/ have outdated namespaces for the cxf policy schema which defines elements like externalAttachment.
They use http://cxf.apache.org/policy-config at the moment, but should instead use

http://cxf.apache.org/policy
",,,,,,,,,,,,,,,,,06/Sep/07 10:42;sergey_beryozkin;patch_cxf_975.patch;https://issues.apache.org/jira/secure/attachment/12365262/patch_cxf_975.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-06 16:43:34.844,,,no_permission,,,,,,,,,,,,,111808,,,Thu Sep 06 16:43:34 UTC 2007,,,,,,0|i1aax3:,268235,,,,,,,,06/Sep/07 16:43;dkulp;Patch applied.   Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jaxws and simple front ends do not support set serviceName and endpointName from spring configuration,CXF-974,12377633,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,06/Sep/07 08:10,05/Oct/07 16:46,14/Mar/19 02:28,07/Sep/07 16:18,2.0,2.0.1,,,,,,2.0.2,,Configuration,,,,,0,"<simple:server> <jaxws:server> do not support  setting the serviceName and endpointName , and the <simple:client>  <jaxws:client> 's attribute serviceClass type should not be ""xsd:Qname"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111807,,,2007-09-06 08:10:09.0,,,,,,0|i140dr:,231524,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WebFault(faultBean=""..."") not used",CXF-973,12377593,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,05/Sep/07 18:49,24/Apr/09 21:16,14/Mar/19 02:28,10/Feb/09 20:31,2.0.1,,,,,,,2.0.11,2.1.5,JAX-WS Runtime,,,,,1,"
If an Application exception has a WebFault annotation with a faultBean specified, the runtime should be copying the data from the Exception to the faultBean and using that in JAXB.     It should also use that when deserializing the exception.



",,,,,,,,,,,,,CXF-1244,,,,10/Feb/09 19:01;wgomes;patch.txt;https://issues.apache.org/jira/secure/attachment/12399937/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-10 19:01:22.119,,,no_permission,,,,,,,,,,,,,111806,,,Tue Feb 10 19:01:22 UTC 2009,,,,,,0|i1aaxb:,268236,,,,,,,,"04/Dec/07 22:39;dkulp;
The server side part is now working by updating the WebFaultOutInterceptor. 

Client side still needs quite a bit of work.


",10/Feb/09 19:01;wgomes;Patch to fix java.lang.NoSuchMethodException in org.apache.cxf.interceptor.ClientFaultConverter when Exception class annotated with @WebFault and doesn't contain constructor taking in fault bean argument.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefinitionParsers don't ignore namespace attributes,CXF-971,12377565,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,dandiep,dandiep,05/Sep/07 13:32,07/Sep/07 17:05,14/Mar/19 02:28,07/Sep/07 17:05,2.0,2.0.1,,,,,,2.0.2,2.1,,,,,,0,"If someone puts a namespace on a property element, it doesn't get properly ignored and cxf tries to map it as a property to the bean. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111804,,,2007-09-05 13:32:22.0,,,,,,0|i13ztj:,231433,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF doesnt handle the Doc/Literal (Bare) with Null parameter.,CXF-970,12377529,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jeff.yu,jeff.yu,05/Sep/07 07:51,05/Oct/07 16:46,14/Mar/19 02:28,17/Sep/07 21:18,2.0.1,,,,,,,2.0.2,,JAX-WS Runtime,,,,,0,"When the parameter is null, at the client, it will send the soap message like below:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body></soap:Body></soap:Envelope>

but I think the correct soap message would be:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><inString/></soap:Body></soap:Envelope>

The test case would like below code snippet: (added it in DOCBareClientServerTest.java)

    @Test
    public void testNillableParameter() throws Exception {
        URL wsdl = getClass().getResource(""/wsdl/doc_lit_bare.wsdl"");
        assertNotNull(""WSDL is null"", wsdl);

        SOAPService service = new SOAPService(wsdl, serviceName);
        assertNotNull(""Service is null"", service);

        PutLastTradedPricePortType port = service.getPort(portName,
                                                          PutLastTradedPricePortType.class);
        String result = port.nillableParameter(null);
        assertEquals(""Hello"", result);
    }

",windows,,,,,,,,,,,,,,,,17/Sep/07 07:54;jeff.yu;cxf-970.patch;https://issues.apache.org/jira/secure/attachment/12365984/cxf-970.patch,05/Sep/07 07:53;jeff.yu;doc_lit_bare.wsdl;https://issues.apache.org/jira/secure/attachment/12365149/doc_lit_bare.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-09-17 21:18:41.96,,,no_permission,,,,,,,,,,,,,111803,,,Mon Sep 17 21:18:41 UTC 2007,,,,,,0|i1aaxj:,268237,,,,,,,,05/Sep/07 07:53;jeff.yu;attach the wsdl.,"17/Sep/07 07:40;jeff.yu;with this patch, cxf will render out the element with null value, whose nillable attribute value is true.
detail please refer to this thread: http://www.nabble.com/Inter-operation-issue-against-WCF-server.-tf4412733.html","17/Sep/07 07:54;jeff.yu;updated a little bit, we only render the null element when its minOcurrs > 0.",17/Sep/07 21:18;dkulp;Patch applied.   Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS Dispatch client not throwing SOAPFaultException in Payload mode,CXF-968,12377494,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,04/Sep/07 20:48,13/Nov/09 17:27,14/Mar/19 02:28,15/Oct/09 19:59,2.0.1,,,,,,,2.2.2,,JAX-WS Runtime,,,,,0,"
If a soap fault is on the wire, the dispatch client should be throwing a SOAPFaultException.   Instead, it's returning the xml in the result Source object.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111801,,,2007-09-04 20:48:31.0,,,,,,0|i0v1jj:,179223,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2Java tool doesnt generate code for empty Input/Output (RPC/Literal),CXF-967,12377356,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,jeff.yu,jeff.yu,03/Sep/07 08:40,05/Oct/07 16:46,14/Mar/19 02:28,04/Sep/07 11:46,2.0.1,,,,,,,2.0.2,,Tooling,,,,,0,"error stack is:
------------------------------

generate.code:
     [echo] Generating code using wsdl2java...
    [mkdir] Created dir: D:\works\CAT\trunk\interop\dotnet\InteropPlugFest\wcf-interop\void-rpclit\b
uild\classes
    [mkdir] Created dir: D:\works\CAT\trunk\interop\dotnet\InteropPlugFest\wcf-interop\void-rpclit\b
uild\src
     [java] Loading FrontEnd jaxws ...
     [java] Loading DataBinding jaxb ...
     [java] wsdl2java -verbose -d D:\works\CAT\trunk\interop\dotnet\InteropPlugFest\wcf-interop\void
-rpclit\build\src D:\works\CAT\trunk\interop\dotnet\InteropPlugFest\wcf-interop\void-rpclit/wsdl/voi
drpclit.wsdl
     [java] wsdl2java - 2.1-incubator-SNAPSHOT
     [java]
     [java]
     [java] WSDLToJava Error : java.lang.NullPointerException
     [java]
     [java] org.apache.cxf.tools.common.ToolException: java.lang.NullPointerException
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:
268)
     [java]     at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
     [java] Caused by: java.lang.NullPointerException
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.ParameterProcessor.
isValidOrdering(ParameterProcessor.java:576)
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.ParameterProcessor.
process(ParameterProcessor.java:69)
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.OperationProcessor.
processMethod(OperationProcessor.java:84)
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.OperationProcessor.
process(OperationProcessor.java:58)
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.PortTypeProcessor.p
rocess(PortTypeProcessor.java:128)
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.WSDLToJavaProcessor.wsdlDefi
nitionToJavaModel(WSDLToJavaProcessor.java:87)
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.WSDLToJavaProcessor.process(
WSDLToJavaProcessor.java:59)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:
224)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:
260)
     [java]     ... 3 more
",windows,,,,,,,,,,,,,,,,03/Sep/07 08:40;jeff.yu;voidrpclit.wsdl;https://issues.apache.org/jira/secure/attachment/12364994/voidrpclit.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111800,,,Mon Sep 03 08:40:31 UTC 2007,,,,,,0|i13zzb:,231459,,,,,,,,03/Sep/07 08:40;jeff.yu;attach the wsdl.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SESSION_MAINTAIN_PROPERTY doesn't track cookies other than JSESSIONID,CXF-966,12377344,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,jsunday,jsunday,03/Sep/07 05:07,05/Oct/07 16:46,14/Mar/19 02:28,04/Sep/07 03:11,2.0.1,2.1,,,,,,2.0.2,,Transports,,,,,0,"When using CXF as a client, SESSION_MAINTAIN_PROPERTY only tracks the session id from the server if the cookie is named JSESSIONID. It does not track the session id if the server is using a different cookie name.

It should track all Set-Cookie headers from the server.",,,,,,,,,,,,,,,,,03/Sep/07 06:01;jsunday;session-maintain.patch;https://issues.apache.org/jira/secure/attachment/12364986/session-maintain.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-03 09:57:51.887,,,no_permission,,,,,,,,,,,,,111799,,,Tue Sep 04 03:11:13 UTC 2007,,,,,,0|i13zuv:,231439,,,,,,,,03/Sep/07 06:01;jsunday;Patch against 2.0.1 to track all cookies on a client session,"03/Sep/07 09:57;njiang;It take me more  ten minutes to apply your patch manually, also fixed some check style error.  :)
Next time please modify the code with code that download from svn trunk and use the svn diff to generate the patch. 
Anyway thanks for you patch.
I will commit it after the all testes are passed.",04/Sep/07 03:11;njiang;The patch was applied in the revision 572273,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF doesnt handle the Fault with primitive type (int) as fault detail.,CXF-964,12377339,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jeff.yu,jeff.yu,03/Sep/07 02:14,22/Feb/08 21:36,14/Mar/19 02:28,21/Feb/08 18:55,2.0.1,,,,,,,2.0.4,,Core,Tooling,,,,0,"Actually, there are two problems here:
1: with the wsdl, tool generate the @WebFault annotation with name ""_int"" instead of ""int"", it will cause the unmarshall problem, due to following code JaxwsServiceFactoryBean. (setFaultClassInfo method)
        mpi.getConcreteName().getLocalPart().equals(name.getLocalPart() && name.getNamespaceURI().equals(ns))
2: After make changes to the @WebFault annotation, by changing the ""_int"" to ""int"", it can be unmarshalled successfully, but it will be looking for   (String, Integer) constructor, while the generated exception class only has the (String, int) class.

Please test the attached wsdl with ""ThrowIntFault"" operation, and then you will see the problem as I described.",windows,,,,,,,,,,,,,,,,03/Sep/07 02:15;jeff.yu;fault.wsdl;https://issues.apache.org/jira/secure/attachment/12364981/fault.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111797,,,Mon Sep 03 02:15:06 UTC 2007,,,,,,0|i0sytz:,167120,,,,,,,,03/Sep/07 02:15;jeff.yu;attached the wsdl file.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis mappings not reflecting in wsdl method parameters,CXF-962,12377304,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,tawfik,tawfik,01/Sep/07 17:17,05/Oct/07 16:46,14/Mar/19 02:28,18/Sep/07 18:14,2.0.1,,,,,,,2.0.2,,,,,,,0,"I am trying to migrate from xfire to cxf but need to re-use the aegis mapping files we already have.  I have tried using both the simple frontend and the jax-ws front end but I get the same problem.  Here is my config:

<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:simple=""http://cxf.apache.org/simple""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://cxf.apache.org/simple http://cxf.apache.org/schemas/simple.xsd"">

    <import resource=""classpath:services_definition.xml"" />
    <import resource=""classpath:META-INF/cxf/cxf.xml"" />
    <import resource=""classpath:META-INF/cxf/cxf-extension-soap.xml"" />
    <import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />

   <simple:server id=""spatialQuery"" serviceClass=""ISpatialQuery"" address=""/SpatialQuery"">
      <simple:dataBinding>
         <bean class=""org.apache.cxf.aegis.databinding.AegisDatabinding"" />
      </simple:dataBinding>
      <simple:serviceBean>
         <ref bean=""spatialqueryService"" /><!-- defined in services_definition.xml -->
      </simple:serviceBean>
      <!-- did not help...
      <simple:serviceFactory>
         <ref bean=""serviceFactory""/>
      </simple:serviceFactory>
      -->
   </simple:server>
</bens>

The aegis mapping files are taking effect for the object model and the schema for all objects look as they should.  The problem is limited to method parameters.  What I get in the wsdl for one of the methods looks like this:

<complexType name=""findFeaturesByExtent"">
 <sequence>
  <element minOccurs=""0"" name=""arg0"" type=""ns0:Envelope"" /> 
  <element minOccurs=""0"" name=""arg1"" type=""ns0:SpatialQueryOptions"" /> 
  <element minOccurs=""0"" name=""arg2"" type=""string"" /> 
  </sequence>
  </complexType>

but it should be (based on the aegis mapping files and the wsdl from xfire with those same mapping files):

<xsd:element name=""findFeaturesByExtent"">
 <xsd:complexType>
 <xsd:sequence>
  <xsd:element maxOccurs=""1"" minOccurs=""1"" name=""extent"" nillable=""true"" type=""tns:Envelope"" /> 
  <xsd:element maxOccurs=""1"" minOccurs=""1"" name=""spatialQueryOptions"" nillable=""true"" type=""tns:SpatialQueryOptions"" /> 
  <xsd:element maxOccurs=""1"" minOccurs=""1"" name=""token"" nillable=""true"" type=""xsd:string"" /> 
  </xsd:sequence>
  </xsd:complexType>

Note that I do see that the mapping file for the service is being read but it is just not reflecting on the wsdl:
[01 Sep 07 09:35:25][main XMLTypeCreator DEBUG][getDocument:112]	Found mapping file : /ISpatialQuery.aegis.xml

Thank you
",,,,,,,,,,,,,,,,,12/Sep/07 12:55;bmargulies;methodfix.txt;https://issues.apache.org/jira/secure/attachment/12365635/methodfix.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-11 01:53:26.829,,,no_permission,,,,,,,,,,,,,111795,,,Wed Sep 26 16:42:08 UTC 2007,,,,,,0|i0uxfz:,178559,,,,,,,,11/Sep/07 01:53;bmargulies;I've written a unit test that confirms this report. ,"11/Sep/07 02:17;bmargulies;I see the problem.

AegisDatabinding.getParameterType calls XMLTypeCreator.createType. That method figures out all the name mapping, but the results are partially discarded, since the TypeClassInfo that comes from CreateClassInfo never makes it far enough back out to get copied into the MessagePartInfo (particularly the parameter name).

I would really prefer to see some commentary from Dan D as to how to fix this .. it looks to me as if the contents of createType(Method m, int index) needs to just be inlined into getParameterType, so that the later can push information into the MessagePartInfo. But I'm pretty new to this.
",11/Sep/07 02:18;bmargulies;This is a unit test (and a repair to a previously unused aegis.xml file) for this issue. Don't commit it unless you are also committing a fix!,"12/Sep/07 12:55;bmargulies;This patch fixes method names, but not yet minOccurs. ","12/Sep/07 13:07;dandiep;Did you include all the files in this patch? I don't see anything beyond the included unit test. that is, I don't see any fixes for the problem :-)",13/Sep/07 02:39;bmargulies;The patch attached to cxf-962 fixes this. It hasn't been reviewed or committed.,"13/Sep/07 02:39;bmargulies;Sorry, I meant 'the patch attached to CXF-984 fixes this'.",18/Sep/07 18:14;dkulp;Patch in CXF-984 is applied.   Unit test is in place.,26/Sep/07 16:42;tawfik;I have downloaded the snapshot build and verified that the issue is fixed.  Thank you!!!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In tomcat, AuthorizationPolicy object is not found in Message",CXF-961,12377271,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,31/Aug/07 20:23,05/Oct/07 16:46,14/Mar/19 02:28,31/Aug/07 21:24,2.0,2.0.1,,,,,,2.0.2,,Transports,,,,,0,"
Tomcat seems to be lowercasing the ""Authorization"" header in the HttpServletRequest, but we query for the proper-case name.   Thus, it's not finding the Authorization information and thus not creating the policy object.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111794,,,2007-08-31 20:23:38.0,,,,,,0|i1aay7:,268240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS client interfaces that inherit from other interfaces don't map all the operations,CXF-960,12377260,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,31/Aug/07 18:28,05/Oct/07 16:46,14/Mar/19 02:28,31/Aug/07 18:47,2.0,2.0.1,,,,,,2.0.2,,JAX-WS Runtime,,,,,0,"
See:  http://www.nabble.com/Re:-Schema-for-namespace-'http:--localhost-Service-already-contains-type-'foo-p12430807.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111793,,,2007-08-31 18:28:57.0,,,,,,0|i0v2kv:,179391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect namespace configuration when generating wsdl from Aegis databinding,CXF-959,12377256,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bsawyer,bsawyer,31/Aug/07 17:35,05/Oct/07 16:46,14/Mar/19 02:28,05/Sep/07 21:59,,,,,,,,2.0.2,,,,,,,1,"Following is an example service and its generated wsdl:

import com.basistech.stuff.Name;

@WebService(name=""NameService"", targetNamespace=""urn:com.basistech.service"")
public interface NameService {
    @WebMethod
     public abstract List<Name> listAvailableNames();
}

<wsdl:definitions name=""NameService"" targetNamespace=""http://nameService.basistech.com"" xmlns:ns1=""http://nameService.basistech.com"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
  <wsdl:types>
     <schema xmlns=""http://www.w3.org/2001/XMLSchema"" attributeFormDefault=""qualified"" elementFormDefault=""qualified"" targetNamespace=""http://stuff.basistech.com"">
         <complexType name=""ArrayOfName"">
             <sequence>
                  <element maxOccurs=""unbounded"" minOccurs=""0"" name=""Name"" nillable=""true"" type=""ns1:Name""/>
             </sequence>
         </complexType>
         <complexType name=""Name"">
             <sequence>
                  <element minOccurs=""0"" name=""data"" nillable=""true"" type=""string""/>
                  <element minOccurs=""0"" name=""uid"" nillable=""true"" type=""string""/>
             </sequence>
         </complexType>
      </schema>


 ArrayOfName is said to contain an element of type ns1:Name.  However, ns1 is set to ""http://nameService.basistech.com"" when Name is actually located in the ""http://stuff.basistech.com"" namespace.",Using CXF 2.0.1,,,,,,,,,,,,,,,,05/Sep/07 00:02;bmargulies;959-patches;https://issues.apache.org/jira/secure/attachment/12365126/959-patches,04/Sep/07 11:49;bmargulies;cxf-959.jar;https://issues.apache.org/jira/secure/attachment/12365070/cxf-959.jar,04/Sep/07 14:52;bmargulies;cxf-959.patch;https://issues.apache.org/jira/secure/attachment/12365086/cxf-959.patch,31/Aug/07 17:36;bsawyer;name-service.jar;https://issues.apache.org/jira/secure/attachment/12364903/name-service.jar,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,2007-08-31 18:48:57.863,,,no_permission,,,,,,,,,,,,,42061,,,Wed Sep 05 21:59:57 UTC 2007,,,,,,0|i1aayf:,268241,,,,,,,,"31/Aug/07 18:48;dkulp;
I notice in your message on the lists that you said this is for Aegis, not JAXB.   Just wanted to make sure that info is added to this bug.",04/Sep/07 11:49;bmargulies;Here is a failing unit test that demonstrates the issue here.,"04/Sep/07 11:51;bmargulies;I attached a full unit test. The problem is specific to WSDL generation. 

 Type nameType = tm.getTypeCreator().createType(Name.class); returns the correct namespace, but the WSDL assigns the wrong one.","04/Sep/07 13:37;bmargulies;The type= attribute on the Name element specifies the prefix ns1. But ns1 is otherwise occupied. The correct namespace isn't declared on the WSDL element at all. It is the TNS for the schema. So the question is, who added the type= attribute to the element, and why did it bother to add that prefix?
","04/Sep/07 14:27;bmargulies;In AegisDatabinding.createSchemas, the schema element has all the right prefixes. However, the xmlSchema object does not. The commons-schema code has a function called setNamespaceAtrtributes, but it does not actually pick up the prefixes.

ServiceWSDLBuilder.buildTypes does not put any namespace declaratons onto the element it creates (nd).  XmlSchemaSerializer.serializeSchema works from the XmlSchema, which lacks the prefixes, because the getNamedspaceContext on the XmlSchema is empty. AegisDatabinding forgot to set it.




",04/Sep/07 14:50;bmargulies;I have the fix. Patch coming momentarily.,04/Sep/07 14:52;bmargulies;Here is the fix.,"04/Sep/07 16:50;dkulp;
Digging more into this, this is actually a bug in JDOM's  DOMOutputter.   When it copies the namespaces from the JDOM element to to the W3C element, it is basically doing:
el.setAttribute(""xmlns:pfx"", uri);
instead of doing the proper namespace aware version of:
el.setAttributeNS(""http://www.w3.org/XML/1998/namespace"",
                               'xmlns:pfx"", uri);

The NodeNamespacePrefixMap in XmlSchema only looks at the properly namespaced attributes on the element.   In this case, it doesn't find any.

Anyway, the workaround in the patch works OK.


","04/Sep/07 20:18;bmargulies;How does that work? If it made the right call it would force the prefix onto the schema element's list of namespace declarations?
","04/Sep/07 20:26;dkulp;
Right.   Basically, the path right now looks like:

1) Build up JDOM version of the schema
2) Use DOMOutputter to convert JDOM to W3C DOM
3) Create XmlSchema object from W3C DOM.

In step 3, XmlSchema uses the Attribute nodes that are in the in the ""http://www.w3.org/XML/1998/namespace"" namespace to find the namespace prefixes to populate the default NamespaceContext.   However, due to the JDOM bug, it doesn't find any so the default NamespaceContext is empty.    Your fix works around that by providing a valid NamespaceContext.




","04/Sep/07 22:56;bmargulies;Aha. Do you think the XOM equivalent might be less buggy?

the
empty.
However,

",04/Sep/07 23:49;bmargulies;Here is the unit test that regresses this fix.,05/Sep/07 00:02;bmargulies;unit test,"05/Sep/07 21:59;dkulp;Patches from Benson are applied.   Major thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parsing SOAP header elements in default namespace results in NullPointerException,CXF-958,12377206,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bigdan,bigdan,31/Aug/07 03:35,02/Oct/07 18:26,14/Mar/19 02:28,02/Oct/07 18:26,2.0.1,,,,,,,2.0.2,,Soap Binding,,,,,0,"Sending the following SOAP message to a CXF web services results in a stack trace and a SOAP fault being returned.

The message looks like this:

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soapenv:Header>
      <test />
   </soapenv:Header>
   <soapenv:Body />
</soapenv:Envelope>

and the stack trace is as follows

31/08/2007 13:31:15 org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:768)
	at org.apache.cxf.headers.HeaderManagerImpl.getHeaderProcessor(HeaderManagerImpl.java:50)
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:143)
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:57)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
	at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:78)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:231)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:139)
	at org.apache.cxf.transport.servlet.CXFServlet.invoke(CXFServlet.java:271)
	at org.apache.cxf.transport.servlet.CXFServlet.doPost(CXFServlet.java:249)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111792,,,2007-08-31 03:35:26.0,,,,,,0|i0v3en:,179525,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
http://cxf.apache.org as referenced in any schema is not available,CXF-957,12377165,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,thred,thred,30/Aug/07 13:53,03/Jul/08 17:19,14/Mar/19 02:28,16/Jun/08 17:41,2.0,2.0.1,2.0.2,2.0-M1,2.0-RC,2.1,,2.0.6,2.1,Resources,,,,,2,"http://cxf.apache.org is not available. The DNS cannot resolve the hostname. This is no issue that is restricted to my nameserver. I have tried multiple and apache.org is available. 

This url is referenced in numerous .xsd files which makes it impossible to use the schemas.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-30 17:45:21.918,,,no_permission,,,,,,,,,,,,,111791,,,Mon Jun 16 17:41:08 UTC 2008,,,,,,0|i1aayn:,268242,,,,,,,,"30/Aug/07 17:45;mazzag;AFAIK there is no requirement for a Schema URI to resolve to an HTTP URL.

Glen","03/Sep/07 06:00;thred;This is correct. It does not resolve the URI of the schema, but there are schema imports like this one in the jaxws.xsd file:

<xsd:import namespace=""http://cxf.apache.org/configuration/beans"" schemaLocation=""http://cxf.apache.org/schemas/configuration/cxf-beans.xsd""/>

To execute this import it tries to request the schemaLocation URL ""http://cxf.apache.org/schemas/configuration/cxf-beans.xsd"" but can't reslove it.

Such schemaLocations are in nearly all of the xsd files. The only workaround for this is to copy the needed schemas to your own project and replace the schemaLocations with something like: ...schemaLocation=""classpath:xsd/cxf-beans.xsd""

Manfred","03/Sep/07 22:03;mazzag;I believe this is just a temporary problem until CXF leaves incubator status--then we can create the http://cxf.apache.org URL.  I supplied a patch to make this change about two months ago, because we were using another company's URI.  What do you see as a good solution until CXF gets the new URL?  Can we place the schemas in the same directory as those various files, and change the schemaLocation to ""cxf-beans.xsd""?
","04/Sep/07 06:55;thred;Thanks for you quick response!

I have just tried a relative URL in the schema location and it works, so this would be a solution. I have tried this on the two files i have in my project (jaxws.xsd and cxf-beans.xsd). In your case this means that you have to copy all the schemas to the same path. Could get messy.

Prior to the relative path i had a classpath reference in the jaxws.xsd file, which looks like the following:

<xsd:import namespace=""http://cxf.apache.org/configuration/beans"" schemaLocation=""classpath:schemas/configuration/cxf-beans.xsd""/>

But changing all the locations to the classpath reference wont be a good solution. The XSD files would only be valid for java parsers which can resolve the ""classpath:"" protocol and I'm not even sure that this works with all the xml parsers available in Java. 

Another solution, and the best one i think, would be to make the XSD files available at the current URL ""http://incubator.apache.org/cxf/"" and change the imports according to this. Drawback: someone has to remember it until the new URL is available and fix this.

Manfred","05/Apr/08 22:42;wimv;suggested solution : register the url cxf.apache.org (or any) pre release and put the gd xsd's there.
wtf's in a name?

if not, i'm keeping xf1 and i'll stop porting the sheiss.

very funny.","16/Apr/08 19:12;dkulp;
FYI: now that CXF has officially graduated, the cxf.apache.org domain will be established and our website moved there.   At that point, we can get the schemas available at the correct location.

","16/Apr/08 19:34;varner_reid@emc.com;Daniel,

Can you tell me how soon the cxf.apache.org website will be up?  We have
a product release coming up soon and I'd like to do-away with my
workaround.

Thanks,

Reid
","16/Apr/08 19:39;dkulp;
Honestly, I don't know.   It's completely in the hands of the Apache infrastructure team, which, keep in mind, is mostly volunteer individuals.   I've seen such requests take anywhere from a few hours to a few weeks.   :-(     The request has been made, I just don't know how long it will take.

Dan
","16/Jun/08 17:41;dkulp;
The schemas are live now since Apache CXF has graduated and the top level web site was created.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implicit dependency from jaxws:endpoint on httpj:engine-factory is not encoded in Spring,CXF-955,12377117,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,fdushin,fdushin,29/Aug/07 19:42,14/Sep/07 21:13,14/Mar/19 02:28,06/Sep/07 08:00,,,,,,,,2.0.2,,,,,,,0,"
Suppose an application spring-loads a jaxws:endpoint, as in:

{{{
<jaxws:endpoint 
        id=""HttpsEndpoint""
        implementor=""org.apache.cxf.systest.https.GreeterImpl""
        address=""https://localhost:9001/SoapContext/SoapPort""
        serviceName=""s:SOAPService""
        endpointName=""e:SoapPort""
        xmlns:e=""http://apache.org/hello_world""
        xmlns:s=""http://apache.org/hello_world""/>
}}}

(IMPORTANT: Note the https protocol)

And suppose further the application tries to define the TLS parameters for servicing listing on the IP port 9001, as follows:

{{{
    <httpj:engine-factory bus=""cxf"" id=""foo"">
        <!-- -->
        <!-- https://localhost:9001/... -->
        <!-- -->
        <httpj:engine port=""9001"">
            <httpj:tlsServerParameters>
                <sec:keyManagers keyPassword=""password"">
                    <sec:keyStore type=""jks"" resource=""keys/server.jks"" password=""password""/>
                </sec:keyManagers>
                <sec:trustManagers>
                    <sec:keyStore type=""jks"" resource=""keys/truststore.jks""/>
                </sec:trustManagers>
                <sec:clientAuthentication want=""true"" required=""true""/>
            </httpj:tlsServerParameters>
        </httpj:engine>
}}}

What will happen is that jaxws:endpoint will get instantiated before the httpj:engine-factory (at least on the JVM I am using).  This will cause the implicit endpoint.publish to fail, because at the time the publish occurs, there are no TLS settings established with the Bus for that physical port.

The error you will typically see is:

{{{
Caused by: java.io.IOException: Protocol mismatch: engine's protocol is http, the url protocol is https
}}}

We need to define an implicit (or explicit) Spring dependency between these beans.

A simple Spring ""depends-on"" would work, but both elements are custom XML spring beans, so schema needs to be modified, and the beans themselves need the DependsOn bean attribute, at a minimum.  Additional work may be needed to inform Spring of the actual dependency, so that it Does the Right Thing (r), and instantiates the httpj:engine-factory before the jaxws:endpoint.

I have a test case for this, which I will provide a patch for shortly (if I can't figure out how to fix the issue).",,,,,,,,,,,,,,,,,06/Sep/07 01:23;fdushin;cxf-955.patch;https://issues.apache.org/jira/secure/attachment/12365230/cxf-955.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-06 01:36:40.803,,,no_permission,,,,,,,,,,,,,111789,,,Fri Sep 14 21:13:07 UTC 2007,,,,,,0|i13zzj:,231460,,,,,,,,"06/Sep/07 01:23;fdushin;Adds support for the depends-on attribute in a jaxws:endpoint, and adds a system test for using this attribute to make a dependency on the HTTP Jetty server engine factory.  This forces the Jetty factory to load first, before the jaxws endpoint, so that the port map is properly configured.","06/Sep/07 01:36;dkulp;
Fred: do you know if this also needs to be done for jaxws:server and simple:server or the clients?

","06/Sep/07 02:37;njiang;Hi Fred, 
I just applied your patch , I could not run the HTTPSClientTest successfully. 
I think you missed the server.jks and truststore.jks in your patch.

Willem.","06/Sep/07 03:53;njiang;Do not worry Fred, I just replaced the missing *.jks with other workable jks in systest. 
The test passed.  Now I am working on the jaxws:server and simple:server , they are much easy to be fix :).
Willem.","06/Sep/07 08:00;njiang;This patch has been applied in revision 573160,  thanks Fred.","14/Sep/07 21:13;fdushin;Willem applied the fix -- thanks, Willem!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RESTful services must include a package-info.java to set the elementFormDefault to QUALIFIED,CXF-952,12377066,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,adrian.trenaman@iona.com,adrian.trenaman@iona.com,29/Aug/07 08:51,05/Oct/09 19:37,14/Mar/19 02:28,03/Oct/09 17:37,2.0.1,,,,,,,2.2.2,,Core,,,,,0,"-- Extract from email sent to cxf-dev --

Hi all,
 
I've been playing with the RESTful service support and I've come across some issues that really slowed me down :( I'm describing them here (and their workarounds) in case any users find it useful. I'm also wondering if some of these might be classified as bugs - please advise!
 
Here's what happened: based on the docu in the CXF wiki User Guide [1], I developed a RESTful service: everything was going fine until I implemented a PUT method for an update. 
 
--- in play/Contacts.java ---
 @Put
 @HttpResource(location=""/people/{id}"")  
 void updatePerson(Person person);
--- 
 
First problem: I didn't realise that I needed to have a package-info.java in the package. Without this, my Person object (which represents the payload of the PUT) has null contents in the serverside code. Through a lot of trial and error I discovered that I hadn't included package-info.java file in the Java package (it's still not clear to me why I should need it...). 
 
Also, I've found that elementFormDefault must be QUALIFIED - making this UNQUALIFIED doesn't work (see package-info.java below)
 
--- package-info.java ---
@javax.xml.bind.annotation.XmlSchema(
  namespace = ""http://play/"", 
        elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED
)
package play;
------",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-20 22:51:57.268,,,no_permission,,,,,,,,,,,,,111786,,,Sat Oct 03 17:37:20 UTC 2009,,,,,,0|i0syuf:,167122,,,,,,,,"20/Sep/07 22:51;nbryant;This seems to be related to the following code from DocLiteralInInterceptor.java:

    private void getPara(DepthXMLStreamReader xmlReader,
                         DataReader<XMLStreamReader> dr,
                         MessageContentsList parameters,
                         Iterator<MessagePartInfo> itr,
                         Message message) {

[beginning of method snipped]

            Object obj = null;
            if (hasNext) {
                QName rname = xmlReader.getName();
                while (part != null 
                    && !rname.equals(part.getConcreteName())) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

When single stepping through here in the debugger, rname is fully qualified and concreteName is not.

When the message was built by URIParameterInInterceptor / IriDecoderHelper, it was built with a namespace. Setting namespaces with @WebParam(targetNamespace=...) does not help.","03/Oct/09 17:37;dkulp;
I fixed some major issues with the URIParameterInInterceptor not honoring the namespace qualification saved in the service model a little while ago.   That should have fixed this issue.

That said, the ""proper"" fix now is to move to using JAX-RS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RCPInInterceptor not adding all the normal attributes to the message,CXF-951,12377050,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,29/Aug/07 02:35,05/Oct/07 16:46,14/Mar/19 02:28,29/Aug/07 15:14,2.0.1,,,,,,,2.0.2,,Soap Binding,,,,,0,"
The RPCInInteceptor isn't adding things like WSDL_OPERATION, WSDL_PORT, etc... that that DocLitInInterceptor is adding.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111785,,,2007-08-29 02:35:56.0,,,,,,0|i1aazb:,268245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF WSDL2Java tool doesnt work well for the WCF RPC/Literal wsdl.,CXF-950,12376973,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jeff.yu,jeff.yu,28/Aug/07 06:58,07/Sep/07 08:14,14/Mar/19 02:28,07/Sep/07 08:14,2.0.2,2.1,,,,,,2.0.2,,Tooling,,,,,0,The wsdl file is located at: http://131.107.72.15/SoapWsdl_Parameters_RpcLit_Service_Indigo/OrderedParamsService.svc?wsdl,windows,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111784,,,Fri Sep 07 08:13:36 UTC 2007,,,,,,0|i13zsv:,231430,,,,,,,,"07/Sep/07 08:13;jeff.yu;This issue has been fixed by the Trunk code, I believe it is related to the CXF-978, and it has been fixed by James Mao with http://svn.apache.org/viewvc?rev=573474&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java generated client can not be compiled,CXF-949,12376972,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,njiang,njiang,28/Aug/07 06:14,22/Feb/08 21:36,14/Mar/19 02:28,19/Feb/08 21:44,,,,,,,,2.0.3,,Tooling,,,,,0,"The client code is generated by wsdl2java using the jaxws_async sample's wsdl.
Here are part of the client code

       System.out.println(""Invoking greetMeSometime..."");
        java.lang.String _greetMeSometime_requestType = """";
        java.lang.String _greetMeSometime__return = port.greetMeSometime(_greetMeSometime_requestType);
        System.out.println(""greetMeSometime.result="" + _greetMeSometime__return);


        System.out.println(""Invoking greetMeSometimeAsync..."");
        java.lang.String _greetMeSometimeAsync_requestType = """";
        Future<?> _greetMeSometimeAsync__return = port.greetMeSometimeAsync(_greetMeSometimeAsync_requestType, _greetMeSometimeAsync_asyncHandler);


        System.out.println(""Invoking greetMeSometimeAsync..."");
        java.lang.String _greetMeSometimeAsync_requestType = """";
        Response<org.apache.hello_world_async_soap_http.types.GreetMeSometimeResponse> _greetMeSometimeAsync__return = port.greetMeSometimeAsync(_greetMeSometimeAsync_requestType);

The variable  _greetMeSometimeAsync_requestType is defined twice.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-19 21:44:18.48,,,no_permission,,,,,,,,,,,,,111783,,,Tue Feb 19 21:44:18 UTC 2008,,,,,,0|i13zxj:,231451,,,,,,,,"19/Feb/08 21:44;dkulp;
Each operation is scoped in it's own {  } block now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when ?wsdl url contains extra parameters,CXF-948,12376955,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,raykrueger,raykrueger,27/Aug/07 20:59,05/Dec/07 19:23,14/Mar/19 02:28,05/Oct/07 21:03,2.0.1,,,,,,,2.0.3,,Transports,,,,,1,"Deploying CXF via the CXFServlet, you will get a NullPointerException when your URL contains extra parameters...

This URL
http://localhost:8181/ws/soap/CurrencyExchange?wsdl&username=TEST&password=password

Causes this stack trace...
{noformat}
javax.servlet.ServletException
	org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:133)
	org.apache.cxf.transport.servlet.CXFServlet.invoke(CXFServlet.java:271)
	org.apache.cxf.transport.servlet.CXFServlet.doGet(CXFServlet.java:253)
.........
java.lang.NullPointerException
org.apache.cxf.transport.http.WSDLQueryHandler.writeResponse(WSDLQueryHandler.java:140)
	org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:129)
	org.apache.cxf.transport.servlet.CXFServlet.invoke(CXFServlet.java:271)
{noformat}

The same url will blow with the following random stuff as well...

http://localhost:8181/ws/soap/CurrencyExchange?wsdl&BOOM

Anything after the ?wsdl seems to do the trick.",Tomcat 5.0.28,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-03 21:22:44.853,,,no_permission,,,,,,,,,,,,,111782,,,Wed Oct 03 21:22:44 UTC 2007,,,,,,0|i1aazj:,268246,,,,,,,,"03/Oct/07 21:22;nbryant;This is affecting me as well, in the embedded Jetty environment when creating the service using the Endpoint API. Seems like this should be fixed because the CXF JAX-WS client will sometimes request the WSDL this way.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FaultInfoExceptions don't work when migrating from XFire to CXF,CXF-947,12376952,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,dandiep,dandiep,27/Aug/07 19:48,29/Aug/07 18:03,14/Mar/19 02:28,29/Aug/07 18:03,2.0.1,,,,,,,2.0.2,2.1,,,,,,0,"XFire included a FaultInfoException class which made it possible to supply beans as Fault details, without forcing those details to be part of your exception class. (kind of like @WebFault allows you to do with JAX-WS). However it seems that the client side part of this isn't working in CXF.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111781,,,2007-08-27 19:48:07.0,,,,,,0|i1aazr:,268247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Switch URI of BookService test from xfire.codehaus.org to cxf.apache.org,CXF-944,12376886,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,njiang,mazzag,mazzag,26/Aug/07 06:02,05/Oct/07 16:46,14/Mar/19 02:28,27/Aug/07 01:22,,,,,,,,2.0.2,,,,,,,0,,,,,,,,,,,,,,,,,,26/Aug/07 06:03;mazzag;BookServiceURI.txt;https://issues.apache.org/jira/secure/attachment/12364572/BookServiceURI.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-27 01:22:04.945,,,no_permission,,,,,,,,,,,,,111778,,,Mon Aug 27 01:22:04 UTC 2007,,,,,,0|i1ab0f:,268250,,,,,,,,27/Aug/07 01:22;njiang;This patch has been applied in the revision 569945,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Doc/Lit/Bare creating wrong element names in wsdl,CXF-943,12376885,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,26/Aug/07 01:25,05/Oct/07 16:46,14/Mar/19 02:28,04/Sep/07 20:30,2.0.1,,,,,,,2.0.2,,JAX-WS Runtime,JAXB Databinding,Tooling,,,0,"
According to section 3.6.2.2 of the jaxws spec, a method like:

   @WebMethod(operationName = ""SubmitNamespacedPO"")
   @WebResult(targetNamespace = ""http://namespace/result"", name = ""SubmitBareResponse"")
   SubmitBareResponse submitNamespacedPO(@WebParam(targetNamespace = ""http://namespace/request"") 
                 SubmitBareRequest poRequest);

with 

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""SubmitBareRequest"", namespace=""http://soapbinding.samples.jaxws.ws.test.jboss.org/"", propOrder = { ""product"" })
@XmlRootElement(namespace=""http://soapbinding.samples.jaxws.ws.test.jboss.org/"", name = ""SubmitPO"")
public class SubmitBareRequest


Should result in messages like:
  <wsdl:message name=""SubmitNamespacedPO"">
    <wsdl:part element=""ns1:SubmitNamespacedPO"" name=""SubmitNamespacedPO""/>
  </wsdl:message>
  <wsdl:message name=""SubmitNamespacedPOResponse"">
    <wsdl:part element=""ns2:SubmitNamespacedPOResponse"" name=""SubmitNamespacedPOResponse""/>
  </wsdl:message>


Instead, we are using the  XMLRootElement qnamed element and generating:
  <wsdl:message name=""SubmitNamespacedPO"">
    <wsdl:part element=""ns1:SubmitPO"" name=""SubmitNamespacedPO"">
    </wsdl:part>
  </wsdl:message>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111777,,,2007-08-26 01:25:53.0,,,,,,0|i1400f:,231464,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
throwing SOAPFault from IMPL is not correctly mapped on the wire,CXF-942,12376858,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,25/Aug/07 01:33,05/Sep/07 18:16,14/Mar/19 02:28,05/Sep/07 18:16,2.0.1,,,,,,,2.0.2,,JAX-WS Runtime,,,,,0,"
Throwing a JAX-WS SOAPFault from a service IMPL does not result in the actor or details being written to the wire.

         SOAPFactory factory = SOAPFactory.newInstance();
         SOAPFault fault = factory.createFault(""this is a fault string!"", new QName(""http://foo"", ""FooCode""));
         fault.setFaultActor(""mr.actor"");
         fault.addDetail().addChildElement(""test"");
         throw new SOAPFaultException(fault);


results in:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
<soap:Body>
<soap:Fault>
<faultcode>soap:Server</faultcode>
<faultstring>this is a fault string!</faultstring>
</soap:Fault>
</soap:Body>
</soap:Envelope>

It should have the details (test element) and the actor element.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111776,,,2007-08-25 01:33:42.0,,,,,,0|i1ab0n:,268251,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dispatch invokeOneWay is trying to parse responses,CXF-941,12376829,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,24/Aug/07 18:18,29/Jan/08 21:51,14/Mar/19 02:28,14/Dec/07 19:56,2.0.1,,,,,,,2.0.4,,JAX-WS Runtime,,,,,0,"
If I call dispatch.invokeOneWay, I'm seeing stack traces as it tries to parse a response that it shouldn't be waiting for:

    [junit] org.apache.cxf.interceptor.Fault: Unable to create envelope from given source:
    [junit]     at org.apache.cxf.jaxws.interceptors.DispatchInDatabindingInterceptor$PostDispatchSOAPHandlerInterceptor.handleMessage(DispatchInDatabindingInterceptor.java:196)
    [junit]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
    [junit]     at org.apache.cxf.jaxws.DispatchImpl.onMessage(DispatchImpl.java:289)
    [junit]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1947)
    [junit]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1794)
    [junit]     at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
    [junit]     at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:574)
    [junit]     at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
    [junit]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
    [junit]     at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:168)
    [junit]     at org.apache.cxf.jaxws.DispatchImpl.invokeOneWay(DispatchImpl.java:331)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111775,,,2007-08-24 18:18:37.0,,,,,,0|i1400n:,231465,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl defining two different operations on the same port using the same messages lead to wsdl2java producing wrong code instead of an error message,CXF-939,12376801,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,pc,pc,24/Aug/07 13:07,05/Oct/07 16:46,14/Mar/19 02:28,28/Aug/07 08:25,2.0,,,,,,,2.0.2,,Tooling,,,,,0,"A WSDL defining two operations on the same port with different names but using the same message names for request and response lead to wrong code instead of an error message. wsdl2java produces a port interface class with both operations, but with wrong runtime behavior. The request of a client invoking the second operation will be routed to the implementation of the first operation at the service provider site.

This is the code generated:

@WebService(targetNamespace = ""http://bugs.cxf/services/bug1"", name = ""myBug1Port"")
public interface MyBug1Port {

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(targetNamespace = ""http://bugs.cxf/services/bug1"", partName = ""parameters"", name = ""myBug1Response"")
    @WebMethod
    public cxf.bugs.services.bug1.ResponseDataType myBug2(
        @WebParam(targetNamespace = ""http://bugs.cxf/services/bug1"", partName = ""parameters"", name = ""myBug1"")
        cxf.bugs.services.bug1.RequestDataType parameters
    );

    @ResponseWrapper(targetNamespace = ""http://bugs.cxf/services/bug1"", className = ""cxf.bugs.services.bug1.ResponseDataType"", localName = ""myBug1Response"")
    @RequestWrapper(targetNamespace = ""http://bugs.cxf/services/bug1"", className = ""cxf.bugs.services.bug1.RequestDataType"", localName = ""myBug1"")
    @WebResult(targetNamespace = ""http://bugs.cxf/services/bug1"", name = ""myOutputString"")
    @WebMethod
    public java.lang.String myBug1(
        @WebParam(targetNamespace = ""http://bugs.cxf/services/bug1"", name = ""myInputString"")
        java.lang.String myInputString
    );
}


The jaxws ri produces an error message instead, as two operations with equal message names are illegal at the same port:

Non unique body parts! In a port, operations must have unique operation signaure on the wire for successful dispatch. In port myBug1, Operations ""myBug2"" and ""myBug1"" have the same request body block {http://bugs.cxf/services/bug1}myBug1
",,,,,,,,,,,,,,,,,24/Aug/07 13:08;pc;bug.wsdl;https://issues.apache.org/jira/secure/attachment/12364516/bug.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-28 06:55:33.796,,,no_permission,,,,,,,,,,,,,111773,,,Tue Aug 28 06:55:33 UTC 2007,,,,,,0|i0v3i7:,179541,,,,,,,,"28/Aug/07 06:55;maomaode;After i fixed this issue, and suddenly find that we already check this, you have to turn on the -validate during wsdl2java

Actually we have two checking points, one to check the wsdlDefinition (in case of wsdl11), and another is to check the serviceModel(cxf internal wsdl model)

the uniqueBodyPartValidator is at the first checking point, so if you turn on the -validate, you will see the error message similar to the one you gave

And my fix is at the second checking point, so kind of double check now

And I'm thinking of turn of the second checking point by default, so even if you don't specify the -validate, the serviceModel will be checked by default



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URIMapper did not handle Wrapped/Unwrapped operation correctly when service is in wrapped mode,CXF-938,12376768,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,24/Aug/07 03:28,29/Aug/07 03:37,14/Mar/19 02:28,24/Aug/07 08:40,,,,,,,,2.0.2,,JAX-RS,,,,,0,"URIMapper did not handle Wrapped/Unwrapped operation correctly when service is in wrapped mode. see discussion:

http://www.nabble.com/Restful-Service-client-exception-tf4314688.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111772,,,2007-08-24 03:28:47.0,,,,,,0|i1ab13:,268253,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Features does not work with a JAX-WS Dispatch Client when defined via spring config.,CXF-937,12376736,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,apaibir,apaibir,apaibir,23/Aug/07 18:15,05/Oct/07 16:46,14/Mar/19 02:28,30/Aug/07 17:31,2.0.1,,,,,,,2.0.2,,,,,,,0,"I have a JAX-WS Dispatch Client which looks as below 

Service service = Service.create(new QName(""MyService"", ""http://com.iona.cxf.type_test""));
service.addPort(portName, ""soap_binding_id"",  endpointUrl);

Dispatch<Object> dispatcher = service.createDispatch(portName, ctx, Service.Mode.PAYLOAD);
JAXBContext jaxbCtx = JAXBContext.newInstance(""com.iona.cxf.type_test.jaxbtypes"");
QName portName = new QName(""http://com.iona.cxf.type_test"", ""HttpPort"");
String endpointUrl = ""http://localhost:60123/"";
        
SimpleStruct inObj = new SimpleStruct();
Object outObj = dispatcher.invoke(inObj);

Now i have defined cxf configuration snipet
I don't see the logging interceptors being added or any custom features that i have added to the snipet.

<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xmlns:jaxws=""http://cxf.apache.org/jaxws""
       xmlns:core=""http://cxf.apache.org/core""
       xsi:schemaLocation=""
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"">

     <jaxws:client name=""{http://com.iona.cxf.type_test}HttpPort"" createdFromAPI=""true"""">
         <jaxws:features>
             <core:logging/>
         </jaxws:features>
    </jaxws:client>

</beans>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111771,,,Thu Aug 30 17:31:36 UTC 2007,,,,,,0|i1400v:,231466,,,,,,,,30/Aug/07 17:31;apaibir;This bug fix enables CXF Features to be applied via config when JAX-WS Dispatch API is being used. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"HTTPConduit requires geronimo-mail, cannot use Sun's mail jar",CXF-936,12376728,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,dkulp,dkulp,23/Aug/07 15:52,28/Aug/07 18:14,14/Mar/19 02:28,28/Aug/07 18:14,2.0.1,,,,,,,2.0.2,,Transports,,,,,0,"
The HTTPConduit directly imports:
import org.apache.geronimo.mail.util.StringBufferOutputStream;

which means we HAVE to have geronimo mail and cannot work with the Sun mail jar.   That needs to be fixed.

",,,,,,,,,,,,,,,,,27/Aug/07 17:39;mazzag;BAOSPatch.txt;https://issues.apache.org/jira/secure/attachment/12364620/BAOSPatch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-27 17:38:25.32,,,no_permission,,,,,,,,,,,,,111770,,,Mon Aug 27 17:38:25 UTC 2007,,,,,,0|i0uz13:,178816,,,,,,,,"27/Aug/07 17:38;mazzag;This is a small class[1], and since it is owned by Apache, we can incorporate this into our own source code if needed.  

Nonetheless, I switched from this class to the ByteArrayOutputStream[2] in HTTPConduit.  Only issue is I did not know the optimal default size to initialize the BAOS with--the default of 32 seems to be too small for a message--I took 1024 instead--it can be adjusted if it is thought to be too big or too small.  Also, I have not tested my changes here, as I have not researched how to work with this class.

[1] http://tinyurl.com/3asl8g
[2] http://java.sun.com/j2se/1.4.2/docs/api/java/io/ByteArrayOutputStream.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provider not working when its WSDL is supplied from spring configuration.,CXF-935,12376661,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jliu,jliu,23/Aug/07 02:10,30/Apr/08 15:00,14/Mar/19 02:28,27/Feb/08 18:26,2.0.3,,,,,,,2.0.5,,JAX-WS Runtime,,,,,2,"http://www.nabble.com/Generic-Provider%3CDOMSource%3E-server-and-WSDL-metadata-tf4287661.html

I am trying to build a generic server using Provider<DOMSource>. But I
want to make the WSDL metadata, wsdlLocation, serviceName, portName,
etc. to be user configurable, without having to re-compile the Provider
with new WebServiceProvider annotations for every new WSDL. 

I thought I'd be able to do this with an empty WebServiceProvider
annotation for my Provider like below:

<snip>
@WebServiceProvider()
@ServiceMode(value = Service.Mode.MESSAGE)
public final class GenericMessageProvider implements Provider<DOMSource>
{
<snip>

And the jaxws:endpoint element in a spring container cxf-beans.xml, like
below:

<snip>
	<jaxws:endpoint id=""myEndpoint"" implementor=""#genericProvider""
		address=""/myLocation/"" serviceName=""msp:MyService""
		wsdlLocation=""classpath:wsdl/MyWSDL.wsdl""
		xmlns:msp=""http://my.service"">
	</jaxws:endpoint>
<snip>

But this throws an NPE when I load the cxf-beans.xml using Tomcat. 
Aug 17, 2007 12:05:04 PM org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromWSDL
INFO: Creating Service {http://my.service}MyService from WSDL: classpath:wsdl/MyWSDL.wsdl
2007-08-17 12:05:05,220 4696 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory  - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@13c296b: defining beans [cxf,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.resource.ResourceManager,org.apache.cxf.binding.BindingFactoryManager,org.apache.cxf.transport.DestinationFactoryManager,org.apache.cxf.transport.ConduitInitiatorManager,org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.phase.PhaseManager,org.apache.cxf.workqueue.WorkQueueManager,org.apache.cxf.buslifecycle.BusLifeCycleManager,org.apache.cxf.endpoint.ServerRegistry,org.apache.cxf.endpoint.ServerLifeCycleManager,org.apache.cxf.endpoint.ClientLifeCycleManager,org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.endpoint.EndpointResolverRegistry,org.apache.cxf.headers.HeaderManager,org.apache.cxf.catalog.OASISCatalogManager,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,org.apache.cxf.transport.servlet.ServletTransportFactory,wsdlConfiguration,wsdlResource,myEndpoint,genericProvider,schemaValidator,responseDBSource,scriptedKeyGenerator,bdbResponseFinder,defaultResponseSource,scriptedTransformer,bsfScriptFactory]; root of factory hierarchy
2007-08-17 12:05:05,260 4736 [main] ERROR org.springframework.web.context.ContextLoader  - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'myEndpoint': Invocation of init method failed; nested exception is java.lang.NullPointerException
Caused by: 
java.lang.NullPointerException
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperationsForProvider(JaxWsServiceFactoryBean.java:196)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperations(JaxWsServiceFactoryBean.java:180)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:211)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:262)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:143)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:89)


Analysis:

 in ReflectionServiceFactoryBean.java line 956, method getEndpointInfo():

public EndpointInfo getEndpointInfo() {
        return getService().getEndpointInfo(getEndpointName());
}

the getService() returns the service model built from WSDL file, but somehow it does not contain an endpoint whose name is getEndpointName() which might come from java class. 

[Bokde, Dhiraj] I debugged it a little, and the getEndpointName() method
returns GenericProviderService instead of the serviceName in the
endpoint. 
I have tried adding the endpointName attribute as well and it didn't
make any difference.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-26 21:59:47.899,,,no_permission,,,,,,,,,,,,,111769,,,Wed Feb 27 18:26:40 UTC 2008,,,,,,0|i1ab1b:,268254,,,,,,,,26/Feb/08 21:59;dkulp;OK.   I've reproduced this on 2.1.   I'll debug into this tomorrow.,"27/Feb/08 18:26;dkulp;
It SHOULD have worked if the proper serviceName/endpointName was specified.   That said, it shouldn't have produced a NPE.

I've updated the code to be a bit more flexible with the provider+wsdl stuff.   It will now warn in this case and then provide a nice message of possible endpointNames that could be used.   That should provide a better diagnosis than a NPE.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove redundant configuration in WS-Security unit tests,CXF-934,12376596,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,coheig,coheig,22/Aug/07 14:06,15/Jul/08 12:11,14/Mar/19 02:28,23/Aug/07 09:17,2.1,,,,,,,2.0.2,,WS-* Components,,,,,0,"
In the WS-Security unit tests there is some redundant configuration in the *properties files, e.g;
""org.apache.ws.security.crypto.merlin.alias.password"" is not used by merlin. There are also some redundant xfire configuration tags. See enclosed patch for this.",,,,,,,,,,,,,,,,,22/Aug/07 14:33;coheig;cxf_config.patch;https://issues.apache.org/jira/secure/attachment/12364323/cxf_config.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111768,,,2007-08-22 14:06:16.0,,,,,,0|i1ab1j:,268255,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Https connections recreated for each request,CXF-929,12376525,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,21/Aug/07 17:17,05/Oct/07 16:46,14/Mar/19 02:28,21/Aug/07 20:23,2.0.1,,,,,,,2.0.2,,Transports,,,,,0,"
It looks like the Https connections are being recreated for each request which is causing about a 1 second handshake delay per request.       The Https stuff needs to honor keep-alives and such to make subsequent requests faster.



",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111763,,,Tue Aug 21 20:23:04 UTC 2007,,,,,,0|i13zkv:,231394,,,,,,,,"21/Aug/07 20:23;dkulp;
The HttpsURLConnectionFactory was creating a new SSLSession and SSLSocketFactory for every request.   Thus, information in the session (like the keys and such) that were previously negotiated were then invalid and new connections were required.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS code first fault mapping is not writing proper element name on wire if detail has XmlRootElement,CXF-926,12376449,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,20/Aug/07 21:46,05/Oct/07 16:46,14/Mar/19 02:28,30/Aug/07 01:44,2.0.1,,,,,,,2.0.2,,Core,JAX-WS Runtime,JAXB Databinding,,,0,"
See: http://www.nabble.com/Handle-exceptions-on-the-client-side-tf4273066.html

When getting a list of expected element names, it's not using the information from the @XmlRootElement to determine the element names.  It's only  using the WebFault information.   Unfortunately, it's not really using that correctly either.   If the @WebFault annotation doesn't put the proper namespace in, it will have issues with as well.

There is a semi-workaround:
If you completely specify the @WebFault annotation (including the targetNamespace), and then remove the @XmlRootElement annotation on the details, it would work.   Or, make sure the data in the @WebFault matches the data in the @XmlRootElement.    That's definitely not an ideal situation though.   The element names may not  be exactly what you want that way.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111760,,,Wed Aug 29 19:24:59 UTC 2007,,,,,,0|i0syun:,167123,,,,,,,,"29/Aug/07 19:24;dkulp;
Actually, according to JAX-WS spec (section 2.5), we are NOT supposed to use the XmlRootElement at all and instead use the element name generated from the WebFault annotation.   Thus, this is a problem with the serialization of the fault as we need to specify the proper QName instead of using the XmlRootElement qname.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in JAXBEncoderDecoder.unmarshall(),CXF-925,12376417,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,reboot,reboot,20/Aug/07 14:56,05/Oct/07 16:46,14/Mar/19 02:28,28/Aug/07 18:39,2.0.1,,,,,,,2.0.2,,JAXB Databinding,,,,,0,"If a WebService has a method with a parameter which is an array of a primitive type it causes a ClassCastException in JAXBEncoderDecoder.unmarshall()

Example:

@WebService
class WS {
  public void aMethod(int[] a) {
    ...;
  }
}

java.lang.ClassCastException: [I
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:263)
	at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:40)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.getPara(DocLiteralInInterceptor.java:235)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:121)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
	at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:78)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:231)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:139)
	at org.apache.cxf.transport.servlet.CXFServlet.invoke(CXFServlet.java:271)
	at org.apache.cxf.transport.servlet.CXFServlet.doPost(CXFServlet.java:249)

It would be good if CXF could handle this correctly too.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111759,,,2007-08-20 14:56:24.0,,,,,,0|i14013:,231467,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java2wsdl tool could use better error message,CXF-924,12376391,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,blin,blin,20/Aug/07 08:44,23/Jan/09 17:50,14/Mar/19 02:28,04/Sep/08 16:32,,,,,,,,2.0.9,2.1.3,,,,,,0,"Please see the mailing list discussion for the problem:

http://www.nabble.com/Java2Wsdl-Error-%3A-ClassCastException-tf4293141.html#a12221320",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-04 16:32:58.129,,,no_permission,,,,,,,,,,,,,111758,,,Thu Sep 04 16:32:58 UTC 2008,,,,,,0|i1a97j:,267958,,,,,,,,04/Sep/08 16:32;seanoc;Using 2.2-SNAPSHOT Unable to reproduce the problem,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP Conduit configuration is not loaded,CXF-922,12376378,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jarias,jarias,20/Aug/07 01:15,05/Dec/07 19:23,14/Mar/19 02:28,16/Oct/07 08:50,2.0.1,,,,,,,2.0.3,,Configuration,,,,,1,"The http conduit config is not been loaded while creating the client using spring configuration. The conduit tlsClientParameters are never set thus the connection to a https address fails.

This is the spring context file:

<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:sec=""http://cxf.apache.org/configuration/security""
	xmlns:http=""http://cxf.apache.org/transports/http/configuration""
	xmlns:jaxws=""http://java.sun.com/xml/ns/jaxws""
	xsi:schemaLocation=""
	http://cxf.apache.org/configuration/security
	http://cxf.apache.org/schemas/configuration/security.xsd
	http://cxf.apache.org/transports/http/configuration
	http://cxf.apache.org/schemas/configuration/http-conf.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"">

	<bean id=""studentWebServiceClient"" class=""com.ecot.crm.webservice.client.ws.student.StudentService"" factory-bean=""studentWebServiceClientFactory"" factory-method=""create"">
	</bean>

	<bean id=""studentWebServiceClientFactory"" class=""org.apache.cxf.jaxws.JaxWsProxyFactoryBean"">
		<property name=""serviceClass"" value=""com.ecot.crm.webservice.client.ws.student.StudentService""/>
		<property name=""address"" value=""${webservices.url}/StudentService""/>
	</bean>

	<http:conduit name=""{http://client.webservice.crm.ecot.com/ws/student}StudentService.http-conduit"">
		<http:tlsClientParameters>
		</http:tlsClientParameters>
	</http:conduit>
</beans>

There is also a post on the mailing list about this, the original messages is this: http://mail-archives.apache.org/mod_mbox/incubator-cxf-user/200708.mbox/%3c2D0EBEA1-B66E-47DD-A0CC-010A2F30ED48@rbxglobal.com%3e",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-20 05:31:17.941,,,no_permission,,,,,,,,,,,,,111757,,,Wed Nov 07 14:12:38 UTC 2007,,,,,,0|i1a97z:,267960,,,,,,,,"20/Aug/07 05:31;njiang;The conduit name should be the port's Qname + "".http-conduit"" 

<http:conduit name=""{http://client.webservice.crm.ecot.com/ws/student}StudentService.http-conduit""> 

In your configuration, it looks the http:conduit's name attribute is set to be the service's Qname + "".http-conduit""
","20/Aug/07 05:36;jarias;It is the port name, the guy who develop the service put both service name and port name to StudentService. Is that a problem to have the both with the same name?","27/Aug/07 05:44;njiang;I just checked CXF HttpConduit code,  and wrote a test case for it. I got the exception that you mentioned.
CXF uses the bus as the CXF components repository which also holds  the configuration object. When we create the client from the JaxWsProxyFactoryBean, the http conduit will be configured by  the configuration object from bus.

The key reason of this issue is that  when we create the client bean from the JaxWsProxyFactoryBean by spring, the  bus which holds the configuration beans is not create yet, and the JaxWsProxyFactoryBean will use the default bus to create the client. So the customer configuration will not be applied to the http-conduit.

Here is a way to work around, you separate the configuration beans' spring configuration file  with the client bean's spring configuration file.
Load the bus with the configuration beans' file first , and set the default bus with this created bus. Then create the client bean's context with the client bean's spring configuration file .
        
        // http conduit configuration file , it supports wildcard 
        URL config = getClass().getResource(""resources/BethalClientConfig.cxf"");
        // the client bean configuration file
        URL beans = getClass().getResource(""resources/BethalClientBeans.xml"");
        // We go through the back door, setting the default bus.
        new DefaultBusFactory().createBus(config);
        // Init the context which contains the client bean, 
        // and we use the already loaded bus to set the configuration
        BusApplicationContext context = new BusApplicationContext(beans, false);
        Greeter bethal = (Greeter)context.getBean(""Bethal"");        
        // verify the client side's setting
        verifyBethalClient(bethal);         

You can find the detail  demo code from [1]'s   testGetClientFromSpringContext()
[1]https://svn.apache.org/repos/asf/incubator/cxf/trunk/systests/src/test/java/org/apache/cxf/systest/http/HTTPConduitTest.java","04/Sep/07 19:39;dkulp;Re-opening as a work around is not a fix.   The bug still exists.
","15/Oct/07 20:49;dkulp;
I think this is now fixed on trunk, but I would greatly appreciate it if someone could verify.  ","16/Oct/07 08:50;dkulp;
I've deployed new snapshots (2.0.3-incubator-SNAPSHOT) that should fix this.
",22/Oct/07 07:31;ksampson;Would this issue affect jms:conduit the same way it affects http:conduit?  I've been having problems getting a client using Spring for configuration to contact a server listening via JMS.,"22/Oct/07 08:03;njiang;I think Dan Kulp has already fixed this issue, now the ConfigureImpl can get spring configuration application context and configure it directly to jms:conduit instance.
","06/Nov/07 08:08;yuj1@mail.neea.edu.cn;Hi,willem
   
       it's about the <http:conduit> configuration using spring ,i saw this bug was fixed in version 2.0.3,but it does throw java.io.IOException: Illegal Protocol https for HTTP URLConnection Factory again.Is there something wrong in my configuration?
    
    client-https.xml:
     <http:conduit  name=""{http://rr.ets.org/v200512/PingWebService.wsdl}PingPort.http-conduit"">
  <http:authorization>
   <sec:UserName>usernamehere</sec:UserName>
   <sec:Password>passwordhere</sec:Password>
  </http:authorization>
  <http:tlsClientParameters secureSocketProtocol=""SSL"">
  </http:tlsClientParameters>
 </http:conduit>

   client-beans.xml
     <bean id=""pingClient"" class=""org.ets.rr.v200512.pingwebservice.PingPort""
  factory-bean=""pingClientFactory"" factory-method=""create"" />
 <bean id=""pingClientFactory""
  class=""org.apache.cxf.jaxws.JaxWsProxyFactoryBean"">
  <property name=""serviceClass"" value=""org.ets.rr.v200512.pingwebservice.PingPort"" />
  <property name=""address"" value=""https://server/services/PingPort"" />
 </bean>

    in the console output,i saw the client-https.xml loaded,nothing wrong happened, and i use the apache-cxf-2.0.3-incubator-SNAPSHOT

____ KILL邮件安全网关 已经扫描了这封邮件 ____

","06/Nov/07 13:57;njiang;Hi YuJie,

Please check your http:conduit@name,  I saw the name space  that you use  was ""http://rr.ets.org/v200512/PingWebService.wsdl"".

Willem.

","07/Nov/07 05:03;yu_jie;hi,willem

 thanks for your replying,but even i change the http-conduit to <http:conduit  name=""*.http-conduit"">,the same exception was been thrown.
this is the configuration:

web.xml:
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/client-https.xml,/WEB-INF/client-beans.xml</param-value>
	</context-param>

	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

client-beans.xml:
	<bean id=""pingClient"" class=""org.ets.rr.v200512.pingwebservice.PingPort""
		factory-bean=""pingClientFactory"" factory-method=""create"" />
	<bean id=""pingClientFactory""
		class=""org.apache.cxf.jaxws.JaxWsProxyFactoryBean"">
		<property name=""serviceClass"" value=""org.ets.rr.v200512.pingwebservice.PingPort"" />
		<property name=""address"" value=""https://server/services/PingPort"" />
	</bean>

client-https.xml:
	<http:conduit  name=""*.http-conduit"">
		<http:authorization>
			<sec:UserName>usernamehere</sec:UserName>
			<sec:Password>passwordhere</sec:Password>
		</http:authorization>
		<http:tlsClientParameters secureSocketProtocol=""SSL"">
		</http:tlsClientParameters>
	</http:conduit>

and the PingPort source code:
@WebService(targetNamespace = ""http://rr.ets.org/v200512/PingWebService.wsdl"", name = ""PingPort"")
@SOAPBinding(style = SOAPBinding.Style.RPC)

public interface PingPort {

    @WebResult(targetNamespace = ""http://rr.ets.org/v200512/PingWebService.wsdl"", partName = ""response"", name = ""response"")
    @WebMethod
    public java.lang.String ping(
        @WebParam(partName = ""request"", name = ""request"")
        java.lang.String request
    );
}

the console out put:
.......
信息: Refreshing org.springframework.web.context.support.XmlWebApplicationContext@134f69a: display name [Root WebApplicationContext]; startup date [Wed Nov 07 12:57:58 CST 2007]; root of context hierarchy
2007-11-7 12:57:58 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
信息: Loading XML bean definitions from ServletContext resource [/WEB-INF/stpClient-pojo.xml]
2007-11-7 12:57:58 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
信息: Loading XML bean definitions from ServletContext resource [/WEB-INF/client-https.xml]
2007-11-7 12:58:10 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
信息: Loading XML bean definitions from ServletContext resource [/WEB-INF/client-beans.xml]
2007-11-7 12:58:10 org.springframework.context.support.AbstractApplicationContext obtainFreshBeanFactory
信息: Bean factory for application context [org.springframework.web.context.support.XmlWebApplicationContext@134f69a]: org.springframework.beans.factory.support.DefaultListableBeanFactory@4be2cc
......

is there some i miss?
","07/Nov/07 06:00;yuj1@mail.neea.edu.cn;hi,willem

thanks for your replying,but even i change the http-conduit to <http:conduit  name=""*.http-conduit"">,the same exception was also been thrown.here is my configuration:

web.xml:
 <context-param>
  <param-name>contextConfigLocation</param-name>
  <param-value>/WEB-INF/client-https.xml,/WEB-INF/client-beans.xml</param-value>
 </context-param>

 <listener>
  <listener-class>
   org.springframework.web.context.ContextLoaderListener
  </listener-class>
 </listener>

client-https.xml:
 <http:conduit  name=""*.http-conduit"">
  <http:authorization>
   <sec:UserName>usernamehere</sec:UserName>
   <sec:Password>passwordhere</sec:Password>
  </http:authorization>
  <http:tlsClientParameters secureSocketProtocol=""SSL"">
  </http:tlsClientParameters>
 </http:conduit>

client-beans.xml:
 <bean id=""pingClient"" class=""org.ets.rr.v200512.pingwebservice.PingPort""
  factory-bean=""pingClientFactory"" factory-method=""create"" />
 <bean id=""pingClientFactory""
  class=""org.apache.cxf.jaxws.JaxWsProxyFactoryBean"">
  <property name=""serviceClass"" value=""org.ets.rr.v200512.pingwebservice.PingPort"" />
  <property name=""address"" value=""https://server/services/PingPort"" />
 </bean>

and the PingPort source code:
@WebService(targetNamespace = ""http://rr.ets.org/v200512/PingWebService.wsdl"", name = ""PingPort"")
@SOAPBinding(style = SOAPBinding.Style.RPC)

public interface PingPort {
    @WebResult(targetNamespace = ""http://rr.ets.org/v200512/PingWebService.wsdl"", partName = ""response"", name = ""response"")
    @WebMethod
    public java.lang.String ping(
        @WebParam(partName = ""request"", name = ""request"")
        java.lang.String request
    );
}

is there something i miss?

____ KILL邮件安全网关 已经扫描了这封邮件 ____

","07/Nov/07 14:12;njiang;Hi YuJie,

You just need to import the client-https.xml in the client-beans.xml. The configuration will take effect within  CXF 2.0.3.

Willem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error creating client code from a WSDL generated using Aegis databinding,CXF-921,12376377,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jarias,jarias,20/Aug/07 00:58,22/Feb/08 21:36,14/Mar/19 02:28,19/Feb/08 21:40,2.0.1,,,,,,,2.0.4,,Tooling,,,,,0,"I have a WSDL generated by my server, it uses Aegis databinding. I tried to create the client using wsdl2java and it throw the following error:

$ wsdl2java -client http://localhost:8080/lor/services/DocumentService?wsdl

WSDLToJava Error : Thrown by JAXB : undefined simple or complex type 'ns2:DocumentVO'

The error doesn't happen if I switch back to a JAXB data binding in my endpoint",,,,,,,,,,,,,,,,,20/Aug/07 01:02;jarias;DocumentService.wsdl;https://issues.apache.org/jira/secure/attachment/12364117/DocumentService.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-19 21:40:37.44,,,no_permission,,,,,,,,,,,,,111756,,,Tue Feb 19 21:40:37 UTC 2008,,,,,,0|i0v3pb:,179573,,,,,,,,"19/Feb/08 21:40;dkulp;
Fairly positive this was resolved in 2.0.3/2.0.4 as part of the work Benson and I did to make sure the namespace prefixes are correctly set in Aegis as well as making sure the ""xs:import"" elements were properly created in Aegis.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-codgen-plugin needs to depend on cxf-rt-bindings-soap,CXF-919,12376278,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jrw@pobox.com,jrw@pobox.com,17/Aug/07 21:45,05/Dec/07 19:23,14/Mar/19 02:28,18/Oct/07 03:02,2.0.1,2.1,,,,,,2.0.3,,Build system,,,,,0,"The wsdl2java goal of the cxf-codegen-plugin silently generates incorrect code because it is not declared to depend on cxf-rt-bindings-soap.  The problem seems to occur when using a SOAP binding with RPC-style encoding for a message part associated with a schema element (i.e. <wsdl:part name=""..."" element=""..."").  The symptom is that an incorrect @WebParam annotation is generated, ultimately causing a CXF-based client to marshall its arguments incorrectly.

I considered the possibility that the behavior *without* the dependency on cxf-rt-bindings-soap is more correct, but my reading of section 3.5 of the WSDL 1.1 spec suggests that this is not the case.

Needless to say, adding the missing dependency fixed the problem, but it took me many hours to discover this solution.","Maven version: 2.0.7
Java version: 1.5.0_12
OS name: ""linux"" version: ""2.6.11-1.1369_fc4smp"" arch: ""i386""
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-20 04:35:35.602,,,no_permission,,,,,,,,,,,,,111754,,,Thu Oct 18 03:02:54 UTC 2007,,,,,,0|i1a987:,267961,,,,,,,,"20/Aug/07 04:35;maomaode;Here is the doc http://cwiki.apache.org/confluence/display/CXF20DOC/Maven+Integration+and+Plugin,
It said to include the jaxws frontend, which turns include the soap binding

At moment we just can not put the jaxws/soap dependencies into our code-gen plugin, there's cyclic dependencies in the testutils module, but hope we can solve it soon.","20/Aug/07 14:26;jrw@pobox.com;The issue I found is different from what is addressed in the documentation because cxf-rt-bindings-soap needs to be declared as a dependency of the plugin itself, not of the project, so the POM needs to contain a section like this:

        <plugin>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-codegen-plugin</artifactId>
          <version>${cxf-version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.cxf</groupId>
              <artifactId>cxf-rt-bindings-soap</artifactId>
              <version>${cxf-version}</version>
            </dependency>
          </dependencies>
        </plugin>","18/Oct/07 03:02;dkulp;
The wsdl2java mojo now uses the project dependencies as well.   If the project depends on soap, it will be available.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java code from wsdl2java for wrapped style if request and response have elements with the same names and different datatypes,CXF-918,12376242,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,jmi,jmi,17/Aug/07 14:54,30/Apr/08 14:54,14/Mar/19 02:28,04/Apr/08 01:11,2.0.1,2.1,,,,,,2.0.6,,Tooling,,,,,0,"wsdl2java renegares incorrect java code for some wsdls:

wsdl uses ""wrapped style"" - request and response messages for operation, both have only one message-part. Each element referenced from message-part has different compex type, where both have multiple elements. 
Problem is if there are two elements, one in request, one in response datatype, where both have the same name, but they have different datatype. In such situation a Holder is generated, which holds dataype from response. Request parameter is lost.

maybe reason is common with bug 907",java 1.5.0_09,,,,,,,,,,,,,,,,17/Aug/07 14:56;jmi;bug.wsdl;https://issues.apache.org/jira/secure/attachment/12364040/bug.wsdl,02/Apr/08 20:59;jmi;test.zip;https://issues.apache.org/jira/secure/attachment/12379185/test.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-08-20 04:29:55.949,,,no_permission,,,,,,,,,,,,,111753,,,Wed Apr 02 20:57:25 UTC 2008,,,,,,0|i0v3un:,179597,,,,,,,,"17/Aug/07 14:56;jmi;This code was generated.

    @ResponseWrapper(targetNamespace = ""http://bugs.cxf/services/bug1"", className = ""cxf.bugs.services.bug1.ResponseDataType"", localName = ""myBug1Response"")
    @RequestWrapper(targetNamespace = ""http://bugs.cxf/services/bug1"", className = ""cxf.bugs.services.bug1.RequestDataType"", localName = ""myBug1"")
    @WebMethod
    public void myBug1(
        @WebParam(targetNamespace = ""http://bugs.cxf/services/bug1"", name = ""myString1"")
        java.lang.String myString1,
        @WebParam(targetNamespace = ""http://bugs.cxf/services/bug1"", mode = Mode.INOUT, name = ""theSameNameFieldTheSameDataType"")
        javax.xml.ws.Holder<java.lang.String> theSameNameFieldTheSameDataType,
        @WebParam(targetNamespace = ""http://bugs.cxf/services/bug1"", mode = Mode.INOUT, name = ""theSameNameFieldDifferentDataType"")
        javax.xml.ws.Holder<java.lang.Integer> theSameNameFieldDifferentDataType,
        @WebParam(targetNamespace = ""http://bugs.cxf/services/bug1"", mode = Mode.OUT, name = ""myString2"")
        javax.xml.ws.Holder<java.lang.String> myString2
    );","17/Aug/07 14:58;jmi;I have question. I prefer solution, if generated code contains also wrapped classes - only one input parameter for input and return type for output.
What should configure to have such output?

ok .. i found an anwer:
add 
	  <jaxws:bindings xmlns:jaxws=""http://java.sun.com/xml/ns/jaxws"">
	      <jaxws:enableWrapperStyle>false</jaxws:enableWrapperStyle>
  	</jaxws:bindings>
to wsdl:porttype.


Is it ok, that the same block of configuration doesn't have effect when it's directly in wsdl:definitions  ?","20/Aug/07 04:29;maomaode;I can not see any wrong in the generated code, what's your expectation here?
If you want some wrapper child as a return type, then you have to name it as 'return', e.g if you want to the string2 as a return type, you can name it 'return' instead of the 'string2' in your schema. ","20/Aug/07 13:29;jmi;Instead of incorrect (because dataytype of  ""theSameNameFieldDifferentDataType"" element in wsdl is different for request and for response complex type, and that's why it cannot by hold by one common Holder)
        @WebParam(targetNamespace = ""http://bugs.cxf/services/bug1"", mode = Mode.INOUT, name = ""theSameNameFieldDifferentDataType"") 
        javax.xml.ws.Holder<java.lang.Integer> theSameNameFieldDifferentDataType, 

there should be something like (field names can be different (instead of ""Request"" and ""Response"" suffix it can be something else)), 
        @WebParam(targetNamespace = ""http://bugs.cxf/services/bug1"", name = ""theSameNameFieldDifferentDataType"") 
        java.lang.String theSameNameFieldDifferentDataTypeRequest, 
        @WebParam(targetNamespace = ""http://bugs.cxf/services/bug1"", mode = Mode.OUT, name = ""theSameNameFieldDifferentDataType"") 
        javax.xml.ws.Holder<java.lang.Integer> theSameNameFieldDifferentDataTypeResponse, 

i hope i have written it correctly, according to wsdl.","21/Aug/07 02:37;maomaode;Oh, i see the difference now, it's the same name but different type.

Seems a problem in wsdl2java, however i checked with the jaxws ri, but said the wsdl is ""error: uniqueness constraint violation"", means the same name but different type is not allowed, but i can not find any reason for it. have sent a mail to jaxws, let see what the answer is, if that is the case, then I'll check the schema and report the same error, otherwise, I'll fix it like what you said.","21/Aug/07 03:07;maomaode;Got this response from the JAX-WS mail list, just paste here:

The schema is correct. Having the same name with different types in wrapper style, there is a collision. It cannot generate a java signature as per the spec.

for e.g:
op(..., String  theSameNameFieldDifferentDataType, int theSameNameFieldDifferentDataType, ...) which would be incorrect in java. Having the same type would generate a Holder for this.
op(..., Holder<String> theSameNameFieldDifferentDataType, ...)

There are many ways to get around this:
1. Use customization to change the name of the child elements
2. Disable wrapper style using customization. I hope there will be simple command line option on wsimport in future versions.
3. Otherwise change the name of the child elements in schema

But, we should enhance the error message. Can you file a bug on this.

Jitu ","21/Aug/07 03:09;maomaode;So, the fix in wsdl2java is report an error, and you must find another way out. thanks for reporting this.","02/Apr/08 20:57;jmi;after fix it's not usable anymore.

check next attachment.
CXF-2.0.1 was able to generate code from it.
Generated code was invalid if     <enableWrapperStyle>false</enableWrapperStyle> wasn't used.
But generated code was valid if it was used.

With newer versions nothing can be generated.
But it should be possible when   <enableWrapperStyle>false</enableWrapperStyle>  is used.
Only if it's not used current error message should appear. 

Current error is: 
WSDLToJava Error: Element {http://customer.crm.tmobile.at/datatypes/manage/getcustomers}data has Having the same name wi
th different types[{http://customer.crm.tmobile.at/datatypes/manage/getcustomers}getCustomersRequestData -- {http://cust
omer.crm.tmobile.at/datatypes/manage/getcustomers}getCustomersResponseData],  In wrapper style, there is a collision as
per the spec.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.systest.handlers.DispatchHandlerInvocationTest failure,CXF-917,12376224,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,blin,blin,17/Aug/07 07:53,05/Dec/07 19:23,14/Mar/19 02:28,16/Oct/07 09:03,2.0.1,,,,,,,2.0.3,,Build system,,,,,0,"Two issues:
1. The test failed running but it was not recorded as failure by test framework, the build still indicates successful
2. The test itself failed with following exception:
Running org.apache.cxf.systest.handlers.DispatchHandlerInvocationTest
javax.xml.ws.http.HTTPException
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:185)
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:117)
        at org.apache.cxf.systest.handlers.DispatchHandlerInvocationTest.testInvokeWithDataSourcMessageModeXMLBinding(DispatchHandlerInvocationTest.java:263)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
        at org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
        at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
        at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
        at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
        at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)
        at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
        at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
        at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
        at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
        at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:138)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:163)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:84)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:244)
        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:814)
Caused by: org.apache.cxf.interceptor.Fault: GETPAYLOAD_OF_DATASOURCE_NOT_VALID_XMLHTTPBINDING
        at org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl.getPayload(LogicalMessageImpl.java:110)
        at org.apache.cxf.systest.handlers.DispatchHandlerInvocationTest$TestHandlerXMLBinding.handleMessage(DispatchHandlerInvocationTest.java:411)
        at org.apache.cxf.systest.handlers.DispatchHandlerInvocationTest$TestHandlerXMLBinding.handleMessage(DispatchHandlerInvocationTest.java:407)
        at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandleMessage(HandlerChainInvoker.java:334)
        at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandlerChain(HandlerChainInvoker.java:259)
        at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeLogicalHandlers(HandlerChainInvoker.java:124)
        at org.apache.cxf.jaxws.handler.logical.DispatchLogicalHandlerInterceptor.handleMessage(DispatchLogicalHandlerInterceptor.java:57)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
        at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:168)
        ... 26 more
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 18.862 sec
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 09:03:06.682,,,no_permission,,,,,,,,,,,,,111752,,,Tue Oct 16 09:03:06 UTC 2007,,,,,,0|i1401z:,231471,,,,,,,,16/Oct/07 09:03;dkulp;Was an extra printStackTrace on an expected exception in the testcase.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Package renaming needed from org.codehaus.xfire -> org.apache.cxf?,CXF-916,12376198,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,mazzag,mazzag,16/Aug/07 20:53,05/Oct/07 16:46,14/Mar/19 02:28,27/Aug/07 01:23,,,,,,,,2.0.2,,,,,,,0,"Under trunk/rt/databinding/aegis/test/java, the org.codehaus.xfire.aegis.inheritance package, and subpackages under it, should be renamed to 
org.apache.cxf.aegis...

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111751,,,2007-08-16 20:53:16.0,,,,,,0|i1a98f:,267962,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ASM3.0 dependency affects spring 2.0 functionality,CXF-915,12376190,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bond,bond,16/Aug/07 19:38,05/Oct/07 16:46,14/Mar/19 02:28,28/Aug/07 18:14,2.0.1,,,,,,,2.0.2,,,,,,,0,ASM 3.0 causing serious troubles in using springframework because of changed signature of constructor org.objectweb.asm.ClassWriter(parameter changed from boolean to int). As I am aware spring is using ASM 2.2.2 and in further release (v2.1)  will be using ASM 2.2.3. Therefore I suggest fall back dependency to  ASM 2.2.x. ,"sun java6, spring 2.0.6",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-17 11:49:25.053,,,no_permission,,,,,,,,,,,,,111750,,,Fri Aug 17 18:15:03 UTC 2007,,,,,,0|i0v3gn:,179534,,,,,,,,"17/Aug/07 09:01;bond;I must take back words ""serious troubles"" and lower the priority. My problems were caused most probably by the hibernate incompatibility with asm 3.0/2.2.x.

Now I am not sure whether  asm 3.0 affects the spring functionality, but as some api changed in new ASM 3.0 it is possible. Therefore it would be wise to depend on the same asm version as spring does. ASM itself doesn't guarantee backward compatibility.","17/Aug/07 11:49;dkulp;Just FYI:   the ASM use in CXF is completely optional (although not marked as optional in the pom).   If ASM is not found or there is a problem with ASM, it falls back to a slower reflection based routine.   Thus, you should be able to exclude the asm from the jaxws dependency just fine and everything should work.   I'll check if ASM 2.2.x will work or not. If so, I'll drop the version to 2.2.3.","17/Aug/07 18:15;dkulp;OK, I'm wrong.    It's doesn't actually work correctly.   In most cases, it will work if ASM is not available at all, but if an older ASM is found, it doesn't work properly.   I have some fixes going in that will allow it to work with either ASM 2.2.x or 3.x.    It will also detect if it's 1.5.x and if so, properly do the fallback.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
output jaxb stacktrace when log to FINE level in running hello_world sample.,CXF-914,12376134,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,seanoc,jeff.yu,jeff.yu,16/Aug/07 08:36,08/Dec/08 17:03,14/Mar/19 02:28,08/Dec/08 17:03,2.0.1,,,,,,,2.2,,JAXB Databinding,,,,,0,"By setting the Log Level to FINE level, and then run the samples/hello_world sample
You would see this error stack in the server-side log.

--------------------------------
FINE: Unable to inject org/apache/hello_world_soap_http/types/GreetMe$JaxbAccessorF_requestType
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:125)
	at com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:48)
	at com.sun.xml.bind.v2.runtime.reflect.opt.AccessorInjector.prepare(AccessorInjector.java:51)
	at com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedAccessorFactory.get(OptimizedAccessorFactory.java:128)
	at com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection.optimize(Accessor.java:204)
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.<init>(TransducedAccessor.java:195)
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor.get(TransducedAccessor.java:137)
	at com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty.<init>(SingleElementLeafProperty.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
	at com.sun.xml.bind.v2.runtime.property.PropertyFactory.create(PropertyFactory.java:88)
	at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.<init>(ClassBeanInfoImpl.java:135)
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getOrCreate(JAXBContextImpl.java:432)
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:265)
	at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:76)
	at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:210)
	at javax.xml.bind.ContextFinder.find(ContextFinder.java:366)
	at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:574)
	at org.apache.cxf.jaxb.JAXBDataBinding.createJAXBContext(JAXBDataBinding.java:370)
	at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:180)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:214)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:262)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:143)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:89)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:82)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:107)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:146)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:285)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:226)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:178)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:74)
	at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
	at demo.hw.server.Server.<init>(Server.java:30)
	at demo.hw.server.Server.main(Server.java:34)
Caused by: java.lang.LinkageError: duplicate class definition: org/apache/hello_world_soap_http/types/GreetMe$JaxbAccessorF_requestType
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:620)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:465)
	... 45 more",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-05 14:30:36.305,,,no_permission,,,,,,,,,,,,,111749,,,Mon Dec 08 17:03:33 UTC 2008,,,,,,0|i1a98n:,267963,,,,,,,,"05/Sep/07 14:30;mazzag;This issue has been linked to a similar problem with Metro (due to common JAXB, perhaps):
http://www.nabble.com/Re%3A-JAXB-is-throwing-java.lang.reflect.InvocationTargetException-%28GF-v2b58%29-p12496617.html
",08/Dec/08 17:03;seanoc;tested against latest 2.2 snapshot and the problem no longer exists.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java throw NP exception working on simple frontend generated wsdl file,CXF-913,12376130,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jeffzhang,jeffzhang,16/Aug/07 08:07,16/Aug/07 10:03,14/Mar/19 02:28,16/Aug/07 10:03,2.0.1,,,,,,,2.0.1,,Tooling,,,,,0,"Use simple frontend to create web service, get wsdl file from http://localhost:8080/Hello?wsdl
wsdl2java -verbose  hello.wsdl
Loading FrontEnd jaxws ...
Loading DataBinding jaxb ...
wsdl2java -verbose hello.wsdl
wsdl2java - 2.0.1-incubator


WSDLToJava Error : java.lang.NullPointerException

org.apache.cxf.tools.common.ToolException: java.lang.NullPointerException
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:242)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
Caused by: java.lang.NullPointerException
        at java.util.concurrent.ConcurrentHashMap.hash(ConcurrentHashMap.java:157)
        at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:730)
        at org.apache.cxf.configuration.spring.SpringBeanMap.get(SpringBeanMap.java:191)
        at org.apache.cxf.transport.DestinationFactoryManagerImpl.getDestinationFactory(DestinationFactoryManagerImpl.java:99)
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildEndpoint(WSDLServiceBuilder.java:456)
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:266)
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:154)
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:143)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:161)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:234)
        ... 3 more


wsdl file: (no SOAP binding)

<?xml version=""1.0"" encoding=""utf-8""?><wsdl:definitions xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:ns1=""http://DefaultNamespace"" xmlns:ns2=""http://schemas.xmlsoap.org/soap/http"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""ITest"" targetNamespace=""http://DefaultNamespace"">
  <wsdl:types>
<xsd:schema xmlns=""http://DefaultNamespace"" attributeFormDefault=""unqualified"" elementFormDefault=""qualified"" targetNamespace=""http://DefaultNamespace"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
<xsd:element name=""method2"">
<xsd:complexType>
<xsd:sequence/>
</xsd:complexType>
</xsd:element>
<xsd:element name=""method2Response"">
<xsd:complexType>
<xsd:sequence/>
</xsd:complexType>
</xsd:element>
<xsd:element name=""method1"">
<xsd:complexType>
<xsd:sequence>
<xsd:element name=""arg00"" nillable=""true"" type=""xsd:string""/>
<xsd:element name=""arg11"" nillable=""true"" type=""xsd:string""/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name=""method1Response"">
<xsd:complexType>
<xsd:sequence/>
</xsd:complexType>
</xsd:element>
</xsd:schema>
  </wsdl:types>
  <wsdl:message name=""method2Response"">
    <wsdl:part element=""ns1:method2Response"" name=""method2Response"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name=""method2"">
    <wsdl:part element=""ns1:method2"" name=""method2"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name=""method1Response"">
    <wsdl:part element=""ns1:method1Response"" name=""method1Response"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name=""method1"">
    <wsdl:part element=""ns1:method1"" name=""method1"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name=""ITestPortType"">
    <wsdl:operation name=""method2"">
      <wsdl:input message=""ns1:method2"" name=""method2"">
    </wsdl:input>
      <wsdl:output message=""ns1:method2Response"" name=""method2Response"">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name=""method1"">
      <wsdl:input message=""ns1:method1"" name=""method1"">
    </wsdl:input>
      <wsdl:output message=""ns1:method1Response"" name=""method1Response"">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name=""ITestSoapBinding"" type=""ns1:ITestPortType"">
    <wsdl:operation name=""method1"">
      <wsdl:input name=""method1"">
      </wsdl:input>
      <wsdl:output name=""method1Response"">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name=""method2"">
      <wsdl:input name=""method2"">
      </wsdl:input>
      <wsdl:output name=""method2Response"">
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name=""ITest"">
    <wsdl:port binding=""ns1:ITestSoapBinding"" name=""ITestPort"">
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>",cxf 2.0.1,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111748,,,Thu Aug 16 10:03:37 UTC 2007,,,,,,0|i0v2y7:,179451,,,,,,,,"16/Aug/07 10:03;jeffzhang;use wrong env (old cxf), simple front generate missed SOAP part wsdl file. I just use newest (2.0.1) cxf, wsdl file is correct.
...
wsdl:binding name=""WebapiSoapBinding"" type=""ns1:WebapiPortType"">
<soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
	<wsdl:operation name=""youtubePopular"">
<soap:operation soapAction="""" style=""document""/>
	<wsdl:input name=""youtubePopular"">
<soap:body use=""literal""/>
</wsdl:input>
	<wsdl:output name=""youtubePopularResponse"">
<soap:body use=""literal""/>
</wsdl:output>
</wsdl:operation>
	<wsdl:operation name=""eventVenues"">
<soap:operation soapAction="""" style=""document""/>
	<wsdl:input name=""eventVenues"">
<soap:body use=""literal""/>
</wsdl:input>
	<wsdl:output name=""eventVenuesResponse"">
<soap:body use=""literal""/>
</wsdl:output>
</wsdl:operation>
</wsdl:binding>

and wsdl2java work fine. this issue should be closed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl goal of the codegen plugin turns off all maven output if the 'quiet' tag is set...,CXF-912,12376115,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,jbrosenberg,jbrosenberg,16/Aug/07 03:25,05/Oct/07 16:46,14/Mar/19 02:28,20/Aug/07 09:56,2.1,,,,,,,2.0.2,,,,,,,0,"if I set the quiet arg to the java2wsdl goal of the cxf codegen plugin, it turns off all the output for everything maven does subsequently....

I can't see how or why this should be, in looking at the plugin source code.....unless the <quiet> tag has global meaning within maven in general?

Here's the maven pom.xml snippet that I'm using....If I don't set the quiet tag there, then my maven build does several things after running the java2wsdl, and there's lots of output....If I set the quiet tag, then I don't see anything else at all (not a peep) until maven completes (but it does seem to do more work, I can see the evidence of it in the generated build artifacts, etc.)...

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-codegen-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>2.1-incubator-SNAPSHOT</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>generate-wsdl</id>
            <phase>process-classes</phase>
            <configuration>
              <className>com.myServiceImpl</className>
              <serviceName>MyService</serviceName>
              <outputFile>${basedir}/target/classes/wsdl/MyService.wsdl</outputFile>
              <classpath>${basedir}/target/classes</classpath>
              <quiet>true</quiet>
            </configuration>
            <goals>
              <goal>java2wsdl</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>","maven 2.0.7, cxf 2.1-incubator-SNAPSHOT",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-17 02:16:43.193,,,no_permission,,,,,,,,,,,,,111747,,,Mon Aug 20 02:21:33 UTC 2007,,,,,,0|i1401j:,231469,,,,,,,,"17/Aug/07 02:16;maomaode;There is not much i can do here, it's not in the maven plugin, it's in the java2wsdl tool itself, if you turn on the -q(quiet), it just redirect the standard output and standard error.","17/Aug/07 11:52;dkulp;
The tools need to restore any global state back to how they were before when they exit.   That includes system properties, out/err, variables, etc....","20/Aug/07 02:21;maomaode;All right, we must forget to restore the out/err :(, will fix this soon",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl goal of the codegen plugin does not throw an exception to stop the maven build on error,CXF-911,12376114,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,jbrosenberg,jbrosenberg,16/Aug/07 03:19,05/Oct/07 16:46,14/Mar/19 02:28,20/Aug/07 02:58,2.1,,,,,,,2.0.2,,Build system,,,,,0,"java2wsdl goal of the codegen plugin does not throw an exception to stop the maven build on error.

Looking at the source code, it appears to just catch the exception, and if it's not an ant.ExitException, it doesn't rethrow it?   It looks like it needs to throw a MOJOExecutionException to halt the maven build (I'm comparing it to what I see in the wsdl2java goal for the plugin, which does correctly stop the build on error)....

Here's an example, which does not break the maven build, as it should:

JavaToWSDL Error : Can not find or initialize the ServiceBuilder for style: Jaxws Reason: 
org.apache.cxf.jaxws.JaxwsServiceBuilder

Maven continues happily along after this on it's merry way....

Other examples include if it can't find the source class, to build the wsdl from, etc....

Jason","maven 2.0.7, cxf 2.1-incubator-SNAPSHOT",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111746,,,2007-08-16 03:19:54.0,,,,,,0|i0v3dr:,179521,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven codegen plugin needs to allow passing arguments for java2wsdl goal,CXF-910,12376070,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,jbrosenberg,jbrosenberg,15/Aug/07 16:32,05/Oct/07 16:46,14/Mar/19 02:28,20/Aug/07 02:58,2.0.1,,,,,,,2.0.2,,Build system,,,,,0,"The cxf codegen plugin for maven doesn't seem to expose a way to pass arguments through to the 'java2wsdl' goal.   It does do this now for the 'wsdl2java' goal, via the <extraarg> tag, etc....It seems it would be straightforward to add a similar feature for the java2wsdl goal....

I need to have a bit more control over how java2wsdl runs compared to the defaults.

Thanks,

Jason","Maven 2.0.7, CXF 2.1-SNAPSHOT",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-17 02:09:50.126,,,no_permission,,,,,,,,,,,,,111745,,,Fri Aug 17 02:09:50 UTC 2007,,,,,,0|i0v36n:,179489,,,,,,,,"17/Aug/07 02:09;maomaode;I have added a <argline> instead of the redundant <extraargs><extraarg><extraarg/></extraargs>, let me know if that's ok. If you really need it, i can add it as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLToJava fails to generate parameter for request header,CXF-907,12375860,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bleichenbacher,bleichenbacher,12/Aug/07 22:46,30/Apr/08 15:00,14/Mar/19 02:28,20/Feb/08 19:03,2.1,,,,,,,2.0.5,,Tooling,,,,,0,"I'm writing a client for a web service that uses both request and response header data in each operation. WSDLToJava nicely generates an output parameter for the response header data but misses to do the same for the request header data.

So instead of:
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebMethod(action = ""http://www.gepir.org/GetPartyByGTIN"", operationName = ""GetPartyByGTIN"")
    public void getPartyByGTIN(
        @WebParam(targetNamespace = ""http://www.gepir.org/"", partName = ""partyGtin"", name = ""GetPartyByGTIN"")
        org.gepir.GetPartyByGTIN partyGtin,
        @WebParam(targetNamespace = ""http://www.gepir.org/"", header = true, partName = ""gepirRequestHeader"", name = ""gepirRequestHeader"")
        org.gepir.GepirRequestHeader gepirRequestHeader,
        @WebParam(targetNamespace = ""http://www.gepir.org/"", mode = Mode.OUT, partName = ""GetPartyByGTINResult"", name = ""gepirParty"")
        javax.xml.ws.Holder<org.gepir.GepirParty> getPartyByGTINResult,
        @WebParam(targetNamespace = ""http://www.gepir.org/"", header = true, mode = Mode.OUT, partName = ""gepirResponseHeader"", name = ""gepirResponseHeader"")
        javax.xml.ws.Holder<org.gepir.GepirResponseHeader> gepirResponseHeader
    );

it just generates (the second parameter is missing):

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebMethod(action = ""http://www.gepir.org/GetPartyByGTIN"", operationName = ""GetPartyByGTIN"")
    public void getPartyByGTIN(
        @WebParam(targetNamespace = ""http://www.gepir.org/"", partName = ""partyGtin"", name = ""GetPartyByGTIN"")
        org.gepir.GetPartyByGTIN partyGtin,
        @WebParam(targetNamespace = ""http://www.gepir.org/"", mode = Mode.OUT, partName = ""GetPartyByGTINResult"", name = ""gepirParty"")
        javax.xml.ws.Holder<org.gepir.GepirParty> getPartyByGTINResult,
        @WebParam(targetNamespace = ""http://www.gepir.org/"", header = true, mode = Mode.OUT, partName = ""gepirResponseHeader"", name = ""gepirResponseHeader"")
        javax.xml.ws.Holder<org.gepir.GepirResponseHeader> gepirResponseHeader
    );

This applies to all operations/methods.

I've added the missing parameter manually for the moment. Then the client nicely works.

The WSDL file can be found at http://gepir.gs1.ch/v3/router.asmx?wsdl. But you have to delete the routetHttpGet and routerHttpPost ports and bindings before using it. They don't seem to be valid.

",Windows XP,,,,,,,,,,,,,,,,12/Aug/07 22:47;bleichenbacher;gepir.wsdl;https://issues.apache.org/jira/secure/attachment/12363679/gepir.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-19 21:35:45.228,,,no_permission,,,,,,,,,,,,,111742,,,Tue Feb 19 21:35:45 UTC 2008,,,,,,0|i0v3zj:,179619,,,,,,,,12/Aug/07 22:47;bleichenbacher;I've attached the WSDL file that I've used (the one mentioned above with the changes).,"19/Feb/08 21:35;dkulp;

With 2.0.4, if you add -exsh to the wsdl2java, it generates it correctly.

Actually, WITHOUT that flag, we shouldn't be generating the gepirResponseHeader.    I'm not sure why.   That WOULD be a bug.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in CXFServlet.loadSpringBus when context initialization fails,CXF-906,12375827,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,karlgoldstein,karlgoldstein,11/Aug/07 18:45,05/Oct/07 16:46,14/Mar/19 02:28,12/Aug/07 14:37,2.0,,,,,,,2.0.2,,Core,,,,,0,"CXFServlet.java line 136 obtains the Spring application context from the servlet context:

        if (ctx == null) {
            ctx = (ApplicationContext)svCtx
                .getAttribute(""org.springframework.web.context.WebApplicationContext.ROOT"");
        }

If the Spring application context failed to load however, Spring (somewhat inexplicably) sets this attribute to be the exception rather than the context.  See org/springframework/web/context/ContextLoader.java line 202:

		catch (RuntimeException ex) {
			logger.error(""Context initialization failed"", ex);
			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, ex);
			throw ex;
                                           }

To avoid repeated ClassCastExceptions that obscure the underlying problem with the Spring application context, CXFServlet should check the type of the attribute before attempting to cast to ApplicationContext:

        if (ctx == null) {
            Object ctxObject = svCtx
                .getAttribute(""org.springframework.web.context.WebApplicationContext.ROOT"");
            if (ctxObject instanceof ApplicationContext) {
	      ctx = (ApplicationContext) ctxObject;
	    }
        }
",using Spring Framework 2.1 m2,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-12 14:37:08.277,,,no_permission,,,,,,,,,,,,,111741,,,Sun Aug 12 14:37:08 UTC 2007,,,,,,0|i0syv3:,167125,,,,,,,,"11/Aug/07 18:49;karlgoldstein;On second thought, I suppose it would be even better to check this attribute in CXFServlet.init() and stop initialization if the ApplicationContext is invalid (an exception).",12/Aug/07 14:37;njiang;The patch code has been applied into the SVN ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM conflicts with schema validation on application endpoint,CXF-905,12375749,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,asmyth,asmyth,10/Aug/07 14:33,30/Apr/08 14:57,14/Mar/19 02:28,21/Feb/08 03:59,,,,,,,,2.1,,WS-* Components,,,,,0,"If schema validation is enabled for an application endpoint (as is the case in the hello_world sample), RM cannot be used at the same time, i.e. addition of the following to the config file of the hello_world sample will make it fail:

<cxf:bus>
      <cxf:features>
          <wsa:addressing usingAddressingAdvisory=""true""/>
          <wsrm-mgr:reliableMessaging/>
          <cxf:logging/>
       </cxf:features>
</cxf:bus>

The reason for the failure is an attempt to validate the RM protocol messages also, e.g. when the clients send it's CreateSequence request, a MarshalException is thrown:

     [java] SEVERE: Failed to send RM protocol message {http://schemas.xmlsoap.org/ws/2005/02/rm}CreateSequence.
     [java] org.apache.cxf.interceptor.Fault: Marshalling Error: cvc-elt.1: Cannot find the declaration of element 'CreateSequence'.
     [java] 	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:176)
     [java] 	at org.apache.cxf.jaxb.io.DataWriterImpl.write(DataWriterImpl.java:42)
     [java] 	at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.writeParts(AbstractOutDatabindingInterceptor.java:83)
     [java] 	at org.apache.cxf.interceptor.BareOutInterceptor.handleMessage(BareOutInterceptor.java:68)
     [java] 	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
     [java] 	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
     [java] 	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
     [java] 	at org.apache.cxf.ws.rm.Proxy.invoke(Proxy.java:247)
     [java] 	at org.apache.cxf.ws.rm.Proxy.createSequence(Proxy.java:162)
     [java] 	at org.apache.cxf.ws.rm.RMManager.getSequence(RMManager.java:316)
     [java] 	at org.apache.cxf.ws.rm.RMOutInterceptor.handle(RMOutInterceptor.java:129)
     [java] 	at org.apache.cxf.ws.rm.AbstractRMInterceptor.handleMessage(AbstractRMInterceptor.java:78)
     [java] 	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
     [java] 	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
     [java] 	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:205)
     [java] 	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
     [java] 	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
     [java] 	at $Proxy28.sayHi(Unknown Source)
     [java] 	at demo.hw.client.Client.main(Client.java:61)
     [java] Caused by: javax.xml.bind.MarshalException

Schema validation should not apply to RM protocol messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111740,,,2007-08-10 14:33:53.0,,,,,,0|i13zy7:,231454,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tools output (-help) needs reformatting,CXF-904,12375740,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,asmyth,asmyth,10/Aug/07 11:36,05/Oct/07 16:46,14/Mar/19 02:28,13/Aug/07 04:10,,,,,,,,2.0.2,,Tooling,,,,,0,"The format in which e.g. wsdl2java prints its help message needs to be reformatted.
With 220 lines it is way too long - it's very annoying to scroll up and down your shell to find what you are looking for, and not necessary as there are 3 empty lines separating each option and 2 empty lines separating an option from its description.
Also, many option descriptions exceed the 80 chars per line limit, mainly due to the excessive indentation (8 chars instead of 20 would do).",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-13 04:10:21.267,,,no_permission,,,,,,,,,,,,,111739,,,Mon Aug 13 04:10:21 UTC 2007,,,,,,0|i0v3b3:,179509,,,,,,,,"13/Aug/07 04:10;maomaode;Just remove couple line separator, but you still need scroll-up and down, there are too much arguments/options, if you don't want the detailed usages, you can just run wsdl2java without any options, you'll get the simple form of the usage.

I hope one day we can have the command like this 

wsdl2java help -b 

which only print the detail usage of -b option

But at moment, this is what i can do",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP binding/REST does not handle Wrapped request correctly,CXF-903,12375718,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,10/Aug/07 02:05,29/Aug/07 18:26,14/Mar/19 02:28,13/Aug/07 05:59,,,,,,,,2.0.2,,,,,,,0,"see http://mail-archives.apache.org/mod_mbox/incubator-cxf-user/200708.mbox/%3c95601aea0708090714k52d4b3bemf035ff286e47a5b5@mail.gmail.com%3e

This is caused by HTTP binding did not create schemaInfo for BindingOperationInfo correctly for wrapped style. Eg a schema instance is generated for the following java method,

<echo xmlns=""http://book.acme.com""><arg0/></echo>


>     @Get
>     @Override
>     @HttpResource(location=""/echo/{echoData}"")
>     public String echo(String echoData) {
>         return ""Echo:"" + echoData;
>     }

This resulted in parameter matching problems in URIParameterInInterceptor.mergeParams()

",See ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111738,,,2007-08-10 02:05:43.0,,,,,,0|i0v3bb:,179510,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generated exception classes don't have serialVersionID,CXF-900,12375613,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,maomaode,bmargulies,bmargulies,08/Aug/07 19:45,05/Oct/07 16:46,14/Mar/19 02:28,09/Aug/07 05:35,2.0.1,,,,,,,2.0.2,,,,,,,0,A run of wsdl2java on my wsdl (which I don't think you'll need) yields an ErrorFault class that extends exception and which does not declare a serialVersionID. Eclipse whines. It would be good if wsdl2java would add in the silly ID.,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111735,,,2007-08-08 19:45:20.0,,,,,,0|i1a99b:,267966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid links in Service Listing at root of CXF servlet if the context path does not end in '/',CXF-898,12375574,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,ap_cxfjira,ap_cxfjira,08/Aug/07 07:06,28/Aug/07 18:36,14/Mar/19 02:28,12/Aug/07 14:40,2.0,,,,,,,2.0.2,,,,,,,0,"The service listing generated by the CXFServlet at the context root, e.g. ""http://localhost/webservice/"", contains links missing the last character if called without the final '/' (i.e. as ""http://localhost/webservice""), which has been tested with Tomcat and most likely is possible in most containers. See attached screenshots.

Without having seen the code, I would assume the final character is stripped to avoid the problem described in CXF-535, but it seems this also happens if it is *not* a slash.","Tested on Tomcat 5.5.23, but probably independent of environment",,,,,,,,,,,,,,,,08/Aug/07 07:08;ap_cxfjira;context_no_slash.png;https://issues.apache.org/jira/secure/attachment/12363391/context_no_slash.png,08/Aug/07 07:08;ap_cxfjira;context_with_slash.png;https://issues.apache.org/jira/secure/attachment/12363390/context_with_slash.png,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-08-12 14:40:02.991,,,no_permission,,,,,,,,,,,,,111733,,,Sun Aug 12 14:40:02 UTC 2007,,,,,,0|i146jz:,232525,,,,,,,,08/Aug/07 07:08;ap_cxfjira;The links generated when the servlet is called with a trailing '/'.,08/Aug/07 07:08;ap_cxfjira;The links generated when the servlet is called without a trailing '/'.,08/Aug/07 07:11;ap_cxfjira;Presumably linked as CXF-535 deals with removing the last character from generated links.,12/Aug/07 14:40;njiang;this issue has been resolved in the revision 565076,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis binding with @WebFault causes AegisDatabinding to throw UnsupportedOperationException,CXF-896,12375544,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,zarar,zarar,07/Aug/07 19:24,05/Oct/07 16:46,14/Mar/19 02:28,17/Sep/07 22:01,2.1,,,,,,,2.0.2,,JAX-WS Runtime,,,,,0,"I posted about this issue on the mailing list:

http://www.nabble.com/forum/ViewPost.jtp?post=12037196&framed=y

I'm getting an UnsupportedOperationException using Aegis binding and JAX-WS frontend.  Here's my setup starting with the Spring beans:

    <bean id=""aegisBean""
          class=""org.apache.cxf.aegis.databinding.AegisDatabinding""/>

    <jaxws:endpoint
            id=""sportsServiceEndpoint""
            implementor=""#sportsService""
            address=""/SportsService"">
        <jaxws:serviceFactory>
            <bean class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean"">
                <property name=""dataBinding"" ref=""aegisBean""/>
                <property name=""serviceConfigurations"">
                    <list>
                        <bean class=""org.apache.cxf.jaxws.support.JaxWsServiceConfiguration""/>
                        <bean class=""org.apache.cxf.aegis.databinding.AegisServiceConfiguration""/>
                        <bean class=""org.apache.cxf.service.factory.DefaultServiceConfiguration""/>
                    </list>
                </property>
            </bean>
        </jaxws:serviceFactory>
    </jaxws:endpoint>


Here's the exception class:

@WebFault(name=""WebServiceException"")
public class WebServiceException extends RuntimeException {

   // constructors hidden for brevity

    public Object getFaultInfo() { .... }

}

Here's the stacktrace:

java.lang.UnsupportedOperationException
  at org.apache.cxf.aegis.databinding.AegisDatabinding.createWriter(AegisDatabinding.java:109)
  at org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor.handleMessage(WebFaultOutInterceptor.java:82)
  at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
  at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:90)
  at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:224)
  at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
  at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:78)
  at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:231)


I can actually see this exception coming.  In WebFaultOutInterceptor.handleMessage() the line

DataWriter writer = service.getDataBinding().createWriter(Node.class) ;

invokes AegisDatabinding.createWriter() where Node.class isn't being looked for:

    public <T> DataWriter<T> createWriter(Class<T> cls) {
        if (cls.equals(XMLStreamWriter.class)) {
            return (DataWriter<T>)new XMLStreamDataWriter(this);
        } else {
            throw new UnsupportedOperationException();
        }
    }

Any ideas how to avoid this exception? I think my configuration is correct and this might be a bug.

Thanks,
Zarar
",Platform independent.,,,,,,,,,,,,,,,,11/Sep/07 22:14;zarar;AegisWebFaultFix.patch;https://issues.apache.org/jira/secure/attachment/12365601/AegisWebFaultFix.patch,12/Sep/07 15:31;zarar;AegisWebFaultFixWithoutChangingWebFaultOutInterceptor.patch;https://issues.apache.org/jira/secure/attachment/12365644/AegisWebFaultFixWithoutChangingWebFaultOutInterceptor.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-09-12 12:55:42.743,,,no_permission,,,,,,,,,,,,,111731,,,Mon Sep 17 22:01:59 UTC 2007,,,,,,0|i1a99j:,267967,,,,,,,,"11/Sep/07 14:25;zarar;Has anyone looked into this? I'm pretty sure this is a bug which makes it impossible to use an Aegis binding while using @WebFault.  As mentioned in the original post this is happening because Node.class is not being checked for in AegisDatabinding.createWriter().

Any ideas?","11/Sep/07 22:14;zarar;I've attached a patch which creates a W3CDOMStreamWriter based on a Node and then uses the W3CDOMStreamWriter to create a DataWriter.

Thanks to Dan for showing me the way.

After applying this patch Aegis bindings should be able to interpret @WebFault annotations and serialize them into SOAP faults properly.

Thanks again.

Zarar Siddiqi","12/Sep/07 12:55;dandiep;Hi zarrar, Thanks for the patch. Can I suggest one improvement? Some databiding frameworks (i.e. JAXB) can work with the Node object directly and more efficiently. I was wondering if you could maybe rework it so that the WebFaultInterceptor stays the same and the AegisDatabinding creates a NodeDataReader. The NodeDataReader can then do the conversion to the XMLStreamReader and pass it on to an encapsulated version of the XMLStreamReader. Any chance you could do this?","12/Sep/07 13:00;zarar;Sure, I'll give it a shot.","12/Sep/07 15:31;zarar;Dan, I'm a little confused.  Are we talking about readers or writers?  In your latest comment you're referring to NodeDataReader and XMLStreamReader  when the problem is with *writing* the exception to the stream.

I don't see how we can use classes like W3CDOMStreamWriter in AegisBinding because they actually need the Element that's being written which isn't available in AegisDatabinding.  Either way, I've attached another patch which doesn't change WebFaultOutInterceptor and checks for Node.class in AegisBinding and then returns an ElementDataWriter (new class) which happens to be awfully similar to XMLStreamDataWriter.

Thoughts? Corrections?","13/Sep/07 11:10;dandiep;Sorry, I must be on crack. I'm blaming my jetlag ;-)  Anyway, I think what you submitted is probably OK. I'll see if I can get it commited soon. Thanks again.","17/Sep/07 22:01;dkulp;Patch applied, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Errors in samples/restful_http_binding/test.html,CXF-889,12375477,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,jliu,eleganger,eleganger,07/Aug/07 06:38,17/Dec/07 03:08,14/Mar/19 02:28,17/Dec/07 03:08,2.0,,,,,,,2.0.3,,Samples,,,,,0,"When running the example, you can open http://localhost:8080/test.html in a browser to demonstrate the use of JavaScript as a web service client. 

This works fine in Firefox, while it fails in Internet Explorer and Opera - both browsers show some of the table definition HTML as if it were displayable text. The main reason is a missing quotation mark in the id part of the table defintion, which reads:

<table style=""border: 1px black solid;"" cellspacing=""5"" id=""customertable>

After adding this quoation mark and rerunning the example, test.html looks good in all three browsers. However, when clicking the Get Customers! button, the table below the button is populated correctly in Firefox and Opera, while nothing happens in IE. The reason for this error is unknown.","Windows XP, jdk1.5.0_12, Internet Explorer 6, Opera 9, Firefox 2.0.0.6",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111724,,,2007-08-07 06:38:10.0,,,,,,0|i1a9av:,267973,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XSD2WSDL Tool seems to be unable to access remote xsdurls,CXF-886,12375413,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,schtibb,schtibb,06/Aug/07 12:29,05/Oct/07 16:46,14/Mar/19 02:28,04/Sep/07 08:29,2.0,,,,,,,2.0.2,,Build system,,,,,0,"The xsd2wsdl tool seems to have problems connecting to remote sites, how ever using a local copy of the xsd works.
We have manually edited the xsd2wsdl.bat to add http-proxy (-Dhttp.proxyHost=some.proxy.com -Dhttp.proxyPort=8080)

xsd2wsdl -t some.name.space http://schema.omg.org/specs/PLM/2.0/ComputationalECR.xsd

Error : Failed to open XSD file http://schema.omg.org/specs/PLM/2.0/ComputationalECR.xsd

Ethereal shows no traffic to server at all.
",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111721,,,2007-08-06 12:29:35.0,,,,,,0|i1a9bb:,267975,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
You cannot have some methods WRAPPED and others BARE in the same service,CXF-885,12375380,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,prophet36,prophet36,05/Aug/07 08:57,30/Apr/08 14:57,14/Mar/19 02:28,25/Feb/08 18:08,2.1,,,,,,,2.1,,Soap Binding,,,,,0,"If I deploy a service like this:

@WebService(targetNamespace=""http://foo.com"")
public class Test {

	@WebMethod(operationName=""Simple"")
	@WebResult(name=""SimpleResponse"", targetNamespace=NS_URI)
	@SOAPBinding(parameterStyle=SOAPBinding.ParameterStyle.BARE)
	public String simple(@WebParam(name=""Simple"") String req)
	{
		return ""Hello "" + req;
	}

	@WebMethod(operationName=""Hello"")
	@WebResult(name=""Result"")
	@SOAPBinding(parameterStyle=SOAPBinding.ParameterStyle.WRAPPED)
	public String hello(
		@WebParam(name=""A"") String a,
		@WebParam(name=""B"") String b)
	{
		return ""Hello "" + a + "" and "" + b;
	}
}

And then call the hello() method like this:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Body>
    <req:Hello xmlns:req=""http://foo.com"">
      <A>Dan</A>
      <B>Chris</B>
    </req:Hello>
  </soap:Body>
</soap:Envelope>

...I get this (incorrect) response:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Body>
    <Result>Hello Dan and Chris</Result>
  </soap:Body>
</soap:Envelope>

It's incorrect because the WSDL promises that the response will be an unqualified 'Result' element locally-valid within an {http://foo.com}:HelloResponse element.

Now if I switch the simple() method to WRAPPED, and try calling hello() again, I get the correct response:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Body>
    <ns1:HelloResponse xmlns:ns1=""http://foo.com"">
      <Result>Hello Dan and Chris</Result>
    </ns1:HelloResponse>
  </soap:Body>
</soap:Envelope>","Linux, SunJDK1.6.0_01",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-25 18:08:44.717,,,no_permission,,,,,,,,,,,,,111720,,,Mon Feb 25 18:08:44 UTC 2008,,,,,,0|i1a9bj:,267976,,,,,,,,"05/Aug/07 09:23;prophet36;Also (probably related, but much less serious), the inclusion of another WRAPPED method with @RequestWrapper and @ResponseWrapper, like this:

@WebMethod(operationName=""Arithmetic"")
@RequestWrapper(localName=""Arithmetic"", targetNamespace=NS_URI, className=""com.foo.Arithmetic"")
@ResponseWrapper(localName=""ArithmeticResponse"", targetNamespace=NS_URI, className=""com.foo.ArithmeticResponse"")
@SOAPBinding(parameterStyle=SOAPBinding.ParameterStyle.WRAPPED)
public void arithmetic(
    @WebParam(targetNamespace=NS_URI, name=""Num1"")
    double num1,
    @WebParam(targetNamespace=NS_URI, name=""Num2"")
    double num2,
    @WebParam(targetNamespace=NS_URI, name=""Add"", mode=Mode.OUT)
    Holder<Double> add,
    @WebParam(targetNamespace=NS_URI, name=""Sub"", mode=Mode.OUT)
    Holder<Double> sub,
    @WebParam(targetNamespace=NS_URI, name=""Mul"", mode=Mode.OUT)
    Holder<Double> mul,
    @WebParam(targetNamespace=NS_URI, name=""Div"", mode=Mode.OUT)
    Holder<Double> div)
{
        add.value=num1 + num2;
        sub.value=num1 - num2;
        mul.value=num1 * num2;
        div.value=num1 / num2;
}

...introduces a spurious namespace declaration in the hello() response:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Body>
    <ns1:HelloResponse xmlns:ns1=""http://foo.com"">
      <Result xmlns:ns2=""http://foo.com"">Hello Dan and Chris</Result>
    </ns1:HelloResponse>
  </soap:Body>
</soap:Envelope>

The 'ns2' prefix is never used.","25/Feb/08 18:08;dkulp;
Resolving this issue.  I've added a test case with 4 methods (2 bare, 2 wrapped) and all four seem to work.  This MAY have been fixed in 2.0.4, but it's definitely working on 2.1.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java in apache-cxf-2.1-incubator-20070729.204751-4 does not honour the enableWrapperStyle flag.,CXF-883,12375330,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,prophet36,prophet36,03/Aug/07 21:58,29/Aug/07 02:02,14/Mar/19 02:28,08/Aug/07 08:40,2.0,2.1,,,,,,2.0.1,,Tooling,,,,,0,"When <enableWrapperStyle>false</enableWrapperStyle> appears in the binding file, wsdl2java should generate an SEI using ParameterStyle.BARE.

<bindings xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
          xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
          wsdlLocation=""hbp.wsdl""
          xmlns=""http://java.sun.com/xml/ns/jaxws"">
  <bindings node=""wsdl:definitions"">
    <enableWrapperStyle>false</enableWrapperStyle>
  </bindings>
</bindings>

JAVA_HOME=/usr/local/jdk1.6.0 /home/chris/apache-cxf-2.1-incubator-SNAPSHOT/bin/wsdl2java -b bindings.xml -d . -verbose -compile hbp.wsdl","Linux, SunJDK 1.6.0_01",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-05 02:21:01.364,,,no_permission,,,,,,,,,,,,,111718,,,Mon Aug 06 11:58:40 UTC 2007,,,,,,0|i13zzr:,231461,,,,,,,,"05/Aug/07 02:21;dkulp;
Just to let you know, I can confirm this.    It works if you point the ""node"" to the portType node (or all the way to the operation), but seems to not be processed if top level.

","05/Aug/07 02:55;prophet36;That's weird, because after I filed this bug, I switched the default in org.apache.cxf.tools.wsdlto.frontend.jaxws.customization.JAXWSBinding, and everything works fine. By default it does BARE, and I can switch it to WRAPPED by doing:

<bindings xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
          xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
          wsdlLocation=""hbp.wsdl""
          xmlns=""http://java.sun.com/xml/ns/jaxws"">
  <bindings node=""wsdl:definitions"">
    <enableWrapperStyle>true</enableWrapperStyle>
  </bindings>
</bindings>

Naturally that's no good to you because JAX-WS is supposed to default to WRAPPED.","06/Aug/07 03:47;maomaode;i'm getting this if i set enableWrapperStyle as a global setting, 


Caused by: org.xml.sax.SAXParseException: The prefix ""xmlns"" cannot be bound to any namespace explicitly; neither can the namespace for ""xmlns"" be bound to any prefix explicitly.
        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:239)
        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:283)
        at javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:124)
        at org.apache.cxf.helpers.DOMUtils.readXml(DOMUtils.java:302)
        at org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuilder.buildCustomizedDefinition(JAXWSDefinitionBuilder.java:183)
        at org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuilder.customize(JAXWSDefinitionBuilder.java:125)

I'm looking into this","06/Aug/07 11:58;prophet36;That suggests you're doing xmlns:xmlns=""http://..."" in your binding file:

bash-2.05b$ cat x.xml
<M xmlns:xmlns=""http://bar.com"">
  <xmlns:X>...</xmlns:X>
</M>
bash-2.05b$ java -cp xml-apis.jar:xercesImpl.jar:xercesSamples.jar dom.Counter -n x.xml
[Fatal Error] x.xml:1:32: The prefix ""xmlns"" cannot be bound to any namespace explicitly; neither can the namespace for ""xmlns"" be bound to any prefix explicitly.
bash-2.05b$ 

The xmlns and xml prefixes are reserved.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@Features and @XXInterceptors doesn't work for client proxies,CXF-882,12375306,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,03/Aug/07 15:08,05/Oct/07 16:46,14/Mar/19 02:28,03/Aug/07 18:32,2.0.1,,,,,,,2.0.2,,Core,,,,,0,"
The annotations on the Proxy interface type are not picked up.   Only the ServerEndpointFactory processes the annotations.   The client side does not.   I'm going to move much of it to the AbstractEndpointFactory to be used by both.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-03 15:34:24.987,,,no_permission,,,,,,,,,,,,,111717,,,Fri Aug 03 15:57:42 UTC 2007,,,,,,0|i0syvr:,167128,,,,,,,,"03/Aug/07 15:34;zarar;This looks awfully similar to this:

https://issues.apache.org/jira/browse/CXF-874","03/Aug/07 15:57;dkulp;
Not quite.   In that case, Spring is replacing the object with a proxy object that doesn't have the annotations.   Thus, the annotation processing isn't finding them.

In this case, the correct object/class is there and the JAX-WS annotations are processed correctly (@HandlerChain, etc...), but the @Features and similar stuff is not.   There's litterally no processing of those annotations on the call path at all.

In anycase, I have a fix for this that I'm testing now.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Class cast exception when running JCA Integration sample,CXF-881,12375297,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,rohithashok,rohithashok,03/Aug/07 13:47,25/Oct/09 11:34,14/Mar/19 02:28,25/Oct/09 11:34,2.0,,,,,,,,,Resources,,,,,0,"JCA code, it looks like CXF is doing improper casting.
It should be casting the resource adapter to a javax.resource.spi.ResourceAdapter, but
rather it is casting to is own implementation which is failing.

Trace: 2007/07/23 20:26:00.078 01 t=8C5B00 c=UNK key=P8 (13007002)             
  ThreadId: 00000022                                                           
  FunctionName: com.ibm.ejs.j2c.ConnectionFactoryBuilderServerImpl             
  SourceId: com.ibm.ejs.j2c.ConnectionFactoryBuilderServerImpl                 
  Category: SEVERE                                                             
  ExtendedMessage: BBOO0220E: J2CA0009E: An exception occurred while trying to instantiate the ManagedConnectionFactory class org.ap
ache.cxf.jca.cxf.AssociatedManagedConnectionFactoryImpl used by resource CXFConnectionFactory class org.ap
urceAdapterInternalException: ResourceAdapter is not correct, it should be instof ResourceAdapterImpl 
 at org.apache.cxf.jca.cxf.AssociatedManagedConnectionFactoryImpl.setResourceAd
 at com.ibm.ejs.j2c.ConnectionFactoryBuilderServerImpl.createMCFandPM(Connectio
 at com.ibm.ejs.j2c.ConnectionFactoryBuilderServerImpl.processObjectInstance(Co
 at com.ibm.ejs.j2c.ConnectionFactoryBuilderImpl.getObjectInstance(ConnectionFa
 at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:316)   
 at com.ibm.ws.naming.util.Helpers.processSerializedObjectForLookupExt(Helpers.
 at com.ibm.ws.naming.util.Helpers.processSerializedObjectForLookup(Helpers.jav
 at com.ibm.ws.naming.jndicos.CNContextImpl.processResolveResults(CNContextImpl
 at com.ibm.ws.naming.jndicos.CNContextImpl.doLookup(CNContextImpl.java:1947)  
 at com.ibm.ws.naming.jndicos.CNContextImpl.doLookup(CNContextImpl.java:1862)  
 at com.ibm.ws.naming.jndicos.CNContextImpl.lookupExt(CNContextImpl.java:1552) 
 at com.ibm.ws.naming.util.IndirectJndiLookupObjectFactory$1.run(IndirectJndiLo
 at com.ibm.ws.security.util.AccessController.doPrivileged(AccessController.jav
 at com.ibm.ws.naming.util.IndirectJndiLookupObjectFactory.getObjectInstanceExt
 at com.ibm.ws.naming.util.IndirectJndiLookupObjectFactory.getObjectInstance(In
 at com.ibm.ws.util.ResRefJndiLookupObjectFactory.getObjectInstance(ResRefJndiL
 at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:316)   
 at com.ibm.ws.naming.util.Helpers.processSerializedObjectForLookupExt(Helpers.",CXF running as a shared library in WebSphere Application Server V6.1,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-18 20:26:35.826,,,no_permission,,,,,,,,,,,,,111716,,,Sun Oct 25 11:34:46 UTC 2009,,,,,,0|i13zxz:,231453,,,,,,,,18/Oct/09 20:26;chris@die-schneider.net;There has been no activity on this issue recently. Is this issue still open? I will close on 25.10.2009 if there is no response.,25/Oct/09 11:34;chris@die-schneider.net;Closing this issue because of inactivity. Please feel free to reopen if the problem is still present.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
preceeding / in cxf-servlet.xml causes link displayed in services panel to fail,CXF-879,12375295,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,rohithashok,rohithashok,03/Aug/07 13:42,25/Oct/09 11:34,14/Mar/19 02:28,25/Oct/09 11:34,2.0,,,,,,,,,Transports,,,,,0,"In my cxf-servlet.xml I have:
 <jaxws:endpoint
        id=""hello_world_xml_bare""
        implementor=""demo.hw.server.GreeterImpl""
        wsdlLocation=""WEB-INF/wsdl/hello_world.wsdl""
        address=""/hello_world"">
                <jaxws:features>
 		    <bean class=""org.apache.cxf.feature.LoggingFeature""/>
                </jaxws:features>
    </jaxws:endpoint>
</beans>

However the link that shows up is:
http://9.42.118.73:8080/helloworld/services//hello_world?wsdl 
(note the double /)

But that link fails, the link that works has a single slash.
http://9.42.118.73:8080/helloworld/services/hello_world?wsdl","Windows XP, CXF is running as a shared library to WebSphere Application Server V6.1.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-18 20:20:02.235,,,no_permission,,,,,,,,,,,,,111714,,,Sun Oct 25 11:34:06 UTC 2009,,,,,,0|i140k7:,231553,,,,,,,,18/Oct/09 20:20;chris@die-schneider.net;There has been no activity on this issue recently. Is this issue still open? I will close on 25.10.2009 if there is no response.,25/Oct/09 11:34;chris@die-schneider.net;Closing this issue because of inactivity. Please feel free to reopen if the problem is still present.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullpointerException from wsdltojava when using non-soap extensions,CXF-875,12375254,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,maomaode,raykrueger,raykrueger,02/Aug/07 20:49,05/Dec/07 19:44,14/Mar/19 02:28,03/Aug/07 03:12,2.0,2.0.1,,,,,,2.0.1,,Tooling,,,,,0,"wsd2url will throw a NullPointerException when using the xformat namespace...
If there are errors in the wsdl I'm presenting here please comment.

{quote}
wsdl2java.bat -verbose CurrencyExchange.wsdl
{quote}

{noformat}
Loading FrontEnd jaxws ...
Loading DataBinding jaxb ...
<command xmlns=""http://www.xsume.com/Xutil/Command"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.xsume.com/Xutil/Command http://www.xsume.com/schema/xutil/command.xsd"">
<option name=""verbose""/>
<argument name=""wsdlurl"">CurrencyExchange.wsdl</argument>
</command>
wsdl2java -verbose CurrencyExchange.wsdl
wsdl2java - 2.0-incubator


WSDLToJava Error : java.lang.NullPointerException

org.apache.cxf.tools.common.ToolException: java.lang.NullPointerException
	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:223)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
	at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
	at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
Caused by: java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:765)
	at org.apache.cxf.configuration.spring.SpringBeanMap.get(SpringBeanMap.java:191)
	at org.apache.cxf.transport.DestinationFactoryManagerImpl.getDestinationFactory(DestinationFactoryManagerImpl.java:99)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildEndpoint(WSDLServiceBuilder.java:445)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:260)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:154)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:143)
	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:142)
	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:215)
	... 3 more
{noformat}

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<wsdl:definitions
        xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
        xmlns:schema=""http://www.example.com/schemas/2007/08/""
        xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
        xmlns:http=""http://schemas.xmlsoap.org/wsdl/http/""
        xmlns:xformat=""http://cxf.apache.org/bindings/xformat""
        xmlns:mime=""http://schemas.xmlsoap.org/wsdl/mime/""
        xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
        targetNamespace=""http://www.example.com/schemas/2007/08/"">

    <wsdl:types>
        <schema xmlns=""http://www.w3.org/2001/XMLSchema""
                xmlns:fx=""http://www.example.com/schemas/2007/08/""
                xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
                attributeFormDefault=""qualified"" elementFormDefault=""qualified""
                targetNamespace=""http://www.example.com/schemas/2007/08/"">

            <element name=""ExchangeRequest"">
                <complexType>
                    <all>
                        <element name=""fromCurrency"" type=""fx:CurrencyType""/>
                        <element name=""toCurrency"" type=""fx:CurrencyType""/>
                    </all>
                </complexType>
            </element>

            <element name=""ExchangeResponse"">
                <complexType>
                    <all>
                        <element name=""rate"">
                            <simpleType>
                                <restriction base=""double""/>
                            </simpleType>
                        </element>
                    </all>
                </complexType>
            </element>

            <simpleType name=""CurrencyType"">
                <restriction base=""string"">
                    <pattern value=""[A-Z]{3}""/>
                </restriction>
            </simpleType>

        </schema>
    </wsdl:types>

    <wsdl:message name=""ExchangeResponse"">
        <wsdl:part element=""schema:ExchangeResponse"" name=""ExchangeResponse"">
        </wsdl:part>
    </wsdl:message>

    <wsdl:message name=""ExchangeRequest"">
        <wsdl:part element=""schema:ExchangeRequest"" name=""ExchangeRequest"">
        </wsdl:part>
    </wsdl:message>

    <wsdl:portType name=""CurrencyExchange"">
        <wsdl:operation name=""Exchange"">
            <wsdl:input message=""schema:ExchangeRequest"" name=""ExchangeRequest""/>
            <wsdl:output message=""schema:ExchangeResponse"" name=""ExchangeResponse""/>
        </wsdl:operation>
    </wsdl:portType>

    <wsdl:binding name=""CurrencyExchangeSoapBinding"" type=""schema:CurrencyExchange"">
        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
        <wsdl:operation name=""Exchange"">
            <wsdl:input>
                <soap:body use=""literal""/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use=""literal""/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>

    <wsdl:binding name=""CurrencyExchangeXmlBinding"" type=""schema:CurrencyExchange"">
        <xformat:binding/>
        <wsdl:operation name=""Exchange"">
            <wsdl:input>
                <xformat:body rootNode=""schema:ExchangeRequest""/>
            </wsdl:input>
            <wsdl:output/>
        </wsdl:operation>
    </wsdl:binding>

    <wsdl:service name=""CurrencyExchangeService"">
        <wsdl:port binding=""schema:CurrencyExchangeSoapBinding"" name=""CurrencyExchangeSoapPort""/>
        <wsdl:port binding=""schema:CurrencyExchangeXmlBinding"" name=""CurrencyExchangeXmlPort""/>
    </wsdl:service>

</wsdl:definitions>
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111710,,,Fri Aug 03 02:59:21 UTC 2007,,,,,,0|i0uypb:,178763,,,,,,,,"03/Aug/07 02:59;raykrueger;The problem is actually the missing transport addresses in the <service>.
This should be handled better though",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problems with service beans that use AOP,CXF-874,12375161,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,zarar,zarar,01/Aug/07 18:50,05/Oct/07 16:46,14/Mar/19 02:28,29/Aug/07 01:42,2.0,2.0.1,,,,,,2.0.2,,Bus,Configuration,Core,JAX-WS Runtime,,0,"There are a couple threads on the mailing list that talk about some problems users are having when using AOP with CXF.  Most notably there seem to be issues when service implementations are either proxied using AOP and/or are transactional in nature.  Here is an example of this:

http://www.nabble.com/Dependency-Injection-in-JAXWS-endpoint-tf4154573.html#a11884767

As Brad pointed out, the dev team is looking into this. However, I couldn't find a JIRA for this issue.  There's also this thread which is similar in nature.

http://www.nabble.com/webservice-proxied-with-trasaction-interceptor-throwing-errors-on-WSDL-generation-tf4161303.html#a11842296

In my last comment for CXF-803 (https://issues.apache.org/jira/browse/CXF-803#action_12516555) I point to a case where interceptors configured using annotations fail to get added to the interceptor chain when an AOP auto proxy creator is used (org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator).  If BeanNameAutoProxyCreator is defined as a Spring bean the annotations are not read, but if I comment out the BeanNameAutoProxyCreator, all is well.",Platform Independent,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-07 09:30:40.589,,,no_permission,,,,,,,,,,,,,111709,,,Wed Aug 29 01:42:57 UTC 2007,,,,,,0|i0syvz:,167129,,,,,,,,"07/Aug/07 09:30;jj;some more on this here:
http://mail-archives.apache.org/mod_mbox/incubator-cxf-user/200707.mbox/%3c5A65FF32D803E9409FE3CE0B96D85D6601B984@ex.iogroup.net%3e
","28/Aug/07 20:33;dkulp;
This really isn't something completely ""fixable"".   In the AOP cases, what is being assigned as a service is a java.lang.reflect.Proxy object.   That object does not have any of the annotations on it that the real service would have.   With Spring config, you can get around it by specifying the implementorClass/serviceClass attributes on the jaxws:endpoint/jaxws:server elements.   In that case, we'll ignore the obj.getClass() call and use the Class you specifically specify for finding the annotations and such.

That said, I'm doing a few things:
1)  I'm changing the default namespace for the case when getPackage() returns null to ""http://unknown.namespace/"".   Thus, the ?wsdl call will actually generate a wsdl instead of barf.   It's not a very usable wsdl though (service names like #Proxy8Service and such)

2) In the factory, if a service is created from a Proxy object, I'm going to log a WARNING level message that explains the issue and suggests setting the class explicitly.



","29/Aug/07 01:42;dkulp;
Well, resolved fixed as best we can at this point.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST path is not fully evaluted,CXF-873,12375154,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,seanoc,mraad23,mraad23,01/Aug/07 17:16,23/Jan/09 17:47,14/Mar/19 02:28,04/Apr/08 13:45,,,,,,,,2.1,,Samples,,,,,0,"Updated the restful_http_binding sample with println statements to print the method name that is being invoked.
and on both:

http://localhost:8080/xml/customers

and

http://localhost:8080/xml/customers/123

the getCustomers (note the plural !) is being called.   Looks like the full path info is not evaluated.","MacOS 10, Java 1.5.0_07",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-08 08:25:46.682,,,no_permission,,,,,,,,,,,,,111708,,,Fri Apr 04 13:45:52 UTC 2008,,,,,,0|i0v3t3:,179590,,,,,,,,"02/Aug/07 14:11;mraad23;Actually, if you issue:

http://localhost:8080/xml/customersxxxxx

you still get the list of customers, looks like it is matching with whatever is starting with the path.
Hope that helps.","08/Aug/07 08:25;jliu;This is same to the issue reported in mailing list:

http://mail-archives.apache.org/mod_mbox/incubator-cxf-user/200708.mbox/%3ced158b480708021228m4483740x5d3d021d574b0677@mail.gmail.com%3e",04/Apr/08 13:45;seanoc;tested against 2.1 and demo works correctly.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebService methods generated from implementation instead of interface,CXF-870,12375136,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,abuijze,abuijze,01/Aug/07 10:59,05/Oct/07 16:46,14/Mar/19 02:28,07/Sep/07 16:19,2.0,2.0.1,,,,,,2.0.2,,,,,,,0,"-- Description of problem --
When CXF creates a service provider for a given JAX-WS-annotated (implementation) class, it tries to create a WebService operation for each method in that implementation class.
In the case of a spring bean, there could be getter and setter methods. CXF will fail in creating WS operations from these methods and fail to publish the service.

-- Suggested solution --
The solution to this problem would be to only generate WS operations from the methods in the interface(s) the class implements.

An example of a spring context that will cause CXF to fail is as follows:

<jaxws:endpoint id=""helloWorld"" implementor=""#serverBean"" address=""/HelloWorld"" />
<bean id=""serverBean"" class=""com.company.services.ServiceProviderImpl"">
    <property name=""myPropetry"" value=""MyValue"" />
</bean>

-- Workaround --
A workaround to the problem can be to use constructor injection. This removes the need for setter methods.
The following spring context shows how this can be done:
<jaxws:endpoint id=""helloWorld"" implementor=""#serverBean"" address=""/HelloWorld"" />
<bean id=""serverBean"" class=""com.company.services.ServiceProviderImpl"">
    <<constructor-arg index=""0"" value=""MyValue"" />
</bean>
","CXF 2.0, Spring 2, JAX-WS",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-01 14:34:39.584,,,no_permission,,,,,,,,,,,,,111705,,,Fri Aug 31 13:41:36 UTC 2007,,,,,,0|i140jr:,231551,,,,,,,,"01/Aug/07 14:34;dkulp;
Duplicate of CXF-813 which is fixed on trunk (and will make it into 2.0.1)","31/Aug/07 12:57;abuijze;Issue was said to be solved in 2.0.1, nut it still causes problems.

When the service implementation bean is advised (and thus the bean is proxied), CXF is unable to generate the same web service from the bean as when it hasn't been advised.

Below is the mesage of the exception that is thrown.

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pointOfSaleService': Invocation of init method failed; nested exception is org.apache.cxf.service.factory.ServiceConstructionException: Could not find definition for service $Proxy43Service.

The name of the service in the WSDL is PointOfSale. When I set this name in the spring configuration (in the <jaxws:endpoint> element), I get a nullpointer exception.","31/Aug/07 13:41;dkulp;
The AOP case (using proxies) is a different issue.   See my comments in:
https://issues.apache.org/jira/browse/CXF-874

Basically, according to JAX-WS, if the annotation on the object does NOT specify the endpointInterface, we MUST process all methods on the object itself.   With a Proxy, the @WebService annotation doesn't exist.   Thus, all methods are processed.

The workaround is to specify the implementorClass attribute on the jaxws:endpoint (in your case, would set to com.company.services.ServiceProviderImpl) so the runtime can find the proper annotation and find the correct information.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"jaxws:endpoint, simple:client  not support setting binding element value",CXF-869,12375111,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,01/Aug/07 06:58,05/Oct/07 16:46,14/Mar/19 02:28,01/Aug/07 07:16,2.0,,,,,,,2.0.2,,,,,,,0,"I just checked the simple.xsd with the ClientProxyFactoryBeanDefinitionParser and jaxws.xsd with EndpointDefinitionParser,
they are missing parsing the binding element code.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111704,,,Wed Aug 01 07:16:17 UTC 2007,,,,,,0|i0v3hb:,179537,,,,,,,,01/Aug/07 07:16;njiang;The codes had been committed to the SVN repository.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
dispatch_provider sample is completely broken,CXF-868,12375091,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,blin,blin,01/Aug/07 03:17,29/Aug/07 18:14,14/Mar/19 02:28,01/Aug/07 04:07,2.0.1,,,,,,,2.0.1,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111703,,,2007-08-01 03:17:58.0,,,,,,0|i1a9d3:,267983,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in ws_addressing and ws_policy samples,CXF-867,12375090,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,blin,blin,01/Aug/07 03:16,29/Aug/07 02:02,14/Mar/19 02:28,03/Aug/07 16:07,2.0.1,,,,,,,2.0.1,,,,,,,0,"With 2.0.1 kit, both ws_addressing and ws_policy samples run successfully, however server spit warning message followed by a NullPointerException in following, can some one take a loot at this?


     [java] WARNING: SERVER_TRANSPORT_REBASE_FAILURE_MSG
     [java] java.lang.NullPointerException
     [java]     at org.apache.cxf.ws.addressing.ContextUtils.rebaseResponse(ContextUtils.java:373)
     [java]     at org.apache.cxf.ws.addressing.MAPAggregator.addRoleSpecific(MAPAggregator.java:476)
     [java]     at org.apache.cxf.ws.addressing.MAPAggregator.aggregate(MAPAggregator.java:353)
     [java]     at org.apache.cxf.ws.addressing.MAPAggregator.mediate(MAPAggregator.java:307)
     [java]     at org.apache.cxf.ws.addressing.MAPAggregator.handleMessage(MAPAggregator.java:132)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
     [java]     at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:90)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:224)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.resume(PhaseInterceptorChain.java:184)
     [java]     at org.apache.cxf.ws.addressing.ContextUtils$1.run(ContextUtils.java:417)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
     [java]     at java.lang.Thread.run(Thread.java:595)
     [java] Aug 1, 2007 11:13:57 AM org.apache.cxf.ws.addressing.soap.MAPCodec encode
     [java] INFO: Outbound WS-Addressing headers
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111702,,,2007-08-01 03:16:30.0,,,,,,0|i0v32f:,179470,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Impls for Sample dispatch_provider don't have @WebServiceProvider,CXF-866,12375068,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,daisyli,daisyli,31/Jul/07 20:31,30/Apr/08 15:00,14/Mar/19 02:28,26/Feb/08 20:23,2.0-M1,,,,,,,2.0.4,,Samples,,,,,0,"GreeterDOMSourceMessageProvider.java
GreeterDOMSourcePayloadProvider.java

The sample doesn't work with spring container because they don't have @WebServiceProvider. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-01 04:17:05.969,,,no_permission,,,,,,,,,,,,,111701,,,Tue Feb 26 20:23:41 UTC 2008,,,,,,0|i1a9db:,267984,,,,,,,,"01/Aug/07 04:17;jliu;Hi Daisy, they DO have @WebServiceProvider annotation. Could you please provide the error message or stack trace to show dispatch_provider sample does not work in your environment? 

Thanks.
Jervis","01/Aug/07 14:48;daisyli;Hi Jevis,

When I made @WebServiceProvider changes to these two impl files, the demo worked fine with spring container. 

@WebServiceProvider(portName = ""SoapPort2"", serviceName = ""SOAPService2"",
                      targetNamespace = ""http://apache.org/hello_world_soap_http"",
                      wsdlLocation = ""wsdl/hello_world.wsdl"")
@ServiceMode(value = Service.Mode.MESSAGE)
public class GreeterDOMSourceMessageProvider implements Provider<DOMSource> {


@WebServiceProvider(portName = ""SoapPort3"", serviceName = ""SOAPService3"",
                      targetNamespace = ""http://apache.org/hello_world_soap_http"",
                      wsdlLocation = ""wsdl/hello_world.wsdl"")
public class GreeterDOMSourcePayloadProvider implements Provider<DOMSource> {

I got the following errors when running the current sample dispatch_provider with spring container. 

C:\IONA\artix_5.0\java\bin>spring_container.bat start
Setting JAVA_HOME to C:\jdk1.5.0_06
Setting ANT_HOME to C:\IONA\artix_5.0\tools\ant
Setting PATH variables
Aug 1, 2007 10:41:42 AM org.apache.cxf.bus.spring.SpringBusFactory createBus
WARNING: Failed to create application context.
org.springframework.beans.factory.BeanCreationException: Error creating bean wit
h name 'SoapEndpoint2': Invocation of init method failed; nested exception is ja
va.lang.NullPointerException
Caused by: java.lang.NullPointerException
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOp
erationsForProvider(JaxWsServiceFactoryBean.java:184)
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOp
erations(JaxWsServiceFactoryBean.java:168)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServ
iceFromWSDL(ReflectionServiceFactoryBean.java:197)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializ
eServiceModel(ReflectionServiceFactoryBean.java:248)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(Re
flectionServiceFactoryBean.java:138)
        at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(Abstra
ctEndpointFactory.java:81)
        at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.ja
va:106)
        at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactory
Bean.java:129)
        at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:277)
        at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:223)
        at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:175)
        at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:329)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1214)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1179)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.initializeBean(AbstractAutowireCapableBeanFactory.java:1145)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:427)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getOb
ject(AbstractBeanFactory.java:251)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistr
y.getSingleton(DefaultSingletonBeanRegistry.java:144)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:248)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:160)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.
preInstantiateSingletons(DefaultListableBeanFactory.java:279)
        at org.springframework.context.support.AbstractApplicationContext.refres
h(AbstractApplicationContext.java:360)
        at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplication
Context.java:71)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory
.java:81)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory
.java:66)
        at com.iona.cxf.container.Application.init(Application.java:113)
        at com.iona.cxf.container.Application.changeState(Application.java:66)
        at com.iona.cxf.container.Application.start(Application.java:40)
        at com.iona.cxf.container.ContainerBean.deployApplication(ContainerBean.
java:228)
        at com.iona.cxf.container.ContainerBean.deployWar(ContainerBean.java:220
)
        at com.iona.cxf.container.ContainerBean.scanRepository(ContainerBean.jav
a:340)
        at com.iona.cxf.container.ContainerBean.run(ContainerBean.java:105)
        at com.iona.cxf.container.ContainerBean.afterPropertiesSet(ContainerBean
.java:361)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1175)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.initializeBean(AbstractAutowireCapableBeanFactory.java:1145)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:427)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getOb
ject(AbstractBeanFactory.java:251)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistr
y.getSingleton(DefaultSingletonBeanRegistry.java:144)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:248)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:160)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.
preInstantiateSingletons(DefaultListableBeanFactory.java:279)
        at org.springframework.context.support.AbstractApplicationContext.refres
h(AbstractApplicationContext.java:360)
        at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplication
Context.java:78)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory
.java:94)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory
.java:89)
        at com.iona.cxf.container.ContainerLauncher.startContainer(ContainerLaun
cher.java:166)
        at com.iona.cxf.container.ContainerLauncher.execute(ContainerLauncher.ja
va:83)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.ja
va:83)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.ja
va:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.ja
va:39)
        at com.iona.cxf.container.ContainerLauncher.main(ContainerLauncher.java:
60)
Aug 1, 2007 10:41:42 AM com.iona.cxf.container.ContainerBean scanRepository
SEVERE: java.lang.NullPointerException
com.iona.cxf.container.ContainerException: java.lang.NullPointerException
        at com.iona.cxf.container.ContainerBean.deployApplication(ContainerBean.
java:230)
        at com.iona.cxf.container.ContainerBean.deployWar(ContainerBean.java:220
)
        at com.iona.cxf.container.ContainerBean.scanRepository(ContainerBean.jav
a:340)
        at com.iona.cxf.container.ContainerBean.run(ContainerBean.java:105)
        at com.iona.cxf.container.ContainerBean.afterPropertiesSet(ContainerBean
.java:361)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1175)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.initializeBean(AbstractAutowireCapableBeanFactory.java:1145)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:427)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getOb
ject(AbstractBeanFactory.java:251)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistr
y.getSingleton(DefaultSingletonBeanRegistry.java:144)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:248)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:160)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.
preInstantiateSingletons(DefaultListableBeanFactory.java:279)
        at org.springframework.context.support.AbstractApplicationContext.refres
h(AbstractApplicationContext.java:360)
        at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplication
Context.java:78)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory
.java:94)
        at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory
.java:89)
        at com.iona.cxf.container.ContainerLauncher.startContainer(ContainerLaun
cher.java:166)
        at com.iona.cxf.container.ContainerLauncher.execute(ContainerLauncher.ja
va:83)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.ja
va:83)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.ja
va:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.ja
va:39)
        at com.iona.cxf.container.ContainerLauncher.main(ContainerLauncher.java:
60)
Caused by: java.lang.NullPointerException
        at com.iona.cxf.container.Application.cleanup(Application.java:131)
        at com.iona.cxf.container.Application.changeState(Application.java:70)
        at com.iona.cxf.container.Application.start(Application.java:40)
        at com.iona.cxf.container.ContainerBean.deployApplication(ContainerBean.
java:228)
        ... 22 more
Spring Container Ready","02/Aug/07 07:03;jliu;Hi Daisy, the current dispatch_provider sample code is like below:

@WebServiceProvider()
public class GreeterDOMSourcePayloadProvider implements Provider<DOMSource> {
..........}


@WebServiceProvider()
@ServiceMode(value = Service.Mode.MESSAGE)            
public class GreeterDOMSourceMessageProvider implements Provider<DOMSource> {
.........
}

Do you mean you changed @WebServiceProvider() to @WebServiceProvider(portName = ""SoapPort2"", serviceName = ""SOAPService2"", 
                      targetNamespace = ""http://apache.org/hello_world_soap_http"", 
                      wsdlLocation = ""wsdl/hello_world.wsdl"") ?

Then it works? What version of CXF are you using?
","03/Aug/07 13:47;daisyli;Yes, it works after I changed @WebServiceProvider() to 

@WebServiceProvider() to @WebServiceProvider(portName = ""SoapPort2"", serviceName = ""SOAPService2"", 
                      targetNamespace = ""http://apache.org/hello_world_soap_http"", 
                      wsdlLocation = ""wsdl/hello_world.wsdl"")


I used Artix 5.0 release kit.

","26/Feb/08 20:23;dkulp;
I'm going to resolve this issue as the sample seems to work perfectly in 2.0.4 and 2.1 with both  the ""simple"" form (no params to the annotation) as well as when I add the params.   If something still doesn't work, please re-open with more details.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF http-jetty transport do not call the jetty server engine shutdown when the server stop,CXF-865,12375026,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,31/Jul/07 07:40,21/Apr/10 12:57,14/Mar/19 02:28,01/Dec/07 04:37,2.0,,,,,,,2.0.4,,Transports,,,,,0,"It appears that stopping the server in CXF is not shutting down the Jetty engine, which causes my application to hang because Jetty's threads are still blocking on the server socket accept. After a shutdown, I still see Thread [btpool0-0 - Acceptor0 SelectChannelConnector@0.0.0.0:10001] (Running).

I have a simple test application pasted below that can reproduce the problem. At this point I had to add some calls to get the destination and cast it to a Jetty specific class to get things to exit. Is there a better way to do this? Is there something I'm not configuring correctly? Any help is appreciated.
 
This is under Java 1.5 with CXF 2.0. Jetty is being included from the CXF libs directory. 
 
package org.mpilone.cxftest;
 
import java.io.IOException;
import org.apache.cxf.endpoint.Server;
import org.apache.cxf.frontend.ServerFactoryBean;
 
public class CxfJettyTest
{
  public void doIt()
  {
    System.out.println(""Running test method"");
  }
 
  public static void main(String[] args) throws IOException
  {
    // Create an Service and Server
    ServerFactoryBean serverFactory = new ServerFactoryBean();
    serverFactory.setServiceClass(CxfJettyTest.class);
    serverFactory.setServiceBean(new CxfJettyTest());
    serverFactory.setAddress(""http://localhost:10001/RemoteApi"");
    Server mServer = serverFactory.create();
 
    mServer.start();
    System.in.read();
    mServer.stop();
 
    // Adding these lines allows the application to exit, but
    // WARNING: EXCEPTION
    // java.nio.channels.ClosedChannelException
    // log statements are produced.
 
// JettyHTTPDestination jettyDest = (JettyHTTPDestination)
// mServer.getDestination();
// JettyHTTPServerEngine jettyEngine = (JettyHTTPServerEngine)
// jettyDest.getEngine();
// jettyEngine.shutdown();
 
    System.out.println(""Exiting"");
  }
}


If you looking into the code you will find there is a note in the JettyHTTPServerEngine's removeServant(URL url)

            /* Bug in Jetty, we cannot do this.  If we restart later, data goes off
             * someplace unknown
            if (servantCount == 0) {
                try {
                   ....
            }*/

I just added the shutdown engine's code below the comments and tested it against the systest. There were some  tests (such as ws.rm , mtom )failed.
It looks like if we shutdown the engine, when the engine start again , the engine can not get the request info again , specially the http keep alive message.
Current I can't reproduce this bug by adding the unit test which simply calls start and shutdown method the JettyHTTPServerEngine.
It may take some time to resolve this issue. 
",,,,,,,,,,,,CXF-1034,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-07 16:57:14.508,,,no_permission,,,,,,,,,,,,,111700,,,Sat Dec 01 04:37:56 UTC 2007,,,,,,0|i1a9dj:,267985,,,,,,,,"07/Nov/07 16:57;jgathman;I ran through a few scenarios, and several things come to light for me.

JettyHTTPServerEngine.stop() FIRST calls ""connector.close()"".

It is this closing connector which is causing the exception to be thrown, not Jetty's Server.stop().

Second, it's clear that it's a thread timing issue, because when I run in Debug mode, it sometimes ends without error (depending on when I have a breakpoint)

Finally, I'm able to alleviate the Exception Symptoms by first calling ""connector.stop()"", which is a method on Jetty's ""Lifecycle Interface"".

According to Jetty's JavaDoc,

void stop()
          throws Exception

    Stops the component. The component may wait for current activities to complete normally, but it can be interrupted.

It appears to me, therefore, that calling ""stop()"" before close() in the ""JettyHttpServerEngine.stop()"" method will coordinate the thread ends better, quelling the exception.


I don't have a use case for restarting Jetty Server, but, in JettyHttpServerEngine.stop() , it calls ""server.destroy()"" after ""server.stop()"".  My guess would be that the server would subsequently be unusable because of this call.

Hope this helps.
","07/Nov/07 17:03;jgathman;I forgot to mention... JettyHTTPDestination doesn't call ""shutdown"" on it's JettyHTTPServerEngine server object within it's own shutdown method, which should be start the shutdown of Jetty in the first place.

",07/Nov/07 17:08;sergey_beryozkin;I can confirm with cxf 2.0.3 I'm seeing a CloseChannelException thrown on shutdown,"07/Nov/07 17:29;njiang;You can find some commit log here 
https://issues.apache.org/jira/browse/CXF-1034","07/Nov/07 17:31;njiang;I just want to do a quick fixing for it with the below code:

     if (server != null) {
            try {
                connector.stop();
                connector.close();            
            } finally {         
                server.stop();
                server.destroy();
                server = null;
            }
        }



BTW, now we just shutdown the JettyEngine when the Bus.shutdown() is called. 
For calling the Server.start() and stop() , the JettyEngine will not be effected.

Willem.",01/Dec/07 04:37;njiang;The fix should be in the svn repository now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wsdl2Service not working,CXF-855,12374752,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,27/Jul/07 01:41,30/Jul/07 08:10,14/Mar/19 02:28,30/Jul/07 08:10,2.0.1,,,,,,,2.0.1,,Tooling,,,,,0,The address part is missing,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-30 08:10:50.324,,,no_permission,,,,,,,,,,,,,111692,,,Mon Jul 30 08:10:50 UTC 2007,,,,,,0|i13zqv:,231421,,,,,,,,30/Jul/07 08:10;blin;see commit http://svn.apache.org/viewvc?view=rev&rev=560885,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Class renaming needed,CXF-854,12374690,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,jliu,mazzag,mazzag,26/Jul/07 16:22,29/Aug/07 18:14,14/Mar/19 02:28,02/Aug/07 07:27,,,,,,,,2.0.1,,,,,,,0,Class org.apache.cxf.systest.provider.AttachementServer needs to be renamed to .AttachmentServer,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111691,,,2007-07-26 16:22:21.0,,,,,,0|i1a9fj:,267994,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Package renaming needed,CXF-853,12374686,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,maomaode,mazzag,mazzag,26/Jul/07 16:17,05/Dec/07 19:44,14/Mar/19 02:28,27/Jul/07 03:04,,,,,,,,2.0.1,,Tooling,,,,,0,"package org.apache.cxf.tools.wsdlto.frontend.jaxws.customiztion needs to be renamed to "".customization""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111690,,,Thu Jul 26 17:18:05 UTC 2007,,,,,,0|i1a9fr:,267995,,,,,,,,"26/Jul/07 17:18;mazzag;Patch in CXF-770 should be applied before this change is made.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Array responses containing XmlAttribute cause exception in jettison,CXF-852,12374677,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,derekshaw,derekshaw,26/Jul/07 15:02,05/Oct/09 19:37,14/Mar/19 02:28,03/Oct/09 17:27,2.0,,,,,,,2.2.3,,Core,,,,,0,"When outputing lists of elements to JSON with an interface such as:

	@Get
	@HttpResource(location = ""/media/objects/{containerID}/{startIndex}/{endIndex}"")
	public List<Media> getMediaObjectList(	@WebParam(name = ""containerID"") int containerID,
										@WebParam(name = ""startIndex"") int startIndex,
										@WebParam(name = ""endIndex"") int endIndex)
										throws MediaFault;

If the object within the array contains an XmlAttribute annotation on one of its properties an exception is thrown in Jettison when retrieving the json response. Note that the XML response works as expected. The problem seems to be located at writeAttribute() in MappedXMLStreamWriter. The code attempts to cast a JSONArray to a JSONObject. Looks like perhaps there needs to be an instance of check as there is in other locations. Or that it is prematurely attempting to output the attribute before pulling the underlying object out of the Array, though this is just a guess....

The workaround for me is to change the @XmlAttribute on the contained object to an @XmlElement.

Here is the exception:

org.apache.cxf.interceptor.Fault: Marshalling Error: org.codehaus.jettison.json.JSONArray
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:155)
	at org.apache.cxf.jaxb.io.DataWriterImpl.write(DataWriterImpl.java:40)
	at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.writeParts(AbstractOutDatabindingInterceptor.java:98)
	at org.apache.cxf.interceptor.BareOutInterceptor.handleMessage(BareOutInterceptor.java:67)
	at org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor.handleMessage(XMLMessageOutInterceptor.java:71)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:206)
	at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:73)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:206)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:67)
	at org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:100)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:224)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:103)
	at org.apache.cxf.transport.servlet.CXFServlet.invoke(CXFServlet.java:261)
	at org.apache.cxf.transport.servlet.CXFServlet.doGet(CXFServlet.java:243)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:690)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:210)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:174)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:151)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:870)
	at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:685)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.lang.ClassCastException: org.codehaus.jettison.json.JSONArray
	at org.codehaus.jettison.mapped.MappedXMLStreamWriter.writeAttribute(MappedXMLStreamWriter.java:93)
	at org.codehaus.jettison.mapped.MappedXMLStreamWriter.writeAttribute(MappedXMLStreamWriter.java:130)
	at org.codehaus.jettison.mapped.MappedXMLStreamWriter.writeAttribute(MappedXMLStreamWriter.java:134)
	at com.sun.xml.bind.v2.runtime.output.XMLStreamWriterOutput.attribute(XMLStreamWriterOutput.java:88)
	at com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl.attribute(XmlOutputAbstractImpl.java:70)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.attribute(XMLSerializer.java:413)
	at com.sun.xml.bind.v2.runtime.property.AttributeProperty.serializeAttributes(AttributeProperty.java:63)
	at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeAttributes(ClassBeanInfoImpl.java:295)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:617)
	at com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty.serializeItem(ArrayElementNodeProperty.java:29)
	at com.sun.xml.bind.v2.runtime.property.ArrayElementProperty.serializeListBody(ArrayElementProperty.java:132)
	at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:101)
	at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:286)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsSoleContent(XMLSerializer.java:532)
	at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeRoot(ClassBeanInfoImpl.java:276)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:461)
	at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:292)
	at com.sun.xml.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:148)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:138)","Windows XP, Java 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-29 23:47:41.263,,,no_permission,,,,,,,,,,,,,111689,,,Sat Oct 03 17:27:33 UTC 2009,,,,,,0|i0syw7:,167130,,,,,,,,"29/Aug/07 23:47;schavali;I have also  ran into this issue. It happens when the # of nodes to be marshalled is > 1. If it is 1, then there is no problem. Issue seems to be in org.codehaus.jettison.mapped.MappedXMLStreamWriter

Is there a separate tracker for the Jettison project?","03/Oct/09 17:27;dkulp;
This seems to be the same stack trace as:
http://jira.codehaus.org/browse/JETTISON-26
which is now marked resolved.    In anycase, if it's still an issue, a bug should be opened there.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"performance of repeated calls to jaxws.Service.createPort is poor, jaxb context is created every time",CXF-850,12374652,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gtully,gtully,26/Jul/07 13:43,08/Aug/07 11:01,14/Mar/19 02:28,26/Jul/07 16:25,2.0.1,,,,,,,2.0.1,,JAX-WS Runtime,,,,,0,the JAXBContext should be cached,,,,,,,,,,,,,,,,,26/Jul/07 13:46;gtully;jaxb_context_cache.gtully.patch;https://issues.apache.org/jira/secure/attachment/12362609/jaxb_context_cache.gtully.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-26 15:36:32.966,,,no_permission,,,,,,,,,,,,,111687,,,Thu Jul 26 16:42:16 UTC 2007,,,,,,0|i1a9fz:,267996,,,,,,,,"26/Jul/07 13:46;gtully;This patch implements a static JAXBContext cache bases on the set of classes that are used to create the JAXBcontext.
The decision to include the ws-addressing types is determined before the contex is created to ensure that the context is not created twice.

Simple analysis of code looping on calls to getPort show that JAXBcontext creation takes more than 30%. With the cache, this hit is taken on just the first call.

","26/Jul/07 13:52;gtully;The other major expensive piece of work that getPort/createPort does is generate a memory model of the wsdl definition with service infos and endpoint infos and binding infos and schemas.
Ideally these List<ServiceInfos> could be cached with the wsdl definition but we currently have a problem in that we effect the endpointinfo when setting the endpoint address at various places. So at the moment this cache cannot be used, the SpringBeansTest shows up the problem. Hopefully I will come back to this if I am not beaten to it.

The cache should be in WSDLServiceBuilder IMHO
:
            synchronized (SERVICE_INFOS_CACHE) {
                if (!SERVICE_INFOS_CACHE.containsKey(wsdlService)) {
                    try {
                        List<ServiceInfo> svcs = 
                            new WSDLServiceBuilder(getBus()).buildServices(definition, wsdlService);
                        SERVICE_INFOS_CACHE.put(wsdlService, svcs);
                    } catch (XmlSchemaException ex) {
                        throw new ServiceConstructionException(new Message(""SERVICE_CREATION_MSG"", LOG), ex);
                    }
                    
                }
            services = SERVICE_INFOS_CACHE.get(wsdlService);

","26/Jul/07 15:36;dkulp;This patch doesn't actually work.   The Set<Class> in the WeakHashMap is not held onto.   Thus, if you add a few System.gc() calls in your test, the context is collected and a new one is created.

I'm going to make two changes:
1) The JAXBDataBinding hold onto the Set with a strong reference.   Thus, it won't be collected.

2) I'm switching the map to a org.apache.cxf.common.util.CacheMap  which handles the case of the keys being .equals, but not == and keeping the object in the cache.



","26/Jul/07 16:13;gtully;Hi Dan,
good catch, I had mistakenly associated weak reference with out of memory errors but now see that that is the domain of soft references.
I wonder about the strong reference though, my use case is quite specific, repeated calls to getPort rather than caching ports. I wonder are there cases like arbitrary routers where a hard reference to a multitude of JAXBContext could be a memory hog?
It was the specificity of my use case in the context of a generic framework  that caused me to think of the WeakHashMap in the first place.","26/Jul/07 16:25;dkulp;The CacheMap is a special kind of WeakHashMap.   It's designed to hold onto the target object (in this case the JAXBContext) as long as anyone strongly references any of the keys (in this case, the Set<Class<?>>) that were used to retrieve it.   It's perfect for this.   To make it work, all that needed to be done was the JAXBDataBinding instance in the service port just needs to strongly hold onto the Set<Class<?>> that was used as the key.   When the port goes away, the set is no longer strongly referenced, it goes away, the cache clears, etc...

In any case, it's committed now.  :-)","26/Jul/07 16:42;gtully;Cool, thanks ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SSLUtils logs too much at INFO level,CXF-849,12374605,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bigdan,bigdan,26/Jul/07 03:40,05/Oct/07 16:46,14/Mar/19 02:28,20/Aug/07 09:24,2.0,,,,,,,2.0.2,,Transports,,,,,0,"Doing a lot of web service calls over SSL results in huge amounts of logging output from the SSLUtils class at INFO level. 

For example the following is just a small part of what's logged repeatedly (once per service call):

26/07/2007 13:37:09 org.apache.cxf.transport.https.SSLUtils getCiphersuites
INFO: The cipher suites have not been configured, falling back to cipher suite filters.
26/07/2007 13:37:09 org.apache.cxf.transport.https.SSLUtils getCiphersuites
INFO: The cipher suite filters have not been configured, falling back to default filters.
26/07/2007 13:37:09 org.apache.cxf.transport.https.SSLUtils compileRegexPatterns
INFO: Ciphersuite include filter: .*_EXPORT_.*
26/07/2007 13:37:09 org.apache.cxf.transport.https.SSLUtils compileRegexPatterns
INFO: Ciphersuite include filter: .*_EXPORT1024_.*
26/07/2007 13:37:09 org.apache.cxf.transport.https.SSLUtils compileRegexPatterns
INFO: Ciphersuite include filter: .*_WITH_DES_.*
26/07/2007 13:37:09 org.apache.cxf.transport.https.SSLUtils compileRegexPatterns
INFO: Ciphersuite include filter: .*_WITH_NULL_.*
26/07/2007 13:37:09 org.apache.cxf.transport.https.SSLUtils getCiphersuites
INFO: The SSL_RSA_WITH_RC4_128_MD5 cipher suite is excluded by the filter.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-20 09:24:45.406,,,no_permission,,,,,,,,,,,,,111686,,,Mon Aug 20 09:24:45 UTC 2007,,,,,,0|i0v3hr:,179539,,,,,,,,20/Aug/07 09:24;njiang;this issue has been fixed in the revision 567613,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLValidator not working well with the bundle jar,CXF-848,12374596,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,maomaode,maomaode,26/Jul/07 01:42,29/Jul/07 19:06,14/Mar/19 02:28,29/Jul/07 19:06,2.0.1,,,,,,,2.0.1,,Tooling,,,,,0,"WSDLValidator has problem with the bundle jar, the exception like below


org.apache.cxf.tools.common.ToolException:
line 8 column 56 of file:/C:/src/java/apache/cxf/distribution/HelloWorld.wsdl: cvc-elt.1: Cannot find the declaration of element 'wsdl:definitions'.
        at org.apache.cxf.tools.validator.internal.SchemaValidator.validate(SchemaValidator.java:202)
        at org.apache.cxf.tools.validator.internal.SchemaValidator.validate(SchemaValidator.java:118)
        at org.apache.cxf.tools.validator.internal.SchemaValidator.isValid(SchemaValidator.java:102)
        at org.apache.cxf.tools.validator.internal.WSDL11Validator.isValid(WSDL11Validator.java:113)
        at org.apache.cxf.tools.validator.WSDLValidator.execute(WSDLValidator.java:65)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
        at org.apache.cxf.tools.validator.WSDLValidator.main(WSDLValidator.java:93)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-27 20:24:36.293,,,no_permission,,,,,,,,,,,,,111685,,,Sun Jul 29 19:06:00 UTC 2007,,,,,,0|i140jj:,231550,,,,,,,,"27/Jul/07 20:24;dandiep;This is a result of a bug in the maven shade plugin which creates the bundle jar. It wasn't creating directory entries for things like schemas/wsdl/ and therefore ClassLoader.getResources(""schemas/wsdl"") was not workign correctly. I'll be doing a shade plugin release tomorrow at which time I'll close this issue.",29/Jul/07 19:06;dandiep;This is fixed now that we've upgrade to shade-alpha-10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
swa will generate temp file  until process exit,CXF-847,12374519,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,25/Jul/07 05:32,05/Dec/07 19:44,14/Mar/19 02:28,25/Jul/07 05:58,,,,,,,,2.0.1,,,,,,,0,"when use swa, cxf will generate attachment tmp file in /tmp (linux) until the process exit, if it's a long term run server, the generated tmp file will eat up all disk space",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-25 08:30:02.447,,,no_permission,,,,,,,,,,,,,111684,,,Wed Jul 25 08:38:53 UTC 2007,,,,,,0|i1a9g7:,267997,,,,,,,,"25/Jul/07 05:54;ffang;It caused by an unclosed CachedOutputStream, the oneline added code fix this issue

private void cache(DelegatingInputStream input, boolean deleteOnClose) throws IOException {
        if (loaded.contains(input)) {
            return;
        }
        loaded.add(input);
        CachedOutputStream out = new CachedOutputStream();
        IOUtils.copy(input, out);
        input.setInputStream(out.getInputStream());
+++ out.close();+++
    }","25/Jul/07 08:30;gtully;hi Freeman, should that close be in a finally block?","25/Jul/07 08:38;ffang;Hi Gary,

You are absolutly correct, will fix it soon

Thanks very much

Freeman",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MTOM Content-Type header is invalid,CXF-846,12374513,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,dkulp,dkulp,25/Jul/07 03:00,26/Jul/07 15:40,14/Mar/19 02:28,26/Jul/07 15:40,2.0,,,,,,,2.0.1,,Soap Binding,,,,,0,"
When using MTOM, the Content-Type header in the result message is not valid.  Example:

HTTP/1.1 200 OK 
Server: Apache-Coyote/1.1 
SOAPAction: """" 
Content-Type: multipart/related; type=""application/xop+xml""; boundary=""----=_Part_0_2147172487.1185331898894""; start=""<root.message@cxf.apache.org>""; start-info=""text/xml;charset=UTF-8 
Content-Length: 7015 
Date: Wed, 25 Jul 2007 02:51:38 GMT


Note that the ""start-info"" section does not have a closing double quote.   Thus, header parsers may choke on it.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-26 15:40:14.179,,,no_permission,,,,,,,,,,,,,111683,,,Thu Jul 26 15:40:14 UTC 2007,,,,,,0|i140lj:,231559,,,,,,,,"26/Jul/07 01:52;dkulp;
This is actually a bug in tomcat:
https://issues.apache.org/bugzilla/show_bug.cgi?id=42976

Investigating if we can not have the charset in the start-info....","26/Jul/07 15:40;dandiep;I removed the charset=foo from the start-info header in SVN. I've confirmed this works fine with .NET. Since this is what the JAX-WS RI does as well, we should be fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OneWay operations agains JAX-WS RI server don't work,CXF-845,12374512,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,eglynn,dkulp,dkulp,25/Jul/07 02:30,29/Aug/07 02:02,14/Mar/19 02:28,27/Jul/07 10:35,2.0,,,,,,,2.0.1,,Soap Binding,Transports,,,,0,"
The JAX-WS RI uses a 202 Accepted message in ""chunked"" form to respond to a OneWay message.   According to the WSI BP, that is allowed.   However, CXF seems to think it's a partial response message and tries to parse it as XML, thus throwing an exception.


Response from RI:

HTTP/1.1 202 Accepted 
Server: Apache-Coyote/1.1 
Transfer-Encoding: chunked 
Date: Wed, 25 Jul 2007 02:27:30 GMT 
 
0 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-27 10:35:48.404,,,no_permission,,,,,,,,,,,,,111682,,,Fri Jul 27 10:35:48 UTC 2007,,,,,,0|i1a9gf:,267998,,,,,,,,27/Jul/07 10:35;eglynn;Fixed in commit r559803.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RPC/Lit null value parameters are skipped,CXF-844,12374487,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,24/Jul/07 18:39,29/Aug/07 02:02,14/Mar/19 02:28,24/Jul/07 18:50,2.0,,,,,,,2.0.1,,Soap Binding,,,,,0,"
If a parameter to a RPC/Lit operation is null, the soap binding just skips it and doesn't write out a part at all.   Thus, the soap message is invalid as the part accessor it missing.

WSI BP R2211 states that RPC/Lit parts cannot be nillable.   Thus, an exception should be thrown.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111681,,,2007-07-24 18:39:26.0,,,,,,0|i1a9gn:,267999,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Code first, Multiple out headers is only putting one soap:header element in the wsdl",CXF-843,12374486,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,24/Jul/07 18:36,29/Aug/07 02:02,14/Mar/19 02:28,24/Jul/07 18:58,2.0,,,,,,,2.0.1,,JAX-WS Runtime,Service Model,Soap Binding,Tooling,,0,"
If a method has multiple out headers (or in/out headers), only the first one is added to the wsdl as a soap:header.   The others are not listed as headers and not put in the ""parts"" list for the soap:body.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111680,,,2007-07-24 18:36:38.0,,,,,,0|i1a9gv:,268000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Code first, RPC/Lit with lots of inouts/outs/headers doesn't work",CXF-842,12374485,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,24/Jul/07 18:34,29/Aug/07 02:02,14/Mar/19 02:28,24/Jul/07 18:58,2.0,,,,,,,2.0.1,,JAX-WS Runtime,Soap Binding,,,,0,"
Methods like:
    String multiHeaderInOut(
                        @WebParam(mode = WebParam.Mode.OUT, header = true)
                        Holder<String> a,
                        @WebParam(mode = WebParam.Mode.INOUT)
                        Holder<String> b,
                        @WebParam(mode = WebParam.Mode.OUT)
                        Holder<String> c,
                        @WebParam(mode = WebParam.Mode.INOUT, header = true)
                        Holder<String> d,
                        @WebParam(mode = WebParam.Mode.INOUT)
                        Holder<String> e,
                        @WebParam(mode = WebParam.Mode.OUT, header = true)
                        Holder<String> f,
                        @WebParam(mode = WebParam.Mode.OUT)
                        Holder<String> g);

result in incorrect SOAP messages being written and ArrayIndex issues and wrong number of param issues on the server.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111679,,,2007-07-24 18:34:25.0,,,,,,0|i0v2xz:,179450,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP RPC/Lit uses paramOrder when sending messages instead of the order in the message,CXF-841,12374483,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,24/Jul/07 18:31,29/Aug/07 02:02,14/Mar/19 02:28,24/Jul/07 18:58,2.0,,,,,,,2.0.1,,Soap Binding,,,,,0,"
If the WSDL has a paramaterOrder attribute, the SOAP binding is using that for ordering the message parts in the service model which is wrong.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111678,,,2007-07-24 18:31:56.0,,,,,,0|i0v2yf:,179452,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fix misspelling of ""prefix""",CXF-839,12374472,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,mazzag,mazzag,24/Jul/07 16:13,29/Aug/07 02:02,14/Mar/19 02:28,25/Jul/07 02:02,,,,,,,,2.0.1,,Core,,,,,0,perfix->prefix in recent commit.,,,,,,,,,,,,,,,,,24/Jul/07 16:14;mazzag;prefixPatch.txt;https://issues.apache.org/jira/secure/attachment/12362452/prefixPatch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-25 02:02:52.617,,,no_permission,,,,,,,,,,,,,111676,,,Wed Jul 25 02:02:52 UTC 2007,,,,,,0|i0sywn:,167132,,,,,,,,25/Jul/07 02:02;njiang;It has been applied in to the SVN.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP Header element is returned to the client even if detached in a JAXWS Handler,CXF-827,12374439,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,germm,germm,24/Jul/07 10:19,29/Aug/07 02:02,14/Mar/19 02:28,18/Aug/07 14:48,2.0,,,,,,,2.0.1,,JAX-WS Runtime,,,,,0,"If a JAXWS Handler detaches a SOAP Header element with the the detachNode() Method of the SOAPElement Class during inbound processing of a SOAP Message, the Header is still returned to the client in the SOAP Response.

Here is a code sample from my JAXWS Handler which detaches the Header element:

	public boolean handleMessage(SOAPMessageContext msgCtx) {
		if (isOutboundMessage(msgCtx)) {
                       return true;
                }

		try {
			SOAPHeader header = msgCtx.getMessage().getSOAPPart().getEnvelope().getHeader();
			if (header == null) {
				return true;
			}
	
			List<SOAPElement> toRemove = new ArrayList<SOAPElement>();
			for (Iterator iter = header.getChildElements(); iter.hasNext();) {
				Object obj = iter.next();
				if (obj instanceof SOAPElement) {
					SOAPElement element = (SOAPElement) obj;
	
					// Security Headers suchen
					Name name = element.getElementName();
					if (NsConstants.WSS.equals(name.getURI())
							&& HandlerConstants.WSS_SECURITY_ELEM.equals(name.getLocalName())) {
						log.debug(""WSS Security Header found"");
						toRemove.add(element);
					}
				}
			}
	
			// Security Headers, welche erfoglreich bearbeitet wurden, entfernen
			for (SOAPElement elem : toRemove) {
				elem.detachNode();
			}			
			return true;
		} catch(SOAPException e) {
			log.error(""Can't remove security header"", e);
			throw new RuntimeException(""Can't remove security header"", e);
		}
		
	}",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111664,,,Sat Aug 18 14:48:27 UTC 2007,,,,,,0|i140j3:,231548,,,,,,,,18/Aug/07 14:48;germm;I can confirm that this issue is fixed in CXF 2.0.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSS Security header processed by WSS4J is returned as response header,CXF-826,12374438,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,germm,germm,24/Jul/07 10:11,29/Aug/07 02:02,14/Mar/19 02:28,18/Aug/07 14:46,2.0,,,,,,,2.0.1,,WS-* Components,,,,,0,"If a SOAP request contains a WSS Security header, the header will be returned to the client with the SOAP response, although it was sucessfully processed by the WSS4JInInterceptor. This leads to an error on the client because the client does not understand the mustUnderstand-Header.

IMHO, the WSS Security Header should be removed by the WSS4JInInterceptor.

Request:
<?xml version=""1.0"" encoding=""UTF-8""?>
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
<soapenv:Header>
<wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soapenv:mustUnderstand=""1"">
<Assertion xmlns=""urn:oasis:names:tc:SAML:1.0:assertion"" xmlns:saml=""urn:oasis:names:tc:SAML:1.0:assertion"" xmlns:samlp=""urn:oasis:names:tc:SAML:1.0:protocol"" AssertionID=""_9a45d2d65567f21cf91315506ec25a63"" IssueInstant=""2007-07-24T10:07:05.490Z"" Issuer=""dvberntest"" MajorVersion=""1"" MinorVersion=""1"">
...
</Assertion></wsse:Security>
</soapenv:Header>
<soapenv:Body><helloWorld xmlns=""http://test.sts.stvbe.dvbern.ch""></helloWorld></soapenv:Body></soapenv:Envelope>


Response:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
<soap:Header>
<wsse:Security xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soapenv:mustUnderstand=""1"">
<Assertion xmlns=""urn:oasis:names:tc:SAML:1.0:assertion"" xmlns:saml=""urn:oasis:names:tc:SAML:1.0:assertion"" xmlns:samlp=""urn:oasis:names:tc:SAML:1.0:protocol"" AssertionID=""_9a45d2d65567f21cf91315506ec25a63"" IssueInstant=""2007-07-24T10:07:05.490Z"" Issuer=""dvberntest"" MajorVersion=""1"" MinorVersion=""1"">
...
</Assertion></wsse:Security>
</soap:Header>
<soap:Body><helloWorldResponse xmlns=""http://test.sts.stvbe.dvbern.ch""><helloWorldReturn> Hello From Apache CXF Service.</helloWorldReturn></helloWorldResponse></soap:Body></soap:Envelope>",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-16 23:57:32.338,,,no_permission,,,,,,,,,,,,,111663,,,Sat Aug 18 14:46:53 UTC 2007,,,,,,0|i140jb:,231549,,,,,,,,"16/Aug/07 23:57;mazzag;Two issues very closely related to this were fixed in late July.  Would you please check to see if the problem is still occurring in CXF 2.0.1--the latest release?  Thanks!
",18/Aug/07 14:46;germm;I can confirm that this issue is fixed in CXF 2.0.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WSS4JOutInterceptor does not work without ""user"" Property",CXF-825,12374437,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ulhasbhole,germm,germm,24/Jul/07 09:58,22/Feb/08 21:36,14/Mar/19 02:28,19/Feb/08 21:10,2.0,,,,,,,2.0.2,,WS-* Components,,,,,0,"The WSS4JOutInterceptor does not work if the WSHandlerConstants.USER configuration property is not set. But there exist some actions which do not require this property (i.e. SAMLTokenUnsigned). Therefore, this property should not be mandatory.

The Interceptor fails as follows:

A NullPointerException occurs if the property is not set:
java.lang.NullPointerException
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor.handleMessage(WSS4JOutInterceptor.java:119)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor.handleMessage(WSS4JOutInterceptor.java:42)

A SoapFaultoccurs if the property is set to an empty string:
org.apache.cxf.binding.soap.SoapFault: NO_USERNAME
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor.handleMessage(WSS4JOutInterceptor.java:126)
	at org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor.handleMessage(WSS4JOutInterceptor.java:42)

",,,,,,,,,,,,,,,,,22/Aug/07 16:58;coheig;cxf_saml.patch;https://issues.apache.org/jira/secure/attachment/12364337/cxf_saml.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-22 16:58:28.383,,,no_permission,,,,,,,,,,,,,111662,,,Tue Feb 19 21:10:40 UTC 2008,,,,,,0|i1a9jj:,268012,,,,,,,,"22/Aug/07 16:58;coheig;
The problem here is down to a missing set of brackets in the if statement in WSS4JOutInterceptor.

The logic of the if statement on line 119 of WSS4JOutInterceptor currently reads ""if (a && b || c)"" whereas
it should read ""if (a && (b || c))"".

I have supplied a patch attached to this jira item + will ask the cxf-dev list to commit it.","19/Feb/08 21:10;dkulp;
Patch was applied in Aug, 2007",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAPAction can't be used to select an operation,CXF-824,12374380,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,dandiep,dandiep,23/Jul/07 15:13,26/Jul/07 23:43,14/Mar/19 02:28,26/Jul/07 23:43,2.0,,,,,,,2.0.1,,,,,,,0,It seems we're just ignoring the SOAPAction on the server side. The SOAPAction should be able to help us select the appropriate operation in certain cases. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111661,,,Thu Jul 26 23:43:22 UTC 2007,,,,,,0|i13zvb:,231441,,,,,,,,26/Jul/07 23:43;dandiep;Fixed in SVN.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue with HexBinary Encoding,CXF-823,12374362,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rajbirb,rajbirb,23/Jul/07 06:54,29/Aug/07 02:02,14/Mar/19 02:28,01/Aug/07 16:02,2.0,,,,,,,2.0.1,,JAXB Databinding,,,,,0,"We found an issue with the HexBinary encoding being performed while sending a input message. 
Attached is the JAXWS Service class, needed client, WSDL etc. 

If you look at the WSDL, it has a service<MyTestService> and port<MyTest>
The input for the operation<echoInOutSimpleTypes> in that port<MyTest> comprises of part<varBase64Binary> of type<xsd:base64Binary> and part<varHexBinary> of type<xsd:hexBinary>. The same byte array is encoded using these two encoding schemes.
So i think before converting to SOAP message, the part<varBase64Binary> should be encoded using Base64 encoding and the  part<varHexBinary> should be encoded using Hexadecimal encoding.
But when we intercept and parse the SOAP message, we can see that both the encoded values are same. (i.e. the byte array encoded with the two encoding schemes is same)
Encoding the same byte array separately using other utility for Base64 and Hexadecimal encoding shows that the value encoded using Hexadecimal encoding is wrong(Base64 encoding seems to be fine). In the test case the byte array comprises of {-128, 0, 127) which should be encoded as 80007F, wheres in the SOAP message we see it as gAB.
Looks like this is a bug. 

Please correct me if i'm wrong or i'm making any wrong assumptions.",,,,,,,,,,,,,,,,,23/Jul/07 06:57;rajbirb;mytest.jar;https://issues.apache.org/jira/secure/attachment/12362323/mytest.jar,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111660,,,2007-07-23 06:54:16.0,,,,,,0|i0v2br:,179350,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Current CXFservletTransportFactory don't support the connduit Initator interfance,CXF-821,12374307,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,21/Jul/07 04:53,29/Aug/07 02:02,14/Mar/19 02:28,23/Jul/07 04:07,2.0,,,,,,,2.0.1,,Transports,,,,,0,"one can not  put both server and client in one spring context... just like this

<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xmlns:jaxws=""http://cxf.apache.org/jaxws""
       xsi:schemaLocation=""
 	http://www.springframework.org/schema/beans
 	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
 	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"">
        
     <import resource=""classpath:META-INF/cxf/cxf.xml"" />
	<import resource=""classpath:META-INF/cxf/cxf-extension-soap.xml"" />
	<import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />
       .......
       <jaxws:endpoint id=""helloWorld"" 
 		implementor=""com.net2com.webservice.HelloWorldImpl"" 
 		address=""/HelloWorld"" />
  
       <bean id=""client"" class=""com.net2com.webservice.HelloWorld"" 
       factory-bean=""clientFactory"" factory-method=""create""/>
     
 	<bean id=""clientFactory""
        class=""org.apache.cxf.jaxws.JaxWsProxyFactoryBean"">
 	  <property name=""serviceClass""
                      value=""com.net2com.webservice.HelloWorld""/>
 	  <property name=""address""
                      value=""http://localhost:8080/interface/webservice/HelloWorld""/>
 	</bean>
</beans>

When we need an spring application be both the web service provider and consumer, current CXF servlet transport is not support yet,
Because there is no http conduit  initiatior defined in the servlet  transport factory.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111658,,,Mon Jul 23 04:07:14 UTC 2007,,,,,,0|i140kn:,231555,,,,,,,,"23/Jul/07 04:07;njiang;I just committed a fix for it in the revision 558591.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSS4JInterceptors don't allow to have a password callback handler by reference,CXF-819,12374272,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jarias,jarias,20/Jul/07 16:59,21/Jul/07 19:42,14/Mar/19 02:28,21/Jul/07 19:42,2.0,,,,,,,2.0.1,,WS-* Components,,,,,0,"AbstractWSS4JInterceptor uses a Map<String, String> for its properties it should be a Map<String, Object> so the password callback handler can be use by reference, not only by class name. Thats the way WSHandler expects it",,,,,,,,,,,,,,,,,20/Jul/07 17:00;jarias;AbstractWSS4JInterceptor.java.diff;https://issues.apache.org/jira/secure/attachment/12362233/AbstractWSS4JInterceptor.java.diff,20/Jul/07 17:00;jarias;WSS4JInInterceptor.java.diff;https://issues.apache.org/jira/secure/attachment/12362234/WSS4JInInterceptor.java.diff,20/Jul/07 17:00;jarias;WSS4JOutInterceptor.java.diff;https://issues.apache.org/jira/secure/attachment/12362235/WSS4JOutInterceptor.java.diff,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-07-21 19:42:22.19,,,no_permission,,,,,,,,,,,,,111656,,,Sat Jul 21 19:42:22 UTC 2007,,,,,,0|i140e7:,231526,,,,,,,,20/Jul/07 17:00;jarias;Patch for fixing this bug is attach,21/Jul/07 19:42;dandiep;This has been fixed in SVN. Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Code first, client side, RCP/lit doesn't work without a WSDL",CXF-818,12374266,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,20/Jul/07 15:19,29/Aug/07 02:02,14/Mar/19 02:28,20/Jul/07 20:00,2.0,,,,,,,2.0.1,,Soap Binding,,,,,0,"
Client side is not reading the SOAPBinding annotation from the interface to determine the soap style.   Thus, if the client is not created from a WSDL or the service is not the default wrapped/doc/lit, the client won't work with the service.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111655,,,2007-07-20 15:19:19.0,,,,,,0|i0v2bz:,179351,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java compiler gets stuck in a loop on complex XML schemas,CXF-815,12374219,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ema,paulhanke,paulhanke,20/Jul/07 00:42,05/Dec/07 19:30,14/Mar/19 02:28,07/Aug/07 03:33,2.0,2.0-RC,,,,,,Invalid,,Tooling,,,,,0,"wsdl2java compiler gets stuck in a loop on complex XML schemas.  Compiled the WSDL for the OSS/J Common API just fine.  This WSDL imports a single flat XSD.  Next, I took the Common API WSDL as a template and started writing a WSDL for the OSS/J Trouble Ticket API.  This WSDL imports an XSD which in turn imports other XSDs which in turn import other XSDs and so on (some XSDs are multiply imported in this dependency graph).  When I tried compiling the Trouble Ticket WSDL, the WSDL compiler started eating up 99% of the CPU (the memory footprint stayed steady at roughly 50M) and showed no signs of stopping (I eventually terminated the process).  I modified the Trouble Ticket WSDL, commenting out the message, port type, and binding declarations as well as replacing the port in the service declaration with the port type from the Common WSDL - this just left the XSD import statement from the original WSDL.  I tried compiling the Trouble Ticket WSDL again, and the WSDL compiler still started eating up 99% of the CPU with no signs of stopping.  As a final test, I put the Trouble Ticket WSDL back the way I initially had it and ran it through the Axis2 WSDL compiler - the Axis2 WSDL compiler didn't even blink while generating all the bindings/stubs/skeletons.  ",Java 1.5; Windows 2003; VMware Workstation 5.5,,,,,,,,,,,,,,,,20/Jul/07 13:25;paulhanke;ossj-wsdl.zip;https://issues.apache.org/jira/secure/attachment/12362219/ossj-wsdl.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-20 01:21:55.995,,,no_permission,,,,,,,,,,,,,111652,,,Tue Aug 07 03:13:31 UTC 2007,,,,,,0|i1a9kn:,268017,,,,,,,,"20/Jul/07 01:21;dkulp;
This MAY be the same as CXF-778 which was fixed on trunk a couple days ago.  Any chance you could test the latest snapshots (I'm deploying a new one now) or point us to the WSDL's so we can do a quick test?
","20/Jul/07 06:05;blin;If it does not work with latest code in trunk, please ensure to attach the complex schema/wsdl so we can track down the problem.","20/Jul/07 13:25;paulhanke;... I've attached the WSDLs/XSDs ... I'll see if I can fit in a test here today (but since I'm a telecommuter out in the boondocks, a snapshot download represents a significant time investment - I'm still on dial-up!) ... btw, which snapshot version should I be looking at (2.0/2.0.1/2.1)?
",20/Jul/07 20:57;paulhanke;I downloaded the latest 2.0.1 snapshot - same symptom.,"26/Jul/07 15:30;paulhanke;Another data point to consider: in looking through the Java code generated by the Axis2 WSDL compiler, I noticed some strange looking class names like ""TroubleTicketState34"" ... this is in addition to another class named ""TroubleTicketState"" ... the latter maps to a ""TroubleTicketState"" enumeration in the .xsd, whereas the former maps to a ""troubleTicketState"" element in the .xsd ... there are a lot of similar artifacts arising from trying to map such upper/lower camel case pairs onto a strictly upper camel case class naming convention.","07/Aug/07 02:49;ema;I used WTP to validate this wsdl and schemas and I found there are some invalid schemas  are  imported or referenced by this wsdl . Below is the details :   

1.   In  /xml/Common-CBETrouble/v1-4/OSSJ-Common-CBETrouble-v1-4.xsd:

       Error message : The {type,definition} of element 'troubleTicketStateState' is not validly derived from the {type,definition} of the substitutionHead 'cbetrouble-v1-4:baseTroubleTicketState' 

2.   In /xml/Common-CBEParty/v1-4/OSSJ-Common-CBEParty-v1-4.xsd

      Error message: The {type,definition} of element 'stateState' is not validly derived from the {type,definition} of the substitutionHead 'cbeparty-v1-4:baseState' 

3 . In /xml/Common-CBEBi/v1-4/OSSJ-Common-CBEBi-v1-4.xsd 
     
      Error message: The {type,definition} of element 'interactionStateState' is not validly derived from the {type,definition} of the substitutionHead 'cbebi-v1-4:baseInteractionState' 

When pass these invalid schemas to JAXB, JAXB will be hanging .   I will report this issue to JAXB guys. 

After I  fix these errors by remove the ""type"" attribute or ""substitutionGroup"" attribute for these elements  and  it can generate code for it  quickly.
",07/Aug/07 03:13;paulhanke;I have reported the issue of the invalid schemas to the OSS/J team - sorry to have bothered you guys with this! :-(,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In java first wrapped/doc/lit, if Impl and Interface have different targetNamespaces, the ""parts"" are not read",CXF-814,12374204,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,19/Jul/07 20:24,29/Aug/07 02:02,14/Mar/19 02:28,19/Jul/07 21:25,2.0,2.0.1,,,,,,2.0.1,,Core,JAX-WS Runtime,JAXB Databinding,,,0,"
For some reason, when reading, it's trying to find the parts using the Impl namespace, not the interface namespace.   The WSDL is correctly putting the wrappers in the interface namespace so the clients are generating the correct messages.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111651,,,2007-07-19 20:24:19.0,,,,,,0|i0sywv:,167133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In java first, JAX-WS is using all methods on the IMPL instead of just the ones on the endpoint interface",CXF-813,12374191,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,19/Jul/07 18:51,29/Aug/07 02:02,14/Mar/19 02:28,19/Jul/07 19:15,2.0,,,,,,,2.0.1,,Core,JAX-WS Runtime,,,,0,"
See:
http://www.nabble.com/JAX-WS-annotated-SOAP-services----exporting-implementation-methods-rather-than-interface-ones--tf4102640.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111650,,,Thu Jul 19 19:15:43 UTC 2007,,,,,,0|i0syx3:,167134,,,,,,,,19/Jul/07 19:15;dkulp;Fixed in 557746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Aegis omits type from WSDL, perhaps particularly when .aegis.xml file is trivial.",CXF-811,12374159,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,19/Jul/07 15:26,19/Jul/07 21:00,14/Mar/19 02:28,19/Jul/07 21:00,2.0,,,,,,,2.0.1,,Core,,,,,0,"Aegis omits type from WSDL, perhaps particularly when .aegis.xml file is trivial.

I will be attaching a full test case for this.

In the test case, the missing type is called 'Inner'.",,,,,,,,,,,,,,,,,19/Jul/07 15:27;bmargulies;missingTestCase.jar;https://issues.apache.org/jira/secure/attachment/12362135/missingTestCase.jar,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-19 21:00:30.974,,,no_permission,,,,,,,,,,,,,111648,,,Thu Jul 19 21:00:30 UTC 2007,,,,,,0|i0syxb:,167135,,,,,,,,19/Jul/07 15:27;bmargulies;Here is a test case for inclusion in the aegis unit tests that demonstrates this problem.,19/Jul/07 21:00;dandiep;I've fixed this in SVN. Thanks Benson!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client and Server classes in  ant script  generated by  wsdl2java are not correct,CXF-810,12374146,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,19/Jul/07 11:32,20/Jul/07 06:07,14/Mar/19 02:28,20/Jul/07 06:07,,,,,,,,2.0.1,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-20 06:07:26.007,,,no_permission,,,,,,,,,,,,,111647,,,Fri Jul 20 06:07:26 UTC 2007,,,,,,0|i13zg7:,231373,,,,,,,,20/Jul/07 06:07;blin;fixed with revision http://svn.apache.org/viewvc?view=rev&rev=557586,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
no cygwin support in java2wsdl script,CXF-809,12374096,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ema,bmargulies,bmargulies,18/Jul/07 18:55,29/Aug/07 02:02,14/Mar/19 02:28,24/Jul/07 08:47,2.0,,,,,,,2.0.1,,Tooling,,,,,0,See attached improved version.,,,,,,,,,,,,,,,,,18/Jul/07 18:57;bmargulies;java2wsdl;https://issues.apache.org/jira/secure/attachment/12362085/java2wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-24 08:47:41.839,,,no_permission,,,,,,,,,,,,,111646,,,Tue Jul 24 08:47:41 UTC 2007,,,,,,0|i1a9kv:,268018,,,,,,,,18/Jul/07 18:56;bmargulies;This version deals with the conflict between Java and Cygwin over pathnames.,18/Jul/07 18:57;bmargulies;This version deals with cygwin pathnames.,24/Jul/07 08:47;ema;Thank you Benson !  I applied it in this reversion http://svn.apache.org/viewvc?view=rev&rev=558961.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Custom exception classes are not thrown by the CXF client runtime, at least with Aegis",CXF-808,12374081,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,bmargulies,bmargulies,18/Jul/07 14:00,16/Sep/07 17:53,14/Mar/19 02:28,16/Sep/07 17:53,2.0,,,,,,,2.0.1,,Core,,,,,0,"I've rehabilitated ExceptionInheritanceTest from the Aegis test suite, and it fails. I'll attach it.",,,,,,,,,,,,,,,,,18/Jul/07 14:06;bmargulies;ExceptionInheritanceTest.java;https://issues.apache.org/jira/secure/attachment/12362066/ExceptionInheritanceTest.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-26 21:02:39.66,,,no_permission,,,,,,,,,,,,,41979,,,Sun Sep 16 17:53:00 UTC 2007,,,,,,0|i0syxj:,167136,,,,,,,,18/Jul/07 14:06;bmargulies;Here is an update to this class so that it runs ... and fails.,"26/Jul/07 21:02;dandiep;Hi Benson - have you tried this with the 2.0.1 snapshots? I believe I fixed this already, but I can take another look.","26/Jul/07 22:12;bmargulies;I will soon.

at
------------------------------------------------------------------------
suite,

","08/Sep/07 23:36;bmargulies;I think this was indeed fixed. Wow, replying to JIRA email sure produces silly stuff.

I'm going to set up a regression test from my test class (if you didn't beat me to it).
","09/Sep/07 00:30;bmargulies;This should be closed. It's fixed, and the unit test is part of the standard build.",16/Sep/07 17:53;bmargulies;I verified this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No support for java2wsdl for Aegis,CXF-807,12374063,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,bmargulies,bmargulies,18/Jul/07 09:54,30/Apr/08 14:57,14/Mar/19 02:28,19/Sep/07 02:50,2.0,,,,,,,2.1,,Tooling,,,,,1,"java2wsdl needs an option to indicate the use of Aegis binding. It has no way of guessing that the user uses Aegis, and of course any Aegis files are ignored. There are also some interesting differences in the treatment of certain objects between Aegis and JAXB.",,,,,,,,,,,,,,,,,17/Sep/07 11:56;bmargulies;beandiffs.txt;https://issues.apache.org/jira/secure/attachment/12366000/beandiffs.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111645,,,Mon Sep 17 11:56:34 UTC 2007,,,,,,0|i13zh3:,231377,,,,,,,,07/Sep/07 21:16;bmargulies;I'm actively working on this.,"07/Sep/07 21:42;bmargulies;Here is a concrete first experiment in using Spring.

All it does it use spring wiring to find some objects it was already finding by other means. I would extend upon this to handle binding objects.

If we wanted this to be 'potentially spring free', then I'd have to put each of the items (the two service builders, and then the actual binding objects) onto the bus. I don't see another palatable mechanism to allow end-users of command line tools and the like to reconfigure this except by having them supply a spring file, but I'm all ears.

There are some spelling errors and such corrected in here, but it would be work for a committer to pick them out and apply them.
","08/Sep/07 01:18;bmargulies;Here is a working implementation for aegis bindings. No customization yet. This is committable if the internal use of Spring is tolerable, and then I could proceed to add the 'supply a context file to to customize the databinding bean'.","10/Sep/07 20:16;bmargulies;Here is an improved patch based on email last night. It does not yet implement letting the user give us more XML for more beans. I'd like to see this much committed, if that's OK, and then I'll progress from there. Watch out: the pom change to put the new tool in the build is in here, and that shouldn't be committed yet.",16/Sep/07 17:36;bmargulies;Here is the rest of the support for Aegis in java2ws.,"17/Sep/07 11:56;bmargulies;This is the remaining content of the project, with come comments requested by Glen.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl gives poor diagnosis of bad JAXB bean class,CXF-806,12374062,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,bmargulies,bmargulies,18/Jul/07 09:52,13/Oct/09 00:38,14/Mar/19 02:28,10/Oct/09 22:33,2.0,,,,,,,2.2.5,,Tooling,,,,,0,"If you try to use a class like the following as a method parameter in an SEI with java2wsdl, the basic error message will be a very uninformative report of a 

 [java] Error : org.apache.cxf.service.factory.ServiceConstructionException
     [java] 

There is no useful information until you run with -verbose. At least, it should give some hint that there's a problem that will be explained by -verbose.

(The problem is a bean-pattern property on a public field).





/**
 * 
 */
package com.basistech.rnm;

import java.io.Serializable;

import com.basistech.util.ISO15924;

/**
 * This class represents a pre-defined transliteration for a name.
 *
 */
public class Transliteration implements Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = -1009032817440459241L;
	/**
	 * Target script for the transliteration: an ISO15924 code.
	 */
	private ISO15924 script;
    // read by JNI.
    @SuppressWarnings(""unused"")
    private int _script;
	/**
	 * Which transliteration scheme. 
	 * See com.basistech.BTTransliterationSchemes for constants for this purpose.
	 */
	public int scheme;
	/**
	 * The transliterated form.
	 */
	public String transliteration;
    
	/**
	 * @return the scheme
	 */
	public int getScheme() {
		return scheme;
	}
	/**
	 * @param scheme the scheme to set
	 */
	public void setScheme(int scheme) {
		this.scheme = scheme;
	}
	/**
	 * @return the script
	 */
	public ISO15924 getScript() {
		return script;
	}
	/**
	 * @param script the script to set
	 */
	public void setScript(ISO15924 script) {
		this.script = script;
        this._script = script.numeric();
	}
	/**
	 * @return the transliteration
	 */
	public String getTransliteration() {
		return transliteration;
	}
	/**
	 * @param transliteration the transliteration to set
	 */
	public void setTransliteration(String transliteration) {
		this.transliteration = transliteration;
	}

}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-10 22:33:27.745,,,no_permission,,,,,,,,,,,,,111644,,,Sun Oct 11 18:14:08 UTC 2009,,,,,,0|i140l3:,231557,,,,,,,,10/Oct/09 22:33;chris@die-schneider.net;I have just committed a fix for this. Can you try the trunk and give me some feedback if it works for you?,11/Oct/09 18:14;bmargulies;Sure.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java fails to generate code for the imported wsdl ,CXF-804,12374032,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,18/Jul/07 02:21,20/Jul/07 06:14,14/Mar/19 02:28,20/Jul/07 06:14,,,,,,,,2.0.1,,,,,,,0,"wsdl2java can not generate code for the hello_world.wsdl if  we run wsdl2java  hello_world_contains_import.wsdl  .

 ",,,,,,,,,,,,,,,,,18/Jul/07 02:23;ema;hello_world.wsdl;https://issues.apache.org/jira/secure/attachment/12362023/hello_world.wsdl,18/Jul/07 02:23;ema;hello_world_contains_import.wsdl;https://issues.apache.org/jira/secure/attachment/12362024/hello_world_contains_import.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-07-20 06:14:51.838,,,no_permission,,,,,,,,,,,,,111642,,,Fri Jul 20 06:14:51 UTC 2007,,,,,,0|i1a9lb:,268020,,,,,,,,20/Jul/07 06:14;blin;fixed with revision http://svn.apache.org/viewvc?view=rev&rev=557153,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java first with unqualified/unannotated JAXB objects don't generate proper soap messages....,CXF-802,12374016,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,17/Jul/07 19:53,29/Aug/07 02:02,14/Mar/19 02:28,18/Jul/07 21:54,2.0,,,,,,,2.0.1,,Core,JAX-WS Runtime,JAXB Databinding,Soap Binding,,1,"
In a java first scenario, if the service interface/impl is set for the default of wrapped doc/lit and returns a simple pojo bean with no annotations, (thus no namespace set so defaults to unqualified), AND the user does not run wsdl2java with -s to generate the wrapper beans, the service doesn't work.

The resulting soap message is not correct.   The WrappedOutInterceptor sets the default namespace to the namespace of the wrapper type.  However, the jaxb databinding does not ""unset"" that when it writes.   Thus, you get something like:
<getJerkResponse xmlns=""http://server.token.example.com/endpoint"">
    <ns2:result xmlns:ns2=""http://server.token.example.com/endpoint"">
        <jerkName>somebody</jerkName>
    </ns2:result>
</getJerkResponse>
The ""jerkName"" element  ends up qualified in the parser

Next problem.   If I fixed the WrappedOut to qualify the getJerkReponse element, you get:
<ns1:getJerkResponse xmlns:ns1=""http://server.token.example.com/endpoint"">
    <ns2:result xmlns:ns2=""http://server.token.example.com/endpoint"">
        <jerkName>somebody</jerkName>
    </ns2:result>
</ns1:getJerkResponse>
which also is incorrect.   The ""result"" element should be unqualified.    The part names in the unwrapped operation should have null namespaces if the schema is unqualified.    Thus, the JAXBElement that is used to write the parts would be properly unqualified.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-17 20:26:22.763,,,no_permission,,,,,,,,,,,,,111640,,,Tue Jul 17 20:26:22 UTC 2007,,,,,,0|i0syxr:,167137,,,,,,,,"17/Jul/07 20:26;mister_lake;Can be worked around by creating a file in your package of types to be marshalled called package-info.java

put something like the following into it:

@javax.xml.bind.annotation.XmlSchema(namespace = ""http://wstypes.server.example.com"",
                                     elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)
 package com.example.token.server.wstypes;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resouce matching in jra seems incorrect,CXF-800,12373931,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,derekshaw,derekshaw,16/Jul/07 20:14,26/Jul/07 14:48,14/Mar/19 02:28,25/Jul/07 22:04,2.0,,,,,,,2.0.1,,Core,,,,,0,"For me, this resource

	@Get
	@HttpResource(location = ""/player/most/comments/{maxCount}"")
	@WebResult(name = ""PlayerList"")
	public List<Integer> getMostCommented(@WebParam(name = ""maxCount"") int maxCount);

Is matching this resource

	@Get
	@HttpResource(location = ""/player/{ID}"")
	@WebResult(name = ""Player"")
	public Player getPlayer(@WebParam(name = ""ID"") int ID) throws PlayerNotFoundFault;

The reason is that in ResourceUtil.java on line 38

  if (i == resource.length()) {
                        // if } is the last part of the resource, assume the
                        // rest of the request uri matches
                        return reqUri.length();
                    }

This seems incorrect to me ( could easily be wrong here ) seem like since you are assuming '}' to be the end, then you should return resource.length() and not the request lenght. 

Later when the correct resource ( the one that matches reqUri) is sent in, we already have a bestMatch = reqUri.lenth and the the check in URIMapper.java at line 46 does a  > test so does not use the correct match.
","Windows XP, Java 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-25 13:21:41.439,,,no_permission,,,,,,,,,,,,,111638,,,Thu Jul 26 14:48:55 UTC 2007,,,,,,0|i0syxz:,167138,,,,,,,,25/Jul/07 13:21;dandiep;Just an update: I've take a look into this. unfortunately your proposed fix doesn't solve things. I am still working on a fix though and will keep you posted when one is available.,"25/Jul/07 14:34;derekshaw;Not surprising, i did not spend that much time digging into the issue, as I have a project I am trying to ship at the moment :) Please let me know if there is anything I can do to help, provide more use cases, etc. thanks.","25/Jul/07 22:04;dandiep;Hi Derek, I fixed this and have published a new JRA snapshot: http://snapshots.repository.codehaus.org/org/codehaus/jra/jra/1.0-alpha-4-SNAPSHOT/jra-1.0-alpha-4-20070725.215950-1.jar.

Just replace the jra-1.0-alpha-3.jar on your classpath with the above one and it should work fine. I'll do another JRA release once I've heard back from you and before our 2.0.1 release. Thanks!","26/Jul/07 14:48;derekshaw;I have verified the fix on my end as well. Wonderful !

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdlvalidator cannot validate on-line wsdl,CXF-798,12373908,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,dkulp,dkulp,16/Jul/07 16:10,29/Aug/07 02:02,14/Mar/19 02:28,24/Jul/07 10:36,2.0,,,,,,,2.0.1,,Tooling,,,,,0,"wsdlvalidator http://svn.apache.org/repos/asf/incubator/cxf/trunk/distribution/src/main/release/samples/hello_world/wsdl/hello_world.wsdl

results in:
java.lang.IllegalArgumentException: URI scheme is not ""file""
        at java.io.File.<init>(File.java:338)
        at org.apache.cxf.tools.validator.internal.WSDLRefValidator.getWSDLFile(WSDLRefValidator.java:134)
        at org.apache.cxf.tools.validator.internal.WSDLRefValidator.getWSDLDocument(WSDLRefValidator.java:138)
        at org.apache.cxf.tools.validator.internal.WSDLRefValidator.getWSDLDocument(WSDLRefValidator.java:142)
        at org.apache.cxf.tools.validator.internal.WSDLRefValidator.getWSDLDocuments(WSDLRefValidator.java:148)
        at org.apache.cxf.tools.validator.internal.WSDLRefValidator.isValid(WSDLRefValidator.java:195)
        at org.apache.cxf.tools.validator.internal.WSDL11Validator.isValid(WSDL11Validator.java:97)
        at org.apache.cxf.tools.validator.WSDLValidator.execute(WSDLValidator.java:65)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:83)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
        at org.apache.cxf.tools.validator.WSDLValidator.main(WSDLValidator.java:93)
---vNode--- /wsdl:definitions[@targetNamespace='http://apache.org/hello_world_soap_http']/wsdl:binding[@name='Greeter_SOAPBinding']
WSDLValidator Error : null
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111636,,,2007-07-16 16:10:36.0,,,,,,0|i140m7:,231562,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configurable error handling when encountering unsupported assertions,CXF-796,12373877,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,asmyth,asmyth,16/Jul/07 08:18,29/Aug/07 18:14,14/Mar/19 02:28,17/Jul/07 13:52,,,,,,,,2.0.1,,WS-* Components,,,,,0,"Currently, when the policy engine is enabled, an exception is thrown when it encounters an assertion for which no assertion builder is registered - either all of the assertions types must be understood or the policy engine must be disabled.
Change this to optionally only warn when encountering unknown assertion types, and also allow for the situation where an assertion is supported but no interceptor provider is registered for this  assertion.  This is helpful to digest wsdls with policy attachments that include proprietary assertion types such as {http://schemas.microsoft.com/net/2006/06/duplex}CompositeDuplex in http://131.107.72.15/ReliableMessaging_Service_WSAddressingAugust2004_Indigo/OneWay.svc?wsdl
As a workaround, it is easy enough to install trivial AssertionBuilder and PolicyInterceptorprovider implementations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111634,,,2007-07-16 08:18:57.0,,,,,,0|i0v39r:,179503,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hibernate + Spring = Crashing (for me),CXF-794,12373841,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,cyrusamiri,cyrusamiri,15/Jul/07 09:14,05/Oct/09 19:37,14/Mar/19 02:28,03/Oct/09 17:21,2.0,,,,,,,2.2,,Integration,,,,,1,"Evaluating CXF as an alternative to the overengineered Axis2 project...

Constructed the CXF servlet as described in the spring section of the Users Guide

Created a test service: 

IServiceTest.java

package com.novaleaf.kauri.serviceinterfaces;

import javax.jws.WebService;

@WebService
public interface IServiceTest
{
	public int addTwoIntegers(int x, int y);
	public String concatenateTwoStrings(String a, String b);	
	public String getVersion();

}

and, implemented it:

ServiceTest.java

package com.novaleaf.kauri.serviceinterfaces;

import javax.jws.WebService;

@WebService
public class ServiceTest implements IServiceTest 
{
  	
  public int addTwoIntegers(int x, int y){
	  return x+y;
  }

  public String concatenateTwoStrings(String a, String b){
	  return a+b;
  }  

  public String getVersion(){
	  return ""1434933993"";
  }
}

It works fine (tested with various clients).  Very cool, and quite easy!

Then... I tried to test the services with Spring + Hibernate expecting the same success

Added 

addUser(String firstName, String lastName, String password, String email) 

to the interface 

and 

private IUserDao userDao;
	
public void setUserDao(UserDao userDao)
{
  this.userDao = userDao;
}

public void addUser(String firstName, String lastName, String password, String email)
{
    User userToAdd = new User();
    userToAdd.setFirstName(firstName);
    userToAdd.setLastName(lastName);
    userToAdd.setPassword(password);
    userToAdd.setEmail(email);
    userDao.AddUser(userToAdd);
}

To the service implementation
	
As a note:

The above example is injecting the dao.  However, I tried without the setUserDao/spring bean and called and created a dao from within the addUser function with the same result:

the app doesn't deploy, tomcat doesn't start.

 Log messages are below.  This might be a configuration or jar issue, but I thought i'd drop this bug in here anyways.  

Most of the services (about 80%) we will be using are little more than wrappers for persistence calls - so it's kind of important to us to figure out how to solve this.

Messages

log4j:WARN No appenders could be found for logger (org.apache.commons.digester.Digester.sax).
log4j:WARN Please initialize the log4j system properly.
INFO [org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/kauri]] - Initializing Spring root WebApplicationContext
WARN [org.hibernate.cfg.Environment] - Property [hibernate.cglib.use_reflection_optimizer] has been renamed to [hibernate.bytecode.use_reflection_optimizer]; update your properties appropriately
ERROR [org.springframework.web.context.ContextLoader] - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceTest': Invocation of init method failed; nested exception is org.apache.cxf.service.factory.ServiceConstructionException
Caused by: 
org.apache.cxf.service.factory.ServiceConstructionException
	at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:269)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:220)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:248)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:136)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:83)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:89)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:142)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:277)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:223)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:175)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:329)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:425)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:251)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:156)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:248)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:160)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:287)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:352)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:244)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:187)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:49)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3764)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4216)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:760)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:740)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:544)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:825)
	at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:714)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:490)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1138)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:311)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:120)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1022)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:736)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1014)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)
	at org.apache.catalina.core.StandardService.start(StandardService.java:448)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:700)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:552)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:295)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:433)
Caused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 3 counts of IllegalAnnotationExceptions
org.hibernate.Interceptor is an interface, and JAXB can't handle interfaces.
	this problem is related to the following location:
		at org.hibernate.Interceptor
		at public org.hibernate.Interceptor org.springframework.orm.hibernate3.HibernateAccessor.getEntityInterceptor() throws java.lang.IllegalStateException,org.springframework.beans.BeansException
		at org.springframework.orm.hibernate3.HibernateAccessor
		at org.springframework.orm.hibernate3.HibernateTemplate
		at public final org.springframework.orm.hibernate3.HibernateTemplate org.springframework.orm.hibernate3.support.HibernateDaoSupport.getHibernateTemplate()
		at org.springframework.orm.hibernate3.support.HibernateDaoSupport
		at com.novaleaf.kauri.dao.UserDao
org.springframework.jdbc.support.SQLExceptionTranslator is an interface, and JAXB can't handle interfaces.
	this problem is related to the following location:
		at org.springframework.jdbc.support.SQLExceptionTranslator
		at public org.springframework.jdbc.support.SQLExceptionTranslator org.springframework.orm.hibernate3.HibernateAccessor.getJdbcExceptionTranslator()
		at org.springframework.orm.hibernate3.HibernateAccessor
		at org.springframework.orm.hibernate3.HibernateTemplate
		at public final org.springframework.orm.hibernate3.HibernateTemplate org.springframework.orm.hibernate3.support.HibernateDaoSupport.getHibernateTemplate()
		at org.springframework.orm.hibernate3.support.HibernateDaoSupport
		at com.novaleaf.kauri.dao.UserDao
org.hibernate.SessionFactory is an interface, and JAXB can't handle interfaces.
	this problem is related to the following location:
		at org.hibernate.SessionFactory
		at public org.hibernate.SessionFactory org.springframework.orm.hibernate3.HibernateAccessor.getSessionFactory()
		at org.springframework.orm.hibernate3.HibernateAccessor
		at org.springframework.orm.hibernate3.HibernateTemplate
		at public final org.springframework.orm.hibernate3.HibernateTemplate org.springframework.orm.hibernate3.support.HibernateDaoSupport.getHibernateTemplate()
		at org.springframework.orm.hibernate3.support.HibernateDaoSupport
		at com.novaleaf.kauri.dao.UserDao

	at com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder.check(IllegalAnnotationsException.java:66)
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:389)
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:236)
	at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:76)
	at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at javax.xml.bind.ContextFinder.newInstance(Unknown Source)
	at javax.xml.bind.ContextFinder.find(Unknown Source)
	at javax.xml.bind.JAXBContext.newInstance(Unknown Source)
	at org.apache.cxf.jaxb.JAXBDataBinding.createJAXBContext(JAXBDataBinding.java:397)
	at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:267)
	... 51 more




","Apache Tomcat 5.5.23
Spring 2.0.5
Windows XP",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-17 21:23:26.868,,,no_permission,,,,,,,,,,,,,42049,,,Sat Oct 03 17:21:06 UTC 2009,,,,,,0|i1a9mf:,268025,,,,,,,,"17/Jul/07 21:23;dandiep;Now I'm just guess, but is User an interface? I would try using the Aegis databinding if thats the case as JAXB can't handle interfaces. ","18/Jul/07 04:30;cyrusamiri;In the code I provided:

IUser is the interface
User is the object

there's a code file for each

The exposed service contain an interface, but only to immediately be filled by an User data object.

I guess what you're saying is:  If CXF exposes a class as a service - it breaks if a called function on that class uses any interface if you use JAXB binding?  

That sounds absolutely lame if true.  My code, like much code, uses a lot of interfaces.

All of it breaks when called from a CXF exposed function?  Uhh... ok.

Sounds like a bug, dubious development flaw purported as a limitation, or at least a doc bug.  

People using CXF are going to run into this very quick and not really understand the response of: 

Oh, you're using Interfaces? Wellll... Then...  

That's the kind of useless complex overengineering we've had to put up with in other frameworks and why a lot of us are evaluating CXF.

Anyways, I'll take a look at the Aegis stuff, I guess - but I'd much rather have had this just work or at least been prepared for it to happen.

Not trying to be a jerk, just say that this stuff should just work out of the box.  It does for non-interface stuff.  And I, like most users, don't really care about the technical limitations.  If it can be done with aegis, maybe that should be configure to be the default.  Anyways, I regress into the wilderness.","18/Jul/07 05:04;ffang;Actually, antother guy also encounter interface problem as you, you can get more details from 
https://issues.apache.org/jira/browse/CXF-340

Basically, you can solve it with adding extra class  which implement the interface defined in your method into jaxb context. Alternatively, using jaxb.index as Dan Kulp commented for CXF-340.

","03/Oct/09 17:21;dkulp;
I'm going to mark this resolved.   

There have been several reports of using hibernate and spring and cxf working as long as the proper cglib-nodeps thing is used.    Plus, we also now have a demo (java-first-jaxws) that shows how to use interfaces and such with jaxws.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JettyHTTPServerEngineFactory.createJettyHTTPServerEngine should be protected,CXF-791,12373809,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bmargulies,bmargulies,14/Jul/07 01:31,05/Dec/07 19:44,14/Mar/19 02:28,23/Jul/07 05:37,2.0,,,,,,,2.0.1,,Transports,,,,,0,"According to comments in JettyHTTPTransportEngine.getyJettyHTTPServerEngineFactory, the server factory must come off the bus. So, a person who wanted to customize the server engine factory would subclass the standard server engine factory and place the object of the specialized type on the bus.

Sadly, this won't work, since the create method in the summary is not protected, but rather package default, and so a subclassed ServerEngineDactory is pretty comprehensively prevented from being even faintly useful.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-16 06:54:58.834,,,no_permission,,,,,,,,,,,,,111630,,,Mon Jul 23 05:37:23 UTC 2007,,,,,,0|i0v3hz:,179540,,,,,,,,"16/Jul/07 06:54;njiang;I  think it is because the DI (dependency injection) things, you can't assume the runtime things, because you can't decide if the JettyHTTPServerEngin's instance is created in your code.

If you want to create a subclass of the JettyHTTPServerEngineFactory , you have to create a sub class of JettyHTTPTransportFactory, because the JettyHTTPServerEngin and JettyHTTPTransportFactory are too close, and there just hard code to combine them together.  ","16/Jul/07 12:08;bmargulies;First, a question: given the comment I reported that insists that the
ServerEngineFactory come off the bus, how could a custom
TransportFactory actually work? Or is the comment misleading?

Second, I'd respectfully disagree. It seemed to me that, as things are,
I'd have to copy quite a lot of code to effect a tiny change in the
behavior of JettyHTTPServerEngine. I'd need a transport factory which
could be a subclass of the standard one, but then I'd need to completely
reproduce the contents of the ServerEngineFactory. If that method were
protected instead of private, I could make very small adjustments with
small amounts of code.

If the two factories were one class, then I could just override the
function that creates the server engine itself. Because they are split
into two classes, I think I'm trying to convince you that it's important
to allow overrides of both. That is, even if I were taking your advice
and subclassing the TransportFactory, I'd want to be able to subclass
the ServerEngineFactory to use in my subclassed TransportFactory.

",23/Jul/07 05:37;njiang;I just committed a fix of it in the revision r558603,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP headers copied from input SOAPMessage to output SOAPMessage,CXF-790,12373808,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,ulhasbhole,fdushin,fdushin,14/Jul/07 00:51,29/Aug/07 02:02,14/Mar/19 02:28,31/Jul/07 13:29,2.0,,,,,,,2.0.1,,Soap Binding,,,,,1,"When a request is made on a server, the SOAP headers in a request appear to be copied directly to the response SOAP message.

This is pretty severe in the case of WS-Security, because the consumer of the response has to use the header information to ""decode"" the message, since the security headers contain implicit instructtions for decrypting and verifying signatures on elements in the message (possibly elements in the security header, itself).  Typically, the originator of the request (e.g., the client) does not have the key material to do this decoding.

One potential solution would be for the security interceptors to strip the SAAJ SOAPMessage of its headers as part of its processing the request, but i) it's not clear we really want to do that -- subsequent consumers on the interceptor chain, or possibly the application itself, may need this information; ii) furthermore, there's no guarantee that a security interceptor will be installed in an application, so there are scenarios where such a solution would not be efficacious.

I would prefer instead that the SOAPMessage representing the response, as it is passed to the outbound interceptor on the server side, be more of a blank slate.

This probably applies to other WS-* specs that rely on proper processing of SOAP headers.

A sample CXF program will be enclosed shortly.",,,,,,,,,,,,,CXF-826,CXF-827,,,14/Jul/07 01:04;fdushin;CXF-790.tar.gz;https://issues.apache.org/jira/secure/attachment/12361824/CXF-790.tar.gz,27/Jul/07 21:12;fdushin;cxf-790-testcase.patch;https://issues.apache.org/jira/secure/attachment/12362706/cxf-790-testcase.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-07-16 10:54:43.785,,,no_permission,,,,,,,,,,,,,111629,,,Fri Jul 27 21:12:44 UTC 2007,,,,,,0|i0uxtj:,178620,,,,,,,,"14/Jul/07 01:04;fdushin;Instructions:

1. Unpack in a recent CXF kit in the samples directory.
2. Issue ant build
3. In a separate window, issue ant server
4. Issue ant client

On the server console, you will see the following trace:

{{{
     [java] InInterceptor: <soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
     [java] <soap:Header xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
     [java] <wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soap:mustUnderstand=""1"" xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><wsu:Timestamp xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Timestamp-5896854""><wsu:Created xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">2007-07-14T00:53:25.251Z</wsu:Created><wsu:Expires xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">2007-07-14T00:58:25.251Z</wsu:Expires></wsu:Timestamp></wsse:Security></soap:Header><soap:Body xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><sayHi xmlns=""http://apache.org/hello_world_soap_http/types""/></soap:Body></soap:Envelope>
     [java] Executing operation sayHi
     [java] 
     [java] OutInterceptor: <soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Header><wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soap:mustUnderstand=""1"" xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><wsu:Timestamp xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Timestamp-5896854""><wsu:Created xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">2007-07-14T00:53:25.251Z</wsu:Created><wsu:Expires xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">2007-07-14T00:58:25.251Z</wsu:Expires></wsu:Timestamp></wsse:Security></soap:Header><soap:Body><sayHiResponse xmlns=""http://apache.org/hello_world_soap_http/types""><responseType>Bonjour</responseType></sayHiResponse></soap:Body></soap:Envelope>
}}}

Description:

This scenario is based off the CXF hello world sample, except that 2 interceptors have been added.  On the client side, a WSS interceptor, which adds a WSS Security header with a Timestamp element.  On the server side, a 2 simple interceptors that serialize the input and output DOM structures.  (I might have been able to use logging interceptors, but I implemented these so that they would be closer to the SAAJ interfaces).

Youll see that no additions are made in the server to the headers.","16/Jul/07 10:54;ulhasbhole;Hi Fred,

What you are mentioning 

""I would prefer instead that the SOAPMessage representing the response, as it is passed to the outbound interceptor on the server side, be more of a blank slate. "" 

was the original behavior but we try to do it now and it will break out-of-band headers and any application specific headers that were added from service side will be removed even before reaching the other side.

Every component/module which adds the headers to SOAPMessage should also have a capability to consume it and remove it from the HeaderList while reading. This was never enforced or affected the applications until the Headers were changed from DOM elements to  List and made available to application via. WebServiceContext for application specific out-of-band header. Latter part (of making header list available to application and sending the out-of-band headers back) made this problem visible.




","27/Jul/07 21:12;fdushin;This patch can be applied to the CXF tree, using the svn-apply perl script from Subversion.

It adds a system test into ws/security, for testing round-trip message protection.  The test will fail on the response side, until we address CXF-790 (either in general, or specifically in the WSS4JInInterceptor)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
js_provider sample fails,CXF-786,12373728,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jeffzhang,jeffzhang,13/Jul/07 09:36,05/Dec/07 19:44,14/Mar/19 02:28,13/Jul/07 10:07,2.1,,,,,,,2.0.1,,Samples,,,,,0,"
The js_provider sample fails.

The error on ""ant server"" is:

server:
     [java] entering server
     [java] processing file /local1/coheig/artix_5.0_11_7_2007/java/samples/js_provider/impl.jsx
     [java] processing file /local1/coheig/artix_5.0_11_7_2007/java/samples/js_provider/impl.js
     [java] server ready...
     [java] org.mozilla.javascript.EcmaError: TypeError: Cannot find function getImplementation. (impl.js#31)
     [java] at org.mozilla.javascript.ScriptRuntime.constructError(ScriptRuntime.java:3226)
     [java] at org.mozilla.javascript.ScriptRuntime.constructError(ScriptRuntime.java:3216)
     [java] at org.mozilla.javascript.ScriptRuntime.typeError(ScriptRuntime.java:3232)
     [java] at org.mozilla.javascript.ScriptRuntime.typeError1(ScriptRuntime.java:3244)
     [java] at org.mozilla.javascript.ScriptRuntime.notFunctionError(ScriptRuntime.java:3304)
     [java] at org.mozilla.javascript.ScriptRuntime.getPropFunctionAndThis(ScriptRuntime.java:1988)
    ....

and the error on ""ant client"" is:

     [java] Invoking server through Dispatch interface using SOAPMessage
     [java] Response from server: Hi Gil
     [java] Invoking server through Dispatch interface using DOMSource in PAYLOAD Mode
     [java] Exception in thread ""main"" java.lang.NullPointerException
     [java] at demo.hwDispatch.client.Client.main(Client.java:86)
     [java] Java Result: 1 ",,,,,,,,,,,,,,,,,17/Jul/07 00:15;jeffzhang;jsimpl.patch;https://issues.apache.org/jira/secure/attachment/12361930/jsimpl.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111625,,,Tue Jul 17 00:15:40 UTC 2007,,,,,,0|i140lb:,231558,,,,,,,,13/Jul/07 09:51;jeffzhang;patch for this bug,13/Jul/07 10:07;jeffzhang;test on snapshot kit.,17/Jul/07 00:15;jeffzhang;reupload patch file with license,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis crashes instead of diagnosing namespace error in .aegis.xml file,CXF-785,12373687,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dandiep,bmargulies,bmargulies,13/Jul/07 00:58,25/Jul/07 22:17,14/Mar/19 02:28,25/Jul/07 22:17,2.0,,,,,,,2.0.1,,Core,,,,,0,"<mappings xmlns:btrnmi=""urn:org.apache.cxf.aegis.type"">
	<mapping name=""oacat:DuplicateArrayReturnItem"">
	</mapping>
</mappings>

This crashes with a null pointer fault since oacat isn't defined. An informative exception would be nicer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-25 22:17:10.597,,,no_permission,,,,,,,,,,,,,111624,,,Wed Jul 25 22:17:10 UTC 2007,,,,,,0|i0syy7:,167139,,,,,,,,25/Jul/07 22:17;dandiep;I've fixed this in SVN. Thanks Benson!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interceptor not setting the fault chain for HTTP Binding,CXF-784,12373645,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,derekshaw,derekshaw,12/Jul/07 15:50,10/Dec/07 21:23,14/Mar/19 02:28,14/Jul/07 17:49,2.0,2.0.1,2.0.2,2.0.3,2.1,,,2.0.1,,JAX-WS Runtime,,,,,0,"Posting as requested by Dan Diephouse ---

From Dan --

It seems this is a bug with the HTTP Binding. Can you file a JIRA issue for
this? I'll take a look and get a fix committed soon. In essence the problem
is we aren't adding an interceptor which sets the fault chain.

 ---------
I have an exception configured  as.

@WebFault(name = ""PlayerNotFound"")
public class PlayerNotFoundFault extends Exception { }

There is also a faultInfo class.
@XmlRootElement(name = ""ServiceException"")
public class ServiceException { }

What I am finding is that when I call my service throught the XML interface (http://<server>/services/xml/) I have configured ( using spring config provided below ), the XMLFault element is namespaced to http://cxf.apache.org/bindings/xformat, while the faultInfo element is namespaced to my default namespace. For XML this is ok... no errors.

In the case of JSON/Jettison I get a namespace exception and nothing is returned in the response. The restful_http_binding example has the same issue.

Now, if I add http://cxf.apache.org/bindings/xformat to my outbound JSON namespace then I do get the JSON response, but the content-type of the response is 'text/xml' and I cant seem
","WIndows XP. Tomcat 5.5, Java 5.0, CXF 2.0",,,,,,,,,,,,,,,,12/Jul/07 15:51;derekshaw;beans-player.xml;https://issues.apache.org/jira/secure/attachment/12361691/beans-player.xml,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-13 16:15:47.922,,,no_permission,,,,,,,,,,,,,111623,,,Mon Dec 10 21:23:22 UTC 2007,,,,,,0|i0v3mv:,179562,,,,,,,,12/Jul/07 15:51;derekshaw;Cxf Restful JSON and XML config.,"13/Jul/07 16:15;dandiep;Thanks for posting this, we'll get it fixed soon and let you know when a new snapshot is up.","14/Jul/07 17:49;dandiep;This has been resolved in the current SVN code. I will see what I can do about getting a SNAPSHOT deployed (I'm on too slow of a connection to do it). Thanks a lot for reporting this.

I was looking at your sample and realized you can do a simple work around as well:

<bean	id=""JaxWsServerFactoryBean-Player""
			class=""org.apache.cxf.jaxws.JaxWsServerFactoryBean""
			init-method=""create"">
		....
  <property name=""outFaultInterceptors"">
   <list>
    <bean class=""org.apache.cxf.binding.http.interceptor.ContentTypeOutInterceptor/>
  </list>
  </property>
<bean>

Also, you shouldn't have to declare your own JaxWsServiceFactoryBean - wrapped=true is the default value, so no customization should be needed. 

Thanks again for the bug report!
","10/Dec/07 21:23;tjoch;I have tested it and for me this issue is still unresolved. In my examples the response is always 

Content-Type: text/xml; charset=utf-8

Any idea?

Best regards,
Tobias",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java generated wrong package name ,CXF-782,12373572,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,johnson.ma,johnson.ma,12/Jul/07 03:28,29/Aug/07 02:02,14/Mar/19 02:28,26/Jul/07 17:25,2.0,,,,,,,2.0.1,,,,,,,0,"the attached wsdl defined target namesapce as ""http://mixedcase_package_name.artix.iona.com/""
in the generated GreeterImpl, ""package com.iona.artix.MixedCase_Package_Name;""

the package should be lower case, the same as defined in namespace.",,,,,,,,,,,,,,,,,12/Jul/07 03:30;johnson.ma;Greeter.wsdl;https://issues.apache.org/jira/secure/attachment/12361638/Greeter.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-12 04:44:48.275,,,no_permission,,,,,,,,,,,,,111621,,,Thu Jul 26 17:25:53 UTC 2007,,,,,,0|i1a9nj:,268030,,,,,,,,"12/Jul/07 04:44;maomaode;Can not reproduce, the generated artifacts are all in lower case","26/Jul/07 17:25;dkulp;
I also cannot reproduce this on trunk.   I tried on Linux (where there is really a case sensitive file system) and everything was lower case. 

I'm marking this as fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate type error from Aegis on code that worked fine with XFire 1.2.5,CXF-781,12373567,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,bmargulies,bmargulies,12/Jul/07 01:36,14/Jul/07 17:51,14/Mar/19 02:28,14/Jul/07 17:51,2.0,2.0.1,,,,,,2.0.1,,,,,,,0,"I'd pick 'aegis' as a component if it appeared on the list.

The only place in my universe where 'ArrayOfNameIndexLookupResult' can arise is in the service interface itself ...

 @WebMethod()
    public abstract NameIndexLookupResult[] lookup(String indexid,
                                                   @WebParam(targetNamespace=""urn:com.basistech.rnm.index"")NameIndexQuery query) throws NameIndexException;

I'm wondering if I have a namespace inconsistency between the interface and the impl.

The interface is marked up with ..

@WebService(name=""NameIndexService"", targetNamespace=""urn:com.basistech.rnm.index.ws"")

while the impl class looks like ...

@WebService(serviceName = ""NameIndexService"", endpointInterface = ""com.basistech.rnm.index.ws.NameIndexService"")


I tried adding the targetNamespace to the implementation class, but that had no effect. 



Jul 11, 2007 9:28:39 PM org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromClass
INFO: Creating Service {http://impl.ws.index.rnm.basistech.com/}NameIndexService from class com.basistech.rnm.index.ws.impl.NameIndexServiceImpl
Exception in thread ""main"" java.lang.RuntimeException: Schema for namespace 'urn:com.basistech.rnm.index' already contains type 'ArrayOfNameIndexLookupResult
	at org.apache.ws.commons.schema.XmlSchema.addType(XmlSchema.java:229)
	at org.apache.ws.commons.schema.SchemaBuilder.handleXmlSchemaElement(SchemaBuilder.java:139)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:315)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.createSchemas(AegisDatabinding.java:291)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initialize(AegisDatabinding.java:162)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:220)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:248)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:136)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:83)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:89)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:142)
	at com.basistech.rnm.index.ws.impl.StandaloneServiceStarter.start(StandaloneServiceStarter.java:76)
	at com.basistech.rnm.index.ws.impl.StandaloneServiceStarter.main(StandaloneServiceStarter.java:116)
",,,,,,,,,,,,,,,,,13/Jul/07 01:06;bmargulies;DuplicateArrayReturnItem.aegis.xml;https://issues.apache.org/jira/secure/attachment/12361734/DuplicateArrayReturnItem.aegis.xml,13/Jul/07 01:06;bmargulies;DuplicateArrayReturnItem.java;https://issues.apache.org/jira/secure/attachment/12361735/DuplicateArrayReturnItem.java,13/Jul/07 01:06;bmargulies;DuplicateArrayService.java;https://issues.apache.org/jira/secure/attachment/12361736/DuplicateArrayService.java,13/Jul/07 01:07;bmargulies;DuplicateArrayServiceBean.java;https://issues.apache.org/jira/secure/attachment/12361737/DuplicateArrayServiceBean.java,13/Jul/07 01:07;bmargulies;DuplicateArrayTest.java;https://issues.apache.org/jira/secure/attachment/12361738/DuplicateArrayTest.java,,,,,,,5.0,,,,,,,,,,,,,,,,,,,2007-07-13 16:19:08.312,,,no_permission,,,,,,,,,,,,,111620,,,Sat Jul 14 17:51:32 UTC 2007,,,,,,0|i1a9nr:,268031,,,,,,,,"12/Jul/07 01:46;bmargulies;You might also be interested in the code that launches all this. 

        AegisDatabinding binder = new AegisDatabinding();
        
        JaxWsServerFactoryBean serviceFactory = new
JaxWsServerFactoryBean();
        serviceFactory.getServiceFactory().setDataBinding(binder);

        // here we disuade XFire from its rather annoying tendency to
assume that, just because
		// anything in Java can be null, that we want to
advertise all that nullity all over.

        DefaultTypeMappingRegistry tmr = (DefaultTypeMappingRegistry)
binder.getTypeMappingRegistry();
		Configuration configuration = tmr.getConfiguration();
		configuration.setDefaultMinOccurs(1);
		configuration.setDefaultNillable(false);
		
//		 Create a properties hashmap
		HashMap<String, Object> props = new HashMap<String,
Object>();

//		 Enable the writing of xsi:type attributes
		props.put(AegisDatabinding.WRITE_XSI_TYPE_KEY,
Boolean.TRUE);

//		 Supply a list of class names which need to be included
in the wsdl.
		ArrayList<String> l = new ArrayList<String>();
		// add class names here for extra types if we need them.
 
l.add(com.basistech.rnm.index.NameIndexException.class.getName());
        props.put(AegisDatabinding.OVERRIDE_TYPES_KEY, l);
        serviceFactory.setAddress(""http://localhost:"" + port +
""/NameIndexService"");
        serviceFactory.setServiceBean(new
NameIndexServiceImpl(configPath));
        serviceFactory.setServiceClass(NameIndexService.class);
        serviceFactory.setProperties(props);
        server = serviceFactory.create();
","13/Jul/07 01:06;bmargulies;Test case, part 1.","13/Jul/07 01:07;bmargulies;Test case, part 2.",13/Jul/07 01:14;bmargulies;The critical problem here seems to be that we have two functions in the service interface: one that returns T[] and another that returns List<List<T>>.,"13/Jul/07 16:19;dandiep;Thanks for reporting this Benson, I'll be taking a look into this real soon. I'll keep you posted.","13/Jul/07 16:24;bmargulies;You're perfectly welcome.

I've demonstrated that a workaround is to change the return type of the
second item from 

List<List<x>> to List<x[]>

So, the problem seems to be the use of both List<x> and x[] in the same
vicinity. 

I'm making headway in general by switching to the second representation,
since they should be indistinguishable from the client side.

","14/Jul/07 17:51;dandiep;Hi Benson, thanks for the awesome test case! I fixed this in the current SVN. You can either download whats in SVN and compile yourself, or you can wait for us to get a new snapshot posted (probably Monday). 

Oddly enough this is also a bug in XFire. It seems that no one thought to use both an Array and a List of the same type before. Which very much surprises me!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
aegis classes missing from javadoc in 2.0,CXF-780,12373564,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,12/Jul/07 00:48,05/Oct/09 19:37,14/Mar/19 02:28,03/Oct/09 17:18,2.0,,,,,,,2.1,,Documentation,,,,,0,"The aegis types are missing from the javadoc in the 2.0 release. Aside from general principles, this does make it painful to port xfire code that uses them.",windows,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-03 17:18:41.279,,,no_permission,,,,,,,,,,,,,111619,,,Sat Oct 03 17:18:41 UTC 2009,,,,,,0|i1a9nz:,268032,,,,,,,,"03/Oct/09 17:18;dkulp;
We now javadoc everything and make the full javadoc available online.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
missing jar file(s) in lib directory of 2.0 release or bad wiki page,CXF-779,12373563,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,bmargulies,bmargulies,12/Jul/07 00:20,20/Jul/07 06:35,14/Mar/19 02:28,20/Jul/07 06:35,2.0,,,,,,,2.0.1,,,,,,,0,"Neither the tarball nor the zip file for the 2.0 binary distro includes jsr181-api-1.0-MR1.jar. However, http://cwiki.apache.org/CXF20DOC/writing-a-service-with-spring.html 

calls for it. As I try to migrate some code from XFire, I find that my old imports of javax.jws.Web* don't work, presumably because they need the Jsr181 jar file.

Either the wiki page is wrong, or the jar file is mia, or perhaps some other Jar is relevant?","Windows, not that it matters.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-12 07:57:42.547,,,no_permission,,,,,,,,,,,,,111618,,,Fri Jul 20 06:35:35 UTC 2007,,,,,,0|i1a9o7:,268033,,,,,,,,"12/Jul/07 00:24;bmargulies;Looks like the wiki page needs help, which I will endeavour to give it.

directory of
includes
http://cwiki.apache.org/CXF20DOC/writing-
old

","12/Jul/07 07:57;njiang;the jsr181 related jar is geronimo-ws-metadata_2.0_spec-1.1.1.jar,
so you just need to add this jar in you class path, and you will get the javax.jws.Web* work again :)","12/Jul/07 11:42;bmargulies;Indeed, I fixed the wiki page. However, the wiki page is still short
several other Jar files.
","20/Jul/07 06:35;blin;The relevant jar is geronimo-ws-metadata_2.0_spec-1.1.1.jar, the wiki page has been updated to reflect this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java failed to genrate wsdl which has recursive import,CXF-778,12373479,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,11/Jul/07 07:49,05/Dec/07 19:44,14/Mar/19 02:28,18/Jul/07 02:18,,,,,,,,2.0.1,,,,,,,0,wsdl2java failed to generate code for the attached wsdl,,,,,,,,,,,,,,,,,11/Jul/07 07:53;ema;hello_world_recursive.wsdl;https://issues.apache.org/jira/secure/attachment/12361562/hello_world_recursive.wsdl,11/Jul/07 07:54;ema;hello_world_recursive_import.wsdl;https://issues.apache.org/jira/secure/attachment/12361563/hello_world_recursive_import.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111617,,,2007-07-11 07:49:59.0,,,,,,0|i0v2dj:,179358,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
velocity engin write errors (NPE),CXF-777,12373478,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,karmazilla,karmazilla,11/Jul/07 07:49,29/Aug/07 02:02,14/Mar/19 02:28,27/Jul/07 17:48,2.0,,,,,,,2.0.1,,Tooling,,,,,0,"When I run the wsdl2java tool on the attached
WSDL and schemas, I get an exception about ""velocity engin write
errors"" whos cause appear to be an NPE.

I'm wondering that the schemas might be too complex, or the tool can't
handle the importing.

I tried the tool on a much simple wsdl and it worked out alright.

Here's the output from wsdl2java:

Loading FrontEnd jaxws ...
Loading DataBinding jaxb ...
wsdl2java -verbose -client -server -impl -d
/Users/vest/workspace/Statistics2/src/main/java
/Users/vest/workspace/Statistics2/src/main/resources/WebStat1.0.wsdl
wsdl2java - 2.0-incubator-SNAPSHOT


WSDLToJava Error : velocity engin write errors

org.apache.cxf.tools.common.ToolException: velocity engin write errors
       at org.apache.cxf.tools.common.VelocityGenerator.doWrite(VelocityGenerator.java:103)
       at org.apache.cxf.tools.wsdlto.core.AbstractGenerator.doWrite(AbstractGenerator.java:49)
       at org.apache.cxf.tools.wsdlto.frontend.jaxws.generators.ClientGenerator.generate(ClientGenerator.java:118)
       at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:185)
       at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:215)
       at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
       at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
       at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
Caused by: org.apache.velocity.exception.MethodInvocationException:
Invocation of method 'getDefaultTypeValue' in  class
org.apache.cxf.tools.common.model.JavaParameter threw exception class
java.lang.NullPointerException : null
       at org.apache.velocity.runtime.parser.node.ASTIdentifier.execute(ASTIdentifier.java:193)
       at org.apache.velocity.runtime.parser.node.ASTReference.execute(ASTReference.java:175)
       at org.apache.velocity.runtime.parser.node.ASTReference.render(ASTReference.java:220)
       at org.apache.velocity.runtime.parser.node.ASTBlock.render(ASTBlock.java:55)
       at org.apache.velocity.runtime.directive.Foreach.render(Foreach.java:166)
       at org.apache.velocity.runtime.parser.node.ASTDirective.render(ASTDirective.java:114)
       at org.apache.velocity.runtime.parser.node.ASTBlock.render(ASTBlock.java:55)
       at org.apache.velocity.runtime.parser.node.SimpleNode.render(SimpleNode.java:230)
       at org.apache.velocity.runtime.parser.node.ASTIfStatement.render(ASTIfStatement.java:89)
       at org.apache.velocity.runtime.parser.node.ASTBlock.render(ASTBlock.java:55)
       at org.apache.velocity.runtime.directive.Foreach.render(Foreach.java:166)
       at org.apache.velocity.runtime.parser.node.ASTDirective.render(ASTDirective.java:114)
       at org.apache.velocity.runtime.parser.node.SimpleNode.render(SimpleNode.java:230)
       at org.apache.velocity.Template.merge(Template.java:256)
       at org.apache.cxf.tools.common.VelocityGenerator.doWrite(VelocityGenerator.java:99)
       ... 7 more","java version ""1.5.0_07""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_07-164)
Java HotSpot(TM) Client VM (build 1.5.0_07-87, mixed mode, sharing)",,,,,,,,,,,,,,,,11/Jul/07 07:52;karmazilla;Reporting.xsd;https://issues.apache.org/jira/secure/attachment/12361561/Reporting.xsd,11/Jul/07 07:50;karmazilla;WebStat1.0.wsdl;https://issues.apache.org/jira/secure/attachment/12361559/WebStat1.0.wsdl,11/Jul/07 07:51;karmazilla;WebStat1.0.xsd;https://issues.apache.org/jira/secure/attachment/12361560/WebStat1.0.xsd,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111616,,,Thu Jul 26 14:07:45 UTC 2007,,,,,,0|i1a9of:,268034,,,,,,,,"26/Jul/07 14:07;karmazilla;This issue appears to be solved in recent (20070726 and up) snapshot versions of 2.1.

The workaround is that these snapshot versions of the tools can be used together with the 2.0 release of CXF - that's my experience anyway.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxWsServiceFactoryBean doesn't seem to work with AegisDatabinding,CXF-776,12373469,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,jkriesten,jkriesten,11/Jul/07 04:33,05/Dec/07 19:44,14/Mar/19 02:28,26/Jul/07 02:34,2.0.1,,,,,,,2.0.1,,JAX-WS Runtime,,,,,0,"There really seems to be an issue with JaxWsServiceFactoryBean and Aegis.

I tried the following configuration (CXFServlet):

---8<---
  <bean id=""serviceClass"" class=""de.footprint.www.services.auth.AcegiAuthService""/>
  <bean id=""aegisDatabinding""
class=""org.apache.cxf.aegis.databinding.AegisDatabinding""/>
  <bean id=""serviceFactory""
class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean"">
  <property name=""dataBinding"" ref=""aegisDatabinding""/>
  </bean>
  <bean id=""serverBeanFactory"" class=""org.apache.cxf.frontend.ServerFactoryBean""
init-method=""create"">
          <property name=""address"" value=""/AuthService""/>
          <property name=""bindingId"" value=""http://schemas.xmlsoap.org/soap/""/>
          <property name=""serviceBean"" ref=""serviceClass""/>
          <property name=""serviceFactory"" ref=""serviceFactory""/>
  </bean>
---8<---

This did _not_ work. The services-log tells me, that the WebService-Parameters
are blank (btw, only Strings are used). Commenting out the dataBinding-property
in the serviceFactory-bean solves it again - all parameters are ok!

My client looks like this:

---8<---
Bus bus = new SpringBusFactory().createBus();
AegisDatabinding aegisBinding = new AegisDatabinding();
JaxWsProxyFactoryBean proxyBean = new JaxWsProxyFactoryBean();
proxyBean.setBus( bus );
proxyBean.getServiceFactory().setDataBinding( aegisBinding );
proxyBean.setAddress( ""http://localhost/service/AuthService"" );
proxyBean.setServiceClass( IAuthService.class );
service = (IAuthService) proxyBean.create();
---8<---

If you need any more information just drop me a note... :-)

Best regards, --- Jan.
","CXFServlet, resin 3.1.1, JDK 1.6",,,,,,,,,,,,,,,,13/Jul/07 08:35;ffang;spring.tar;https://issues.apache.org/jira/secure/attachment/12361757/spring.tar,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-13 08:35:20.498,,,no_permission,,,,,,,,,,,,,111615,,,Wed Jul 18 10:29:28 UTC 2007,,,,,,0|i140lr:,231560,,,,,,,,"13/Jul/07 08:35;ffang;Hi Jan,
For servlet, you also need inject serviceFactory in jaxws:endpoint, so the spring context should be

<beans xmlns=""http://www.springframework.org/schema/beans""
        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xmlns:jaxws=""http://cxf.apache.org/jaxws""
        xsi:schemaLocation=""
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"">

        <import resource=""classpath:META-INF/cxf/cxf.xml"" />
        <import resource=""classpath:META-INF/cxf/cxf-extension-soap.xml"" />
        <import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />
        <bean id=""serviceClass"" class=""demo.spring.HelloWorldImpl""/>
        <bean id=""aegisDatabinding""
              class=""org.apache.cxf.aegis.databinding.AegisDatabinding""/>
        <bean id=""serviceFactory""
              class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean"">
                <property name=""dataBinding"" ref=""aegisDatabinding""/>
        </bean>
        <bean id=""serverBeanFactory"" class=""org.apache.cxf.frontend.ServerFactoryBean""
              init-method=""create"">
                <property name=""address"" value=""/HelloWorld""/>
                <property name=""bindingId"" value=""http://schemas.xmlsoap.org/soap/""/>
                <property name=""serviceBean"" ref=""serviceClass""/>
                <property name=""serviceFactory"" ref=""serviceFactory""/>
        </bean>
        <jaxws:endpoint
          id=""helloWorld""
          implementor=""demo.spring.HelloWorldImpl""
          address=""/HelloWorld"">
          <jaxws:serviceFactory>
             <ref bean=""serviceFactory""/>
          </jaxws:serviceFactory>
        </jaxws:endpoint>

</beans>

And the attachment is spring_http demo which I change slightly to use aegis databinding in spring context, and it works by my test.","18/Jul/07 10:29;ffang;I just try the wsdl from http://wicket.silberlicht.de/service/AuthService?wsdl provided by Jan
I found  I failed on client side, get the exception like
org.apache.cxf.interceptor.Fault: NO_MESSAGE_FOR_PART
	at org.apache.cxf.aegis.databinding.XMLStreamDataWriter.write(XMLStreamDataWriter.java:65)
	at org.apache.cxf.aegis.databinding.XMLStreamDataWriter.write(XMLStreamDataWriter.java:1)
	at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.writeParts(AbstractOutDatabindingInterceptor.java:92)
	at org.apache.cxf.interceptor.BareOutInterceptor.handleMessage(BareOutInterceptor.java:67)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:255)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:206)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
	at $Proxy21.getAuthentication(Unknown Source)

Can Aegis databinding work with wrapped mode?

If I setWrapped(false) on client side, I can send out message but get error on server side like
rg.apache.cxf.interceptor.Fault: Message part {http://silberlicht.de/AuthService}sid was not recognized.
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:181)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:253)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:213)
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF tools don't appear to handle XML catalogs; runtime handling is limited,CXF-775,12373439,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,tdrury,tdrury,10/Jul/07 18:05,05/Dec/07 19:44,14/Mar/19 02:28,03/Aug/07 07:00,2.0,,,,,,,2.0.1,,Bus,Configuration,JAX-WS Runtime,Tooling,,0,"We have our own XML catalog conforming to the OASIS spec (http://www.oasis-open.org/committees/entity/spec-2001-08-06.html).  We could potentially have a chain of them.

How do we get the CXF tools to use these catalogs when parsing our WSDL and/or reading schemas?  I asked on irc.codehaus.org #cxf channel and was given the suggestion to file this issue here with the suggestion to provide a ""-catalog <catalog_file>"" to all the tools that need to read WSDL/schemas.

The CXF runtime apparently handles them but only if they are located in META-INF and named jax-ws-catalog.xml which is a bit limiting.  Can we get a property added to whatever CXF uses for runtime configuration to allow specifying our own catalog names?  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-26 15:03:52.099,,,no_permission,,,,,,,,,,,,,111614,,,Fri Aug 03 07:00:30 UTC 2007,,,,,,0|i1a9on:,268035,,,,,,,,26/Jul/07 15:03;jeff.yu;I believe this issue was fixed by James Mao with: http://svn.apache.org/viewvc?view=rev&rev=555204,"03/Aug/07 06:25;blin;James, can you confirm this fix and close the issue if so?","03/Aug/07 07:00;maomaode;As jeff said, this has been fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl generates shema element with no type.,CXF-774,12373371,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,10/Jul/07 08:43,29/Aug/07 18:14,14/Mar/19 02:28,20/Jul/07 06:43,,,,,,,,2.0.1,,,,,,,0,"Use the below class to generate wsdl , will get the schema which element with no type info ""<xsd:element minOccurs=""0"" name=""return""/>"" : 
 
@WebService(name=""ListTest"", targetNamespace=""http://apache.cxf/"")

public interface ListTest {  

      @WebMethod(operationName=""sayHi"", exclude=false)

      @ResponseWrapper(className=""cxf.apacheSayHiResponse"", localName=""sayHiResponse"", targetNamespace=""http://apache.cxf//"")

      @RequestWrapper(className=""cxf.apache.SayHi"", localName=""sayHi"", targetNamespace=""http:/apache.cxf//"")

      public List sayHi(String hi);

}",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-20 06:43:25.434,,,no_permission,,,,,,,,,,,,,111613,,,Fri Jul 20 06:43:25 UTC 2007,,,,,,0|i1a9ov:,268036,,,,,,,,20/Jul/07 06:43;blin;this is fixed with revision http://svn.apache.org/viewvc?view=rev&rev=554891,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logical/Soap handlers does not work on the Provider side.,CXF-773,12373355,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,10/Jul/07 03:11,29/Aug/07 02:02,14/Mar/19 02:28,25/Jul/07 04:36,,,,,,,,2.0.1,,,,,,,0,"For example, getPayLoad() or getMessage() wont give you back the correct result.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111612,,,2007-07-10 03:11:23.0,,,,,,0|i1a9p3:,268037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"if soap header using message part from another message which is not defined in the operation, message will fail",CXF-772,12373165,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,ffang,ffang,06/Jul/07 11:24,05/Dec/07 19:44,14/Mar/19 02:28,10/Jul/07 06:20,,,,,,,,2.0.1,,,,,,,0,"The operation is 
<wsdl:operation name=""EchoBinaryHeaderAsString"">
<wsdl:input wsaw:Action=""http://xmlsoap.org/Ping/IMtomTest/EchoBinaryHeaderAsString"" name=""InputMessageContract""  message=""tns:InputMessageContract""/>
<wsdl:output wsaw:Action=""http://xmlsoap.org/Ping/IMtomTest/EchoBinaryHeaderAsStringResponse"" name=""OutputMessageContract"" message=""tns:OutputMessageContract""/>
</wsdl:operation>

The binding of this operationis
<wsdl:operation name=""EchoBinaryHeaderAsString"">
            <soap:operation soapAction=""http://xmlsoap.org/Ping/IMtomTest/EchoBinaryHeaderAsString""
                style=""document"" />
            <wsdl:input name=""InputMessageContract"">
                <soap:header message=""i0:InputMessageContract_Headers"" part=""ByteArray"" use=""literal"" />
                <soap:body use=""literal"" />
            </wsdl:input>
            <wsdl:output name=""OutputMessageContract"">
                <soap:body use=""literal"" />
            </wsdl:output>
</wsdl:operation>

So the input header in binding refer to a message part which is not defined in the operation message.

The header part would be ignored by wsdltojava tool by default, which means it is not a arg in the generated method.
After add ""-exsh true"", which means enable extended soap header message binding, can generate method with this head arg but the run time will fail when run into line 365 part = o.getInput().getMessagePart(name) of JaxWsServiceFactoryBean since the part is null
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111611,,,2007-07-06 11:24:10.0,,,,,,0|i14027:,231472,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SocketExceptions on Windows when using non-anonymous ReplyTo,CXF-769,12373081,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,asmyth,asmyth,05/Jul/07 16:10,25/Oct/09 11:31,14/Mar/19 02:28,25/Oct/09 11:31,,,,,,,,,,Transports,WS-* Components,,,,1,"MAPTest (and others) intermittently fails in one or several of its tests on Windows with a SocketException (example stack trace in attachment). The behaviour is very similar to the one described in https://issues.apache.org/jira/browse/CXF-755, and it seems it can be worked around in the same manner.
This issue needs further investigation as the test used to pass reliably on Windows until recently.
",Windows XP,,,,,,,,,,,,,,,,05/Jul/07 16:12;asmyth;MAPTest.log;https://issues.apache.org/jira/secure/attachment/12361201/MAPTest.log,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-18 19:41:55.616,,,no_permission,,,,,,,,,,,,,111608,,,Sun Oct 25 11:31:38 UTC 2009,,,,,,0|i1a9pj:,268039,,,,,,,,"06/Jul/07 09:30;asmyth;Temporarily applied workaround to get a clean build on Windows XP.
To reproduce the issue in revision >= 553810, you need to remove the ""Windows XP"".equals(System.getProperty(""os.name"")) in MAPTest.java and in ConnectionHelper.java.","18/Oct/09 19:41;chris@die-schneider.net;Currently the MAPTest is not skipped on Windows. It only uses a different config file for hp ux and windows. The config only seems to add 'Connection=""Keep-Alive""'. Is this issue still open? ",25/Oct/09 11:31;chris@die-schneider.net;Closing this issue because of inactivity. Please feel free to reopen if the problem is still open.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"if input message part defined in soapheader, the operation miss this input args",CXF-766,12373042,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,ffang,ffang,05/Jul/07 08:07,05/Dec/07 19:44,14/Mar/19 02:28,08/Jul/07 05:54,,,,,,,,2.0.1,,,,,,,0,"the operation defined in wsdl is 
<wsdl:operation name=""EchoBinaryHeaderAsString"">
            <soap:operation soapAction=""http://xmlsoap.org/Ping/IMtomTest/EchoBinaryHeaderAsString""
                style=""document"" />
            <wsdl:input name=""InputMessageContract"">
                <soap:header message=""i0:InputMessageContract_Headers"" part=""ByteArray"" use=""literal"" />
                <soap:body use=""literal"" />
            </wsdl:input>
            <wsdl:output name=""OutputMessageContract"">
                <soap:body use=""literal"" />
            </wsdl:output>
        </wsdl:operation>

but the operation in generated code is 

@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(targetNamespace = ""http://xmlsoap.org/Ping"", partName = ""StringValue"", name = ""StringValue"")
    @WebMethod(operationName = ""EchoBinaryHeaderAsString"")
    public java.lang.String echoBinaryHeaderAsString();

It miss the input arg

attachment is the wsdl",,,,,,,,,,,,,,,,,05/Jul/07 08:09;ffang;Soap11MtomUtf8.wsdl;https://issues.apache.org/jira/secure/attachment/12361177/Soap11MtomUtf8.wsdl,05/Jul/07 08:08;ffang;io.wsdl;https://issues.apache.org/jira/secure/attachment/12361176/io.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-07-06 06:25:01.817,,,no_permission,,,,,,,,,,,,,111605,,,Fri Jul 06 11:00:34 UTC 2007,,,,,,0|i140lz:,231561,,,,,,,,"06/Jul/07 06:25;maomaode;In cxf wsdl2java , we support the header from another message part.

Previous wsdl2java has an issue which is if the header from another namespace (CXF-602) 

But we fixed the issue with revision http://svn.apache.org/viewvc?view=rev&rev=545220 (commited by jliu)

see CodeGenTest.testHeaderFromAnotherNamespace

however, i found that the wsdl used in the test case is not the right wsdl (i.e the namespace of header is as same as the wsdl operations)

So, we might need to revisit this commit and re-open the CXF-602 and link two issues together","06/Jul/07 08:44;maomaode;Ok, after deep investigate the issue, i found that there's nothing related to the namespace, the method name in the CodeGenTest is really misleading. it *MUST* changed to the FromAnotherMessagePart not FromAnotherNamespace.

As per the spec, if the header from another message part, then it's optional to generate a parameter. As you can see be default cxf wsdl2java generate the same method signature as the JAXWS RI, i.e we don't generate the extra parameter for the soap:header from another message part.

However in cxf wsdl2java we have a flag to generate the optional parameter

THAT is : -exsh true ","06/Jul/07 08:46;maomaode;This is a false alarm 

use ""-exsh true"" to generate the extra parameters","06/Jul/07 09:18;ffang;the -exsh true works from commandline wsdl2java, but doesn't work from codegen maven plugin","06/Jul/07 11:00;maomaode;The reason is that codegen-plugin does not depend on soap module, add the dependency to solve the problem",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wsdl2java generates duplicate server and client for the wsdl which service contains two ports,CXF-765,12373018,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,05/Jul/07 02:34,29/Aug/07 18:14,14/Mar/19 02:28,20/Jul/07 06:47,,,,,,,,2.0.1,,,,,,,0,,,,,,,,,,,,,,,,,,05/Jul/07 02:36;ema;hello_world.wsdl;https://issues.apache.org/jira/secure/attachment/12361159/hello_world.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-20 06:47:38.732,,,no_permission,,,,,,,,,,,,,111604,,,Fri Jul 20 06:47:38 UTC 2007,,,,,,0|i0v2gf:,179371,,,,,,,,20/Jul/07 06:47;blin;fixed with revision http://svn.apache.org/viewvc?view=rev&rev=553430,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SoapHandler/LogicalHandler does not work with Provider.,CXF-764,12373016,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,05/Jul/07 02:05,29/Aug/07 18:14,14/Mar/19 02:28,25/Jul/07 06:41,,,,,,,,2.0.1,,JAX-WS Runtime,,,,,0,SoapHandler/LogicalHandler does not work with Provider. This is similar to the problem we had with Dispatch,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111603,,,2007-07-05 02:05:55.0,,,,,,0|i1a9pz:,268041,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix JCA integration demo packge and change readme.txt ,CXF-761,12372955,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jeffzhang,jeffzhang,04/Jul/07 02:33,29/Aug/07 18:14,14/Mar/19 02:28,20/Jul/07 06:54,2.0,,,,,,,2.0.1,,Integration,,,,,0,"change build.xml for packaging files. 
modify readme.txt file for license file if need.",,,,,,,,,,,,,,,,,17/Jul/07 00:19;jeffzhang;README.txt;https://issues.apache.org/jira/secure/attachment/12361933/README.txt,17/Jul/07 00:19;jeffzhang;build.xml;https://issues.apache.org/jira/secure/attachment/12361931/build.xml,17/Jul/07 00:20;jeffzhang;jca_minor.patch;https://issues.apache.org/jira/secure/attachment/12361934/jca_minor.patch,17/Jul/07 00:19;jeffzhang;patch-jca.txt;https://issues.apache.org/jira/secure/attachment/12361932/patch-jca.txt,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111600,,,Tue Jul 17 00:20:21 UTC 2007,,,,,,0|i1a9qn:,268044,,,,,,,,04/Jul/07 02:34;jeffzhang;distribution\src\main\release\samples\integration\jca\hello_world_soap_http\build.xml,04/Jul/07 02:35;jeffzhang;distribution\src\main\release\samples\integration\jca\hello_world_soap_http\README.txt,04/Jul/07 03:04;jeffzhang;patch file,04/Jul/07 03:18;jeffzhang;patch file (correctly),"13/Jul/07 15:51;jeffzhang;some minor change for jca sample build.xml for correct classpath

patch on cxf/trunk/distribution/src/main/release/samples/integration/jca/hello_world_soap_http",17/Jul/07 00:19;jeffzhang;reupload patch file with license,17/Jul/07 00:20;jeffzhang;reupload patch file with license,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support POST with empty bodies in http-centric Client API,CXF-758,12372824,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,cjodea,cjodea,02/Jul/07 14:34,06/Dec/13 00:22,14/Mar/19 02:28,12/Nov/09 16:56,2.0,2.2.5,2.3,,,,,2.2.5,2.3,JAX-RS,,,,,0,"Sending a POST with an empty body to a RESTful service causes a 500 to be raised by the server.

In the client for the restful_dispatch demo, change this line: 
        InputStream in = url.openStream();

to
        HttpURLConnection conn = (HttpURLConnection)url.openConnection();
        conn.setRequestMethod(""PUT"");
        InputStream in = conn.getInputStream();

and run the client against the server. 

I get the following stack trace on the client: 

     [java] Exception in thread ""main"" java.io.IOException: Server returned HTTP response code: 500 for URL: http://localhost:9000/customerservice/customer
     [java]     at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1152)
     [java]     at demo.restful.client.Client.main(Client.java:66)
     [java] Java Result: 1


and the following stack trace on the server 

     [java] Jul 2, 2007 3:33:12 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
     [java] INFO: Interceptor has thrown exception, unwinding now
     [java] org.apache.cxf.interceptor.Fault: Could not parse the XML stream.
     [java]     at org.apache.cxf.databinding.source.XMLStreamDataReader.read(XMLStreamDataReader.java:96)
     [java]     at org.apache.cxf.databinding.source.XMLStreamDataReader.read(XMLStreamDataReader.java:86)
     [java]     at org.apache.cxf.databinding.source.XMLStreamDataReader.read(XMLStreamDataReader.java:48)
     [java]     at org.apache.cxf.jaxws.interceptors.ProviderInDatabindingInterceptor.handleMessage(ProviderInDatabindingInterceptor.java:103)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:206)
     [java]     at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:67)
     [java]     at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:253)
     [java]     at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:213)
     [java]     at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54)
     [java]     at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
     [java]     at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
     [java]     at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)
     [java]     at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
     [java]     at org.mortbay.jetty.Server.handle(Server.java:281)
     [java]     at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:502)
     [java]     at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:821)
     [java]     at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:513)
     [java]     at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:208)
     [java]     at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:378)
     [java]     at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:368)
     [java]     at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
     [java] Caused by: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog
     [java]  at [row,col {unknown-source}]: [1,0]
     [java]     at com.ctc.wstx.sr.StreamScanner.throwUnexpectedEOF(StreamScanner.java:661)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.handleEOF(BasicStreamReader.java:2134)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.nextFromProlog(BasicStreamReader.java:2040)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1069)
     [java]     at org.apache.cxf.staxutils.StaxUtils.readDocElements(StaxUtils.java:663)
     [java]     at org.apache.cxf.staxutils.StaxUtils.read(StaxUtils.java:518)
     [java]     at org.apache.cxf.databinding.source.XMLStreamDataReader.read(XMLStreamDataReader.java:93)
     [java]     ... 20 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-02 17:23:21.138,,,no_permission,,,,,,,,,,,,,111597,,,Wed Nov 11 22:49:47 UTC 2009,,,,,,0|i140mv:,231565,,,,,,,,02/Jul/07 17:23;dandiep;Wouldn't a POST on a Provider kind of imply that there should be an XML body? I wouldn't be surprised if that was even part of the JAX-WS spec.,"03/Jul/07 04:09;jliu;Just checked spec, does not say anything about this.  For all the valid input formats that can be used for SOAP binding (Source/SOAPMessage/JAXBElement), obviously you cant send a POST with an empty body, you need an empty soap message at least. For XML/HTTP binding, I am not sure what is a valid ""empty"" xml body. I presume sending sth like below should be valid: <?xml version=""1.0"" encoding=""UTF-8""?>. Thoughts?

","03/Jul/07 06:54;cjodea;The same behaviour happens if I send a DELETE request.  For example, change the restful_dispatch demo such that the query for a specific customer is a delete: 

        url = new URL(endpointAddress + ""?id=1234"");
        System.out.println(""Invoking server through HTTP GET to query customer info"");
        HttpURLConnection conn = (HttpURLConnection)url.openConnection();
        conn.setRequestMethod(""DELETE""); 

I think that this is indicative of a bug.  

Jervis, I tried your suggested workaround but it did not make any difference.  An XML element has to be added after the prolog for it to work. 

In general, I don't think  all non-idempotent operations should be required to have a body.  A Service may have operations that modify its state and therefore should not be GETable but do not require any data.

","02/Aug/07 07:39;jliu;Below is the comment copied from cxf-dev mailing list:

In general, yes, any non-idempotent operations should not be required to have a body. But when it comes to using JAX-WS Dispatch/Provider to implement a Restful service, its really down to the semantics of Provider/Dispatch per spec. As the spec is not specific on this point, we could extend CXF code to support empty body with POST. However in practical, it is not very clear to me how this can be done. First, empty body does not equal to a null Source. Secondly, an empty Source wont be always mapped to an empty body and vice versa. For example, if I give Dispatch an empty Source by Source emptySource = new DomSource(), the underlying transformer will create empty source Document using DocumentBuilder.newDocument() thus results in a XML body with at least an XML declaration of <?xml version=""1.0"" standalone=""no"" encoding=""UTF-8""?>. Same thing occurs to the Provider side, for an empty body without an XML declaration, the parser even wont be able to know the input is indeed an xml document.

I would say this is just the limitation of using JAX-WS Dispatch/Provider to implement a Restful service. If this blocks you, you can try something else, for example, the HTTP binding for Restful service.

Cheers,
Jervis","02/Aug/07 07:47;cjodea;Hi Jervis, 

thanks for the information....good points.  However, this used to work.  Not sure why it was changed but in an earlier version of CXF there was no problem having a Provider handle a POST with an empty body. 

This is not a blocker.  

thanks
Conrad 
","18/Oct/09 19:59;chris@die-schneider.net;Is this issue still open? There is no activity on this issue since a long time. I will close on 25.10.2009 if there is no feedback.
","19/Oct/09 09:12;sergey_beryozkin;This was reported by Conrad awhile back, most likely Provider<Source> based web services. I'll try to run a test later on and see if empty POSTS work with JAXRS; empty POSTS are very rare and it makes sense to expect for Provider<Source> services to always get some XML in, but some ultra-HTTP JAXRS services might want to support empty POSTS

thanks",09/Nov/09 21:01;sergey_beryozkin;Empty POSTs are handled ok on the server side,"11/Nov/09 22:49;dkulp;Reassigning to me.   It's still an issue with JAXWS non-soap providers.   (for SOAP binding providers, an exception would definitely be correct as its not a soap message).     I'm testing a fix now.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provider<DataSource>.invoke returning non-XML data causes error.,CXF-752,12372589,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,cjodea,cjodea,28/Jun/07 14:17,29/Aug/07 18:10,14/Mar/19 02:28,29/Jun/07 03:58,2.0,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"Returning non-XML data in Provider<DataSource>.invoke causes an exception when the ProviderOutDatabindingInterceptor tries to marshall the outgoing data. 

Here's the stack trace: 

Jun 28, 2007 3:13:06 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
INFO: Interceptor has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Could not parse the XML stream.
        at org.apache.cxf.databinding.source.XMLStreamDataWriter.write(XMLStreamDataWriter.java:66)
        at org.apache.cxf.databinding.source.XMLStreamDataWriter.write(XMLStreamDataWriter.java:41)
        at org.apache.cxf.jaxws.interceptors.ProviderOutDatabindingInterceptor.handleMessage(ProviderOutDatabindingInterceptor.java:56)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:206)
        at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:73)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:206)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:67)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:253)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:213)
        at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
        at org.mortbay.jetty.Server.handle(Server.java:285)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:502)
        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:835)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:641)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:208)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:378)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:368)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
Caused by: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character '-' (code 45) in prolog; expected '<'
 at [row,col {unknown-source}]: [2,1]
        at com.ctc.wstx.sr.StreamScanner.throwUnexpectedChar(StreamScanner.java:623)
        at com.ctc.wstx.sr.BasicStreamReader.nextFromProlog(BasicStreamReader.java:2047)
        at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1069)
        at org.apache.cxf.staxutils.StaxUtils.copy(StaxUtils.java:284)
        at org.apache.cxf.databinding.source.XMLStreamDataWriter.write(XMLStreamDataWriter.java:63)
        ... 20 more
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.703 sec <<< FAILURE!

",,,,,,,,,,,,,,,,,28/Jun/07 14:26;cjodea;cxf-datasource-test.tgz;https://issues.apache.org/jira/secure/attachment/12360741/cxf-datasource-test.tgz,28/Jun/07 14:30;cjodea;providerout_datasource_cxf751.patch;https://issues.apache.org/jira/secure/attachment/12360743/providerout_datasource_cxf751.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111591,,,Thu Jun 28 14:30:11 UTC 2007,,,,,,0|i140mf:,231563,,,,,,,,"28/Jun/07 14:26;cjodea;Here's a test case that illustrates the problem.  The problem is caused here is that the reponse from the provider contains a number of attachments one of which is of type 'text/plain'

","28/Jun/07 14:30;cjodea;Here's a patch for it.  I don't know if this is the best implementation of this.  All it does is write the contents of a returned DataSource to the OutputStream found it the Message. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java->WSDL doen't generate correct fault element,CXF-751,12372578,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,28/Jun/07 10:07,29/Aug/07 18:10,14/Mar/19 02:28,28/Jun/07 12:09,,,,,,,,2.0,,,,,,,0,"When generate wsdl with the below exception : 

@WebFault(name=""faultDetail"", namespace=""org.apache.cxf"")
public class AddNumbersException extends Exception {
    
    public AddNumbersException() {
    }

    public AddNumbersException(String message) {
        super(message);
    }

    public AddNumbersException(Throwable cause) {
        super(cause);
    }

    public AddNumbersException(String message, Throwable cause) {
        super(message, cause);
    }

}

We get the wrong fault element and message element : 
  <wsdl:message name=""faultDetail"">
    <wsdl:part name=""fault"" element=""ns1:faultDetail"">
    </wsdl:part>
  </wsdl:message>

 <wsdl:fault name=""faultDetail"" message=""ns1:faultDetail"">


Fault element and message element should be ns1:AddNumbersException



",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111590,,,2007-06-28 10:07:50.0,,,,,,0|i0v38n:,179498,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support using Session in standalone,CXF-750,12372558,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,jliu,jliu,28/Jun/07 02:48,29/Aug/07 02:02,14/Mar/19 02:28,01/Jul/07 01:40,,,,,,,,2.0.1,,JAX-WS Runtime,,,,,0,"Following code snippet should work when cxf is deployed in standalone mode (Jetty):

    @Resource
    private WebServiceContext context;

    public final List<String> ping() {
        MessageContext mc = context.getMessageContext();
        HttpSession session = ((javax.servlet.http.HttpServletRequest)mc.get(MessageContext.SERVLET_REQUEST))
            .getSession();
        // Get a session property ""counter"" from context
        if (session == null) {
            throw new WebServiceException(""No session in WebServiceContext"");
        }
        Integer counter = (Integer)session.getAttribute(""counter"");
        if (counter == null) {
            counter = new Integer(0);
            System.out.println(""Starting the Session"");
        }
        counter = new Integer(counter.intValue() + 1);
        session.setAttribute(""counter"", counter);
        System.out.println(""------------"" + counter);
        return counter;
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-01 01:40:20.551,,,no_permission,,,,,,,,,,,,,111589,,,Sun Jul 01 01:40:20 UTC 2007,,,,,,0|i0v31b:,179465,,,,,,,,01/Jul/07 01:40;njiang;This issues has been resolved in revision 551517,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redundant Interceptors in the request-response chain while using Provider API,CXF-747,12372434,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,apaibir,apaibir,26/Jun/07 14:03,05/Jul/07 02:07,14/Mar/19 02:28,05/Jul/07 02:07,2.0,,,,,,,2.0.1,,JAX-WS Runtime,,,,,0,"If the Provider API is used in MESSAGE or PAYLOAD mode Then there are couple of redundant interceptors like WrapperClassInInterceptor, HolderInInterceptor present in the chain. Also the response chain would be having the symmetric out interceptors that are not required.
Along the lines of Dispatch Interceptor chain , these interceptors also are a candidate fro removal.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111586,,,2007-06-26 14:03:36.0,,,,,,0|i1a9sn:,268053,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB Data Binding Generates Duplicate Fault Elements in Generated WSDL,CXF-745,12372368,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,blin,joel.turkel,joel.turkel,25/Jun/07 17:58,20/Jul/07 07:00,14/Mar/19 02:28,20/Jul/07 07:00,2.0,,,,,,,2.0.1,,JAXB Databinding,,,,,0,"CXF is generating duplicate fault elements for a service annotated with JAX-WS/JAXB annotations. This looks like the same issue reported in CXF-641, but it still reproduces in the latest 2.0 snapshot. Will attach a test case.

I'm not familiar with the codebase, but it looks like the problem is that JAXBSchemaInitializer.end(FaultInfo fault) is adding elements to the schema that already exist.",,,,,,,,,,,,,,,,,25/Jun/07 18:00;joel.turkel;cxf-exception-bug.zip;https://issues.apache.org/jira/secure/attachment/12360503/cxf-exception-bug.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-17 21:24:10.143,,,no_permission,,,,,,,,,,,,,111584,,,Fri Jul 20 07:00:49 UTC 2007,,,,,,0|i146r3:,232557,,,,,,,,17/Jul/07 21:24;dandiep;Did anyone tackle this yet?,20/Jul/07 07:00;blin;talked to Jim and he said this is fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cannot invoke on endpoint implemented using Provider<DataSource>,CXF-741,12372027,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,cjodea,cjodea,20/Jun/07 10:49,29/Aug/07 18:10,14/Mar/19 02:28,28/Jun/07 08:28,2.0,,,,,,,2.0,,,,,,,0,"Invoking on an XML/HTTP service implemented with the following provider: 

@WebServiceProvider(serviceName = ""TestProvider"")
@ServiceMode(value = Service.Mode.PAYLOAD)
@BindingType(value = ""http://cxf.apache.org/bindings/xformat"")
public class TestProvider extends AbstractProvider<DataSource> implements Provider<DataSource> {
  ....
}

Results in the following stack trace: 

java.lang.NullPointerException
        at org.apache.cxf.frontend.SimpleMethodDispatcher.getMethod(SimpleMethodDispatcher.java:92)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:51)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:56)
        at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:87)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:206)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:67)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:255)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:214)
        at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
        at org.mortbay.jetty.Server.handle(Server.java:285)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:502)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:821)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:513)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:208)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:378)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:368)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)",,,,,,,,,,,,,,,,,27/Jun/07 07:43;ffang;DataSourceProvider.patch;https://issues.apache.org/jira/secure/attachment/12360651/DataSourceProvider.patch,26/Jun/07 14:44;cjodea;cxf-datasource-test-2.tgz;https://issues.apache.org/jira/secure/attachment/12360590/cxf-datasource-test-2.tgz,20/Jun/07 10:52;cjodea;cxf-datasource-test.tgz;https://issues.apache.org/jira/secure/attachment/12360185/cxf-datasource-test.tgz,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-06-27 06:31:06.417,,,no_permission,,,,,,,,,,,,,111580,,,Wed Jun 27 07:43:07 UTC 2007,,,,,,0|i1a9tr:,268058,,,,,,,,20/Jun/07 10:52;cjodea;Test case,"26/Jun/07 14:43;cjodea;I'm reopening this issue as it's basically incomplete.  Invoking the provider via a HTTP GET is fine however using POST does not work. 

Test case to follow. 
",26/Jun/07 14:44;cjodea;Update to include POSTing of data to provider,"26/Jun/07 14:47;cjodea;I was looking at implementing a fix for this but I ran into a problem when trying to construct a DataSource object in ProviderInDatabindingInterceptor.  The test case POSTs a body which has multi-part mime attachments,.

By the time this interceptor is invoked, the attachments have been parsed and the input stream for the request is empty.  As far as I can see, by the time we get here, a DataSource cannot be constructed (at least not from the InputStream).
","27/Jun/07 06:31;ffang;The InputStream is consumed when build XmlStreamReader in StaxInInterceptor which is invoked before ProviderInDatabindingInterceptor.

For DataSource provider, it should skip AttachmentInInterceptor which extract attachment from message and StaxInInterceptor which create XmlStreamReader from message InputStream

Then After  add code in ProviderInDatabindingInterceptor
if (SOAPMessage.class.equals(type)) {
            SOAPMessage msg = message.getContent(SOAPMessage.class);
            params.add(msg);
+        } else if (DataSource.class.equals(type)) {
+            InputStream is = message.getContent(InputStream.class);
+            try {
+                params.add(new ByteArrayDataSource(is, (String) +message.get(Message.CONTENT_TYPE)));
+            } catch (IOException e1) {
+                e1.printStackTrace();
+            }
        }

I almost get your testcode work since I can get message with multi-part mime attachments in Post method of TestProvider. But seems the multi-part mime messasge is not correct because multipart.getCount() is 0 in my case.

The message I print in post method of TestProvider is 

------=_Part_4_701508.1145579811786
Content-Type: text/xml
Content-ID: <attachmentData>

<foo>
   <bar baz=""wibble""/>
</foo>

------=_Part_4_701508.1145579811786
Content-Type: application/base64
Content-ID: <base64>

TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlz
IHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2Yg
dGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGlu
dWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRo
ZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=","27/Jun/07 07:43;ffang;Hi Conrad,
Attachment is my change, if it works for your case, I will commit it

Thanks very much

Freeman",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate schema in wrong target namespace,CXF-740,12371932,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,19/Jun/07 04:12,29/Aug/07 18:10,14/Mar/19 02:28,20/Jun/07 04:14,,,,,,,,2.0,,,,,,,0,"Use java2wsdl to generate wsdl for following class , schema elment ""person"" in wrong targetNamespace.

------------Class Person---------------------------

package common.test;

public class Person {

    String name;

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

}

-------Class Greeter--------
package demo.test;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import common.test.Person;
@WebService(name = ""Greeter"", targetNamespace = ""http://test.demo/"")
public interface Greeter {

    @WebMethod(operationName = ""sayHi"", exclude = false)
    @ResponseWrapper(className = ""demo.test.SayHiResponse"", 
                     localName = ""sayHiResponse"", targetNamespace = ""http://test.demo/"")
    @RequestWrapper(className = ""demo.test.SayHi"", 
                    localName = ""sayHi"", targetNamespace = ""http://test.demo/"")
    void sayHi(@WebParam(targetNamespace = ""http://test.common"", name = ""person"")
               Person person);

}


-----------Wrong wsdl ---------------

<?xml version=""1.0"" encoding=""UTF-8""?>
<wsdl:definitions name=""GreeterService"" targetNamespace=""http://test.demo/"" xmlns:ns1=""http://test.demo/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
  <wsdl:types>
<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns=""http://test.demo/"" attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"" targetNamespace=""http://test.demo/"">
<xs:complexType name=""person"">
<xs:sequence>
<xs:element minOccurs=""0"" name=""name"" type=""xs:string""/>
</xs:sequence>
</xs:complexType>
<xs:element name=""sayHi"" type=""sayHi""/>
<xs:complexType name=""sayHi"">
<xs:sequence>
<xs:element minOccurs=""0"" name=""arg0"" type=""person""/>
</xs:sequence>
</xs:complexType>
<xs:element name=""sayHiResponse"" type=""sayHiResponse""/>
<xs:complexType name=""sayHiResponse"">
<xs:sequence/>
</xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name=""sayHiResponse"">
    <wsdl:part name=""parameters"" element=""ns1:sayHiResponse"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name=""sayHi"">
    <wsdl:part name=""parameters"" element=""ns1:sayHi"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name=""Greeter"">
    <wsdl:operation name=""sayHi"">
      <wsdl:input name=""sayHi"" message=""ns1:sayHi"">
    </wsdl:input>
      <wsdl:output name=""sayHiResponse"" message=""ns1:sayHiResponse"">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name=""GreeterServiceSoapBinding"" type=""ns1:Greeter"">
    <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
    <wsdl:operation name=""sayHi"">
      <soap:operation soapAction="""" style=""document""/>
      <wsdl:input name=""sayHi"">
        <soap:body use=""literal""/>
      </wsdl:input>
      <wsdl:output name=""sayHiResponse"">
        <soap:body use=""literal""/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name=""GreeterService"">
    <wsdl:port name=""GreeterPort"" binding=""ns1:GreeterServiceSoapBinding"">
      <soap:address location=""http://localhost:9090/hello""/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>





",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111579,,,Wed Jun 20 04:14:00 UTC 2007,,,,,,0|i140nb:,231567,,,,,,,,"20/Jun/07 04:14;ema;When the pojo class ""Person"" be annotated with ""@XmlType(namespace = ""http://test.common"")"" can resolve this issue . 

This is because the jaxb use the default namespace to marshall these this class when the namesapce is not specified, so we need to annotate it with namesapce :

package common.test;
import javax.xml.bind.annotation.XmlType;
@XmlType(namespace = ""http://test.common"")
public class Person {

    String name;

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

} 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate schema element  issue,CXF-738,12371847,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,18/Jun/07 08:33,29/Aug/07 18:10,14/Mar/19 02:28,19/Jun/07 04:03,,,,,,,,2.0,,,,,,,0,"I was looking into this and I found that we have at least one test which
shows a slightly different variation of the same problem. If you add these
lines to the CodeFirstTest. you'll get failures:

assertValid(""//xsd:element[@name='FooEcho2HeaderRequest'][1]"", doc);
assertInvalid(""//xsd:element[@name='FooEcho2HeaderRequest'][2]"", doc);

Note that this is a test case which involves headers though. I suspect that
the one exemplified by Dan Connelly could be reproduced by adding a couple
operations to FooService like:

Foo echo1(Foo foo)
Foo echo2(Foo foo)

In this case CXF would create the same <xsd:element name=""foo"" type=""foo""/>
multiple times I think. It seems both JAXBSchemaIntiailizer and
ReflectionServiceFactory are creating these wrapper elements (i.e. new
XsSchemaElement). I don't know if they're checking to see if these elements
already exist at the moment...

I think this could be considered a pretty critical bug - i.e. we need to
hold up the release until we get it fixed. I'm posting it here in case
anyone feels motivated to go through it before I get up again tomorrow
(getting a little late here) :-) . Otherwise I'll fix it first thing
tomorrow.

Cheers,
- Dan

---------- Forwarded message ----------
From: Dan Diephouse <dan@envoisolutions.com>
Date: Jun 17, 2007 10:23 PM
Subject: Re: How to invoke a CXF endpoint from a WCF client ?
To: cxf-user@incubator.apache.org

This is definitely not valid per the spec... I think this might be a problem
with the JAXBDataBinding/JAXBSchemaInitializer code.

Any chance you tried a snapshot build recently?
Thanks,
- Dan

On 6/17/07, Dan Connelly <daniel.s.connelly@comcast.net> wrote:
>
> OK.   Don't blame VS Express (""Orcas"") just yet.   The major problem
> appears to come from CXF (2.0 RC in my case).
>
> The snag shows up when Orcas runs svcutil.exe, which is does for ""Add
> Service Reference ..."".    This is the Microsoft tool equivalent of
> wsdl2java (or wsimport).
>
> Svcutil throws errors and fails to produce any C# artifacts when the
> WSDL it reads contains 2 or more element type definitions with the same
> name.    And, duplicate element types seems quite common in CXF samples
> (at least for xformat BindingType).
>
> For instance, for sample ""hello_world_xml_bare"" server returns the the
> following definitions in response to the ?wsdl URL:
>
> ...
> <wsdl:types>
>     <xs:schema attributeFormDefault=""unqualified""
> elementFormDefault=""unqualified""
> targetNamespace=""http://apache.org/hello_world_xml_http/bare/types"">
>         <xs:element name=""myComplexStruct"" nillable=""true""
> type=""tns:myComplexStructType""/>
>         <xs:element name=""requestType"" nillable=""true"" type=""xs:string""/>
>         <xs:element name=""responseType"" nillable=""true"" type=""xs:string""/>
>
>         <xs:complexType name=""myComplexStructType"">
>             <xs:sequence>
>                 <xs:element form=""qualified"" name=""elem1""
> type=""xs:string""/>
>                 <xs:element form=""qualified"" name=""elem2""
> type=""xs:string""/>
>                 <xs:element form=""qualified"" name=""elem3"" type=""xs:int""/>
>             </xs:sequence>
>         </xs:complexType>
>     <xs:element name=""myComplexStruct"" nillable=""true""
> type=""tns:myComplexStructType""/>
>     <xs:element name=""responseType"" nillable=""true"" type=""xs:string""/>
>     <xs:element name=""requestType"" nillable=""true"" type=""xs:string""/>
>     <xs:element name=""responseType"" nillable=""true"" type=""xs:string""/>
>     </xs:schema>
>     <xsd:schema attributeFormDefault=""unqualified""
> elementFormDefault=""qualified""
> targetNamespace=""http://apache.org/hello_world_xml_http/bare "">
>         <xsd:import
> namespace=""http://apache.org/hello_world_xml_http/bare/types""/>
>         <xsd:import
> namespace="" http://apache.org/hello_world_xml_http/bare/types""/>
>         <xsd:element name=""in"" nillable=""true""
> type=""ns0:myComplexStructType""/>
>         <xsd:element name=""out"" nillable=""true""
> type=""ns0:myComplexStructType""/>
>         <xsd:element name=""out"" nillable=""true"" type=""xsd:string""/>
>     </xsd:schema>
> </wsdl:types>
> ...
>
>
> Note:
>
> This WSDL has 2 definitions each named   myComplextType, requestType, out
> It also has 3 definitions named:   responseType
>
> I suspect that the WSDL XML specification would not allow multiple
> declarations of element types with the same name.
>
> Whether or not the spec allows duplicate names, the fact it breaks the
> Microsoft tooling (which would be used frequently for client creation)
> is full justification for CXF eliminating its output of element type
> names in the synthetic WSDL. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111577,,,2007-06-18 08:33:05.0,,,,,,0|i0v2jb:,179384,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.xml.ws.Service.getPort(java.lang.Class<T> serviceEndpointInterface)  does not work,CXF-735,12371727,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,15/Jun/07 07:58,29/Aug/07 18:14,14/Mar/19 02:28,04/Jul/07 17:28,,,,,,,,2.0.1,,JAX-WS Runtime,,,,,0,"javax.xml.ws.Service.getPort(java.lang.Class<T> serviceEndpointInterface)  does not work, see test case:

org.apache.cxf.jaxws.ServiceImplTest.testNonSpecificGetPort",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111574,,,Thu Jun 21 03:05:00 UTC 2007,,,,,,0|i1a9un:,268062,,,,,,,,"21/Jun/07 03:05;jliu;Note, the injection stuff does not work properly as well.  Below is quoted from Eoghan's email:

""
After an amount of head-banging-on-desk, I noticed that the
<jaxws:client> config isn't picked up via the non-specific
Service.getPort(), even when the actual port selected matches the bean
ID of the configured <jaxws:client>.

By the non-specific Service.getPort(), I mean the form of this API where
a specific port name is not provided explicitly by the app, instead the
Service impl handles the selection of an appropriate port.

This is easily seen by removing the @Ignore from the
ServiceImplTest.testNonSpecificGetPort() unit test that I just
committed.

This should this work, right? I mean, what does it matter if endpoint is
selected by the Service impl or specified explicitly by the app, either
way a matching <jaxws:client> bean should be wired in, or?
""

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dispath does not work with LogicalHandlers (and maybe SoapHandlers as well). ,CXF-732,12371723,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,15/Jun/07 06:59,29/Aug/07 18:14,14/Mar/19 02:28,04/Jul/07 17:28,,,,,,,,2.0.1,,JAX-WS Runtime,,,,,0,"This is because DispatchOutInterceptor flush the content to output stream early than reaching LogicalHandlers and SoapHandlers.

See test case org.apache.cxf.systest.handlers.HandlerInvocationUsingAddNumbersTest.testInvokeFromDispatchWithJAXBPayload()

java.lang.NullPointerException
	at org.apache.cxf.staxutils.StaxUtils.copy(StaxUtils.java:258)
	at org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl.getPayload(LogicalMessageImpl.java:66)
	at org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl.getPayload(LogicalMessageImpl.java:111)
	at org.apache.cxf.systest.handlers.SmallNumberHandler.handleMessage(SmallNumberHandler.java:75)
	at org.apache.cxf.systest.handlers.SmallNumberHandler.handleMessage(SmallNumberHandler.java:44)
	at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandleMessage(HandlerChainInvoker.java:336)
	at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandlerChain(HandlerChainInvoker.java:259)
	at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeLogicalHandlers(HandlerChainInvoker.java:124)
	at org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor.handleMessage(LogicalHandlerOutInterceptor.java:117)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
	at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:151)
	at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:109)
	at org.apache.cxf.systest.handlers.HandlerInvocationUsingAddNumbersTest.testInvokeFromDispatchWithJAXBPayload(HandlerInvocationUsingAddNumbersTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
	at org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
	at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
	at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)
	at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
	at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
2007-6-15 14:58:50 org.apache.cxf.testutil.common.ServerLauncher notifyServerIsStopped
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111571,,,2007-06-15 06:59:24.0,,,,,,0|i140nz:,231570,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can not get javax.xml.ws.wsdl.description from MessageContext,CXF-731,12371720,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,15/Jun/07 06:14,29/Aug/07 18:14,14/Mar/19 02:28,30/Jul/07 05:35,,,,,,,,2.0.1,,JAX-WS Runtime,,,,,0,See test case org.apache.cxf.systest.handlers.HandlerInvocationTest.testDescription(),,,,,,,,,,,,,,,,,06/Jul/07 09:08;jeffzhang;patch_wsdldesc.txt;https://issues.apache.org/jira/secure/attachment/12361278/patch_wsdldesc.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-06 09:08:31.01,,,no_permission,,,,,,,,,,,,,111570,,,Fri Jul 06 09:08:31 UTC 2007,,,,,,0|i13zrj:,231424,,,,,,,,"06/Jul/07 09:08;jeffzhang;patch for this JIRA.
add server patch system test.

Add all properties about wsdl (see JaxWS spec p121) for normal client(ClientImpl).
Add all except javax.xml.ws.wsdl.operation for dispatch and server. 
should be added in one interceptor.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS_RM samples failed,CXF-729,12371582,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,blin,blin,14/Jun/07 02:53,29/Aug/07 18:10,14/Mar/19 02:28,14/Jun/07 03:54,,,,,,,,2.0,,,,,,,0,"again, i believe this is related to low level I/O refactoring, error message with following:
compile:
    [javac] Compiling 4 source files to /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/ws_rm/build/classes
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/ws_rm/src/demo/ws_rm/common/MessageLossSimulator.java:92: cannot find symbol
    [javac] symbol  : constructor AbstractWrappedOutputStream(org.apache.cxf.message.Message)
    [javac] location: class org.apache.cxf.io.AbstractWrappedOutputStream
    [javac]             super(m);
    [javac]             ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/ws_rm/src/demo/ws_rm/common/MessageLossSimulator.java:96: method does not override a method from its superclass
    [javac]         @Override
    [javac]          ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/ws_rm/src/demo/ws_rm/common/MessageLossSimulator.java:104: cannot find symbol
    [javac] symbol  : method alreadyFlushed()
    [javac] location: class demo.ws_rm.common.MessageLossSimulator.WrappedOutputStream
    [javac]             boolean af = alreadyFlushed();
    [javac]                          ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/ws_rm/src/demo/ws_rm/common/MessageLossSimulator.java:107: cannot find symbol
    [javac] symbol  : variable outMessage
    [javac] location: class demo.ws_rm.common.MessageLossSimulator.WrappedOutputStream
    [javac]                     RMProperties props = RMContextUtils.retrieveRMProperties(outMessage, true);
    [javac]                                                                              ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/ws_rm/src/demo/ws_rm/common/MessageLossSimulator.java:113: cannot find symbol
    [javac] symbol  : method resetOut(demo.ws_rm.common.MessageLossSimulator.DummyOutputStream,boolean)
    [javac] location: class demo.ws_rm.common.MessageLossSimulator.WrappedOutputStream
    [javac]                 resetOut(new DummyOutputStream(), true);
    [javac]                 ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/ws_rm/src/demo/ws_rm/common/MessageLossSimulator.java:102: method does not override a method from its superclass
    [javac]         @Override
    [javac]          ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/ws_rm/src/demo/ws_rm/common/MessageLossSimulator.java:117: method does not override a method from its superclass
    [javac]         @Override
    [javac]          ^
    [javac] Note: /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/ws_rm/src/demo/ws_rm/common/MessageLossSimulator.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 7 errors
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111568,,,2007-06-14 02:53:05.0,,,,,,0|i0v39z:,179504,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StreamInterceptor sample failed,CXF-728,12371580,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,blin,blin,14/Jun/07 02:35,29/Aug/07 02:04,14/Mar/19 02:28,14/Jun/07 03:47,,,,,,,,2.0,,,,,,,0,"with following error message, I believe this is related to Dan Diephouse's low level I/O refactoring:

compile:
    [javac] Compiling 17 source files to /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/build/classes
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:29: cannot find symbol
    [javac] symbol  : class AbstractCachedOutputStream
    [javac] location: package org.apache.cxf.io
    [javac] import org.apache.cxf.io.AbstractCachedOutputStream;
    [javac]                          ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:86: cannot find symbol
    [javac] symbol  : class AbstractCachedOutputStream
    [javac] location: class demo.stream.interceptor.StreamInterceptor
    [javac]     private class CachedStream extends AbstractCachedOutputStream {
    [javac]                                        ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:52: <T>setContent(java.lang.Class<T>,java.lang.Object) in org.apache.cxf.message.Message cannot be applied to (java.lang.Class<java.io.OutputStream>,demo.stream.interceptor.StreamInterceptor.CachedStream)
    [javac]             message.setContent(OutputStream.class, cs);
    [javac]                    ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:57: cannot find symbol
    [javac] symbol  : method flush()
    [javac] location: class demo.stream.interceptor.StreamInterceptor.CachedStream
    [javac]                 cs.flush();
    [javac]                   ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:58: cannot find symbol
    [javac] symbol  : class AbstractCachedOutputStream
    [javac] location: class demo.stream.interceptor.StreamInterceptor
    [javac]                 AbstractCachedOutputStream csnew = (AbstractCachedOutputStream) message
    [javac]                 ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:58: cannot find symbol
    [javac] symbol  : class AbstractCachedOutputStream
    [javac] location: class demo.stream.interceptor.StreamInterceptor
    [javac]                 AbstractCachedOutputStream csnew = (AbstractCachedOutputStream) message
    [javac]                                                     ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:61: cannot find symbol
    [javac] symbol  : variable AbstractCachedOutputStream
    [javac] location: class demo.stream.interceptor.StreamInterceptor
    [javac]                 AbstractCachedOutputStream.copyStream(csnew.getInputStream(), zipOutput, 1024);
    [javac]                 ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:63: cannot find symbol
    [javac] symbol  : method close()
    [javac] location: class demo.stream.interceptor.StreamInterceptor.CachedStream
    [javac]                 cs.close();
    [javac]                   ^
    [javac] /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:92: cannot find symbol
    [javac] symbol  : variable currentStream
    [javac] location: class demo.stream.interceptor.StreamInterceptor.CachedStream
    [javac]             currentStream.flush();
    [javac]             ^
    [javac] Note: /local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 9 errors

BUILD FAILED
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111567,,,2007-06-14 02:35:24.0,,,,,,0|i0v31j:,179466,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
samples servlet mode doesn't work,CXF-726,12371512,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,13/Jun/07 03:12,29/Aug/07 18:10,14/Mar/19 02:28,13/Jun/07 13:47,,,,,,,,2.0,,,,,,,0,"when try to deploy samples war into servlet container, get exception as

SEVERE: StandardWrapper.Throwable
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 33 in XML document from /WEB-INF/cxf-servlet.xml is invalid; nested exception is org.xml.sax.SAXParseException: cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element 'jaxws:endpoint'.
Caused by: org.xml.sax.SAXParseException: cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element 'jaxws:endpoint'.
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:316)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:429)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3185)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1955)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:725)
        at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:322)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1693)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111565,,,Wed Jun 13 04:14:36 UTC 2007,,,,,,0|i140nj:,231568,,,,,,,,"13/Jun/07 03:58;ffang;after clean my tomcat libs and copy latest cxf jars, get over the spring validation problem.
But when try the servlet mode  for xml binding samples, get the error as

Caused by: org.apache.cxf.interceptor.Fault: Could not write from XMLStreamReader.
     [java]     at org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor.handleMessage(XMLMessageOutInterceptor.java:89)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:162)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:249)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:200)
     [java]     at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
     [java]     at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)
     [java]     ... 2 more
","13/Jun/07 04:14;ffang;the error is when servlet publish wsdl for client side use,  it don't replace the listening port used by servlet container with it in the wsdl http address",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPS NullPointer Exception in CXFJettySslSocket,CXF-725,12371483,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,polar,polar,12/Jun/07 17:15,29/Aug/07 02:04,14/Mar/19 02:28,12/Jun/07 18:24,2.0,2.0.1,2.1,,,,,2.0,,,,,,,0,"If the ClientAuthentication parameter to a server engine is set to null, the configuration
of the CXFJettySslSocket gets a null pointer exception.",,,,,,,,,,,,,,,,,12/Jun/07 17:27;polar;CXF-725.patch;https://issues.apache.org/jira/secure/attachment/12359532/CXF-725.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-12 18:24:14.277,,,no_permission,,,,,,,,,,,,,111564,,,Tue Jun 12 18:24:14 UTC 2007,,,,,,0|i1a9vj:,268066,,,,,,,,12/Jun/07 17:27;polar;This patch resolves the issue.,12/Jun/07 18:24;dkulp;Patch applied.  Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interceptor ordering declared programmatically is being overriden by configuration,CXF-724,12371481,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,fdushin,fdushin,12/Jun/07 16:57,29/Aug/07 02:04,14/Mar/19 02:28,12/Jun/07 18:23,,,,,,,,2.0,,Core,,,,,0,"The WSS4JInInterceptor has a dependency on the SAAJInInterceptor, and this is declared programmatically, in the WSS4JInInterceptor ctor, as follows:

{{{
    public WSS4JInInterceptor() {
        super();

        setPhase(Phase.PRE_PROTOCOL);
        getAfter().add(SAAJInInterceptor.class.getName());
    }
}}}

When I run this interceptor with the following configuration:

{{{
    <jaxws:endpoint name=""{http://www.acme.com}GreeterPort"" createdFromAPI=""true"">
         <jaxws:inInterceptors>
             <bean class=""org.apache.cxf.binding.soap.saaj.SAAJInInterceptor""/>
             <ref bean=""WSS4JInInterceptor""/>
         </jaxws:inInterceptors>
    </jaxws:endpoint>
}}}

the interceptor fails on line 117 with the error: NO_SAAJ_DOC

And the line of code is:

{{{
            if (doc == null) {
                throw new SoapFault(new Message(""NO_SAAJ_DOC"", LOG), version.getReceiver());
            }
}}}

Looking at the logs (with full tracing), I see the following interceptor list:

{{{
pre-protocol [WSSJaxBInterceptor, WSSUsernameTokenCredentialsCollector, WSSBinarySecurityTokenCredentialsCollector, WSS4JInInterceptor, WSSX509CertificateCredentialsCollector, MustUnderstandInterceptor, SOAPHandlerInterceptor, LogicalHandlerInInterceptor, SAAJInInterceptor]
}}}

For some reason, the SAAJInInterceptor is being placed last in the phase.

If, on the other hand, I /reverse/ the order of definition in config, to read:

{{{
    <jaxws:endpoint name=""{http://www.acme.com}GreeterPort"" createdFromAPI=""true"">
         <jaxws:inInterceptors>
             <ref bean=""WSS4JInInterceptor""/>
             <bean class=""org.apache.cxf.binding.soap.saaj.SAAJInInterceptor""/>
         </jaxws:inInterceptors>
    </jaxws:endpoint>
}}}

the interceptor list instead reads:

{{{
pre-protocol [WSSJaxBInterceptor, WSSUsernameTokenCredentialsCollector, WSSBinarySecurityTokenCredentialsCollector, SAAJInInterceptor, WSS4JInInterceptor, WSSX509CertificateCredentialsCollector, MustUnderstandInterceptor, SOAPHandlerInterceptor, LogicalHandlerInInterceptor]
}}}

and the interceptor functions correctly (because the SAAJInInterceptor is getting called before the WSS4JInInterceptor.

This bug is being filed in the context of the WSS4JInInterceptor, but it probably applies to other interceptor types, as well.",OS X,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111563,,,2007-06-12 16:57:52.0,,,,,,0|i0syyf:,167140,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The ""time"" logging in both the WSS4JInInterceptor and the WSS4JOutInterceptor contains incorrect or redundant information",CXF-723,12371458,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,coheig,coheig,12/Jun/07 11:08,29/Aug/07 02:04,14/Mar/19 02:28,12/Jun/07 18:23,,,,,,,,2.0,,WS-* Components,,,,,0,"Both WSS4JInInterceptor and WSS4JOutInterceptor give the user the ability to see
how much system time is spent in each phase of processing the message. However,
there are some flaws with the way this is implemented:

WSS4JOutInterceptor:

1) The ""t3"" variable is superfluous, as is the log message '""request to CXF= "" + (t3 - t2)'
(which will always be ~0).

WSS4JInInterceptor:

1) The ""t3"" variable is defined as 0, which means that the log message 
'"" request to CXF= "" + (t3 - t2)' gives a (wildly) incorrect result, eg;

FINE: Receive request: total= 47 request preparation= 0 request processing= 47 
request to CXF= -1181643784031 header, cert verify, timestamp= 1181643784031

The same applies for the log message '"" header, cert verify, timestamp= "" + (t4 - t3)'

Please see the attached patch for a fix for this.",,,,,,,,,,,,,,,,,12/Jun/07 11:09;coheig;logging.patch;https://issues.apache.org/jira/secure/attachment/12359497/logging.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-12 18:23:36.916,,,no_permission,,,,,,,,,,,,,111562,,,Tue Jun 12 18:23:36 UTC 2007,,,,,,0|i1a9vr:,268067,,,,,,,,"12/Jun/07 18:23;dkulp;Patch applied.   Thanks.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using absolute java.net.URL in externalForm for handler chain config file is not supported,CXF-722,12371453,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,12/Jun/07 09:34,19/Jun/07 01:47,14/Mar/19 02:28,19/Jun/07 01:46,,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"Using absolute java.net.URL in externalForm for handler chain config file is not supported.(JSR-181, section 4.6.1), eg @HandlerChain(file=""http://acer/ArtixHandler.xml"")    



",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111561,,,2007-06-12 09:34:03.0,,,,,,0|i140i7:,231544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPS sample output message misleading ,CXF-721,12371435,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,blin,blin,12/Jun/07 04:11,14/Jun/07 02:26,14/Mar/19 02:28,14/Jun/07 02:26,2.0-RC,,,,,,,2.0,,Build system,,,,,0,"invoking HTTPS demo server with insecure mode (ant insecure.client) gives following output message:
insecure.client:
     [java] file:/local/cxf/trunk/distribution/target/apache-cxf-2.0-incubator-SNAPSHOT/samples/hello_world_https/wsdl/hello_world.wsdl
     [java] Credentials from InsecureClient.cxf will be used for the invocation.
     [java] Invoking greetMe...
     [java] Invocation failed with the following: org.apache.cxf.interceptor.Fault: Could not send Message.

Should we change the output message to be more explicit that the failure was expected under insecure invocation mode?",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111560,,,2007-06-12 04:11:01.0,,,,,,0|i140o7:,231571,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Endpoint.stop() does not release the resources for this endpoint, which might cause an OutOfMemory error.",CXF-719,12371300,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,09/Jun/07 02:45,29/Aug/07 18:10,14/Mar/19 02:28,12/Jun/07 09:12,,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"User reported:

""I am using the the jaxws:endpoint Spring bean which when destroyed calls Endpoint.stop(). This means when  the container removes an application, i.e. stops an endpoint,  the resources for this endpoint will not be cleaned up. A  user may think they are removing an application when in fact they are not, which after a period of time will cause problems. We need to either change the semantics of Endpoint.stop() or add some kind of destroy() method to EndpointImpl.

I can get out of memory error after as little as 14 times endpoint publishing/stopping.""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-12 09:12:44.096,,,no_permission,,,,,,,,,,,,,111558,,,Tue Jun 12 09:12:44 UTC 2007,,,,,,0|i1a9vz:,268068,,,,,,,,"12/Jun/07 09:12;njiang;This issue is introduced by the ManagedEndpoint which will not unregister it from the ServerLifeCycleManagerImpl's listeners which is a ArrayList when Server.stop() is called.
ServerLifeCycleManagerImpl is referenced by BusImpl, and the the listener holds the reference of the ManagedEndpoint.
 ManagedEndpoint also holds the reference of the EndpointImpl, ServerImpl  ***, so it cases the memory leak.

And This issue has been resolved in the revision  546431
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JettyHTTPServerEngineFactory not configured initially.,CXF-718,12371256,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,polar,polar,08/Jun/07 15:19,29/Aug/07 02:04,14/Mar/19 02:28,09/Jun/07 04:03,2.0,2.0.1,2.1,,,,,2.0,,Bus,Configuration,Core,Transports,,0,"The JettyHTTPServerEngine factory is not set as a bus extension if it is 
not spring configured, and before the creation of a desintation.",,,,,,,,,,,,,,,,,08/Jun/07 18:40;polar;CXF-718.patch;https://issues.apache.org/jira/secure/attachment/12359293/CXF-718.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-09 04:03:32.028,,,no_permission,,,,,,,,,,,,,111557,,,Sat Jun 09 04:03:32 UTC 2007,,,,,,0|i0syyn:,167141,,,,,,,,"08/Jun/07 18:40;polar;This patch resolves the issue.

The JettyHTTPTransportFactory is forced to create a JettyHTTPServerEngineFactory
so that there is an initial one registered on the Bus, if no spring configuration of one. Spring configuration will override the one already placed there. The TransportFactory
now always gets the ServerEngineFactory off the bus.",09/Jun/07 04:03;njiang;This patch has been applied in the revision 545689 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor JaxWsServerFactoryBean ,CXF-717,12371232,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,08/Jun/07 08:16,29/Aug/07 18:09,14/Mar/19 02:28,19/Jun/07 01:40,,,,,,,,2.0,,,,,,,0,"Refactor EndpointImpl and JaxWsServerFactoryBean, so that essentially everything in EndpointImpl is delegates to the JaxWsServerFactoryBean, EndpointImpl is just a wrapper on top of JaxWsServerFactoryBean. At the moment, JaxWsServerFactoryBean is not equal to javax.xml.ws.Endpoint.publish(), eg, handler chain and context injection is not done in JaxWsServerFactoryBean",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111556,,,2007-06-08 08:16:43.0,,,,,,0|i1a9w7:,268069,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
dispatch_provider sample in the lastest build does not work anymore,CXF-713,12371123,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,07/Jun/07 09:53,29/Aug/07 18:09,14/Mar/19 02:28,08/Jun/07 06:47,,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"The last request doesnt return any data from server:

client:
     [java] file:/D:/cxf0606/cxf-2.0-incubator-SNAPSHOT/samples/dispatch_provide
r/wsdl/hello_world.wsdl


     [java] Invoking server through Dispatch interface using SOAPMessage
     [java] Response from server:
     [java]
     [java]             Hi Gil
     [java]
     [java]
     [java] Invoking server through Dispatch interface using DOMSource in MESSAG
E Mode
     [java] Response from server:
     [java]
     [java]
     [java]             Hi Scott
     [java]
     [java]
     [java]
     [java] Invoking server through Dispatch interface using DOMSource in PAYLOA
D Mode
     [java] Response from server:
     [java]
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111554,,,2007-06-07 09:53:45.0,,,,,,0|i1a9x3:,268073,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some samples of CXF can't work now,CXF-712,12371118,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,njiang,njiang,njiang,07/Jun/07 08:52,29/Aug/07 18:10,14/Mar/19 02:28,14/Jun/07 01:10,2.0,,,,,,,2.0,,,,,,,0,"dispatch_provider
 * missing the response string of Hi Heron
   need to take a look at the GreeterDOMSourcePayloadProvider

hello-world-https
 * server start up with the http-destionation startup error
  need to be updated with the lastest change of the configuration

restful_http_bind
 * server start with NullPointException in the 

ReflectionServiceFactoryBean 546, need to take a deep look

soap12
 * Client.get error     

http://localhost:9000/SoapContext/SoapPort/greetMe/requestType/CXF

spring http
  * Configuration has been changed , so need to be updated

streamInterceptor
  * Configuration has been changed , so need to be updated

ws_addressing
  * Configuration has been changed , so need to be updated

ws_rm
  * need to be updated with the lastest change of the configuration",,,,,,,,,,,,,,,,,07/Jun/07 11:19;jeff.yu;cxf712.patch;https://issues.apache.org/jira/secure/attachment/12359163/cxf712.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-07 11:19:33.172,,,no_permission,,,,,,,,,,,,,111553,,,Thu Jun 14 01:10:29 UTC 2007,,,,,,0|i0uyk7:,178740,,,,,,,,"07/Jun/07 11:19;jeff.yu;It contains the fix for ""spring_http"", ""streaminterceptor"", ""ws_addressing"", ""ws_rm"" sample.",07/Jun/07 17:29;asmyth;Overlaps with CXF-678. ,"08/Jun/07 10:28;njiang;Now there is a new sample error now . 
It is  mtosi_1.1/alarm_retrieval build failed. 
The stack error is :
generate.code:
    [copy] Copying 1 file to /local/work/temp/apache-cxf-2.0-incubator-SNAPSHOT/samples/mtosi_1.1/alarm_retrieval/build
    [echo] Generating code using wsdl2java...
   [mkdir] Created dir: /local/work/temp/apache-cxf-2.0-incubator-SNAPSHOT/samples/mtosi_1.1/alarm_retrieval/build/classes
   [mkdir] Created dir: /local/work/temp/apache-cxf-2.0-incubator-SNAPSHOT/samples/mtosi_1.1/alarm_retrieval/build/src
    [java] Loading FrontEnd jaxws ...
    [java] Loading DataBinding jaxb ...
    [java] wsdl2java -p tmf854.v1.ws=ws.v1.tmf854.fault.http -p tmf854.v1=v1.tmf854.fault -b /local/work/temp/apache-cxf-2.0-incubator-SNAPSHOT/samples/mtosi_1.1/alarm_retrieval/build/async_binding.xml -verbose -d /local/work/temp/apache-cxf-2.0-incubator-SNAPSHOT/samples/mtosi_1.1/alarm_retrieval/build/src /local/work/temp/apache-cxf-2.0-incubator-SNAPSHOT/samples/mtosi_1.1/wsdl/transport/http/FaultServiceSOAP_HTTP.wsdl
    [java] wsdl2java - 2.0-incubator-SNAPSHOT
    [java] WSDLToJava Error : java.lang.NullPointerException
    [java] org.apache.cxf.tools.common.ToolException: java.lang.NullPointerException
    [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:223)
    [java]     at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
    [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
    [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
    [java] Caused by: java.lang.NullPointerException
    [java]     at org.apache.cxf.binding.soap.SoapBindingFactory.addMessageFromBinding(SoapBindingFactory.java:388)
    [java]     at org.apache.cxf.binding.AbstractBindingFactory.copyExtensors(AbstractBindingFactory.java:146)
    [java]     at org.apache.cxf.binding.AbstractBindingFactory.initializeBindingInfo(AbstractBindingFactory.java:130)
    [java]     at org.apache.cxf.binding.soap.SoapBindingFactory.createBindingInfo(SoapBindingFactory.java:416)
    [java]     at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildBinding(WSDLServiceBuilder.java:481)
    [java]     at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:262)
    [java]     at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:155)
    [java]     at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:142)
    [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:142)
    [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:215) 
","14/Jun/07 01:10;blin;patch has been applied, all samples works fine now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple Http Destinations cannot use the same address when using HTTPS.,CXF-706,12371048,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,njiang,polar,polar,06/Jun/07 15:11,29/Aug/07 02:02,14/Mar/19 02:28,14/Jun/07 01:04,,,,,,,,2.0.1,,Configuration,Core,Transports,,,0,"Multiple Http Destinations cannot be configured to use the same port number if using HTTPS.
This is because the destination currently configures the port, so competing destinations may
try to reconfigure the port, which is not a good thing for security, (unknowingly would change
your credentials). Therefore the system prohibits a reconfiguration, even if it would be reconfigured
to be the same, because that is hard to figure out.

The fix will separate port configuration from http destination configuration.",CXF Java,,,,,,,,,,,,,,,,07/Jun/07 03:40;polar;CXF-706.patch;https://issues.apache.org/jira/secure/attachment/12359136/CXF-706.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-14 01:04:51.32,,,no_permission,,,,,,,,,,,,,111547,,,Thu Jun 14 01:04:51 UTC 2007,,,,,,0|i0syyv:,167142,,,,,,,,07/Jun/07 03:40;polar;This patch resolves this issue.,"14/Jun/07 01:04;blin;Patch applied by willem on June 7, rev 545115",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl can't handle interface without package,CXF-705,12371011,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,ema,alex.chen@iona.com,alex.chen@iona.com,06/Jun/07 09:15,29/Aug/07 18:10,14/Mar/19 02:28,11/Jun/07 04:55,,,,,,,,2.0,,Tooling,,,,,0,"How to reproduce:
- create a simple interface without package defined, I attach it
- run command like:  java2wsdl -verbose Hello
- I get exceptions like:
Error : null

java.lang.NullPointerException
        at org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.Wrapper.getPackageName(Wrapper.java:135)
        at org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.RequestWrapper.getWrapperBeanClass(RequestWrapper.java:100)
        at org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.Wrapper.getJavaClass(Wrapper.java:114)
        at org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.Wrapper.buildWrapperBeanClass(Wrapper.java:121)
        at org.apache.cxf.tools.java2wsdl.generator.wsdl11.WrapperBeanGenerator.generateBeanClasses(WrapperBeanGenerator.java:41)
        at org.apache.cxf.tools.java2wsdl.generator.wsdl11.BeanGenerator.generate(BeanGenerator.java:54)
        at org.apache.cxf.tools.java2wsdl.generator.wsdl11.BeanGenerator.generate(BeanGenerator.java:34)
        at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor.generate(JavaToProcessor.java:121)
        at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor.process(JavaToProcessor.java:90)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDLContainer.execute(JavaToWSDLContainer.java:59)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.run(JavaToWSDL.java:74)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.main(JavaToWSDL.java:42)
Error : null

org.apache.cxf.tools.common.ToolException
        at org.apache.cxf.tools.java2wsdl.JavaToWSDLContainer.execute(JavaToWSDLContainer.java:76)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.run(JavaToWSDL.java:74)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.main(JavaToWSDL.java:42)
",RHAS 4.0,,,,,,,,,,,,,,,,06/Jun/07 09:15;alex.chen@iona.com;Hello.java;https://issues.apache.org/jira/secure/attachment/12359059/Hello.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111546,,,Wed Jun 06 09:18:52 UTC 2007,,,,,,0|i0uygn:,178724,,,,,,,,"06/Jun/07 09:18;alex.chen@iona.com;java2wsdl should create a default namespace for me if interface hasn't package defined like:

http://org.apache/cxf/Hello",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl error using a simple interface,CXF-704,12371010,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,alex.chen@iona.com,alex.chen@iona.com,06/Jun/07 09:11,29/Aug/07 18:10,14/Mar/19 02:28,11/Jun/07 04:53,2.0-RC,,,,,,,2.0,,Tooling,,,,,0,"how to reproduce:

- using a simple interface, I attach it
- run command like:  java2wsdl -cp . -classdir . demo.Hello
- get error like:
Jun 6, 2007 4:46:51 PM org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.Wrapper getWrapperClass
WARNING: Can not load wrapper class demo.jaxws.SayHi, please check the @RequestWrapper or @ResponseWrapper and also check the class is in your classpath
Jun 6, 2007 4:46:51 PM org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.Wrapper getWrapperClass
WARNING: Can not load wrapper class demo.jaxws.SayHiResponse, please check the @RequestWrapper or @ResponseWrapper and also check the class is in your classpath
- actually, those two classes have been created",RHAS 4.0,,,,,,,,,,,,,,,,06/Jun/07 09:12;alex.chen@iona.com;Hello.java;https://issues.apache.org/jira/secure/attachment/12359057/Hello.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111545,,,2007-06-06 09:11:16.0,,,,,,0|i140nr:,231569,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MTOM sample doesn't seem right,CXF-700,12370901,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,blin,blin,05/Jun/07 09:36,29/Aug/07 02:04,14/Mar/19 02:28,12/Jun/07 09:10,2.0-RC,,,,,,,2.0,,,,,,,0,"The sample does not annotate schema type to let JAXB know about the possible candidate field for MTOM optimization. If one add that annotate to schema type, then the sample doesn't compile at all. Please refer to MToM user guide here: http://cwiki.apache.org/CXF20DOC/mtom-attachments.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-12 07:47:27.011,,,no_permission,,,,,,,,,,,,,111541,,,Tue Jun 12 07:47:27 UTC 2007,,,,,,0|i1a9yn:,268080,,,,,,,,"12/Jun/07 07:47;ffang;right, this sample didn't show how mtom is enabled, will fix it",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Agis ClassCastException: ,CXF-697,12370639,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,tog,tog,31/May/07 20:45,05/Jun/07 15:51,14/Mar/19 02:28,05/Jun/07 15:51,2.0-RC,,,,,,,2.0,,,,,,,0,Got a  java.lang.ClassCastException: org.apache.cxf.service.model.BindingInfo when using a Dynamic client (Aegis Binding),Linux Debian - Java 1.5- CXF trunk,,,,,,,,,,,,,,,,31/May/07 20:47;tog;cxftest.tgz;https://issues.apache.org/jira/secure/attachment/12358653/cxftest.tgz,04/Jun/07 03:01;ffang;cxftestnew.tar;https://issues.apache.org/jira/secure/attachment/12358795/cxftestnew.tar,01/Jun/07 10:14;ffang;cxftestwithaegis.tar;https://issues.apache.org/jira/secure/attachment/12358708/cxftestwithaegis.tar,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-06-01 05:30:12.087,,,no_permission,,,,,,,,,,,,,111538,,,Tue Jun 05 15:51:26 UTC 2007,,,,,,0|i1a9zb:,268083,,,,,,,,31/May/07 20:47;tog;the eclipse project showing the problem,"01/Jun/07 05:30;ffang;The ClassCastException was fixed by Dan Kulp days ago

See the code after change
        if (b instanceof SoapBindingInfo) {
            SoapBindingInfo sbi = (SoapBindingInfo)b;
            transportURI = sbi.getTransportURI();
        }
Before do class exception, check the type first
Would you please test with the latest trunk

Thanks ","01/Jun/07 08:09;tog;
Yes but I have now this, What am I doing wrong ?
Cheers

lleon@oggy:~/projects/groovy/cplx_groovyws/client$ groovy Client.groovy
log4j:WARN No appenders could be found for logger (org.apache.cxf.bus.spring.BusApplicationContext).
log4j:WARN Please initialize the log4j system properly.
1 juin 2007 09:06:08 org.apache.cxf.bus.spring.BusApplicationContext getConfigResources
INFO: Could not find the configuration file cxf.xml on the classpath.
java.lang.UnsupportedOperationException: Only document-style SOAP 1.1 http are supported for auto-selection of endpoint; none were found.
        at org.apache.cxf.endpoint.ClientImpl.findEndpoint(ClientImpl.java:162)
        at org.apache.cxf.endpoint.ClientImpl.<init>(ClientImpl.java:106)
        at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:150)
        at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:136)
","01/Jun/07 10:14;ffang;I realize your testcase may have problem, if you use DynamicClientFactory to create client, then you use jaxb datebinding.
If you want to use Aegis databinding,
you should follow the code to setup client in our wiki.

http://cwiki.apache.org/confluence/display/CXF20DOC/Aegis+Databinding

I just change your testcase slightly to use aegis databinding and it runs ok.
Please see the cxftestwithaegis.tar

","04/Jun/07 00:27;tog;Hi Freeman,
I was a bit puzzled by your comment but got the confirmation. In a previous version, it was definitely possible to have Aegis on the server side and then use the dynamic client.
Something has been broken there ?

Do you want to open a different JIRA for this ?

Cheers
Tog","04/Jun/07 03:01;ffang;Hi Tog,

Yes, you can have aegis databinding on the server side and use the dynamic client on the client side, but when you use dynamic client, the client will use jaxb databinding. Which means your client side and server side use different databinding, I am not sure if this is suitable for all case regarding complex object marshall/unmarshall. Maybe we need add api to specify databinding when use dynamic client.

Anyway, finally I get your demo working, as you wish, have aegis databinding on the server side and use the dynamic client on the client side.
But I have to extract interface(BookServiceIntf) for BookService, and use Thread.currentThread().getContextClassLoader() replace Thread.currentThread().getClass().getClassLoader() to create dynamic client.

Please see the cxftestnew.tar and play it with the latest trunk

Cheers

Freeman
","05/Jun/07 15:51;dandiep;Yeah, I just took a look at this and I noticed the same things freeman did.
1. You were passing in a null classloader. I changed the code to this and it worked:

ClassLoader cl = Thread.currentThread().getContextClassLoader();
Client client = dcf.createClient(""http://localhost:8080/service?wsdl"",cl);
...
Object book = cl.loadClass(""com.acme.test.Book"").newInstance();

2. You're methods on BookService were package protected, not public. CXF ignores package protected methods. I'm sure this was just a cut/paste error from Groovy though :-)

So I'm going to close this issue unless you have other issues...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Servlet systest need to add context path to simulate the real environment,CXF-695,12370512,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,30/May/07 09:26,29/Aug/07 02:04,14/Mar/19 02:28,30/May/07 09:37,2.0-RC,,,,,,,2.0,,,,,,,0,"Current CXF servlet systests don't set the context path, so it can't find the restful http-binding's bug like below:

It is when the servlet is deployed in the root
context ""/"" - but otherwise, handleMessage() in DispatchInterceptor doesn't
do the right thing on lines 54-59, so  an exception is thrown about an
invalid verb/method combination.

Specifically, something like:

/myContext/xml/messages/1

fails, because /myContext is not taken out of the picture first, before
comparing ""path"" from the EndpointInfo (""/xml"") to the address (request
URI).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111536,,,Wed May 30 09:37:37 UTC 2007,,,,,,0|i1a9zr:,268085,,,,,,,,30/May/07 09:37;njiang;this issue has been resolved in the revision 542785,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxWs Client side handler execution,CXF-694,12370445,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,bharathganesh,bharathganesh,29/May/07 13:12,29/Aug/07 02:04,14/Mar/19 02:28,18/Jun/07 19:06,2.0-RC,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"While a JAX-WS client side handler returns false for an inbound message, the next handler in the chain should not be invoked. 

Assume the handler execution for an inbound message is H3 -> H2 -> H1 on the client side, if H2 returns false, H1 should not be invoked. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-31 08:08:31.882,,,no_permission,,,,,,,,,,,,,111535,,,Thu May 31 08:08:31 UTC 2007,,,,,,0|i1a9zz:,268086,,,,,,,,"31/May/07 08:08;jliu;Hasnt this been fixed already? see test case: HandlerInvocationTest.testLogicalHandlerHandleMessageReturnFalseClientInBound()

If this is not the case, could you please provide a test case? ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.xml.ws.handler.PortInfo getBindingID() incorrect,CXF-693,12370432,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,gawor@mcs.anl.gov,bharathganesh,bharathganesh,29/May/07 08:55,29/Aug/07 02:04,14/Mar/19 02:28,18/Jun/07 19:06,2.0-RC,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"The binding id returned in javax.xml.ws.handler.PortInfo getBindingID() method is incorrect. 
initializePorts() in ServiceImpl uses EndpointInfo.getTransportId() to set the bindingId. Even  ei.getBinding().getBindingId() is broken. 
Ideally ei.getBinding().getBindingId() should return the proper binding id. 
The stack trace of bindingID initialization is here: 
java.lang.Exception: Stack trace
	at java.lang.Thread.dumpStack(Thread.java:1158)
	at org.apache.cxf.service.model.BindingInfo.<init>(BindingInfo.java:45)
	at org.apache.cxf.binding.soap.model.SoapBindingInfo.<init>(SoapBindingInfo.java:45)
	at org.apache.cxf.binding.soap.model.SoapBindingInfo.<init>(SoapBindingInfo.java:40)
	at org.apache.cxf.binding.soap.SoapBindingFactory.createBindingInfo(SoapBindingFactory.java:252)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildBinding(WSDLServiceBuilder.java:471)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:262)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildServices(WSDLServiceBuilder.java:159)
	at org.apache.cxf.wsdl11.WSDLServiceFactory.create(WSDLServiceFactory.java:117)
	at org.apache.cxf.jaxws.ServiceImpl.initializePorts(ServiceImpl.java:108)
	at org.apache.cxf.jaxws.ServiceImpl.<init>(ServiceImpl.java:99)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createServiceDelegate(ProviderImpl.java:55)
	at javax.xml.ws.Service.<init>(Service.java:57)
                     .....(Cut shorted)
JAXWS TCK tests fail becuse of this. 

The bindingId should be one among these: 
""http://schemas.xmlsoap.org/wsdl/soap/http"";  
""http://www.w3.org/2003/05/soap/bindings/HTTP/"";
""http://schemas.xmlsoap.org/wsdl/soap/http?mtom=true"";
""http://www.w3.org/2003/05/soap/bindings/HTTP/?mtom=true"";

Currently the biding id is none of these. 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-31 09:04:14.736,,,no_permission,,,,,,,,,,,,,111534,,,Thu May 31 09:04:14 UTC 2007,,,,,,0|i1aa07:,268087,,,,,,,,31/May/07 09:04;jliu;I believe this one is working. See test case: org.apache.cxf.systest.handlers.HandlerInvocationTest.testAddHandlerThroughHandlerResolverClientSide(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
durable subscriptions is not set in JMS transport,CXF-690,12370258,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,25/May/07 10:52,29/Aug/07 02:04,14/Mar/19 02:28,28/May/07 07:48,2.0-RC,,,,,,,2.0,,Transports,,,,,0,"I started working on cxf jms systems against Sonic MQ and have a question about JMS durable subscription.

 

In the system test jms_test.wsdl file, a durable subscriber name is defined.

 

    <service name=""HelloWorldService"">

           <port binding=""tns:HelloWorldPortBinding"" name=""HelloWorldPort"">

               <jms:address

                   jndiConnectionFactoryName=""ConnectionFactory""

                   jndiDestinationName=""dynamicQueues/test.jmstransport.text"">

                   <jms:JMSNamingProperty name=""java.naming.factory.initial"" value=""org.apache.activemq.jndi.ActiveMQInitialContextFactory""/>

                   <jms:JMSNamingProperty name=""java.naming.provider.url"" value=""tcp://localhost:61500""/>

               </jms:address>

           

               <jms:server durableSubscriberName=""CXF_subscriber""/>

           </port>

</service>
 

It seems a durable subscription will be created by client, according to the line 469 in the file \rt\transports\jms\src\main\java\org\apache\cxf\transport\jms\JMSSessionFactory.java


When I ran the test with this service, the test ran fine, but I didn't see any created durable subscriptions from Sonic management console. Can you view durable subscriptions when testing ActiveMQ?  

The error was reproduced in ActiveMQ. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111531,,,Mon May 28 07:48:15 UTC 2007,,,,,,0|i140pb:,231576,,,,,,,,"28/May/07 07:48;njiang;CXF-jms-transport only support the topic pub&sub mode with the durable subscription.
The upper configuration will not setup the durable subscription in CXF even the server configured with the durableSubscirberName.

Added the unit tests in cxf-rt-transports-jms to show how to setup the durable subscription.
please see the revision 542137'  testDurableSubscriber() in JMSDestinationTest.

NOTE:
First you should define a the destinationStyle in address element, then you need to setup the durableSubscriptionClientId in server configuration which is loaded by spring.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Translate DataHandlers into Images, OctetStreams, etc and vis a versa where appropriate.",CXF-689,12370255,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,25/May/07 10:27,29/Aug/07 18:09,14/Mar/19 02:28,28/May/07 02:46,,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"See test case: ClientServerSwaTest.testSwaTypes()

Exception we got is as below:

Caused by: java.lang.ClassCastException: javax.xml.transform.stream.StreamSource

        at org.apache.cxf.jaxws.interceptors.SwAOutInterceptor.handleMessage(SwA
OutInterceptor.java:107)
        at org.apache.cxf.jaxws.interceptors.SwAOutInterceptor.handleMessage(SwA
OutInterceptor.java:48)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseIntercept
orChain.java:147)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:249)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:200)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:13
4)
        ... 26 more

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111530,,,2007-05-25 10:27:26.0,,,,,,0|i140p3:,231575,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP over HTTP messages have two Content-Type headers and SOAP action as a separate header,CXF-687,12370203,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,seh,seh,24/May/07 19:41,05/Oct/07 16:46,14/Mar/19 02:28,28/Aug/07 18:14,2.0,2.0.1,,,,,,2.0.2,,Soap Binding,,,,,0,"Per the discussion in issue CXF-628, if I use SOAP 1.2 over HTTP, CXF produces two Content-Type HTTP headers:

  Content-Type: application/soap+xml; charset=UTF-8
  action: ""http://host/my-interface-service/some-operationRequest""
  Content-Type: text/xml

There should only be one Content-Type header -- the first one -- and the SOAP action should be a parameter to that header, not a separate header, as described in the SOAP 1.2 adjunct section A.3 on the ""application/soap+xml"" media type and its optional ""action"" parameter:

  http://www.w3.org/TR/2003/REC-soap12-part2-20030624/#ietf-action",NA,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-18 19:27:37.657,,,no_permission,,,,,,,,,,,,,111528,,,Mon Aug 27 21:04:50 UTC 2007,,,,,,0|i0uylz:,178748,,,,,,,,"18/Jun/07 19:27;dandiep;I'm trying to reproduce this but can't. Can you give us some more information?
- What version of CXF are you using? 
- Have you tried a SNAPSHOT version?
- Is this with the Jetty transport? Servlet transport? Or on the client side of things?
Thanks.","18/Jun/07 20:36;seh;I'm seeing this emanating from a CXF client built against the CXF 2.0-incubator-SNAPSHOT version, looking at what's captured in TCPMon.

My client is configured via a jaxws:client element, adding an ""addressingPolicy"" feature. Elsewhere in the same XML file, I have an http:conduit element with the following content:

   <http:conduit name=""{http://my/wsdl}my-soap-endpoint.http-conduit"">
      <http:client AllowChunking=""false""/>
   </http:conduit>

Finally, there's an element controlling use of WS-Addressing:

<wsp:Policy wsu:Id=""addressingPolicy""
               xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
               xmlns:wsp=""http://www.w3.org/2006/07/ws-policy""
               xsi:schemaLocation=""http://www.w3.org/2006/07/ws-policy http://www.w3.org/2006/07/ws-policy.xsd"">
      <wsam:Addressing xmlns:wsam=""http://www.w3.org/2007/02/addressing/metadata""
                       wsp:Optional=""true"">
         <wsp:Policy/>
      </wsam:Addressing>
   </wsp:Policy>

Does any of that look suspicious?","18/Jun/07 20:38;seh;My client project does depend on the cxf-rt-transports-http-jetty artifact, as I had trouble in the past when I tried to remove this dependency. However, I'm not sure if I'm actually using that transport.","27/Aug/07 21:04;dkulp;
The PolicyUtils is blindly copying the ClientPolicy.getContentType() stuff from one to another without checking the isSetContentType().  Thus, there is always a ""text/xml"" content type.

The HTTPConduit is calling request.setHeader(""Content-Type"", ..) with that value instead of calling message.put(""Content-Type"", ...)  so it can be merged with the charset and stuff later.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM: Inappropriate exception handling in RM Servant,CXF-685,12370168,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,asmyth,asmyth,24/May/07 14:32,01/Feb/10 19:02,14/Mar/19 02:28,12/Jan/10 21:38,,,,,,,,2.1.9,2.2.6,WS-* Components,,,,,1,"Need to throw Fault, or SoapFault, as in AbstractRMInterceptor.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111526,,,2007-05-24 14:32:17.0,,,,,,0|i14e2f:,233742,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hello World sample is broken,CXF-684,12370162,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,dpicco,dpicco,24/May/07 14:00,29/Aug/07 18:10,14/Mar/19 02:28,25/May/07 02:32,,,,,,,,2.0,,Build system,,,,,0,"Revision 539008

Performing an 'ant build' on the hello_world sample results in this exception:

Buildfile: build.xml

maybe.generate.code:

generate.code:
     [echo] Generating code using wsdl2java...
     [java] Loading FrontEnd jaxws ...
     [java] Loading DataBinding jaxb ...
     [java] wsdl2java -verbose -d C:\dev\cxf-2.0-incubator-SNAPSHOT\samples\hello_world\build\src C:\dev\cxf-2.0-incubator-SNAPSHOT\samples\hello_world/wsdl/hello_world.wsdl
     [java] wsdl2java - 2.0-incubator-SNAPSHOT

     [java] May 24, 2007 11:28:41 AM org.apache.cxf.bus.spring.SpringBusFactory createBus
     [java] WARNING: Failed to create application context.
     [java] org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java] Caused by: org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java] 	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
     [java] 	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:316)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:429)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3185)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processOneAttribute(XMLSchemaValidator.java:2799)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2735)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2094)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1693)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
     [java] 	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
     [java] 	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
     [java] 	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
     [java] 	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
     [java] 	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)
     [java] 	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
     [java] 	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:351)
     [java] 	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
     [java] 	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)
     [java] 	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:131)
     [java] 	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:108)
     [java] 	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:79)
     [java] 	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:100)
     [java] 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:313)
     [java] 	at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:69)
     [java] 	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:81)
     [java] 	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:66)
     [java] 	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:53)
     [java] 	at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:68)
     [java] 	at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:57)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.getBus(WSDLToJavaContainer.java:93)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:131)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:213)
     [java] 	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)

     [java] WSDLToJava Error : java.lang.RuntimeException: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.

     [java] org.apache.cxf.tools.common.ToolException: java.lang.RuntimeException: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:221)
     [java] 	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
     [java] Caused by: java.lang.RuntimeException: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java] 	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:84)
     [java] 	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:66)
     [java] 	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:53)
     [java] 	at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:68)
     [java] 	at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:57)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.getBus(WSDLToJavaContainer.java:93)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:131)
     [java] 	at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:213)
     [java] 	... 3 more
     [java] Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java] 	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:359)
     [java] 	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
     [java] 	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)
     [java] 	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:131)
     [java] 	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:108)
     [java] 	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:79)
     [java] 	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:100)
     [java] 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:313)
     [java] 	at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:69)
     [java] 	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:81)
     [java] 	... 10 more
     [java] Caused by: org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java] 	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
     [java] 	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:316)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:429)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3185)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processOneAttribute(XMLSchemaValidator.java:2799)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2735)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2094)
     [java] 	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1693)
     [java] 	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
     [java] 	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
     [java] 	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
     [java] 	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
     [java] 	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
     [java] 	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)
     [java] 	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
     [java] 	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:351)
     [java] 	... 19 more",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-25 02:16:20.256,,,no_permission,,,,,,,,,,,,,111525,,,Fri May 25 02:29:38 UTC 2007,,,,,,0|i1aa13:,268091,,,,,,,,"25/May/07 02:16;ffang;Did you build the kit from the lastest trunk? I just fix it two days ago.
Anyway, I will verify it.","25/May/07 02:29;ffang;This problem is get fixed, would you please build kit from the lastest trunk and test again
Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The targetNamespace in WebParam annotaion for a wrapped method is not valid,CXF-682,12370123,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,24/May/07 08:59,29/Aug/07 18:10,14/Mar/19 02:28,01/Jun/07 02:46,,,,,,,,2.0,,,,,,,0,"To conform the jsr181, the targetnamespace value in @WebParam and @WebResult  annotated for a  wrapped method should be empty value .",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111523,,,2007-05-24 08:59:40.0,,,,,,0|i146mf:,232536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAPHandlers are not calling Handler.close(),CXF-679,12370104,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jgenender,jgenender,24/May/07 00:13,29/Aug/07 18:10,14/Mar/19 02:28,24/May/07 04:07,2.0-RC,,,,,,,2.0,,Soap Binding,,,,,0,"SOAPHandlers are not calling Handler.close() in certain conditions.  The onComplete() called are not always getting called.

Patch attached.",,,,,,,,,,,,,,,,,24/May/07 00:15;jgenender;CXF-679.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12358045/CXF-679.jgenender.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-24 04:07:26.959,,,no_permission,,,,,,,,,,,,,111520,,,Thu May 24 04:07:26 UTC 2007,,,,,,0|i1aa1j:,268093,,,,,,,,"24/May/07 04:07;gawor@mcs.anl.gov;Patch committed (revision 541147). Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong types are generated for SwA,CXF-677,12370068,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,dandiep,dandiep,23/May/07 16:10,29/Aug/07 02:04,14/Mar/19 02:28,29/May/07 05:18,2.0-RC,,,,,,,2.0,,,,,,,0,"For the attached WSDL, CXF generates the following:


    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebMethod
    public void echoDataWithEnableMIMEContent(
        @WebParam(targetNamespace = ""http://example.org/mime/data"", partName = ""body"", name = ""mimeBody"")
        java.lang.String body,
        @WebParam(mode = Mode.INOUT, partName = ""data"", name = ""data"")
        javax.xml.ws.Holder<java.awt.Image> data
    );

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebMethod
    public void echoData(
        @WebParam(targetNamespace = ""http://example.org/mime/data"", partName = ""body"", name = ""body"")
        java.lang.String body,
        @WebParam(mode = Mode.INOUT, partName = ""data"", name = ""data"")
        javax.xml.ws.Holder<java.awt.Image> data
    );

The JAX-WS generates this:


    /**
     * 
     * @param data
     * @param body
     */
    @WebMethod
    public void echoData(
        @WebParam(name = ""body"", targetNamespace = ""http://example.org/mime/data"", partName = ""body"")
        String body,
        @WebParam(name = ""data"", targetNamespace = """", mode = Mode.INOUT, partName = ""data"")
        Holder<byte[]> data);

    /**
     * 
     * @param data
     * @param body
     */
    @WebMethod
    public void echoDataWithEnableMIMEContent(
        @WebParam(name = ""mimeBody"", targetNamespace = ""http://example.org/mime/data"", partName = ""body"")
        String body,
        @WebParam(name = ""data"", targetNamespace = """", mode = Mode.INOUT, partName = ""data"")
        Holder<Image> data);


The echoData() should have a byte[] array not an Image.",,,,,,,,,,,,,,,,,23/May/07 16:11;dandiep;custom-server.xml;https://issues.apache.org/jira/secure/attachment/12358008/custom-server.xml,23/May/07 16:10;dandiep;hello.wsdl;https://issues.apache.org/jira/secure/attachment/12358007/hello.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111518,,,Wed May 23 16:11:06 UTC 2007,,,,,,0|i140ov:,231574,,,,,,,,"23/May/07 16:10;dandiep;NOTE: This attachment is from the JAX-WS RI, and can NOT be included inside the CXF sources.","23/May/07 16:11;dandiep;NOTE: This attachment is from the JAX-WS RI, and can NOT be included inside the CXF sources.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPS sample failing,CXF-672,12370013,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,blin,blin,23/May/07 02:46,29/Aug/07 02:04,14/Mar/19 02:28,25/May/07 07:41,2.0,,,,,,,2.0,,Build system,,,,,0,"running samples/hellow_world_https server throws following errors:
build:

server:
     [java] The server's security configuration will be taken from server.xml using the bean name : ""{http://apache.org/hello_world_soap_http}GreeterImplPort.http-destination"".

     [java] Starting Server
     [java] May 23, 2007 10:44:42 AM org.apache.cxf.bus.spring.SpringBusFactory createBus
     [java] WARNING: Failed to create application context.
     [java] org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 37 in XML document from class path resource [server.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-complex-type.2.4.a: Invalid content was found starting with element 'sec:CiphersuiteFilters'. One of '{""http://cxf.apache.org/configuration/security"":TrustStoreType, ""http://cxf.apache.org/configuration/security"":TrustStoreAlgorithm, ""http://cxf.apache.org/configuration/security"":SecureSocketProtocol, ""http://cxf.apache.org/configuration/security"":SessionCaching, ""http://cxf.apache.org/configuration/security"":SessionCacheKey, ""http://cxf.apache.org/configuration/security"":MaxChainLength, ""http://cxf.apache.org/configuration/security"":CertValidator}' is expected.
     [java] Caused by: org.xml.sax.SAXParseException: cvc-complex-type.2.4.a: Invalid content was found starting with element 'sec:CiphersuiteFilters'. One of '{""http://cxf.apache.org/configuration/security"":TrustStoreType, ""http://cxf.apache.org/configuration/security"":TrustStoreAlgorithm, ""http://cxf.apache.org/configuration/security"":SecureSocketProtocol, ""http://cxf.apache.org/configuration/security"":SessionCaching, ""http://cxf.apache.org/configuration/security"":SessionCacheKey, ""http://cxf.apache.org/configuration/security"":MaxChainLength, ""http://cxf.apache.org/configuration/security"":CertValidator}' is expected.
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:316)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:429)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3185)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1831)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1693)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
     [java]     at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
     [java]     at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)
     [java]     at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:351)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)
     [java]     at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:131)
     [java]     at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:108)
     [java]     at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:79)
     [java]     at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:100)
     [java]     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:313)
     [java]     at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:69)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:81)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:66)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:53)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:68)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:57)
     [java]     at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:97)
     [java]     at org.apache.cxf.jaxws.spi.ProviderImpl.createEndpoint(ProviderImpl.java:63)
     [java]     at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:73)
     [java]     at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
     [java]     at demo.hw_https.server.Server.<init>(Server.java:31)
     [java]     at demo.hw_https.server.Server.main(Server.java:40)
     [java] Exception in thread ""main"" java.lang.RuntimeException: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 37 in XML document from class path resource [server.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-complex-type.2.4.a: Invalid content was found starting with element 'sec:CiphersuiteFilters'. One of '{""http://cxf.apache.org/configuration/security"":TrustStoreType, ""http://cxf.apache.org/configuration/security"":TrustStoreAlgorithm, ""http://cxf.apache.org/configuration/security"":SecureSocketProtocol, ""http://cxf.apache.org/configuration/security"":SessionCaching, ""http://cxf.apache.org/configuration/security"":SessionCacheKey, ""http://cxf.apache.org/configuration/security"":MaxChainLength, ""http://cxf.apache.org/configuration/security"":CertValidator}' is expected.
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:84)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:66)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:53)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:68)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:57)
     [java]     at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:97)
     [java]     at org.apache.cxf.jaxws.spi.ProviderImpl.createEndpoint(ProviderImpl.java:63)
     [java]     at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:73)
     [java]     at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
     [java]     at demo.hw_https.server.Server.<init>(Server.java:31)
     [java]     at demo.hw_https.server.Server.main(Server.java:40)
     [java] Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 37 in XML document from class path resource [server.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-complex-type.2.4.a: Invalid content was found starting with element 'sec:CiphersuiteFilters'. One of '{""http://cxf.apache.org/configuration/security"":TrustStoreType, ""http://cxf.apache.org/configuration/security"":TrustStoreAlgorithm, ""http://cxf.apache.org/configuration/security"":SecureSocketProtocol, ""http://cxf.apache.org/configuration/security"":SessionCaching, ""http://cxf.apache.org/configuration/security"":SessionCacheKey, ""http://cxf.apache.org/configuration/security"":MaxChainLength, ""http://cxf.apache.org/configuration/security"":CertValidator}' is expected.
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:359)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)
     [java]     at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:131)
     [java]     at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:108)
     [java]     at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:79)
     [java]     at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:100)
     [java]     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:313)
     [java]     at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:69)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:81)
     [java]     ... 10 more
     [java] Caused by: org.xml.sax.SAXParseException: cvc-complex-type.2.4.a: Invalid content was found starting with element 'sec:CiphersuiteFilters'. One of '{""http://cxf.apache.org/configuration/security"":TrustStoreType, ""http://cxf.apache.org/configuration/security"":TrustStoreAlgorithm, ""http://cxf.apache.org/configuration/security"":SecureSocketProtocol, ""http://cxf.apache.org/configuration/security"":SessionCaching, ""http://cxf.apache.org/configuration/security"":SessionCacheKey, ""http://cxf.apache.org/configuration/security"":MaxChainLength, ""http://cxf.apache.org/configuration/security"":CertValidator}' is expected.
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:316)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:429)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3185)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1831)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElem
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-25 07:41:37.46,,,no_permission,,,,,,,,,,,,,111514,,,Fri May 25 07:41:37 UTC 2007,,,,,,0|i1a89j:,267805,,,,,,,,25/May/07 07:41;njiang;this patch has been applied in revision 541568,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validator flags valid rpc/lit operations as invalid,CXF-670,12369972,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,dkulp,dkulp,22/May/07 18:36,29/Aug/07 02:03,14/Mar/19 02:28,13/Jun/07 07:33,2.0-RC,,,,,,,2.0,,,,,,,0,"
If and RPC lit operation has soap headers, the validator complains about:
WSDLValidator Error : An rpc-literal binding in a DESCRIPTION MUST refer, in its soapbind:body element(s), only to wsdl:part element(s) that have been defined using the type attribute.

However, it's valid to have parts in the message that are of type ""element"" if they are headers. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111512,,,2007-05-22 18:36:54.0,,,,,,0|i1a89r:,267806,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When SEI's and IMPLS have different namespaces, we don't generate the correct WSDL(s)",CXF-669,12369958,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,dkulp,dkulp,22/May/07 16:15,29/Aug/07 02:03,14/Mar/19 02:28,24/May/07 10:10,2.0-RC,,,,,,,2.0,,Tooling,,,,,0,"
If the IMPL's WebService annotation specifies a different targetNamespace than the SEI interface, we don't generate a valid wsdl.   We need to generate two wsdls, one for the SEI interface and another for the service (which then imports the one for the SEI).



package com.foo;

import javax.jws.WebParam;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding.Style;
import javax.jws.soap.SOAPBinding;
import javax.jws.WebMethod;
import javax.jws.WebResult;

@WebService(targetNamespace = ""http://foo.com/HelloWorld"", name = ""HelloWorld"")
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface Hello {

    @WebResult(partName = ""out"", name = ""out"")
    @WebMethod
    public String echoFoo(
                @WebParam(partName = ""in"", name = ""in"")
                String s);
}




package com.foo;

import javax.jws.WebService;

@WebService(serviceName = ""HelloService"", 
            portName = ""HelloPort"", 
            endpointInterface = ""com.foo.Hello"",
            targetNamespace = ""http://foo.com/HelloWorldService"")
public class HelloImpl {

    public String echoFoo(String s) {
        return s;
    }

}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-24 07:54:02.057,,,no_permission,,,,,,,,,,,,,111511,,,Thu May 24 07:54:02 UTC 2007,,,,,,0|i140on:,231573,,,,,,,,"24/May/07 07:54;maomaode;Now it's able to generate two wsdls, but the schema types namespace is not correct,
It should be the namespace of the logical wsdl, but in fact it use the physicals'
Something wrong in the service builder.
Require another commit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
hello world demo doesn't work,CXF-668,12369906,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,22/May/07 03:03,29/Aug/07 18:10,14/Mar/19 02:28,22/May/07 04:09,,,,,,,,2.0,,,,,,,0,"when I try to start hello_world demo server, I get exception when createbus
     [java] May 22, 2007 10:47:13 AM org.apache.cxf.bus.spring.SpringBusFactory createBus
     [java] WARNING: Failed to create application context.
     [java] org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java] Caused by: org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:316)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:429)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3185)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processOneAttribute(XMLSchemaValidator.java:2799)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2735)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2094)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1693)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
     [java]     at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
     [java]     at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)
     [java]     at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:351)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)
     [java]     at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:131)
     [java]     at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:108)
     [java]     at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:79)
     [java]     at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:100)
     [java]     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:313)
     [java]     at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:69)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:81)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:66)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:53)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:68)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:57)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.getBus(WSDLToJavaContainer.java:93)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:131)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:213)
     [java]     at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)

     [java] WSDLToJava Error : java.lang.RuntimeException: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.

     [java] org.apache.cxf.tools.common.ToolException: java.lang.RuntimeException: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:221)
     [java]     at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
     [java] Caused by: java.lang.RuntimeException: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:84)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:66)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:53)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:68)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:57)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.getBus(WSDLToJavaContainer.java:93)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:131)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:213)
     [java]     ... 3 more
     [java] Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from class path resource [cxf.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:359)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)
     [java]     at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:131)
     [java]     at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:108)
     [java]     at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:79)
     [java]     at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:100)
     [java]     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:313)
     [java]     at org.apache.cxf.bus.spring.BusApplicationContext.<init>(BusApplicationContext.java:69)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:81)
     [java]     ... 10 more
     [java] Caused by: org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://apache.org/hello_world_soap_http}SOAPService' is not a valid value for 'NCName'.
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
     [java]     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:316)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:429)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3185)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processOneAttribute(XMLSchemaValidator.java:2799)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2735)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2094)
     [java]     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1693)
     [java]     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
     [java]     at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
     [java]     at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
     [java]     at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)
     [java]     at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
     [java]     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:351)
     [java]     ... 19 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111510,,,Tue May 22 03:55:51 UTC 2007,,,,,,0|i1a89z:,267807,,,,,,,,"22/May/07 03:55;ffang;the error is caused by we open spring validation by default recently.
I will add a way to let demo specify spring validation mode to get it around",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFServlet causes NPE during destroing  when config-location isn't specified,CXF-667,12369889,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,tomeks,tomeks,21/May/07 20:56,29/Aug/07 02:03,14/Mar/19 02:28,21/May/07 21:15,2.0-RC,,,,,,,2.0,,,,,,,0,,,,,,,,,,,,,,,,,,21/May/07 20:58;tomeks;cxf-rt-transports-http.patch;https://issues.apache.org/jira/secure/attachment/12357803/cxf-rt-transports-http.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-21 21:15:13.953,,,no_permission,,,,,,,,,,,,,111509,,,Mon May 21 21:15:13 UTC 2007,,,,,,0|i1a8a7:,267808,,,,,,,,21/May/07 20:58;tomeks;patch attached,21/May/07 21:15;dkulp;patch applied.  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF-servlet doesn't support http-binding,CXF-664,12369817,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,21/May/07 08:10,29/Aug/07 02:03,14/Mar/19 02:28,23/May/07 08:57,2.0-M1,,,,,,,2.0,,Transports,,,,,1,"Start a Service with http-binding support in CXFServlet,  and send a  get request  http://localhost/services/Greeter/greetMe?requestType=hello

CXFServlet retrun 404 error, and output this log

May 21, 2007 3:51:23 PM org.apache.cxf.transport.servlet.ServletController invoke
WARNING: Can't find the the request for http://localhost/services/Greeter/greetMe's Observer 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111506,,,Wed May 23 08:57:30 UTC 2007,,,,,,0|i1a8an:,267810,,,,,,,,23/May/07 08:57;njiang;This issue has been fixed in the revision 540879,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF's spring jaxws syntax doesn't support http-binding,CXF-663,12369815,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,21/May/07 08:05,29/Aug/07 02:03,14/Mar/19 02:28,05/Jun/07 09:33,2.0-RC,,,,,,,2.0,,,,,,,2,"Using jaxws:endpoint, with a bindingUri of http://apache.org/cxf/binding/http and importing the -http-binding.xmlSpring config, no dice. Complains that there's no destination factory for
SOAP (?!?). If I import the -soap.xml Spring config, then I get a ClassCastException for BindingInfo. I've tried changing the order of imports, no dice.

 I am running in a minimal web container (winstone), to minimize container weirdness.

Also - its unclear from the docs if I need to import cxf-servlet.xml or not  (I've tried both, doesn't seem to impact things at the point where I'm getting the exception(s)). ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111505,,,Tue Jun 05 09:33:47 UTC 2007,,,,,,0|i1a8av:,267811,,,,,,,,"05/Jun/07 09:33;njiang;this issue has been resolved in the revision r544431
Here also a example for writing the <jaxws:endpoint
  
  <bean id=""JaxWsServiceFactoryBean"" class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean"">
    <property name=""wrapped"" value=""false""/>
  </bean>

   <jaxws:endpoint id=""restfulServer"" 
              implementor=""org.apache.cxf.customer.bare.CustomerService""
              address=""/services/endpoint/restful""
              bindingUri=""http://apache.org/cxf/binding/http"">              
     <jaxws:serviceFactory> 
         <ref bean=""JaxWsServiceFactoryBean""/>
     </jaxws:serviceFactory> 
  </jaxws:endpoint>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.jaxb.WrapperHelper.getWrappedPart() throws NPE when element type is boolean,CXF-660,12369597,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,wtam,wtam,17/May/07 19:41,29/Aug/07 02:03,14/Mar/19 02:28,17/May/07 21:46,2.0-RC,,,,,,,2.0,,Core,,,,,0,"My method (setIsOK) looks like the following which has two parameters (boolean and int).

    @ResponseWrapper(targetNamespace = ""http://www.xyz.com/myservice"", className = ""com.xyz.myservice.SetIsOKResponse"", localName = ""setIsOKResponse"")
    @RequestWrapper(targetNamespace = ""http://www.xyz.com/myservice"", className = ""com.xyz.myservice.SetIsOK"", localName = ""setIsOK"")
    @WebResult(targetNamespace = ""http://www.xyz.com/myservice"", name = ""Count1"")
    @WebMethod
    public java.lang.Integer setIsOK(
        @WebParam(targetNamespace = ""http://www.xyz.com/myservice"", name = ""Parameter1"")
        boolean parameter1,
        @WebParam(targetNamespace = ""http://www.xyz.com/myservice"", name = ""Parameter2"")
        int parameter2
    ) throws SetIsOKFault_Exception;

When I invoke my method, it fails with a NPE thrown by WrapperHellper.

org.apache.cxf.interceptor.Fault 
at org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor.handleMessage(WrapperClassInInterceptor.java:122) 
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148) 
at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:63) 
at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:200) 
at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:161) 
at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54) 
at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:690) 
at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:191) 
at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139) 
at org.mortbay.jetty.Server.handle(Server.java:285) 
at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:457) 
at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:765) 
at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:710) 
at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:203) 
at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:357) 
at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:329) 
at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475) 
Caused by: java.lang.NullPointerException 
at org.apache.cxf.jaxb.WrapperHelper.getWrappedPart(WrapperHelper.java:194) 
at org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor.handleMessage(WrapperClassInInterceptor.java:115) 
... 16 more",,,,,,,,,,,,,,,,,17/May/07 19:42;wtam;patch.txt;https://issues.apache.org/jira/secure/attachment/12357570/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-17 21:46:38.759,,,no_permission,,,,,,,,,,,,,111502,,,Thu May 17 21:46:38 UTC 2007,,,,,,0|i0syzr:,167146,,,,,,,,17/May/07 19:42;wtam;Please review and apply the attached patch.,"17/May/07 21:46;dkulp;
The patch isn't quite right as something like:

<element name=""foo"" type=""xsd:boolean"" maxOccurs=""10""/>

is mapped to ""getFoo"", not ""isFoo"".     Your patch would just look for isFoo.


However, I updated the provided test case with a boolean[] case and got the tests to pass.   Thanks for the testcase.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Server notifying ServerLifeCycleManager only when InstrumentationManager is available,CXF-659,12369583,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,asmyth,asmyth,17/May/07 17:21,29/Aug/07 02:03,14/Mar/19 02:28,05/Jun/07 07:44,2.0-RC,,,,,,,2.0,,,,,,,0,Surely lifecycle management should work independently. See ServerImpl.initDestination(...),,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-05 07:44:06.766,,,no_permission,,,,,,,,,,,,,111501,,,Tue Jun 05 07:44:06 UTC 2007,,,,,,0|i1a8bb:,267813,,,,,,,,05/Jun/07 07:44;njiang;this issue has been fixed in the revision 544159,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tool dependecies on runtime components,CXF-658,12369580,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,asmyth,asmyth,17/May/07 16:33,29/Aug/07 02:03,14/Mar/19 02:28,30/May/07 03:00,2.0-RC,,,,,,,2.0,,Tooling,,,,,0,"In order to get schema validation working for all of our Spring XML extensions I wanted to make some changes to jms.xsd.
I was a bit surprised to find this schema not in the jms module itself but in cxf- tools-common instead (and jms-context.xsd in cxf-common-schemas). 
An attempt to move it into xf-rt-transports-jms revealed a dependency of cxf-tools-wsdlto on this schema. This dependency is wrong and violates the principle of extensibility.
If tools want to support generation of code/wsdl that involves details of a specific binding or transport they should do so via an interface instead of hardcoding that dependency into the generators.
The concept of customising xjc with plugins is an example of how this can be done: the generator/tool checks on its path for components that are able to generate address elements for a particular address type ""jms"". If the jms module is on the path that is should implement the bit that is needed by the tool,  fine, the tool embeds the result into whatever else it generates.  Otherwise the tool fails with: ""No processor found for adddress type ""jms"" or similar.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-23 03:11:13.912,,,no_permission,,,,,,,,,,,,,111500,,,Mon May 28 06:34:15 UTC 2007,,,,,,0|i1a8bj:,267814,,,,,,,,"23/May/07 03:11;maomaode;This is done in http://svn.apache.org/viewvc?view=rev&rev=520805, 
previous the xsds are in common/schemas and  xsd2java them in rt/transports
This is not ok since tools remove it's own wsdl extensions and want to reuse the wsdldefinitionbuilder in rt/core

Then we moved the xsds into tools/common, and xsd2java them in tools/common, so we don't need to depends on the specific transports/bindings in tools, if there's a new transports/bindings, we don't need to add dependencies in tools, because rt/core will load them automatically. 

So IMO the xsds should be in a common place which can be loaded by rt/core and tools.

I also feel xsds in tools/common is not quite a good place.  I was trying to put them in API module, because i believe the wsdl extensions should also be API doc-ed. I can not remember the exact reason why it can not be placed in API, maybe some xsd2java plugin problems, then i decided to place some into tools/common. and make the jms depend on tools/common.

If we can place them in API, everything will be just fine.

I'm trying to move to API again, is that ok?","24/May/07 08:11;asmyth;This is not about the location of jms.xsd, but about the compile time dependencies of the tools on the classes generated from jms.xsd, as for example in WSDLToServiceProcessor.setAddrElement.

If you defined interfaces like the following:
interface ToolsPlugin {
    String getOptionName();
    String getOptionHelp();
}
interface AddressGenerator extends ToolsPlugin {
    Object createAddress(String[] args);
}
the tool could look up all ToolPlugins on its path (by consulting META-INF/services), and in a first step check if there is a ""taker ""for all of the arguments passes to the tool, otherwise fail.
WSDLToServiceProcessor.setAddrElement then could do something like:

AddressGenerator gen = addressGenerators.get((String)env.get(ToolConstants.CFG_TRANSPORT));
port.addExtensibilityElement(gen.createAddress(....);

That way the tool is extensible and if a new transport is implemented, it is possible to generate addresses for this type of transport by simply putting a corresponding address generator on the path; there will be no need to change the tools code itself.

See http://weblogs.java.net/blog/kohsuke/archive/2005/06/writing_a_plugi.html for how to write a plugin for xjc.","28/May/07 06:34;maomaode;Excellent comment! Andrea,

I'm going to look into this approach.

And the ToolPlugin as metioned in your comment, will go into the API module,
And the jms.xsd will go into the rt/transport/jms module, and also in the jms module will have an sub-class of AddressGenerator, 
And we need a AddressGeneratorFactory to look up the specific addressGenerator based on the tools' argument 'ToolConstants.CFG_TRANSPORT'

correct?

And another thing i want to mention is that it's not just about address, we will need the bindings as well (WSDL2XML for example).

Do you have another name for the ToolPlugin, since we already have a ToolPlugin for frontends/databindings in tools?
Since it's about the Wsdl extensions, how about WSDLExtensibilityPlugin?

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Null Point Exception for Java Frist approach without @WebParam annotation when try to start server,CXF-656,12369470,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,johnson.ma,johnson.ma,16/May/07 08:49,29/Aug/07 02:03,14/Mar/19 02:28,17/May/07 09:09,2.0-RC,,,,,,,2.0,,,,,,,0,"Kit: cxf-distribution-2.0-incubator-20070514.151813-7.tar.gz
--------------------------------------------Java Class ---------------------------------------------------
package com.iona;

import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import javax.jws.WebMethod;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;


@SOAPBinding(style=SOAPBinding.Style.RPC, use=SOAPBinding.Use.LITERAL)
@WebService(name=""Hello"", targetNamespace=""http://iona.com/"")

public interface Hello {
	@WebMethod(operationName=""sayHi"", exclude=false)
	public String sayHi(String value);
}
--------------------------------------------- wsdl ---------------------------------------------------
<?xml version=""1.0"" encoding=""UTF-8""?>
<wsdl:definitions name=""HelloService"" targetNamespace=""http://iona.com/"" xmlns:ns1=""http://iona.com/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
  <wsdl:message name=""sayHi"">
    <wsdl:part name=""arg0"" type=""xsd:string"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name=""sayHiResponse"">
    <wsdl:part name=""return"" type=""xsd:string"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name=""Hello"">
    <wsdl:operation name=""sayHi"">
      <wsdl:input name=""sayHi"" message=""ns1:sayHi"">
    </wsdl:input>
      <wsdl:output name=""sayHiResponse"" message=""ns1:sayHiResponse"">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name=""HelloServiceSoapBinding"" type=""ns1:Hello"">
    <soap:binding style=""rpc"" transport=""http://schemas.xmlsoap.org/soap/http""/>
    <wsdl:operation name=""sayHi"">
      <soap:operation soapAction="""" style=""rpc""/>
      <wsdl:input name=""sayHi"">
        <soap:body use=""literal"" namespace=""http://iona.com/""/>
      </wsdl:input>
      <wsdl:output name=""sayHiResponse"">
        <soap:body use=""literal"" namespace=""http://iona.com/""/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name=""HelloService"">
    <wsdl:port name=""HelloPort"" binding=""ns1:HelloServiceSoapBinding"">
      <soap:address location=""http://localhost:9090/hello""/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>

----------------------------------------------------Error stack -----------------------------------
Exception in thread ""main"" java.lang.NullPointerException
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeParameter(ReflectionServiceFactoryBean.java:771)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeParameter(JaxWsServiceFactoryBean.java:370)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeClassInfo(JaxWsServiceFactoryBean.java:349)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperation(JaxWsServiceFactoryBean.java:180)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeWSDLOperations(ReflectionServiceFactoryBean.java:303)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperations(JaxWsServiceFactoryBean.java:189)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:195)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:246)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:136)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:82)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:84)

-------------------------------- The Reason -------------------------------------------
JaxWsServiceConfiguation.java line 242:
private String getDefaultLocalName(OperationInfo op, Method method, int paramNumber, 
                                       int curSize, String prefix) {
        String paramName = null;        
        if (paramNumber != -1) {
            paramName = prefix + curSize;
        } else {
            paramName = prefix;
        }
        return paramName;
    }

should be changed from ""paramName = prefix + curSize;"" to 
""paramName = prefix + paramNumber;""?",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111499,,,2007-05-16 08:49:31.0,,,,,,0|i1a8br:,267815,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
String[] cann't be input paras or return value when use doc/lit of code first way,CXF-655,12369467,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ffang,ffang,16/May/07 07:56,29/Aug/07 02:02,14/Mar/19 02:28,18/Jul/07 21:53,,,,,,,,2.0.1,,,,,,,0,"I've been experimenting with Java-first services (for a friend  ;)  and
have run into some issues.  I am using the latest version off svn HEAD
(the RC has its own set of issues w/ Java-first services).  I can break
it in several different and interesting ways.

(1) It appears that I cannot have a string array (String[]) as a return
object for a @WebMethod.  If I try, I get the following stacktrace (just
beginning of it):

org.apache.cxf.interceptor.Fault: Marshalling Error: [Ljava.lang.String;
is not known to this context
        at
org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:
149)
...

(2) If I try to use a List<String> as the return object instead, then
there is no exception/fault, but the response does not validate against
the schema.  It adds the following complexType to the WSDL:

<xs:complexType final=""#all"" name=""stringArray"">
  <xs:sequence>
    <xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""item""
nillable=""true"" type=""xs:string""/>
  </xs:sequence>
</xs:complexType>

But that context type is not referred to in the WSDL, as the response
wrapper is still defined like so:

<xsd:element name=""echoStringListResponse""
type=""echoStringListResponse""/>
<xsd:complexType name=""echoStringListResponse"">
  <xsd:sequence>
    <xsd:element maxOccurs=""unbounded"" minOccurs=""0"" name=""return""
type=""xsd:string""/>
  </xsd:sequence>
</xsd:complexType>

But an actual response from the service looks like this:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""
xmlns:mysvc=""http://myco.com/svc"">
  <soap:Body>
    <echoStringListResponse xmlns=""http://myco.com/svc"">
      <ns3:return xmlns:ns3=""http://myco.com/svc""
xmlns:ns2=""http://www.w3.org/2005/08/addressing/wsdl""
xmlns=""http://myco.com/svc/types"">
        <item xmlns=""""
xmlns:ns4=""http://myco.com/svc/types"">hello1</item>
        <item xmlns=""""
xmlns:ns4=""http://myco.com/svc/types"">hello2</item>
        <item xmlns=""""
xmlns:ns4=""http://myco.com/svc/types"">hello3</item>
      </ns3:return>
    </echoStringListResponse>
  </soap:Body>
</soap:Envelope>

As you can probably see, there are a number of things wrong above:
- treats ns3:return like a stringArray type not unbounded xsd:string
- sets the namespace of the item elements to """"
- lots of redundant and unneeded namespace declarations

(3) If I have a service with one operation that returns String[] (like
#1 above) and one that returns List<String> (like #2 above), then #1
ceases to fail in the way it had before.  Instead of throwing an
exception (as in #1), it now fails the same way #2 does-- by returning a
response that is invalid against the schema (and looks like the
stringArray complex type that mysteriously appeared in the WSDL).

(4) Lastly, if an operation has a String array (String[]) as an input
parameter, then you get the following stack trace (beginning only):

java.lang.ClassCastException: java.lang.Class
        at
org.apache.cxf.interceptor.DocLiteralInInterceptor.getPara(DocLiteralInI
nterceptor.java:219)
        at
org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLite
ralInInterceptor.java:121)
...

For those of you who are now wondering, incidentally, using a
List<String> as an input parameter does seem to work correctly (aside
from unneeded namespace declarations).  So this particular problem is
only for String[].

Although I want to convince my friend to use WSDL-first anyway, I'd
rather that the argument NOT be ""CXF can't do java-first right, so you
have to use WSDL-first"".  Because then they might use .NET.  Yikes.

Anyone know of any workarounds or know of something I might be doing
wrong? ",,,,,,,,,,,,,,,,,16/May/07 14:06;cmoesel;arrays_example_service.zip;https://issues.apache.org/jira/secure/attachment/12357478/arrays_example_service.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-16 14:06:09.42,,,no_permission,,,,,,,,,,,,,111498,,,Wed Jul 18 21:53:07 UTC 2007,,,,,,0|i1a8bz:,267816,,,,,,,,16/May/07 14:06;cmoesel;Attaching maven2 project that demonstrates bug.  See readme (in zip) for more details.,"17/Jul/07 21:22;dandiep;Anyone know if this is still an issue?
","17/Jul/07 21:26;dkulp;
Yes.   It's still an issue.   If you run wsdl2java with the -s to generate the wrappers, it will work fine.   It barfs if you don't generate the wrappers.

","18/Jul/07 21:53;dkulp;
Finally fixed in svn revision 557406
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inherited @Resource annotated fields/methods declared not injected,CXF-654,12369359,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,asmyth,asmyth,15/May/07 08:25,29/Aug/07 02:03,14/Mar/19 02:28,18/May/07 12:04,2.0-RC,,,,,,,2.0,,Bus,,,,,0,"Section 2.3 of the spec mandates that @Resource annotated fields declared in superclasses need to be injected also, and regardless of their acces modifiers.
Therefore, even a merge of the fields obtained with getFields, getDeclaredFields is not enough - superclasses need explicitly be checked.
Currently the implementation only in injects @Resource annotated fields in the class itself.
The same goes for methods.  Here it seems the implementation does travel base classes and interfaces, but does so only for public methods (i.e. relies exclusively on getMethods).",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111497,,,2007-05-15 08:25:09.0,,,,,,0|i1a8c7:,267817,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF not processing the BindingProvider.SESSION_MAINTAIN_PROPERTY,CXF-653,12369354,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jgenender,jgenender,15/May/07 06:47,29/Aug/07 02:03,14/Mar/19 02:28,15/May/07 16:37,2.0,,,,,,,2.0,,Transports,,,,,0,"Currently CXF does not process the BindingProvider.SESSION_MAINTAIN_PROPERTY which is required by the spec.

Enclosed patch enables this capability.",,,,,,,,,,,,,,,,,15/May/07 06:48;jgenender;CXF-653.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12357359/CXF-653.jgenender.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111496,,,2007-05-15 06:47:51.0,,,,,,0|i1a8cf:,267818,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
handlers sample doesn't work,CXF-651,12369338,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,15/May/07 03:19,29/Aug/07 18:10,14/Mar/19 02:28,15/May/07 05:42,,,,,,,,2.0,,,,,,,0,"when try ant client in handlers sample, get exception as
client:
     [java] Invoking addNumbers(10, 20)
     [java] LogicalMessageHandler handleMessage called
     [java] May 15, 2007 11:10:39 AM org.apache.cxf.jaxws.handler.HandlerChainInvoker invokeHandleMessage
     [java] WARNING: HANDLER_RAISED_RUNTIME_EXCEPTION
     [java] javax.xml.ws.WebServiceException: javax.xml.bind.UnmarshalException: unexpected element (uri:""http://apache.org/handlers/types"", local:""addNumbers""). Expected elements are (none)
     [java]     at org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl.getPayload(LogicalMessageImpl.java:113)
     [java]     at demo.handlers.common.SmallNumberHandler.handleMessage(SmallNumberHandler.java:57)
     [java]     at demo.handlers.common.SmallNumberHandler.handleMessage(SmallNumberHandler.java:38)
     [java]     at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandleMessage(HandlerChainInvoker.java:358)
     [java]     at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandlerChain(HandlerChainInvoker.java:310)
     [java]     at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeLogicalHandlers(HandlerChainInvoker.java:127)
     [java]     at org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor.handleMessage(LogicalHandlerOutInterceptor.java:113)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:230)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:181)
     [java]     at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
     [java]     at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:131)
     [java]     at $Proxy33.addNumbers(Unknown Source)
     [java]     at demo.handlers.client.Client.main(Client.java:69)
     [java] Caused by: javax.xml.bind.UnmarshalException: unexpected element (uri:""http://apache.org/handlers/types"", local:""addNumbers""). Expected elements are (none)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:523)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.reportError(Loader.java:199)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.reportError(Loader.java:194)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.reportUnexpectedChildElement(Loader.java:71)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$DefaultRootLoader.childElement(UnmarshallingContext.java:920)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext._startElement(UnmarshallingContext.java:366)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.startElement(UnmarshallingContext.java:347)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor.startElement(InterningXmlVisitor.java:35)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector.startElement(SAXConnector.java:101)
     [java]     at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:224)
     [java]     at com.sun.xml.bind.unmarshaller.DOMScanner.scan(DOMScanner.java:107)
     [java]     at com.sun.xml.bind.unmarshaller.DOMScanner.scan(DOMScanner.java:90)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:291)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:271)
     [java]     at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnmarshallerImpl.java:107)
     [java]     at org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl.getPayload(LogicalMessageImpl.java:111)
     [java]     ... 13 more
     [java] LogicalHandler close called
     [java] Exception in thread ""main"" javax.xml.ws.WebServiceException: javax.xml.bind.UnmarshalException: unexpected element (uri:""http://apache.org/handlers/types"", local:""addNumbers""). Expected elements are (none)
     [java]     at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)
     [java]     at $Proxy33.addNumbers(Unknown Source)
     [java]     at demo.handlers.client.Client.main(Client.java:69)
     [java] Caused by: javax.xml.bind.UnmarshalException: unexpected element (uri:""http://apache.org/handlers/types"", local:""addNumbers""). Expected elements are (none)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:523)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.reportError(Loader.java:199)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.reportError(Loader.java:194)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.reportUnexpectedChildElement(Loader.java:71)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$DefaultRootLoader.childElement(UnmarshallingContext.java:920)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext._startElement(UnmarshallingContext.java:366)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.startElement(UnmarshallingContext.java:347)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor.startElement(InterningXmlVisitor.java:35)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector.startElement(SAXConnector.java:101)
     [java]     at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:224)
     [java]     at com.sun.xml.bind.unmarshaller.DOMScanner.scan(DOMScanner.java:107)
     [java]     at com.sun.xml.bind.unmarshaller.DOMScanner.scan(DOMScanner.java:90)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:291)
     [java]     at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:271)
     [java]     at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnmarshallerImpl.java:107)
     [java]     at org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl.getPayload(LogicalMessageImpl.java:111)
     [java]     at demo.handlers.common.SmallNumberHandler.handleMessage(SmallNumberHandler.java:57)
     [java]     at demo.handlers.common.SmallNumberHandler.handleMessage(SmallNumberHandler.java:38)
     [java]     at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandleMessage(HandlerChainInvoker.java:358)
     [java]     at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandlerChain(HandlerChainInvoker.java:310)
     [java]     at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeLogicalHandlers(HandlerChainInvoker.java:127)
     [java]     at org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor.handleMessage(LogicalHandlerOutInterceptor.java:113)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:230)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:181)
     [java]     at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
     [java]     at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:131)
     [java]     ... 2 more
     [java] Java Result: 1
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111495,,,2007-05-15 03:19:49.0,,,,,,0|i0v3br:,179512,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WsdlValidator fails to evaluate a type even though its type was defined in an imported wsdl file,CXF-647,12369120,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,edellnolan,edellnolan,11/May/07 16:11,02/May/13 02:29,14/Mar/19 02:28,21/May/07 02:39,,,,,,,,2.0,,Tooling,,,,,0,"Hi,

I have three files a schema, a logical wsdl file that imports the schema and then a physical wsdl that imports the logical wsdl. 

Cxf throws an error when it trys to evalute the reference to the port Type 

INFO: Create Schema jar:file:/C:/.m2/repository/org/apache/cxf/cxf-tools-common/2.0-incubator-RC-SNAPSHOT/cxf-tools-common-2.0-incubator-RC-SNAPSHOT.jar!/schemas/wsdl/jms.xsd which was loaded from jar
11-May-2007 16:57:16 org.apache.cxf.tools.validator.internal.SchemaValidator createSchema
INFO: Create Schema jar:file:/C:/.m2/repository/org/apache/cxf/cxf-tools-common/2.0-incubator-RC-SNAPSHOT/cxf-tools-common-2.0-incubator-RC-SNAPSHOT.jar!/schemas/wsdl/xml-binding.xsd which was loaded from jar
11-May-2007 16:57:16 org.apache.cxf.tools.validator.internal.SchemaResourceResolver resolveResource
INFO: Resolve schema wsdl.xsd from baseURI: file:/C:/yoko_tan/trunk/api/target/classes/schemas/wsdl/corba-binding.xsd, namespace: http://schemas.xmlsoap.org/wsdl/
11-May-2007 16:57:16 org.apache.cxf.tools.validator.internal.SchemaResourceResolver resolveResource
INFO: Resolve schema xml.xsd from baseURI: jar:file:/C:/.m2/repository/org/apache/cxf/cxf-common-schemas/2.0-incubator-RC-SNAPSHOT/cxf-common-schemas-2.0-incubator-RC-SNAPSHOT.jar!/schemas/wsdl/XMLSchema.xsd, namespace: http://www.w3.org/XML/1998/namespace
WSDLValidator Error : line 11 of file:/C:/yoko_tan/trunk/tools/expected_PhysicalPT.wsdl {http://schemas.apache.org/yoko/idl/OptionsPT}foo.bar is not defined


Edell.",,,,,,,,,,,,,,,,,11/May/07 16:12;edellnolan;OptionsPT.wsdl;https://issues.apache.org/jira/secure/attachment/12357122/OptionsPT.wsdl,11/May/07 16:12;edellnolan;expected_PhysicalPT.wsdl;https://issues.apache.org/jira/secure/attachment/12357123/expected_PhysicalPT.wsdl,11/May/07 16:12;edellnolan;expected_SchemaPT.xsd;https://issues.apache.org/jira/secure/attachment/12357121/expected_SchemaPT.xsd,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111491,,,2007-05-11 16:11:47.0,,,,,,0|i1a8db:,267822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WsdlValidator fails if the wsdl does not have a binding.,CXF-645,12369115,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,edellnolan,edellnolan,11/May/07 15:32,29/Aug/07 02:03,14/Mar/19 02:28,21/May/07 08:45,2.0-RC,,,,,,,2.0,,Tooling,,,,,0,"Hi,

I tried to run the wsdlValidator on the attached files and it fails because it has no binding.

Edell.",,,,,,,,,,,,,,,,,11/May/07 15:33;edellnolan;OptionsPT.wsdl;https://issues.apache.org/jira/secure/attachment/12357113/OptionsPT.wsdl,11/May/07 15:33;edellnolan;expected_SchemaPT.xsd;https://issues.apache.org/jira/secure/attachment/12357112/expected_SchemaPT.xsd,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-05-21 02:55:16.603,,,no_permission,,,,,,,,,,,,,111489,,,Mon May 21 08:45:29 UTC 2007,,,,,,0|i1a8dr:,267824,,,,,,,,"21/May/07 02:55;maomaode;validator will throw errors if the wsdl not contain any services, so it will fail with ""WSDL document does not define any services"".
the behavior is as same as the JAXWS RI.
If you really need pass this wsdl, i can change the ERROR to WARNings and give you option to SUPPRESS the warnings.
Will that work?",21/May/07 08:45;maomaode;Try  set ToolConstants.CFG_SUPPRESS_WARNINGS into validator ToolContext,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Soap11FaultOutInterceptor creates NPE due to call on writer w/o starting element,CXF-643,12369052,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jgenender,jgenender,10/May/07 22:16,29/Aug/07 18:10,14/Mar/19 02:28,11/May/07 14:56,2.0,,,,,,,2.0,,Soap Binding,,,,,0,"Soap11FaultOutInterceptor creates NPE due to call on writer w/o starting element.  It creates a writer, but then proceeds to call:

StaxUtils.getUniquePrefix(writer, ns, true);

This attempts to write a namespace but fails since there is no currentelement (i.e. the writeStartElement has not been called).  This causes a NPE exception to occur in the W3CDOMStreamWriter.

Patch attached to make the calls in the appropriate order.",,,,,,,,,,,,,,,,,10/May/07 22:18;jgenender;CXF-643.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12357066/CXF-643.jgenender.patch,10/May/07 22:17;jgenender;CXF-643.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12357065/CXF-643.jgenender.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-05-11 14:56:42.205,,,no_permission,,,,,,,,,,,,,111487,,,Fri May 11 14:56:42 UTC 2007,,,,,,0|i0v35j:,179484,,,,,,,,10/May/07 22:18;jgenender;Whoops...needed to give the license.,"11/May/07 14:56;dkulp;Patch applied.   Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StaxUtil should test for null NamespaceContext in getUniquePrefix,CXF-642,12369051,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jgenender,jgenender,10/May/07 22:09,29/Aug/07 02:03,14/Mar/19 02:28,11/May/07 14:56,2.0,,,,,,,2.0,,Core,,,,,0,"StaxUtil.getUniquePrefix() makes a call to writer.getNamespaceContext().getNamespaceURI(nsPrefix)  and if the NamespaceContext is null, it will NPE.

Patch attached.",,,,,,,,,,,,,,,,,10/May/07 22:10;jgenender;CXF-642.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12357064/CXF-642.jgenender.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-11 14:56:20.118,,,no_permission,,,,,,,,,,,,,111486,,,Fri May 11 14:56:20 UTC 2007,,,,,,0|i0sz07:,167148,,,,,,,,"11/May/07 14:56;dkulp;Patch applied.  Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema error if more than one methods throws the same exception type.,CXF-641,12369039,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rickmcguire,rickmcguire,10/May/07 19:02,29/Aug/07 02:03,14/Mar/19 02:28,10/May/07 19:22,2.0-RC,,,,,,,2.0,,,,,,,0,JAXBSchemaInitializer will get a schema error if more than one methods throws the same exception type.  ,,,,,,,,,,,,,,,,,10/May/07 19:03;rickmcguire;schema.patch;https://issues.apache.org/jira/secure/attachment/12357058/schema.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-10 19:22:05.966,,,no_permission,,,,,,,,,,,,,111485,,,Thu May 10 19:22:05 UTC 2007,,,,,,0|i1a8e7:,267826,,,,,,,,10/May/07 19:22;dkulp;Patch applied.   Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
default namespace mapping does not take effect when -p flag used,CXF-640,12368998,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,10/May/07 10:56,29/Aug/07 18:10,14/Mar/19 02:28,11/May/07 06:26,,,,,,,,2.0,,Tooling,,,,,0,"If you use the -p flag to generate a classes in a particular package, then tools will create all classes in this package even WS-A EPRs. For example if you take the callback demo and add a package it will no longer compile since the EndpointReferenceUtils will be have the wrong signature:
    <target name=""generate.code"">
        <echo level=""info"" message=""Generating code using wsdl2java...""/>
        <wsdl2java file=""basic_callback.wsdl"" servicename.arg=""-sn CallbackService"" package=""org.cxf""/>
  <wsdl2java file=""basic_callback.wsdl"" servicename.arg=""-sn SOAPService""/>
    </target> ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111484,,,2007-05-10 10:56:18.0,,,,,,0|i146pb:,232549,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven Codegen Plugin Fails For CXF WSDL URLs,CXF-639,12368930,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,maomaode,cmoesel,cmoesel,09/May/07 14:54,29/Aug/07 18:10,14/Mar/19 02:28,10/May/07 03:53,2.0,,,,,,,2.0,,Tooling,,,,,0,"The codegen plugin fails if you set the WSDL to a URL instead of a file.  For example, this WSDL param would fail:
http://localhost:8080/MyService?wsdl

The reason is because the codegen plugin creates a DONE marker file that uses the WSDL filename as part of the DONE marker file name.  In the case above, the filename would include the '?' character, which is illegal as a character in a filename (at least on windows it is).

I am including a simple patch to fix the bug.",,,,,,,,,,,,,,,,,09/May/07 15:03;cmoesel;CXF-639.patch;https://issues.apache.org/jira/secure/attachment/12356978/CXF-639.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111483,,,Wed May 09 15:03:50 UTC 2007,,,,,,0|i1a8ef:,267827,,,,,,,,09/May/07 15:03;cmoesel;Attaching patch to fix bug.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need an api to use the wsdlValidator and SchemaValidator,CXF-638,12368913,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,edellnolan,edellnolan,09/May/07 09:05,29/Aug/07 02:03,14/Mar/19 02:28,11/May/07 03:28,,,,,,,,2.0,,Tooling,,,,,0,"Hi,

Yoko tools would like to be able to use the wsdl and schema validator in cxf instead of having to write one.
There are currently no API's for these so it would be great if we can get these implemented.

thanks, Edell.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-11 03:26:40.181,,,no_permission,,,,,,,,,,,,,111482,,,Thu May 24 02:35:01 UTC 2007,,,,,,0|i140en:,231528,,,,,,,,"11/May/07 03:26;maomaode;Hi Edell,

We do have the API,  i assume you have cxf source code,

If you take a look at the JAXWSDefinitionBuilder, we have a method

    public boolean validate(Definition def) throws ToolException {
        return new WSDL11Validator(def, context).isValid();
    }

you can use this method to validate the wsdl/schema, so your code should like this

if (validationTurnedOn) {
   try {
         builder.validate(wsdlDefition);
    } catch (ToolException e) {
        // handle validation failure here
    }
}","23/May/07 13:28;edellnolan;This means I would have to setup a wsdl builder in order to invoke the wsdlvalidator - is it not possible to get an api to directly call the validator.

thanks, Edell.","24/May/07 02:35;maomaode;So, sorry , you might have no wsdl definition, 

In that case, you should use:

                WSDL11Validator wsdlValidator = new WSDL11Validator(null, env);
                try {
                    wsdlValidator.isValid();
                catch (ToolException e) {
                    // failed, handle exception here
                }
and the env is ToolContext, you should put the wsdl url etc. in it

minimum, what you need is ToolConstants.CFG_WSDLURL
if it's logical wsdl you should also set ToolConstants.CFG_SUPPRESS_WARNINGS

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a new method to the FileWriterUtil class in tools common,CXF-634,12368663,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,edellnolan,edellnolan,04/May/07 14:08,29/Aug/07 18:10,14/Mar/19 02:28,09/May/07 11:44,,,,,,,,2.0,,Tooling,,,,,0,"Hi,

I would like to add a new method to the filewriter class where the encoding can be specified. 

Attached is a patch with new FileWriter file.

thanks, Edell.",,,,,,,,,,,,,,,,,04/May/07 14:09;edellnolan;filewriter.patch;https://issues.apache.org/jira/secure/attachment/12356781/filewriter.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111478,,,2007-05-04 14:08:08.0,,,,,,0|i0v347:,179478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP 1.2 action header is sent incorrectly,CXF-633,12368629,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,dandiep,dandiep,04/May/07 10:15,18/Jun/07 16:33,14/Mar/19 02:28,15/Jun/07 01:02,2.0-M1,2.0-RC,,,,,,2.0,,,,,,,0,"From Steven Harris on the user list:

My CXF client is using SOAP 1.2 over HTTP. I have specified a SOAP
action in my WSDL for my one bound operation. This action value is
getting sent as follows:

,----
| POST /my/service/location HTTP/1.1
| Content-Type: application/soap+xml; charset=UTF-8
| action: ""http://my/operation/action""
| ...
`----

I would expect the SOAP 1.2 treatment of the action parameter to be
adjoined to the Content-Type header, like this:

,----
| POST /my/service/location HTTP/1.1
| Content-Type: application/soap+xml; charset=UTF-8; action:=""http://my/operation/action""
| ...
`----

That's how AXIS2 does it, anyway, and it matches my reading of the
SOAP 1.2 specification, Part 2, Adjuncts¹:

,----[ Section 6.5.2 SOAP Action Description ]
| Many SOAP 1.2 underlying protocol bindings will likely utilize the
| ""application/soap+xml"" media type (described in A. The
| application/soap+xml Media Type) to transmit XML serializations of
| SOAP messages. The media type specifies an optional action parameter,
| which can be used to optimize dispatch or routing, among other things.
`----

Does CXF's use of the ""action"" header in the first example above
conform to SOAP 1.2?",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-18 16:33:03.553,,,no_permission,,,,,,,,,,,,,111477,,,Mon Jun 18 16:33:03 UTC 2007,,,,,,0|i1a8fb:,267831,,,,,,,,"18/Jun/07 16:33;seh;I just tested this change this morning, and the (first) Content-Type header is now produced as requested above. Thanks for fixing this.

Issue CXF-687 remains open, as there are still two Content-Type headers produced.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression in simple front end WSDL auto-generation,CXF-631,12368555,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,oisin,oisin,03/May/07 13:41,29/Aug/07 02:03,14/Mar/19 02:28,01/Jun/07 08:12,2.0-RC,,,,,,,2.0,,Transports,,,,,0,"since rev 532926 it is not possible to generate the wsdl at runtime anymore.

I start the server with 

JaxWsServerFactoryBean factory = new JaxWsServerFactoryBean();
factory.setServiceClass(JaxWsService.class);
factory.setAddress(""http://localhost:9001/jaxwstest"");
factory.setServiceBean(service);
Server server = factory.create();

The JaxWsService is a JAX-WS annotated class. With rev 532895 and below I can get the wsdl with
http://localhost:9001/jaxwstest?wsdl

Now, the error message is

java.lang.ClassCastException: org.xmlsoap.schemas.wsdl.http.AddressType cannot be cast to javax.wsdl.extensions.http.HTTPAddress
        at com.ibm.wsdl.extensions.http.HTTPAddressSerializer.marshall(Unknown Source)
        at com.ibm.wsdl.xml.WSDLWriterImpl.printExtensibilityElements(Unknown Source)
        at com.ibm.wsdl.xml.WSDLWriterImpl.printPorts(Unknown Source)
        at com.ibm.wsdl.xml.WSDLWriterImpl.printServices(Unknown Source)
        at com.ibm.wsdl.xml.WSDLWriterImpl.printDefinition(Unknown Source)
        at com.ibm.wsdl.xml.WSDLWriterImpl.writeWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLWriterImpl.getDocument(Unknown Source)
        at org.apache.cxf.transport.http.WSDLQueryHandler.writeResponse(WSDLQueryHandler.java:139)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:152)
        at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:690)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:191)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
        at org.mortbay.jetty.Server.handle(Server.java:285)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:457)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:751)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:500)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:357)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:329)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)

",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-03 14:18:30.37,,,no_permission,,,,,,,,,,,,,42022,,,Fri Jun 01 08:12:03 UTC 2007,,,,,,0|i146nz:,232543,,,,,,,,"03/May/07 14:18;romanroe;I've tested the simple and the jaxws frontend. The problem occurs in both.

","03/May/07 18:34;dkulp;
This is a MUCH larger problem than I originally thought.   I've fixed the DIRECT issue that is causing the exception, but the resulting wsdl that the runtime produces for the ""code first"" case is missing all the soap stuff.   Looking at the tooling, it looks like the tools add that stuff in the tooling code instead of putting it in the soap binding where the runtime can then take advantage of it.   Anyway, fixing this completely is not a quick fix.    

The tooling folks should be back from holidays next week.  I'm hoping one of them can pick this up.","03/May/07 21:39;dkulp;Digging into the code some more, it's not QUITE as bad as I thought.   The tools are using the service model and stuff, but there is an issue in the SOAP code.

Basically, the SoapTransportFactory is whats going through and adding all the SOAP extensors.   However, that only works if the transport you are using is the SoapTransportFactory.   At runtime, the transport could be something else (like straight HTTP).   Thus, the extensors aren't added.  

This needs to be cleaned up.   The binding extensors need to be created in the SoapBindingFactory.   The only one the SoapTransportFactory should care about is the soap:address in the port.

That said, much of the code for creating the extensors is in tools/common.   i think most of that should be moved into the soap binding.   The tools shouldn't really have much ""soap"" code in them.

","01/Jun/07 08:12;maomaode;A test has been added JaxWsServerFactoryBeanTest.java for both the jaxws and simple frontend.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Service.addPort(QName, String, String) does not accept binding ID javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING",CXF-628,12368503,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,seh,seh,02/May/07 21:40,29/Aug/07 02:03,14/Mar/19 02:28,25/May/07 05:29,2.0-RC,,,,,,,2.0,,Soap Binding,,,,,0,"I'm trying to using the javax.xml.ws.Service.addPort() method, as described here:

http://java.sun.com/javase/6/docs/api/javax/xml/ws/Service.html#addPort(javax.xml.namespace.QName,%20java.lang.String,%20java.lang.String) 

Per the documentation, one should specify the constant 

  javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING

for the bindingId parameter to request a SOAP1.2-over-HTTP binding. When I try to use this constant in CXF, I see the following exception:

[...]
Caused by: org.apache.cxf.service.factory.ServiceConstructionException: Could not resolve a binding for http://www.w3.org/2003/05/soap/bindings/HTTP/
	at org.apache.cxf.frontend.AbstractEndpointFactory.createBindingInfo(AbstractEndpointFactory.java:255)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpointInfo(AbstractEndpointFactory.java:182)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:104)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:44)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:82)
	at org.apache.cxf.jaxws.ServiceImpl.createPort(ServiceImpl.java:314)
	at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:237)
	... 9 more
Caused by: org.apache.cxf.BusException: No binding factory for namespace http://www.w3.org/2003/05/soap/bindings/HTTP/ registered.
	at org.apache.cxf.binding.BindingFactoryManagerImpl.getBindingFactory(BindingFactoryManagerImpl.java:78)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createBindingInfo(AbstractEndpointFactory.java:250)
	... 15 more


I can see that the file ""META-INF/cxf/cxf-extension-soap.xml"" is getting loaded by the Bus, which I thought would enable SOAP 1.2 for use.",NA,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-21 04:06:06.765,,,no_permission,,,,,,,,,,,,,111473,,,Fri May 25 22:57:33 UTC 2007,,,,,,0|i1a8g7:,267835,,,,,,,,"18/May/07 20:00;seh;I hadn't tried running my client for a while, so I tested it again this morning against the latest CXF snapshots. This same error still arises: the standard constant javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING cannot be used as a bindingId.

Where can we find the list of binding IDs accepted by CXF?","18/May/07 20:06;seh;I do see the proper SOAP 1.2-over-HTTP binding value defined in org.apache.cxf.binding.soap.SoapTransportFactory and used in org.apache.cxf.jaxws.support.BindingID, but these methods in BindingID never get called in the course of running my client program, at least according to the debugger.","21/May/07 04:06;njiang;you can find the bindID configure file form
 CXF\trunk\rt\bindings\soap\src\main\resources\META-INF\cxf\cxf-extension-soap.xml
 CXF\trunk\rt\bindings\soap\src\main\resources\META-INF\bus-extensions.xml
","21/May/07 16:12;seh;Right, I mentioned at the end of my first comment above from a few weeks ago that I looked in the cxf-extension-soap.xml file. I see the constants there. My question is why these constants are different from the constants provided in the JAX-WS API in javax.xml.ws.soap.SOAPBinding, such as SOAPBinding.SOAP12HTTP_BINDING, or at least why the JAX-WS constants are not supported.","21/May/07 16:22;seh;Using the values available in cxf-extension-soap.xml still isn't getting the client to use SOAP 1.2. The client compiles and is able to send a request, but it still doesn't look like SOAP 1.2 over HTTP.","22/May/07 02:32;ffang;Hi Harries, 

Would you please provide the code you are using to add port, which would be easier for us to debug and test.

Thanks very much
","22/May/07 03:35;seh;Here's one function, with the application-specific names changed to protect the innocent:

   private static MyInterface_Service makeConfiguredService() {
      final MyInterface_Service service =
            new MyInterface_Service( null,
                                             new javax.xml.namespace.QName( nsMyInterface,
                                                                            ""my-interface"" ) );
      service.addPort( new javax.xml.namespace.QName( nsMyInterface, ""my-interface-soap-endpoint"" ),
                       javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING,
                       ""http://localhost:8888/some/context/path/ws/my-interface"" );
      return service;
   }


Given some WSDL with a service named ""my-interface"" with a port named ""my-interface-soap-endpoint"", we want to indicate that this port is bound to SOAP 1.2 over HTTP, equivalent to WSDL elements like the following:

  <binding name=""my-interface-soap"" type=""tns:my-interface"">
    <wsoap12:binding transport=""http://schemas.xmlsoap.org/soap/http""/>

  or

  <binding name=""my-interface-soap"" type=""tns:my-interface"">
    <wsoap12:binding transport=""http://www.w3.org/2003/05/soap/bindings/HTTP/""/>

I could also show the similar WSDL 2.0 if that would be helpful.","22/May/07 09:42;ffang;Fix it up. Would you please try it again.

Also, you can pulish endpoint with specified soap12 bindingid now by means of

EndpointImpl e = (EndpointImpl) Endpoint.create(javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING, 
                                                            implementor);
e.publish(address);
Just FYI","22/May/07 14:58;seh;I tried it with the latest Maven-published artifacts as of around 7:50 a.m. PST on 22 May 2007, but I suspect your changes are not yet included in that build, as I'm seeing the same error arise when I try to use the javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING constant for my binding ID. Perhaps we'll fare better tomorrow after another nightly build captures these changes.

In the meantime, thanks for your effort on this issue.","23/May/07 02:18;ffang;If you still see this problem today, give me a shout
btw, my test code on client side is 
public void testAddPortWithSpecifiedBinding() throws Exception {
        QName fakePortName = new QName(""http://apache.org/hello_world_soap_http"",
                                                 ""FackPort"");
        Service service = Service.create(serviceName);
        service.addPort(fakePortName, javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING, 
                        ""http://localhost:9009/SoapContext/SoapPort"");
        Greeter greeter = service.getPort(fakePortName, Greeter.class);

        String response = new String(""Bonjour"");
        try {
            greeter.greetMe(""test"");
            String reply = greeter.sayHi();
            assertNotNull(""no response received from service"", reply);
            assertEquals(response, reply);
        } catch (UndeclaredThrowableException ex) {
            throw (Exception)ex.getCause();
        }
      
        
    }
On server side is 
//publish port with soap12 binding
        address = ""http://localhost:9009/SoapContext/SoapPort"";
        EndpointImpl e = (EndpointImpl) Endpoint.create(javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING, 
                                                        implementor);
        e.publish(address);
        
And the wsdl in test is wtih saop11 binding, I believe it's same as your scenario. 

And the messasge I catch is
<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Body><sayHi xmlns:ns2=""http://www.w3.org/2005/08/addressing/wsdl"" xmlns=""http://apache.org/hello_world_soap12_http/types"" /></soap:Body></soap:Envelope>

It should use soap12 binding now","23/May/07 16:44;seh;I rebuilt this morning (23 May) and see that Maven downloaded lots of updated CXF artifacts, but I'm still seeing the exact same error produced:

  org.apache.cxf.BusException: No binding factory for namespace http://www.w3.org/2003/05/soap/bindings/HTTP/ registered.

How long does it take for the changes in Subversion to propagate out to the public Maven builds?
I'm using the ""2.0-incubator-SNAPSHOT"" versions.","24/May/07 01:51;ffang;we publish the cxf jar to apache maven repo mannulaly, so cann't guarantee when the latest update can be published.
You need build from the lastest trunk if you are eager to try this feature

Btw, can you check the cxf-rt-bindings-soap-2.0-incubator-SNAPSHOT.jar timestamp you are using? you can find it in maven-metadata-local.xml of repository/org/apache/cxf/cxf-rt-bindings-soap/2.0-incubator-SNAPSHOT folder","24/May/07 19:32;seh;All is well today. I'm able to use Service.addPort() and get SOAP 1.2 over HTTP as expected.
Now I need to ping someone (Dan?) who was going to look into why the SOAP action parameter is a header all its own rather than a parameter to the Content-Type header.

Actually, wait: I just noticed my messages are being produced with two Content-Type headers:

POST /host/my-interface HTTP/1.1
Content-Type: application/soap+xml; charset=UTF-8
action: ""http://host/my-interface-service/some-operationRequest""
Content-Type: text/xml
Connection: close
Cache-Control: no-cache
Pragma: no-cache
User-Agent: Java/1.6.0_01
Host: 127.0.0.1:8888
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Content-Length: 469

I'll file a second issue about this.","24/May/07 19:34;seh;We got SOAP 1.2 working, but not SOAP 1.1.

I just noticed that the constant

  javax.xml.ws.soap.SOAPBinding.SOAP11HTTP_BINDING

is not supported to request SOAP 1.1, per the following error:

Caused by: org.apache.cxf.service.factory.ServiceConstructionException: Could not resolve a binding for http://schemas.xmlsoap.org/wsdl/soap/http
	at org.apache.cxf.frontend.AbstractEndpointFactory.createBindingInfo(AbstractEndpointFactory.java:261)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpointInfo(AbstractEndpointFactory.java:188)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:105)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:44)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:82)
	at org.apache.cxf.jaxws.ServiceImpl.createPort(ServiceImpl.java:315)
	at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:237)
	... 9 more
Caused by: org.apache.cxf.BusException: No binding factory for namespace http://schemas.xmlsoap.org/wsdl/soap/http registered.
	at org.apache.cxf.binding.BindingFactoryManagerImpl.getBindingFactory(BindingFactoryManagerImpl.java:78)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createBindingInfo(AbstractEndpointFactory.java:256)
	... 15 more","25/May/07 03:47;ffang;yes, for some reason, cxf soapbinding 11 namespace is not as same as it defined in javax.xml.ws.soap.SOAPBinding.SOAP11HTTP_BINDING, I will fix it very soon",25/May/07 05:29;ffang;javax.xml.ws.soap.SOAPBinding.SOAP11HTTP_BINDING  is supported now,"25/May/07 22:57;seh;Thanks for getting to this so quickly. It will probably take me several days before I can test it again, but just looking at the changes, it looks like you solved it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2Java JAXWS frontend does not handle enableAsyncMapping for non-Java-named operations,CXF-627,12368489,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,seh,seh,02/May/07 19:47,29/Aug/07 02:03,14/Mar/19 02:28,05/Jun/07 05:00,2.0-RC,,,,,,,2.0,,Tooling,,,,,0,"Per the discussing on the cxf-user mailing list in the thread entitled

  JAX-WS enableAsyncMapping directive not respected
  http://www.nabble.com/Re%3A-JAX-WS-enableAsyncMapping-directive-not-respected-p10292965.html

the class org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.OperationProcessor uses a method called isAddedAsyMethod() to determine whether it has already defined an asynchronous method for a given operation name. Its detection heuristic fails for operation names that don't conform to the Java naming conventions.

For example, an operation name ""some-op"" will get munged into the Java name ""someOp"". The isAddedAsyMethod() heuristic looks to see if there are two methods in an interface that share the same operation name, but differ from the operation name in method name -- when dropped to lowercase. My example here meets that criteria, but does not constitute an ""extra"" asynchronous method being present. It's just tripping on the mistaken assumption that an operation name and method name will be the same save for case.

We need a better collision detection heuristic here -- perhaps one that takes the operation name-to-Java name munging into account.",NA,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111472,,,Wed Jun 06 16:37:20 UTC 2007,,,,,,0|i1a8gf:,267836,,,,,,,,"06/Jun/07 16:37;seh;The change arrived in this morning's Maven snapshot update, and it works as expected. Thanks for fixing this problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
soap12 sample (using HTTP Get) doesn't work,CXF-626,12368484,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,janstey,janstey,02/May/07 18:48,18/Jun/07 18:42,14/Mar/19 02:28,18/Jun/07 18:42,2.0-RC,,,,,,,2.0,,,,,,,0,"When ant client.get is run, you get the following:	

Buildfile: build.xml
maybe.generate.code:
compile:
build:
client.get:
     [java] Invoking server through HTTP GET to invoke sayHi
     [java] **** Response ******
     [java] <soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Body><ns2:sayHiResponse xmlns:ns2=""http://apache.org/hello_world_soap12_http/types"" xmlns=""http://www.w3.org/2005/08/addressing/wsdl""><ns2:responseType>Bonjour</ns2:responseType></ns2:sayHiResponse></soap:Body></soap:Envelope>
     [java] Invoking server through HTTP GET to invoke greetMe
     [java] GreetMe Fault: Server returned HTTP response code: 500 for URL: http://localhost:9000/SoapContext/SoapPort/greetMe/me/CXF
     [java] **** Response ******
     [java] <soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Body><soap:Fault><soap:Code><soap:Value>soap:Receiver</soap:Value></soap:Code><soap:Reason><soap:Text xml:lang=""en"">Parameter should be ordered in the following sequence: [greetMe]</soap:Text></soap:Reason></soap:Fault></soap:Body></soap:Envelope>
     [java] Invoking server through HTTP GET to invoke greetMe
     [java] Exception in thread ""main"" java.io.IOException: Server returned HTTP response code: 500 for URL: http://localhost:9000/SoapContext/SoapPort/greetMe/requestType/CXF
     [java] 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1153)
     [java] 	at demo.hw.client.Get.main(Get.java:77)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-17 03:25:42.892,,,no_permission,,,,,,,,,,,,,111471,,,Mon Jun 18 18:42:19 UTC 2007,,,,,,0|i1a8gn:,267837,,,,,,,,17/May/07 03:25;blin;see also CXF-584 for more information,"18/Jun/07 18:42;dandiep;I believe this issue was fixed as CXF-584 was closed and we've since done a lot of testing on the samples. So I'm closing it, but speak up if there are issues still.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ws_rm sample failing to compile,CXF-625,12368480,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,janstey,janstey,02/May/07 17:59,29/Aug/07 02:03,14/Mar/19 02:28,11/May/07 05:41,,,,,,,,2.0,,,,,,,0,The ws_rm sample fails to compile - attaching one-liner patch to fix it.,,,,,,,,,,,,,,,,,02/May/07 17:59;janstey;cxf-625.patch;https://issues.apache.org/jira/secure/attachment/12356652/cxf-625.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-11 05:41:53.139,,,no_permission,,,,,,,,,,,,,111470,,,Fri May 11 05:41:53 UTC 2007,,,,,,0|i1a8gv:,267838,,,,,,,,02/May/07 17:59;janstey;Patch to fix the issue.,11/May/07 05:41;njiang;the patch has been applied in the revision 537100,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-rt-transports-http pom.xml has compile dependencies on jetty and servlet-api,CXF-624,12368474,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,cmoesel,cmoesel,02/May/07 16:32,29/Aug/07 02:03,14/Mar/19 02:28,02/May/07 16:52,2.0,,,,,,,2.0,,Build system,,,,,0,"Because of the current pom.xml, the following are transient compile dependencies of cxf-rt-transports-http:
- jetty
- jetty-sslengine
- jetty-util
- geronimo-servlet_2.5_spec

This causes the corresponding jars to be copied into WEB-INF/lib for WARs that use the CXFServlet.

It doesn't look like the jetty jars are actually needed by cxf-rt-transports-http, and the servlet-api spec should have the ""provided"" scope since it will already be bundled with the servlet container.  Could we fix this or are they needed for some reason?",,,,,,,,,,,,,,,,,02/May/07 16:34;cmoesel;fix-rt-transports-http-pom.patch;https://issues.apache.org/jira/secure/attachment/12356644/fix-rt-transports-http-pom.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-02 16:52:27.111,,,no_permission,,,,,,,,,,,,,111469,,,Wed May 02 16:52:27 UTC 2007,,,,,,0|i1a8h3:,267839,,,,,,,,"02/May/07 16:34;cmoesel;A patch that removes the jetty dependencies and sets the scope of the geronimo-servlet_2.5_spec to ""provided"".

I ran the tests in /rt/transports/http and /systests successfully after applying this patch.",02/May/07 16:52;njiang;This patch has been applied in the revision 534542.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.cxf.bus.spring.BusApplicationContext constructor does not respect ""include defaults"" flag
",CXF-621,12368421,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,seh,seh,01/May/07 22:09,29/Aug/07 02:03,14/Mar/19 02:28,02/May/07 03:14,2.0-RC,,,,,,,2.0,,Bus,,,,,0,"BusApplicationContext's constructors accept a boolean argument ""include"" to indicate whether it should try to load the default configuration files discovered on the class path. The problem comes from poor interaction among initialization of a member variable (includeDefaults) and the overridden method getConfigResources().

Two of the constructors have similar form:

    public BusApplicationContext(String cf, boolean include, ApplicationContext parent) {
        super((String[])null, parent);
        cfgFile = cf;
        includeDefaults = include;
    }

Note that ""includeDefaults"" is not initialized until the base class constructor returns. However, as part of the base constructor chain, ClassPathXmlApplicationContext calls refresh(), which triggers a long call chain that results in getConfigResources() being called.

BusApplicationContext overrides getConfigResources(). One of the first things it does is reads its ""includeDefaults"" flag -- but at this point the flag has not been initialized by the constructor, so it defaults to false. Therefore, no matter what the value of the ""include"" parameter to the BusApplicationContext constructor, only a false value gets used during construction.

Unfortunately, there's no way to do anything such as initializing member variables before calling the superclass's constructor. Therefore, the fix is to call on a different ClassPathXmlApplicationContext constructor -- the one that takes a boolean flag indicating whether to refresh() immediately. We can pass false, initialize our member variables, then call refresh() explicitly:

    public BusApplicationContext(String cf, boolean include, ApplicationContext parent) {
        super((String[])null, false, parent);
        cfgFile = cf;
        includeDefaults = include;
        refresh();
    }

I haven't tested this code, but it looks like it should fix the problem.",NA,,,,,,,,,,,,,,,,01/May/07 22:38;seh;bus_fixes.patch;https://issues.apache.org/jira/secure/attachment/12356584/bus_fixes.patch,01/May/07 22:46;seh;bus_fixes_post_cs.patch;https://issues.apache.org/jira/secure/attachment/12356585/bus_fixes_post_cs.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-05-02 03:14:51.065,,,no_permission,,,,,,,,,,,,,111466,,,Wed May 02 17:20:53 UTC 2007,,,,,,0|i1a8hj:,267841,,,,,,,,"01/May/07 22:19;seh;In testing this change in behavior, I noticed that the BusApplicationContext gets refresh()ed twice: once in the BusApplicationContext constructor, and again in SpringBusFactory.createBus(). The result is a huge increase in start-up time.

I don't see why SpringBusFactory calls refresh on the BusApplicationContext it just created, as nothing has changed between the constructor call and the point at which it calls refresh().

The same mistake -- or at least the same problem -- occurs in both the String- and URL-based SpringBusFactory.createBus() methods.","01/May/07 22:38;seh;Patch to properly initialize BusApplicationContext member variables before allowing base ApplicationContext to refresh.

Also, remove apparently spurious calls to refresh() in SpringBusFactory. Unify code for creation and initialization of Bus instances.","01/May/07 22:46;seh;Yow, that CheckStyle audit is feisty. Find a revised patch that appeases CheckStyle.",02/May/07 03:14;njiang;This patch has been applied in the revision 534300.,"02/May/07 16:08;seh;Testing this morning, I'm seeing an infinite loop on startup if I don't explicitly import ""classpath:META-INF/cxf/cxf.xml"" in my cxf.xml file. I'm going to look into it now.","02/May/07 16:39;seh;When I step through the BusApplicationContext constructor in my debugger, I run into a class called ""JaxbClassPathXmlApplicationContext"", a superclass of BusApplicaitonContext. But when I look in the SVN repository, there is no such class, and BusApplicationContext derives directly from Spring's ClassPathXmlApplicationContext. The Maven-distributed JAR for the CXF RT core contains a class file for JaxbClassPathXmlApplicationContext:

% jar tvf cxf-rt-core-2.0-incubator-SNAPSHOT.jar | egrep JaxbClassPa
  4878 Fri Apr 27 15:45:54 PDT 2007 org/apache/cxf/configuration/spring/JaxbClassPathXmlApplicationContext.class

Where is this class coming from? Is it a stale leftover sitting in the target/classes directory of the machine that builds the Maven artifacts?","02/May/07 17:03;njiang;Hi Steven 

BusApplicationContext was updated to entends ClassPathXmlApplicationContext in 29th Apr. 
The jars you use could be out of date. You can run the mvn install in the cxf trunk to update you local mvn repository.
I just went through the springBusFactoryTest, everything is ok, if I don't explicitly import ""classpath:META-INF/cxf/cxf.xml"" in my cxf.xml file

Willem.

","02/May/07 17:20;seh;I've tried compiling parts of CXF, but I keep on running into errors like the following, which I think are due to missing repository/pluginRepository specifications in the POMs:

[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: org.apache.cxf:cxf-common-xsd

Reason: POM 'org.apache.cxf:cxf-common-xsd' not found in repository: Unable to d
ownload the artifact from any repository

  org.apache.cxf:cxf-common-xsd:pom:2.0-incubator-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Addressing namespace URI is stale,CXF-620,12368412,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,asmyth,seh,seh,01/May/07 20:10,29/Aug/07 18:09,14/Mar/19 02:28,02/May/07 10:27,2.0-RC,,,,,,,2.0,,WS-* Components,,,,,0,"The class org.apache.cxf.ws.addressing.policy.MetadataConstants
defines the WS-Addressing namespace with a now-stale URI:

,----
| public final class MetadataConstants {
|     
|     public static final String NAMESPACE_URI = 
|         ""http://www.w3.org/2007/01/addressing/metadata"";
|     public static final String ADDRESSING_ELEM_NAME = ""Addressing"";
`----

Per the latest working draft of ""Web Services Addressing 1.0 - Metadata"", the namespace has changed to http://www.w3.org/2007/02/addressing/metadata:

http://www.w3.org/TR/ws-addr-metadata/#namespaces

That is, the ""01"" became ""02"".",NA,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111465,,,2007-05-01 20:10:33.0,,,,,,0|i1a8hr:,267842,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractHTTPDestination sets null server addresses,CXF-619,12368407,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jgenender,jgenender,01/May/07 19:33,01/May/07 21:51,14/Mar/19 02:28,01/May/07 21:51,2.0-M1,,,,,,,2.0,,Transports,,,,,0,"AbstractHTTPDestination sets null server addresses.  This eventually causes NPEs in the ExtensionInvocationHandler.invoke(ExtensionInvocationHandler.java:37).

The AbstractHTTPDestination.getAddressValue() needs to check for a null address before trying to set it.

Patch attached.",,,,,,,,,,,,,,,,,01/May/07 19:34;jgenender;CXF-619.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12356576/CXF-619.jgenender.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-01 21:51:40.061,,,no_permission,,,,,,,,,,,,,111464,,,Tue May 01 21:51:40 UTC 2007,,,,,,0|i1a8hz:,267843,,,,,,,,"01/May/07 21:51;dkulp;
Patch applied.  Thanks Jeff!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable proxy authentication for retrieving WSDL from dynamic client,CXF-618,12368399,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,tog,tog,01/May/07 16:34,29/Aug/07 18:10,14/Mar/19 02:28,23/May/07 03:51,,,,,,,,2.0,,,,,,,0,"When a dynamic client is created from an URLLocation like this:

    client = DynamicClientFactory.newInstance().createClient(URLLocation, cl);

the proxy authentication is not considered",Linux/Windows XP SP2 - jdk1.50_11,,,,,,,,,,,,,,,,02/May/07 18:40;tog;patch.txt;https://issues.apache.org/jira/secure/attachment/12356656/patch.txt,01/May/07 16:55;tog;patch.txt;https://issues.apache.org/jira/secure/attachment/12356567/patch.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111463,,,Wed May 02 18:40:57 UTC 2007,,,,,,0|i1a8i7:,267844,,,,,,,,"01/May/07 16:55;tog;Here is a patch for URIResolver. It is only working for Basic authentication and  does not rely on any third party dependency (such as httpclient). 

It is at the cost of referencing a sun.* classe.

Are they any alternative for this ? Do you want me to provide a Base64Encoder ?",02/May/07 18:40;tog;Attached is a new patch using the Base64Utility class from cxf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Standalone Jetty Server Does Not Modify soap:address As Needed,CXF-617,12368321,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,cmoesel,cmoesel,30/Apr/07 16:45,29/Aug/07 02:03,14/Mar/19 02:28,18/May/07 08:49,2.0-RC,,,,,,,2.0,,Transports,,,,,0,"The standalone jetty server does not dynamically modify the soap:address in the wsdl.  This should occur similar to how it occurs in CXFServlet.

Essentially, the host name and port should be extracted from the request for the wsdl and inserted as the host name and port in the soap:address of the returned wsdl.  This would allow standalone deployments to be portable across servers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-30 18:21:53.06,,,no_permission,,,,,,,,,,,,,111462,,,Fri May 18 08:49:25 UTC 2007,,,,,,0|i1a8if:,267845,,,,,,,,30/Apr/07 18:21;adisakala;Is this an issue with the wsdl retrieved using ?wsdl,"30/Apr/07 18:49;cmoesel;Yes, when the wsdl is retrieved via ?wsdl, the soap:address should be modified on the fly to fit the environment.",18/May/07 08:49;njiang;This issue has been resolved in revision 539316,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java->WSDL doesn't generate Fault beans...,CXF-616,12368313,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,dkulp,dkulp,30/Apr/07 15:50,29/Aug/07 18:10,14/Mar/19 02:28,09/May/07 11:36,2.0-RC,,,,,,,2.0,,Tooling,,,,,0,"
According to section 3.7 of the JAX-WS spec, the Java->WSDL stuff needs to generate fault beans with the appropriate JAXB annotations.

(Yes, this is Bogus IMO, but the spec is the spec)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111461,,,2007-04-30 15:50:51.0,,,,,,0|i140db:,231522,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Runtime builds an extra  element for String[]  in schema when execute buildServiceFromClass(),CXF-614,12368292,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,30/Apr/07 03:43,29/Aug/07 18:09,14/Mar/19 02:28,16/May/07 07:56,,,,,,,,2.0,,,,,,,0,"Runtime generate the following schema in wsdl :

<xs:complexType name=""operation0ResponseType"">
<xs:sequence>
<xs:element minOccurs=""0"" name=""birth"" type=""xs:dateTime""/>
<xs:element minOccurs=""0"" name=""death"" type=""xs:dateTime""/>
<xs:element minOccurs=""0"" name=""name"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""owner"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""sex"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""species"" type=""xs:string""/>
</xs:sequence>
</xs:complexType>
<xs:complexType final=""#all"" name=""operation0ResponseTypeArray"">
<xs:sequence>
<xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""item"" nillable=""true"" type=""tns:operation0ResponseType""/>
</xs:sequence>
</xs:complexType>
<xs:element name=""operation0"">
<xs:complexType>
<xs:sequence/>
</xs:complexType>
</xs:element>
<xs:element name=""operation0Response"">
<xs:complexType>
<xs:sequence>
<xs:element name=""return"" nillable=""true"" type=""tns:operation0ResponseTypeArray""/>
</xs:sequence>
</xs:complexType>

Type ""operation0ResponseTypeArray"" should be removed .


",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111459,,,Wed May 16 07:56:22 UTC 2007,,,,,,0|i1a8iv:,267847,,,,,,,,"16/May/07 07:56;ema;Dan Kulp fixed this issue in revsion 534599 :  http://svn.apache.org/viewvc?view=rev&rev=534599, so I  will close this issue . ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java2Wsdl support generate wrapper beans in different package,CXF-611,12368237,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,28/Apr/07 03:43,29/Aug/07 02:05,14/Mar/19 02:28,09/May/07 11:38,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"if className  attribute of requestWrapper presents, then java2wsdl should support generation in the same package as className specified",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-28 13:19:08.645,,,no_permission,,,,,,,,,,,,,111457,,,Sun Apr 29 11:44:49 UTC 2007,,,,,,0|i1a8jj:,267850,,,,,,,,"28/Apr/07 13:19;dkulp;
I'm re-openning this as the beans it generates in this case aren't compilable.   

I've added a unit test for this (@Ignored for now) in JavaToProcessorTest.testGenWrapperInAnotherPackage().
","29/Apr/07 09:53;maomaode;Is it OK to generate the TestDataBean class in org.apache.cxf package? (there is a duplication, but that's the easiest fix)
or the generated echoDataBean/echoDataBeanResponse MUST ref the TestDataBean in org.apache.cxf.tools.fortest.withannotation.doc
If that's the case, i think we have to revert the whole WrapperBeanGenerator.","29/Apr/07 10:56;dkulp;No, this is a code first use case.   The developer has their beans and impls and such in a particular place, but they want the generated stuff to go elsewhere.   This has to work.

","29/Apr/07 11:44;maomaode;Then i think we better refactoring the WrapperBeanGenerator, it's not a correct way to generate the wrapper bean classes from schemaInfo of the built serviceInfo.  because we don't have much control over the jaxb code model.

We better generate the wrapper bean classes from the SEI directly, the downside of this approach is we'll have to maintain more code, and have to append the jaxb annotations by ourself.

Maybe there are other ways?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java2Wsdl can not handle String[] in generating wrapper beans,CXF-610,12368236,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,maomaode,maomaode,28/Apr/07 02:17,29/Aug/07 02:03,14/Mar/19 02:28,11/May/07 01:31,2.0-RC,,,,,,,2.0,,Tooling,,,,,0," If the paramater types are arrays (like String[]), the code it 
generates is wrong.  Instead of 
setArg0(String[] arg0);

I get setArray(StringArray array) with StringArray being in 
net.java.dev.jaxb.array package.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111456,,,2007-04-28 02:17:31.0,,,,,,0|i13zk7:,231391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF needs to throw a SOAPFaultException when using a SOAPBinding per JAXWS Spec 6.4.1.,CXF-609,12368219,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jgenender,jgenender,27/Apr/07 18:50,29/Aug/07 18:06,14/Mar/19 02:28,30/Apr/07 08:34,2.0-M1,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"CXF needs to throw a SOAPFaultException when using a SOAPBinding per JAXWS Spec 6.4.1 when an Exception occurs.

Patch attached along with test case.",,,,,,,,,,,,,,,,,27/Apr/07 19:06;jgenender;CXF-609.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12356431/CXF-609.jgenender.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-30 08:34:35.569,,,no_permission,,,,,,,,,,,,,111455,,,Mon Apr 30 08:34:35 UTC 2007,,,,,,0|i1a8jr:,267851,,,,,,,,30/Apr/07 08:34;blin;patch applied with revision 533208,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReflectionServiceFactoryBean generate two element with same name in same schema,CXF-607,12368184,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ffang,ffang,27/Apr/07 09:07,29/Aug/07 18:10,14/Mar/19 02:28,16/May/07 06:39,,,,,,,,2.0,,,,,,,0,"one problem I encounter is server side throw exception as
org.xml.sax.SAXParseException: sch-props-correct.2: A schema cannot contain two global components with the same name; this schema contains two occurrences of 'http://www.iona.com/com.iona.test.TestInterface/xsd,getMessage'.

when build service from class.

I print out the schema in ReflectionServiceFactoryBean
it's 
<?xml version=""1.0"" encoding=""utf-8""?>
<xs:schema xmlns=""http://www.iona.com/com.iona.test.TestInterface/xsd"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"" targetNamespace=""http://www.iona.com/com.iona.test.TestInterface/xsd"">
        <xs:element name=""charEl_return"">
                <xs:complexType>
                        <xs:sequence>
                                <xs:element name=""varChar"" type=""xs:string""/>
                                <xs:element name=""varInt"" type=""xs:int""/>
                                <xs:element name=""varString"" type=""xs:string""/>
                        </xs:sequence>
                </xs:complexType>
        </xs:element>
        <xs:element name=""charEl_x"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""charEl_y"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""charEl_z"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""getMessage"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""getMessageResponse"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""setMessage"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""setMessageResponse"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""getMessage"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""getMessageResponse"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""charEl_x"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""setMessage"" nillable=""true"" type=""xs:string""/>
        <xs:element name=""setMessageResponse"" nillable=""true"" type=""xs:string""/>
</xs:schema>

we can see that in this schema several duplicated element. I believe the error is caused by when we generated schema element from method parameter, we didn't check if the same parameter type alreay added.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111453,,,2007-04-27 09:07:05.0,,,,,,0|i1a8k7:,267853,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MTOM Broken with Axis2 and .NET clients,CXF-606,12368162,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,cmoesel,cmoesel,26/Apr/07 22:19,29/Aug/07 18:06,14/Mar/19 02:28,30/Apr/07 08:36,2.0,,,,,,,2.0-RC,,Core,,,,,0,"A recent change to AttachmentDeserializer broke MTOM compatibility with Axis2 and C# .NET clients.  The AttachmentDeserializer no longer looks in Content-Type to get the boundary delimiters-- instead it looks in the message content input stream.  The problem is, it now assumes that boundary delimiters will start with ""----=_Part_"".  This is not the case for Apache Axis2 or C# clients, so it can't find the boundary delimiters.

Axis2 uses boundary delimiters like: MIMEBoundaryurn_uuid_6BC4984D5D38EB283C1177616488109
.NET uses boundary delimiters like: --MIMEBoundary633131968239902899

I am attaching a patch.  The patch changes AttachmentDeserializer to first look in the Content-Type for the boundary.  If it's found, then it uses it.  If not, only then does it look in the message content input stream.  When looking in the message content, it does, however, still assume the boundary delimiter starts with ""----=_Part_"".  I'm not currently familiar enough with boundary delimiter rules to write a better boundary detection scheme.  

Nonetheless, this patch should make handling attachments more efficient (since it doesn't always copy out the message content InputStream).  And, of course, it fixes the Axis2 and C# errors too!

A unit test is also included so this bug will never happen again. =)
",,,,,,,,,,,,,,,,,26/Apr/07 22:21;cmoesel;mtom_boundary_bug.patch;https://issues.apache.org/jira/secure/attachment/12356370/mtom_boundary_bug.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-26 22:22:32.401,,,no_permission,,,,,,,,,,,,,111452,,,Mon Apr 30 08:36:00 UTC 2007,,,,,,0|i0sz0f:,167149,,,,,,,,26/Apr/07 22:21;cmoesel;Previously mentioned patch (in description).,26/Apr/07 22:22;dandiep;Thanks a ton!,30/Apr/07 08:36;blin;patch applied with revision 533412,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AttachmentDeserializer cann't handle the case that no boundry info in ContentType header,CXF-605,12368098,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,26/Apr/07 07:42,29/Aug/07 18:07,14/Mar/19 02:28,27/Apr/07 03:41,,,,,,,,2.0-RC,,,,,,,0,"Currently AttachmentDeserializer extract Mime attachment boundary info from message ContentType header,  should provide a general way that extract the boundary info from message body.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111451,,,2007-04-26 07:42:53.0,,,,,,0|i1a8kf:,267854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFServletTest failed in fact but cruisecontrol cann't report this error,CXF-604,12368092,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,ffang,ffang,26/Apr/07 06:12,29/Aug/07 02:05,14/Mar/19 02:28,27/Apr/07 02:59,,,,,,,,2.0-RC,,,,,,,0,"I get CXFServletTest failed on my local machine, the exception is

Running org.apache.cxf.systest.servlet.CXFServletTest
java.net.SocketException: Permission denied
        at sun.nio.ch.Net.bind(Native Method)
        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:119)
        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:59)
        at org.mortbay.jetty.nio.SelectChannelConnector.open(SelectChannelConnector.java:198)
        at org.mortbay.jetty.AbstractConnector.doStart(AbstractConnector.java:251)
        at org.mortbay.jetty.nio.SelectChannelConnector.doStart(SelectChannelConnector.java:233)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)
        at org.mortbay.jetty.Server.doStart(Server.java:221)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)
        at org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine.addServant(JettyHTTPServerEngine.java:129)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.activate(JettyHTTPDestination.java:110)
        at org.apache.cxf.transport.AbstractObservable.setMessageObserver(AbstractObservable.java:47)
        at org.apache.cxf.binding.AbstractBindingFactory.addListener(AbstractBindingFactory.java:152)
        at org.apache.cxf.binding.soap.SoapBindingFactory.addListener(SoapBindingFactory.java:376)
        at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:119)
        at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:95)
        at org.apache.cxf.systest.servlet.CXFServletTest.setupJaxwsService(CXFServletTest.java:60)
        at org.apache.cxf.systest.servlet.CXFServletTest.testPostInvokeServices(CXFServletTest.java:66)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
        at org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
        at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
        at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
        at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
        at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)
        at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
        at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
        at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
        at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
        at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:138)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:163)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:84)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:244)
        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:814)

And I also get this error on cruisecontrol, 
http://pdceltix.boston.amer.iona.com:8080/cruisecontrol/artifacts/cxf/20070426012616/build.out

see the build output. unfortunately, test result report all test pass
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-27 02:59:55.57,,,no_permission,,,,,,,,,,,,,111450,,,Fri Apr 27 02:59:55 UTC 2007,,,,,,0|i1a8kn:,267855,,,,,,,,"27/Apr/07 02:59;njiang;this issue is because of the default bus will not be set by CXFServlet.
The Endpoint can be created by the cxf-servlet.xml with the jaxws syntax. 
I updated the CXFServletTest in the revision  532940",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EBay WSDL does not work,CXF-602,12368063,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,dandiep,dandiep,25/Apr/07 18:53,29/Aug/07 02:03,14/Mar/19 02:28,14/Jun/07 01:19,2.0-RC,,,,,,,2.0,,,,,,,0,Generating a client for the EBay WSDL does not seem to work correctly.,,,,,,,,,,,,,CXF-945,,,,06/Jun/07 03:29;jliu;pizza.wsdl;https://issues.apache.org/jira/secure/attachment/12359019/pizza.wsdl,25/Apr/07 20:54;cmoesel;pizza_service_cxf_wsdl2java_header_bug.zip;https://issues.apache.org/jira/secure/attachment/12356266/pizza_service_cxf_wsdl2java_header_bug.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-04-25 20:54:52.155,,,no_permission,,,,,,,,,,,,,111448,,,Fri Jul 06 08:43:40 UTC 2007,,,,,,0|i0v2vz:,179441,,,,,,,,"25/Apr/07 20:54;cmoesel;At least one of the issues with generating from the ebay wsdl is that the headers are not included in method signatures.  The following simple project and wsdl demonstrates this bug (in a way that is easier to grasp than the ebay wsdl).

The summary is as follows:

If a type that should be passed in the SOAP header is defined in its own message
rather than the request message, then CXF does not generate a parameter for that 
type in the interface.  There is no simple way to access that data from the header.

On the other hand, if the type is defined as a separate part of the same request
message (instead of in its own message), then the interface is generated correctly.

The attached example demonstrates a broken operation and a working one.  
It is recommended you look at the wsdl to see the difference:
src/main/resources/pizza.wsdl

Then run ""mvn install"" and look at the generated PizzaPortType interface:
target/generated/src/main/java/com/mypizzaco/service/PizzaPortType.java

Note the difference in the method signatures of the two operations.  If CXF
were working correctly, both signatures should be the same.","05/Jun/07 10:06;jliu;Hi, it looks like the test case is wrong. Code generated for operation OrderPizzaBroken is ok, header is generated. Code generated for operation OrderPizzaBroken is wrong, but this is because the wsdl is wrong: there is no part called callerID defined in tns:OrderPizzaRequest. See below:

    <wsdl:operation name=""OrderPizza"">
      <soap:operation soapAction=""""/>
      <wsdl:input>
        <soap:header message=""tns:OrderPizzaRequest"" part=""callerID"" use=""literal"" />
        <soap:body use=""literal""/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use=""literal""/>
      </wsdl:output>
    </wsdl:operation>

I also tried eBay wsdl, but its so huge, too hard for me to identify the specific problem reported by this Jira. Could you update the test case please? Or let me know if I did anything wrong with the testcase.

Thanks.","06/Jun/07 03:28;jliu;Ok, I've got it. I modified the attached wsdl slightly and now I can reproduce the problem Chris reported. Attached is update WSDL file",14/Jun/07 01:19;blin;i believe r545220 has resolved the issue,"06/Jul/07 08:43;maomaode;Ok, after deep investigate the issue, i found that there's nothing related to the namespace, the method name in the CodeGenTest is really misleading. it *MUST* changed to the FromAnotherMessagePart not FromAnotherNamespace.

As  per the spec, if the header from another message part, then it's optional to generate a parameter. As you can see be default cxf wsdl2java generate the same method signature as the JAXWS RI, i.e we don't generate the extra parameter for the soap:header from another message part.

However in cxf wsdl2java we have a flag to generate the optional parameter 

THAT is :  -exsh true

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding the WS-A classes to the JAXBContext in JAXBDataBinding causes extra namespace to be written,CXF-597,12367992,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dandiep,dandiep,24/Apr/07 21:57,29/Aug/07 02:03,14/Mar/19 02:28,18/Jun/07 18:37,2.0-RC,,,,,,,2.0,,,,,,,0,"From the mailing list:


Lately I am noticing some strange behavior.  Many of my responses have
xmlns=""http://www.w3.org/2005/08/addressing/wsdl"" at the root element
under the body, even though the response does not use the WS-Addressing.

Example Response:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
 <soap:Body>
   <ns2:MyOperationResponse
xmlns:ns2=""http://company.com/service/types""
xmlns=""http://www.w3.org/2005/08/addressing/wsdl"">
     <ns2:first>Chris</ns:first>
     <ns2:last>Moesel</ns2:last>
   </ns2: MyOperationResponse >
 </soap:Body>
</soap:Envelope>

Sometimes, however, this strange behavior does NOT occur.  The most
consistent way I have replicated it is by doing a clean install of my
app, jetty:run-war, and then make sure the first request is MTOM
enabled.

Also of note is that when the addressing NS is *not* the default NS (As
described above) it still is often defined as another NS with an alias
(even though it's never used).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-19 15:06:01.045,,,no_permission,,,,,,,,,,,,,111443,,,Tue Jun 19 15:06:01 UTC 2007,,,,,,0|i1a8lz:,267861,,,,,,,,"19/Jun/07 15:06;bravi;The fix for this bug in the JAXBDataBinding seems to have broken the case when the EPR is inside a type. Basically, the problem seems to be the ServiceModelVisitor which is walking the tree to initialize JAXBContext doesn't walk the type tree & so not adding the classes inside types. So the EndpointReference types are not added to the context. Can we fix this in the visitor or add it back in by default?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ContentID generated incorrectly for MTOM attachments,CXF-596,12367960,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,cmoesel,cmoesel,24/Apr/07 17:05,29/Aug/07 18:10,14/Mar/19 02:28,23/May/07 03:50,2.0-RC,,,,,,,2.0,,Transports,,,,,0,"The generated ContentID for MTOM binary attachments is generated incorrectly.  It appears that the entire CID is URL-encoded, causing the @ to be changed to %40.  This in turn causes interoperability problems with Axis2.

Although I am not entirely familiar with the CID spec, the RFC appears to indicate that some level of URL-encoding should occur, but in all its examples, the @ is never URL-encoded:
http://www.apps.ietf.org/rfc/rfc2111.html",,,,,,,,,,,,,,,,,24/Apr/07 17:08;cmoesel;CXF-596.patch;https://issues.apache.org/jira/secure/attachment/12356165/CXF-596.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-30 08:39:40.637,,,no_permission,,,,,,,,,,,,,111442,,,Mon Apr 30 12:16:50 UTC 2007,,,,,,0|i1a8m7:,267862,,,,,,,,"24/Apr/07 17:08;cmoesel;Instead of URL-encoding the whole CID, just URL-encode the parts before and after the @. ",30/Apr/07 08:39;blin;patch applied with revision 531684,"30/Apr/07 12:16;cmoesel;This patch has not yet been applied.

SVN revision 531684 fixed CXF-593, not this one (CXF-596).  This bug still stands.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java '-nexclude' flag appears not to work,CXF-595,12367908,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,24/Apr/07 09:07,29/Aug/07 18:07,14/Mar/19 02:28,24/Apr/07 10:02,,,,,,,,2.0-RC,,Tooling,,,,,0,"wsdl2java '-nexclude' flag appears not to work

  e.g.

      wsdl refers to the WS-Addressing EndpointReferenceType

      wsdl2java -nexclude http://www.w3.org/2005/08/addressing=org.apache.cxf.ws.addressing ...

      the generated code includes classes org.w3._2005._08.addressing.* ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111441,,,2007-04-24 09:07:08.0,,,,,,0|i1a8mf:,267863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
README for demos in Celtix refer to non-existent cxf directory,CXF-592,12367844,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,,janstey,janstey,23/Apr/07 14:30,25/Apr/07 08:20,14/Mar/19 02:28,25/Apr/07 08:20,,,,,,,,2.0-RC,,,,,,,0,"From samples\README.txt

... 

 For UNIX:
  CXF_HOME=/<installation_directory>/cxf

... 

There is no cxf subdirectory, I'm assuming it shouldn't be there",,,,,,,,,,,,,,,,,23/Apr/07 14:31;janstey;cxf-592.patch;https://issues.apache.org/jira/secure/attachment/12356054/cxf-592.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111438,,,Mon Apr 23 14:31:39 UTC 2007,,,,,,0|i1a8n3:,267866,,,,,,,,23/Apr/07 14:31;janstey;Minor readme update.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxWsImplementorImpl.getServiceName() does not return the proper service name,CXF-590,12367830,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,jgenender,jgenender,23/Apr/07 11:29,23/Apr/07 15:29,14/Mar/19 02:28,23/Apr/07 15:29,2.0-M1,,,,,,,2.0-RC,,,,,,,0,"JaxWsImplementorImpl.getServiceName() does not return the proper service name since it loops up the wsAnnotations array without stopping on the first find of a serviceName or targetName.

The loop initial loop in the getServiceName() method should stop on a first find.  If it doesn't, it returns ancestors which would override its subclasses.  The subclasses should have priority.

This same loop is an issue in a few other methods as well.

Patch attached.",,,,,,,,,,,,,,,,,23/Apr/07 11:31;jgenender;CXF-590.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12356040/CXF-590.jgenender.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-23 15:29:53.144,,,no_permission,,,,,,,,,,,,,111436,,,Mon Apr 23 15:29:53 UTC 2007,,,,,,0|i146k7:,232526,,,,,,,,23/Apr/07 15:29;dandiep;I applied this in my last commit. Thanks Jeff.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JCA demo can not work ,CXF-570,12367783,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,23/Apr/07 03:06,25/Apr/07 09:38,14/Mar/19 02:28,25/Apr/07 09:38,2.0-RC,,,,,,,2.0-RC,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111416,,,Mon Apr 23 07:50:52 UTC 2007,,,,,,0|i1a8qv:,267883,,,,,,,,"23/Apr/07 06:40;njiang;The outbound demo (hello_world_soap_http) run with these stack trace:
14:18:58,950 INFO  [Http11Protocol] Starting Coyote HTTP/1.1 on http-0.0.0.0-8080
14:18:59,320 INFO  [ChannelSocket] JK: ajp13 listening on /0.0.0.0:8009
14:18:59,360 INFO  [JkMain] Jk running ID=0 time=0/125  config=null
14:18:59,786 INFO  [Server] JBoss (MX MicroKernel) [4.0.3 (build: CVSTag=JBoss_4_0_3 date=200510042324)] Started in 1m:11s:51ms
14:19:59,581 INFO  [STDOUT] Apr 23, 2007 2:19:59 PM org.apache.cxf.jca.cxf.ConnectionFactoryImpl getConnection
INFO: connecting to: interface org.apache.hello_world_soap_http.Greeter
14:19:59,622 INFO  [STDOUT] Apr 23, 2007 2:19:59 PM org.apache.cxf.jca.cxf.ManagedConnectionFactoryImpl createManagedConnection
INFO: create connection, subject=null connReqInfo=interface org.apache.hello_world_soap_http.Greeter:{http://apache.org/hello_world_soap_http}SoapPort:{http://apache.org/hello_world_soap_http}SOAPService@file:/local/software/jboss-4.0.3/server/default/tmp/deploy/tmp48273helloworld.war/WEB-INF/classes/wsdl/hello_world.wsdl
14:20:00,404 INFO  [STDOUT] Apr 23, 2007 2:20:00 PM org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromWSDL
INFO: Creating Service {http://apache.org/hello_world_soap_http}SOAPService from WSDL: file:/local/software/jboss-4.0.3/server/default/tmp/deploy/tmp48273helloworld.war/WEB-INF/classes/wsdl/hello_world.wsdl
14:20:00,474 INFO  [STDOUT] org.jboss.resource.JBossResourceException: Unchecked throwable in ManagedConnection.getConnection() cl=org.jboss.resource.connectionmanager.NoTxConnectionManager$NoTxConnectionEventListener@1499616[state=NORMAL mc=[org.apache.cxf.jca.cxf.ManagedConnectionImpl:11462920:ManagedConnection[interface org.apache.hello_world_soap_http.Greeter:{http://apache.org/hello_world_soap_http}SoapPort:{http://apache.org/hello_world_soap_http}SOAPService@file:/local/software/jboss-4.0.3/server/default/tmp/deploy/tmp48273helloworld.war/WEB-INF/classes/wsdl/hello_world.wsdl] handles=0 lastUse=1177309200473 permit=false trackByTx=false mcp=org.jboss.resource.connectionmanager.JBossManagedConnectionPool$OnePool@1489c06 context=org.jboss.resource.connectionmanager.InternalManagedConnectionPool@1fb7cbb]; - nested throwable: (java.lang.NullPointerException)
14:20:00,475 INFO  [STDOUT]     at org.jboss.resource.JBossResourceException.rethrowAsResourceException(JBossResourceException.java:49)
14:20:00,475 INFO  [STDOUT]     at org.jboss.resource.connectionmanager.BaseConnectionManager2.allocateConnection(BaseConnectionManager2.java:476)
14:20:00,512 INFO  [STDOUT]     at org.jboss.resource.connectionmanager.BaseConnectionManager2$ConnectionManagerProxy.allocateConnection(BaseConnectionManager2.java:894)
14:20:00,512 INFO  [STDOUT]     at org.apache.cxf.jca.cxf.ConnectionFactoryImpl.getConnection(ConnectionFactoryImpl.java:99)
14:20:00,512 INFO  [STDOUT]     at demo.servlet.HelloWorldServlet.getServiceConnection(HelloWorldServlet.java:83)
14:20:00,512 INFO  [STDOUT]     at demo.servlet.HelloWorldServlet.getResponseFromWebService(HelloWorldServlet.java:120)
14:20:00,548 INFO  [STDOUT]     at demo.servlet.HelloWorldServlet.writeMainBody(HelloWorldServlet.java:90)
14:20:00,548 INFO  [STDOUT]     at demo.servlet.DemoServletBase.writeBody(Unknown Source)
14:20:00,549 INFO  [STDOUT]     at demo.servlet.DemoServletBase.doGet(Unknown Source)
14:20:00,549 INFO  [STDOUT]     at demo.servlet.HelloWorldServlet.doGet(HelloWorldServlet.java:52)
14:20:00,549 INFO  [STDOUT]     at javax.servlet.http.HttpServlet.service(HttpServlet.java:697)
14:20:00,549 INFO  [STDOUT]     at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
14:20:00,585 INFO  [STDOUT]     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
14:20:00,585 INFO  [STDOUT]     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
14:20:00,585 INFO  [STDOUT]     at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:81)
14:20:00,586 INFO  [STDOUT]     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
14:20:00,586 INFO  [STDOUT]     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
14:20:00,625 INFO  [STDOUT]     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
14:20:00,626 INFO  [STDOUT]     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
14:20:00,664 INFO  [STDOUT]     at org.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:39)
14:20:00,665 INFO  [STDOUT]     at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:159)
14:20:00,665 INFO  [STDOUT]     at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:59)
14:20:00,665 INFO  [STDOUT]     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
14:20:00,665 INFO  [STDOUT]     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
14:20:00,665 INFO  [STDOUT]     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
14:20:00,665 INFO  [STDOUT]     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
14:20:00,707 INFO  [STDOUT]     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
14:20:00,707 INFO  [STDOUT]     at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
14:20:00,708 INFO  [STDOUT]     at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
14:20:00,708 INFO  [STDOUT]     at org.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)
14:20:00,708 INFO  [STDOUT]     at java.lang.Thread.run(Thread.java:595)
14:20:00,749 INFO  [STDOUT] Caused by: java.lang.NullPointerException
14:20:00,749 INFO  [STDOUT]     at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeParameter(JaxWsServiceFactoryBean.java:370)
14:20:00,789 INFO  [STDOUT]     at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeClassInfo(JaxWsServiceFactoryBean.java:351)
14:20:00,789 INFO  [STDOUT]     at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperation(JaxWsServiceFactoryBean.java:180)
14:20:00,789 INFO  [STDOUT]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeWSDLOperations(ReflectionServiceFactoryBean.java:301)
14:20:00,789 INFO  [STDOUT]     at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperations(JaxWsServiceFactoryBean.java:189)
14:20:00,790 INFO  [STDOUT]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:194)
14:20:00,831 INFO  [STDOUT]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:244)
14:20:00,831 INFO  [STDOUT]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:135)
14:20:00,831 INFO  [STDOUT]     at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:82)
14:20:00,832 INFO  [STDOUT]     at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:44)
14:20:00,832 INFO  [STDOUT]     at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:82)
14:20:00,872 INFO  [STDOUT]     at org.apache.cxf.jaxws.ServiceImpl.createPort(ServiceImpl.java:307)
14:20:00,872 INFO  [STDOUT]     at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:230)
14:20:00,872 INFO  [STDOUT]     at javax.xml.ws.Service.getPort(Service.java:94)
14:20:00,872 INFO  [STDOUT]     at org.apache.cxf.jca.cxf.ManagedConnectionImpl.getCXFServiceFromBus(ManagedConnectionImpl.java:167)
14:20:00,872 INFO  [STDOUT]     at org.apache.cxf.jca.cxf.ManagedConnectionImpl.initialiseCXFService(ManagedConnectionImpl.java:105)
14:20:00,911 INFO  [STDOUT]     at org.apache.cxf.jca.cxf.ManagedConnectionImpl.getConnection(ManagedConnectionImpl.java:114)
14:20:00,911 INFO  [STDOUT]     at org.jboss.resource.connectionmanager.BaseConnectionManager2.allocateConnection(BaseConnectionManager2.java:471)
14:20:00,911 INFO  [STDOUT]     ... 29 more
","23/Apr/07 07:50;njiang;both inbound and outbound demos build.xml need to be updated
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JBI sample doesn't work,CXF-569,12367782,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,23/Apr/07 03:03,29/Aug/07 18:10,14/Mar/19 02:28,11/Jun/07 01:56,,,,,,,,2.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111415,,,2007-04-23 03:03:34.0,,,,,,0|i13ze7:,231364,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Samples don't work ,CXF-568,12367781,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,23/Apr/07 02:43,25/Apr/07 09:34,14/Mar/19 02:28,25/Apr/07 09:34,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"jms_queue and jms_pubsub in the cxf kit sample can't work because of the wsdlLocation is not generated by tools for SEI,
It can be fixed by adding the wsdlLocation attribute to the serviceImpl's WebService annotation.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111414,,,2007-04-23 02:43:53.0,,,,,,0|i140of:,231572,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
servlet sample doesn't work,CXF-567,12367780,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,23/Apr/07 02:24,25/Apr/07 09:37,14/Mar/19 02:28,25/Apr/07 09:37,,,,,,,,2.0-RC,,,,,,,0,,,,,,,,,,,,CXF-571,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-23 03:57:18.928,,,no_permission,,,,,,,,,,,,,111413,,,Mon Apr 23 06:05:09 UTC 2007,,,,,,0|i0v29r:,179341,,,,,,,,"23/Apr/07 03:36;ffang;cann't get hello_world.wsdl on client side

the error in tomcat log is

WARNING: Can't find the the request for http://localhost:8080/helloworld/services/hello_world's Observer
Apr 23, 2007 10:39:50 AM org.apache.cxf.transport.servlet.ServletController invoke
WARNING: Can't find the the request for http://localhost:8080/helloworld/services/hello_world's Observer
Apr 23, 2007 10:39:51 AM org.apache.cxf.transport.servlet.ServletController invoke
WARNING: Can't find the the request for http://localhost:8080/helloworld/services/hello_world's Observer
Apr 23, 2007 10:40:06 AM org.apache.cxf.transport.servlet.ServletController invoke
WARNING: Can't find the the request for http://localhost:8080/helloworld/services/hello_world's Observer
Apr 23, 2007 10:40:06 AM org.apache.cxf.transport.servlet.ServletController invoke
WARNING: Can't find the the request for http://localhost:8080/helloworld/services/hello_world's Observer
Apr 23, 2007 10:40:06 AM org.apache.cxf.transport.servlet.ServletController invoke
WARNING: Can't find the the request for http://localhost:8080/helloworld/services/hello_world's Observer
~
","23/Apr/07 03:57;maomaode;The issue is kind of duplication with CXF-574.
But this issue is tested under Linux, and CXF-574 is under Windows Vista","23/Apr/07 04:09;dandiep;FYI - This happens because the address in the <jaxws:endpoint> is ""/services/hello_world"" instead of ""/helloworld/services/hello_world""","23/Apr/07 04:10;dandiep;Also, we could change the CXFServlet/ServletController so the context path didn't have to prepended. i.e. we could look up the Observer at ""http://localhost/services/hello_world"" instead of ""http://localhost/helloworld/services/hello_world""","23/Apr/07 04:29;dandiep;Actually, I there is a problem with the bundle jar and servlets at the moment that I just found. I'm working on fixing this right now.","23/Apr/07 06:05;dandiep;I've committed the necessary fixes for this to SVN now. You should no longer have to stick the context path in the jaxws:endpoint address. It should now just work with ""/services/hello_world""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSS4J constant incorrectly used in WS-Security tests,CXF-566,12367690,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dandiep,coheig,coheig,20/Apr/07 15:42,20/Apr/07 16:10,14/Mar/19 02:28,20/Apr/07 16:10,,,,,,,,2.0-RC,,WS-* Components,,,,,0,"
A WSS4J constant is incorrectly used in the WS-Security tests RoundTripTest.java and WSS4JInOutTest.java.
Specifically, for both signing and encrypting, the following is attached to the message;

msg.put(WSHandlerConstants.PASSWORD_TYPE, WSConstants.PASSWORD_TEXT);

However, this is irrelevant as the WSHandlerConstants.PASSWORD_TYPE tag is not processed for these actions, and
should only be used for UsernameToken actions. In addition, WSHandlerConstants.PASSWORD_TYPE should only take the values WSConstants.PW_DIGEST or WSConstants.PW_TEXT.

See the attached patch to correct this. Also, two tests are added to WSS4JOutInterceptorTest.java, which check that both password types work correctly for UsernameToken actions.",,,,,,,,,,,,,,,,,20/Apr/07 15:43;coheig;passwordtype.patch;https://issues.apache.org/jira/secure/attachment/12355936/passwordtype.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-20 16:10:01.847,,,no_permission,,,,,,,,,,,,,111412,,,Fri Apr 20 16:10:01 UTC 2007,,,,,,0|i1a8r3:,267884,,,,,,,,20/Apr/07 16:10;dandiep;Applied! Thanks Colm. Sometimes I wonder that the things I write work at all... ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wsdltojava cannot generate code for a wsdl file with import tag,CXF-565,12367675,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,julien.lecolloec@iona.com,julien.lecolloec@iona.com,20/Apr/07 13:43,29/Aug/07 18:07,14/Mar/19 02:28,24/Apr/07 09:15,,,,,,,,2.0-RC,,Tooling,,,,,0,"Wsdltojava cannot generate types, SEI with a wsdl file which has an import tag .



SimpleServiceDocLit.wsdl :

<?xml version=""1.0"" encoding=""UTF-8""?>
<definitions name=""SimpleService"" targetNamespace=""http://www.iona.com/bus/tests""
    xmlns=""http://schemas.xmlsoap.org/wsdl/""
    xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
    xmlns:tns=""http://www.iona.com/bus/tests""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
    xmlns:corba=""http://schemas.iona.com/bindings/corba""
    xmlns:xsd1=""http://www.iona.com/bus/tests/types"">
    

    <types>
        <schema targetNamespace=""http://www.iona.com/bus/tests/types""
            xmlns=""http://www.w3.org/2001/XMLSchema""
            xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
            <import namespace=""http://www.iona.com/bus/tests/types"" schemaLocation=""inner.xsd""/>

            <!-- dot type -->
            <simpleType name=""TypeTest.Beer"">
                <restriction base=""string"">
                    <enumeration value=""Wheat""/>
                    <enumeration value=""Lambic""/>
                    <enumeration value=""Bitter""/>
                    <enumeration value=""Stout""/>
                    <enumeration value=""Porter""/>
                </restriction>
            </simpleType>
            
            <!-- pingMe types -->
            <element name=""pingMe"">
                <complexType />
            </element>
            <element name=""pingMeResponse"">
                <complexType />
            </element>

            <!-- sayHi types -->
            <element name=""sayHi"">
                <complexType />
            </element>
            <element name=""sayHiResponse"">
                <complexType>
                    <sequence>
                        <element name=""responseType"" type=""xsd:string"" />
                    </sequence>
                </complexType>
            </element>

            <!-- sayHello types -->
            <element name=""responseType"" type=""xsd:string""/>

            <!-- greetMe types -->
            <element name=""greetMe"">
                <complexType>
                    <sequence>
                        <element name=""requestType"" type=""xsd:string"" />
                    </sequence>
                </complexType>
            </element>
            <element name=""greetMeResponse"">
                <complexType>
                    <sequence>
                        <element name=""responseType"" type=""xsd:string"" />
                    </sequence>
                </complexType>
            </element>

            <!-- exchangeDetails types -->
            <element name=""exchangeDetailsElem"" type=""xsd1:Details""/>
            <complexType name=""Details"">
                <sequence>
                    <element name=""age"" type=""xsd:int""/>
                    <element name=""address"" type=""xsd:string""/>
                    <element name=""name"" type=""xsd:string""/>
                    <element name=""inner"" type=""xsd1:Inner""/>
                    <element maxOccurs=""unbounded"" minOccurs=""0"" name=""value"" type=""xsd:int""/>
                </sequence>
            </complexType>

            <element name=""stringElem"" type=""xsd:string""/>
            <complexType name=""CompoundArray"">
                <sequence>
                    <element maxOccurs=""unbounded"" minOccurs=""0"" name=""array1"" type=""xsd:string""/>
                    <element maxOccurs=""unbounded"" minOccurs=""0"" name=""array2"" type=""xsd1:Details""/>
                    <element name=""address"" type=""xsd:string""/>
                    <element name=""date"" type=""xsd:dateTime""/>
                    <element name=""dec"" type=""xsd:decimal""/>
                </sequence>
            </complexType>

            <element name=""echo"">
                <complexType>
                    <sequence>
                        <element name=""x"" type=""xsd:string""/>
                        <element name=""y"" type=""xsd:string""/>
                    </sequence>
                </complexType>
            </element>

            <element name=""echoResponse"">
                <complexType>
                    <sequence>
                        <element name=""return"" type=""xsd:string""/>
                        <element name=""y"" type=""xsd:string""/>
                        <element name=""z"" type=""xsd:string""/>
                    </sequence>
                </complexType>
            </element>

            <element name=""Compound"" type=""xsd1:CompoundArray""/>

            <element name=""GetCustomer"">
                <complexType>
                    <sequence>
                        <element name=""MSISDN"" type=""string""/>
                        <element maxOccurs=""1"" minOccurs=""0"" name=""agentUserName""
                            type=""string""/>
                        <element maxOccurs=""1"" minOccurs=""0"" name=""ChannelID""
                            type=""string""/>
                        <element name=""testEnum"" type=""xsd1:TestEnum""/>
                        <element maxOccurs=""unbounded"" minOccurs=""1"" name=""CustomerArrayIn"" 
                            type=""xsd1:Customer""/>
                        <element maxOccurs=""unbounded"" minOccurs=""1"" name=""CustomerArrayInOut"" 
                            type=""xsd1:Customer""/>
                    </sequence>
                </complexType>
            </element>

            <element name=""GetCustomerResponse"">
                <complexType>
                    <sequence>
                        <element maxOccurs=""1"" minOccurs=""1"" name=""GetCustomerResult""
                            type=""xsd1:Customer""/>
                        <element maxOccurs=""1"" minOccurs=""1"" name=""OutStatusCode"" type=""int""/>
                        <element maxOccurs=""1"" minOccurs=""1"" name=""OutSalutation"" type=""xsd1:Customer""/>
                        <element maxOccurs=""unbounded"" minOccurs=""1"" name=""CustomerArrayInOut"" 
                            type=""xsd1:Customer""/>
                        <element maxOccurs=""unbounded"" minOccurs=""1"" name=""CustomerArrayOut"" 
                            type=""xsd1:Customer""/>
                    </sequence>
                </complexType>
            </element>

            <xsd:simpleType name=""TestEnum"">
                <xsd:restriction base=""xsd:string"">
                    <xsd:enumeration value=""Low""/>
                    <xsd:enumeration value=""Medium""/>
                    <xsd:enumeration value=""High""/>
                </xsd:restriction>
            </xsd:simpleType>

            <complexType name=""Customer"">
                <sequence>
                    <element maxOccurs=""1"" minOccurs=""1"" name=""StatusCode"" type=""int""/>
                    <element maxOccurs=""1"" minOccurs=""0"" name=""UserID"" type=""string""/>
                    <element maxOccurs=""1"" minOccurs=""0"" name=""Salutation"" type=""string""/>
                    <element maxOccurs=""1"" minOccurs=""0"" name=""FirstName"" type=""string""/>
                </sequence>
            </complexType>
 
            <element name=""TypeTest.enum_inout"">
                <complexType>
                    <sequence>
                        <element name=""val"" type=""xsd1:TypeTest.Beer""/>
                    </sequence>
                </complexType>
            </element>
            <element name=""TypeTest.enum_inoutResult"">
                <complexType>
                    <sequence>
                        <element name=""val"" type=""xsd1:TypeTest.Beer""/>
                    </sequence>
                </complexType>
            </element>

            
        </schema>
    </types>

    <!-- pingMe messages -->
    <message name=""pingMeRequest"">
        <part element=""xsd1:pingMe"" name=""in"" />
    </message>
    <message name=""pingMeResponse"">
        <part element=""xsd1:pingMeResponse"" name=""out"" />
    </message>

    <!-- sayHi messages -->
    <message name=""sayHiRequest"">
        <part element=""xsd1:sayHi"" name=""in"" />
    </message>
    <message name=""sayHiResponse"">
        <part element=""xsd1:sayHiResponse"" name=""out"" />
    </message>

    <!-- sayHello messages -->
    <message name=""sayHelloRequest""/>
    <message name=""sayHelloResponse"">
        <part element=""xsd1:responseType"" name=""theResponse""/>
    </message>

    <!-- greetMe messages -->
    <message name=""greetMeRequest"">
        <part element=""xsd1:greetMe"" name=""in"" />
    </message>
    <message name=""greetMeResponse"">
        <part element=""xsd1:greetMeResponse"" name=""out"" />
    </message>

    <!-- exchangeDetails messages -->
    <message name=""exchangeDetailsRequest"">
        <part element=""xsd1:exchangeDetailsElem"" name=""detailsIn""/>
    </message>
    <message name=""exchangeDetailsResponse"">
        <part element=""xsd1:exchangeDetailsElem"" name=""return""/>
    </message>

    <message name=""say_goodbye"">
        <part element=""xsd1:Compound"" name=""goodbye""/>
    </message>

    <message name=""say_goodbyeResponse"">
        <part element=""xsd1:Compound"" name=""return""/>
    </message>

    <message name=""send_greeting"">
        <part element=""xsd1:stringElem"" name=""greeting""/>
    </message>

    <message name=""send_greetingResponse"">
        <part element=""xsd1:stringElem"" name=""return""/>
    </message>

    <message name=""echoChar"">
        <part element=""xsd1:echo"" name=""parameters""/>
    </message>

    <message name=""echoCharResponse"">
        <part element=""xsd1:echoResponse"" name=""parameters""/>
    </message>

    <message name=""failureOccured"">
        <part element=""xsd1:stringElem"" name=""exceptionType""/>
    </message>

    <message name=""errorOccured"">
        <part element=""xsd1:stringElem"" name=""exceptionType""/>
    </message>

    <message name=""GetCustomerSoapIn"">
        <part element=""xsd1:GetCustomer"" name=""parameters""/>
    </message>

    <message name=""GetCustomerSoapOut"">
        <part element=""xsd1:GetCustomerResponse"" name=""parameters""/>
    </message>

    <message name=""TypeTest.enum_inout"">
        <part element=""xsd1:TypeTest.enum_inout"" name=""parameters""/>
    </message>
    <message name=""TypeTest.enum_inoutResponse"">
        <part element=""xsd1:TypeTest.enum_inoutResult"" name=""parameters""/>
    </message>

    <portType name=""SimpleServicePortType"">
        <operation name=""pingMe"">
            <input message=""tns:pingMeRequest"" name=""pingMeRequest"" />
            <output message=""tns:pingMeResponse""  name=""pingMeResponse"" />
        </operation>

        <operation name=""sayHi"">
            <input message=""tns:sayHiRequest"" name=""sayHiRequest"" />
            <output message=""tns:sayHiResponse"" name=""sayHiResponse"" />
        </operation>

        <operation name=""sayHello"">
            <input message=""tns:sayHelloRequest"" name=""sayHelloRequest""/>
            <output message=""tns:sayHelloResponse"" name=""sayHelloResponse""/>
        </operation>

        <operation name=""greetMe"">
            <input message=""tns:greetMeRequest"" name=""greetMeRequest"" />
            <output message=""tns:greetMeResponse"" name=""greetMeResponse"" />
        </operation>

        <operation name=""exchangeDetails"">
             <input message=""tns:exchangeDetailsRequest"" name=""exchangeDetailsRequest""/>
             <output message=""tns:exchangeDetailsResponse"" name=""exchangeDetailsResponse""/>
        </operation>

        <operation name=""say_goodbye"">
            <input message=""tns:say_goodbye"" name=""say_goodbye""/>
            <output message=""tns:say_goodbyeResponse"" name=""say_goodbyeResponse""/>
        </operation>

        <operation name=""send_greeting"">
            <input message=""tns:send_greeting"" name=""send_greeting""/>
            <output message=""tns:send_greetingResponse"" name=""send_greetingResponse""/>
        </operation>

        <operation name=""echoChar"">
            <input message=""tns:echoChar""/>
            <output message=""tns:echoCharResponse""/>
            <fault  name=""failure"" message=""tns:failureOccured""/>
            <fault  name=""error"" message=""tns:errorOccured""/>
        </operation>

        <operation name=""GetCustomer"">
            <input message=""tns:GetCustomerSoapIn"" name=""GetCustomer""/>
            <output message=""tns:GetCustomerSoapOut"" name=""GetCustomerResponse""/>
        </operation>

    </portType>

    <portType name=""simple.simpleServicePortType"">
        <operation name=""pingMe"">
            <input message=""tns:pingMeRequest"" name=""pingMeRequest"" />
            <output message=""tns:pingMeResponse""  name=""pingMeResponse"" />
        </operation>
        
        <operation name=""enum_inout"">
            <input message=""tns:TypeTest.enum_inout"" name=""enum_inout""/>
            <output message=""tns:TypeTest.enum_inoutResponse"" name=""enum_inoutResponse""/>
        </operation>
    </portType>

    <binding name=""SimpleServiceBinding"" type=""tns:SimpleServicePortType"">
        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>

        <operation name=""pingMe"">
            <soap:operation soapAction="""" style=""document""/>
            <input name=""pingMeRequest"">
                <soap:body use=""literal""/>
            </input>
            <output name=""pingMeResponse"">
                <soap:body use=""literal""/>
            </output>
        </operation>

        <operation name=""sayHi"">
            <soap:operation soapAction="""" style=""document""/>
            <input name=""sayHiRequest"">
                <soap:body use=""literal""/>
            </input>
            <output name=""sayHiResponse"">
                <soap:body use=""literal""/>
            </output>
        </operation>

        <operation name=""sayHello"">
            <soap:operation soapAction="""" style=""document""/>
            <input name=""sayHelloRequest"">
                <soap:body use=""literal""/>
            </input>
            <output name=""sayHelloResponse"">
                <soap:body use=""literal""/>
            </output>
        </operation>

        <operation name=""greetMe"">
            <soap:operation soapAction="""" style=""document""/>
            <input name=""greetMeRequest"">
                <soap:body use=""literal""/>
            </input>
            <output name=""greetMeResponse"">
                <soap:body use=""literal""/>
            </output>
        </operation>

        <operation name=""exchangeDetails"">
            <soap:operation soapAction=""http://www.iona.com/bus/tests"" style=""document""/>
            <input name=""exchangeDetailsRequest"">
                <soap:body use=""literal""/>
            </input>
            <output name=""exchangeDetailsResponse"">
                <soap:body use=""literal""/>
            </output>
        </operation>

        <operation name=""say_goodbye"">
            <soap:operation soapAction=""http://www.iona.com/bus/tests"" style=""document""/>
            <input name=""say_goodbye"">
                <soap:body use=""literal""/>
            </input>
            <output name=""say_goodbyeResponse"">
                <soap:body use=""literal""/>
            </output>
        </operation>

        <operation name=""send_greeting"">
            <soap:operation soapAction=""http://www.iona.com/bus/tests"" style=""document""/>
            <input name=""send_greeting"">
                <soap:body use=""literal""/>
            </input>
            <output name=""send_greetingResponse"">
                <soap:body use=""literal""/>
            </output>
        </operation>

        <operation name=""echoChar"">
            <soap:operation soapAction=""http://soapinterop.org/"" style=""document""/>
            <input>
                <soap:body use=""literal""/>
            </input>
            <output>
                <soap:body use=""literal""/>
            </output>
        </operation>

        <operation name=""GetCustomer"">
            <soap:operation soapAction=""http://www.mi-pay.com/WebServices/GetCustomer""
                style=""document""/>
            <input name=""GetCustomer"">
                <soap:body use=""literal""/>
            </input>
            <output name=""GetCustomerResponse"">
                <soap:body use=""literal""/>
            </output>
        </operation>
        </binding>
        
    <binding name=""simple.simpleServiceBinding"" type=""tns:simple.simpleServicePortType"">
        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>

        <operation name=""pingMe"">
            <soap:operation soapAction="""" style=""document""/>
            <input name=""pingMeRequest"">
                <soap:body use=""literal""/>
            </input>
            <output name=""pingMeResponse"">
                <soap:body use=""literal""/>
            </output>
        </operation>
        
        <operation name=""enum_inout"">
            <corba:operation name=""enum_inout"">
                <corba:param idltype=""corbatm:TypeTest.Beer"" mode=""inout"" name=""val""/>
            </corba:operation>
            <input name=""enum_inout""/>
            <output name=""enum_inoutResponse""/>
        </operation>

    </binding>

    <service name=""SimpleServiceService"">
        <port binding=""tns:SimpleServiceBinding"" name=""SimplePort"">
            <soap:address location=""http://localhost:9900/SimpleService/SimplePort""/>
        </port>
    </service>
    
    <service name=""simple.simpleServiceService"">
        <port binding=""tns:simple.simpleServiceBinding"" name=""SimplePort"">
            <soap:address location=""http://localhost:9999/SimpleService/SimplePort""/>
        </port>
    </service>

</definitions>


inner.xsd :

<?xml version=""1.0"" encoding=""UTF-8""?>
<xsd:schema targetNamespace=""http://www.iona.com/bus/tests/types""
        xmlns=""http://www.w3.org/2001/XMLSchema""
        xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
        elementFormDefault=""unqualified"" 
        attributeFormDefault=""unqualified"">

    <complexType name=""Inner"">
        <all>
            <element name=""e1"" type=""xsd:int""/>
            <element name=""e2"" type=""xsd:string""/>
        </all>
    </complexType>
</xsd:schema>

",,,,,,,,,,,,,,,,,20/Apr/07 13:44;julien.lecolloec@iona.com;SimpleServiceDocLit.wsdl;https://issues.apache.org/jira/secure/attachment/12355923/SimpleServiceDocLit.wsdl,20/Apr/07 13:44;julien.lecolloec@iona.com;inner.xsd;https://issues.apache.org/jira/secure/attachment/12355924/inner.xsd,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-04-24 06:56:15.401,,,no_permission,,,,,,,,,,,,,111411,,,Tue Apr 24 06:56:15 UTC 2007,,,,,,0|i0v27j:,179331,,,,,,,,"24/Apr/07 06:56;maomaode;I tested with command line tool
I have to comment out the <corba> binding operation, and then change the schema <import> to <include>
After that, i can generate code without errors.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS Context not injected for RESTful service implementations,CXF-558,12367599,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,dstanley,dstanley,19/Apr/07 20:20,14/Jun/07 08:08,14/Mar/19 02:28,14/Jun/07 08:08,2.0-RC,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"The context is not injected for RESTful services. You can see this by modifying the the JUnit testcase below: 

<cxf>/trunk/rt/bindings/http/src/test/java/org/apache/cxf/binding/http/bare/CustomerService.java

Added the @Resource annotation as shown below ..

import javax.annotation.Resource;
...

import javax.xml.ws.WebServiceContext;

...

// END SNIPPET: service
@WebService(targetNamespace = ""http://cxf.apache.org/jra"")
public class CustomerService {
    long currentId = 1;
    Map<Long, Customer> customers = new HashMap<Long, Customer>();

    @Resource
    private WebServiceContext context;
 
    @Post
    @HttpResource(location = ""/customers"")
    @WebMethod
    public void addCustomer(@WebParam(name = ""customer"") Customer c) {
        long id = ++currentId;
        c.setId(id);
        customers.put(id, c);
        
        // Context is null .. 
        MessageContext mc = context.getMessageContext();
   }      

",Not env specific,,,,,,,,,,,,,,,,25/Apr/07 16:57;dstanley;bare.zip;https://issues.apache.org/jira/secure/attachment/12356255/bare.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-23 04:06:51.553,,,no_permission,,,,,,,,,,,,,111404,,,Wed Apr 25 20:11:42 UTC 2007,,,,,,0|i1a8rz:,267888,,,,,,,,23/Apr/07 04:06;dandiep;Moving these issues to 2.1 as I don't think we'll get them for 2.0. Feel free to switch reschedule if you feel appropriate.,"25/Apr/07 16:13;dstanley;Hey Dan,
Wondeirng can you suggest a clean workaround for this in the mean time. I think we need an easy way to set outgoing HTTP headers for RESTful impls. 

I've tried declaring an instance of org.apache.cxf.jaxws.context.WebServiceContextImpl in the hope I could get at it via the threadlocal but the context is still null.

Thanks
/Dave

","25/Apr/07 16:32;dandiep;Ah, apologies, I probably shouldn't have grouped this issue in the 2.1 bag. 

How are you configuring your service? Provided you use the JaxWsServerFactory, you should get the WebServiceServiceContext invoked. BTW, the @Resource may have to be protected instead of private for it to work.","25/Apr/07 16:57;dstanley;Testcase - have the following below ..

trunk\rt\bindings\http\src\test\java\org\apache\cxf\binding\http\bare

Then debug ClientTestRails.java and stick a breakpoint in CustomerServiceRails.java .. (its really a server despite filename).

Send any request to the service and try and view context. Its null despite the fact that we are using JaxWsServerFactoryBean to create the service.

 JaxWsServerFactoryBean sf = new JaxWsServerFactoryBean();
        sf.setBus(getBus());
        sf.setBindingId(HttpBindingFactory.HTTP_BINDING_ID);
        sf.setServiceClass(CustomerServiceRails.class);
        sf.getServiceFactory().setWrapped(false);
        sf.setAddress(""http://localhost:9001/"");
",25/Apr/07 16:59;dstanley;Changing @Resource to be protected doesn't seem to help.,"25/Apr/07 20:11;dandiep;OK, thanks Dave. Not sure whats going on, I'll have to take a deeper look.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL location in binding file must be an exact string match to wsdl2java arg ,CXF-556,12367587,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,janstey,janstey,19/Apr/07 16:05,29/Aug/07 18:07,14/Mar/19 02:28,20/Apr/07 08:25,,,,,,,,2.0-RC,,,,,,,0,"The wsdl URI in a binding file and wsdl URI in a wsdl2java call need to be exact. String comparison is used instead of URI comparison. For example, as shown below, /a/path/to/hello_world.wsdl is not considered the same as /a/path/to/../to/hello_world.wsdl.

In build.xml:
...
<wsdl2java file=""hello_world.wsdl"" dir=""/a/path/to"" bindingfile=""binding.xml""/>
...

In binding.xml:
<bindings wsdlLocation=""/a/path/to/../to/hello_world.wsdl""
...

FYI: Part of the problem exists in tools/wsdlto/frontend/jaxws/src/main/java/org/apache/cxf/tools/wsdlto/frontend/jaxws/customiztion/CustomizationParser.java on the following line:
            if (wsdlURI.toString().equals(this.wsdlURL)) {

",,,,,,,,,,,,,,,,,19/Apr/07 18:30;janstey;cxf-556.patch;https://issues.apache.org/jira/secure/attachment/12355851/cxf-556.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111402,,,Thu Apr 19 18:30:18 UTC 2007,,,,,,0|i0v37z:,179495,,,,,,,,19/Apr/07 18:30;janstey;Patch to fix the issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
many scripts/readmes still reference cxf-incubator in lib directory,CXF-555,12367568,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,janstey,janstey,19/Apr/07 12:36,29/Aug/07 18:07,14/Mar/19 02:28,20/Apr/07 08:24,,,,,,,,2.0-RC,,,,,,,0,These files should be referencing modules/cxf-manifest-incubator.jar.,,,,,,,,,,,,,,,,,19/Apr/07 12:39;janstey;cxf-555.patch;https://issues.apache.org/jira/secure/attachment/12355832/cxf-555.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111401,,,Thu Apr 19 12:39:00 UTC 2007,,,,,,0|i0v333:,179473,,,,,,,,19/Apr/07 12:39;janstey;Patch to fix the issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mtosi_1.1/alarm_retrieval sample does not work,CXF-553,12367555,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,blin,blin,19/Apr/07 10:41,29/Aug/07 02:05,14/Mar/19 02:28,20/Apr/07 08:24,2.0-RC,,,,,,,2.0-RC,,Build system,,,,,0,"following error occurred:

[java] org.apache.cxf.tools.common.ToolException: External binding file: file:/local/cxf/trunk/distribution/target/cxf-2.0-incubator-RC-SNAPSHOT/samples/mtosi_1.1/alarm_retrieval/build/async_binding.xml does not point to the specified wsdl url:file:/local/cxf/trunk/distribution/target/cxf-2.0-incubator-RC-SNAPSHOT/samples/mtosi_1.1/alarm_retrieval/../wsdl/transport/http/FaultServiceSOAP_HTTP.wsdl
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.customiztion.CustomizationParser.addBinding(CustomizationParser.java:403)
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.customiztion.CustomizationParser.parse(CustomizationParser.java:100)
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuilder.customize(JAXWSDefinitionBuilder.java:116)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:123)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:213)
     [java]     at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)

BUILD FAILED
/local/cxf/trunk/distribution/target/cxf-2.0-incubator-RC-SNAPSHOT/samples/common_build.xml:94: The following error occurred while executing this line:
/local/cxf/trunk/distribution/target/cxf-2.0-incubator-RC-SNAPSHOT/samples/mtosi_1.1/alarm_retrieval/build.xml:52: The following error occurred while executing this line:
/local/cxf/trunk/distribution/target/cxf-2.0-incubator-RC-SNAPSHOT/samples/common_build.xml:201: Java returned: 1

",,,,,,,,,,,,,,,,,19/Apr/07 16:09;janstey;cxf-553.patch;https://issues.apache.org/jira/secure/attachment/12355846/cxf-553.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-19 16:09:07.884,,,no_permission,,,,,,,,,,,,,111399,,,Thu Apr 19 16:09:07 UTC 2007,,,,,,0|i1a8sf:,267890,,,,,,,,"19/Apr/07 16:09;janstey;Patch to fix the issue.

Made this change to get around CXF-556
-            dir=""${basedir}/../wsdl/transport/http""
+            dir=""${wsdl.dir}/transport/http""

Made this change so that definitions in the tmf854.v1.ws namespace would get mapped to ws.v1.tmf854.fault.http. It seems that specifying a catch-all '-p ws.v1.tmf854.fault.http' does not work (it catches EVERYTHING, even the definitions from tmf854.v1).
-            package=""ws.v1.tmf854.fault.http -p tmf854.v1=v1.tmf854.fault""
+            package=""tmf854.v1.ws=ws.v1.tmf854.fault.http -p tmf854.v1=v1.tmf854.fault""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
streamInterceptor sample does not work,CXF-552,12367554,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,blin,blin,19/Apr/07 10:26,29/Aug/07 02:05,14/Mar/19 02:28,20/Apr/07 08:25,2.0-RC,,,,,,,2.0-RC,,Build system,,,,,0,"starting server failed with following message, apparently it could be due to interceptor chaim refactoring:
    [javac] /local/cxf/trunk/distribution/target/cxf-2.0-incubator-RC-SNAPSHOT/samples/streamInterceptor/src/demo/stream/interceptor/StreamInterceptor.java:54: cannot find symbol
    [javac] symbol  : method doInterceptInSubChain(org.apache.cxf.message.Message)
    [javac] location: interface org.apache.cxf.interceptor.InterceptorChain
    [javac]             message.getInterceptorChain().doInterceptInSubChain(message);
    [javac]                                        ^
    [javac] 1 error
",,,,,,,,,,,,,,,,,19/Apr/07 19:03;janstey;cxf552.patch;https://issues.apache.org/jira/secure/attachment/12355853/cxf552.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-19 19:03:13.376,,,no_permission,,,,,,,,,,,,,111398,,,Thu Apr 19 19:03:13 UTC 2007,,,,,,0|i1a8sn:,267891,,,,,,,,"19/Apr/07 19:03;janstey;Patch to fix the issue.

Jervis: The demo ran fine but perhaps since you did the chain refactor, you could review this fix? Thanks. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
soap12 sample does not work,CXF-551,12367553,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,blin,blin,19/Apr/07 10:21,29/Aug/07 02:05,14/Mar/19 02:28,20/Apr/07 09:05,2.0-RC,,,,,,,2.0-RC,,Build system,,,,,0,"following error spit from client:

[java] Exception in thread ""main"" org.apache.cxf.binding.soap.SoapFault:
     [java]     at org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor.handleMessage(Soap12FaultInInterceptor.java:105)
     [java]     at org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor.handleMessage(Soap12FaultInInterceptor.java:46)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148)
     [java]     at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:82)
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:109)
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:50)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148)
     [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:347)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1749)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose(HTTPConduit.java:1632)
     [java]     at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCachedOutputStream.java:114)
     [java]     at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:65)
     [java]     at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:215)
     [java]     at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
     [java]     at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:122)
     [java]     at $Proxy40.pingMe(Unknown Source)
     [java]     at demo.hw.client.Client.main(Client.java:86)
     [java] Java Result: 1
",on linux,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111397,,,2007-04-19 10:21:27.0,,,,,,0|i0v2zj:,179457,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
restful_http_binding samples does not work,CXF-550,12367552,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,blin,blin,19/Apr/07 10:16,31/Mar/08 17:04,14/Mar/19 02:28,20/Apr/07 09:05,2.0-RC,,,,,,,2.0-RC,,Build system,,,,,0,"Following error is spit from server:
    [java] Exception in thread ""main"" org.apache.cxf.service.factory.ServiceConstructionException: Could not resolve a binding for http://apache.org/cxf/binding/http
     [java]     at org.apache.cxf.frontend.AbstractEndpointFactory.createBindingInfo(AbstractEndpointFactory.java:241)
     [java]     at org.apache.cxf.jaxws.JaxWsServerFactoryBean.createBindingInfo(JaxWsServerFactoryBean.java:105)
     [java]     at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpointInfo(AbstractEndpointFactory.java:175)
     [java]     at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:100)
     [java]     at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:84)
     [java]     at com.acme.customer.Main.createRestService(Main.java:79)
     [java]     at com.acme.customer.Main.main(Main.java:55)
     [java] Caused by: org.apache.cxf.BusException: No binding factory for namespace http://apache.org/cxf/binding/http registered.
     [java]     at org.apache.cxf.binding.BindingFactoryManagerImpl.getBindingFactory(BindingFactoryManagerImpl.java:78)
     [java]     at org.apache.cxf.frontend.AbstractEndpointFactory.createBindingInfo(AbstractEndpointFactory.java:236)
     [java]     ... 6 more
",on linux platform,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-03 12:50:36.202,,,no_permission,,,,,,,,,,,,,111396,,,Mon Mar 31 17:04:32 UTC 2008,,,,,,0|i140fz:,231534,,,,,,,,"03/Jul/07 12:50;cblavier;I have the same problem : with following spring configuration

 <bean id=""JaxWsServiceFactoryBean"" class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean""> 
  <property name=""wrapped"" value=""true""/> 
 </bean> 

   <jaxws:endpoint id=""restfulServer"" 
              implementor=""#bookService"" 
              address=""/BookService""
              bindingUri=""http://apache.org/cxf/binding/http"">
     <jaxws:serviceFactory> 
         <ref bean=""JaxWsServiceFactoryBean""/> 
     </jaxws:serviceFactory> 
  </jaxws:endpoint> 

I can't get my Restful web-service to work (I get a Could not resolve a binding for http://apache.org/cxf/binding/http error on jetty startup)
","31/Mar/08 17:04;acai;I have the same problem (Could not resolve a binding for http://apache.org/cxf/binding/http)
  in 2.0.5 nightly build apache-cxf-2.0.5-incubator-20080319.024727-10. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
hello_world_xml_bare samples does not work,CXF-549,12367550,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,blin,blin,19/Apr/07 10:04,29/Aug/07 02:05,14/Mar/19 02:28,20/Apr/07 04:46,2.0-RC,,,,,,,2.0-RC,,Build system,,,,,0,"There are exception messages from both server and client sides.

Server side:
SEVERE: EXCEPTION
     [java] java.lang.AssertionError
     [java]     at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:167)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148)
     [java]     at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:63)
     [java]     at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:188)
     [java]     at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:158)
     [java]     at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54)
     [java]     at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:690)
     [java]     at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:191)
     [java]     at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
     [java]     at org.mortbay.jetty.Server.handle(Server.java:285)
     [java]     at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:457)
     [java]     at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:765)
     [java]     at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:710)
     [java]     at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)
     [java]     at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:357)
     [java]     at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:329)
     [java]     at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)


and client side:

[java] Exception in thread ""main"" java.lang.RuntimeException: Couldn't parse stream.
     [java]     at org.apache.cxf.staxutils.StaxUtils.toNextElement(StaxUtils.java:221)
     [java]     at org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor.handleMessage(XMLMessageInInterceptor.java:67)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148)
     [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:347)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1749)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose(HTTPConduit.java:1632)
     [java]     at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCachedOutputStream.java:114)
     [java]     at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:65)
     [java]     at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:215)
     [java]     at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
     [java]     at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:122)
     [java]     at $Proxy33.sayHi(Unknown Source)
     [java]     at demo.hw.client.Client.main(Client.java:63)
     [java] Caused by: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog
     [java]  at [row,col {unknown-source}]: [1,0]
     [java]     at com.ctc.wstx.sr.StreamScanner.throwUnexpectedEOF(StreamScanner.java:661)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.handleEOF(BasicStreamReader.java:2134)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.nextFromProlog(BasicStreamReader.java:2040)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1069)
     [java]     at org.apache.cxf.staxutils.DepthXMLStreamReader.next(DepthXMLStreamReader.java:213)
     [java]     at org.apache.cxf.staxutils.StaxUtils.toNextElement(StaxUtils.java:211)
     [java]     ... 14 more
     [java] Java Result: 1

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111395,,,2007-04-19 10:04:43.0,,,,,,0|i1a8sv:,267892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
parameter miss target namespace,CXF-548,12367542,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,19/Apr/07 07:04,29/Aug/07 18:06,14/Mar/19 02:28,19/Apr/07 09:25,,,,,,,,2.0-RC,,,,,,,0,"the code generate from this wsdl miss target namespce for the second input message part
the attachment is the wsdl
the SEI is like
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebMethod
    public void echoData(
        @WebParam(targetNamespace = ""http://cxf.apache.org/swa/types"", mode = Mode.INOUT, partName = ""text"", name = ""DataStruct"")
        javax.xml.ws.Holder<org.apache.cxf.swa.types.DataStruct> text,
        @WebParam(mode = Mode.INOUT, partName = ""data"", name = ""data"")
        javax.xml.ws.Holder<javax.activation.DataHandler> data
    );
the second parameter miss target namespace which cause runtime fail when do findMessagePart according to the QName match search

this error cause SWA system test doesn't work, seems sothing wrong in MIMEProcessor",,,,,,,,,,,,,,,,,19/Apr/07 07:05;ffang;swa-mime.wsdl;https://issues.apache.org/jira/secure/attachment/12355807/swa-mime.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111394,,,Thu Apr 19 07:58:23 UTC 2007,,,,,,0|i1a8t3:,267893,,,,,,,,"19/Apr/07 07:58;ffang;it's not a bug of tool
it's a bug in runtime
the targetNamespace could be ignored if messagepart namespace is same as wsdl tns.
it's my bad.
so AbstractInDatabindingInterceptor should handle this case in findMessagePart",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.jaxws.EndpointImpl does not set endpoint name in service factory,CXF-541,12367376,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,paul.taylor@iona.com,paul.taylor@iona.com,17/Apr/07 12:22,29/Aug/07 02:03,14/Mar/19 02:28,29/Apr/07 06:35,2.0-RC,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"Trying to publish an endpoint using a provider as implementation object  results in a NullPointerException during EndpointImpl.publish().

        Bus bus = BusFactory.getDefaultBus();
        String endpointId = null;
        String wsdl = ""testutils/hello_world_soap12.wsdl"";
        EndpointImpl ep = new EndpointImpl(bus, impl, endpointId, wsdl);
        String namespace = ""http://apache.org/hello_world_soap12_http"";
        QName endpointName = new QName(namespace, ""SoapPort"");
        QName serviceName = new QName(namespace, ""SOAPService"");
        ep.setEndpointName(endpointName);
        ep.setServiceName(serviceName);
        ep.publish();

Exception is:

java.lang.NullPointerException
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperationsForProvider(JaxWsServiceFactoryBean.java:203)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperations(JaxWsServiceFactoryBean.java:187)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:189)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:225)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:129)
	at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:78)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:84)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:307)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:200)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:388)
	at org.apache.cxf.systest.pft.Server.run(Server.java:55)
	at org.apache.cxf.testutil.common.AbstractTestServerBase.start(AbstractTestServerBase.java:61)
	at org.apache.cxf.systest.pft.Server.main(Server.java:71)

Fix is to add the following to EndpointImpl.doPublish(String addr):

        if (endpointName != null) {
            serverFactory.getServiceFactory().setEndpointName(endpointName);
        }
",Windows,,,,,,,,,,,,,,,,17/Apr/07 12:25;paul.taylor@iona.com;cxf_541.patch;https://issues.apache.org/jira/secure/attachment/12355689/cxf_541.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-25 10:07:00.742,,,no_permission,,,,,,,,,,,,,111387,,,Wed Apr 25 10:07:00 UTC 2007,,,,,,0|i140mn:,231564,,,,,,,,25/Apr/07 10:07;blin;Thanks for Paul's contribution. Freeman please take a look as I don't see any other is picking up this one.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Manage the namespaces in rt,CXF-537,12367343,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,17/Apr/07 03:04,29/Aug/07 02:05,14/Mar/19 02:28,17/Apr/07 09:34,2.0-RC,,,,,,,2.0-RC,,Core,,,,,0,"Whatever soap version we used,  we put both soap11/soap12 namespaces in definition.
I will add the build(HashSet<String, String> ns) to ServiceWSDLBuilder, after that we don't need hard code the namespaces in ServiceWSDLBuilder ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,19233,,,2007-04-17 03:04:38.0,,,,,,0|i0sz13:,167152,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default namespaces with no prefixes and set are coming out empty,CXF-536,12367314,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,jgenender,jgenender,16/Apr/07 18:29,29/Aug/07 02:03,14/Mar/19 02:28,29/Apr/07 03:00,2.0,,,,,,,2.0,,Soap Binding,,,,,0,"Default name spaces with no prefixes are not handled well and any XML passed through the W3CDOMStream(Reader/Writer) drop the default namespace.

Example: I send...

<Test xmlns=""http://example.org/types""><argument>foobar</argument></Test>

and when run through the reader/writer it comes out as:

<Test xmlns=""""><argument>foobar</argument></Test>

Problem seems to be attributed to a few issues.  1) that many of the DocumentBuilder objects do not call setNamespaceAware(true) and also an issue in processing the namespaces.

Patch attached that fixes this along with a test case.  Many thanks to Dan Kulp, Dan Diephouse and Jarek Gawor for helping work on this.",,,,,,,,,,,,,,,,,16/Apr/07 19:01;jgenender;CXF-536.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12355636/CXF-536.jgenender.patch,16/Apr/07 18:33;jgenender;CXF-536.jgenender.patch;https://issues.apache.org/jira/secure/attachment/12355634/CXF-536.jgenender.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-04-25 10:05:42.09,,,no_permission,,,,,,,,,,,,,111383,,,Wed Apr 25 10:05:42 UTC 2007,,,,,,0|i140n3:,231566,,,,,,,,16/Apr/07 19:01;jgenender;License this time,25/Apr/07 10:05;blin;Thanks for Jeff's contribution. Please take a look as I don't see anyone has applied this patch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service Listing at root of CXF servlet contains usless '/' in the return urls,CXF-535,12367287,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,16/Apr/07 14:45,29/Aug/07 02:05,14/Mar/19 02:28,17/Apr/07 01:32,2.0-RC,,,,,,,2.0-RC,,Transports,,,,,0,"If I go to the root mapping of my CXF servlet (in my case,
http://localhost:8080/myapp/services/), it lists my deployed services.

The links however, are broken.  Instead of:
http://localhost:8080/myapp/services/MyService?wsdl
it is:
http://localhost:8080/myapp/services//MyService?wsdl

My web.xml file contains:

<servlet>
  <servlet-name>CXFServlet</servlet-name>
  <servlet-class>
    org.apache.cxf.transport.servlet.CXFServlet
  </servlet-class>
  <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
  <servlet-name>CXFServlet</servlet-name>
  <url-pattern>/services/*</url-pattern>
</servlet-mapping>

And my spring-config file contains:

<import resource=""classpath:META-INF/cxf/cxf.xml"" />
<import resource=""classpath:META-INF/cxf/cxf-extension-soap.xml"" />
<import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />

<jaxws:endpoint
    id=""myWebServiceEndpoint""
    implementor=""myWebService""
    address=""/services/MyService""
    wsdlLocation=""myservice.wsdl"">
  <jaxws:inInterceptors>
    <bean class=""org.apache.cxf.interceptor.LoggingInInterceptor"" />
  </jaxws:inInterceptors>
  <jaxws:outInterceptors>
    <bean class=""org.apache.cxf.interceptor.LoggingOutInterceptor"" />
  </jaxws:outInterceptors>
</jaxws:endpoint>
",,,,,,,,,,,,,CXF-898,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111382,,,Tue Apr 17 01:32:09 UTC 2007,,,,,,0|i1a8uv:,267901,,,,,,,,17/Apr/07 01:32;njiang;This issuse has been resolved in revision 529279,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxWsServiceConfiguration.getDefaultLocalName() should not use debug information to get parameter names,CXF-532,12367167,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,gawor@mcs.anl.gov,gawor@mcs.anl.gov,gawor@mcs.anl.gov,13/Apr/07 17:53,29/Aug/07 18:04,14/Mar/19 02:28,13/Apr/07 20:48,,,,,,,,2.0-RC,,,,,,,0,"JaxWsServiceConfiguration.getDefaultLocalName() function will use debug information to extract parameter names if they are not explicitly specified. However, the JAX-WS specification explicitly defines what the defaults should be. For example for parameters it should be ""argN"".



",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111379,,,Fri Apr 13 20:48:10 UTC 2007,,,,,,0|i140f3:,231530,,,,,,,,"13/Apr/07 20:48;gawor@mcs.anl.gov;Fix committed (revision 528656).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl ignores the -cp option,CXF-531,12367158,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,wtam,wtam,13/Apr/07 15:36,29/Aug/07 18:06,14/Mar/19 02:28,27/Apr/07 06:03,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"You can use the test case included in CXF-523 to reproduce this issue.  In the test case, you get ClassNotFoundException if you are not running the java2wsdl command in the C:\dbtest directory even though ""cp C:\dbtest"" is passed as an arguement to the command.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111378,,,2007-04-13 15:36:02.0,,,,,,0|i1a8v3:,267902,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in doSenderAction call in WSS4JOutInterceptor ,CXF-530,12367157,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,coheig,coheig,13/Apr/07 15:24,25/Apr/07 16:36,14/Mar/19 02:28,25/Apr/07 16:36,2.0-RC,,,,,,,2.0,,WS-* Components,,,,,0,"In org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor;

The following is a bug, as the last argument will always be true.

doSenderAction(doAction, doc, reqData, actions, !Boolean.TRUE
                    .equals(org.apache.cxf.message.Message.REQUESTOR_ROLE));

Instead this should be;

doSenderAction(doAction, doc, reqData, actions, !Boolean.TRUE
                    .equals(getProperty(mc, org.apache.cxf.message.Message.REQUESTOR_ROLE)));

A patch is included for this, as well as a number of other small fixes. A test for direct reference is also added.",,,,,,,,,,,,,,,,,13/Apr/07 15:25;coheig;wssecurity.patch;https://issues.apache.org/jira/secure/attachment/12355513/wssecurity.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-25 16:36:23.621,,,no_permission,,,,,,,,,,,,,111377,,,Wed Apr 25 16:36:23 UTC 2007,,,,,,0|i13zt3:,231431,,,,,,,,25/Apr/07 16:36;dandiep;I've already fixed this in SVN.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface Hello in JaxWsServiceConfigurationTest is not a legal jaxws SEI,CXF-528,12367140,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,13/Apr/07 09:59,18/Jun/07 18:31,14/Mar/19 02:28,18/Jun/07 18:31,2.0-RC,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"We should fix this test. the test is based on a wrong ＪＡＸＷＳＳＥＩ
    // REVISIT this is not a valid JAXWS SEI Style.RPC can not put on method. (JSR-181)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-18 18:31:33.399,,,no_permission,,,,,,,,,,,,,111375,,,Mon Jun 18 18:31:33 UTC 2007,,,,,,0|i0v127:,179145,,,,,,,,18/Jun/07 18:31;dandiep;I don't see this any more in this test...  Closing unless someone speaks up!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxwsServiceFactoryBean bugs with RPC style,CXF-527,12367139,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,13/Apr/07 09:54,29/Aug/07 02:02,14/Mar/19 02:28,26/Jul/07 17:03,,,,,,,,2.0.1,,,,,,,0,"Fix the test org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.JaxwsServiceBuilderNoAnnoTest.testGeneratedWithRPCClass()

 * input message of binding operation ""getPrice"" MUST specify a value for the ""namespace"" attribute
 * output message of binding operation ""getPrice"" MUST specify a value for the ""namespace"" attribute",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-17 21:25:01.193,,,no_permission,,,,,,,,,,,,,111374,,,Thu Jul 26 17:03:46 UTC 2007,,,,,,0|i1a8vj:,267904,,,,,,,,17/Jul/07 21:25;dandiep;Is this still a problem? I don't see this test case anymore.,"26/Jul/07 17:03;dkulp;
The testcase is in tools/javato/test/src/test/java/org/apache/cxf/tools/java2wsdl/processor/internal/jaxws/JaxwsServiceBuilderNoAnnoTest.java

The test does pass now and I've confirmed the generated wsdl does have the required namespace.  Marking fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"runtime will fail if element has  minOccurs=""0"" maxOccurs=""unbounded"" attribute",CXF-526,12367137,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,13/Apr/07 09:35,29/Aug/07 18:06,14/Mar/19 02:28,18/Apr/07 01:39,,,,,,,,2.0-RC,,,,,,,0,"if element is
<element name=""sayHi"">
                <xs:complexType name=""Reference"">
                    <xs:sequence>
                        <xs:element name=""port"" minOccurs=""0"" maxOccurs=""unbounded"">
                            <xs:complexType>
                                <xs:sequence>
                                    <element name=""requestType"" type=""string""/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>

                </xs:complexType>
            </element>


then wsdl2java will generate List parameter, but runtime will throw exception in DocLiteralInInterceptor",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111373,,,2007-04-13 09:35:43.0,,,,,,0|i140fb:,231531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassNameAllocatorImpl might be missing class name collision checking for other types,CXF-525,12367124,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,blin,blin,13/Apr/07 03:44,25/Dec/07 01:56,14/Mar/19 02:28,25/Dec/07 01:56,2.0-RC,,,,,,,2.1,,,,,,,0,"ClassNameAllocatorImpl might be missing class name collision checking for other types, right now it only checks for SEI interface.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-24 06:36:10.496,,,no_permission,,,,,,,,,,,,,111372,,,Tue Jul 24 06:36:10 UTC 2007,,,,,,0|i1a8vr:,267905,,,,,,,,20/Jul/07 07:22;blin;reschedule to 2.1,"24/Jul/07 06:36;ema;Bo, Is there a test case for this issue ? Currently ClassNameAllocatorImpl is only used to check the name collison for types class. (It  will be passed to jaxb and allocate types class name ) We use ClassCollector class to check other classes collision. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl fails if SEI throws exception other than RMIException,CXF-524,12367113,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,wtam,wtam,12/Apr/07 22:25,29/Aug/07 18:06,14/Mar/19 02:28,25/Apr/07 06:19,,,,,,,,2.0-RC,,,,,,,0,"After applying the patch for CXF-523 (ConcurrentModificationException thrown by createJAXBContext), the use case hit the next error.

untar the attached tarball to C:\dbtest and run the following command:
java2wsdl -cp C:\dbtest  com.iona.dbtest.Database

org.apache.cxf.tools.common.ToolException
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.execute(JavaToWSDL.java:90)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.runTool(JavaToWSDL.java:110)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.main(JavaToWSDL.java:101)
Caused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions
java.lang.StackTraceElement does not have a no-arg default constructor.
        this problem is related to the following location:
                at java.lang.StackTraceElement
                at public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
                at java.lang.Throwable
                at java.lang.Exception
                at com.iona.dbtest.DBServiceFault_Exception
        at com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder.check(IllegalAnnotationsException.java:66)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:389)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:236)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:76)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:55)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:210)
        at javax.xml.bind.ContextFinder.find(ContextFinder.java:368)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:574)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:522)
        at org.apache.cxf.jaxb.JAXBDataBinding.createJAXBContext(JAXBDataBinding.java:356)
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:246)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:211)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:228)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:128)
        at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:73)
        at org.apache.cxf.tools.java2wsdl.processor.internal.ServiceBuilder.build(ServiceBuilder.java:39)
        at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor.process(JavaToProcessor.java:58)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.execute(JavaToWSDL.java:73)

        ... 5 more",,,,,,,,,,,,,,,,,12/Apr/07 22:25;wtam;test.tar.gz;https://issues.apache.org/jira/secure/attachment/12355469/test.tar.gz,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-25 06:19:32.352,,,no_permission,,,,,,,,,,,,,111371,,,Wed Apr 25 06:19:32 UTC 2007,,,,,,0|i1a8vz:,267906,,,,,,,,"25/Apr/07 06:19;ema;This issue has been fixed automatically after we refactored java2wsdl and reused runtime to generate wsdl . 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException thrown by createJAXBContext() when run java2wsdl,CXF-523,12367108,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,wtam,wtam,12/Apr/07 20:57,29/Aug/07 18:06,14/Mar/19 02:28,25/Apr/07 06:22,,,,,,,,2.0-RC,,,,,,,0,"untar the attached tarball to C:\dbtest and run the following command:

java2wsdl -cp C:\dbtest  com.iona.dbtest.Database

and the follow stacktrace is observed

java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:841)
        at java.util.HashMap$KeyIterator.next(HashMap.java:877)
        at org.apache.cxf.jaxb.JAXBDataBinding.createJAXBContext(JAXBDataBinding.java:338)
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:246)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClassReflectionServiceFactoryBean.java:211)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:228)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:128)
        at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(AbstractEndpointFactory.java:73)
        at org.apache.cxf.tools.java2wsdl.processor.internal.ServiceBuilder.build(ServiceBuilder.java:39)
        at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor.process(JavaToProcessor.java:58)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.execute(JavaToWSDL.java:73)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.runTool(JavaToWSDL.java:110)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.main(JavaToWSDL.java:101)
Error : null

org.apache.cxf.tools.common.ToolException
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.execute(JavaToWSDL.java:90)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:52)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:39)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.runTool(JavaToWSDL.java:110)
        at org.apache.cxf.tools.java2wsdl.JavaToWSDL.main(JavaToWSDL.java:101)",,,,,,,,,,,,,,,,,12/Apr/07 21:00;wtam;JAXBDataBinding-patch.txt;https://issues.apache.org/jira/secure/attachment/12355460/JAXBDataBinding-patch.txt,12/Apr/07 20:59;wtam;test.tar.gz;https://issues.apache.org/jira/secure/attachment/12355459/test.tar.gz,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-04-25 06:22:21.616,,,no_permission,,,,,,,,,,,,,111370,,,Wed Apr 25 08:05:05 UTC 2007,,,,,,0|i0v353:,179482,,,,,,,,12/Apr/07 20:59;wtam;test case,12/Apr/07 21:00;wtam;A patch to address to the problem.,25/Apr/07 06:22;ema;This issue is fixed . see CXF-524.,"25/Apr/07 08:05;maomaode;I didn't apply the patch, seems this has been fixed.
But i added a test to convince that it has been fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generated wsdl using runtime code  for the following class is invalid : Port has no location attribute ,CXF-520,12366888,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,10/Apr/07 10:51,29/Aug/07 02:03,14/Mar/19 02:28,06/Jun/07 07:08,2.0-RC,,,,,,,2.0,,Tooling,,,,,0,"package org.apache.cxf.tools.fortest.classnoanno.rpc;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.Style;

@WebService
@SOAPBinding(style = Style.RPC)
public interface Stock {
    float getPrice(String tickerSymbol);
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111367,,,Tue Jun 05 07:00:26 UTC 2007,,,,,,0|i140fj:,231532,,,,,,,,"05/Jun/07 07:00;ema;Just tried the java2wsdl tool , this issue is fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The wsdl generated from JaxwsServiceFactory is invalid, namespace prefix doesn't match.  ",CXF-519,12366887,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,ema,ema,10/Apr/07 10:46,29/Aug/07 18:03,14/Mar/19 02:28,15/Apr/07 14:08,,,,,,,,2.0-RC,,Tooling,,,,,0,,"Use the attached class to generate wsdl with runtime, will get a invalid wsdl : PortType""Greeter"" Operation SayHi parameter message refers to ns2:sayHi , NS prefix doesn't match the message namespace",,,,,,,,,,,,,,,,10/Apr/07 10:46;ema;Greeter.java;https://issues.apache.org/jira/secure/attachment/12355239/Greeter.java,10/Apr/07 10:46;ema;soap12.wsdl;https://issues.apache.org/jira/secure/attachment/12355238/soap12.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111366,,,2007-04-10 10:46:22.0,,,,,,0|i140dj:,231523,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Use  JaxwsServiceFactoryBean to generate a wsdl from the attached  class, the wsdl is invalid ",CXF-518,12366886,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,10/Apr/07 10:32,29/Aug/07 18:04,14/Mar/19 02:28,17/Apr/07 07:21,,,,,,,,2.0-RC,,Tooling,,,,,0,"The message part ""out"" in message ""testDocLitBareResponse"" is not defined",,,,,,,,,,,,,,,,,10/Apr/07 10:35;ema;Greeter.java;https://issues.apache.org/jira/secure/attachment/12355236/Greeter.java,10/Apr/07 10:35;ema;doc_wrapped_bare.wsdl;https://issues.apache.org/jira/secure/attachment/12355237/doc_wrapped_bare.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111365,,,2007-04-10 10:32:58.0,,,,,,0|i1a8wn:,267909,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
hello_world_async samples fails after clean,CXF-515,12366811,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,janstey,janstey,09/Apr/07 13:21,29/Aug/07 18:04,14/Mar/19 02:28,16/Apr/07 13:26,,,,,,,,2.0-RC,,,,,,,0,"After running 'ant clean' on the hello_world_async sample, it will no longer build. See the following error message:

[janstey@troy hello_world_async]$ ant clean
...
[janstey@troy hello_world_async]$ ant build
Buildfile: build.xml

maybe.generate.code:

generate.code:
     [echo] Generating code using wsdl2java...
    [mkdir] Created dir: /opt/cxf-2.0-incubator-RC-SNAPSHOT/samples/hello_world_async/build/classes
    [mkdir] Created dir: /opt/cxf-2.0-incubator-RC-SNAPSHOT/samples/hello_world_async/build/src
     [java] Loading FrontEnd jaxws ...
     [java] Loading DataBinding jaxb ...
     [java] wsdl2java -b /opt/cxf-2.0-incubator-RC-SNAPSHOT/samples/hello_world_async/wsdl/async_binding.xml -verbose -d /opt/cxf-2.0-incubator-RC-SNAPSHOT/samples/hello_world_async/build/src /opt/cxf-2.0-incubator-RC-SNAPSHOT/samples/hello_world_async/wsdl/hello_world_async.wsdl
     [java] wsdl2java - 2.0-incubator-RC-SNAPSHOT


     [java] WSDLToJava Error : File does not exist : file:/opt/cxf-2.0-incubator-RC-SNAPSHOT/samples/hello_world_async/wsdl/async_binding.xml

     [java] org.apache.cxf.tools.common.ToolException: File does not exist : file:/opt/cxf-2.0-incubator-RC-SNAPSHOT/samples/hello_world_async/wsdl/async_binding.xml
     [java]     at org.apache.cxf.tools.wsdlto.frontend.jaxws.JAXWSContainer.validate(JAXWSContainer.java:71)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:99)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:211)
     [java]     at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:84)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:102)
     [java]     at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:171)
",,,,,,,,,,,,,,,,,09/Apr/07 13:23;janstey;CXF-515.patch;https://issues.apache.org/jira/secure/attachment/12355166/CXF-515.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111363,,,Mon Apr 16 13:26:30 UTC 2007,,,,,,0|i1a8wv:,267910,,,,,,,,09/Apr/07 13:23;janstey;Patch to fix the issue. ,16/Apr/07 13:26;janstey;Fix committed in CXF rev 528344.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxwsServiceFactoryBean generate wrong part name,CXF-512,12366623,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,maomaode,maomaode,05/Apr/07 08:04,11/Apr/07 05:22,14/Mar/19 02:28,11/Apr/07 05:21,2.0-RC,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"JaxwsServiceFactoryBean generate wrong part name against class org.apache.cxf.tools.fortest.classnoanno.docbare.Stock
  <wsdl:message name=""getPrice"">
    <wsdl:part name=""arg00"" type=""xsd:string"">
    </wsdl:part>


The part name should be 'arg0'

Other classes:
org.apache.cxf.tools.fortest.withannotation.doc.HelloWrapped

Fix the test:
org/apache/cxf/tools/java2wsdl/processor/internal/jaxws/JaxwsServiceBuilderTest.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111360,,,2007-04-05 08:04:09.0,,,,,,0|i140ev:,231529,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxwsServiceFactoryBean failed if wsdlLocation in sei specify the non-exist file,CXF-511,12366622,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,maomaode,maomaode,05/Apr/07 07:51,11/Apr/07 06:08,14/Mar/19 02:28,11/Apr/07 06:08,2.0-RC,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"Java2Wsdl use JaxWsServiceFactoryBean fail with org.apache.cxf.tools.fortest.withannotation.doc.Hello  class

org.apache.cxf.service.factory.ServiceConstructionException: Could not load WSDL
 from URL file:///c:/tmp.wsdl.
        at org.apache.cxf.jaxws.support.JaxWsServiceConfiguration.getWsdlURL(Jax
WsServiceConfiguration.java:108)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.getWsdlUR
L(ReflectionServiceFactoryBean.java:868)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializ
eServiceModel(ReflectionServiceFactoryBean.java:221)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(Re
flectionServiceFactoryBean.java:126)
        at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(Abstra
ctEndpointFactory.java:72)
        at org.apache.cxf.tools.java2wsdl.processor.internal.ServiceBuilder.buil
d(ServiceBuilder.java:39)
        at org.apache.cxf.tools.java2wsdl.processor.internal.jaxws.JaxwsServiceB
uilderTest.testWrapped(JaxwsServiceBuilderTest.java:65)

I think we should print WARNING instead of throw exceptions when factorybean can not load wsdl from wsdlLocation annotation.

I have added a unit test to revisit:
org/apache/cxf/tools/java2wsdl/processor/internal/jaxws/JaxwsServiceBuilderTest",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111359,,,2007-04-05 07:51:56.0,,,,,,0|i1a8xb:,267912,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SpringBusFactory only use DEFAULT_BUS_ID to create bus from context,CXF-510,12366449,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,03/Apr/07 07:16,29/Aug/07 02:02,14/Mar/19 02:28,25/Jul/07 05:49,2.0-RC,,,,,,,2.0.1,,Bus,,,,,0,"Current SpringBusFactory use the DEFAULT_BUS_ID (cxf) to getBean from spring application context.

It dose not support these two usecase:

User want to create bus with the name other than cxf
 
User wants to configure two different bus in the same spring configuration file with different busID.

We need to add the busID arguement in createBus for these two usecase. 

BTW, 
SprintBusFactory does not set the busId. 
When the user calls bus.getID() , it will return null if the bus is created by the SpringBusFactory.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111358,,,Wed Jul 25 05:49:50 UTC 2007,,,,,,0|i1a8xj:,267913,,,,,,,,"25/Jul/07 05:49;njiang;Current solution for the  CXFBusImpl's id is not set is that  bus.getID will return DEFAULT_BUS_ID + Integer.toString(this.hashCode()) as it's id.

If we need to set the bus id for the bus which created by spring , we could use 

<bean id=""bus1"" class=""org.apache.cxf.bus.CXFBusImpl"" init-method=""initialize"">
 <property name=""id""  value= ""bus1"" />
</bean>

to set the bus id.

So I closed it issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2wsdl needs to support codegen for RequestWrapper and RespondeWrapper in some case,CXF-509,12366439,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,blin,blin,03/Apr/07 02:20,29/Aug/07 02:03,14/Mar/19 02:28,09/May/07 11:38,2.0,,,,,,,2.0,,Tooling,,,,,0,"If the @RequestWrapper/@ResponseWrapper annotations specify a classname that doesn't exist, we have to generate and compile them, Thus, the tools needs new flags for source dir and classes dir. java2wsdl also needs a ""portname"" flag (like the servicename flag)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-23 05:14:46.334,,,no_permission,,,,,,,,,,,,,111357,,,Mon Apr 30 12:32:03 UTC 2007,,,,,,0|i1a8xr:,267914,,,,,,,,"23/Apr/07 05:14;maomaode;This has been resolved since java2wsdl use the rt/frontend/jaxws
Ref: CXF-540","23/Apr/07 14:51;dkulp;
No, this is not fixed/resolved.

If  I run java2wsdl from the command line:

1) There is still no option to specify the portName, just the service name.

2) The RequestWrapper/ResponseWrapper classes are not generated at all

3) There is no flag to specify the directory to where to generate those classes

4) There is no flag to specify where to compile those classes to.

","24/Apr/07 02:16;maomaode;Java2wsdl now delegate to the JaxwsServiceFactoryBean to generate the service model, and after fixed bunch of issues, now it can do without the generation of the wrapper bean classes.
The reason you reopen the issue, i guess is that TCK do require to generate the wrapper bean classes. i searched the spec, i can not find a section that mandate this requirement.
I'm thinking of where should it happen, in tools or rt/frontend/jaxws?

2),3)4) are related, and the 1) need another jira issue.",24/Apr/07 02:38;dandiep;Is #2 really mandated by the spec? It would be nice if people didn't have to deal with those extra generated classes.,"24/Apr/07 03:07;dkulp;
Yes.   Section 3.6.2.1 of the spec.   Classes must be generated for these.
","30/Apr/07 12:32;maomaode;I'm reopening the issue, because there's a big refactoring against the generation of the wrapper bean classes.
Previous i used the jaxb code model to build the wrapper beans from the built schemaInfo of the serviceInfo, it failed in some cases see (CXF-611)
The reason it failed is that java(sei) -> wsdl -> java(wrapper beans) will not work, it lost some informations. so i used java(sei) -> java(wrapper beans) directrly.

Now i used tools internal code model to build the wrapper beans, a lot of code to maintain, but should fix both CXF-611 and CXF-610
Please close this issue(and related CXF-611 and CXF-610) if you verified it's fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java doesn't generate the proper qname for the service,CXF-508,12366370,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,02/Apr/07 02:50,29/Aug/07 18:04,14/Mar/19 02:28,03/Apr/07 05:23,,,,,,,,2.0-RC,,,,,,,0,"When service target namespace is different with the portType namspace , the service qname in client code  is not proper.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111356,,,2007-04-02 02:50:10.0,,,,,,0|i1a8xz:,267915,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring Config of portName and serviceName does not work,CXF-507,12366222,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,cmoesel,cmoesel,30/Mar/07 14:58,30/Apr/08 15:00,14/Mar/19 02:28,26/Feb/08 21:41,2.0-RC,,,,,,,2.0.4,,Configuration,JAX-WS Runtime,,,,3,"The documentation at the following page indicates that a portName and serviceName can be specified as attributes in <jaxws:endpoint> in the spring config file:
http://cwiki.apache.org/CXF20DOC/jax-ws-configuration.html

There are two issues:

1)  If the portName and serviceName are specified as recommended in the documentation, Spring does not properly parse the config file, due to the following exception:
org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '{http://mycompany.com/products/webservice}MyServicePort' is not a valid value for 'QName'.
I was able to get it to parse by adding the following to the root beans element:
xmlns:mws=""http://mycompany.com/products/webservice""
And then specifying the portName like so: ""mws:MyServicePort""

2)  Once you've gotten past #1 above,  you get the following error:
org.springframework.beans.NotWritablePropertyException: Invalid property 'portName' of bean class [org.apache.cxf.jaxws.spring.EndpointFactoryBean]: Bean property 'portName' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
Looking at the source code, it appears there are no setters for portName or serviceName:
http://svn.apache.org/viewvc/incubator/cxf/trunk/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/spring/EndpointFactoryBean.java?view=markup
",Using 2.0-RC SNAPSHOT,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-21 23:03:19.736,,,no_permission,,,,,,,,,,,,,111355,,,Wed Feb 27 01:23:23 UTC 2008,,,,,,0|i1a8y7:,267916,,,,,,,,"21/Dec/07 23:03;egavrilov;I'm facing the same issue with 2.0.3. 
As the sample is mentioned in documentation so it's very strange to see this defect opened for 9 months. 
It's the first issue I found right after start with CXF. What are the suggested workarounds?","26/Feb/08 21:41;dkulp;
I'm pretty sure this is now resolved:

For point 1: that wiki page has been updated with the proper form for the QNames

For point 2: the wiki page has also been updated to reflect that the proper name is ""endpointName"", not ""portName"".   ""endpointName"" is what is specified in the schema.

","27/Feb/08 01:23;gmazza;Hmm, I thought Willem fixed this to allow CXF to use portName instead of endpointName.  If not, I wonder if it would be better if the Spring config were expanded to support portName while keeping endpointName supported, but deprecated and undocumented.

AFAICT ""Endpoint"" isn't specific enough WSDLese, no newbie and very few novices are going to understand where to find it in the WSDL.    The benefit of ""portName"" is that it is precisely its name in the WSDL (just like we have a clear-to-understand ""serviceName"" attribute in the same jaxws:endpoint element.)  ""endpointName"" seems to be unnecessary synonym-creating, which makes things more confusing for the user.  After all, is it not the case that ""endpointName"" would be as relevant for the service name as it is for the port name?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven 2 code generation plugin fails if passed in -validate as extraarg,CXF-503,12366144,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,maomaode,cmoesel,cmoesel,29/Mar/07 17:07,29/Aug/07 02:05,14/Mar/19 02:28,03/Apr/07 09:32,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"CXF 2.0 RC SNAPSHOT:  The -validate option does not appear to work correctly in the Maven 2 cxf-codegen-plugin.  My usage is (inside of the <extraargs> element):
<extraarg>-validate</extraarg>

To see this in action, run: ""mvn generate-sources"" on the attached project.",Using 2.0 RC SNAPSHOT from Maven 2 Repo,,,,,,,,,,,,,,,,29/Mar/07 17:07;cmoesel;pizza_service_cxf_m2_plugin_validate_bug.zip;https://issues.apache.org/jira/secure/attachment/12354536/pizza_service_cxf_m2_plugin_validate_bug.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111351,,,Thu Mar 29 17:07:44 UTC 2007,,,,,,0|i1a8yv:,267919,,,,,,,,29/Mar/07 17:07;cmoesel;Example project demonstrating bug.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
xsd:any in wrapped type causes wsdl2java to generate as bare.,CXF-502,12366141,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,cmoesel,cmoesel,29/Mar/07 16:49,29/Aug/07 18:03,14/Mar/19 02:28,30/Mar/07 02:39,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"CXF 2.0 RC SNAPSHOT:  If a doc/literal wrapped WSDL uses xsd:any in the wrapped request or response type, then the WSDL2Java tool will generate the interface with style SOAPBinding.ParameterStyle.BARE.

I will attach a maven project that demonstrates this, as well as a separate WSDL document.

To see this in action, run: ""mvn generate-sources"" on the attached example project.

The WSDL can be found at src/main/resources/pizza.wsdl.

The incorrectly generated interface can be found (after executing maven) at target/generated/src/main/java/com/mypizzaco/service/PizzaPortType.java.

If you comment out the xsd:any element in the WSDL and regenerate the source code, you will see it correctly generated as WRAPPED.",Using 2.0 RC-Snapshot from Maven Repo.,,,,,,,,,,,,,,,,29/Mar/07 16:51;cmoesel;pizza.wsdl;https://issues.apache.org/jira/secure/attachment/12354533/pizza.wsdl,29/Mar/07 16:50;cmoesel;pizza_service_cxf_wrapped_any_bug.zip;https://issues.apache.org/jira/secure/attachment/12354532/pizza_service_cxf_wrapped_any_bug.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-03-30 02:39:39.607,,,no_permission,,,,,,,,,,,,,49717,,,Fri Mar 30 02:39:39 UTC 2007,,,,,,0|i1a8z3:,267920,,,,,,,,29/Mar/07 16:50;cmoesel;Example project that demonstrates bug.  See readme.txt (in project) for details.,29/Mar/07 16:51;cmoesel;Example WSDL that demonstrates a doc/literal wrapped definition that CXF generates as bare.,"29/Mar/07 20:07;cmoesel;Dan Kulp had an interesting and relevant response on the user list:

---
Honestly, I'm not sure if the spec would allow us to change this.   The 
JAX-WS spec specifically says:

""The wrapper elements only contain child elements, they must not contain

other structures such as wildcards (element or attribute), xsd:choice, 
substitution groups (element references are not per-mitted) or 
attributes; furthermore, they must not be nillable.""

I'm not sure if an ""xsd:any"" would be considered a ""chile element"".
---","30/Mar/07 02:39;maomaode;According to the JAX-WS spec 2.3.1.2 this is a bare style, So i closed this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java2WSDL generate wrong schema elements in doc-wrapped style,CXF-498,12366002,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,28/Mar/07 10:03,29/Aug/07 02:05,14/Mar/19 02:28,23/Apr/07 05:07,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"java2wsdl the SEI in /cxf/tools/javato/src/test/java/org/apache/cxf/tools/fortest/classnoanno/docwrapped/Stock.java
in the generated Schema, the elements of request and response are not correct ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111347,,,Mon Apr 23 05:07:20 UTC 2007,,,,,,0|i0v0zb:,179132,,,,,,,,23/Apr/07 05:07;maomaode;This should be resolved since java2wsdl used the rt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"if schema include ""any"" type, runtime will  fail",CXF-497,12366000,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,28/Mar/07 09:47,29/Aug/07 18:06,14/Mar/19 02:28,18/Apr/07 01:39,,,,,,,,2.0-RC,,,,,,,0,"if schema include ""any"" type, like
            <element name=""sayHi"">
                <xs:complexType name=""Reference"">
                    <xs:sequence>
                        <xs:element name=""port"" minOccurs=""0"" maxOccurs=""unbounded"">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:any namespace=""##other"" processContents=""lax"" minOccurs=""0"" maxOccurs=""unbounded""/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>

                </xs:complexType>
            </element>
then runtime will fail when client side do mashall",,,,,,,,,,,,,,,,,28/Mar/07 09:48;ffang;any.wsdl;https://issues.apache.org/jira/secure/attachment/12354416/any.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,49701,,,Tue Apr 17 06:21:39 UTC 2007,,,,,,0|i0v0zr:,179134,,,,,,,,"28/Mar/07 09:59;ffang;exception stack trace

org.apache.cxf.interceptor.Fault: Marshalling Error: unable to marshal type ""java.lang.String"" as an element because it is missing an @XmlRootElement annotation
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:132)
        at org.apache.cxf.jaxb.io.XMLStreamDataWriter.write(XMLStreamDataWriter.java:42)
        at org.apache.cxf.jaxb.io.XMLStreamDataWriter.write(XMLStreamDataWriter.java:30)
        at org.apache.cxf.interceptor.BareOutInterceptor.handleMessage(BareOutInterceptor.java:73)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
        at org.apache.cxf.phase.PhaseInterceptorChain.doInterceptInSubChain(PhaseInterceptorChain.java:237)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:86)
        at org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor.handleMessage(SoapOutInterceptor.java:49)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
        at org.apache.cxf.interceptor.StaxOutInterceptor.handleMessage(StaxOutInterceptor.java:80)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
        at org.apache.cxf.interceptor.MessageSenderInterceptor.handleMessage(MessageSenderInterceptor.java:57)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:229)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:123)
        at $Proxy43.sayHi(Unknown Source)
        at org.apache.cxf.systest.jaxws.AnyClientServerTest.testAny(AnyClientServerTest.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
        at org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
        at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
        at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
        at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
        at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:75)
        at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:36)
        at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
        at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
        at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
        at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:138)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:163)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:84)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:244)
        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:814)
Caused by: javax.xml.bind.MarshalException
 - with linked exception:
[com.sun.istack.SAXException2: unable to marshal type ""java.lang.String"" as an element because it is missing an @XmlRootElement annotation]
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:295)
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:148)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:123)
        ... 41 more
Caused by: com.sun.istack.SAXException2: unable to marshal type ""java.lang.String"" as an element because it is missing an @XmlRootElement annotation
        at com.sun.xml.bind.v2.runtime.XMLSerializer.reportError(XMLSerializer.java:225)
        at com.sun.xml.bind.v2.runtime.LeafBeanInfoImpl.serializeRoot(LeafBeanInfoImpl.java:101)
        at com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty.serializeListBody(ArrayReferenceNodeProperty.java:78)
        at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:101)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:286)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:619)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty.serializeItem(ArrayElementNodeProperty.java:29)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementProperty.serializeListBody(ArrayElementProperty.java:132)
        at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:101)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:286)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:619)
        at com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty.serializeBody(SingleElementNodeProperty.java:114)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:98)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:127)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeBody(ElementBeanInfoImpl.java:244)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:251)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:33)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:461)
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:292)
        ... 43 more

",17/Apr/07 06:21;ffang;could use JAXElement to get mashall work if schema include xs:any wildcard,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndpointReferenceType class in the generated code is in the incorrect namespace,CXF-492,12365904,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bravi,bravi,27/Mar/07 13:59,29/Aug/07 02:05,14/Mar/19 02:28,29/Mar/07 10:30,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"The EndpointReferenceType class that is generated is in the org.w3._2005._08.addressing.EndpointReferenceType but the class is actually in org.apache.cxf.ws.addressing. It looks like the wsdl2java tool is skipping the namespace2package configuration which mentions this mapping... Also, it is not generating code in the other namespace because of exclusion of this namespace thereby resulting in a compilation error.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-28 04:00:05.761,,,no_permission,,,,,,,,,,,,,111342,,,Wed Mar 28 04:00:05 UTC 2007,,,,,,0|i1a907:,267925,,,,,,,,"28/Mar/07 04:00;maomaode;there is a locator.wsdl in testutils which use the namespace http://www.w3.org/2005/08/addressing, but the wsdl2java generated the EndpointReferenceType in org.apache.cxf.ws.addressing.
This is caused by the default namespace2packge.cfg in tools. 
You can also specify the mapping rules through the cmd line arguments.

I don't know which one is not correct, can you please provider information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"in hello_world sample, cann't throw the expected exception",CXF-491,12365854,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,27/Mar/07 02:43,29/Aug/07 18:04,14/Mar/19 02:28,28/Mar/07 02:41,,,,,,,,2.0-RC,,JAXB Databinding,,,,,0,"in Client.java of hello_world sample, the code 
System.out.println(""Invoking greetMe with invalid length string, expecting exception..."");
        try {
            resp = port.greetMe(""Invoking greetMe with invalid length string, expecting exception..."");
        } catch (ProtocolException e) {
            System.out.println(""Expected exception has occurred: "" + e.getClass().getName());
        }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111341,,,Tue Mar 27 03:46:03 UTC 2007,,,,,,0|i13zn3:,231404,,,,,,,,"27/Mar/07 02:45;ffang;in Client.java of hello_world sample, the code
        System.out.println(""Invoking greetMe with invalid length string, expecting exception..."");
        try {ow
            resp = port.greetMe(""Invoking greetMe with invalid length string, expecting exception..."");
        } catch (ProtocolException e) {
            System.out.println(""Expected exception has occurred: "" + e.getClass().getName());
        } 

shows an exception should be catch since in wsld the greetMe parameter max length is 30
           <simpleType name=""MyStringType"">
                <restriction base=""string"">
                    <maxLength value=""30"" />
                </restriction>
            </simpleType>

But did not catch this exception
",27/Mar/07 03:46;ffang;a missing spring configuration file can fix it,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
code typeo results in null content exception reporting from DispatchImpl,CXF-489,12365809,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,jliu,gtully,gtully,26/Mar/07 12:47,29/Aug/07 18:03,14/Mar/19 02:28,09/Apr/07 03:36,2.0-M1,,,,,,,2.0-RC,,Core,,,,,0,"Small typo in DispatchImpl:~145[1] results in null message for thrown exception. If clause checks Content but throw does not. Trivial fix required.

        if (message.getContent(Exception.class) != null) {
            throw new RuntimeException(message.get(Exception.class));
        }

should be accessing non null getContent for the throw I guess.

[1]  http://svn.apache.org/viewvc/incubator/cxf/trunk/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/DispatchImpl.java?view=markup",all,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111339,,,Mon Mar 26 14:45:13 UTC 2007,,,,,,0|i0sz1r:,167155,,,,,,,,"26/Mar/07 14:45;gtully;fix:

cxf_trunk>svn diff rt\frontend\jaxws\src\main\java\org\apache\cxf\jaxws\DispatchImpl.java
Index: rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/DispatchImpl.java
===================================================================
--- rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/DispatchImpl.java      (revision 518934)
+++ rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/DispatchImpl.java      (working copy)
@@ -142,7 +142,7 @@
         chain.doIntercept(message);

         if (message.getContent(Exception.class) != null) {
-            throw new RuntimeException(message.get(Exception.class));
+            throw new RuntimeException(message.getContent(Exception.class));
         }

         // correlate response

cxf_trunk>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
restful sample client failing,CXF-484,12365527,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,jliu,blin,blin,22/Mar/07 03:20,25/Apr/07 09:45,14/Mar/19 02:28,25/Apr/07 09:45,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"with following error from client:

client:
     [java] Invoking server through HTTP GET to query all customer info
     [java] Exception in thread ""main"" java.io.IOException: Server returned HTTP response code: 500 for URL: http://localhost:9000/customerservice/customer
     [java]     at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1153)
     [java]     at java.net.URL.openStream(URL.java:1007)
     [java]     at demo.restful.client.Client.main(Client.java:61)
     [java] Java Result: 1
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111334,,,Thu Apr 19 10:11:32 UTC 2007,,,,,,0|i1a91b:,267930,,,,,,,,"19/Apr/07 10:11;blin;this sample now is moved to restful_dispatch directory. With latest package, the error message from client is as following:
     [java] Invoking through HTTP GET to query customer using JAX-WS Dispatch
     [java] Exception in thread ""main"" javax.xml.ws.WebServiceException: org.apache.cxf.interceptor.Fault: Null object passed into Dispatch marshalling
     [java]     at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:147)
     [java]     at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:102)
     [java]     at demo.restful.client.Client.main(Client.java:89)
     [java] Caused by: org.apache.cxf.interceptor.Fault: Null object passed into Dispatch marshalling
     [java]     at org.apache.cxf.jaxws.interceptors.DispatchOutInterceptor.handleMessage(DispatchOutInterceptor.java:67)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:148)
     [java]     at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:142)
     [java]     ... 2 more
     [java] Java Result: 1
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
More supports for imported xsd access,CXF-481,12365524,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,22/Mar/07 03:10,19/Feb/08 17:13,14/Mar/19 02:28,19/Feb/08 17:13,,,,,,,,2.0.2,,Transports,,,,,0,"Looks like the recently checked-in fix for Bug: CXF 448 wont work in certain
cases.
The wsdllocation is stored in the ServletController while the endpoint is
built from the CXFServlet (CXFServlet#buildEndpoint). Assume I have multiple
endpoints deployed(which would have different wsdllocations).
I could have a single WAR app deployed in the web server, and publish
multiple services to it.
I could programatically publish an endpoint without going through the
CXFServlet. In such cases this solution would fail.
I could think of one probable solution to this issue:

1. Currently, while publishing we store the Server with the ServerRegistry.
2. Later when a request comes for an XSD, we get the corresponding Endpoint
from the ServerRegistry. (Using the Endpoint's address field)
3. Add a method to Endpoint API to get the wsdlLocation from Endpoint.

Thus we can get hold of the user supplied wsdl location, later resolve the
xsd location relative to it.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-30 08:06:53.154,,,no_permission,,,,,,,,,,,,,111331,,,Tue Feb 19 17:13:47 UTC 2008,,,,,,0|i13zrb:,231423,,,,,,,,30/Jul/07 08:06;blin;reschedule to 2.1 release,"19/Feb/08 17:13;dkulp;
This has worked for a while since we save the imported schemas at parse time and then return them directly.   No need to re-resolve.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interceptor lists should use thread-safe list impls,CXF-480,12365498,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,fdushin,fdushin,21/Mar/07 19:22,23/Apr/07 04:17,14/Mar/19 02:28,23/Apr/07 04:17,2.0-M1,,,,,,,2.0-RC,,Core,,,,,0,"The InterceptorProvider interface is essentially implemented by 2 classes in CXF: AbstractAttributedInterceptorProvider and AbstractBasicIntercetptorProvider.  The interceptor lists stored in these base types are implemented as ArrayLists.  However, ArrayLists are not thread-safe, so traversal of said interceptor lists is sensitive to underlying modifications by other interceptors or threads.  These maps should be implemented by the java.util.concurrent.CopyOnWriteArrayList type.

Tested patch to follow.",,,,,,,,,,,,,,,,,21/Mar/07 19:48;fdushin;cxf-480.patch;https://issues.apache.org/jira/secure/attachment/12353888/cxf-480.patch,21/Mar/07 19:46;fdushin;cxf-480.patch;https://issues.apache.org/jira/secure/attachment/12353887/cxf-480.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111330,,,Wed Mar 21 19:48:02 UTC 2007,,,,,,0|i0sz1z:,167156,,,,,,,,21/Mar/07 19:46;fdushin;Patch file off revision 520981,21/Mar/07 19:48;fdushin;Forgot to grant ASF license -- and I can't seem to modify or remove the previous one.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"force the package name for a wsdl contains jaxb binding , tool is not working",CXF-475,12365423,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,21/Mar/07 06:31,29/Aug/07 18:04,14/Mar/19 02:28,22/Mar/07 05:19,,,,,,,,2.0-RC,,,,,,,0,"When force the package name "" org.apache.cxf.wsaddressing "" for namesapce ""http://www.w3.org/2005/08/addressing"", tool will fail to generate code . 

See the attached wsdl . ",,,,,,,,,,,,,,,,,21/Mar/07 06:31;ema;locator_with_jaxbbinding.wsdl;https://issues.apache.org/jira/secure/attachment/12353821/locator_with_jaxbbinding.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111326,,,2007-03-21 06:31:11.0,,,,,,0|i13zw7:,231445,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
soapheader.wsdl and soapheader2.wsdl is not valid wsdl,CXF-474,12365351,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,maomaode,maomaode,20/Mar/07 11:35,29/Aug/07 02:05,14/Mar/19 02:28,18/Apr/07 07:32,2.0-RC,,,,,,,2.0-RC,,Resources,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111325,,,Fri Mar 23 06:58:31 UTC 2007,,,,,,0|i1a92n:,267936,,,,,,,,"23/Mar/07 06:58;maomaode;soapheader.wsdl in testutil is not a valid wsdl
The operation send_receive_any_type  violates the WSI-BP V1.0 R2210
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wrapper element shouldn't  contain element reference,CXF-471,12365338,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,20/Mar/07 06:54,29/Aug/07 18:04,14/Mar/19 02:28,26/Mar/07 07:30,,,,,,,,2.0-RC,,,,,,,0,,,,,,,,,,,,,,,,,,20/Mar/07 06:57;ffang;inband.wsdl;https://issues.apache.org/jira/secure/attachment/12353713/inband.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111322,,,Tue Mar 20 06:57:04 UTC 2007,,,,,,0|i0v2j3:,179383,,,,,,,,"20/Mar/07 06:57;ffang;according to jaxws specs, wrapper element shouldn't contain element reference, 
so in the wsdl, 
method fooCallbackPoll should not be wrapped style",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Request and Response contexts are the no thread-local objects of the JaxWsClientProxy,CXF-470,12365325,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,20/Mar/07 03:27,29/Aug/07 02:05,14/Mar/19 02:28,20/Mar/07 09:26,2.0-RC,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"The CXF documentation at http://cwiki.apache.org/CXF20DOC/developing- a-consumer.html illustrates a pattern for implementing a CXF client.   Under the section ""Setting a request context"" and ""Reading a response  context"", the following code is presented:

{{{
// Set request context property.
java.util.Map<String, Object> requestContext =
  ((javax.xml.ws.BindingProvider)port).getRequestContext();
requestContext.put(ContextPropertyName, PropertyValue);

// Invoke an operation.
port.SomeOperation();

// Read response context property.
java.util.Map<String, Object> responseContext =
  ((javax.xml.ws.BindingProvider)port).getResponseContext();
PropertyType propValue = (PropertyType) responseContext.get (ContextPropertyName);
}}}

The port is the instance of  JaxWsClientProxy which implements the BindingProvider interface.
The RequestContext and the ResponseContext should be thread safe for multi-thread share the same client proxy to gain better scability.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111321,,,Tue Mar 20 09:26:57 UTC 2007,,,,,,0|i1a93b:,267939,,,,,,,,20/Mar/07 09:26;njiang;This issue has been resloved in the revision 520299.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebResult annotation is in wrong namespace  when part has a reference element,CXF-465,12365099,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,16/Mar/07 11:01,29/Aug/07 18:04,14/Mar/19 02:28,20/Mar/07 12:47,,,,,,,,2.0-RC,,,,,,,0,"Tools generate  WebResult annotaion in wrong namepace . This issue is simlar to  CXF-356.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111316,,,2007-03-16 11:01:16.0,,,,,,0|i1a93r:,267941,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM Sample fail,CXF-464,12365083,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,blin,blin,16/Mar/07 07:11,13/Jun/07 19:10,14/Mar/19 02:28,13/Jun/07 19:10,2.0-RC,,,,,,,2.0,,WS-* Components,,,,,0,"WS-RM sample fails with following error:
 [java] WS-RM retransmission of message 4.
     [java] WS-RM retransmission of message 4.
     [java] Mar 16, 2007 2:59:04 PM org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$1 resend
     [java] WARNING: WS-RM retransmission failed.
     [java] java.lang.NullPointerException
     [java]     at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl.clientResend(RetransmissionQueueImpl.java:293)
     [java]     at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl.access$400(RetransmissionQueueImpl.java:63)
     [java]     at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$1.resend(RetransmissionQueueImpl.java:490)
     [java]     at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate.run(RetransmissionQueueImpl.java:372)
     [java]     at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
     [java]     at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate.initiate(RetransmissionQueueImpl.java:361)
     [java]     at org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate$1ResendTask.run(RetransmissionQueueImpl.java:446)
     [java]     at java.util.TimerThread.mainLoop(Timer.java:512)
     [java]     at java.util.TimerThread.run(Timer.java:462)

After client exited with above error, if I run the client again, then error changed to following, not sure if this is something to be concerned:
[java] Mar 16, 2007 3:02:38 PM org.apache.cxf.ws.rm.AbstractRMInterceptor handleMessage
     [java] SEVERE: SequenceFault
     [java] org.apache.cxf.ws.rm.SequenceFault: Unknown sequence urn:uuid:5e8986e3-0bde-457c-a255-5d524cf4397c.
     [java]     at org.apache.cxf.ws.rm.SequenceFaultFactory.createUnknownSequenceFault(SequenceFaultFactory.java:39)
     [java]     at org.apache.cxf.ws.rm.RMInInterceptor.processAcknowledgments(RMInInterceptor.java:133)
     [java]     at org.apache.cxf.ws.rm.RMInInterceptor.handleMessage(RMInInterceptor.java:113)
     [java]     at org.apache.cxf.ws.rm.AbstractRMInterceptor.handleMessage(AbstractRMInterceptor.java:77)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
     [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:359)
     [java]     at org.apache.cxf.ws.rm.Proxy$RMClient.onMessage(Proxy.java:249",SUSE Linix 10.1,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-13 19:10:48.164,,,no_permission,,,,,,,,,,,,,111315,,,Wed Jun 13 19:10:48 UTC 2007,,,,,,0|i1a93z:,267942,,,,,,,,13/Jun/07 19:10;dandiep;I believe we've fixed this in the 2.0-RC timeframe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Partial webservice annotation on the SEI but the implementor has complete attributes,CXF-463,12365080,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,maomaode,bharathganesh,bharathganesh,16/Mar/07 06:02,29/Aug/07 02:03,14/Mar/19 02:28,11/May/07 04:02,2.0,,,,,,,2.0,,Core,,,,,0,"The wsdllocation annotation can be present in the implementor class but absent in the endpointInterface. In JaxWsImplementorInfo when getWsdlLocation() method is invoked, it checks if seiAnnotation is present. Since it is present it just returns seiAnnotation.wsdlLocation(), which will be empty string.
Ideally it should check if it is non-empty else read the attribute from the implementor class.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111314,,,2007-03-16 06:02:04.0,,,,,,0|i0sz27:,167157,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"if holder part  is the first one of output messsage, runtime will fail",CXF-461,12364993,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,15/Mar/07 06:55,29/Aug/07 18:04,14/Mar/19 02:28,19/Mar/07 05:14,,,,,,,,2.0-RC,,,,,,,0,,,,,,,,,,,,,,,,,,15/Mar/07 06:59;ffang;soapheader.wsdl;https://issues.apache.org/jira/secure/attachment/12353350/soapheader.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111312,,,Thu Mar 15 06:59:22 UTC 2007,,,,,,0|i1a94f:,267944,,,,,,,,"15/Mar/07 06:59;ffang;see the sendReceiveAnyType operation in the wsdl. inout Holder is the first part of input and output message, but runtime always assume the first part of output message is not the holder which will cause ClassCastException",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-Daemon Timer thread created at RMManager,CXF-459,12364811,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bharathganesh,bharathganesh,13/Mar/07 12:52,29/Aug/07 18:03,14/Mar/19 02:28,15/Mar/07 12:24,,,,,,,,2.0-RC,,Core,,,,,0,"A Timer is created at org.apache.cxf.ws.rm.RMManager using the default Timer constructor. This causes the associate timer thread to run as a non-daemon thread.  
Since this timer is never cancelled, the thread to be there forever, stopping the VM from exiting. (Matters a lot at the JAX-WS client side)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-15 12:24:47.865,,,no_permission,,,,,,,,,,,,,111310,,,Thu Mar 15 12:24:47 UTC 2007,,,,,,0|i0sz2n:,167159,,,,,,,,15/Mar/07 12:24;asmyth;Used daemon thread instead.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak in ServerRegistry,CXF-458,12364784,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,njiang,bharathganesh,bharathganesh,13/Mar/07 08:48,29/Aug/07 18:04,14/Mar/19 02:28,15/Mar/07 13:53,2.0-RC,,,,,,,2.0-RC,,Core,,,,,0,"When an endpoint is published, the corresponding org.apache.cxf.endpoint.ServerImpl instance is registered with the ServerRegistry. I wanted to know the reason for this. As far as I could not see there are no accessors for this registry. 

During endpoint.stop(), the ServerImpl is not cleared from the Registry. This leads to strong reference of the ServerImpl, which would in-turn hold a reference to JaxWsEndpointImpl, the observer and all related stuff, causing  a huge memory bottleneck. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-15 13:53:42.309,,,no_permission,,,,,,,,,,,,,111309,,,Thu Mar 15 13:53:42 UTC 2007,,,,,,0|i0sz2v:,167160,,,,,,,,15/Mar/07 13:53;njiang;this issue has been fix in the reverion 518546,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Threadlocal memory leak,CXF-457,12364783,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bharathganesh,bharathganesh,13/Mar/07 08:43,29/Aug/07 18:04,14/Mar/19 02:28,15/Mar/07 13:52,,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"During web service invocation, the context threadlocal is set but never cleared. I think the threadlocal should be cleared at the end of invoke() method in JaxWsMethodInvoker. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-15 13:52:22.324,,,no_permission,,,,,,,,,,,,,111308,,,Thu Mar 15 13:52:22 UTC 2007,,,,,,0|i0v36v:,179490,,,,,,,,15/Mar/07 13:52;njiang;this issue has been fix in the reversion 518544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rpc mode doesn't work when message part use element but not type,CXF-456,12364782,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,13/Mar/07 08:28,29/Aug/07 18:03,14/Mar/19 02:28,13/Mar/07 10:02,,,,,,,,2.0-RC,,,,,,,0,,,,,,,,,,,,,,,,,,13/Mar/07 09:29;ffang;hello_world_rpc_lit.wsdl;https://issues.apache.org/jira/secure/attachment/12353169/hello_world_rpc_lit.wsdl,13/Mar/07 08:35;ffang;hello_world_rpc_lit.wsdl;https://issues.apache.org/jira/secure/attachment/12353165/hello_world_rpc_lit.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111307,,,Tue Mar 13 10:01:54 UTC 2007,,,,,,0|i13zdr:,231362,,,,,,,,"13/Mar/07 10:01;ffang;according to basic profile, message part shouldn't use element  in rpc",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't build Service from class with the right MessageInputName and MessageOutputName,CXF-455,12364670,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,11/Mar/07 07:57,29/Aug/07 02:05,14/Mar/19 02:28,11/Mar/07 08:07,2.0-RC,,,,,,,2.0-RC,,Core,,,,,0,"Current CXF's code first approach is implemented by simple front end's ReflectionServiceFactoryBean's buildServiceFromClass. It work for turning the Java class into a service model by looking some service information from ServiceConfiguration list, and will try to get the wrapped MessageInputName and MessageOutputName from JaxWsServiceConfiguration.

 But the JaxWsServiceConfiguration does not implement these methods, so ReflectionServiceFactoryBean will take the MessageInputName and MessageOutputName from the DefaultServiceConfiguration which set the message's target namespace as the operation namespace { http://cxf.apache.org/greeter_control}, but the message's target namespace actually should be {http://cxf.apache.org/greeter_control/types }.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111306,,,Sun Mar 11 08:07:11 UTC 2007,,,,,,0|i0sz33:,167161,,,,,,,,11/Mar/07 08:07;njiang;This issue has been resolved in the revision  516867,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document/Lit/Bare doesn't work for Java-Frist mode,CXF-454,12364527,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,johnson.ma,johnson.ma,09/Mar/07 04:21,29/Aug/07 02:03,14/Mar/19 02:28,16/May/07 06:38,2.0-RC,,,,,,,2.0,,Tooling,,,,,0,"1. Problem: Get exception from server when try to run doc/lib/bare for JAVA-First mode
2. Test process and files.
generate wsdl from java file, then generate client and server from that wsdl.
Hello.java
package com.iona;

import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import javax.jws.WebMethod;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.WebParam;

@SOAPBinding(use=javax.jws.soap.SOAPBinding.Use.LITERAL, style=javax.jws.soap.SOAPBinding.Style.DOCUMENT, parameterStyle=javax.jws.soap.SOAPBinding.ParameterStyle.BARE)
@WebService(name=""Hello"", targetNamespace=""http://iona.com/"")
public interface Hello {
   @WebMethod(operationName=""test"", exclude=false)
public float test(
		
		@WebParam(targetNamespace=""http://iona.com/"", name=""f1"")
		float f1, 
		@WebParam(targetNamespace=""http://iona.com/"", name=""f2"")
		float f2);
}

Generated Hello.wsdl
<?xml version=""1.0"" encoding=""UTF-8""?>
<wsdl:definitions targetNamespace=""http://iona.com/"" xmlns:tns=""http://iona.com/"" xmlns:ns1=""http://iona.com/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
  <wsdl:types>
    <xsd:schema targetNamespace=""http://iona.com/"" version=""1.0"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"">

  <xs:element name=""f1"" type=""xs:float""/>

  <xs:element name=""f2"" type=""xs:float""/>

  <xs:element name=""testResponse"" type=""xs:float""/>
</xsd:schema>
  </wsdl:types>
  <wsdl:message name=""testResponse"">
    <wsdl:part name=""return"" element=""tns:testResponse"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name=""test"">
    <wsdl:part name=""f1"" element=""tns:f1"">
    </wsdl:part>
    <wsdl:part name=""f2"" element=""tns:f2"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name=""Hello"">
    <wsdl:operation name=""test"">
      <wsdl:input name=""test"" message=""tns:test"">
    </wsdl:input>
      <wsdl:output name=""testResponse"" message=""tns:testResponse"">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name=""HelloBinding"" type=""tns:Hello"">
    <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
    <wsdl:operation name=""test"">
      <soap:operation style=""document""/>
      <wsdl:input name=""test"">
        <soap:body use=""literal""/>
      </wsdl:input>
      <wsdl:output name=""testResponse"">
        <soap:body use=""literal""/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name=""HelloService"">
    <wsdl:port name=""HelloPort"" binding=""tns:HelloBinding"">
      <soap:address location=""http://localhost:9000/HelloService""/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>

Generated HelloImpl.java when call w2j
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.iona;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebResult;

/**
 * This class was generated by the CXF 2.0-incubator-RC-SNAPSHOT
 * Fri Mar 09 12:17:19 GMT+08:00 2007
 * Generated source version: 2.0-incubator-RC-SNAPSHOT
 * 
 */

@javax.jws.WebService(name = ""Hello"", serviceName = ""HelloService"",
                      portName = ""HelloPort"",
                      targetNamespace = ""http://iona.com/"", 
                      wsdlLocation = ""file:/C:/Projects/STP/Workspaces/runtime-New_configuration3/JavaFirstRPCWrap/wsdl/com/iona/Hello.wsdl"" ,
		      endpointInterface = ""com.iona.Hello"")
                      
public class HelloImpl implements Hello {

    private static final Logger LOG = 
        Logger.getLogger(HelloImpl.class.getPackage().getName());

    /* (non-Javadoc)
     * @see com.iona.Hello#test(float  f1 ,)float  f2 )*
     */
    public float test(
        float f1,
        float f2
    )
    { 
       LOG.info(""Executing operation test"");
        return 0.0f;
    }

}


3. Exception
Exception from server:
INFO: Creating Service {http://iona.com/}HelloService from WSDL.
Invoking test...
Exception in thread ""main"" org.apache.cxf.binding.soap.SoapFault: Message part {http://iona.com/}f1 was not recognized.
	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:70)
	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:36)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
	at org.apache.cxf.interceptor.AbstractFaultChainIntiatorObserver.onMessage(AbstractFaultChainIntiatorObserver.java:63)
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:110)
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:48)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:281)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:654)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose(HTTPConduit.java:614)
	at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCachedOutputStream.java:114)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:65)
	at org.apache.cxf.interceptor.MessageSenderInterceptor.handleMessage(MessageSenderInterceptor.java:58)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:152)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:116)
	at $Proxy41.test(Unknown Source)
	at com.iona.HelloClient.main(HelloClient.java:69)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-16 06:38:34.986,,,no_permission,,,,,,,,,,,,,111305,,,Wed May 16 06:38:34 UTC 2007,,,,,,0|i0v23z:,179315,,,,,,,,16/May/07 06:38;ema;This issue is fixed after we use runtime to generate wsdl . ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXWS Java-Frist server side throws SoapFault when @WebParam is missing for rpc/lit,CXF-453,12364416,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,johnson.ma,johnson.ma,08/Mar/07 02:16,29/Aug/07 02:03,14/Mar/19 02:28,10/May/07 07:08,2.0-RC,,,,,,,2.0,,Tooling,,,,,0,"*Problem:For the Java-Frist mode, using the following example SEI class. the server will throws SOAPFault.
*SEI:
@SOAPBinding(style=javax.jws.soap.SOAPBinding.Style.RPC, use=javax.jws.soap.SOAPBinding.Use.LITERAL)
@WebService(name=""Hello"", targetNamespace=""http://iona.com/"")
public interface Hello {

	@WebMethod(operationName=""sayHi"", exclude=false)
	public void sayHi(
		long l1
    ) ;
}

*Generated wsdl (which use arg0 as part name, that is correct according to jaxws spec when @WebParam is missing):
<wsdl:message name=""sayHi"">
    <wsdl:part name=""arg0"" type=""xsd:long"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name=""sayHiResponse"">
  </wsdl:message>
  <wsdl:portType name=""Hello"">
    <wsdl:operation name=""sayHi"">
      <wsdl:input name=""sayHi"" message=""tns:sayHi"">
    </wsdl:input>
      <wsdl:output name=""sayHiResponse"" message=""tns:sayHiResponse"">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>

* Exception from server:
Invoking sayHi...
Exception in thread ""main"" org.apache.cxf.binding.soap.SoapFault: Parameter arg0 does not exist!
	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:70)
	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:36)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
	at org.apache.cxf.interceptor.AbstractFaultChainIntiatorObserver.onMessage(AbstractFaultChainIntiatorObserver.java:63)
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:110)
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:48)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:281)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:654)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose(HTTPConduit.java:614)
	at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCachedOutputStream.java:114)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:65)
	at org.apache.cxf.interceptor.MessageSenderInterceptor.handleMessage(MessageSenderInterceptor.java:58)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:168)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:152)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:116)
	at $Proxy40.sayHi(Unknown Source)
	at com.iona.HelloClient.main(HelloClient.java:69)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111304,,,2007-03-08 02:16:08.0,,,,,,0|i1a94n:,267945,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Classpath for the compiler in the DynamicClientFactory is not correctly set,CXF-452,12364348,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,tog,tog,07/Mar/07 15:13,29/Aug/07 02:05,14/Mar/19 02:28,23/Mar/07 05:07,2.0-RC,,,,,,,2.0-RC,,Core,,,,,0,"When compiling the code generated automatically by xjc, javac is missing some jaxb resources that are located in the classloader.",Windows XP SP2 + jdk1.5.0_10,,,,,,,,,,,,,,,,07/Mar/07 15:14;tog;patch1.txt;https://issues.apache.org/jira/secure/attachment/12352835/patch1.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-23 05:07:59.544,,,no_permission,,,,,,,,,,,,,111303,,,Fri Mar 23 05:07:59 UTC 2007,,,,,,0|i0sz3b:,167162,,,,,,,,07/Mar/07 15:14;tog;Attached is a patch,23/Mar/07 05:07;njiang;This patch has been applied in the revision 521566.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jms_test wsdl has bunch of warnings,CXF-451,12364316,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,07/Mar/07 03:57,29/Aug/07 02:05,14/Mar/19 02:28,26/Mar/07 08:28,2.0-RC,,,,,,,2.0-RC,,Transports,,,,,0,"/testutils/src/main/resources/wsdl/jms_test.wsdl issues:

* R2716/R2726 WSI-BasicProfile ver. 1.0, namespace attribute not allowed in doc/lit or rpc/lit for soapbind:fault: ""BadRecordLitFault""
* R2716/R2726 WSI-BasicProfile ver. 1.0, namespace attribute not allowed in doc/lit or rpc/lit for soapbind:fault: ""NoSuchCodeLitFault""
* in message ""NoSuchCodeLitFault"", part ""NoSuchCodeLit"" must specify a ""element"" attribute
* BadRecord not used in the wsdl, which i think should be chaged to BadRecordLit and the part BadRecordLitFault should ref this element.


Tools should also throws exceptions/warnings for those errors.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111302,,,2007-03-07 03:57:09.0,,,,,,0|i1a94v:,267946,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXWS JavaFirst throws NPE when @WebParameter is not defined in SEP for doc/lit/wrap,CXF-450,12364315,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,johnson.ma,johnson.ma,07/Mar/07 03:53,29/Aug/07 18:03,14/Mar/19 02:28,08/Mar/07 07:45,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"*JAXWS, JAVA-First, Document/Lit/Wrapper
* test java SEI class
@WebService(targetNamespace = ""http://iona.com/"", name = ""Hello"")

public interface Hello {

    @ResponseWrapper(targetNamespace = ""http://iona.com/"", className = ""com.iona.SayHiResponse"", localName = ""sayHiResponse"")
    @RequestWrapper(targetNamespace = ""http://iona.com/"", className = ""com.iona.SayHi"", localName = ""sayHi"")
    @WebMethod(operationName = ""sayHi"")
    public void sayHi(
        long l1
    );
}
* got nullpoint exception as following
INFO: Creating Service {http://iona.com/}HelloService from WSDL.
Exception in thread ""main"" java.lang.NullPointerException
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeParameter(ReflectionServiceFactoryBean.java:476)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeParameter(JaxWsServiceFactoryBean.java:343)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeClassInfo(JaxWsServiceFactoryBean.java:322)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperation(JaxWsServiceFactoryBean.java:160)

* reason:
In JaxWsServerFactoryBean, line number 342:
if (isIn && !isOut) {
            QName name = getInPartName(o, method, i);
            part = o.getInput().getMessagePart(name);
            initializeParameter(part, paramType, genericType);
            part.setIndex(i);
        } 
The part is null, which caused the NPE,
In JaxWSServiceConfiguration, line number 175.
public QName getInPartName(OperationInfo op, Method method, int paramNumber) {
        if (paramNumber < 0) {
            return null;
        }
        
        return getPartName(op, method, paramNumber, ""arg"" + paramNumber);
    }


But the wsdl we generated from SEI is using 
<xs:element name=""sayHi"">
    <xs:complexType>
      <xs:sequence>
        <xs:element form=""qualified"" name=""l1"" type=""xs:long""/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name=""sayHiResponse"">
    <xs:complexType/>
  </xs:element>
</xsd:schema>
  </wsdl:types>
  <wsdl:message name=""sayHi"">
    <wsdl:part name=""sayHi"" element=""tns:sayHi"">
    </wsdl:part>
  </wsdl:message>




So it looking for arg0, but it is defined in generated wsdl as 'l1'.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-08 07:42:23.153,,,no_permission,,,,,,,,,,,,,111301,,,Thu Mar 08 07:45:40 UTC 2007,,,,,,0|i0v33z:,179477,,,,,,,,"08/Mar/07 07:42;maomaode;java2wsdl delegate jaxb to generate the schema from the wrapper bean, but currently java2wsdl will not generate the wrapper bean from the SEI, so guess something wrong in your wrapper beans, the correct one should be：
ackage org.apache.cxf.tools.fortest.withannotation.doc.jaxws;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@XmlRootElement(name = ""sayHi"", namespace = ""http://doc.withannotation.fortest.tools.cxf.apache.org/"")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""sayHi"", namespace = ""http://doc.withannotation.fortest.tools.cxf.apache.org/"")
public class SayHi {

   @XmlElement(name = ""arg0"", namespace = """")
   private long arg0;

   /**
    *
    * @return
    *     returns long
    */
   public long getArg0() {
       return this.arg0;
   }

   /**
    *
    * @param arg0
    *     the value for the arg0 property
    */
   public void setArg0(long arg0) {
       this.arg0 = arg0;
   }

}


If your wrapper bean as same as the above, the wsdl should be generated with the arg0 as the augument.",08/Mar/07 07:45;maomaode;false alarm ;),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In java first approach the localName of the wrapper annotations should be ignored,CXF-449,12364212,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,06/Mar/07 09:22,29/Aug/07 02:05,14/Mar/19 02:28,08/Mar/07 02:25,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"Ref Spec 7.3
In java first approach, only the className is required in the wrapper annotation, 
that means the localName and the targetNamespace should be ignored.
current java2wsdl tool has a bug, it get the localName value and set the localName into the generated schema",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111300,,,Thu Mar 08 02:25:20 UTC 2007,,,,,,0|i13zgf:,231374,,,,,,,,"08/Mar/07 02:25;maomaode;fixed for both tools and tools2
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The access of imported xsd does not work if the xsd file is not installed under /WEB-INF/wsdl/ directory,CXF-448,12364211,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,06/Mar/07 09:13,29/Aug/07 18:03,14/Mar/19 02:28,13/Mar/07 03:19,,,,,,,,2.0-RC,,Transports,,,,,0,"The access of imported xsd does not work if the xsd file is not installed under /WEB-INF/wsdl/ directory

At the moment, we hard-coded to get xsd from /WEB-INF/wsdl directory. We should get xsd from the location relative to where wsdl file is located (which is configured in web.xml).

See ServletController.java, line 134, method generateXSD()",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111299,,,2007-03-06 09:13:08.0,,,,,,0|i1a953:,267947,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The java2wsdl tool generated wrong namespace for datatypes,CXF-447,12364107,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,johnson.ma,johnson.ma,05/Mar/07 10:22,29/Aug/07 02:03,14/Mar/19 02:28,18/Jun/07 19:02,2.0-RC,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"@WebService(wsdlLocation = ""file:/C:/projects/stp/workspace/runtime-New_configuration(2)/JavaFirstTest0305/wsdl/com/iona/HelloWorld.wsdl"", targetNamespace = ""http://iona.com/"", name = ""HelloWorld"")

public interface HelloWorld {

	@WebMethod(operationName = ""sayHi"")
    public void sayHi(
        java.lang.Float f1,
        java.lang.Float f2
    );
}

Since we do not define @RequestWrapper.className, so the JAXB class used by java2wsdl will be 'com.iona.jaxws.SayHi'

However, if we call the wsdl2java on the generated wsdl, it will generate type class 'com.iona.SayHi'

The reason is:
from  the spec, the default jaxb class is packagename+jaxws+methodName.
But in the generated wsdl, schema namespace is 'com.iona' , which should be set to 'com.iona.jaxws'",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-07 04:24:29.082,,,no_permission,,,,,,,,,,,,,111298,,,Wed Mar 07 04:24:29 UTC 2007,,,,,,0|i1a95b:,267948,,,,,,,,"07/Mar/07 04:24;maomaode;there is a bug in runtime

The codegen did right, according to the spec, in the absence of wrapper annotation, the bean class should be generated under the jaxws subpackage of the SEI package, the runtime should also load the bean class from the jaxws subpackage.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow JAX-WS implementation bean not to implement the service endpoint interface,CXF-446,12364098,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,gawor@mcs.anl.gov,gawor@mcs.anl.gov,05/Mar/07 05:45,29/Aug/07 18:04,14/Mar/19 02:28,11/Mar/07 08:05,,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"JAX-WS services (as per spec) are not required to implement the service endpoint interface. Right now, if the service does not implement the SEI, a ""object is not an instance of"" error is returned on an invocation. The attached patch enables the services not to implement the SEI and contains test for such cases.

This patch also contains updated test cases for CXF-444.

",,,,,,,,,,,,,,,,,05/Mar/07 05:46;gawor@mcs.anl.gov;CXF-446.patch;https://issues.apache.org/jira/secure/attachment/12352578/CXF-446.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-11 08:05:23.595,,,no_permission,,,,,,,,,,,,,111297,,,Sun Mar 11 08:05:23 UTC 2007,,,,,,0|i1a95j:,267949,,,,,,,,"11/Mar/07 08:05;njiang;This path has been applied in the reviosn 515443.
The issue of create service from implementaion class which has no wsdl location is resovled in the  CXF-455.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with services initialized without WSDL file,CXF-444,12364007,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,gawor@mcs.anl.gov,gawor@mcs.anl.gov,02/Mar/07 22:14,29/Aug/07 02:05,14/Mar/19 02:28,12/Mar/07 07:06,2.0-RC,,,,,,,2.0-RC,,Core,,,,,0,"When a service is initialized from an annotated class, the service returns a response that the client does not deserialize properly. I'm attaching a test case.

",,,,,,,,,,,,,,,,,02/Mar/07 22:20;gawor@mcs.anl.gov;CXF-444.patch;https://issues.apache.org/jira/secure/attachment/12352482/CXF-444.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-12 07:06:39.944,,,no_permission,,,,,,,,,,,,,111295,,,Mon Mar 12 07:06:39 UTC 2007,,,,,,0|i0sz3j:,167163,,,,,,,,"02/Mar/07 22:20;gawor@mcs.anl.gov;If the following is changed (in ServerGreeterNoWsdl.java) from:

Object implementor = new GreeterImplNoWsdl();

to:

Object implementor = new GreeterImpl();

the test passes. 

The GreeterImplNoWsdl uses a GreeterNoWsdl.java SEI that is exactly like the generated class but without the asynch methods and without the wsdl= attribute of the WebService annotation.
","05/Mar/07 05:48;gawor@mcs.anl.gov;Please see CXF-446 for slightly updated test cases.
",12/Mar/07 07:06;njiang;This bug has been resolved in the CXF-455.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@Resources are not injected into Handlers,CXF-437,12363532,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,dkulp,dkulp,23/Feb/07 21:14,19/Jun/07 01:43,14/Mar/19 02:28,19/Jun/07 01:42,2.0-RC,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"
The only resources that are injected into the JAX-WS handlers are the ones defined as init params.   The complete set needs to be available and injected.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-28 07:27:55.779,,,no_permission,,,,,,,,,,,,,111288,,,Wed Feb 28 07:27:55 UTC 2007,,,,,,0|i1a96f:,267953,,,,,,,,"28/Feb/07 07:27;jliu;From JAX-WS spec section 9.3.1:

The lifecycle of a handler instance begins when the JAX-WS runtime system creates a new instance of the 
handler class. 

The runtime MUST then carry out any injections requested by the handler, typically via the javax-
.annotation.Resource annotation. After all the injections have been carried out, including in the case 
where no injections were requested, the runtime MUST invoke the method carrying a javax.annotation- 
.PostConstruct annotation, if present. Such a method MUST satisfy the requirements in JSR-250 [31] 
for lifecycle methods (i.e. it has a void return type and takes zero arguments). The handler instance is then 
ready for use.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS Handlers @PostConstruct/@PreDestroy methods not called,CXF-436,12363531,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,dkulp,dkulp,23/Feb/07 21:11,19/Jun/07 01:50,14/Mar/19 02:28,19/Jun/07 01:50,2.0-RC,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"
The  @PostConstruct and @PreDestroy marked methods on the JAX-WS handlers aren't being called.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-16 01:47:48.385,,,no_permission,,,,,,,,,,,,,111287,,,Mon Apr 16 01:47:48 UTC 2007,,,,,,0|i1a96n:,267954,,,,,,,,"16/Apr/07 01:47;jliu;@PostConstruct has been fixed, @PreDestroy  is not done yet",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP response message is empty when HandlerChain is used,CXF-429,12363178,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gawor@mcs.anl.gov,gawor@mcs.anl.gov,19/Feb/07 22:14,29/Aug/07 02:05,14/Mar/19 02:28,26/Feb/07 18:37,,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"When @HandlerChain() annotation is added to the service class, the soap response is empty and the following exception is raised:

org.apache.cxf.binding.soap.SoapFault: Error reading XMLStreamReader.
        at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handle
Message(ReadHeadersInterceptor.java:118)
        at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handle
Message(ReadHeadersInterceptor.java:48)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseIntercept
orChain.java:168)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:281)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleR
esponse(HTTPConduit.java:654)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose
(HTTPConduit.java:614)
        at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCachedOutp
utStream.java:114)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:6
5)
        at org.apache.cxf.interceptor.MessageSenderInterceptor.handleMessage(Mes
sageSenderInterceptor.java:58)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseIntercept
orChain.java:168)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:152)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:11
6)
        at $Proxy42.greetMe(Unknown Source)
        at org.apache.cxf.systest.jaxws.ClientServerGreeterTest.testInvocation(C
lientServerGreeterTest.java:51)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at junit.framework.TestCase.runTest(TestCase.java:164)
        at junit.framework.TestCase.runBare(TestCase.java:130)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:120)
        at junit.framework.TestSuite.runTest(TestSuite.java:230)
        at junit.framework.TestSuite.run(TestSuite.java:225)
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.extensions.TestSetup.run(TestSetup.java:25)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.battery.JUnitBattery.executeJUnit(JUnitBatt
ery.java:242)
        at org.apache.maven.surefire.battery.JUnitBattery.execute(JUnitBattery.j
ava:216)
        at org.apache.maven.surefire.Surefire.executeBattery(Surefire.java:215)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:126)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:87)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:63)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.SurefireBooter.main(SurefireBooter.java:785
)
Caused by: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog
 at [row,col {unknown-source}]: [1,0]
        at com.ctc.wstx.sr.StreamScanner.throwUnexpectedEOF(StreamScanner.java:6
61)
        at com.ctc.wstx.sr.BasicStreamReader.handleEOF(BasicStreamReader.java:21
34)
        at com.ctc.wstx.sr.BasicStreamReader.nextFromProlog(BasicStreamReader.ja
va:2040)
        at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1069)
        at com.ctc.wstx.sr.BasicStreamReader.nextTag(BasicStreamReader.java:1095
)
        at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handle
Message(ReadHeadersInterceptor.java:73)
        ... 45 more


Attaching a test case for this error.",,,,,,,,,,,,,,,,,19/Feb/07 22:16;gawor@mcs.anl.gov;CXF-429.patch;https://issues.apache.org/jira/secure/attachment/12351537/CXF-429.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111280,,,Mon Feb 19 22:16:17 UTC 2007,,,,,,0|i1a7kf:,267692,,,,,,,,"19/Feb/07 22:16;gawor@mcs.anl.gov;Attached the test case that demonstrates the problem. if the @HandlerChain annotation is removed from the service class, the test will pass.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java generates code/annotations with absolute paths even if relative paths are specified on the command line.,CXF-426,12362959,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,flynch,flynch,15/Feb/07 21:05,29/Aug/07 02:05,14/Mar/19 02:28,20/Mar/07 08:48,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"if you execute wsdl2java ./HelloWorld.wsdl or wsdl2java file:wsdl/hello_world.wsdl
You will find that the generated code and annotations use absolute paths like the following:

import org.apache.hello_world_soap_http.Greeter;
/**
 * This class was generated by the CXF 2.0-M1-IONA
 * Tue Jan 30 14:59:09 EST 2007
 * Generated source version: 2.0-M1-IONA
 * 
 */

@WebServiceClient(name = ""SOAPService"", targetNamespace = ""http://apache.org/hello_world_soap_http"", wsdlLocation = ""file:/opt/celtix/samples/service_creation/hello_world/wsdl/hello_world.wsdl"")
public class SOAPService extends Service {


I had a quick email chat with Dan Kulp on this topic, he said: 

""Looking into this some more, this is a huge bug in the code generators.   I 
have a minor fix that will get the file:wsdl/hello_world.wsdl thing working.   
However, acording to the JAX-WS spec, the wsdlLocation attribute MUST be 
relative URL (section 5.2.5.3).   Thus, the generated code is very wrong.   
However, fixing that is a big deal as the runtime would need to be updated to 
follow the section 5.2 rules as well.  In anycase, please log some bugs 
around this.""

so here is the bug. ",all,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111277,,,2007-02-15 21:05:55.0,,,,,,0|i1a7kv:,267694,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support detection of most appropriate Bus,CXF-420,12362590,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,dandiep,dandiep,12/Feb/07 15:53,23/Apr/07 04:17,14/Mar/19 02:28,23/Apr/07 04:17,2.0-M1,,,,,,,2.0-RC,,Bus,,,,,0,"We should support detection of whether or not Spring is on the classpath. If it is not, we should choose the ExtensionManagerBus. If it is, we should choose the SpringBusFactory.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111271,,,2007-02-12 15:53:21.0,,,,,,0|i13zzz:,231462,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update JMS samples/document to reflect new config format,CXF-419,12362585,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,dandiep,dandiep,12/Feb/07 14:44,26/Mar/07 01:40,14/Mar/19 02:28,26/Mar/07 01:40,2.0-RC,,,,,,,2.0-RC,,Transports,,,,,0,"I changed around the configuration format to make things simpler, however now the JMS samples/docs are out of date. These need to be brought back in line.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111270,,,2007-02-12 14:44:15.0,,,,,,0|i1a7lr:,267698,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AttachmentDeserializer will throw out NullPoint exception, if Content-ID is null",CXF-418,12362551,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,unrealjiang,unrealjiang,12/Feb/07 08:29,23/Apr/07 03:53,14/Mar/19 02:28,23/Apr/07 03:53,2.0-RC,,,,,,,2.0-RC,,Core,,,,,0,"AttachmentDeserializer readNext() will throw out NullPoint exception, if Content-ID is null.  Actually it will return null instead of throwing exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111269,,,2007-02-12 08:29:22.0,,,,,,0|i0sz4f:,167167,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jms_queue sample is not compiling,CXF-417,12362494,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,janstey,janstey,10/Feb/07 14:54,29/Aug/07 18:04,14/Mar/19 02:28,12/Feb/07 18:05,,,,,,,,2.0-RC,,,,,,,0,Several JMS types have been moved to a different namespace. This sample needs to be updated so it can compile.,,,,,,,,,,,,,,,,,10/Feb/07 14:55;janstey;cxf-417.patch;https://issues.apache.org/jira/secure/attachment/12350830/cxf-417.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111268,,,Mon Feb 12 18:04:58 UTC 2007,,,,,,0|i146on:,232546,,,,,,,,10/Feb/07 14:55;janstey;Very simple patch to fix the issue.,12/Feb/07 18:04;janstey;This has been committed in r506502.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ws_rm and streamInterceptor samples fail,CXF-416,12362446,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,janstey,janstey,09/Feb/07 18:05,29/Aug/07 02:05,14/Mar/19 02:28,09/Feb/07 19:59,,,,,,,,2.0-RC,,,,,,,0,This is the same problem that was identified in CXF-405.,,,,,,,,,,,,,,,,,09/Feb/07 18:06;janstey;cxf-416.patch;https://issues.apache.org/jira/secure/attachment/12350775/cxf-416.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111267,,,Fri Feb 09 18:06:55 UTC 2007,,,,,,0|i1a7lz:,267699,,,,,,,,09/Feb/07 18:06;janstey;Patch to fix the issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decoupled Endpoint Observer should not insert HttpRequest and HttpResponse instances into the Message.,CXF-415,12362352,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,apaibir,apaibir,apaibir,08/Feb/07 19:34,29/Aug/07 02:05,14/Mar/19 02:28,09/Feb/07 10:35,2.0-M1,,,,,,,2.0-RC,,Transports,,,,,0,"The Decouple Endpoint Observer inserts HttpRequest,HttpResponse instances into the Application supplied response context. Now if the ClientImpl.invoke is generally called on a thread different from the thread on which decoupled endpoint received the response then a race condition is introduced. The thread on which invoke was called may sometime see a IllegalStateException for the HttpResponse instance inserted into the context during decoupled endpoint thread processing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111266,,,2007-02-08 19:34:51.0,,,,,,0|i0v313:,179464,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting ENDPOINT_ADDRESS_PROPERTY property on client proxy has no effect,CXF-414,12362256,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gawor@mcs.anl.gov,gawor@mcs.anl.gov,07/Feb/07 22:26,18/Nov/08 14:50,14/Mar/19 02:28,09/Apr/07 14:57,,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"I'm doing the following:

Greeter g = foo.getPort(Greeter.class);
(javax.xml.ws.BindingProvider)g).getRequestContext().put(javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY, ""http://localhost:8080/jaxws-war-2.0-SNAPSHOT/hello"");
g.greetMe(""foo"");

when the ENDPOINT_ADDRESS_PROPERTY is set or not I get the following exception:

org.apache.cxf.interceptor.Fault
        at org.apache.cxf.endpoint.ClientImpl.getConduit(ClientImpl.java:299)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:138)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:12
4)
        at $Proxy54.greetMe(Unknown Source)
        at org.apache.hello_world_soap_http.GreeterImpl.greetMe(GreeterImpl.java
....
Caused by: java.net.MalformedURLException
        at java.net.URL.<init>(URL.java:601)
        at java.net.URL.<init>(URL.java:464)
        at java.net.URL.<init>(URL.java:413)
        at org.apache.cxf.transport.http.HTTPConduit.<init>(HTTPConduit.java:138
)
        at org.apache.cxf.transport.http.HTTPConduit.<init>(HTTPConduit.java:111
)
        at org.apache.cxf.transport.http.HTTPConduit.<init>(HTTPConduit.java:97)

        at org.apache.cxf.transport.http.HTTPTransportFactory.getConduit(HTTPTra
nsportFactory.java:115)
        at org.apache.cxf.transport.http.HTTPTransportFactory.getConduit(HTTPTra
nsportFactory.java:111)
        at org.apache.cxf.binding.soap.SoapTransportFactory.getConduit(SoapTrans
portFactory.java:152)
        at org.apache.cxf.endpoint.ClientImpl.getConduit(ClientImpl.java:295)
        ... 41 more

The MalformedURLException s raised in HTTPConduit because endpointInfo.getAddress() returns null or empty.

To fix this I had to add the following to JaxWsClientProxy:

        ...
        ContextPropertiesMapping.mapRequestfromJaxws2Cxf(reqContext);

        String address = (String)reqContext.get(org.apache.cxf.message.Message.ENDPOINT_ADDRESS);
        if (address != null) {
            endpoint.getEndpointInfo().setAddress(address);
        }
 
        ..
        context.put(Client.REQUEST_CONTEXT, reqContext);

Also, I think the problem is when the Service instance is created from full WSDL the EndpointInfo is not completely filled out with the service address information as specified in WSDL. But that's a separate issue from above.



",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-11-18 10:34:36.293,,,no_permission,,,,,,,,,,,,,111265,,,Tue Nov 18 14:50:52 UTC 2008,,,,,,0|i1a7m7:,267700,,,,,,,,"07/Feb/07 22:29;gawor@mcs.anl.gov;I should mention that 'foo' Service class was initialized with full WSDL.
","09/Feb/07 19:47;gawor@mcs.anl.gov;I can't replicate the error with latest code. Will open a new bug if I see it again.

","14/Mar/07 16:23;gawor@mcs.anl.gov;I ran into this problem again. This time I know that the problem is only when the soap:addresss location value in the wsdl is not a valid URL. For example, in the wsdl file I had: 

 <soap:address location=""FOO""/>

And setting the BindingProvider.ENDPOINT_ADDRESS_PROPERTY property has no effect. However, when the location is changed to some valid URL (but non-existent) the BindingProvider.ENDPOINT_ADDRESS_PROPERTY overwrite works as expected.


",09/Apr/07 14:57;gawor@mcs.anl.gov;Resolving this issue as I believe this has been fixed now.,"18/Nov/08 10:34;cheekychops;I don't believe this issue is fixed. 

I am using CXF 2.1.3 to access the SalesForce.com enterprise web service, which, after logon, requires the client to update the endpoint address with the serverUrl returned in the logon result.

To reproduce this problem you will need to sign up for a developer account with salesforce.com and download the wsdl by clicking Setup -> Develop -> API -> Download Enterprise WSDL. To log in successfully you must append your security token (which is emailed to you) to your password.

The stack trace below is produced by the following code:

            LoginResult result = sforceService.getSoap().login(getUsername(), getPassword());
            String serverUrl = result.getServerUrl();
            Soap service = sforceService.getPort(Soap.class);
            Map<String, Object> requestContext = ((BindingProvider)service).getRequestContext();
            requestContext.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, serverUrl);
            DescribeGlobalResult describeGlobalResult = sforceService.getSoap().describeGlobal();
            List<String> types = describeGlobalResult.getTypes();

Testcase: testPing(com.cmc.crmbridge.services.salesforce.TestSalesForceWebServiceClient):        Caused an ERROR
javax.xml.ws.soap.SOAPFaultException: UNKNOWN_EXCEPTION: Destination URL not reset. The URL returned from login must be set in the SforceService
com.cmc.crmbridge.services.CRMServiceException: javax.xml.ws.soap.SOAPFaultException: UNKNOWN_EXCEPTION: Destination URL not reset. The URL returned from login must be set in the SforceService
        at com.cmc.crmbridge.services.salesforce.SalesForceWebServiceClient.logon(SalesForceWebServiceClient.java:194)
        at com.cmc.crmbridge.services.salesforce.SalesForceWebServiceClient.ping(SalesForceWebServiceClient.java:300)
        at com.cmc.crmbridge.services.salesforce.TestSalesForceWebServiceClient.testPing(TestSalesForceWebServiceClient.java:41)
Caused by: javax.xml.ws.soap.SOAPFaultException: UNKNOWN_EXCEPTION: Destination URL not reset. The URL returned from login must be set in the SforceService
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:145)
        at $Proxy42.describeGlobal(Unknown Source)

I also tried using the Dynamic client, without luck:
1) putting the serverUrl in the Map returned by Client.getRequestContext()
2) passing the serverUrl to Client.getEndpoint().getEndpointInfo().setAddress(serverUrl);
","18/Nov/08 10:48;gmazza;Could you recode it somewhat differently, the way I am doing here (in Step #7):
http://www.jroller.com/gmazza/entry/using_the_ebay_shopping_api1#clientcode

I wonder if that would fix it.","18/Nov/08 11:53;cheekychops;Thanks Glen, with your help I fixed it... though I don't understand how your code works!

I looked at the contents of the requestContext map 

org.apache.cxf.message.Message.ENDPOINT_ADDRESS=https://www.salesforce.com/services/Soap/c/14.0

so I updated that property with the new URL, NOT BindingProvider.ENDPOINT_ADDRESS_PROPERTY, which is ""javax.xml.ws.service.endpoint.address""




",18/Nov/08 12:30;gmazza;Hmmm...maybe org.apache.cxf.message.Message.ENDPOINT_ADDRESS is used for WS-Addressing?  I don't know why your situation was different.,"18/Nov/08 14:13;dkulp;Soap service = sforceService.getPort(Soap.class); 
Map<String, Object> requestContext = ((BindingProvider)service).getRequestContext(); 
requestContext.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, serverUrl); 
DescribeGlobalResult describeGlobalResult = sforceService.getSoap().describeGlobal(); 


the call to sforceService.getSoap() in the last line is creating a new client proxy that would have the original address back in it.   Change to:
DescribeGlobalResult describeGlobalResult = service.describeGlobal(); ",18/Nov/08 14:50;cheekychops;Aha! Thanks Daniel!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tools2 needs fixing to support soap headers in rpc/literal case,CXF-413,12362218,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,dkulp,dkulp,07/Feb/07 17:04,29/Aug/07 02:05,14/Mar/19 02:28,19/Mar/07 11:49,2.0-M1,,,,,,,2.0-RC,,Tooling,,,,,0,"
The tools were updated to generate proper code for soap headers in the rpc/literal case while testing CXF-261.   The tools2 modules should be updated as well.   The problem was that the tools were only looking at the operation to determine if a part is ""document"" or ""rpc"" style.   However, soap headers are ALWAYS document style.   Thus, the @WebParam annotation did not have the correct namespace and name attributes.

The soapheader_rpc.wsdl added to testutils shows this and a unit test was added to testutils to make sure the generated code for that wsdl is correct.   It passes with tools1.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111264,,,2007-02-07 17:04:56.0,,,,,,0|i0v32v:,179472,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
samples/streamInterceptor server fails to start,CXF-409,12362137,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,fdushin,fdushin,06/Feb/07 20:45,29/Aug/07 02:05,14/Mar/19 02:28,09/Feb/07 20:00,2.0-RC,,,,,,,2.0-RC,,Configuration,,,,,0,"
Running off revision 504256, I built a kit and installed it in /tmp.  The server fails to start due to a ClassNotFound exception, presumably relating to config:

/tmp/cxf/cxf-2.0-incubator-RC-SNAPSHOT/samples/streamInterceptor> ant server
Buildfile: build.xml

maybe.generate.code:

generate.code:
     [echo] Generating code using wsdl2java...
    [mkdir] Created dir: /private/tmp/cxf/cxf-2.0-incubator-RC-SNAPSHOT/samples/streamInterceptor/build/classes
    [mkdir] Created dir: /private/tmp/cxf/cxf-2.0-incubator-RC-SNAPSHOT/samples/streamInterceptor/build/src
     [java] wsdl2java -verbose -d /private/tmp/cxf/cxf-2.0-incubator-RC-SNAPSHOT/samples/streamInterceptor/build/src /private/tmp/cxf/cxf-2.0-incubator-RC-SNAPSHOT/samples/streamInterceptor/wsdl/hello_world.wsdl
     [java] wsdl2java - 2.0-incubator-RC-SNAPSHOT

    [touch] Creating /private/tmp/cxf/cxf-2.0-incubator-RC-SNAPSHOT/samples/streamInterceptor/build/src/.CODEGEN_DONE

compile:
    [javac] Compiling 17 source files to /private/tmp/cxf/cxf-2.0-incubator-RC-SNAPSHOT/samples/streamInterceptor/build/classes

build:

server:
     [java] Starting Server
     [java] Exception in thread ""main"" org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.apache.cxf.bus.spring.SpringBusImpl] for bean with name 'cxf' defined in class path resource [server.xml]; nested exception is java.lang.ClassNotFoundException: org.apache.cxf.bus.spring.SpringBusImpl
     [java] Caused by: java.lang.ClassNotFoundException: org.apache.cxf.bus.spring.SpringBusImpl
     [java]     at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
     [java]     at java.security.AccessController.doPrivileged(Native Method)
     [java]     at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
     [java]     at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
     [java]     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268)
     [java]     at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
     [java]     at org.springframework.util.ClassUtils.forName(ClassUtils.java:177)
     [java]     at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:313)
     [java]     at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:912)
     [java]     at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:165)
     [java]     at org.springframework.context.support.AbstractApplicationContext.getBeanNamesForType(AbstractApplicationContext.java:687)
     [java]     at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:397)
     [java]     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:330)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:71)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:59)
     [java]     at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:50)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:67)
     [java]     at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:56)
     [java]     at org.apache.cxf.jaxws.spi.ProviderImpl.createEndpoint(ProviderImpl.java:56)
     [java]     at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:66)
     [java]     at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
     [java]     at demo.stream.server.Server.<init>(Server.java:31)
     [java]     at demo.stream.server.Server.main(Server.java:35)
     [java] Java Result: 1
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-09 19:19:17.215,,,no_permission,,,,,,,,,,,,,111260,,,Fri Feb 09 19:19:17 UTC 2007,,,,,,0|i1a7mf:,267701,,,,,,,,09/Feb/07 19:19;janstey;The patch I attached for http://issues.apache.org/jira/browse/CXF-416 also fixes this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AnnotationHandlerChainBuilder.buildHandlerChainFromClass() considers only one handler chain,CXF-406,12361904,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gawor@mcs.anl.gov,gawor@mcs.anl.gov,03/Feb/07 06:19,29/Aug/07 02:05,14/Mar/19 02:28,09/Apr/07 14:51,2.0-RC,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"The AnnotationHandlerChainBuilder.buildHandlerChainFromClass() considers only one handler chain. It is even mentioned in the following comment in the code:

                //We expect only one HandlerChainType here
                hc = (HandlerChainType) handlerChainsType.getHandlerChain().iterator().next();

All handler chains need to be processed especially when @HandlerChain annotation is specified on a generated javax.xml.ws.Service class, etc.",,,,,,,,,,,,,,,,,09/Feb/07 21:27;gawor@mcs.anl.gov;CXF-406.patch;https://issues.apache.org/jira/secure/attachment/12350789/CXF-406.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111257,,,Mon Apr 09 14:51:21 UTC 2007,,,,,,0|i1a7mv:,267703,,,,,,,,"09/Feb/07 21:27;gawor@mcs.anl.gov;The attached patch contains the following changes:

1) Modifies the AnnotationHandlerChainBuilder.buildHandlerChainFromClass() to consider all the chains in the handlers file.

2) A test case for the above.

3) Addresses CXF-408 by factoring out the handler file resolution to a separate method (so that in can be overwritten by subclasses).

",09/Apr/07 14:51;gawor@mcs.anl.gov;Resolving this issue as the patch was applied. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ws_addressing sample fails,CXF-405,12361848,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,janstey,janstey,02/Feb/07 15:00,02/Feb/07 15:34,14/Mar/19 02:28,02/Feb/07 15:34,,,,,,,,2.0-RC,,,,,,,0,"The sample in distribution/src/main/release/samples/ws_addressing fails with the following error:

Exception in thread ""main"" org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.apache.cxf.bus.spring.SpringBusImpl] for bean with name 'cxf' defined in class path resource [server.xml]; nested exception is java.lang.ClassNotFoundException: org.apache.cxf.bus.spring.SpringBusImpl
Caused by: java.lang.ClassNotFoundException: org.apache.cxf.bus.spring.SpringBusImpl
	at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:177)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:912)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:165)
	at org.springframework.context.support.AbstractApplicationContext.getBeanNamesForType(AbstractApplicationContext.java:687)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:397)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:330)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:71)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:59)
	at org.apache.cxf.bus.spring.SpringBusFactory.createBus(SpringBusFactory.java:50)
	at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:58)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createEndpoint(ProviderImpl.java:56)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:66)
	at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
	at demo.ws_addressing.server.Server.<init>(Server.java:32)
	at demo.ws_addressing.server.Server.main(Server.java:36)

I'm pretty sure the config files (server/client.xml) just need to be updated to comply with the latest CXF bus refactor.",,,,,,,,,,,,,,,,,02/Feb/07 15:01;janstey;cxf-405.patch;https://issues.apache.org/jira/secure/attachment/12350221/cxf-405.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111256,,,Fri Feb 02 15:01:21 UTC 2007,,,,,,0|i1a7n3:,267704,,,,,,,,02/Feb/07 15:01;janstey;Patch to fix the issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging of failure to activate a JMS destination is too low at level fine. It should be error,CXF-404,12361771,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,gtully,gtully,01/Feb/07 16:50,29/Aug/07 18:03,14/Mar/19 02:28,09/Feb/07 05:59,2.0-M1,,,,,,,2.0-RC,,Transports,,,,,0,"A JMS destination/endpoint that is badly configured gets a silent failure and nothing is logged unless level is > FINE. This needs to be flagged as an error in the log. In addition, why is the exception swallowed here?

From JMSDestination:activate(..)

        try {
            getLogger().log(Level.FINE, ""establishing JMS connection"");
            JMSProviderHub.connect(base, config);
            //Get a non-pooled session. 
            listenerSession = base.sessionFactory.get(base.targetDestination);
            listenerThread = new JMSListenerThread(listenerSession);
            listenerThread.start();
        } catch (JMSException ex) {
            getLogger().log(Level.FINE, ""JMS connect failed with JMSException : "", ex);
        } catch (NamingException nex) {
            getLogger().log(Level.FINE, ""JMS connect failed with NamingException : "", nex);
        }",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111255,,,2007-02-01 16:50:37.0,,,,,,0|i1a7nb:,267705,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF fails when a Service contains a collection of ports that refer to multiple portTypes.,CXF-403,12361770,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,flynch,flynch,01/Feb/07 16:41,23/Apr/07 04:17,14/Mar/19 02:28,23/Apr/07 04:17,2.0-RC,,,,,,,2.0-RC,,Core,,,,,0,"The CXF runtime raises an exception statiing that ""All endpoints must share the same portType"" if a service contains a list of ports (endpoints) that refer to multiple portTypes. We encountered this while building the mtosi wsdl (tmf 854). This is a violation of the WSDL 1.1 specification  (http://www.w3.org/TR/wsdl#_services) section 2.7 ""By examining it's ports, we can determine a service's port types"" - note that port types is plural :)

Below is the complete stack trace from CXF:  

INFO: Creating Service {tmf854.v1.ws}ConfigurationService from WSDL.
Exception in thread ""main"" java.lang.IllegalStateException: All endpoints must share the same portType
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildService(WSDLServiceBuilder.java:134)
        at org.apache.cxf.wsdl11.WSDLServiceFactory.create(WSDLServiceFactory.java:71)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:176)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:116)
        at org.apache.cxf.jaxws.ServiceImpl.createPort(ServiceImpl.java:240)
        at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:200)
        at javax.xml.ws.Service.getPort(Service.java:94)
        at ws.v1.tmf854.ConfigurationService.getEquipmentInventoryMgrHttp(ConfigurationService.java:87)","Windows, Linux, all....",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111254,,,2007-02-01 16:41:00.0,,,,,,0|i0sz5b:,167171,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support new APIs in JAX-WS 2.1 related to creation and binding of EPRs from the application level,CXF-399,12361752,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,eglynn,eglynn,eglynn,01/Feb/07 14:29,29/Aug/07 18:10,14/Mar/19 02:28,14/May/07 12:53,,,,,,,,2.0,,JAX-WS Runtime,,,,,0,"Support new APIs in JAX-WS 2.1 related to creation and binding of EPRs from the application level, including but not limited to:

- BindingProvider.getEdnpointReference()
- Provider.createEndpointReference()
- Service.getPort(EndpointReference ...)",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111251,,,Mon May 14 12:53:16 UTC 2007,,,,,,0|i1a7nz:,267708,,,,,,,,"14/May/07 12:53;eglynn;Initial cut implemented by Gary Tully  and committed in r530804, requires using a utility class to access the internal impl from the JAX-WS 2.0 Service instance. 

Also uses the JAXB generated EndpointReferenceType instead of the JAX-WS 2.1 EndpointReference as the EPR representation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XMLBinding Provider<Source> implementations can not receive Multipart/Related messages ,CXF-398,12361673,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,sergey_beryozkin,sergey_beryozkin,31/Jan/07 18:18,09/Feb/07 08:19,14/Mar/19 02:28,09/Feb/07 08:19,2.0-RC,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"XMLBinding Provider<Source> implementaions should be able to get the root part of Multipart/Related messages as input Source in invoke(Source) and other (XML, text,  binary) attachments as MesageContext.INBOUND_MESSAGE_ATTACHMENTS",Windows,,,,,,,,,,,,,,,,31/Jan/07 18:29;sergey_beryozkin;rt_provider_attachment.patch;https://issues.apache.org/jira/secure/attachment/12350059/rt_provider_attachment.patch,01/Feb/07 15:01;sergey_beryozkin;rt_provider_attachment2.patch;https://issues.apache.org/jira/secure/attachment/12350140/rt_provider_attachment2.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-02-09 08:19:23.819,,,no_permission,,,,,,,,,,,,,111250,,,Fri Feb 09 08:19:23 UTC 2007,,,,,,0|i140gv:,231538,,,,,,,,"31/Jan/07 18:29;sergey_beryozkin;Patch includes following updates :

* org.apache.cxf.binding.xml.XMLBindingFactory updated to add AttachmentInInterceptor to created bindings
* org.apache.cxf.jaxws.ProviderChainObserver.onMessage() adds AttachmentInInterceptor unless Provider's type parameter is DataSource or SourceMessage
* org.apache.cxf.jaxws.support.ContextPropertiesMappping converts Message.getAttachments into Map<String, DataHandler> as per JAXWS spec
* org.apache.cxf.jaxws.interceptors.DispatchInInterceptor skips GET requets
* org.apache.cxf.jaxws.interceptors.DispatchOutInterceptor closes DataSource input stream after copying the data to output stream
* org.apache.cxf.jaxws.transports.http.JettyHTTPDestination updated not to duplicate response Content-Type and honour Content-Type property if set in Provider implementations

Added unit tests and system test
","31/Jan/07 18:37;sergey_beryozkin;After this patch applied the follwing needs to be done :

* New Jira issue opened for creating LazyAttachmentMap which will defer the actual reading of the attachments until Provider<Source> will actually request them

* for Provider<SoapBody> : on response a Provider implementation may wish to return Message.OUTBOUND_MESSAGE_ATTACHMENTS, which will need to be converted in org.apache.cxf.jaxws.support.ContextPropertiesMappping to out Message.setAttachments;  org.apache.cxf.jaxws.ProviderChainObserver.onMessage() will need AttachmentOutInterceptor added too to handle this case

* Clarify if Provider<DataSource> implementations need to get the root part only as DataSource, if yes then it will require a single line change to ProviderChainObserver which does not (in the attached path) adds AttachmentInInterceptor for Provider<DataSource>","31/Jan/07 18:49;sergey_beryozkin;Forgot to add one more change description :
* Updated org.apache.cxf.jaxb.io.XMLMessageDataReader to try to read even if InputStream.available() shows 0, as it's not a reliable indication that the stream can not fetch more data",01/Feb/07 15:01;sergey_beryozkin;Update to http2/JettyHTTPDestination and jaxws/ServletDestination to set Content-Type on response,09/Feb/07 08:19;blin;patch reviewed and applied by Eoghan with r502283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP binding expects '/' on each side of the brackets ,CXF-394,12361428,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,dandiep,dandiep,28/Jan/07 20:46,20/Aug/07 16:45,14/Mar/19 02:28,29/Jan/07 18:13,,,,,,,,2.0-RC,,,,,,,0,"Stack trace:

   [java] INFO: Interceptor has thrown exception, unwinding now
     [java] java.lang.IllegalStateException: Unexpected character '/' at index 0
     [java]     at org.apache.cxf.binding.http.IriDecoderHelper.expect(IriDecoderHelper.java:121)
     [java]     at org.apache.cxf.binding.http.IriDecoderHelper.decodeIri(IriDecoderHelper.java:72)
     [java]     at org.apache.cxf.binding.http.interceptor.URIParameterInInterceptor.handleMessage(URIParameterInInterceptor.java:92)

     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:159)
     [java]     at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:64)
     [java]     at org.apache.cxf.transport.http.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:296)
     [java]     at org.apache.cxf.transport.http.JettyHTTPDestination.doService(JettyHTTPDestination.java:268)
     [java]     at org.apache.cxf.transport.http.JettyHTTPDestination$2.handle(JettyHTTPDestination.java:126) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-20 16:45:12.691,,,no_permission,,,,,,,,,,,,,111246,,,Mon Aug 20 16:45:12 UTC 2007,,,,,,0|i1a7on:,267711,,,,,,,,29/Jan/07 18:13;dandiep;Fixed in SVN now.,"20/Aug/07 16:45;osiris;this also happens to me in CXF 2.0.1
all worked fine in 2.0-RC but when i changed to 2.0.1 this happen

     [java] Aug 20, 2007 4:18:28 PM org.apache.cxf.interceptor.AttachmentInInterceptor handleMessage
     [java] INFO: AttachmentInInterceptor skipped in HTTP GET method
     [java] Aug 20, 2007 4:18:28 PM org.apache.cxf.binding.http.interceptor.DispatchInterceptor handleMessage
     [java] INFO: Invoking GET on /utentes/1
     [java] Aug 20, 2007 4:18:28 PM org.apache.cxf.binding.http.interceptor.URIParameterInInterceptor handleMessage
     [java] INFO: URIParameterInterceptor handle message on path [/utentes/1] with content-type [null]
     [java] Aug 20, 2007 4:18:28 PM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
     [java] INFO: Interceptor has thrown exception, unwinding now

     [java] java.lang.IllegalStateException: Unexpected character '/' at index 0
     [java] 	at org.apache.cxf.binding.http.IriDecoderHelper.expect(IriDecoderHelper.java:153)
     [java] 	at org.apache.cxf.binding.http.IriDecoderHelper.decodeIri(IriDecoderHelper.java:85)
     [java] 	at org.apache.cxf.binding.http.interceptor.URIParameterInInterceptor.handleMessage(URIParameterInInterceptor.java:102)
     [java] 	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207)
     [java] 	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:73)
     [java] 	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:256)
     [java] 	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:212)
     [java] 	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54)
     [java] 	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
     [java] 	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)
     [java] 	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
     [java] 	at org.mortbay.jetty.Server.handle(Server.java:313)
     [java] 	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)
     [java] 	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:830)
     [java] 	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
     [java] 	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
     [java] 	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381)
     [java] 	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396)
     [java] 	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
All JMS message properties are always copied from source to destination,CXF-393,12361336,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,gtully,gtully,26/Jan/07 16:32,29/Aug/07 02:05,14/Mar/19 02:28,07/Feb/07 10:54,2.0-M1,,,,,,,2.0-RC,,Transports,,,,,0,"Some JMS implementations are strict about the setting of properties. The properties valid on an incomming message are not valid for an outgoing message. CXF by default will copy all message properties from the input message to request headers and copy the headers to a reply. This can lead to failure to send reply messages. For example JMSX properties that indicate a message is a needs a reply have no business themselves in a reply.
The fix would allow an exclued filter be specified on property read such that a set of known request propertys can be omitted/excluded from the headers. This could be applied on either the getter or setter. Since the setter is typically where the problem arises, limiting the JMS properties that can be set may be the best solution.",,,,,,,,,,,,,,,,,05/Feb/07 15:56;gtully;cxf-393.rel.patch;https://issues.apache.org/jira/secure/attachment/12350354/cxf-393.rel.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111245,,,Wed Feb 07 10:54:48 UTC 2007,,,,,,0|i13znz:,231408,,,,,,,,26/Jan/07 16:34;gtully;possibly a good fix it to provide a regular expression in config that is used (if present) to gate the setting of properties. ,"01/Feb/07 14:55;gtully;It looks like the auto copy semantics of the JMS transport are wrong. JMSConstants.JMS_SERVER_HEADERS should be broken into JMS_SERVER_REQUEST_HEADERS and JMS_SERVER_RESPONSE_HEADERS and never the two should meet. The application would need to set a custom property in the RESPONSE header if it needs it in a reply. This would require org.apache.cxf.systest.jms.GreeterImplTwoWayJMS to do some more work to ensure a property is in a reply. Is this ok?

The JMSDestination will deal with replyTo and Correlation, but all other properties from a request disappear into the eather once the request has been dispatched. They should not be auto copied into the reply.
",05/Feb/07 15:56;gtully;this patch removes the automatic copying of JMS message string properties from request context to reply context.  JMS_SERVER_HEADERS is now replaced with JMS_SERVER_REQUEST_HEADERS. JMS_SERVER_RESPONSE_HEADERS can be modified to include properties in the reply.,"07/Feb/07 10:54;gtully;fixed via http://svn.apache.org/viewvc?view=rev&rev=503780
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFBus does not work. SoapTransportFactory and HttpTransport  are not registered in Destination and ConduitInitiator Manager. ,CXF-392,12361306,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,26/Jan/07 03:09,29/Aug/07 18:04,14/Mar/19 02:28,29/Jan/07 02:36,,,,,,,,2.0-RC,,,,,,,0,"If  set system property to use the CXFBusFactory , will ran into Condiut and Destinition can not be found exception . This issue is in both server and client side. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111244,,,2007-01-26 03:09:49.0,,,,,,0|i1a7ov:,267712,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endpoint Bean provided configuration values do not override wsdl model,CXF-390,12361188,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,gtully,gtully,24/Jan/07 15:45,01/Feb/07 19:51,14/Mar/19 02:28,01/Feb/07 19:51,2.0-M1,,,,,,,2.0-RC,,Configuration,,,,,0,"With address endpoint information, I expect a bean value (set through spring) to override the value from a WSDL port but that is not the case. The doc at: http://cwiki.apache.org/CXF20DOC/jms-transport.html indicates that it should be. I see that the WSDL provider is placed as an override rather than a fallback provider in JMSConduit initConfig. same in JMSDestination.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-01 19:51:02.269,,,no_permission,,,,,,,,,,,,,111242,,,Thu Feb 01 19:51:02 UTC 2007,,,,,,0|i13zvz:,231444,,,,,,,,24/Jan/07 15:51;gtully;same is true for HTTP transport also.,01/Feb/07 19:07;gtully;this issue has been fixed through revision 500649. As far as I am concerned it can be closed. thanks,01/Feb/07 19:16;gtully;fix revision http://svn.apache.org/viewvc?view=rev&revision=500649,01/Feb/07 19:51;dandiep;Glad to hear! Thanks for reporting back Gary.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Holder should support Ordered Param in wsdl definition,CXF-388,12361135,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,tli,tli,24/Jan/07 03:11,29/Aug/07 18:04,14/Mar/19 02:28,01/Feb/07 02:13,2.0-RC,,,,,,,2.0-RC,,Core,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111240,,,2007-01-24 03:11:09.0,,,,,,0|i0sz5r:,167173,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java package to wsdl namespace mapping incorrect,CXF-382,12361070,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,bharathganesh,bharathganesh,23/Jan/07 09:19,29/Aug/07 18:03,14/Mar/19 02:28,09/Feb/07 05:16,2.0-M1,2.0-RC,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"Jax-Ws spec defines a default java package to target namespace mapping. 
According to this packege ""com.example.ws"" should be mapped to target namespace ""http://ws.example.com/"". The last ""/"" is not appended by cxf.  
The bug is in the method {{public static String makeNamespaceFromClassName(String className, String protocol) }} of class {{org.apache.cxf.helpers.ServiceUtils}}.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111235,,,2007-01-23 09:19:23.0,,,,,,0|i1a7pz:,267717,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceInjector passes incorrect resource names,CXF-370,12360844,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gawor@mcs.anl.gov,gawor@mcs.anl.gov,19/Jan/07 05:43,29/Aug/07 02:05,14/Mar/19 02:28,06/Feb/07 15:59,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"The ResourceInjector passes incorrect resource names to ResourceResolvers. For example, for the given annotation:

@Resource
private DataSource myDB;

resolveResource() is called with name = myDB and type = javax.sql.DataSource. However, that is incorrect as according to the 'Common Annotations for the Java™ Platform™' spec:

""In the example above the effective name is com.example.class/myDB and the effective type is javax.sql.DataSource.class.""

If the name is not specified, the generated name should be qualified with the class name of the instance.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111228,,,2007-01-19 05:43:13.0,,,,,,0|i13zkf:,231392,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
xsd:dateTime becomes XMLGregorianCalendarImpl when Date needed,CXF-369,12360838,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,ctaggart,ctaggart,19/Jan/07 01:49,03/Feb/10 17:17,14/Mar/19 02:28,02/Jul/07 03:53,2.0-RC,,,,,,,2.0.1,,Soap Binding,,,,,0,"
I have a web method:
public Date echoDate(String sessionID, Date input);

The soapUI 1.6 client works, but the Axis 1.3 client passes in xsi:type=""xsd:dateTime"".  The CXF server turns the dateTime into a XMLGregorianCalendarImpl instead of a date when that is set.  AbstractInvoker then fails at this call res = m.invoke(serviceObject, paramArray); with an IllegalArgumentException.

Here is the full request that does not work:

<soapenv:Envelope 
xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" 
xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" 
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
<soapenv:Body>
<echoDate xmlns=""urn:TestService/wsdl"">
<sessionID>2CE0B857-43D1-F488-0E0A-F055FDCB8294</sessionID>
<input xsi:type=""xsd:dateTime"">2008-01-19T00:29:48.889Z</input>
</echoDate>
</soapenv:Body>
</soapenv:Envelope>

Failure Response
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Body>
      <soap:Fault>
         <faultcode>soap:Server</faultcode>
         <faultstring>argument type mismatch</faultstring>
      </soap:Fault>
   </soap:Body>
</soap:Envelope>

Removing 'xsi:type=""xsd:dateTime""' makes it work.

","svn head, jax-ws api, annotations",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-19 03:40:38.822,,,no_permission,,,,,,,,,,,,,111227,,,Wed Feb 03 17:12:17 UTC 2010,,,,,,0|i143kf:,232041,,,,,,,,"19/Jun/07 03:40;dandiep;I realize that this has take a while for us to respond (our humble apologies), but this sounds like a JAXB issue - I'm not sure why it would switch datatypes on us :-(.

Have you turned off the switch to send xsi:type information in axis?","02/Jul/07 03:52;maomaode;		     <annotation>
                       <appinfo>
                         <jxb:property>
                           <jxb:baseType>
                             <jxb:javaType  name=""java.util.Date"">
                             </jxb:javaType>
                           </jxb:baseType>
                         </jxb:property>
                       </appinfo>
                     </annotation>

You can add this jaxb customization to override the default dateTime mapping","03/Feb/10 17:12;sworisbreathing;I get the same error in CXF 2.2.3 when using Aegis data binding on both the client and server.

Here's my setup:
{code:title=Service.java}
@WebService
public interface FooService {
    public Foo getDataByStringAndMap(String name, Map<String, Object> map);
}
{code}

And here's a snippet from my server's Spring config file that sets up the service to use CXF with Aegis data binding:

{code:xml|title=Spring Configuration File Snippet}
...
<bean id=""AegisDataBinding"" class=""org.apache.cxf.aegis.databinding.AegisDatabinding"" scope=""prototype"">
	<property name=""aegisContext"">
	    <bean class=""org.apache.cxf.aegis.AegisContext"">
		<property name=""writeXsiTypes"" value=""true"" />
	    </bean>
	</property>
    </bean>

    <bean id=""ServiceFactoryBean"" class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean"" scope=""prototype"">
	<property name=""dataBinding"">
	    <ref bean=""AegisDataBinding"" />
	</property>
	<property name=""serviceConfigurations"">
	    <list>
		<bean class=""org.apache.cxf.jaxws.support.JaxWsServiceConfiguration""/>
		<bean class=""org.apache.cxf.aegis.databinding.AegisServiceConfiguration""/>
		<bean class=""org.apache.cxf.service.factory.DefaultServiceConfiguration""/>
	    </list>
	</property>
    </bean>
    <jaxws:endpoint id=""FooServiceEndpoint"" implementor=""#FooService"" address=""/FooService"">
	<jaxws:serviceFactory>
	    <ref bean=""ServiceFactoryBean"" />
	</jaxws:serviceFactory>
    </jaxws:endpoint>
...
{code}

The client is also configured to use CXF with Aegis data binding.  Here's the SOAP message sent from the CXF client:

{code:xml|title=Client SOAP Message}
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
    <soap:Body>
        <ns1:getDataByStringAndMap xmlns:ns1=""http://foo.bar.com/"">
            <ns1:arg0>name</ns1:arg0>
            <ns1:arg1>
                <ns1:entry>
                    <ns1:key>dateFieldName</ns1:key>
                    <ns1:value xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:ns2=""http://www.w3.org/2001/XMLSchema-instance"" ns2:type=""xsd:dateTime"">2010-01-01T00:00:00-06:00</ns1:value>
                 </ns1:entry>
            </ns1:arg1>
        </ns1:getDataByStringAndMap>
    </soap:Body>
</soap:Envelope>
{code}

When the client tries to invoke the service method, the service logs the following exception:
{noformat}
Feb 3, 2010 10:00:51 AM org.apache.cxf.phase.PhaseInterceptorChain doIntercept
WARNING: Application has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl cannot be cast to java.util.Date
        at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:148)
        at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.createFault(AbstractJAXWSMethodInvoker.java:83)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:114)
        at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:55)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:68)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:98)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:104)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:99)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:452)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:196)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:220)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.doPost(AbstractCXFServlet.java:153)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.service(AbstractCXFServlet.java:211)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:390)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.ClassCastException: com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl cannot be cast to java.util.Date
        at com.foo.FooImpl.getDataFromMap(FooImpl.java:50)
        at com.foo.FooServiceImpl.getDataByStringAndMap(FooServiceImpl.java:35)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:166)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:82)
        ... 32 more
{noformat}

My {{FooImpl.getDataFromMap(Map<String, Object>)}} performs a cast from {{java.lang.Object}} to {{java.util.Date}} on line 50 (a Date object is expected here).  It works just fine if the client has a direct reference to the service object, but when it goes over CXF, I get the error shown above.

Looking at the SOAP message, it appears that CXF on the client side is converting {{java.util.Date}} to XML correctly, but CXF on the server side is converting the XML back to an instance of {{javax.xml.datatype.XMLGregorianCalendar}} instead of {{java.util.Date}}.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging level,CXF-368,12360828,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,gawor@mcs.anl.gov,gawor@mcs.anl.gov,18/Jan/07 23:00,29/Aug/07 02:05,14/Mar/19 02:28,26/Feb/07 18:40,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"This is a minor issue but I've noticed that a bit of the code in CXF logs its low-level information with .info() level. That makes things quite noisy especially since the default JVM logging level is set of INFO. So I was wondering if some of that logging can be switch to .debug (or whatever is appropriate).

Here's an example of a simple dynamic client:

$ java -jar target/jaxws-calculator-1.0/WEB-INF/lib/jaxws-calculator-1.0.jar 1
3
Jan 18, 2007 5:58:37 PM org.apache.cxf.bus.spring.BusApplicationContext getConfi
gResources
INFO: Could not find the configuration file cxf.xml on the classpath.
Jan 18, 2007 5:58:37 PM org.springframework.context.support.AbstractRefreshableA
pplicationContext refreshBeanFactory
INFO: Bean factory for application context [org.apache.cxf.bus.spring.BusApplica
tionContext;hashCode=16939853]: org.springframework.beans.factory.support.Defaul
tListableBeanFactory defining beans []; root of BeanFactory hierarchy
Jan 18, 2007 5:58:37 PM org.springframework.context.support.AbstractApplicationC
ontext refresh
INFO: No beans defined in application context [org.apache.cxf.bus.spring.BusAppl
icationContext;hashCode=16939853]
Jan 18, 2007 5:58:37 PM org.springframework.context.support.AbstractApplicationC
ontext initMessageSource
INFO: Unable to locate MessageSource with name 'messageSource': using default [o
rg.springframework.context.support.DelegatingMessageSource@169e11]
Jan 18, 2007 5:58:37 PM org.springframework.context.support.AbstractApplicationC
ontext initApplicationEventMulticaster
INFO: Unable to locate ApplicationEventMulticaster with name 'applicationEventMu
lticaster': using default [org.springframework.context.event.SimpleApplicationEv
entMulticaster@198dfaf]
Jan 18, 2007 5:58:37 PM org.apache.cxf.bus.spring.BusApplicationContext getConfi
gResources
INFO: Could not find the configuration file cxf.xml on the classpath.
Jan 18, 2007 5:58:37 PM org.springframework.context.support.AbstractRefreshableA
pplicationContext refreshBeanFactory
INFO: Bean factory for application context [org.apache.cxf.bus.spring.BusApplica
tionContext;hashCode=16939853]: org.springframework.beans.factory.support.Defaul
tListableBeanFactory defining beans [cxf,org.apache.cxf.bus.spring.Jsr250BeanPos
tProcessor,org.apache.cxf.extension.ExtensionManager,org.apache.cxf.resource.Res
ourceManager,org.apache.cxf.binding.BindingFactoryManager,org.apache.cxf.transpo
rt.DestinationFactoryManager,org.apache.cxf.transport.ConduitInitiatorManager,or
g.apache.cxf.wsdl.WSDLManager,org.apache.cxf.phase.PhaseManager,org.apache.cxf.w
orkqueue.WorkQueueManager,org.apache.cxf.buslifecycle.BusLifeCycleManager,org.ap
ache.cxf.endpoint.ServerRegistry,org.apache.cxf.transport.http.HTTPTransportFact
ory,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.S
oapTransportFactory,org.apache.cxf.binding.xml.XMLBindingFactory,org.apache.cxf.
transports.http.customEditorConfigurer,org.apache.cxf.jaxws.javaee.customEditorC
onfigurer,org.apache.cxf.configuration.security.customEditorConfigurer]; root of
 BeanFactory hierarchy
Jan 18, 2007 5:58:37 PM org.springframework.context.support.AbstractApplicationC
ontext refresh
INFO: 19 beans defined in application context [org.apache.cxf.bus.spring.BusAppl
icationContext;hashCode=16939853]
Jan 18, 2007 5:58:37 PM org.springframework.context.support.AbstractApplicationC
ontext$BeanPostProcessorChecker postProcessAfterInitialization
INFO: Bean 'org.apache.cxf.bus.spring.Jsr250BeanPostProcessor' is not eligible f
or getting processed by all BeanPostProcessors (for example: not eligible for au
to-proxying)
Jan 18, 2007 5:58:37 PM org.springframework.context.support.AbstractApplicationC
ontext initMessageSource
INFO: Unable to locate MessageSource with name 'messageSource': using default [o
rg.springframework.context.support.DelegatingMessageSource@72ffb]
Jan 18, 2007 5:58:37 PM org.springframework.context.support.AbstractApplicationC
ontext initApplicationEventMulticaster
INFO: Unable to locate ApplicationEventMulticaster with name 'applicationEventMu
lticaster': using default [org.springframework.context.event.SimpleApplicationEv
entMulticaster@1df38fd]
Jan 18, 2007 5:58:38 PM org.apache.cxf.service.factory.ReflectionServiceFactoryB
ean initializeServiceModel
INFO: Creating Service {http://jws.samples.geronimo.apache.org}Calculator from W
SDL.
Jan 18, 2007 5:58:38 PM org.apache.cxf.common.logging.LogUtils log
INFO: Could not find a definition for bean with id {http://jws.samples.geronimo.
apache.org}Calculator - no injection will be performed.
Jan 18, 2007 5:58:38 PM org.apache.cxf.configuration.spring.ConfigurerImpl confi
gureBean
INFO: Could not find a definition for bean with id {http://jws.samples.geronimo.
apache.org}Calculator - no injection will be performed.
Jan 18, 2007 5:58:38 PM org.apache.cxf.common.logging.LogUtils log
INFO: Could not find a definition for bean with id {http://jws.samples.geronimo.
apache.org}CalculatorPort - no injection will be performed.
Jan 18, 2007 5:58:38 PM org.apache.cxf.configuration.spring.ConfigurerImpl confi
gureBean
INFO: Could not find a definition for bean with id {http://jws.samples.geronimo.
apache.org}CalculatorPort - no injection will be performed.
Jan 18, 2007 5:58:38 PM org.apache.cxf.endpoint.ClientImpl setContext
INFO: set requestContext to message be{org.apache.cxf.message.Message.ENDPOINT_A
DDRESS=http://localhost:8080/jaxws-calculator-1.0/calculator, java.lang.reflect.
Method=public abstract int org.apache.geronimo.samples.jws.Calculator.add(int,in
t), javax.xml.ws.service.endpoint.address=http://localhost:8080/jaxws-calculator
-1.0/calculator}
Jan 18, 2007 5:58:38 PM org.apache.cxf.common.logging.LogUtils log
INFO: Could not find a definition for bean with id {http://jws.samples.geronimo.
apache.org}CalculatorPort.http-conduit - no injection will be performed.
Jan 18, 2007 5:58:38 PM org.apache.cxf.configuration.spring.ConfigurerImpl confi
gureBean
INFO: Could not find a definition for bean with id {http://jws.samples.geronimo.
apache.org}CalculatorPort.http-conduit - no injection will be performed.
Jan 18, 2007 5:58:38 PM org.apache.cxf.transport.http.HTTPConduit setMessageObse
rver
INFO: registering incoming observer: org.apache.cxf.endpoint.ClientImpl@d75415
Jan 18, 2007 5:58:38 PM org.apache.cxf.interceptor.URIMappingInterceptor handleM
essage
INFO: Invoking HTTP method null
Jan 18, 2007 5:58:38 PM org.apache.cxf.interceptor.URIMappingInterceptor handleM
essage
INFO: URIMappingInterceptor can only handle HTTP GET, not HTTP null
Jan 18, 2007 5:58:38 PM org.apache.cxf.endpoint.ClientImpl invoke
INFO: set responseContext to be{org.apache.cxf.message.Message.RESPONSE_CODE=200
, org.apache.cxf.service.model.MessageInfo=org.apache.cxf.service.model.MessageI
nfo@1bb9a58, javax.xml.ws.wsdl.operation={http://jws.samples.geronimo.apache.org
}add, javax.xml.ws.wsdl.description=http://localhost:8080/jaxws-calculator-1.0/c
alculator?wsdl, javax.xml.ws.wsdl.service={http://jws.samples.geronimo.apache.or
g}Calculator, javax.xml.ws.wsdl.interface={http://jws.samples.geronimo.apache.or
g}CalculatorPortType, javax.xml.ws.wsdl.port={http://jws.samples.geronimo.apache
.org}CalculatorPort, Content-Type=text/xml, org.apache.cxf.client=true, org.apac
he.cxf.message.inbound=true, org.apache.cxf.message.Message.PROTOCOL_HEADERS={Se
rver=[Jetty(6.1.x)], content-type=[text/xml], Transfer-Encoding=[chunked], null=
[HTTP/1.1 200 OK]}}
Sum of 1 and 3 is 4
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-02 20:44:35.295,,,no_permission,,,,,,,,,,,,,111226,,,Fri Feb 02 20:44:35 UTC 2007,,,,,,0|i1a7s7:,267727,,,,,,,,"02/Feb/07 20:44;dkulp;
Many of the INFO messages that are spit out server side and during BusFactory.createBus(...) are from Spring and Jetty.   There isn't anything we can really do about those.

I've gone though the message processing pathways and changed almost all of them from INFO to FINE if it made sense to do so.   Thus, after startup, there are very few INFO level messages.    

I hope that's OK.
Dan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RPC can't handle holder correctly,CXF-367,12360728,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,tli,tli,18/Jan/07 05:49,29/Aug/07 18:04,14/Mar/19 02:28,30/Jan/07 09:38,,,,,,,,2.0-RC,,,,,,,0,"The rpc can't handle holder.
The parameter sequence for marshal & unmarshal do not consider the Holder cases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111225,,,2007-01-18 05:49:45.0,,,,,,0|i1a7sf:,267728,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdltojava generated code has inconsistent style,CXF-362,12360296,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,ema,peterjones,peterjones,11/Jan/07 17:18,30/Jul/07 08:05,14/Mar/19 02:28,30/Jul/07 08:05,2.0-RC,,,,,,,2.0.1,,Tooling,,,,,0,"The java generated by wsdl2java has some inconsistencies in white space, brackets etc.  It would be nice for all generated code to be consistent and to pass check style checks.

For an example, run ""WsdlToJava -all"" against the hello_world.wsdl in the distribution.

The constructor in GreeterServer.java has nice spacing:
    protected GreeterServer() throws Exception {
        System.out.println(""Starting Server"");
        Object implementor = new GreeterImpl();
        String address = ""http://localhost:9000/SoapContext/SoapPort"";
        Endpoint.publish(address, implementor);
    }

compared to the spacing and brackets from the pingMe operation from GreeterImpl.java:
    /* (non-Javadoc)
     * @see org.apache.hello_world_soap_http.Greeter#pingMe(*
     */
    public void pingMe()
 throws PingMeFault       {
       LOG.info(""Executing operation pingMe"");
    //throw new PingMeFault(""PingMeFault..."");
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-30 08:05:59.348,,,no_permission,,,,,,,,,,,,,111221,,,Mon Jul 30 08:05:59 UTC 2007,,,,,,0|i1a7tj:,267733,,,,,,,,30/Jul/07 08:05;blin;http://svn.apache.org/viewvc?view=rev&rev=559762,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XML Binding: inconsistency in schema for WSDL Extension.,CXF-361,12360198,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,maomaode,mbricout,mbricout,10/Jan/07 16:49,29/Aug/07 02:03,14/Mar/19 02:28,11/May/07 03:40,2.0-RC,,,,,,,2.0,,Resources,,,,,0,"The ""xml-binding.xsd"" schema file that is currently packaged in cxf-rt-bindings-xml only defines the following WSDL extension:

	<xs:complexType name=""XMLBindingMessageFormat"">
		<xs:complexContent>
			<xs:extension base=""wsdl:tExtensibilityElement"">
				<xs:sequence />
				<xs:attribute name=""rootNode"" type=""xs:QName""
					use=""optional"" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name=""body"" type=""xformat:XMLBindingMessageFormat"" />

This is the definition for the ""xformat:body"" element extending wsdl:binding/wsdl:operation/wsdl:input.

The schema is missing the declaration for the ""xformat:binding"" element that extends wsdl:binding.

That element can be found in the type_test_xml.wsdl for example:

    <wsdl:binding type=""tns:TypeTestPortType"" name=""TypeTestXML"">
        <xformat:binding/>
        <!-- [...] -->
    </wsdl:binding>

""type_test_xml.wsdl"" does not validate against its schema

Also, two different versions of the """"xml-binding.xsd"" schema exist in the code base. Their
are not consistent in their content, and they do not use the same target namespace.

For instance:

 - ./common/schemas/src/main/resources/schemas/wsdl/xml-binding.xsd
  target namespace: ""http://cxf.apache.org/bindings/xmlformat""

 - ./rt/bindings/xml/src/main/resources/schemas/wsdl/xml-binding.xsd
  target namespace: ""http://cxf.apache.org/bindings/xformat""

The first one actually defines the ""xformat:binding"" element, but in the wrong namespace.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-11 03:40:45.046,,,no_permission,,,,,,,,,,,,,97066,,,Fri May 11 03:40:45 UTC 2007,,,,,,0|i1a7tr:,267734,,,,,,,,"11/May/07 03:40;maomaode;The only xml-binding.xsd now can be found only in tools/common
and the namespace we used is http://cxf.apache.org/bindings/xformat
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"wsdl2java using wrong type (should use wrapper type, but use primitive type) for holder parameter when generating SEI class",CXF-359,12360062,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,tli,tli,09/Jan/07 09:58,29/Aug/07 02:05,14/Mar/19 02:28,30/Jan/07 03:28,2.0,,,,,,,2.0-RC,,Tooling,,,,,0,"wsdl2java using wrong type (should use wrapper type, but use primitive type) for holder parameter when generating SEI class

e.g.
wrong:
public void test(javax.xml.ws.Holder<int> outRefInOutInt);
correct:
public void test(javax.xml.ws.Holder<Integer> outRefInOutInt);
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111219,,,Wed Jan 10 07:37:48 UTC 2007,,,,,,0|i1a7tz:,267735,,,,,,,,"10/Jan/07 07:37;tli;Since currently, we're working on tools to tools2 refactoring, so I list the patch for fix below.
After the refactoring finished, we would patch below to the new tools (coming from current tools2) module.

Index: src/main/java/org/apache/cxf/tools/util/ProcessorUtil.java
===================================================================
--- src/main/java/org/apache/cxf/tools/util/ProcessorUtil.java	(revision 494297)
+++ src/main/java/org/apache/cxf/tools/util/ProcessorUtil.java	(working copy)
@@ -285,6 +285,12 @@
             }          
         } 
         
+        if (boxify) {
+            Class cls = JAXBUtils.holderClass(jtype); 
+            if (cls != null) {
+                jtype = cls.getName();
+            }
+        }
         
         return jtype;
     }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generated wsdl contains unused namespace declaration ,CXF-358,12360053,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,09/Jan/07 03:01,29/Aug/07 02:05,14/Mar/19 02:28,23/Mar/07 05:42,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"lass SayHello { public String incoming; }

class SayHelloResponse { public String response; }



@javax.jws.WebService

public class Howdy

{

  @javax.jws.WebMethod


@java.xml.ws.RequestWrapper(className=""com.tedneward.celtixdemos.SayHello"")


@java.xml.ws.ResponseWrapper(className=""com.tedneward.celtixdemos.SayHelloRe
sponse"")

  public SayHelloResponse sayHello(SayHello in)

  {

    SayHelloResponse shr = new SayHelloResponse();

    shr.response = ""We got your message"";

    return shr;

  }

}

... and when I run java2wsdl, I get a valid WSDL file *except* for a strange
namespace declaration ( xmlns:ns1="""" ), which causes wsdl2java to blow up.
Bug?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111218,,,2007-01-09 03:01:18.0,,,,,,0|i1a7u7:,267736,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Partial Responses not correctly identified in bare bindings,CXF-357,12360014,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,asmyth,asmyth,08/Jan/07 15:35,31/Aug/07 13:50,14/Mar/19 02:28,21/Aug/07 11:38,,,,,,,,2.0,,Core,,,,,0,"BareInInterceptor sets the message content of the partial response to an empty list. Thus the isPartialRessponse check in ClientImpl, and hence the application fails.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111217,,,Tue Aug 21 11:38:43 UTC 2007,,,,,,0|i0sz6f:,167176,,,,,,,,21/Aug/07 11:38;asmyth;Fixed as per system test org.apache.cxf.systest.ws.rm.DecoupledBareTest.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CodeGen Bug related to WebParam Annotation in a wrapped doc-lit style wsdl,CXF-356,12360003,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,apaibir,apaibir,08/Jan/07 12:18,29/Aug/07 18:03,14/Mar/19 02:28,28/Feb/07 03:46,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"The code generated for queryEndpoints method is not proper. The generated code is 
    public java.util.List<com.iona.ws._2005._11.locator.types.QueryEndpointsResponse.Endpoint> queryEndpoints(
        @WebParam(targetNamespace = ""http://ws.iona.com/2005/11/locator/types"", name = ""select"")
        com.iona.ws._2005._11.locator.query.QuerySelectType select
    );

Note:  In WebParam Annotation targetNamespace attribute should have a value of  targetNamespace = ""http://ws.iona.com/2005/11/locator/query"" instead of the one generated. 
The element ref attribute is not being handled properly.
Attached is the wsdl. ",,,,,,,,,,,,,,,,,08/Jan/07 12:19;apaibir;locator1.wsdl;https://issues.apache.org/jira/secure/attachment/12348496/locator1.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111216,,,2007-01-08 12:18:32.0,,,,,,0|i1a7uf:,267737,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WrapperClassInInterceptor throws NPE when handling an oneway operator,CXF-355,12359875,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,jliu,wtam,wtam,05/Jan/07 16:13,29/Aug/07 18:03,14/Mar/19 02:28,09/Feb/07 02:31,2.0-M1,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"I attach a zip which contains a README, a wsdl, and client/server code.  Two way operators are working fine for that wsdl but the one way operation triggers server error.   The server log is also attached.  Below is the NPE.

java.lang.NullPointerException
	at org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor.handleMessage(WrapperClassInInterceptor.java:98)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:159)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:64)
	at org.apache.cxf.transport.http.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:296)
	at org.apache.cxf.transport.http.JettyHTTPDestination.doService(JettyHTTPDestination.java:268)
	at org.apache.cxf.transport.http.JettyHTTPDestination$2.handle(JettyHTTPDestination.java:126)
	at org.mortbay.http.HttpContext.handle(HttpContext.java:1530)
	at org.mortbay.http.HttpContext.handle(HttpContext.java:1482)
	at org.mortbay.http.HttpServer.service(HttpServer.java:909)
	at org.mortbay.http.HttpConnection.service(HttpConnection.java:820)
	at org.mortbay.http.HttpConnection.handleNext(HttpConnection.java:986)
	at org.mortbay.http.HttpConnection.handle(HttpConnection.java:837)
	at org.mortbay.http.SocketListener.handleConnection(SocketListener.java:245)
	at org.mortbay.util.ThreadedServer.handle(ThreadedServer.java:357)
	at org.mortbay.util.ThreadPool$PoolThread.run(ThreadPool.java:534)


",Windows XP,,,,,,,,,,,,,,,,05/Jan/07 16:15;wtam;logging.log;https://issues.apache.org/jira/secure/attachment/12348370/logging.log,05/Jan/07 16:14;wtam;onewaybug.zip;https://issues.apache.org/jira/secure/attachment/12348369/onewaybug.zip,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-02-07 10:41:45.248,,,no_permission,,,,,,,,,,,,,111215,,,Fri Feb 09 02:31:48 UTC 2007,,,,,,0|i0uyjj:,178737,,,,,,,,"07/Feb/07 10:41;jliu;I just tried cxf-2.0-incubator-M1, I can not reproduce the stack trace reported, but it does look wrong, there is no indication of oneWay() is invoked on the server side according to the server side console. 

Then I tried the kit built from trunk, it works.

Unless I am missing something, otherwise I would presume this bug has been fixed.

",08/Feb/07 18:58;wtam;I tested against the latest trunk and it worked.  Please close this issue.,09/Feb/07 02:31;jliu;fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Printing Extension Elements in the wsdl doesn't have the proper indentation level.,CXF-354,12359817,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bravi,bravi,04/Jan/07 19:15,29/Aug/07 02:05,14/Mar/19 02:28,09/Jan/07 03:47,,,,,,,,2.0-RC,,Tooling,,,,,0,The PrettyPrintXMLStreamWriter  doesn't output the proper indentation for the wsdl defintion extension elements.,,,,,,,,,,,,,,,,,08/Jan/07 15:47;bravi;pretty_print_new.patch;https://issues.apache.org/jira/secure/attachment/12348506/pretty_print_new.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-08 03:37:17.825,,,no_permission,,,,,,,,,,,,,111214,,,Tue Jan 09 03:47:00 UTC 2007,,,,,,0|i1a7un:,267738,,,,,,,,04/Jan/07 19:16;bravi;I have attached a patch which contains the fix to the PrettyPrintXMLStreamWriter and a testcase. Can someone review the patch & apply it?,"08/Jan/07 03:37;njiang;Balaji,

I tried your patch it works fine with the wstx-asl 2.9.3 but it failed with wstx-asl 3.0.2. 
Because current CXF use the wstx-asl 3.0.2 and not 2.9.3,  can you help me double check it ?

It looks like wstx-asl 3.0.2 's XMLStreamWriter can't take the println() and print("" "") rightly, I think this could be the wstx's bug.
I found this from  Woodstox site http://woodstox.codehaus.org/
"" 21-Dec-2006: 3.0.3 and 3.1.1 patch versions released. These fix multiple problems with writer side (XMLStreamWriter): updating from previous versions is strongly recommended"".
I also had tried the test with the wstx-asl 3.0.3, and the test still fail :(.
If this is wstx-asl bug we need to get wstx-als fix first :).","08/Jan/07 15:49;bravi;Willem,

Thanks for looking in to this... I have attached a new patch that works with 3.0.2... Apparently, they have changed the way they use the PrintWriter, so i have gotten rid of using the PrintWriter directly & used the XMLStreamWriter instead...

Thanks

Balaji",09/Jan/07 03:47;njiang;applied this patch in revision 494310,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
codegen maven plugin returns BUILD SUCCESSFUL when code generation failed,CXF-353,12359799,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,asmyth,asmyth,04/Jan/07 15:30,29/Aug/07 02:05,14/Mar/19 02:28,19/Mar/07 11:46,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"Example output:
...
[INFO] [cxf-codegen:wsdl2java {execution: generate-sources}]
04-Jan-2007 15:26:19 org.apache.cxf.tools.wsdl2java.processor.internal.PortTypeP
rocessor process
WARNING: SKIP_OVERLOADED_OPERATION
04-Jan-2007 15:26:19 org.apache.cxf.tools.wsdl2java.processor.internal.Operation
Processor processMethod
WARNING: Problem outputting method for CreateSequence as no input message was fo
und
Error : Invalid WSDL,wsdl:operation: ""CreateSequence"" is not request-response or
 one-way
...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 12 seconds
[INFO] Finished at: Thu Jan 04 15:26:27 GMT 2007
[INFO] Final Memory: 15M/29M
[INFO] ------------------------------------------------------------------------

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111213,,,2007-01-04 15:30:34.0,,,,,,0|i1a7uv:,267739,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
exception with docment literal bare style opeartion with empty input ,CXF-351,12359767,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,04/Jan/07 07:27,29/Aug/07 18:04,14/Mar/19 02:28,11/Jan/07 02:59,,,,,,,,2.0-RC,,,,,,,0,"I'm testing cxf  with the attached hello_world.wsdl  and am seeing a strange exception (see below). Any ideas on what might be happening?

1. Generated code using: wsdl2java.bat -client -server -impl -all -ant hello_world.wsdl
2. Ran ant to build 
3. Ran ant Greeter.Server
4. Ran ant Greeter.Client

Buildfile: build.xml

compile:

Greeter.Client:
     [java] Invoking sayHi...
     [java] Exception in thread ""main"" org.apache.cxf.binding.soap.SoapFault: Error reading XMLStreamReader.
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:114)
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:45)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
     [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:253)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:489)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose(HTTPConduit.java:451)
     [java]     at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCachedOutputStream.java:113)
     [java]     at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:259)
     [java]     at org.apache.cxf.interceptor.MessageSenderInterceptor.handleMessage(MessageSenderInterceptor.java:58)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:130)
     [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invokeSync(EndpointInvocationHandler.java:129)
     [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invoke(EndpointInvocationHandler.java:115)
     [java]     at $Proxy35.sayHi(Unknown Source)
     [java]     at com.iona.hello_world_soap_http.GreeterClient.main(GreeterClient.java:69)
     [java] Caused by: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog
     [java]  at [row,col {unknown-source}]: [1,0]
     [java]     at com.ctc.wstx.sr.StreamScanner.throwUnexpectedEOF(StreamScanner.java:628)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.handleEOF(BasicStreamReader.java:2021)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.nextFromProlog(BasicStreamReader.java:1927)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1054)
     [java]     at com.ctc.wstx.sr.BasicStreamReader.nextTag(BasicStreamReader.java:1080)
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:73)
     [java]     ... 14 more





",,,,,,,,,,,,,,,,,04/Jan/07 07:30;ema;hello_world.wsdl;https://issues.apache.org/jira/secure/attachment/12348249/hello_world.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111211,,,2007-01-04 07:27:06.0,,,,,,0|i1a7vb:,267741,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
performance test client applications fail with java.net.MalformedURLException.,CXF-345,12359645,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,flynch,flynch,02/Jan/07 15:56,29/Aug/07 02:05,14/Mar/19 02:28,12/Mar/07 07:03,2.0-M1,,,,,,,2.0-RC,,,,,,,0,"The client applications in the performance tests fail with a MalformedURL exception, as they pass the path to a wsdl file without the ""file://"" prefix.  Its a trivial fix, please find the attached ""patch.txt"".","CXF head, jdk 1.5.0_09, ubuntu edgy eft. ",,,,,,,,,,,,,,,,02/Jan/07 15:57;flynch;patch.txt;https://issues.apache.org/jira/secure/attachment/12348159/patch.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-12 07:03:49.935,,,no_permission,,,,,,,,,,,,,111205,,,Mon Mar 12 07:03:49 UTC 2007,,,,,,0|i1a7wf:,267746,,,,,,,,"12/Mar/07 07:03;njiang;Thank you Frank. 
This patch has been applied in the revision 517117.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If a service has two ports in a wsdl file, and if port name is null, createPort() in serviceImpl will throw out an exception.",CXF-339,12359528,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,unrealjiang,unrealjiang,29/Dec/06 10:10,29/Aug/07 18:03,14/Mar/19 02:28,16/Jan/07 10:22,2.0-M1,,,,,,,2.0-RC,,,,,,,0,,,,,,,,,,,,,,,,,,29/Dec/06 10:11;unrealjiang;cxf-339.patch;https://issues.apache.org/jira/secure/attachment/12348052/cxf-339.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-16 10:22:32.788,,,no_permission,,,,,,,,,,,,,111199,,,Tue Jan 16 10:22:32 UTC 2007,,,,,,0|i13zgn:,231375,,,,,,,,16/Jan/07 10:22;jliu;Done by Unreal Jiang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Http location of wsdllocation attribute in extenal binding file,CXF-338,12359421,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,bharathganesh,bharathganesh,27/Dec/06 10:54,29/Aug/07 02:05,14/Mar/19 02:28,09/Apr/07 02:00,2.0-M1,2.0-RC,,,,,,2.0-RC,,Tooling,,,,,0,"My test case for generating client side artifacts using wsdl2java tool, provides an external binding file using the -b switch. 

The binding file looks like: 

<bindings
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
    wsdlLocation=""http://localhost:8080/helloEJB/HelloBean?wsdl""
    xmlns=""http://java.sun.com/xml/ns/jaxws"">
    <bindings node=""wsdl:definitions"">
        <enableAsyncMapping>true</enableAsyncMapping>
    </bindings>
</bindings>

Here the url given for wsdlLocation attribute is a valid one. http://localhost:8181/helloEJB/HelloBean?wsdl. 

But the wsdl2java tool could not generate the artifacts. It failed with the following error. 

E:\cxf\bin> wsdl2java -impl -p test -b D:\code\Learnings\asyncbinding.xml -clien
t -d E:\cxftests\hellows\src http://localhost:8080/helloEJB/HelloBean?wsdl

Error : External binding file: D:\code\Learnings\http:\localhost:8181\helloEJB\HelloBean does not po
int to the specified wsdl url:http://localhost:8080/helloEJB/HelloBean?wsdl

The same works fine if the wsdlLocation attribute refers to a absolute path on the same machine.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111198,,,2006-12-27 10:54:49.0,,,,,,0|i1a7xj:,267751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java2WSDL fails to generate wsdl from POJO,CXF-337,12359414,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,bharathganesh,bharathganesh,27/Dec/06 09:39,29/Aug/07 02:05,14/Mar/19 02:28,23/Apr/07 05:06,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"I could also see the java2wsdl tool is buggy for a number of cases. For exampple I have a POJO annotated with JSR 181 annotations to be exposed as a WS. 

import javax.jws.*;

@WebService
public class Calculator
{
    public int add (int a, int b) throws AddException{
        if(a<0 || b<0){
            throw new AddException(""No negetive please"");
        }
        return a+b;
    }
}

When I run the java2wsdl tool by providing the above class, I get the following error. 

Error : Can not load the request wrapper class com.pramati.rs.ws.jaxws.Add,  please check the @Reque
stWrapper annotation and see if the class is in your classpath

The @RequestWrapper annotation is not mandatory. The container could have well used RPC/Literal. 

Later when I annotated the Service with @SOAPBinding(style= SOAPBinding.Style.RPC, use= SOAPBinding.Use.LITERAL) , the problem I faced was: 

Error : com.pramati.rs.ws.AddException.getFaultInfo()
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-08 06:37:13.304,,,no_permission,,,,,,,,,,,,,111197,,,Mon Apr 23 05:06:02 UTC 2007,,,,,,0|i1a7xr:,267752,,,,,,,,"08/Mar/07 06:37;maomaode;tools2 should already support POJO, but the runtime will fail with the exception:

java.lang.NullPointerException
        at org.apache.cxf.jaxb.JAXBSchemaInitializer.begin(JAXBSchemaInitializer
.java:63)
        at org.apache.cxf.service.ServiceModelVisitor.visitOperation(ServiceMode
lVisitor.java:85)
        at org.apache.cxf.service.ServiceModelVisitor.visitOperation(ServiceMode
lVisitor.java:95)
        at org.apache.cxf.service.ServiceModelVisitor.walk(ServiceModelVisitor.j
ava:48)
        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:3
10)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServ
iceFromClass(ReflectionServiceFactoryBean.java:211)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializ
eServiceModel(ReflectionServiceFactoryBean.java:228)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(Re
flectionServiceFactoryBean.java:126)
        at org.apache.cxf.frontend.AbstractEndpointFactory.createEndpoint(Abstra
ctEndpointFactory.java:61)
        at org.apache.cxf.tools.java2wsdl.processor.internal.ServiceBuilder.buil
d(ServiceBuilder.java:41)
        at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessor.process(Java
ToProcessor.java:58)
        at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessorTest.testCalc
ulator(JavaToProcessorTest.java:69)
        at org.apache.cxf.tools.java2wsdl.processor.JavaToProcessorTest.testCalc
ulator(JavaToProcessorTest.java:69)

The runtime has problem with the exception handling.

I haded the tests, and will fail if we fix the issue, then fix the test.","20/Mar/07 12:46;bharathganesh;This is needed for JAX-WS TCK. 
Even if we use the RI tools to genereate the WSDL the runtime fails with the above stacktrace attached by maomaode. ","23/Apr/07 05:06;maomaode;The Java2WSDL has been changed to use the RT, and we have fixed this issue, please close this issue.
Ref: CXF539 CXF-559",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS Handler on client side not working,CXF-336,12359403,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,bharathganesh,bharathganesh,27/Dec/06 05:46,29/Aug/07 18:03,14/Mar/19 02:28,11/Jan/07 09:05,2.0-M1,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"After the JAX-WS portable artifacts on client side are generated with the WSDLtoJava tool, if JAX-WS handlers are set on the generated service class, the handlers are not invoked by the CXF client runtime. 

The handlers are set using the Service API (service.setHandlerResolver())

The same works fine if i set the handler like: 
((BindingProvider)port).getBinding().getHandlerChain().add(new MySOAPHandler());

whereas the following does not work: 
service.setHandlerResolver(new MyHandlerResolver()); //where MyHandlerResolver would add MySOAPHandler to the chain. 
port=service.getXXXPort();
port.sayXXX();

Also if the handlers are set with the @HandlerChain annotation of the generated service class at client side, they are not picked up. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111196,,,2006-12-27 05:46:51.0,,,,,,0|i1a7xz:,267753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""wrong number of arguments"" exception if change hello_world samples wsdl",CXF-327,12359266,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,22/Dec/06 07:38,02/May/13 02:29,14/Mar/19 02:28,06/Feb/07 08:43,,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"Change the hello_world sample's wsdl's greetMe element to following caused a  ""wrong number of arguments"" exception
            <element name=""greetMe1"">
                <complexType>
                    <sequence>
                        <element name=""requestType"" type=""tns:MyStringType""/>
                    </sequence>
                </complexType>
            </element>


    [java] Invoking sayHi...
     [java] Exception in thread ""main"" org.apache.cxf.binding.soap.SoapFault: wr
ong number of arguments
     [java]     at org.apache.cxf.binding.soap.interceptor.Soap11FaultInIntercep
tor.handleMessage(Soap11FaultInInterceptor.java:70)
     [java]     at org.apache.cxf.binding.soap.interceptor.Soap11FaultInIntercep
tor.handleMessage(Soap11FaultInInterceptor.java:36)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseI
nterceptorChain.java:147)
     [java]     at org.apache.cxf.interceptor.AbstractFaultChainIntiatorObserver
.onMessage(AbstractFaultChainIntiatorObserver.java:64)
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersIntercepto
r.handleMessage(ReadHeadersInterceptor.java:106)
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersIntercepto
r.handleMessage(ReadHeadersInterceptor.java:45)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseI
nterceptorChain.java:147)
     [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:
253)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream
.handleResponse(HTTPConduit.java:494)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream
.doClose(HTTPConduit.java:454)
     [java]     at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCa
chedOutputStream.java:113)
     [java]     at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.j
ava:255)
     [java]     at org.apache.cxf.interceptor.MessageSenderInterceptor.handleMes
sage(MessageSenderInterceptor.java:58)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseI
nterceptorChain.java:147)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:130
)
     [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invokeSync(End
pointInvocationHandler.java:129)
     [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invoke(Endpoin
tInvocationHandler.java:115)
     [java]     at $Proxy39.sayHi(Unknown Source)
     [java]     at demo.hw.client.Client.main(Client.java:63)",,,,,,,,,,,,,,,CXF-147,CXF-147,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-22 15:50:04.0,,,no_permission,,,,,,,,,,,,,111187,,,Fri Dec 22 15:50:04 UTC 2006,,,,,,0|i1a7z3:,267758,,,,,,,,22/Dec/06 15:50;peterjones;Changing the name of the greetMe element changes the greetMe operation to bare doc literal style.  The sayHi operation is still a wrapped doc literal operation.  It seems this problem may be caused by mixing the two styles in one interface.  Looks like sayHi gets invoked with a list of arguments containing a single null value (instead of an empty argument list) which causes the wrong number of arguments exception.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamically generated WSDL for JAX-WS service is invalid,CXF-324,12359256,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,gawor@mcs.anl.gov,gawor@mcs.anl.gov,22/Dec/06 04:44,12/Feb/07 15:53,14/Mar/19 02:28,12/Feb/07 15:53,,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"When a JAX-WS service bean contains a WebService.endpointInterface annotation property, the dynamically generated WSDL should be generated from the endpointInterface interface. However, it looks like this property is ignored and the WSDL is generated from the bean class.
",,,,,,,,,,,,,,,,,10/Feb/07 21:49;gawor@mcs.anl.gov;CXF-324.patch;https://issues.apache.org/jira/secure/attachment/12350840/CXF-324.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-19 15:09:37.1,,,no_permission,,,,,,,,,,,,,111184,,,Mon Feb 12 15:53:41 UTC 2007,,,,,,0|i140fr:,231533,,,,,,,,"19/Jan/07 15:09;maomaode;This is a bug seems to me,  and if you can provide your testcase that will be great, and the testcase will be checked in as a unit test.
And the fix will go into the new tools directly after the refactoring done.","10/Feb/07 21:49;gawor@mcs.anl.gov;The attached patch contains a fix for this issue and other issues related to default names and namespaces of service, port and port type. The also patch contains tests to ensure the right defaults are used (as according to the jsr181 spec).
",12/Feb/07 15:07;dandiep;I'll apply this in a little bit as I'm going to guess that James is in bed at the moment given his timezone :-),12/Feb/07 15:53;dandiep;Applied to SVN. Thanks a lot Jarek!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Improper synchronization of getDefaultBus(), setDefaultBus()",CXF-323,12359255,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gawor@mcs.anl.gov,gawor@mcs.anl.gov,22/Dec/06 04:27,29/Aug/07 02:05,14/Mar/19 02:28,31/Jan/07 19:57,,,,,,,,2.0-RC,,,,,,,0,"getDefaultBus() method in org.apache.cxf.bus.spring.SpringBusFactory and org.apache.cxf.bus.cxf.CXFBusFactory is improperly synchronized. The method is instance-level synchronized while it initializes and accesses a class-level variable. Two different instances of BusFactory each calling getDefaultBus() at the same time could return two different Bus instances...

This method should either be changed to 'public static synchronized Bus getDefaultBus()' or modified as for an example:

public Bus getDefaultBus() {
  return initDefaultBus();
}

private static synchronized Bus initDefaultBus() {
  if (null == defaultBus) {
         defaultBus = new CXFBusImpl();
  }
  return defaultBus;
}

Also, the setDefaultBus() method in both classes needs to be properly synchronized. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-17 17:29:09.321,,,no_permission,,,,,,,,,,,,,111183,,,Wed Jan 17 17:29:09 UTC 2007,,,,,,0|i146nb:,232540,,,,,,,,"17/Jan/07 17:29;njiang;It could be easy to get the initDefaultBus() to be static synchronized in CXFBusFactory. 
But in SpringBusFactory, there is ApplicationContext which hold the spring configuration is not static, and I am not going to change it to be a static variable, because we may need to setup different Context in the same JVM.

Basicly we add the getDefaultBus() in BusFactory interface is we need to make a bridge between JAXWS API which has no bus to be used and CXF-RT which uses bus for holding the pluggable extension.  
I think we have too much BusFactory implementations currently. The CXFBusFactory is useless now, we need to remove it. 

It can make the world more quite now.

Any thoughts?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate classes caused exceptions in Eclipse environment,CXF-322,12359114,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,20/Dec/06 12:35,29/Aug/07 18:04,14/Mar/19 02:28,25/Dec/06 03:30,,,,,,,,2.0-RC,,Build system,,,,,0,"We still have several duplicate classes, this caused exceptions in Eclips, for example:

Caused by: java.lang.LinkageError: duplicate class definition: com/iona/schemas/bindings/fixed/EnumerationType$JaxbAccessorF_fixedValue
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.lang.ClassLoader.defineClass(Unknown Source)",,,,,,,,,,,,,,,,,20/Dec/06 12:36;jliu;stacktrace.zip;https://issues.apache.org/jira/secure/attachment/12347567/stacktrace.zip,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111182,,,2006-12-20 12:35:35.0,,,,,,0|i1a7zr:,267761,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong code generated when Service in a different namespace,CXF-321,12359081,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,maomaode,maomaode,20/Dec/06 03:33,29/Aug/07 02:05,14/Mar/19 02:28,28/Mar/07 09:39,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"* The client main line code lack of the import of service class
* The target namespace of the WebService annotation of the Impl class not correct
* The target namespace of  the WebServiceClient annotation of the service class not correct",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111181,,,2006-12-20 03:33:25.0,,,,,,0|i1a7zz:,267762,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If add a user interceptor into pre_stream phase and addBefore to SoapPreProtocolOutInterceptor,  cxf will throw out ""Invalid ordering"" exception",CXF-320,12358998,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,unrealjiang,unrealjiang,19/Dec/06 10:59,29/Aug/07 18:03,14/Mar/19 02:28,25/Dec/06 03:29,,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,,,,,,,,,,,,,,,,,,21/Dec/06 07:52;unrealjiang;cxf-320-interceptorsOrder.patch;https://issues.apache.org/jira/secure/attachment/12347648/cxf-320-interceptorsOrder.patch,21/Dec/06 07:31;unrealjiang;cxf-320.patch;https://issues.apache.org/jira/secure/attachment/12347644/cxf-320.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111180,,,Thu Dec 21 08:01:50 UTC 2006,,,,,,0|i0v2t3:,179428,,,,,,,,"21/Dec/06 07:52;unrealjiang;Sorry, the first patch file includes some debug information. Please ignore it.  Thanks",21/Dec/06 08:01;unrealjiang;The correct patch file name is cxf-320-interceptorsOrder.patch. Sorry for that.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No WS-A headers sent in response to request with anonymous wsa:ReplyTo,CXF-317,12358776,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,eglynn,eglynn,15/Dec/06 15:10,29/Aug/07 18:04,14/Mar/19 02:28,03/Jan/07 14:51,2.0-M1,,,,,,,2.0-RC,,WS-* Components,,,,,0,"No WS-A headers are included in the response to requests with anonymous wsa:ReplyTo. This is because the logic to propogate the inbound MAPs to the outbound dispatch was associated with the rebasing of the response, and was thus only executed for oneways and twoways with non-anonymous ReplyTo. 

This slipped through the cracks due to our testing focus being on the WS-RM use-case for WS-A (i.e. a decoupled response endpoint).

The fix should include a system test for the anonymous use-case.

Reported in the first instance by Sara Corbett AT bah DOT com.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111177,,,Wed Jan 03 14:51:44 UTC 2007,,,,,,0|i146m7:,232535,,,,,,,,03/Jan/07 14:51;eglynn;Fix merged by eglynn in commit r488655.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unsupport handling of schema which will have @XmlElementRef & JAXBElement in type code generated by JAXB,CXF-305,12358599,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,tli,tli,14/Dec/06 10:08,10/Jul/08 23:29,14/Mar/19 02:28,19/Dec/06 03:08,2.0,,,,,,,2.0,,JAXB Databinding,,,,,0,"When a element in a anoymous complex type specified minOccurs=""0"" and nillable=""true"",
the generated type code use JAXBElement<String> not String

Schema Sample:

    <xs:element name=""EchoStringAsBinary"">
        <xs:complexType>
            <xs:sequence>
                <xs:element name=""s"" minOccurs=""0"" nillable=""true"" type=""xs:string"" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name=""EchoStringAsBinaryResponse"">
        <xs:complexType>
            <xs:sequence>
                <xs:element name=""EchoStringAsBinaryResult"" minOccurs=""0"" nillable=""true""
                    type=""xs:base64Binary"" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

JAXBCode generated:

    @XmlElementRef(name = ""s"", namespace = ""http://xmlsoap.org/Ping"", type = JAXBElement.class)
    protected JAXBElement<String> s;

    /**
     * Gets the value of the s property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getS() {
        return s;
    }

    /**
     * Sets the value of the s property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setS(JAXBElement<String> value) {
        this.s = ((JAXBElement<String> ) value);
    }

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-10 23:29:00.965,,,no_permission,,,,,,,,,,,,,111165,,,Thu Jul 10 23:29:00 UTC 2008,,,,,,0|i1a82n:,267774,,,,,,,,"15/Dec/06 02:40;tli;The above java type class generated by JAXB is correct, but if the wsdl operation is Wrap type, our cxf rt can't handle correct.","10/Jul/08 23:29;msfrank;The java type class my be correct, but it is too cumbersome when a simple String will suffice (for the above example).  In .Net, removal of nillable=""true"" causes another set of problems in terms of generating cumbersome client code.  The answer would seem to be to handle the nillable elements more elegantly in Java.  So why can't this be addressed?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tools generates @WebParam/@WebResult in wrong namespace,CXF-303,12358263,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,dandiep,dandiep,11/Dec/06 10:40,29/Aug/07 02:05,14/Mar/19 02:28,23/Mar/07 05:58,2.0-M1,,,,,,,2.0-RC,,Tooling,,,,,0,"If you look at the LocatorService class you'll see that the signature for the queryEndpoints method is like this:

    @ResponseWrapper(targetNamespace = ""http://apache.org/locator/types"", className = ""org.apache.cxf.testutils.locator.QueryEndpointsResponse"", localName = ""queryEndpointsResponse"")
    @RequestWrapper(targetNamespace = ""http://apache.org/locator/types"", className = ""org.apache.cxf.testutils.locator.QueryEndpoints"", localName = ""queryEndpoints"")
    @WebResult(targetNamespace = ""http://apache.org/locator/types"", name = ""endpoint"")
    @WebMethod(operationName = ""queryEndpoints"")
    public java.util.List<org.apache.cxf.testutils.locator.QueryEndpointsResponse.Endpoint> queryEndpoints(
        @WebParam(targetNamespace = ""http://apache.org/locator/types"", name = ""select"")
        org.apache.cxf.testutils.locator.QuerySelectType select
    );

Looking at the schema schema you'll see that the <element name=""select""> is actually in the http://apache.org/locator/query namespace. The @WebParam should use this namespace instead I think. The @WebParam should be in that namespace too I think.

I ran into this while doing some refactoring. I will probably disable the LocatorServiceTest in the short term while we get this fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-23 05:58:27.609,,,no_permission,,,,,,,,,,,,,111163,,,Fri Mar 23 05:58:27 UTC 2007,,,,,,0|i0v35b:,179483,,,,,,,,23/Mar/07 05:58;ema;This issue has been fixed . see : CXF-465 and CXF-443,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jaxb WebServicesType class to read webservices.xml seem to lack @XmlRootElement annotation,CXF-302,12358184,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,djencks,djencks,09/Dec/06 09:32,29/Aug/07 18:03,14/Mar/19 02:28,28/Feb/07 06:39,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"Trying to read in a webservices.xml file using the WebServicesType jaxb class did not work for me until I added an @XmlRootElement annotation to it.

micro-test case included.",,,,,,,,,,,,,,,,,09/Dec/06 09:35;djencks;CXF-302.patch;https://issues.apache.org/jira/secure/attachment/12346830/CXF-302.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-02-28 06:39:38.632,,,no_permission,,,,,,,,,,,,,111162,,,Wed Feb 28 06:39:38 UTC 2007,,,,,,0|i1a833:,267776,,,,,,,,"09/Dec/06 09:35;djencks;add annotation, and a small test case.",28/Feb/07 06:39;njiang;This patch has been applied in the revision 512623,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Checking in-bound message format should based on content-type, not by mtom-setting, content-id should be decoded by URLDecoder first",CXF-297,12357981,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,tli,tli,07/Dec/06 06:45,29/Aug/07 02:05,14/Mar/19 02:28,12/Dec/06 05:50,2.0-RC,,,,,,,2.0-RC,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111157,,,2006-12-07 06:45:47.0,,,,,,0|i13znb:,231405,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Create BindingFactory failure when the first ext element in wsdl binding part is not the protocol element,CXF-296,12357980,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,tli,tli,07/Dec/06 06:42,29/Aug/07 02:05,14/Mar/19 02:28,12/Dec/06 05:49,2.0-RC,,,,,,,2.0-RC,,Soap Binding,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111156,,,2006-12-07 06:42:24.0,,,,,,0|i140jz:,231552,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service Model can't support import PortType with different name-space,CXF-295,12357979,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,tli,tli,07/Dec/06 06:40,29/Aug/07 02:05,14/Mar/19 02:28,12/Dec/06 05:47,2.0-RC,,,,,,,2.0-RC,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111155,,,2006-12-07 06:40:08.0,,,,,,0|i13znj:,231406,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS Java first client side failure to get port,CXF-294,12357953,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,ericjohnson,ericjohnson,06/Dec/06 22:45,29/Aug/07 18:04,14/Mar/19 02:28,09/Jan/07 03:56,2.0-M1,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"I created a client to connect to a service developed without a WSDL file. The SEI is:
package org.eric.demo;

import javax.jws.*;

@WebService(name=""quoteReporter"")
public interface quoteReporter
{
  public Quote getQuote(String ticker);
}

The client code is:
package org.eric.demo;

import java.io.File;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;

public class Client
{
public static void main(String args[])
  {
    QName serviceName = new QName(""http://demo.eric.org"", ""stockQuoteReporter"");
    Service s = Service.create(serviceName);
	System.out.println(""Service ""+serviceName+"" created..."");
	QName portName = new QName(""http://demo.eric.org"", ""stockQuoteReporterPort"");
	quoteReporter proxy = s.getPort(portName, quoteReporter.class);
	System.out.println(""Proxy created..."");
	Quote quote = proxy.getQuote(""ALPHA"");
	System.out.println(""Stock ""+quote.getID()+"" is worth ""+quote.getVal()+"" as of ""+quote.getTime());
  }
}

The WSDL retrieved from the running service is:
<?xml version=""1.0"" encoding=""UTF-8""?>
<wsdl:definitions name=""stockQuoteReporter"" targetNamespace=""http://demo.eric.org"" xmlns:wsdlsoap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:ns1=""http://demo.eric.org"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soap=""http://schemas.xmlsoap.org/soap/"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
  <wsdl:types>
<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""1.0"">
<xs:complexType name=""quote"">
<xs:sequence>
<xs:element minOccurs=""0"" name=""ID"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""time"" type=""xs:string""/>
<xs:element name=""val"" type=""xs:float""/>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns=""http://demo.eric.org"" attributeFormDefault=""unqualified"" elementFormDefault=""qualified"" targetNamespace=""http://demo.eric.org"">
<xsd:element name=""getQuote"">
<xsd:complexType>
<xsd:sequence>
<xsd:element name=""arg00"" type=""xsd:string""/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name=""getQuoteResponse"">
<xsd:complexType>
<xsd:sequence>
<xsd:element name=""return"" type=""quote""/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:schema>
  </wsdl:types>
  <wsdl:message name=""getQuote"">
    <wsdl:part name=""getQuote"" element=""ns1:getQuote"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name=""getQuoteResponse"">
    <wsdl:part name=""getQuoteResponse"" element=""ns1:getQuoteResponse"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name=""stockQuoteReporterPortType"">
    <wsdl:operation name=""getQuote"">
      <wsdl:input name=""getQuote"" message=""ns1:getQuote"">
    </wsdl:input>
      <wsdl:output name=""getQuoteResponse"" message=""ns1:getQuoteResponse"">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name=""stockQuoteReporterSoapBinding"" type=""ns1:stockQuoteReporterPortType"">
    <wsdlsoap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
    <wsdl:operation name=""getQuote"">
      <wsdlsoap:operation soapAction="""" style=""document""/>
      <wsdl:input name=""getQuote"">
        <wsdlsoap:body use=""literal""/>
      </wsdl:input>
      <wsdl:output name=""getQuoteResponse"">
        <wsdlsoap:body use=""literal""/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name=""stockQuoteReporter"">
    <wsdl:port name=""stockQuoteReporterPort"" binding=""ns1:stockQuoteReporterSoapBinding"">
      <wsdlsoap:address location=""http://localhost:9000/EricStockQuote""/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>

When I run the client I get the following stack:

     [java] Service {http://demo.eric.org}stockQuoteReporter created...
     [java] Exception in thread ""main"" java.lang.NullPointerException: EndpointInfo can not be null!
     [java]     at org.apache.cxf.endpoint.EndpointImpl.<init>(EndpointImpl.java:66)
     [java]     at org.apache.cxf.jaxws.support.JaxWsEndpointImpl.<init>(JaxWsEndpointImpl.java:56)
     [java]     at org.apache.cxf.jaxws.ServiceImpl.createPort(ServiceImpl.java:272)
     [java]     at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:200)
     [java]     at javax.xml.ws.Service.getPort(Service.java:94)
     [java]     at org.eric.demo.Client.main(Client.java:16)
Full thread dump Java HotSpot(TM) Client VM (1.5.0_06-b05 mixed mode):

""Thread-4"" daemon prio=6 tid=0x0b386108 nid=0xd64 runnable [0x0baef000..0x0baefb68]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:194)
        at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
        at java.io.BufferedInputStream.read1(BufferedInputStream.java:256)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:313)
        - locked <0x02f218a0> (a java.io.BufferedInputStream)
        at java.io.FilterInputStream.read(FilterInputStream.java:111)
        at java.io.FilterInputStream.read(FilterInputStream.java:90)
        at org.apache.tools.ant.taskdefs.StreamPumper.run(StreamPumper.java:90)
        at java.lang.Thread.run(Thread.java:595)

""Thread-3"" daemon prio=6 tid=0x0b337d38 nid=0xfa4 runnable [0x0baaf000..0x0baafbe8]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:177)
        at org.apache.tools.ant.taskdefs.StreamPumper.run(StreamPumper.java:90)
        at java.lang.Thread.run(Thread.java:595)

""Thread-2"" daemon prio=6 tid=0x0b2d5990 nid=0x94c runnable [0x0ba6f000..0x0ba6fc68]
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:194)
        at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
        at java.io.BufferedInputStream.read1(BufferedInputStream.java:256)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:313)
        - locked <0x02a58868> (a java.io.BufferedInputStream)
        at java.io.FilterInputStream.read(FilterInputStream.java:90)
        at org.apache.tools.ant.taskdefs.StreamPumper.run(StreamPumper.java:90)
        at java.lang.Thread.run(Thread.java:595)

""Low Memory Detector"" daemon prio=6 tid=0x0097acb0 nid=0x86c runnable [0x00000000..0x00000000]

""CompilerThread0"" daemon prio=10 tid=0x00979880 nid=0xf28 waiting on condition [0x00000000..0x0abaf8cc]

""Signal Dispatcher"" daemon prio=10 tid=0x00978c00 nid=0x680 waiting on condition [0x00000000..0x00000000]

""Finalizer"" daemon prio=8 tid=0x0096fc70 nid=0x630 in Object.wait() [0x0ab2f000..0x0ab2fc68]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x02f1ef70> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x02f1ef70> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=10 tid=0x0096e7d8 nid=0x13c in Object.wait() [0x0aaef000..0x0aaefce8]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x02f1eff0> (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:474)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked <0x02f1eff0> (a java.lang.ref.Reference$Lock)

""main"" prio=6 tid=0x00036d48 nid=0x714 runnable [0x0007f000..0x0007fc40]
        at java.lang.ProcessImpl.waitFor(Native Method)
        at org.apache.tools.ant.taskdefs.Execute.waitFor(Execute.java:539)
        at org.apache.tools.ant.taskdefs.Execute.execute(Execute.java:471)
        at org.apache.tools.ant.taskdefs.Java.fork(Java.java:751)
        at org.apache.tools.ant.taskdefs.Java.executeJava(Java.java:171)
        at org.apache.tools.ant.taskdefs.Java.execute(Java.java:84)
        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)
        at org.apache.tools.ant.Task.perform(Task.java:364)
        at org.apache.tools.ant.taskdefs.Sequential.execute(Sequential.java:64)
        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)
        at org.apache.tools.ant.Task.perform(Task.java:364)
        at org.apache.tools.ant.taskdefs.MacroInstance.execute(MacroInstance.java:378)
        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)
        at org.apache.tools.ant.Task.perform(Task.java:364)
        at org.apache.tools.ant.Target.execute(Target.java:341)
        at org.apache.tools.ant.Target.performTasks(Target.java:369)
        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)
        at org.apache.tools.ant.Project.executeTarget(Project.java:1185)
        at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40)
        at org.apache.tools.ant.Project.executeTargets(Project.java:1068)
        at org.apache.tools.ant.Main.runBuild(Main.java:668)
        at org.apache.tools.ant.Main.startAnt(Main.java:187)
        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:246)
        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:67)

""VM Thread"" prio=10 tid=0x008b4cf8 nid=0xea0 runnable

""VM Periodic Task Thread"" prio=10 tid=0x0097be90 nid=0x688 waiting on condition
",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-09 03:56:12.438,,,no_permission,,,,,,,,,,,,,111154,,,Tue Jan 09 03:56:12 UTC 2007,,,,,,0|i1a83z:,267780,,,,,,,,09/Jan/07 03:56;njiang;Need to call Service.addPort() to setup the binding and transport information.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Defining a XML Binding with a rootNode results in Fault Response at the Client end.,CXF-293,12357919,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,apaibir,apaibir,06/Dec/06 17:29,29/Aug/07 02:05,14/Mar/19 02:28,08/Jan/07 11:06,2.0-M1,,,,,,,2.0-RC,,,,,,,0,"I have defined a XML Binding with the attached wsdl The wsdl is along the lines of soapheader.wsdl in testutils.

While invoking on the inoutHeader Operation. The Client fails with the following exception 
org.apache.cxf.interceptor.Fault: Could not read request. Operation {http://apache.org/headers}inoutHeaderNode is unknown.
        at org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor.handleMessage(XMLMessageInInterceptor.java:134)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:253)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:489)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose(HTTPConduit.java:451)
        at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCachedOutputStream.java:113)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:259)
        at org.apache.cxf.interceptor.MessageSenderInterceptor.handleMessage(MessageSenderInterceptor.java:58)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:130)
        at org.apache.cxf.jaxws.EndpointInvocationHandler.invokeSync(EndpointInvocationHandler.java:129)
        at org.apache.cxf.jaxws.EndpointInvocationHandler.invoke(EndpointInvocationHandler.java:115)
        at $Proxy37.inoutHeader(Unknown Source)

The reason being it does not process the xmlformat:rootNode element defined in the binding.
The XMLMessageInInterceptor needs to be fixed.

The xml message for which the client fails is as follows.
<tns:inoutHeaderNode xmlns:tns=""http://apache.org/headers"">
           <ns2:inoutHeaderResponse xmlns=""http://www.w3.org/2005/08/addressing/wsdl"" xmlns:ns2=""http://apache.org/headers/types"">
                 <ns2:responseType xmlns:ns2=""http://apache.org/headers/types"">inout request type out</ns2:responseType>
           </ns2:inoutHeaderResponse>
          <ns2:SOAPHeaderInfo xmlns=""http://www.w3.org/2005/08/addressing/wsdl"" xmlns:ns2=""http://apache.org/headers/types"">
                   <ns2:originator xmlns:ns2=""http://apache.org/headers/types"">inout orginator out</ns2:originator>
                   <ns2:message xmlns:ns2=""http://apache.org/headers/types"">inout message out</ns2:message>
           </ns2:SOAPHeaderInfo>
</tns:inoutHeaderNode>",,,,,,,,,,,,,,,,,06/Dec/06 17:30;apaibir;soap_header1.txt;https://issues.apache.org/jira/secure/attachment/12346578/soap_header1.txt,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111153,,,Mon Jan 08 11:06:59 UTC 2007,,,,,,0|i0v2db:,179357,,,,,,,,05/Jan/07 15:16;apaibir;This bug is not fixed yet as the xmlformat rootNode is not consumed and eventually fails in HolderInInterceptor with a ArrayIndexOutofBoundsException,08/Jan/07 11:06;apaibir;This bug is fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFServlet does not pass the wsdl packaged in war to the EndpointImpl,CXF-292,12357846,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ema,ema,06/Dec/06 02:56,29/Aug/07 02:05,14/Mar/19 02:28,10/Jan/07 17:32,2.0-M1,,,,,,,2.0-RC,,,,,,,1,"we do not set the wsdl url for the ServiceFactoryBean in
CXFServlet . ServiceFactoryBean still get the wsdl location from the
annotaion by invoking JaxWsConfiguration .  When we deployed the war to
another machine ,  the service will fail to start  because  it can not find
the wsdl .
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111152,,,2006-12-06 02:56:37.0,,,,,,0|i1a847:,267781,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl space in path name problem on Windows,CXF-290,12357802,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,peterjones,peterjones,05/Dec/06 17:41,16/Jan/07 14:36,14/Mar/19 02:28,16/Jan/07 14:36,2.0-RC,,,,,,,2.0-RC,,,,,,,1,"When there's a space in the path name in which I unzip the distribution on windows, I get the exception included below when I try to run the hello_world demo server.  The wsdlLocation of the WebService annotation in the generated Greeter.java has a space in the path name of the wsdl, which the URIResolver doesn't seem to like.

Probably related to this: http://forum.java.sun.com/thread.jspa?threadID=776791&messageID=4422252

I'll see if I can come up with a patch as a workaround.

The exception trace:

     [java] Starting Server
     [java] Exception in thread ""main"" javax.xml.ws.WebServiceException: Could not find WSDL with URL file:/C:/cygwin/home/pejones/space dir/bango/samples/service_creation/hello_world/wsdl/hello_world.wsdl
     [java]     at org.apache.cxf.jaxws.support.JaxWsServiceConfiguration.getWsdlURL(JaxWsServiceConfiguration.java:115)
     [java]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.getWsdlURL(ReflectionServiceFactoryBean.java:792)
     [java]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:170)
     [java]     at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:116)
     [java]     at org.apache.cxf.jaxws.EndpointImpl.<init>(EndpointImpl.java:99)
     [java]     at org.apache.cxf.jaxws.spi.ProviderImpl.createEndpoint(ProviderImpl.java:57)
     [java]     at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:66)
     [java]     at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
     [java]     at demo.hw.server.Server.<init>(Server.java:31)
     [java]     at demo.hw.server.Server.main(Server.java:35)
     [java] Java Result: 1",Install distribution on Windows in a directory which contains space in the path name.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111151,,,Sat Dec 09 01:35:08 UTC 2006,,,,,,0|i1a84f:,267782,,,,,,,,09/Dec/06 01:35;peterjones;This problem should be resolved with commit r484882.  Someone who has jira privileges can mark this fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding of Root Node in XMLBinding is done without a prefix.,CXF-289,12357750,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,tli,apaibir,apaibir,05/Dec/06 12:42,06/Dec/06 10:43,14/Mar/19 02:28,06/Dec/06 10:43,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"in XMLMessageOutInterceptor the xmlformat RootNode if present is added without a suitable prefix. This causes the rootNode element to be in xmlns=""some namespace uri"" whichis okay. But some child elements end up in this namespace since they are not qualified.
A typical XMLMessage generated for soap_header.wsdl in testutil. is 
<inHeaderReqNode xmlns=""http://apache.org/headers"">
     <inHeader xmlns:ns2=""http://www.w3.org/2005/08/addressing/wsdl"" xmlns=""http://apache.org/headers/types"">
        <requestType>in request type</requestType>
     </inHeader>
     <SOAPHeaderInfo xmlns:ns2=""http://www.w3.org/2005/08/addressing/wsdl"" xmlns=""http://apache.org/headers/types"">
         <originator>in originator</originator>
         <message>in message</message>
     </SOAPHeaderInfo>
</inHeaderReqNode>

So the <requestType> elements should be in http://apache.org/headers/types but actually end up in http://apache.org/headers.

The fix for this in XMLMessageOutInterceptors which is attached with this bug description.",,,,,,,,,,,,,,,,,05/Dec/06 12:43;apaibir;XMLMessageOutInterceptor.java;https://issues.apache.org/jira/secure/attachment/12346430/XMLMessageOutInterceptor.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111150,,,2006-12-05 12:42:50.0,,,,,,0|i146rb:,232558,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Acknowledgment Ranges not merged,CXF-279,12357352,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asmyth,asmyth,asmyth,30/Nov/06 13:40,29/Aug/07 18:03,14/Mar/19 02:28,12/Jan/07 12:15,,,,,,,,2.0-RC,,WS-* Components,,,,,0,"<wsrm:SequenceAcknowledgement xmlns:wsrm=""http://schemas.xmlsoap.org/ws/2005/02/rm""><wsrm:Identifier xmlns:wsrm=""http://schemas.xmlsoap.org/ws/2005/02/rm"">urn:uuid:498b6dee-e3f5-
4cae-9336-363b02357888</wsrm:Identifier><wsrm:AcknowledgementRange Lower=""1"" Upper=""2"" xmlns:wsrm=""http://schemas.xmlsoap.org/ws/2005/02/rm"" /><wsrm:AcknowledgementRange Lower=""3"" Upper=""4"" xmlns:wsrm=""http://schemas.xmlsoap.org/ws/2005/02/rm"" /></wsrm:SequenceAcknowledgement>

should use <wsrm:AcknowledgementRange Lower=""1"" Upper=""4""/>",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111140,,,2006-11-30 13:40:29.0,,,,,,0|i1a86f:,267791,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestinationFactory and ConduitInitiator not registered for same namespaces,CXF-275,12357232,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,asmyth,asmyth,29/Nov/06 11:17,11/Oct/10 15:08,14/Mar/19 02:28,03/Oct/09 16:38,,,,,,,,2.2.11,2.3,Transports,,,,,0,"Destination factories are registered for the namespaces:
http://cxf.apache.org/transports/jms/configuration
http://schemas.xmlsoap.org/wsdl/soap/http
http://schemas.xmlsoap.org/wsdl/soap12/
http://cxf.apache.org/transports/local
http://schemas.xmlsoap.org/wsdl/http/
http://cxf.apache.org/transports/jms
http://cxf.apache.org/bindings/xformat
http://schemas.xmlsoap.org/soap/
http://cxf.apache.org/transports/http/configuration
http://schemas.xmlsoap.org/wsdl/soap/
http://schemas.xmlsoap.org/soap/http
http://www.w3.org/2003/05/soap/bindings/HTTP/
Conduit Initiators are registered for the namespaces:
http://cxf.apache.org/transports/jms/configuration
http://schemas.xmlsoap.org/wsdl/soap/http
http://cxf.apache.org/transports/local
http://schemas.xmlsoap.org/wsdl/http/
http://cxf.apache.org/transports/jms
http://cxf.apache.org/bindings/xformat
http://cxf.apache.org/transports/http/configuration
http://schemas.xmlsoap.org/soap/http
http://www.w3.org/2003/05/soap/bindings/HTTP/

As a result, if an endpointtInfo has transportId  ""http://schemas.xmlsoap.org/wsdl/soap/"" a destination can be created for it but no conduit. This is confusing, and there is no good reason (such as: a particular transport is only supported on the client  side).
Moreover it is not clear at all why and how different ways of annotating a JAX-WS implementor result in different transportIds for that endpoint:
For the following implementor:
@javax.jws.WebService(serviceName = ""GreeterService"",
            // portName = ""GreeterPort"",
            endpointInterface = ""org.apache.cxf.hello_world_soap_http.Greeter"",
            targetNamespace = ""http://cxf.apache.org/hello_world_soap_http"")
                  
public class GreeterImpl implements Greeter {
...
}
((org.apache.cxf.jaxws.EndpointImpl)Endpoint.publish(address, new GreeterImpl())).getServer().getEndpoint().getEndpointInfo().getTransportId()  returns http://schemas.xmlsoap.org/wsdl/soap/
but if the portName is uncommented, the endpointInfo of the published endpoint has transportId  http://schemas.xmlsoap.org/soap/http.
Very frustrating in the case of RM, where for a published application server endpoint we take its endpoint Info's transport Id to obtain a conduit  - in order to support server seide originated standalone RM protocol messages such as SequenceAcknowledgments!",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-29 19:15:43.0,,,no_permission,,,,,,,,,,,,,111136,,,Sat Oct 03 16:38:38 UTC 2009,,,,,,0|i13yfr:,231209,,,,,,,,"29/Nov/06 19:15;dandiep;Agreed, I think we need to clean up our namespace usage here. It seems like we have way too many namespaces for SOAP in particular.

Regarding having different transport ids: you're saying that if the endpointinfo is created from wsdl it has a different transportid than if it is created from java?","30/Nov/06 16:51;asmyth;No, both implementors have access to the wsdl via the wsdlLocation attribute set in the interface. (testutils/target/generated/src/main/java/org/apache/cxf/greeter_control/Greeter).
Using the implementor in systests/src/test/java/org/apache/cxf/systest/ws/rm/GreeterImpl (with portName attribute set to ""GreeterPort"")  yields transportId  http://schemas.xmlsoap.org/soap/http
A variant of this implementor with the portName attribute not set yields transportId: http://schemas.xmlsoap.org/wsdl/soap/
Both are OK for creating a destination, but  if I grab the server endpoint transportId and try to get a corresponding conduit, this fails in the second case.","03/Oct/09 16:38;dkulp;

This was fixed a long time ago",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent (and erroneous) behaviour of SpringBusFactory.createBus(...),CXF-274,12357151,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,asmyth,asmyth,28/Nov/06 17:19,29/Aug/07 18:09,14/Mar/19 02:28,22/Jun/07 02:43,,,,,,,,2.0,,Bus,,,,,0,"SpringBusFactory.createBus()  with system property cxf.config.file set to foo.xml leads to different results than SpringBusFactory.createBus(""foo.xml"") (and property  is NOT set).
The first variant actually fails if foo.xml contains definitions of beans that require some of the default property editors to be installed first .
In either case, an initial context is created before the actual application context.
Using the first variant, this initial application context is created with [foo.xml] (and that's where it falls over if property editors are required), using the second variant the initial application context is created with no cfg file [].
If the creation of the initial application context succeeds (comment out offensive beans), the final application context is then created with
[cxf-core.xml, cxf-transports-http.xml, ...., cxf-property-editorrs.xml ..., foo.xml]. 
If the system property cxf.cfg.file is set and points to an existing resource, createBus() should have the same effect as if the resource is passed as an argument to createBus.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-22 17:59:20.4,,,no_permission,,,,,,,,,,,,,111135,,,Thu Feb 01 19:17:20 UTC 2007,,,,,,0|i1a873:,267794,,,,,,,,22/Jan/07 17:59;gtully;org.apache.cxf.systest.common.ClientServerSetupBase.setUp() exibits this behaviour by using the system property rather than setting the resource url directly.,"01/Feb/07 19:14;gtully;this issue has been fixed through revision 500649. The systest.common.ClientServerBase.setUp now behaves as it should when a system property is set to cxf.config.file.
thanks",01/Feb/07 19:17;gtully;fix revision http://svn.apache.org/viewvc?view=rev&revision=500649,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide default executor for bus,CXF-273,12357109,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,asmyth,asmyth,28/Nov/06 11:43,24/Apr/09 21:18,14/Mar/19 02:28,28/Jan/09 03:57,,,,,,,,2.0,,Bus,,,,,0,"and initialise every client/server endpoint with this default executor so that by default multiple endpoints can share the same executor.
Currently, an executor is created only for  JAX-WS client endpoints (proxies).
This default executor should be a ThreadPoolExecutor, and be registered as an extension with the bus so that it's easily replaceable/configurable (e.g. by  ThreadPoolExecutor with a different core pool, size, maximum pool size etc.).",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-28 03:57:32.126,,,no_permission,,,,,,,,,,,,,111134,,,Wed Jan 28 03:57:32 UTC 2009,,,,,,0|i140if:,231545,,,,,,,,28/Jan/09 03:57;dkulp;Fixed a LONG time ago.   WorkQueueManager handles this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sequence creation is not thread safe,CXF-272,12357107,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asmyth,asmyth,asmyth,28/Nov/06 11:22,29/Aug/07 18:03,14/Mar/19 02:28,12/Jan/07 12:15,,,,,,,,2.0-RC,,WS-* Components,,,,,0,"Allow only one CreateSequence request per endpoint at a time - otherwise run into problems as can easily be seen when kicking off multiple asynchronous application requests from the same client - all will attempt to create a sequence.
Workaround: Make sure first application request occurs in isolation (later requests may be concurrent ).",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111133,,,2006-11-28 11:22:24.0,,,,,,0|i13zwn:,231447,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Asynchronous invocations not working,CXF-270,12357091,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,asmyth,asmyth,28/Nov/06 08:11,29/Aug/07 18:03,14/Mar/19 02:28,06/Dec/06 06:51,,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"With an implementor that sleeps 3 seconds in String greetMe(String name) I was expecting the following system test to pass:

public void testAsync() {
       GreeterService service = new GreeterService();
       Greeter greeter = service.getGreeterPort();
             long before = System.currentTimeMillis();
             Response<GreetMeResponse> r1 = greeter.greetMeAsync(""one"");
       Response<GreetMeResponse> r2 = greeter.greetMeAsync(""two"");
             long after = System.currentTimeMillis();
             assertTrue(""Duration of calls exceeded 6000 ms"", after - before < 6000);
             // first time round, responses should not be available yet
       assertFalse(""Response already available."", r1.isDone());
       assertFalse(""Response already available."", r2.isDone());
             // after three seconds responses should be available
       long waited = 0;
       while (waited < 5000) {
           try {
               Thread.sleep(500);
           } catch (InterruptedException ex) {
              // ignore
           }
           if (r1.isDone() && r2.isDone()) {
               break;
           }
           waited += 500;
       }
       assertTrue(""Response is  not available."", r1.isDone());
       assertTrue(""Response is  not available."", r2.isDone());
   }

However the test fails as the second invocation is apparently only made after the first one has returned a response, i.e. it fails with
junit.framework.AssertionFailedError: Duration of calls exceeded 6000 ms.
There are system tests in place, but these seem to not verify that at some point after the initial (async) invocation, the response is NOT yet available - they only test that it will eventually become available. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111131,,,2006-11-28 08:11:00.0,,,,,,0|i1a87j:,267796,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF can not handle an empty reponse when using oneway operation.,CXF-269,12356991,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jliu,jliu,27/Nov/06 07:42,06/Dec/06 06:52,14/Mar/19 02:28,06/Dec/06 06:52,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"I am doing an interop test between CXF and Artix. What I found is that the hello_world sample does not work anymore (yes, it was working before, so this is a bug introduced to cxf recently).

    [exec]   [xs-exec]      [java] Invoking greetMeOneWay...
    [exec]   [xs-exec]      [java] Exception in thread ""main"" org.apache.cxf.binding.soap.SoapFault: Error reading XMLS
reamReader.
    [exec]   [xs-exec]      [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(
eadHeadersInterceptor.java:113)
    [exec]   [xs-exec]      [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(
eadHeadersInterceptor.java:45)
    [exec]   [xs-exec]      [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.
ava:147)
    [exec]   [xs-exec]      [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:251)
    [exec]   [xs-exec]      [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(
TTPConduit.java:485)
    [exec]   [xs-exec]      [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose(HTTPCon

The reponse from Artix is as below:
Content-Type: text/xml
Content-Length: 0
Connection: Keep-Alive
Server: Artix/4.0

I believe this a valid reponse, but CXF can not handle. Digging into the code, I think the following code snippet from HTTPCondit (line 461) are problematic:

            if (exchange != null
                && exchange.isOneWay()
                && responseCode != HttpURLConnection.HTTP_ACCEPTED) {
                //oneway operation
                connection.getInputStream().close();
                return;
            }

However, as I am not 100% sure what impact we may have on partial response if I change this code, so I will leave this bug to someone more familiar with 
partial/decoupled response to fix. Basicly we should close the connection if received reponse is for a one way operation.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111130,,,2006-11-27 07:42:47.0,,,,,,0|i1a87r:,267797,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java2WSDL NEP when the SEI is DOC-LIT Wrapped style,CXF-265,12356335,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,22/Nov/06 09:13,22/Nov/06 10:23,14/Mar/19 02:28,22/Nov/06 10:23,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"If the RequestWrapper or the ResponseWrapper annotation is missing in the method annotation, the DOC-LIT wrapper style SEI throws NEP in java2wsdl tool

java.lang.NullPointerException
   at org.apache.cxf.tools.java2wsdl.processor.internal.DocWrapperMethodProcessor.process(DocWrapperMethodProcessor.java:80)
   at org.apache.cxf.tools.java2wsdl.processor.internal.ClassProcessor.processMethod(ClassProcessor.java:126)
   at org.apache.cxf.tools.java2wsdl.processor.internal.ClassProcessor.process(ClassProcessor.java:71)
   at org.apache.cxf.tools.java2wsdl.processor.JavaToWSDLProcessor.buildModel(JavaToWSDLProcessor.java:61)
   at org.apache.cxf.tools.java2wsdl.processor.JavaToWSDLProcessor.process(JavaToWSDLProcessor.java:54) ",,,,,,,,,,,,,,,,,22/Nov/06 09:14;maomaode;Hello.java;https://issues.apache.org/jira/secure/attachment/12345461/Hello.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111126,,,2006-11-22 09:13:18.0,,,,,,0|i1a6kv:,267532,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAPBinding annotation can not placed on method with RPC style,CXF-263,12356326,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,maomaode,maomaode,22/Nov/06 05:51,23/Nov/06 06:03,14/Mar/19 02:28,23/Nov/06 06:03,2.0-RC,,,,,,,2.0-RC,,JAX-WS Runtime,Tooling,,,,0,"Tools and run time should both report error, if the SOAPBinding annotation is placed on method with the RPC style .
Definded in the JSR-181 Section 4.7.1 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111124,,,2006-11-22 05:51:41.0,,,,,,0|i1a6l3:,267533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Server can not start when SEI has no wsdlLocation in the WebService annotation,CXF-258,12356240,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,maomaode,maomaode,21/Nov/06 07:26,22/Nov/06 08:31,14/Mar/19 02:28,22/Nov/06 08:31,2.0-M1,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"We have a simple testcase(attached the SEI), in which we have only one operation sayHi, we use the java2wsdl to genete the code, the wsdl file generated is OK. 
Then We use the wsdl2java to generate the java artifacts, those artifacts are also FINE.
but when we start the server, then the server give us the following exception:

INFO: Creating Service {http://cxf.com/}HelloService from class com.cxf.HelloImpl
Exception in thread ""main"" java.lang.NullPointerException
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeWrappedSchema(ReflectionServiceFactoryBean.java:3
45)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:20
3)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:116)
        at org.apache.cxf.jaxws.EndpointImpl.<init>(EndpointImpl.java:99)
        at org.apache.cxf.jaxws.spi.ProviderImpl.createEndpoint(ProviderImpl.java:57)
        at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:66)
        at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
        at com.cxf.HelloServer.<init>(HelloServer.java:37)
        at com.cxf.HelloServer.main(HelloServer.java:41)",,,,,,,,,,,,,,,,,21/Nov/06 07:29;maomaode;Hello.java;https://issues.apache.org/jira/secure/attachment/12345399/Hello.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-21 19:58:15.0,,,no_permission,,,,,,,,,,,,,111119,,,Wed Nov 22 07:18:06 UTC 2006,,,,,,0|i1a6lz:,267537,,,,,,,,"21/Nov/06 07:29;maomaode;The problem is the SEI has no wsdlLocation in the WebService annotation.
If we add the wsdllocation, then it's fine.
That's a bug in the RT.",21/Nov/06 19:58;dandiep;I'm not sure I see how the NPE is a result of the lack of the wsdlLocation. Can you elaborate?,"22/Nov/06 02:10;maomaode;I have attached the testcase, and the description of the steps to reproduce also very clear, you can try to add the wsdlLocation and remove the wsdlLocation from the WebService annotation in the SEI. That's how i found the the problem. ","22/Nov/06 07:18;maomaode;The ReflectionServiceFactoryBean set the default wrappedStyle to TRUE, but the testcase is RPC style, so the operation wrappedStyle set to FALSE
   That's why if the wsdlLocation is missing there will have a NPE in the following code.

           if (wrappedStyle) {
               initializeWrappedSchema(serviceInfo);
           }

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PortType can have its own targetnamespace and different from the service one,CXF-257,12356227,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,21/Nov/06 02:19,05/Jun/07 06:14,14/Mar/19 02:28,05/Jun/07 06:14,2.0-RC,,,,,,,2.0,,JAX-WS Runtime,Tooling,,,,0,"When building the model from a java class using jaxws,
the PortType QName must be inferred from the @WebService
annotation on the SEI.

For example

@WebService( serviceName = ""SoapService"",
                       targetNamespace = ""urn:greeter:service""
                       endpointInterface =
""org.apache.hello_world_soap_http.Greeter"" )
public class GreeterImpl {
  ...
}

@WebService( name = ""Greeter"", targetNamespace = ""urn:greeter:port"" )
public interface Greeter {
  ...
}

must lead to a service QName of ""{urn:greeter:service}SoapService"",
and a PortType QName of ""{urn:greeter:port}Greeter"".

Due to wsdl spec, the generated wsdl must be splitted in two with
an import statement, so that the PortType can have its own
targetNamespace, different from the Service one.

The PortType QName can be easily fixed in the JaxWsServiceConfiguration with
the following code:
    @Override
    public QName getInterfaceName() {
        Class<?> epi = implInfo.getEndpointClass();
        WebService ws = null;
        if (epi != null) {
            ws = epi.getAnnotation(WebService.class);
        }
        if (ws != null && ws.name() != null && ws.name().length() > 0) {
            String name = ws.name();
            String nsuri = ws.targetNamespace();
            if (nsuri == null || nsuri.length() == 0) {
                nsuri =
ServiceUtils.makeNamespaceFromClassName(epi.getName(), ""http"");
            }
            return new QName(nsuri, name);
        }
        return null;
    }

However, the tooling needs some refactoring to be able to output
two different wsdls, but I think there was a plan to use to service
model ...
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111118,,,Tue Jun 05 06:14:07 UTC 2007,,,,,,0|i1a6m7:,267538,,,,,,,,05/Jun/07 06:14;ema;This issue is duplicate with CXF-669,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
js_provider sample problem,CXF-255,12356159,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jliu,jliu,20/Nov/06 09:57,01/Dec/06 09:33,14/Mar/19 02:28,01/Dec/06 09:33,2.0-M1,,,,,,,2.0-RC,,Dynamic Languages,,,,,0,"js_provider demo:
>        [java] Invoking server through Dispatch interface using  
> SOAPMessage
>    [java] Response from server: Hi undefined
>    [java] Invoking server through Dispatch interface using  
> DOMSource in PAYLOAD Mode
>    [java] Response from server: Hi Heron
>
> The first request return ""Hi undefined"" , not sure it's correct.  
> and in server dir, there are three response xml files, but client  
> side only have two request xml files.
> I'll looking into this, and will port a system tests for this.

Unless it's changed from the days when I originally wrote it, the  
server side doesn't even use the response XML files. Those are  
leftover from the original dispatch_provider demo that I copied to  
start from. I should have removed them.

The first response should be ""Hi Gil"" so something is definitely  
wrong somewhere. I'll kick off a build and see if I see anything wrong.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-30 08:27:49.0,,,no_permission,,,,,,,,,,,,,111116,,,Fri Dec 01 09:33:51 UTC 2006,,,,,,0|i1a6mn:,267540,,,,,,,,"30/Nov/06 08:27;maomaode;The problem is caused by the apache license header in the GreetMeDocLiteralReq1.xml
Remove the apache license header, fix the problem.
So there is something wrong in our server side code. ","01/Dec/06 09:33;maomaode;upgraded xmlbeans to 2.2.0
upgraded rhino to 1.6RC5

remove the comments in xmlbeans object",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Server can not start  when the port number is missing,CXF-253,12356153,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,maomaode,maomaode,20/Nov/06 07:41,23/Nov/06 08:05,14/Mar/19 02:28,23/Nov/06 08:05,2.0-M1,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"If the port number is missing then the server will give us the following stack trace.
I think by defaut the RT should be able to start server at 80, instead of the fail


WARNING: Failed to start: SocketListener0@0.0.0.0:-1
org.mortbay.util.MultiException[java.lang.IllegalArgumentException: Port value out of range: -1]
	at org.mortbay.http.HttpServer.doStart(HttpServer.java:686)
	at org.mortbay.util.Container.start(Container.java:72)
	at org.apache.cxf.transport.http.JettyHTTPServerEngine.addServant(JettyHTTPServerEngine.java:137)
	at org.apache.cxf.transport.http.JettyHTTPDestination.setMessageObserver(JettyHTTPDestination.java:121)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:62)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:236)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:156)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:67)
	at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
	at com.cxf.Hello12Server.<init>(Hello12Server.java:37)
	at com.cxf.Hello12Server.main(Hello12Server.java:41)
java.lang.IllegalArgumentException: Port value out of range: -1
	at java.net.ServerSocket.<init>(ServerSocket.java:180)
	at org.mortbay.util.ThreadedServer.newServerSocket(ThreadedServer.java:391)
	at org.mortbay.util.ThreadedServer.open(ThreadedServer.java:477)
	at org.mortbay.util.ThreadedServer.start(ThreadedServer.java:503)
	at org.mortbay.http.SocketListener.start(SocketListener.java:204)
	at org.mortbay.http.HttpServer.doStart(HttpServer.java:716)
	at org.mortbay.util.Container.start(Container.java:72)
	at org.apache.cxf.transport.http.JettyHTTPServerEngine.addServant(JettyHTTPServerEngine.java:137)
	at org.apache.cxf.transport.http.JettyHTTPDestination.setMessageObserver(JettyHTTPDestination.java:121)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:62)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:236)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:156)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:67)
	at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
	at com.cxf.Hello12Server.<init>(Hello12Server.java:37)
	at com.cxf.Hello12Server.main(Hello12Server.java:41)
java.lang.IllegalArgumentException: Port value out of range: -1
	at java.net.ServerSocket.<init>(ServerSocket.java:180)
	at org.mortbay.util.ThreadedServer.newServerSocket(ThreadedServer.java:391)
	at org.mortbay.util.ThreadedServer.open(ThreadedServer.java:477)
	at org.mortbay.util.ThreadedServer.start(ThreadedServer.java:503)
	at org.mortbay.http.SocketListener.start(SocketListener.java:204)
	at org.mortbay.http.HttpServer.doStart(HttpServer.java:716)
	at org.mortbay.util.Container.start(Container.java:72)
	at org.apache.cxf.transport.http.JettyHTTPServerEngine.addServant(JettyHTTPServerEngine.java:137)
	at org.apache.cxf.transport.http.JettyHTTPDestination.setMessageObserver(JettyHTTPDestination.java:121)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:62)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:236)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:156)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:67)
	at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
	at com.cxf.Hello12Server.<init>(Hello12Server.java:37)
	at com.cxf.Hello12Server.main(Hello12Server.java:41)
Nov 20, 2006 3:09:37 PM org.apache.cxf.transport.http.JettyHTTPDestination setMessageObserver
WARNING: URL creation failed: 
java.lang.NullPointerException
	at org.mortbay.http.HttpServer.getContext(HttpServer.java:463)
	at org.mortbay.http.HttpServer.getContext(HttpServer.java:486)
	at org.apache.cxf.transport.http.JettyHTTPServerEngine.addServant(JettyHTTPServerEngine.java:153)
	at org.apache.cxf.transport.http.JettyHTTPDestination.setMessageObserver(JettyHTTPDestination.java:121)
	at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:62)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:236)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:156)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:67)
	at javax.xml.ws.Endpoint.publish(Endpoint.java:156)
	at com.cxf.Hello12Server.<init>(Hello12Server.java:37)
	at com.cxf.Hello12Server.main(Hello12Server.java:41)
Server ready...
Server exitting",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111114,,,2006-11-20 07:41:05.0,,,,,,0|i1a6n3:,267542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReadHeadersInterceptor did not account for whitespace before the closing header tag,CXF-251,12355986,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,jonh,jonh,17/Nov/06 13:26,29/Aug/07 02:06,14/Mar/19 02:28,20/Nov/06 05:47,2.0-M1,,,,,,,2.0-M1,,Soap Binding,,,,,0,"If headers where included in a SOAP request an error would occur saying Operation Body was not found. This was due to whitespace which did not create the expected outcome of passing over the body element.

.nextTag() resolves this.

However, apart from skipping whitespace .nextTag()  also skips COMMENT, or PROCESSING_INSTRUCTION. If this is required then the following would also work.

while (xmlReader.isWhiteSpace()) {
                    xmlReader.next();
                }

However, I don't believe there is support in place for processing COMMENT, or PROCESSING_INSTRUCTION when setting headers. So I used .nextTag()",,,,,,,,,,,,,,,,,17/Nov/06 13:26;jonh;ReadHeadersInterceptorPatch.patch;https://issues.apache.org/jira/secure/attachment/12345219/ReadHeadersInterceptorPatch.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-20 05:47:25.0,,,no_permission,,,,,,,,,,,,,111112,,,Mon Nov 20 05:47:25 UTC 2006,,,,,,0|i1a6nb:,267543,,,,,,,,"20/Nov/06 05:47;tli;Thanks, applied with modification.
xmlReader.nextTag();
if (xmlReader.getName().equals(message.getVersion().getBody())) {
        xmlReader.nextTag();
}  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAPHeader exception,CXF-248,12355936,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,blin,blin,17/Nov/06 01:56,29/Aug/07 02:06,14/Mar/19 02:28,17/Nov/06 05:22,2.0-M1,,,,,,,2.0-M1,,Soap Binding,,,,,0,"Hello,

When I try to run a client application, I get the following exception:

C:\Tools\2006_11_15_inferno\samples\client>ant client
Buildfile: build.xml

client:
     [java] Invoking process...
     [java] Exception in thread ""main"" org.apache.cxf.binding.soap.SoapFault: no SOAPAction header!
     [java]     at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInIntercept
or.java:70)
     [java]     at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInIntercept
or.java:36)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
     [java]     at org.apache.cxf.interceptor.AbstractFaultChainIntiatorObserver.onMessage(AbstractFaultChainIntiatorObs
erver.java:75)
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.j
ava:105)
     [java]     at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.j
ava:45)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
     [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:244)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:478)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose(HTTPConduit.java:443)
     [java]     at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCachedOutputStream.java:80)
     [java]     at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:251)
     [java]     at org.apache.cxf.interceptor.MessageSenderInterceptor.handleMessage(MessageSenderInterceptor.java:58)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:128)
     [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invokeSync(EndpointInvocationHandler.java:128)
     [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invoke(EndpointInvocationHandler.java:114)
     [java]     at $Proxy35.process(Unknown Source)
     [java]     at client.Client.main(Client.java:43)
This application worked with Celtix well. I use the current inferno Snapshot.
I attached my wsdl file and the Client apllication.
 
Thanks,
Tobias",,,,,,,,,,,,,,,,,17/Nov/06 01:57;blin;Client.java;https://issues.apache.org/jira/secure/attachment/12345170/Client.java,17/Nov/06 01:58;blin;bpel_process.wsdl;https://issues.apache.org/jira/secure/attachment/12345171/bpel_process.wsdl,17/Nov/06 13:45;testcase.rar;https://issues.apache.org/jira/secure/attachment/12345221/testcase.rar,,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,2006-11-17 05:20:32.0,,,no_permission,,,,,,,,,,,,,111109,,,Fri Nov 17 17:26:20 UTC 2006,,,,,,0|i1a6nz:,267546,,,,,,,,"17/Nov/06 05:20;maomaode;I can not reproduce your problem, i use the wsdl you provided, and use wsdl2java included in the latest kit to generate the artifacts,
and run 
> ant BpelService.Server
> ant BpelService.Client

The testcase runs fine, i did not get the error message, instead i get the correct response from the server.

I'm runing on Windows2000, can you try the testcase with the latest kit?

If it's still fail, please let us know which platform you  are running.  also check the version of your cxf kit.","17/Nov/06 05:22;maomaode;Resolve this issue, since can not re-produce with latest kit.","17/Nov/06 13:46;tkruessm;Hi Lin,

Thank you for creating the JIRA issue.
I run the application with activeBpel 2.0 and two WebServices. The activeBpel file is deployed in Tomcat 5.5.20. The WebServices are running localy with Inferno. The Client connects to the deployed activeBpel. The bpel file checks a number and send the request to the correct WebService. This WebService gives a String back and the activeBpel application creates the Soap Response. And I think, that the inferno Framework can't handle this soap message, because of the Soap Header.

I attached all WebServices and the bpel file.

Thanks,
Tobias
","17/Nov/06 17:26;jliu;Hi Tobias,

I tried the latest test case you provided, I am afraid I still can not reproduce the problem. Here is what I did (on Windows) :

1. using the latest cxf kit
2. unzip the testcase and put approver under sameples dir
3. under approver dir:
ant
start ant server
ant client

result:
D:\cxf-2.0-incubator-M1-SNAPSHOT\samples\approver>start ant server

D:\cxf-2.0-incubator-M1-SNAPSHOT\samples\approver>ant client
Buildfile: build.xml

client:
     [java] Invoking approve...
     [java] server responded with: yes from approver

Not sure if this is the expected result. I noticed that you mentioned the SOAP response is created from bpel, if this is the case, we will not be able to reproduce the problem by calling ""ant server"" using the test case you provided. Could you please give us the SAOP response sent from bpel? hopefully we can indentify the problem without setting up a complex testing environment including bpel.


Thanks,
Jervis",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP POST SOAP Requests not working.,CXF-247,12355908,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,jonh,jonh,16/Nov/06 21:31,29/Aug/07 17:59,14/Mar/19 02:28,20/Nov/06 03:10,2.0-M1,,,,,,,2.0-M1,,Bus,,,,,0,"When sending a request in the form of the example below, I recieve a no such method Body error.

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Body>
     <getProductDetails xmlns=""http://warehouse.example.com/ws"">
       <productID>827635</productID>
     </getProductDetails>
   </soap:Body>
 </soap:Envelope>

This is caused by a .getLocalName() call returning the <soap:Body> element in WrappedInInterceptor.java. As far as I am aware, all SOAP messages require a body, so the following should fix it:

WrappedInInterceptor.java

 public void handleMessage(Message message) { ...
if (operation == null) {
// Added code
       try {
                    xmlReader.nextTag();       	
                } catch (Exception e) {
                    throw new Fault(new org.apache.cxf.common.i18n.Message(""NO_OPERATION_ELEMENT"", BUNDLE));
                }  
// End of added code
       String local = xmlReader.getLocalName(); ...

If I am mistaken and a Body element is not always required :

 public void handleMessage(Message message) { ...
if (operation == null) {
// Added code
            if (xmlReader.getLocalName().equals(""Body"")) {
                try {
                    xmlReader.nextTag();       	
                } catch (Exception e) {
                    throw new Fault(new org.apache.cxf.common.i18n.Message(""NO_OPERATION_ELEMENT"", BUNDLE));
                }  
            }
// End of added code
       String local = xmlReader.getLocalName(); ...






",,,,,,,,,,,,,,,,,16/Nov/06 21:38;jonh;BodyNotRequired.patch;https://issues.apache.org/jira/secure/attachment/12345163/BodyNotRequired.patch,16/Nov/06 21:39;jonh;BodyRequired.patch;https://issues.apache.org/jira/secure/attachment/12345164/BodyRequired.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111108,,,Fri Nov 17 12:14:53 UTC 2006,,,,,,0|i1a6o7:,267547,,,,,,,,16/Nov/06 21:38;jonh;Patch for if a Body tag is NOT REQUIRED in a SOAP Message,16/Nov/06 21:39;jonh;Patch for if a Body tag is REQUIRED in a SOAP Message,"17/Nov/06 10:34;jonh;Sorry, this is 'fixed' in an inappropriate place. Please disregard the above 'fix'.","17/Nov/06 12:14;jonh;Please close, problem is elsewhere",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In Code-Firt model, message processing in client side and server side are different",CXF-246,12355874,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,unrealjiang,unrealjiang,16/Nov/06 15:10,29/Aug/07 17:59,14/Mar/19 02:28,17/Nov/06 03:37,2.0-M1,,,,,,,2.0-M1,,JAX-WS Runtime,,,,,0,,,,,,,,,,,,,,,,,,17/Nov/06 02:43;unrealjiang;CXF-246.patch;https://issues.apache.org/jira/secure/attachment/12345172/CXF-246.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111107,,,Fri Nov 17 02:43:23 UTC 2006,,,,,,0|i13zhr:,231380,,,,,,,,17/Nov/06 02:43;unrealjiang;reviewed by Dan D,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Action is not set.,CXF-244,12355860,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,asmyth,asmyth,16/Nov/06 12:15,30/Apr/08 14:57,14/Mar/19 02:28,19/Feb/08 19:51,,,,,,,,2.1,,WS-* Components,,,,,0,"For application messages, the value of the action attribute is always null - the fallback solution to use the name of the Method object stored in the OperationInfo properties is broken since this property is no longer set.
See also CXF-210 which should obsolete the use of SoapOperationInfo in org.apache.cxf.ws.addresing.ContextUtils.getAction(Message message).",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-19 19:51:38.634,,,no_permission,,,,,,,,,,,,,111105,,,Tue Feb 19 19:51:38 UTC 2008,,,,,,0|i1a6of:,267548,,,,,,,,"19/Feb/08 19:51;dkulp;
Fixed as part of the JAX-WS 2.1 TCK work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceModel in CXF will get the ArrayIndexOutOfBoundsException when the port has no extenstion in WSDL,CXF-243,12355820,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,16/Nov/06 02:27,29/Aug/07 02:06,14/Mar/19 02:28,16/Nov/06 06:18,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 0
	at java.util.Vector.get(Vector.java:710)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildEndpoint(WSDLServiceBuilder.java:209)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildService(WSDLServiceBuilder.java:144)
	at org.apache.cxf.wsdl11.WSDLServiceFactory.create(WSDLServiceFactory.java:71)
	at org.apache.cxf.transport.jms.AbstractJMSTester.setupServiceInfo(AbstractJMSTester.java:72)
	at org.apache.cxf.transport.jms.JMSConduitTest.testGetConfiguration(JMSConduitTest.java:55)
	
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111104,,,2006-11-16 02:27:03.0,,,,,,0|i0v37b:,179492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
dispatch provider demo now print out wrong messge,CXF-239,12355675,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,15/Nov/06 07:50,29/Aug/07 18:00,14/Mar/19 02:28,15/Nov/06 08:44,,,,,,,,2.0-M1,,,,,,,0,"run the demo and on the client side can get some message like
Invoking server through Dispatch interface using DOMSource in MESSAGE Mode
     [java] Response from server:
     [java]   Licensed to the Apache Software Foundation (ASF) under one
     [java]   or more contributor license agreements. See the NOTICE file
     [java]   distributed with this work for additional information
     [java]   regarding copyright ownership. The ASF licenses this file
     [java]   to you under the Apache License, Version 2.0 (the
     [java]   ""License""); you may not use this file except in compliance
     [java]   with the License. You may obtain a copy of the License at
     [java]
     [java]   http://www.apache.org/licenses/LICENSE-2.0
     [java]
     [java]   Unless required by applicable law or agreed to in writing,
     [java]   software distributed under the License is distributed on an
     [java]   ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
     [java]   KIND, either express or implied. See the License for the
     [java]   specific language governing permissions and limitations
     [java]   under the License.

but what we expected is SOAP message, the added apache license info cause this problem and we should minorly change demo code",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111100,,,2006-11-15 07:50:26.0,,,,,,0|i1a6pb:,267552,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with checkstyle organisation of imports,CXF-237,12355618,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,seanoc,seanoc,seanoc,14/Nov/06 17:11,29/Aug/07 02:05,14/Mar/19 02:28,31/Jan/07 14:37,2.0-RC,,,,,,,2.0-RC,,Build system,,,,,0,"The checkstyle.xml  should read:

<module name=""ImportOrder"">
            <property name=""groups"" value=""java,javax,org.w3c,org.xml,junit,com,org""/>
            <property name=""ordered"" value=""true""/>
 </module>

in order to match

\etc\eclipse\CXF.importorder
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111098,,,Wed Jan 31 14:37:13 UTC 2007,,,,,,0|i1a6pr:,267554,,,,,,,,31/Jan/07 14:37;seanoc;merged a fix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE thrown by XmlStreamWriter when calling StaxUtils.copy(),CXF-236,12355534,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,wtam,wtam,13/Nov/06 22:01,29/Aug/07 02:05,14/Mar/19 02:28,06/Dec/06 08:49,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"The following stack trace observed when copying the soap message:


<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
  <soap:Header>
    <ns3:SOAPHeaderInfo xmlns:ns3=""http://apache.org/headers/types"" xmlns:ns2=""http://www.w3.org/2005/08/addressing/wsdl"">
      <originator>in originator</originator>
      <message>in message</message>
    </ns3:SOAPHeaderInfo>
  </soap:Header>
  <soap:Body>
    <ns3:inHeader xmlns:ns3=""http://apache.org/headers/types"" xmlns:ns2=""http://www.w3.org/2005/08/addressing/wsdl"">
      <requestType>in request type</requestType>
    </ns3:inHeader>
  </soap:Body>
</soap:Envelope>

[surefire] testCopy(org.apache.cxf.staxutils.StaxUtilsTest)  Time elapsed: 0.015
 sec  <<< ERROR!
java.lang.NullPointerException
        at com.ctc.wstx.util.BijectiveNsMap.findPrefixByUri(BijectiveNsMap.java:
132)
        at com.ctc.wstx.sw.SimpleOutputElement.getPrefix(SimpleOutputElement.jav
a:525)
        at com.ctc.wstx.sw.BaseNsStreamWriter.getPrefix(BaseNsStreamWriter.java:
136)
        at org.apache.cxf.staxutils.StaxUtils.writeStartElement(StaxUtils.java:2
27)
        at org.apache.cxf.staxutils.StaxUtils.copy(StaxUtils.java:194)
        at org.apache.cxf.staxutils.StaxUtilsTest.testCopy(StaxUtilsTest.java:60
)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at junit.framework.TestCase.runTest(TestCase.java:154)
        at junit.framework.TestCase.runBare(TestCase.java:127)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:118)
        at junit.framework.TestSuite.runTest(TestSuite.java:208)
        at junit.framework.TestSuite.run(TestSuite.java:203)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.maven.surefire.battery.JUnitBattery.executeJUnit(JUnitBatt
ery.java:242)
        at org.apache.maven.surefire.battery.JUnitBattery.execute(JUnitBattery.j
ava:216)
        at org.apache.maven.surefire.Surefire.executeBattery(Surefire.java:215)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:163)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:87)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:63)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.maven.surefire.SurefireBooter.main(SurefireBooter.java:785
)
",Windows XP ,,,,,,,,,,,,,,,,13/Nov/06 22:05;wtam;headerSoapReq.xml;https://issues.apache.org/jira/secure/attachment/12344923/headerSoapReq.xml,13/Nov/06 22:04;wtam;patch.txt;https://issues.apache.org/jira/secure/attachment/12344922/patch.txt,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2006-12-06 08:49:17.0,,,no_permission,,,,,,,,,,,,,111097,,,Wed Dec 06 08:49:17 UTC 2006,,,,,,0|i0v34f:,179479,,,,,,,,13/Nov/06 22:04;wtam;patch and unit test that address the issue,13/Nov/06 22:05;wtam;test data for unit test,06/Dec/06 08:49;njiang;Applied this patch in revision 482956.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in Ant script when trying to build samples/hello_world demo,CXF-235,12355442,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,fintan.bolton,fintan.bolton,13/Nov/06 09:25,29/Aug/07 18:01,14/Mar/19 02:28,14/Nov/06 11:04,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"When you try to build the samples/hello_world demo, ant complains that there is no such file as ../../../../target/srcbuild_paths.xml.  
It turns out that there are a few lines in samples/common_build.xml devoted to defining some files for the source distribution.  You can work around the
problem by commenting out those lines.

This problem arose in the version of CXF that was included in the Inferno kit built on Nov. 9.  This was a BINARY kit.  It looks as if the samples/common.build.xml file accidentally included some lines that were intended for the SOURCE kiit.",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-14 05:42:21.0,,,no_permission,,,,,,,,,,,,,111096,,,Tue Nov 14 11:04:22 UTC 2006,,,,,,0|i1a6pz:,267555,,,,,,,,"14/Nov/06 05:42;tli;Currently, the common_build.xml has <import file=""${srcbuild_paths.file}"" optional=""true""/> line, which won't stop the build, if the ../../../../target/srcbuild_paths.xml file not found.
But for source kit, after running ""mvn install"" under the trunk, you still needs to run ""mvn install"" under the distribution module because the trunk pom.xml won't install distribution module and the demos running needs distribution module install before.
","14/Nov/06 09:19;fintan.bolton;Here is the error I get when I try to run the hello_world demo:

Buildfile: build.xml

BUILD FAILED
C:\Programs\Inferno\samples\hello_world\build.xml:22: The following error occurred while executing this line:
C:\Programs\Inferno\samples\common_build.xml:35: The file or path you specified
(..\..\..\..\target\srcbuild_paths.xml) is invalid relative to C:\Programs\Inferno\samples

Total time: 0 seconds

The error might be triggered by the fact that ..\..\..\..\target\srcbuild_paths.xml tries to look four directories up from C:\Programs\Inferno, which brings you beyond the root directory.","14/Nov/06 11:04;njiang;If the distribution place less the 2 level relates to root directory ant will be failed
Just like C:\Programs\Inferno\samples + related path(..\..\..\..\target\srcbuild_paths.xml)  will be out of root path.
So I comment it in revision 474725",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Axis-CXF interop problem,CXF-220,12355413,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,13/Nov/06 02:42,29/Aug/07 02:06,14/Mar/19 02:28,17/Nov/06 10:54,2.0-M1,,,,,,,2.0-M1,,Bus,,,,,0,"Using CXF as client, Axis as server, Axis throws exception on receiving following message:
POST /axis/services/Echo HTTP/1.1
Content-Type: text/xml ; charset=utf-8
Cache-Control: no-cache
Pragma: no-cache
User-Agent: Java/1.5.0_06
Host: 127.0.0.1:9360
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Connection: keep-alive
Transfer-Encoding: chunked

e5
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><echoBoolean xmlns:ns2=""http://www.w3.org/2005/08/addressing/wsdl"" xmlns=""http://soapinterop.org/cxf"">true</echoBoolean></soap:Body></soap:Envelope>
0

Remove the e5 and 0 wrapped on the soap message, then it works. This might relate to the encoding setting in cxf.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111083,,,Fri Nov 17 10:54:36 UTC 2006,,,,,,0|i1a6rz:,267564,,,,,,,,"17/Nov/06 10:54;jliu;The failures are caused by using HTTP1.1 chunked on the CXF side, while axis 1.4 does not support chunked by default. A cxf config file is provided to disable chunked in CXF, see below:

<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xmlns:http-conf=""http://cxf.apache.org/transports/http/configuration""
       xsi:schemaLocation=""http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd"">
    
    <bean name=""{http://soapinterop.org/cxf}Echo.http-conduit"" abstract=""true"">
        <property name=""client"">
            <value>
                <http-conf:client AllowChunking=""false""/>
            </value>
        </property>
    </bean>

</beans>


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tools scripts do not check for cfx_home first,CXF-213,12355070,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,seumassoltysik,seumassoltysik,08/Nov/06 19:25,29/Aug/07 17:59,14/Mar/19 02:28,09/Nov/06 03:31,,,,,,,,2.0-M1,,Tooling,,,,,0,Current CXF tool scripts assume that tools are being run from bin directory and set cxf_home accordingly. It would be nice if the scripts first checked to see if cxf_home was set in the environment before assuming that script is being run from bin directory. This makes the use of these tools more flexible.,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111076,,,2006-11-08 19:25:59.0,,,,,,0|i140hb:,231540,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add ResourceResolver in tools . Enable tools to load imported schema from jar on classpath.,CXF-209,12354823,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,06/Nov/06 08:41,29/Aug/07 18:01,14/Mar/19 02:28,16/Nov/06 01:47,,,,,,,,2.0-M1,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111072,,,2006-11-06 08:41:51.0,,,,,,0|i0v2wf:,179443,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
setting MessageContext.HTTP_RESPONSE_CODE does not work,CXF-207,12354691,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,cjodea,cjodea,03/Nov/06 13:35,29/Aug/07 02:06,14/Mar/19 02:28,04/Nov/06 02:44,2.0-M1,,,,,,,2.0-M1,,JAX-WS Runtime,,,,,0,"In a service implementation, calling 
  
         messageContext.put(MessageContext.HTTP_RESPONSE_CODE,  401);

for example does not change the response code in the HTTP response.",,,,,,,,,,,,,,,,,03/Nov/06 13:54;cjodea;jaxws_http_response_code.patch;https://issues.apache.org/jira/secure/attachment/12344287/jaxws_http_response_code.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-04 02:44:14.0,,,no_permission,,,,,,,,,,,,,111070,,,Sat Nov 04 02:44:14 UTC 2006,,,,,,0|i1a6tr:,267572,,,,,,,,03/Nov/06 13:54;cjodea;Patch attached.  Make sure that the HTTP response code is set on the out message of the exchange after the target has been invoked.,04/Nov/06 02:44;njiang;This patch had been applied in reversion 471102,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in JaxWsServiceFactoryBean,CXF-206,12354541,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,02/Nov/06 09:24,02/Nov/06 09:57,14/Mar/19 02:28,02/Nov/06 09:57,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"After picking up the changes from Sunday might, I'm seeing a similar NPE
in JaxWsServiceFactoryBean:

java.lang.NullPointerException
        at
org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeParameter
(JaxWsServiceFactoryBean.java:248)
        at
org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeParameter
(JaxWsServiceFactoryBean.java:226)
        at
org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initalizeClassInfo(
JaxWsServiceFactoryBean.java:207)
        at
org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOpera
tion(JaxWsServiceFactoryBean.java:122)
        at
org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeWS
DLOperations(ReflectionServiceFactoryBean.java:237)
        at
org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeSe
rviceModel(ReflectionServiceFactoryBean.java:177)
        at
org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(Refle
ctionServiceFactoryBean.java:115)
        at
org.apache.cxf.jaxws.ServiceImpl.createPort(ServiceImpl.java:239)
        at
org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:199)
        at javax.xml.ws.Service.getPort(Service.java:94)


The relevant WSDL and Service class are attached.  

Roughly, here's what the code that fails is doing (the NPE occurs in
getPort):

  private static final QName LOCATOR_SERVICE_NAME = 
     new QName(""http://ws.iona.com/2005/11/locator"", ""LocatorService"");
  private static final QName LOCATOR_PORT_NAME = 
     new QName(""http://ws.iona.com/2005/11/locator"",
""LocatorServicePort"");
  ...
  String contractLocation = 
     ""http://my_server:43000/services/LocatorService"";        
  URL locatorContractURL = new URL(contractLocation);
  Service service = Service.create(locatorContractURL,
LOCATOR_SERVICE_NAME);
  locatorProxy = (LocatorService) service.getPort(LOCATOR_PORT_NAME,
LocatorService.class);

Any ideas?

-Mike

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111069,,,Thu Nov 02 09:24:31 UTC 2006,,,,,,0|i1a6tz:,267573,,,,,,,,02/Nov/06 09:24;ffang;need add system test to guarantee Locator service works,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 javax.xml.ws.handler.MessageContext.HTTP_REQUEST_HEADERS and HTTP_RESPONSE_HEADERS can't work,CXF-197,12354514,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,02/Nov/06 02:38,29/Aug/07 02:06,14/Mar/19 02:28,03/Nov/06 06:45,,,,,,,,2.0-M1,,,,,,,0,"I'm porting a RESTy service from Celtix 1.something to CXF and have  noticed some differences in the way the HTTP protocol headers are  handled.

For example, in a service implemented using a Provider, I've tried  getting the headers from the MessageContext like this:

    ctx.get(javax.xml.ws.handler.MessageContext.HTTP_REQUEST_HEADERS);

This returns null though.  Calling:

    Map<String, List<String>>hdrs = ctx.get (org.apache.cxf.message.Message.PROTOCOL_HEADERS);

works though and I can get the headers ok.

I also need to set the response headers and should be able to set a  header like this:

      Map<String, List<String>>hdrs = ctx.get (javax.xml.ws.handler.MessageContext.HTTP_RESPONSE_HEADERS);
      hdrs.put(headerName, headerValue);

and have it added to the outgoing response.  However, as above using  the MessageContext property does not return anything.  I've tried  using the org.apache.cxf.message.Message property like this

      Map<String, List<String>>hdrs = ctx.get (org.apache.cxf.message.Message.PROTOCOL_HEADERS);
      hdrs.put(headerName, headerValue);

but there's no sign that the header has been correctly added. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-02 08:14:40.0,,,no_permission,,,,,,,,,,,,,111060,,,Fri Nov 03 06:45:18 UTC 2006,,,,,,0|i1a6vb:,267579,,,,,,,,"02/Nov/06 08:14;ffang;Hi Conrad,

I had done some work of the context mapping in CXF,  I can give you some
explanations.

First, CXF has a jax-ws front end to wrap all the things about the
jax-ws, so I implemented an mapper which get the connection between
jax-ws context and rt-core message context.
Current CXF jax-ws front end mapper just implement a limited mapping of
BindingProvider and MessageContext's defined properties to rt-core, that
is why you can't use
javax.xml.ws.handler.MessageContext.HTTP_REQUEST_HEADERS to get the
request headers.

Second, I went though the code and found the http header which you want
to pass to the response wouldn't take any effect because you just set on
the context ( which we get from  inMessage's context)and it would not
effect to outMessage's context in current code.

So I will fill an JIRA and look into it today :)
",03/Nov/06 06:45;njiang;This should be fix in the reversion 470687,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handling of RuntimeException thrown by Implementor in XMLBinding,CXF-196,12354482,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,apaibir,apaibir,01/Nov/06 18:40,29/Aug/07 18:01,14/Mar/19 02:28,02/Nov/06 08:15,2.0-RC,,,,,,,2.0-M1,,,,,,,0,"If a RuntimeException is thrown in the implementor it gets changed to XMLFault with cause as  NoSuchMethodException type due to a bug in XMLFaultOutInterceptor. Also this XMLFault then further gets wrapped into Fault ...XMLFault. This needs to be fixed.
The behaviour should be a XMLFault with the original exception.",,,,,,,,,,,,,,,,,02/Nov/06 18:50;apaibir;XMLFaultOutInterceptor.java;https://issues.apache.org/jira/secure/attachment/12344234/XMLFaultOutInterceptor.java,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-02 06:10:17.0,,,no_permission,,,,,,,,,,,,,111059,,,Tue Nov 07 05:18:37 UTC 2006,,,,,,0|i13zwf:,231446,,,,,,,,"02/Nov/06 06:10;tli;For the scenario that the impl method throw out RuntimeException, it could only return the result of its getMessage(), other information will be discarded according to fault part of soap spec.",02/Nov/06 08:15;tli;Fixed soap & xml binding can not get correct message (getMessage() return null) from runtime exception thrown by SEI impl method. But no detail according to spec.,02/Nov/06 18:51;apaibir;I have attached the XMLFaultOutInterceptor that fix the handling of RuntimeExceptions thrown in the implementor. A system Test needs to be added for the same.,"02/Nov/06 19:18;apaibir;Also a minor change needs to be included in the same file.

replace if (bop != null) 
by
 if (t != null && bop != null) 

Becaus ea Fault may not contain a cause, This causes a hang for JMS based Endpoints.","07/Nov/06 05:18;tao.li@iona.com;Hi Ajay,

Applied patch and modified the systest to include this type of senario, thank you very much.

Tom

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interceptor chain does not stop when jax-ws handlers' handleMessage() method returns false.,CXF-195,12354468,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,jliu,jliu,jliu,01/Nov/06 16:12,29/Aug/07 02:06,14/Mar/19 02:28,17/Nov/06 02:20,2.0-M1,,,,,,,2.0-M1,,JAX-WS Runtime,,,,,0,"Interceptor chain does not stop when jax-ws handlers' handleMessage() method returns false. Relevant code can be found from LogicalHandlerInterceptor.handleMessage(T message). A test case can be found from org.apache.cxf.systest.handlers.HandlerClientServerTest.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111058,,,2006-11-01 16:12:56.0,,,,,,0|i1a6vj:,267580,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fault doesn't work in xml binding,CXF-194,12354440,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,ffang,ffang,01/Nov/06 10:19,29/Aug/07 02:06,14/Mar/19 02:28,02/Nov/06 08:13,2.0-M1,,,,,,,2.0-M1,,,,,,,2,"when I run hello_world_xml_wrapped sample, I get exception like

     [java] Exception in thread ""main"" org.apache.cxf.binding.xml.XMLFault: org.apache.hello_world_xml_http.wrapped.PingMeFault: PingMeFault raised by server     [java]     at org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor.handleMessage(XMLFaultInInterceptor.java:61)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
     [java]     at org.apache.cxf.interceptor.AbstractFaultChainIntiatorObserver.onMessage(AbstractFaultChainIntiatorObserver.java:75)
     [java]     at org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor.handleMessage(XMLMessageInInterceptor.java:85)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
     [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:245)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:476)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doClose(HTTPConduit.java:443)
     [java]     at org.apache.cxf.io.AbstractCachedOutputStream.close(AbstractCachedOutputStream.java:80)
     [java]     at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:251)
     [java]     at org.apache.cxf.interceptor.MessageSenderInterceptor.handleMessage(MessageSenderInterceptor.java:58)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:147)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:143)
     [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invokeSync(EndpointInvocationHandler.java:128)
     [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invoke(EndpointInvocationHandler.java:114)
     [java]     at $Proxy34.pingMe(Unknown Source)
     [java]     at demo.hw.client.Client.main(Client.java:78)
     [java] Java Result: 1

seems Fault doesn't work now in xml binding. I guess someone change something occasionally cause this problem since I remember it should be fine days before",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-01 13:41:38.0,,,no_permission,,,,,,,,,,,,,96927,,,Wed Nov 01 13:41:38 UTC 2006,,,,,,0|i1a6vr:,267581,,,,,,,,"01/Nov/06 10:31;ffang;after investigate xml system test

public void testXMLFault() throws Exception {
        XMLService service = new XMLService(
                this.getClass().getResource(""/wsdl/hello_world_xml_wrapped.wsdl""), serviceName);
        assertNotNull(service);
        Greeter greeter = service.getPort(portName, Greeter.class);
        try {            
            greeter.pingMe();
            fail(""did not catch expected PingMeFault exception"");
        } catch (PingMeFault ex) {
            assertEquals(""minor value"", 1, ex.getFaultInfo().getMinor());
            assertEquals(""major value"", 2, ex.getFaultInfo().getMajor());
            
            BindingProvider bp = (BindingProvider)greeter;
            Map<String, Object> responseContext = bp.getResponseContext();
            String contentType = (String) responseContext.get(Message.CONTENT_TYPE);
            assertEquals(""text/xml"", contentType);
            Integer responseCode = (Integer) responseContext.get(Message.RESPONSE_CODE);
            assertEquals(500, responseCode.intValue());                                    
        } catch (Exception ex) {
            assertTrue(""did not catch expected PingMeFault exception"", 
                      !(ex instanceof PingMeFault));
        }
    }

found that this test in fact donot guarantee Fault works for xml binding, that's why system test works but demo failed

assertTrue(""did not catch expected PingMeFault exception"", 
                      !(ex instanceof PingMeFault));
should be change to fail(""did not catch expected PingMeFault exception"");
since only PingMeFault is expected here

","01/Nov/06 13:41;apaibir; XMLBinding is not able to handle a RuntimeException thrown from the Implementor. Basically it ends up in XMLFaultOutInterceptor.java where it tries to find ""getFaultInfo"" method. If the Exception does not have one a NoSuchMethodException is thrown . Thus ignoring the actuall Exception thrown by implementor. Worse this new Fault (NoSuchMeethodException) gets wrapped into multiple level of Fault. 

In case of User Specified Faults the XMLFaultOutInterceptor is not able to marshal the FaultInfo object because the 
Class cls = mpi.getProperty(...) @ line 84 in XMLFaultOutInterceptor.java is always null.
This needs to be changed to mpi.getTypeClass()  to get ti working.  This fixes the User Faults but not RuntimeExceptions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
invalid wsdl generated by java2wsdl tool,CXF-188,12354259,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,30/Oct/06 08:39,29/Aug/07 02:05,14/Mar/19 02:28,26/Mar/07 02:50,2.0-RC,,,,,,,2.0-RC,,Tooling,,,,,0,"Th generated wsdl  by java2wsdl tool with the following class is invalid.

import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
 
@SOAPBinding(style=javax.jws.soap.SOAPBinding.Style.RPC, use=javax.jws.soap.SOAPBinding.Use.LITERAL)
@WebService(portName=""DemoPort"", targetNamespace=""http://demo.iona.com/"", serviceName=""DemoService"", endpointInterface=""com.iona.demo.Demo"", name=""Demo"")
 
public interface Demo {
    public void sayHi() ;
}  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111053,,,2006-10-30 08:39:00.0,,,,,,0|i1a6wn:,267585,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdlLocation is not supported,CXF-186,12354113,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,edellnolan,edellnolan,27/Oct/06 08:35,29/Aug/07 18:01,14/Mar/19 02:28,17/Nov/06 05:23,,,,,,,,2.0-M1,,JAX-WS Runtime,,,,,0,"Hi,

I am working on porting yoko to use celtixfire instead of celtix. In our demos we have  the following annotation defined
in our implementor - this does not seem to be supported anymore unless I change it to the second one. 

I have had to change port to use portName and use endpointInterface instead of wsdlLocation. 


//@javax.jws.WebService(name = ""HelloWorld"", serviceName = ""HelloWorldCORBAService"",
                        targetNamespace = ""http://schemas.apache.org/yoko/idl/HelloWorld"", 
                        wsdlLocation = ""c:/yoko_demos/yoko/samples/ws/hello_world/HelloWorld-corba.wsdl"")

@javax.jws.WebService(portName = ""HelloWorldCORBAPort"", serviceName = ""HelloWorldCORBAService"", 
                      targetNamespace = ""http://schemas.apache.org/yoko/idl/HelloWorld"", 
                      endpointInterface = ""yoko.server.HelloWorld"")
                      
Edell.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-16 08:36:18.0,,,no_permission,,,,,,,,,,,,,111051,,,Fri Nov 17 05:23:00 UTC 2006,,,,,,0|i13zvr:,231443,,,,,,,,"16/Nov/06 08:36;maomaode;I have tested with RC1 the hello_world demo , i can not re-produce the problem, 
There was a similar issue reported, but that one has been fixed.
So, i suggest you try your demo again.
If you still see the problem, you could provide your testcase wsdl file.
","17/Nov/06 05:23;maomaode;Resolve this issue, since can not re-produce with latest kit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
handling stack trace in fault,CXF-185,12354091,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,blin,blin,27/Oct/06 03:52,29/Aug/07 18:03,14/Mar/19 02:28,06/Dec/06 06:32,,,,,,,,2.0-RC,,,,,,,0,"There is a discussion in mailing thread related to how to handle stack trace in fault, solution has been suggested, so I created a jira issue to track:

Glynn, Eoghan wrote:
>  
>  
>> -----Original Message-----
>> From: Dan Diephouse [mailto:dan@envoisolutions.com] Sent: 20 October 2006 18:06
>> To: cxf-dev@incubator.apache.org
>> Subject: Re: stacktrace in fault?
>>
>> James Mao wrote:
>>
>>    
>>> I'm thinking of adding a getStackTrace()/setStackTrace into Fault I saw in XML binding we just set the stacktrace into the message, i don't think that is correct way.
>>> Any idea?
>>>
>>> -james.
>>>
>>>
>>>       
>> I don't think we should be sending the stack trace along with the fault. We should log the stack trace on the server side and send information to the client that there was some error processing, but shouldn't necessarily tell them all the details.
>>
>> - Dan
>>     
>
> I'd disagree. In certain circumstances, I think sending on the wire the
> stack trace of the exception that gave rise to the fault would actually
> be very useful for debugging and problem reporting. It could lead to
> much quicker resolution of issues reported by client-side developers, as
> opposed to trawling thru' (potentially very large) server-side logs.
>
> I'd see this as analogous to the CORBA ExceptionDetailMessage service
> context, which is often used by Java ORBs to marshall the offending
> stack trace into the exception reply. As the content of the stack trace
> may be deemed ""sensitive"", say in the case of a secure server, this
> facility can usually be turned off via configuration.
>
> /Eoghan
>
>   
I would be happy with a configuration switch :-)

- Dan ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-09 03:04:06.0,,,no_permission,,,,,,,,,,,,,111050,,,Thu Nov 09 03:04:06 UTC 2006,,,,,,0|i140in:,231546,,,,,,,,"09/Nov/06 03:04;tli;I think it's better that we allow user to config this item at 2 level, one is on bus level, the other is on service level.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
parameter order should be take care of in runtime,CXF-184,12354090,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,27/Oct/06 02:39,09/Feb/07 05:20,14/Mar/19 02:28,09/Feb/07 05:20,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"Hi there,

I'm seeing a problem with parameter order in cxf, and just thought I'd
see if anyone else had any insights.

Somewhat related to CXF-161, I was messing around with a test wsdl and
added a parameterOrder attribute to an operation whose output message
contained both a header part and a response part.  Unfortunately, the
runtime doesn't quite work correctly when using parameterOrder.  (Often
cxf won't find the correct method to call on the server side in this
case).  The BareInInterceptor doesn't seem to account for the
parameterOrder list when putting together the parameter list which is
used to invoke on the server - it assumes header parts always come
after all other parameters.

I made a few changes in my tree to make sure the parameter list is 
correctly ordered and that seems to make sure the right method gets
invoked.

The problem I'm seeing now though is related to the return type.  In my
test wsdl, I left the return part unlisted but listed the header part in
the parameterOrder.

The issue seems to be that when WSDLServiceBuilder.buildMessage() runs
for the out message of the operation, the order for the parts it gets
is 1) header_part 2) return part (since header_part is in the paramOrder
list but the response part isn't).

Later, when the BareOutInterceptor.handleMessage() tries to write the
output arguments, the arguments are in the order 1) return 2) out parameters
(unfortunately not the same as the MessageParts order and so a problem).

Not sure if my description makes sense, but I just wanted to see if
I'm missing something here, or if anyone has any thoughts...  :) 

Cheers,
Peter

-- Peter Jones",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-10-27 14:02:03.0,,,no_permission,,,,,,,,,,,,,111049,,,Mon Nov 06 15:54:59 UTC 2006,,,,,,0|i1a6x3:,267587,,,,,,,,"27/Oct/06 14:02;dkulp;
Just a clarification:  the parameter order is a function of the frontend, not the SOAP binding or the Bare*Interceptors and such.   Those interceptors should be working on the messages as defined in the logical part of the wsdl.   Thus, the part order in the messages is how they should appear there.   

The JAX-WS frontend (and/or the Simple frontend) should map the parameter order to the correct message based ordering.

Dan K.","28/Oct/06 20:12;dandiep;Isn't the parameter order defined in the wsdl binding?

This means that our Binding class should be providing a List of ordered message parts instead of hitting the interface.getMessageParts(). This corresponds to our need to get rid of MessagePartInfo.isInSoapHeader() as thats the complete wrong place for that method. In my mind the Binding should have this method:

List<MessagePartInfo> getMessageParts(OperationInfo op);

The SoapBinding woudl then have this method as well:

List<MessagePartInfo> getHeaderMessageParts(OperationInfo op);

All of these parts would be ordered.","28/Oct/06 21:15;dkulp;
The parameter is in the wsdl binding, but per the wsdl spec, the parameter order ""serves as a ""hint"" and may safely be ignored by those not concerned with RPC signatures.""   (section 2.4.6) Since the SOAP binding (and other bindings) does not know if the frontend is or is not concerned with RPC signatures, it shouldn't rely on parts coming in odered as per what the parameterOrder attribute says.   Since the attribute is just a hint to the frontend, the frontend should decide whether to use the hint or not.



","06/Nov/06 15:54;peterjones;Hi there,  I've made some changes in my tree for this bug.

In frontend/jaxws:
JAXWSMethodInvoker checks the list of SoapHeaderInfo from the exchange to ensure the parameter list and return part list are ordered correctly.

In bindings/soap:
SoapBindingFactory calls BindingMessageInfo.setMessageParts() with the list of non-header parts.

In rt/core:
AbstractInDatabindingInterceptor.findMessagePart() uses the BindingOperationInfo's BindingMessageInfo to find the correct non-header part.
BareInInterceptor uses the BindingOperationInfo's BindingMessageInfo to read the non-header parts.

This fixes my test case, and doesn't break any of the tests.  Do these changes sound ok to everyone?  Or does anyone see possible issues?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move Holder code from JAXWSMethodInvoker to interceptors,CXF-179,12353975,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,dandiep,dandiep,25/Oct/06 19:16,05/Mar/07 03:18,14/Mar/19 02:28,05/Mar/07 03:18,,,,,,,,2.0-RC,,,,,,,0,"The holder code should become part of the JAX-WS interceptors, so we can use other invokers and still have Holders work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111045,,,Mon Mar 05 03:18:12 UTC 2007,,,,,,0|i0v2tj:,179430,,,,,,,,05/Mar/07 03:18;dandiep;I believe I did this a while ago... :-),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema parser cannot resolve relative import locations (case of multiple imports).,CXF-178,12353957,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,mbricout,mbricout,25/Oct/06 15:43,04/Jul/08 08:57,14/Mar/19 02:28,06/Nov/06 02:48,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"I have a test case that uses a set of WSDLs and schemas with multiple imports using relative URIs.

ie: A.wsdl imports B.xsd that imports C.xsd, all are located in the same directory.

In A.wsdl:
  <xsd:import namespace=""http://foo"" schemaLocation=""./B.xsd""/>

In B.xsd:
  <xsd:import namespace=""http://foo/bar"" schemaLocation=""./C.xsd""/>

Code generation works fine, however I have a problem at runtime where the server fails to initialize with the following exception:

java.lang.RuntimeException: org.apache.ws.commons.schema.XmlSchemaException:
/[my project path]/C.xsd (No such file or directory)

The problem is that the URI for importing C.xsd is incorrectly determined.

In the example above, C.xsd would actually be located in
/[my project path]/target/test/wsdl/C.xsd

I see the following behavior in org.apache.cxf.resource.URIResolver:

For A imports B, we create a URIResolver with the following parameters:
 baseUriStr = ""file:[path to A]/A.wsdl""         (correct)
 uriStr = ""./B.xsd""

Then tryFileSystem(baseUriStr, uriStr) is invoked and B.xsd is correctly resolved.


Now for B import C, we create a URIResolver with the following parameters:
 baseUriStr = ""./B.xsd""
 uriStr = ""./C.xsd""

The value for the base URI being set to a relative path, we fail to resolve C.xsd.
tryFileSystem ends up calling tryClasspath(""./C.xsd""), which in turn calls tryRemote(), which aborts on a MalformedURLException.

I get the same problem when using relative URIs to import schemas from different directories.
",,,,,,,,,,,,,CXF-1683,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-06 02:48:40.0,,,no_permission,,,,,,,,,,,,,111044,,,Mon Nov 06 02:48:40 UTC 2006,,,,,,0|i1a6xj:,267589,,,,,,,,06/Nov/06 02:48;tli;Maybe we need to report this bug to Apache WS-COMMON project to let them call XMLSchemaResolver with baseUri value in the form as a abosulte path string.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Late test for null object reference - check intent,CXF-177,12353955,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,tli,mbricout,mbricout,25/Oct/06 15:04,29/Aug/07 18:00,14/Mar/19 02:28,06/Nov/06 07:44,2.0-M1,,,,,,,2.0-M1,,WS-* Components,,,,,0,"I stumbled accross this while browsing through the code. It may be of no consequence, however it might be worth double checking the intent:

In org.apache.cxf.ws.addressing.ContextUtils.isOutbound(Message message): we call message.getExchange(), then only after that we check for a null message.

    public static boolean isOutbound(Message message) {
        Exchange exchange = message.getExchange();
        return message != null
               && exchange != null
               && message == exchange.getOutMessage();
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111043,,,2006-10-25 15:04:46.0,,,,,,0|i1a6xr:,267590,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFServlet should pull the Spring ApplicationContext out of the ServletContext if it is available,CXF-175,12353920,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,dandiep,dandiep,25/Oct/06 05:03,08/Nov/06 08:23,14/Mar/19 02:28,08/Nov/06 08:23,,,,,,,,2.0-M1,,,,,,,0,"If a user already has a spring instance running, we should take advantage of that and use their context as our parent context. This can be done by doing:

ServletContext servletCtx = getServletContext();
ApplicationContext parent = (ApplicationContext) servletCtx.getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);

This parent context should then be used to create a SpringBus.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111041,,,Wed Nov 08 08:23:18 UTC 2006,,,,,,0|i1a6xz:,267591,,,,,,,,08/Nov/06 08:23;dandiep;This is now implemented in SVN.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow overriding the default stax parser/writer,CXF-174,12353917,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,,dandiep,dandiep,25/Oct/06 04:54,30/Oct/06 07:30,14/Mar/19 02:28,30/Oct/06 07:30,,,,,,,,2.0-M1,,,,,,,0,"We need to be able to set a property on the service/endpoint/operation and set the stax implementation. Very important to be able to handle fast infoset, custom xml parsers, JSON, etc.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111040,,,2006-10-25 04:54:03.0,,,,,,0|i0uyi7:,178731,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support Name Collisions in  JAX-WS front end,CXF-173,12353906,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,25/Oct/06 03:59,29/Aug/07 18:01,14/Mar/19 02:28,26/Oct/06 01:04,2.0-M1,,,,,,,2.0-M1,,JAX-WS Runtime,,,,,0,"WSDL name scoping rules may result in name collisions when mapping from WSDL 1.1 to Java. E.g., a
port type and a service are both mapped to Java classes but WSDL allows both to be given the same name.

Current CXF tool support to resolve this name collisions, but in the service class for client side use ,the service qname is used the changed service name. In this situation , here will throw a .ServiceConstructionException: NO_SUCH_SERVICE  when the client start. 

For more information , please refer to the  Jax-ws 2.0 specification 2.8.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111039,,,2006-10-25 03:59:58.0,,,,,,0|i1a6y7:,267592,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Genarated client main cannot pass in jaxws Holder where Holder is needed,CXF-172,12353905,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,maomaode,ffang,ffang,25/Oct/06 03:54,09/Nov/06 07:54,14/Mar/19 02:28,09/Nov/06 07:53,2.0-M1,,,,,,,2.0-M1,,Tooling,,,,,0,"for a instance, a Holer<String> of parameter is needed according to SEI, but in client main only pass in string, missing Holder",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111038,,,2006-10-25 03:54:47.0,,,,,,0|i1a6yf:,267593,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndpointInvocationHandler doesn't support cache mechanism,CXF-164,12353795,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,unrealjiang,unrealjiang,24/Oct/06 02:52,29/Aug/07 18:01,14/Mar/19 02:28,27/Oct/06 02:41,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"EndpointInvocationHandler doesn't support cache mechanism.  If an application need cache an endpoint like jca connection management, EndpintInvocation can not return a correct result.",,,,,,,,,,,,,,,,,24/Oct/06 04:10;jaxws_Endpoint_CXF-164.patch;https://issues.apache.org/jira/secure/attachment/12343489/jaxws_Endpoint_CXF-164.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-10-24 07:59:46.0,,,no_permission,,,,,,,,,,,,,111031,,,Tue Oct 24 07:59:46 UTC 2006,,,,,,0|i0v2v3:,179437,,,,,,,,"24/Oct/06 07:59;njiang; JCA Application server implementation had an connection pool to cache the created connection, so the hash() method will be called by Application Server . 

In the EndpointInvocationHandler the hash() method was treated as the proxy object wsdl operation,
and will throw a WebServiceException ""Could not find operation info for web method""

so we need to take out Object class base method in the Handler when the proxy object was created by container to avoid this execption.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2Java fails to include endpointInterface WebService attribute for server Impl,CXF-163,12353722,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,seumassoltysik,seumassoltysik,20/Oct/06 20:33,25/Oct/06 08:31,14/Mar/19 02:28,25/Oct/06 08:31,2.0-M1,,,,,,,2.0-M1,,Tooling,,,,,0,"In the demos and test code, the server Impl classes have a WebService annotation that looks like this:
@javax.jws.WebService(portName = ""SoapPort"", serviceName = ""SOAPService"", 
                      targetNamespace = ""http://apache.org/hello_world_soap_http"", 
                      endpointInterface = ""org.apache.hello_world_soap_http.Greeter"")

However, if I code generate a server Impl using the WSDL2Java tool, the ""endpointInterface"" attribute is missing which causes  a runtime failure.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111030,,,2006-10-20 20:33:45.0,,,,,,0|i1a6zb:,267597,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java doesn't map parameter order correctly,CXF-161,12353628,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,peterjones,peterjones,19/Oct/06 21:10,10/Nov/06 07:37,14/Mar/19 02:28,10/Nov/06 07:37,2.0-M1,,,,,,,2.0-M1,,Tooling,,,,,0,"According to the ""Parameter Order"" section of jaxws spec, unlisted parameters mapped from in and in/out parts appear in the same order the corresponding parts appear in the input message.

I'll attach a test wsdl in which wsdl2java doesn't follow this rule.  Basically, the wsdl input message is:

    ...
    <message name=""headerRequest"">
        <part element=""tns:HeaderInfo"" name=""header_info""/>
        <part element=""tns:Header"" name=""the_request""/>
    </message>

(header_info first, the_request second) - but the generated method signature 
has theRequest parameter first and headerInfo second:

    ...
    public org.apache.header2.HeaderResponse headerMethod(
        @WebParam(targetNamespace = ""http://apache.org/header2"", partName = ""the_request"", name = ""Header"")
        org.apache.header2.Header theRequest,
        @WebParam(targetNamespace = ""http://apache.org/header2"", header = true, mode = Mode.INOUT, partName = ""header_info"", name = ""HeaderInfo"")
        javax.xml.ws.Holder<org.apache.header2.HeaderData> headerInfo
    );
    ",,,,,,,,,,,,,,,,,19/Oct/06 21:13;peterjones;header2.wsdl;https://issues.apache.org/jira/secure/attachment/12343295/header2.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-10-28 20:13:32.0,,,no_permission,,,,,,,,,,,,,111028,,,Fri Nov 10 07:37:44 UTC 2006,,,,,,0|i1a6zr:,267599,,,,,,,,"28/Oct/06 20:13;dandiep;On a related note, the JaxWsServiceFactoryBean is dependent on this order instead of querying the QName for each method parameter and then matching it up to the appropriate MessagePartInfo from the WSDL...","07/Nov/06 05:11;peterjones;Are you sure this bug is resolved?  I just tried running wsdl2java with the wsdl attached to the bug, and the headerInfo was still the second parameter of the method instead of the first (its the first part in the message)... I'll look into this a bit more tomorrow to make sure I'm not just confused.","07/Nov/06 20:18;peterjones;This is still a bug.  Although the header2.wsdl that's in svn passes the test that was added for cxf-161, that wsdl differs from the one attached to this issue because the header_info part is missing from the response message in the copy in svn.  If I copy the file attached to this issue into tools/wsdl2java/src/test/resources/wsdl2java_wsdl/bug161/header2.wsdl, then the test that was added fails... because the parameter order is wrong.","08/Nov/06 07:21;ema;Thank you for pointing out this to me .
I only fixed the parameter order issue when there is no holder in method parameters. I need to add another test for holder parameter using the attached wsdl .  I will look into this .   ","10/Nov/06 07:37;maomaode;Fixed the parameter order of holder parameter, the IN/OUT parameter should replace the IN parameter instead of remove and add.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in JaxWsServiceFactoryBean.initalizeClassInfo,CXF-158,12353537,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,ramnarine,ramnarine,18/Oct/06 22:32,25/Oct/06 08:30,14/Mar/19 02:28,25/Oct/06 08:30,2.0-M1,,,,,,,2.0-M1,,WS-* Components,,,,,0,"Get the following exception:
    java.lang.ClassCastException: java.lang.Class
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initalizeClassInfo(JaxWsServiceFactoryBean.java:238)
        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperation(JaxWsServiceFactoryBean.java:127)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeWSDLOperations(ReflectionServiceFactoryBean.java:218)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:166)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:104)
        at org.apache.cxf.jaxws.ServiceImpl.createPort(ServiceImpl.java:246)
        at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:206)
        at javax.xml.ws.Service.getPort(Service.java:94)
        ...

... when processing the following portion of the Artix Locator WSDL, when creating a proxy that uses that service:
            <xs:element name=""listEndpointsResponse"">
                <xs:annotation>
                    <xs:documentation>Output message element for &quot;listEndpoints&quot; operation.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""endpoint"">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name=""endpoint_id"" 
                                        type=""tns:EndpointIdentity""/>
                                    <xs:element name=""endpoint_reference"" 
                                        type=""wsa:EndpointReferenceType""/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

Feel free to contact me if you need the complete WSDL

Here's the line of code that gets the ClassCastException:
    ParameterizedType paramType = (ParameterizedType) paraType[inPartCount + outIdx];

-- Here's some debugging output, right before the exception occurs --
paraType.length: 2
inPartCount: 1
outIdx: 0
paraType[inPartCount + outIdx]:  class org.apache.cxf.ws.addressing.EndpointReferenceType 
selected: public abstract void com.iona.ws._2005._11.locator.LocatorService.registerEndpoint(com.iona.ws._2005._11.locator.types.EndpointIdentity,org.apache.cxf.ws.addressing.EndpointReferenceType)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111025,,,2006-10-18 22:32:41.0,,,,,,0|i1a707:,267601,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Runtime error processing anonymous ref in WSDL during Service.create(),CXF-157,12353535,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ramnarine,ramnarine,18/Oct/06 21:30,25/Oct/06 08:30,14/Mar/19 02:28,25/Oct/06 08:30,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"java.lang.IllegalArgumentException: Invalid name [null]
        at org.apache.cxf.service.model.AbstractMessageContainer.addMessagePart(AbstractMessageContainer.java:69)
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.isWrappableSequence(WSDLServiceBuilder.java:472)
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.checkForWrapped(WSDLServiceBuilder.java:407)
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildInterfaceOperation(WSDLServiceBuilder.java:332)
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildInterface(WSDLServiceBuilder.java:304)
        at org.apache.cxf.wsdl11.WSDLServiceBuilder.buildService(WSDLServiceBuilder.java:135)
        at org.apache.cxf.wsdl11.WSDLServiceFactory.create(WSDLServiceFactory.java:71)
        at org.apache.cxf.jaxws.ServiceImpl.<init>(ServiceImpl.java:83)
        at org.apache.cxf.jaxws.spi.ProviderImpl.createServiceDelegate(ProviderImpl.java:48)
        at javax.xml.ws.Service.<init>(Service.java:57)
        at javax.xml.ws.Service.create(Service.java:302)
        ...

This exception occurs when processing the WSDL following complex type for the queryEndpoints element of the Artix Locator:
    <xs:complexType>
        <xs:sequence>
            <xs:element ref=""query:select""/>
        </xs:sequence>
    </xs:complexType>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111024,,,Wed Oct 18 21:31:30 UTC 2006,,,,,,0|i0v433:,179635,,,,,,,,"18/Oct/06 21:31;ramnarine;Here is a suggested patch to fix this problem in WSDLServiceBuilder.java, as of 18-Oct-2006:

Index: rt/core/src/main/java/org/apache/cxf/wsdl11/WSDLServiceBuilder.java

===================================================================

--- rt/core/src/main/java/org/apache/cxf/wsdl11/WSDLServiceBuilder.java	(revision 465360)

+++ rt/core/src/main/java/org/apache/cxf/wsdl11/WSDLServiceBuilder.java	(working copy)

@@ -404,7 +404,8 @@

         XmlSchemaComplexType xsct = null;
         if (inputEl.getSchemaType() instanceof XmlSchemaComplexType) {
             xsct = (XmlSchemaComplexType)inputEl.getSchemaType();
-            if (hasAttributes(xsct) || !isWrappableSequence(xsct, unwrappedInput)) {
+            if (hasAttributes(xsct) 
+                || !isWrappableSequence(xsct, inputEl.getQName().getNamespaceURI(), unwrappedInput)) {
                 passedRule = false;
             }
         } else {
@@ -420,7 +421,8 @@

 
             if (outputEl != null && outputEl.getSchemaType() instanceof XmlSchemaComplexType) {
                 xsct = (XmlSchemaComplexType)outputEl.getSchemaType();
-                if (hasAttributes(xsct) || !isWrappableSequence(xsct, unwrappedOutput)) {
+                if (hasAttributes(xsct) 
+                    || !isWrappableSequence(xsct, outputEl.getQName().getNamespaceURI(), unwrappedOutput)) {
                     passedRule = false;
                 }
             } else {
@@ -450,7 +452,7 @@

         return false;
     }
 
-    private boolean isWrappableSequence(XmlSchemaComplexType type, MessageInfo wrapper) {
+    private boolean isWrappableSequence(XmlSchemaComplexType type, String namespaceURI, MessageInfo wrapper) {
         if (type.getParticle() instanceof XmlSchemaSequence) {
             XmlSchemaSequence seq = (XmlSchemaSequence)type.getParticle();
             XmlSchemaObjectCollection items = seq.getItems();
@@ -462,7 +464,13 @@

                 }
                 XmlSchemaElement el = (XmlSchemaElement)o;
 
-                MessagePartInfo mpi = wrapper.addMessagePart(el.getQName());
+                // Handle anonymous ref
+                QName elQname = el.getQName();
+                if (elQname == null) {
+                    elQname = new QName(namespaceURI, el.getRefName().getLocalPart());
+                }
+
+                MessagePartInfo mpi = wrapper.addMessagePart(elQname);
                 mpi.setTypeQName(el.getSchemaTypeName());
             }
 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When we stop server in an application, all resouces have not been cleaned up.",CXF-152,12353189,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,unrealjiang,unrealjiang,14/Oct/06 07:09,29/Aug/07 02:06,14/Mar/19 02:28,31/Oct/06 02:02,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"Such as If our application has two services and two servers for those services, when we'd like to stop one server, unfortunately all the resouces used by this server will not been cleaned up. I know our bus.shutdown function is designed for this, but so for this function do nothing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-10-26 02:13:44.0,,,no_permission,,,,,,,,,,,,,111019,,,Tue Oct 31 02:02:43 UTC 2006,,,,,,0|i0v2h3:,179374,,,,,,,,"26/Oct/06 02:13;njiang;[CXF-77] the endpoint need to be shut down when bus shut down had been resolved

Current CXF default bus has changed from CXFbus to SpringBus, but  in the spring bus the BusLifeCycleManager is not get to work.
So some clean up work need to be done.
","31/Oct/06 02:02;njiang;Revision: 467854 call the lifecycleManager.preShutdown() and postShutdown() in springBus.shutdown()
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Element ref not supported in message types definitions,CXF-151,12353148,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,mbricout,mbricout,13/Oct/06 11:38,25/Oct/06 09:00,14/Mar/19 02:28,25/Oct/06 08:42,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"Example: wsdl + schema snippets

[wsdl]

  <wsdl:message name=""SetResourcePropertiesRequest"">
    <wsdl:part name=""SetResourcePropertiesRequest""
               element=""wsrf-rp:SetResourceProperties"" />
  </wsdl:message>

[schema]

  <xsd:element name=""SetResourceProperties"">
    <xsd:complexType>
      <xsd:choice minOccurs=""1"" maxOccurs=""unbounded"">
        <xsd:element ref=""wsrf-rp:Insert"" />
        <xsd:element ref=""wsrf-rp:Update"" />
        <xsd:element ref=""wsrf-rp:Delete"" />
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>

Problem:

This results into the following exception being thrown at service initialisation time:
      java.lang.IllegalArgumentException: Invalid name [null]
      in org.apache.cxf.service.model.AbstractMessageContainer.addMessagePart

The issue can be further narrowed to this:

In org.apache.cxf.wsdl11.WSDLServiceBuilder.isWrappableSequence(),
we obtain the element's qualified name to be passed into AbstractMessageContainer.addMessagePart().

el.getQName() returns null for the elements defined using ""ref"".
It seems that getRefName() should instead be used in this case.

The current workaround consists into replacing the element references with their actual types
in the schema.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-10-13 15:54:20.0,,,no_permission,,,,,,,,,,,,,111018,,,Fri Oct 13 15:54:20 UTC 2006,,,,,,0|i0v3pz:,179576,,,,,,,,"13/Oct/06 15:54;dandiep;Thanks Michael, good catch. We'll get this fixed...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic discovery of binding creators,CXF-145,12352319,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dandiep,bravi,bravi,03/Oct/06 18:57,31/Mar/07 20:41,14/Mar/19 02:28,31/Mar/07 20:41,2.0-M1,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"It would be nice if in ServerFactoryBean, ServiceImpl, etc, we could dynamically discover which BindingInfoFactoryBean we want to use. 

I am reluctant to have a BindingInfoFactoryBeanFactory as this seems a bit odd. It is nice to be able to just create your own factory bean:
factory = new SoapBindingInfoFactoryBean()
factory.setStyle(""document"");
...etc.

I am not sure what the potential resolution might be. Feel free to add some ideas in the comments.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-10-03 19:04:18.0,,,no_permission,,,,,,,,,,,,,111012,,,Sat Mar 31 20:41:21 UTC 2007,,,,,,0|i1a71z:,267609,,,,,,,,"03/Oct/06 19:04;dandiep;Because the frontend has specific knowledge of how to create the bindings. For instance, JAX-WS has specific information about SOAP. Hence we need to have a dependency on the SOAP binding. I am in the midst of some cleanup on this and clarifying how frontends work right now. I am just trying to get my tests to pass. Hopefully I can get the commit in yet today and you can take a look.",16/Nov/06 03:30;dandiep;I've updated the issue to more accurately describe the issue at hand and schedule for M2.,31/Mar/07 20:41;dandiep;Dan Kulp just fixed this in SVN.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Content-Type not being set,CXF-143,12352210,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,dkulp,dkulp,02/Oct/06 15:43,25/Oct/06 08:16,14/Mar/19 02:28,25/Oct/06 08:16,2.0-M1,,,,,,,2.0-M1,,Soap Binding,,,,,0,"
The Content-Type header is not being set properly.    This might be an HTTP transport issue instead.   Not sure.

In anycase, the request messages are using the default:
Content-type: application/x-www-form-urlencoded

and the response messages are not setting ANY Content-type header.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-10-02 16:05:22.0,,,no_permission,,,,,,,,,,,,,111010,,,Mon Oct 02 16:05:22 UTC 2006,,,,,,0|i13zsn:,231429,,,,,,,,"02/Oct/06 16:05;asmyth;In HTTPConduit.setPolicies, use the getContentType getter of HTTPClientPolicy directly instead of checking if the attribute is set first (it has ""text/html"" as default).
Same for server side.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JCA tests fail on OS X,CXF-142,12352185,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,cjodea,cjodea,02/Oct/06 11:25,29/Aug/07 02:06,14/Mar/19 02:28,03/Oct/06 03:12,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"in src/test/java/org/apache/cxf/jca/cxf/JCABusFactoryTest.java, testInitFromPropsWithInvalidWsdlLocUrls attempts to resolve an invalid URL and expects to receive an UnknownHostException.  On OS X, however, a FileNotFoundException is raised.   The test should be changed to expect an java.io.IOException
","Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_06-93) on Mac OS X 10.4.7",,,,,,,,,,,,,,,,02/Oct/06 11:27;cjodea;cxf-142.patch;https://issues.apache.org/jira/secure/attachment/12342085/cxf-142.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-10-03 02:45:35.0,,,no_permission,,,,,,,,,,,,,111009,,,Tue Oct 03 02:45:35 UTC 2006,,,,,,0|i0v447:,179640,,,,,,,,"02/Oct/06 11:27;cjodea;patch for fix 
",03/Oct/06 02:45;njiang;commited the patch in revision 452299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix configurable bean code generators to distiguish default value from injected value,CXF-141,12352180,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asmyth,asmyth,asmyth,02/Oct/06 11:03,12/Jan/07 14:14,14/Mar/19 02:28,10/Oct/06 11:01,2.0-M1,,,,,,,2.0-M1,,Configuration,,,,,0,"The current approach does not allow proper use of fallback providers if the property has a default because we cannot distinguish between the cases when a default is used and when a value was injected.
E.g. instead of:
public BigDecimal getDecimalElem() {
        BigDecimal _decimalElem = tryOverwrite(BigDecimal.class, ""decimalElem"");
        if (!(null == _decimalElem)) {
            return _decimalElem;
        }
        if (null == decimalElem) {
            return tryFallback(BigDecimal.class, ""decimalElem"");
        } else {
            return decimalElem;
        }
    }
generate this:
public BigDecimal getDecimalElem() {
        BigDecimal _decimalElem = tryOverwrite(BigDecimal.class, ""decimalElem"");
        if (!(null == _decimalElem)) {
            return _decimalElem;
        }
        if (null != decimalElem) {
            return decimalElem;
        }
        _decimalElem =  tryFallback(BigDecimal.class, ""decimalElem"");;
        if (null != _decimalElem) {
            return _decimalElem;
        } 
        return new BigDecimal(""15"");       
    }

and leave the data members uninitialised!
Once fixed, revisit the use of overwrite providers in the http and jms transports (replace by  fallback providers).",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,111008,,,Tue Oct 10 11:01:41 UTC 2006,,,,,,0|i0v43z:,179639,,,,,,,,"10/Oct/06 11:01;asmyth;Also completely decoupled default value handling from generating code for configurable beans.
Both plugins to reuse original code where possible (e.g. default value plugin  for all attributes of type != xs:duration) and retain signatures of getters (unboxed if default value present, boxed if no default value present) however little sense tat makes (its part of the JAXB specification!).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Marshall&unmarshal does not work with int type and more than two parameters.,CXF-136,12352120,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,jliu,jliu,30/Sep/06 07:23,29/Aug/07 02:06,14/Mar/19 02:28,26/Oct/06 08:09,2.0-M1,,,,,,,2.0-M1,,JAXB Databinding,,,,,0,"Using wsdl file attched, Marshall&unmarshal can not create argument correclty.",,,,,,,,,,,,,,,,,30/Sep/06 07:24;jliu;addNumbers.wsdl;https://issues.apache.org/jira/secure/attachment/12342011/addNumbers.wsdl,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-10-26 08:09:15.0,,,no_permission,,,,,,,,,,,,,111003,,,Thu Oct 26 08:09:15 UTC 2006,,,,,,0|i13zqf:,231419,,,,,,,,26/Oct/06 08:09;tli;fixed with unit test.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReflectionServiceFactoryBean.isValidMethod() rejecting all the valid methods,CXF-128,12351940,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ema,ema,28/Sep/06 05:12,25/Oct/06 09:00,14/Mar/19 02:28,25/Oct/06 08:42,2.0-M1,,,,,,,2.0-M1,,JAX-WS Runtime,,,,,0,"When we try to create a service using the ReflectionServiceFactoryBean, we initialize all the WSDL Operations. This then calls the isValidMethod on each java method in the implementor class. This call gets forwarded to the JaxwsServiceConfiguration isOperation method where it fails to get the WebMethod Annotation from the implementor class and thereby rejecting all the valid methods. 
 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,110995,,,2006-09-28 05:12:49.0,,,,,,0|i13zfb:,231369,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Property Not found error in the CXF Core,CXF-126,12351882,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bravi,bravi,27/Sep/06 13:29,29/Aug/07 02:06,14/Mar/19 02:28,27/Oct/06 06:10,2.0-M1,,,,,,,2.0-M1,,,,,,,0,Property FAILED_TO_PUBLISH_ENDPOINT_EXC is not defined in the Message.properties file.,,,,,,,,,,,,,,,,,27/Sep/06 13:30;bravi;message.patch;https://issues.apache.org/jira/secure/attachment/12341799/message.patch,,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-10-27 06:10:29.0,,,no_permission,,,,,,,,,,,,,110993,,,Fri Oct 27 06:10:29 UTC 2006,,,,,,0|i1a73z:,267618,,,,,,,,"27/Sep/06 13:39;bravi;Actually, the Message.properties can be found in rt/frontend/jaxws/src/org/apache/cxf/jaxws/support directory. I have attached the patch.","27/Oct/06 06:10;njiang;Code had been changed , so this property will not be use. 
This patch would not be applied.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Empty request elements causes NPE,CXF-119,12351805,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,dandiep,dandiep,26/Sep/06 14:14,29/Aug/07 02:05,14/Mar/19 02:28,17/Nov/06 05:07,2.0-RC,,,,,,,2.0-RC,,,,,,,0,"From the mailing list:

If I define a null parameter list to my operation in the WSDL file then I get an ArrayIndexOutOfBounds exception in BarOutInterceptor (if I change to soap it happens in SoapOutInterceptor) because there are no parts.

My WSDL is defined like this because Celtix wouldn't work otherwise. 

Do I have to create my wsdl file in a different fashion, or is this a bug

My WSDL file is listed below.

Thanks

<?xml version=""1.0"" encoding=""UTF-8""?>
<!--WSDL file template-->
<!--Created by IONA Artix Designer-->
<definitions name=""ftptest.wsdl"" 
	targetNamespace=""http://www.atkinsglobal.com/mosaic/ftptransport""
	xmlns=""http://schemas.xmlsoap.org/wsdl/"" 
	xmlns:http=""http://schemas.xmlsoap.org/wsdl/http/""
	xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" 
	xmlns:tns=""http://www.atkinsglobal.com/mosaic/ftptransport""
	xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" 
	xmlns:x1=""http://www.atkinsglobal.com/mosaic/ftptransport/types""
	xmlns:xformat=""http://cxf.apache.org/bindings/xformat""
	xmlns:ftp=""http://cxf.apache.org/transports/ftp""
	xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
	<types>
		<schema attributeFormDefault=""unqualified"" elementFormDefault=""qualified""
			targetNamespace=""http://www.atkinsglobal.com/mosaic/ftptransport/types"" 
			xmlns=""http://www.w3.org/2001/XMLSchema""
			xmlns:x1=""http://www.atkinsglobal.com/mosaic/ftptransport/types"" 
			xmlns:xs=""http://www.w3.org/2001/XMLSchema"">

			<element name=""LoadTestData"">
				<complexType>
				</complexType>
			</element>

			<element name=""TestData"">
				<complexType>
					<sequence>
						<element name=""sample"" maxOccurs=""unbounded"">
							<complexType>
								<sequence>
									<element name=""a"" type=""xsd:string"" />
									<element name=""b"" type=""xsd:string"" />
									<element name=""c"" type=""xsd:string"" />
								</sequence>
							</complexType>
						</element>
					</sequence>
				</complexType>
			</element>

			<element name=""TestDataFaultResponse"">
				<complexType>
					<sequence>
						<element name=""faultInfo"" type=""xsd:string"" />
					</sequence>
				</complexType>
			</element>

		</schema>
	</types>

	<wsdl:message name=""LoadTestData"">
		<wsdl:part name=""LoadTestData"" element=""x1:LoadTestData""></wsdl:part>
	</wsdl:message>
	<wsdl:message name=""TestData"">
		<wsdl:part name=""TestData"" element=""x1:TestData""></wsdl:part>
	</wsdl:message>
	<wsdl:message name=""TestDataFault"">
		<wsdl:part name=""TestDataFault"" element=""x1:TestDataFaultResponse""></wsdl:part>
	</wsdl:message>
	<portType name=""LoadTestDataI"">
		<operation name=""LoadTestData"">
			<input message=""tns:LoadTestData"" name=""LoadTestData"" />
			<output message=""tns:TestData"" name=""TestData"" />
			<fault message=""tns:TestDataFault"" name=""TestDataFault"" />
		</operation>
	</portType>

	<binding name=""LoadTestDataISOAPBinding"" type=""tns:LoadTestDataI"">
		<xformat:binding/>
		<operation name=""LoadTestData"">
			<ftp:address location=""file:///D:/cxf-deployment/workspace/FTPTransport/test/test.xml"" / <ftp:address location=> >
			<input name=""LoadTestData""></input>
			<output name=""TestData""></output>
			<fault name=""TestDataFault""></fault>
		</operation>
	</binding>

	<service name=""LoadTestDataService"">
		<port binding=""tns:LoadTestDataISOAPBinding"" name=""LoadTestDataPort"">
			<ftp:address location=""file:///D:/cxf-deployment/workspace/FTPTransport/test/fail.xml"" / <ftp:address location=> >
		</port>
	</service>
</definitions>",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-17 05:06:32.0,,,no_permission,,,,,,,,,,,,,110988,,,Fri Nov 17 05:06:32 UTC 2006,,,,,,0|i0v43r:,179638,,,,,,,,"17/Nov/06 05:06;ema;I test this case with Document literal bare wsdl ,It works fine. I update this issue to resolve.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in WSDLServiceBuilder if a wsdl is not wrapped doc style.,CXF-118,12351799,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,bravi,bravi,26/Sep/06 13:53,29/Aug/07 02:06,14/Mar/19 02:28,28/Sep/06 07:07,2.0-M1,,,,,,,2.0-M1,,,,,,,0,"If i have a wsdl that is not a wrapped doc-style wsdl, i get a classcast exception in the WsdlServiceBuilder class.",,,,,,,,,,,,,,,,,27/Sep/06 12:52;bravi;HelloWorld.wsdl;https://issues.apache.org/jira/secure/attachment/12341793/HelloWorld.wsdl,26/Sep/06 16:07;bravi;wsdlservicebuilder.patch;https://issues.apache.org/jira/secure/attachment/12341727/wsdlservicebuilder.patch,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2006-09-26 21:07:57.0,,,no_permission,,,,,,,,,,,,,110987,,,Wed Sep 27 12:52:28 UTC 2006,,,,,,0|i13zhb:,231378,,,,,,,,26/Sep/06 16:07;bravi;Included a patch that fixes the bug.,"26/Sep/06 21:07;dkulp;Can you also attach a testcase or wsdl for this problem?  

That said, I'm not a fan of all the ""passedRule"" changes.   I'd much rather return immediately than delay.  ",27/Sep/06 02:14;bravi;It is because the checkstyle requires only 6 return statements & that is why i had changed it to using a flag.,27/Sep/06 12:52;bravi;I have attached the wsdl that i used. Create a simple server & run it.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validator tool schema validation doesn't work when wsdl imports schema.,CXF-117,12351795,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,peterjones,peterjones,26/Sep/06 13:26,25/Oct/06 08:27,14/Mar/19 02:28,25/Oct/06 08:27,,,,,,,,2.0-M1,,Tooling,,,,,0,"The SchemaValidator only adds schema elements defined in the types section of the wsdl file being validated to its xmlSchemaMap.  Any elements defined in a schema file that the wsdl file imports, or in another wsdl file that the wsdl file imports are not added to the map.  Because of this, when the WSDLElementReferenceValidator attempts to validate the wsdl file and comes across a schema type that was defined in an imported file, then the validation fails.  I'll attach a couple of small test cases...",,,,,,,,,,,,,,,,,26/Sep/06 15:05;peterjones;hello_world_import.wsdl;https://issues.apache.org/jira/secure/attachment/12341720/hello_world_import.wsdl,26/Sep/06 15:05;peterjones;hello_world_types.wsdl;https://issues.apache.org/jira/secure/attachment/12341721/hello_world_types.wsdl,,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,110986,,,Tue Sep 26 15:05:29 UTC 2006,,,,,,0|i1a74v:,267622,,,,,,,,"26/Sep/06 15:05;peterjones;hello_world_imports.wsdl imports hello_world_types.wsdl.  When hello_world_imports.wsdl is validated, the schema validation fails:
Error : line 31 of file:/opt/peterj/branch/celtixfire/trunk/tools/validator/target/test-classes/validator_wsdl/hello_world_import.wsdl {http://apache.org/hello_world_soap_http/types}greetMe cannot find reference
line 34 of file:/opt/peterj/branch/celtixfire/trunk/tools/validator/target/test-classes/validator_wsdl/hello_world_import.wsdl {http://apache.org/hello_world_soap_http/types}greetMeResponse cannot find reference

These elements can be found in hello_world_types.wsdl.

For a similar example using an imported schema file rather than imported wsdl file, run the validator tool against hello_world_schema_import.wsdl in the testutils project.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AttachmentSerializer/Attachmentdesierlizer should be part of core, not JAXB",CXF-110,12350609,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,dandiep,dandiep,24/Sep/06 18:52,29/Aug/07 02:06,14/Mar/19 02:28,26/Oct/06 08:10,2.0-RC,,,,,,,2.0-M1,,,,,,,0,"The AttachmentSerializer/AttachmentDesierlizer should be part of core code, not JAXB - they are general purpose classes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-10-26 08:10:05.0,,,no_permission,,,,,,,,,,,,,110980,,,Thu Oct 26 08:10:05 UTC 2006,,,,,,0|i0v2on:,179408,,,,,,,,26/Oct/06 08:10;tli;refactor finished,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF performance test send data more than 8K will broken,CXF-99,12350306,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,20/Sep/06 07:32,29/Aug/07 02:06,14/Mar/19 02:28,20/Sep/06 08:21,,,,,,,,2.0-M1,,,,,,,0,"The exception stack trace is 
java.lang.RuntimeException: java.lang.ClassCastException: java.io.BufferedOutputStream
    [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:139)
    [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invokeSync(EndpointInvocationHandler.java:112)
    [java]     at org.apache.cxf.jaxws.EndpointInvocationHandler.invoke(EndpointInvocationHandler.java:103)
    [java]     at $Proxy31.echoString(Unknown Source)
    [java]     at org.objectweb.celtix.performance.basic_type.client.Client.doJob(Client.java:84)
    [java]     at org.objectweb.celtix.pat.internal.TestCaseBase.initialize(TestCaseBase.java:181)
    [java]     at org.objectweb.celtix.performance.basic_type.client.Client.main(Client.java:62)
    [java] Caused by: java.lang.ClassCastException: java.io.BufferedOutputStream
    [java]     at org.apache.cxf.transport.AbstractCachedOutputStream.resetOut(AbstractCachedOutputStream.java:95)
    [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.doFlush(HTTPConduit.java:397)
    [java]     at org.apache.cxf.transport.AbstractCachedOutputStream.flush(AbstractCachedOutputStream.java:67)
    [java]     at sun.nio.cs.StreamEncoder$CharsetSE.implFlush(StreamEncoder.java:410)
    [java]     at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:152)
    [java]     at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:213)
    [java]     at com.ctc.wstx.sw.BaseStreamWriter.flushStream(BaseStreamWriter.java:1350)
    [java]     at com.ctc.wstx.sw.BaseStreamWriter.safeFlushStream(BaseStreamWriter.java:1357)
    [java]     at com.ctc.wstx.sw.BaseStreamWriter.flush(BaseStreamWriter.java:306)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,110969,,,2006-09-20 07:32:30.0,,,,,,0|i0v30v:,179463,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The wrapping info should be moved to the binding,CXF-90,12350039,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,gnt,gnt,gnt,15/Sep/06 13:58,31/Mar/07 20:40,14/Mar/19 02:28,31/Mar/07 20:40,,,,,,,,2.0-RC,,Soap Binding,,,,,0,"This is necessary because some message parts can be mapped to headers,
thus leading to a wrappable operation.

",,,,,,,,,,,,,,,,,15/Sep/06 15:59;gnt;HelloWorld-DOC-Input.xml;https://issues.apache.org/jira/secure/attachment/12340935/HelloWorld-DOC-Input.xml,15/Sep/06 14:00;gnt;HelloWorld-DOC-Input.xml;https://issues.apache.org/jira/secure/attachment/12340927/HelloWorld-DOC-Input.xml,15/Sep/06 15:58;gnt;HelloWorld-DOC.wsdl;https://issues.apache.org/jira/secure/attachment/12340934/HelloWorld-DOC.wsdl,15/Sep/06 13:59;gnt;HelloWorld-DOC.wsdl;https://issues.apache.org/jira/secure/attachment/12340926/HelloWorld-DOC.wsdl,,,,,,,,4.0,,,,,,,,,,,,,,,,,,,2007-03-31 20:40:59.42,,,no_permission,,,,,,,,,,,,,110961,,,Sat Mar 31 20:40:59 UTC 2007,,,,,,0|i0v2wn:,179444,,,,,,,,15/Sep/06 13:59;gnt;The attached wsdl should be able to be wrapped.,15/Sep/06 14:00;gnt;Corresponding input message,15/Sep/06 15:58;gnt;These new files are *really* wrappable,31/Mar/07 20:40;dandiep;I believe we've sorted this out so I'm closing this. Holler if this is still an issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fixed invalid wsdl files generated in testutil,CXF-89,12350021,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jliu,jliu,15/Sep/06 10:47,25/Oct/06 08:18,14/Mar/19 02:28,25/Oct/06 08:18,2.0-M1,,,,,,,2.0-M1,,Tooling,,,,,0,"There are 3 invalid wsdls generated (by XSD code gen plugin)  in testutil : 

[1]  type_test_rpclit.wsdl   : Message part  ""x "" in message  ""testNillableString"" attempt to use parameter as complex type,  but parameter defined as an element.

[2] type_test_xml.wsdl  : operation ""testNillableString"" are not defined in portType

[3] type_test_rpclit_soap.wsdl :  Message part  ""x "" in message  ""testNillableString"" attempt to use parameter as complex type,  but parameter defined as an element 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,110960,,,Thu Sep 28 17:20:27 UTC 2006,,,,,,0|i1a78v:,267640,,,,,,,,28/Sep/06 17:20;jliu;Resolved,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix the tool compile  issue .,CXF-78,12349821,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,13/Sep/06 12:32,29/Aug/07 17:59,14/Mar/19 02:28,15/Sep/06 07:32,,,,,,,,2.0-M1,,,,,,,0,"If SchemaCompiler  parse and bind a schema contains ""xsd:enumeration"", it will not invoke the ClassCollector to get assigned class name . Tool compiler will miss these class infomation  and  fail to compile all the generated code .  It looks like a jaxb-ri issue . ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,110949,,,2006-09-13 12:32:49.0,,,,,,0|i13ztb:,231432,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add error message when initialize databinding model,CXF-69,12349684,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,12/Sep/06 08:01,29/Aug/07 17:59,14/Mar/19 02:28,15/Sep/06 07:33,,,,,,,,2.0-M1,,Tooling,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,110941,,,2006-09-12 08:01:44.0,,,,,,0|i0v2hr:,179377,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix circular dependencies in schemas,CXF-63,12349566,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asmyth,asmyth,asmyth,10/Sep/06 11:27,29/Aug/07 18:03,14/Mar/19 02:28,20/Sep/06 17:27,,,,,,,,2.0-RC,,Resources,,,,,0,"wsdl.xsd  imports http-conf.xsd, jms.xsd, xml-binding.xsd, and http-conf/xsd, jms.xsd import wsdl.xsd.
Breaks the concept of bus extensibility.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,110935,,,2006-09-10 11:27:18.0,,,,,,0|i13zqn:,231420,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2 small checkstyle problems...,CXF-62,12349482,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,dkulp,bdudney,bdudney,08/Sep/06 14:03,12/Sep/06 19:48,14/Mar/19 02:28,12/Sep/06 19:48,,,,,,,,2.0-M1,,,,,,,0,"figured the best way to get these in is a JIRA, if you all would prefer me posting the patch to the deve list just say so...",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-09-12 19:48:39.0,,,no_permission,,,,,,,,,,,,,110934,,,Tue Sep 12 19:48:39 UTC 2006,,,,,,0|i1a7b3:,267650,,,,,,,,"12/Sep/06 19:48;dkulp;
This was actually fixed by Eoghan in a followup commit to the one that broke it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB databinding has dependency on JAX-WS,CXF-55,12349426,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,dkulp,dkulp,07/Sep/06 17:59,15/Nov/06 09:33,14/Mar/19 02:28,15/Nov/06 09:33,2.0-M1,,,,,,,2.0-M1,,JAXB Databinding,,,,,0,"
The JAXB data binding layer has dependencies on the JAX-WS API jar.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-15 07:10:30.0,,,no_permission,,,,,,,,,,,,,110928,,,Wed Nov 15 07:10:30 UTC 2006,,,,,,0|i0v2mv:,179400,,,,,,,,15/Nov/06 07:10;blin;There are only on place in jaxb databinding that uses jax-ws api: ./jaxb/src/main/java/org/apache/cxf/jaxb/JAXBContextInitializer.java,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove JAX-WS dependency of JMS transport,CXF-54,12349425,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,07/Sep/06 17:57,01/Nov/06 09:36,14/Mar/19 02:28,01/Nov/06 09:36,2.0-M1,,,,,,,2.0-M1,,Transports,,,,,0,The JMS transport currently has a dependency on the jax-ws api jar.   That needs to be removed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-01 09:36:23.0,,,no_permission,,,,,,,,,,,,,110927,,,Wed Nov 01 09:36:23 UTC 2006,,,,,,0|i146lz:,232534,,,,,,,,01/Nov/06 09:36;maomaode;dependency on JAX-WS no longer founded. Closing the issue. - Bo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove JAX-WS dependency of HTTP transport,CXF-53,12349424,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,07/Sep/06 17:52,15/Nov/06 06:54,14/Mar/19 02:28,15/Nov/06 06:54,2.0-M1,,,,,,,2.0-M1,,Transports,,,,,0,"
The HTTP transport currently has dependencies on the JAXWS API.   Needs to be cleaned up.",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-15 06:54:18.0,,,no_permission,,,,,,,,,,,,,110926,,,Wed Nov 15 06:54:18 UTC 2006,,,,,,0|i13zvj:,231442,,,,,,,,15/Nov/06 06:54;blin;I no long found any dependency on JAX-WS in rt/transports module. Closing this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatatypeProvider not set,CXF-29,12349314,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,tli,asmyth,asmyth,06/Sep/06 15:15,29/Aug/07 02:05,14/Mar/19 02:28,04/Jan/07 04:13,2.0-RC,,,,,,,2.0-RC,,JAXB Databinding,,,,,0,"When you instantiate a class that is mapped from an element which has a base64Binary attribute with a default value, and subsequently call the getter for this attribute, the invocation will fail with a NPE unless somwhere in the code a DatatypeConverter was set via DatatypeConverter.setDatatypeConverter(javax.xml.bind.DatatypeConverterInterface converter):

e.g. generated code:

public class Foo {
...
public byte[] getBase64BinaryAttr() {
       if (base64BinaryAttr == null) {
           return DatatypeConverter.parseBase64Binary(""wxyz"");
       } else {
           return base64BinaryAttr;
       }
   }
}

application code:

Foo foo = new ObjectFactory().createFoo();
DatatypeConverter.setDatatypeConverter(new DatatypeConverterImpl());
byte[] value = foo.getBase64BinaryAttr()

We should take care that somewhere in the runtime a DatatypeConverter is set, possibly through loading (but not necessarily registering) an extension in the rt-databinding-jaxb module? From the javadoc:
"" JAXB Providers are required to call this method at some point before allowing any of the JAXB client marshal or unmarshal operations to occur"".
We cannot take the DatatypeConverterImpl provided by sun (in the com.sun.xml.bind jaxb-impl.jar) as this has a protected constructor, but could use the one from jaxme project http://ws.apache.org/jaxme/
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-31 03:34:48.0,,,no_permission,,,,,,,,,,,,,110904,,,Thu Jan 04 04:13:14 UTC 2007,,,,,,0|i1a7ev:,267667,,,,,,,,"31/Dec/06 03:34;tli;With JAXB impl  version 2.0.3, for schema as below:

    <xs:complexType name=""Base64WithDefaultValueType"">
        <xs:sequence>
            <xs:element name=""EndPart"" type=""xs:string"" />
        </xs:sequence>
        <xs:attribute name=""AttributeWithDefaultValue"" type=""xs:base64Binary"" default=""1223"" />
    </xs:complexType>

JAXB generated code part:

    public byte[] getAttributeWithDefaultValue() {
        if (attributeWithDefaultValue == null) {
            return DatatypeConverter.parseBase64Binary(""1223"");
        } else {
            return attributeWithDefaultValue;
        }
    }

Application code below will run correctly without exception.

        Base64WithDefaultValueType testData = (new ObjectFactory()).createBase64WithDefaultValueType();
        byte[] checkValue = testData.getAttributeWithDefaultValue();

The JAXB impl should fixed the bug by set a concrete impl of DatatypeConverter when create JAXB context.
",04/Jan/07 04:13;tli;Add a unit test for it,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getPort(Class) throws exception,CXF-19,12349227,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,dkulp,dkulp,05/Sep/06 14:57,29/Aug/07 02:05,14/Mar/19 02:28,04/Jan/07 02:39,2.0-RC,,,,,,,2.0-RC,,JAX-WS Runtime,,,,,0,"On ServiceImpl, a call to:
public <T> T getPort(Class<T> type)
always will throw a WebServiceException due to the call to getPort(name, type) checking if name is null.

From the 4.2.3 section of the JAX-WS spec: ""the Service instance is responsible for selecting the port (protocol binding and endpoint address).""",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,110894,,,2006-09-05 14:57:57.0,,,,,,0|i1a7gn:,267675,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
addPort not implemented,CXF-18,12349224,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,dkulp,dkulp,05/Sep/06 14:44,29/Aug/07 02:06,14/Mar/19 02:28,18/Oct/06 09:38,2.0-M1,,,,,,,2.0-M1,,JAX-WS Runtime,,,,,0,"
The ServiceImpl.addPort method needs to be implemented.

Requirement of section 4.1 of JAXWS spec.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,110893,,,2006-09-05 14:44:26.0,,,,,,0|i0v2lr:,179395,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"jaxws-api, jsr181-api should be optional in cxf-common pom",CXF-6,12348950,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,30/Aug/06 21:40,30/Apr/08 14:57,14/Mar/19 02:28,19/Feb/08 17:07,,,,,,,,2.1,,Build system,,,,,0,"We should declare jaxws-api and jsr181-api as ""optional"" or ""provided"" in the cxf-common pom right now. It is completely possible now for modules like the soap to depend on jax-ws. And they do. In several places classes throw WebServiceExceptions instead of our own internal exceptions.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-23 04:06:46.616,,,no_permission,,,,,,,,,,,,,110881,,,Mon Apr 23 04:06:46 UTC 2007,,,,,,0|i0v3tz:,179594,,,,,,,,"12/Sep/06 19:27;dkulp;I've made the ""jaxws-api"" dependency ""provided"" in many places and removed the dependencies for api and rt/core.   That's a start.    Still need to do the jsr181 and jsr250 jars.

",23/Apr/07 04:06;dandiep;Moving these issues to 2.1 as I don't think we'll get them for 2.0. Feel free to switch reschedule if you feel appropriate.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
